                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _initEnemyOptions
                                     15 	.globl _tickEx
                                     16 	.globl _tickPickups
                                     17 	.globl _moveProjectiles
                                     18 	.globl _fire
                                     19 	.globl _setGunIcon
                                     20 	.globl _checkCollision
                                     21 	.globl _killEnemy
                                     22 	.globl _spawnPickup
                                     23 	.globl _takeDamage
                                     24 	.globl _move
                                     25 	.globl _updateEnemyPositions
                                     26 	.globl _initEnemies
                                     27 	.globl _playSound
                                     28 	.globl _updateDirection
                                     29 	.globl _incrementScore
                                     30 	.globl _updateMissileCount
                                     31 	.globl _updateScore
                                     32 	.globl _setHealthBar
                                     33 	.globl _interruptLCD
                                     34 	.globl _bcd2text
                                     35 	.globl _bcd_sub
                                     36 	.globl _bcd_add
                                     37 	.globl _rand
                                     38 	.globl _initrand
                                     39 	.globl _font_set
                                     40 	.globl _font_load
                                     41 	.globl _font_init
                                     42 	.globl _set_sprite_data
                                     43 	.globl _set_win_tiles
                                     44 	.globl _set_bkg_tiles
                                     45 	.globl _set_bkg_data
                                     46 	.globl _wait_vbl_done
                                     47 	.globl _set_interrupts
                                     48 	.globl _waitpad
                                     49 	.globl _joypad
                                     50 	.globl _add_LCD
                                     51 	.globl _exTiles
                                     52 	.globl _oldestEx
                                     53 	.globl _exCount
                                     54 	.globl _INCREMENT
                                     55 	.globl _SCORE
                                     56 	.globl _score
                                     57 	.globl _gunMap
                                     58 	.globl _switchDelay
                                     59 	.globl _MISSILES
                                     60 	.globl _missiles
                                     61 	.globl _currentGun
                                     62 	.globl _gunLevel
                                     63 	.globl _enemyCollisionCount
                                     64 	.globl _yOverflow
                                     65 	.globl _xOverflow
                                     66 	.globl _bgY
                                     67 	.globl _bgX
                                     68 	.globl _playerDrawY
                                     69 	.globl _playerDrawX
                                     70 	.globl _playerY
                                     71 	.globl _playerX
                                     72 	.globl _ySpeed
                                     73 	.globl _xSpeed
                                     74 	.globl _yDir
                                     75 	.globl _xDir
                                     76 	.globl _fireCooldown
                                     77 	.globl _oldestProjectile
                                     78 	.globl _missile
                                     79 	.globl _doubleGun
                                     80 	.globl _singleGun
                                     81 	.globl _shieldship
                                     82 	.globl _bigblob
                                     83 	.globl _miniship
                                     84 	.globl _bomb
                                     85 	.globl _blob
                                     86 	.globl _scorelabel
                                     87 	.globl _weaponlabel
                                     88 	.globl _shieldlabel
                                     89 	.globl _hullabel
                                     90 	.globl _explosions
                                     91 	.globl _pickup
                                     92 	.globl _min_font
                                     93 	.globl _shield
                                     94 	.globl _hull
                                     95 	.globl _joydata
                                     96 	.globl _projectiles
                                     97 	.globl _enemies
                                     98 	.globl _enemyOptions
                                     99 	.globl _EXPLFRAMETIME
                                    100 	.globl _SPLASHDROPOFF
                                    101 	.globl _MAXGUNLEVEL
                                    102 	.globl _maxShield
                                    103 	.globl _maxHull
                                    104 	.globl _PLAYERSIZE
                                    105 	.globl _PROJECTILECOUNT
                                    106 	.globl _ySpawnPositions
                                    107 	.globl _xSpawnPositions
                                    108 	.globl _ENEMYCOUNT
                                    109 	.globl _EMPTYSPRITE
                                    110 	.globl _BLANK
                                    111 	.globl _BLANKSIZE
                                    112 	.globl _Ex3
                                    113 	.globl _Ex2
                                    114 	.globl _Ex1
                                    115 	.globl _ex
                                    116 	.globl _Player1
                                    117 	.globl _Pickups
                                    118 	.globl _health
                                    119 	.globl _ammo
                                    120 	.globl _upgrade
                                    121 	.globl _ProjectileTiles
                                    122 	.globl _largeenemies
                                    123 	.globl _enemy1
                                    124 	.globl _enemyOptionCount
                                    125 	.globl _healthblock
                                    126 	.globl _backgroundtiles
                                    127 	.globl _background1
                                    128 	.globl _cross
                                    129 ;--------------------------------------------------------
                                    130 ; special function registers
                                    131 ;--------------------------------------------------------
                                    132 ;--------------------------------------------------------
                                    133 ; ram data
                                    134 ;--------------------------------------------------------
                                    135 	.area _DATA
      000000                        136 _enemyOptions::
      000000                        137 	.ds 90
      00005A                        138 _enemies::
      00005A                        139 	.ds 90
      0000B4                        140 _projectiles::
      0000B4                        141 	.ds 65
      0000F5                        142 _joydata::
      0000F5                        143 	.ds 1
      0000F6                        144 _hull::
      0000F6                        145 	.ds 1
      0000F7                        146 _shield::
      0000F7                        147 	.ds 1
      0000F8                        148 _min_font::
      0000F8                        149 	.ds 2
      0000FA                        150 _pickup::
      0000FA                        151 	.ds 9
      000103                        152 _explosions::
      000103                        153 	.ds 18
                                    154 ;--------------------------------------------------------
                                    155 ; ram data
                                    156 ;--------------------------------------------------------
                                    157 	.area _INITIALIZED
      000000                        158 _hullabel::
      000000                        159 	.ds 4
      000004                        160 _shieldlabel::
      000004                        161 	.ds 4
      000008                        162 _weaponlabel::
      000008                        163 	.ds 4
      00000C                        164 _scorelabel::
      00000C                        165 	.ds 4
      000010                        166 _blob::
      000010                        167 	.ds 18
      000022                        168 _bomb::
      000022                        169 	.ds 18
      000034                        170 _miniship::
      000034                        171 	.ds 18
      000046                        172 _bigblob::
      000046                        173 	.ds 18
      000058                        174 _shieldship::
      000058                        175 	.ds 18
      00006A                        176 _singleGun::
      00006A                        177 	.ds 13
      000077                        178 _doubleGun::
      000077                        179 	.ds 13
      000084                        180 _missile::
      000084                        181 	.ds 13
      000091                        182 _oldestProjectile::
      000091                        183 	.ds 1
      000092                        184 _fireCooldown::
      000092                        185 	.ds 1
      000093                        186 _xDir::
      000093                        187 	.ds 1
      000094                        188 _yDir::
      000094                        189 	.ds 1
      000095                        190 _xSpeed::
      000095                        191 	.ds 1
      000096                        192 _ySpeed::
      000096                        193 	.ds 1
      000097                        194 _playerX::
      000097                        195 	.ds 2
      000099                        196 _playerY::
      000099                        197 	.ds 2
      00009B                        198 _playerDrawX::
      00009B                        199 	.ds 1
      00009C                        200 _playerDrawY::
      00009C                        201 	.ds 1
      00009D                        202 _bgX::
      00009D                        203 	.ds 2
      00009F                        204 _bgY::
      00009F                        205 	.ds 2
      0000A1                        206 _xOverflow::
      0000A1                        207 	.ds 2
      0000A3                        208 _yOverflow::
      0000A3                        209 	.ds 2
      0000A5                        210 _enemyCollisionCount::
      0000A5                        211 	.ds 1
      0000A6                        212 _gunLevel::
      0000A6                        213 	.ds 1
      0000A7                        214 _currentGun::
      0000A7                        215 	.ds 1
      0000A8                        216 _missiles::
      0000A8                        217 	.ds 1
      0000A9                        218 _MISSILES::
      0000A9                        219 	.ds 4
      0000AD                        220 _switchDelay::
      0000AD                        221 	.ds 1
      0000AE                        222 _gunMap::
      0000AE                        223 	.ds 3
      0000B1                        224 _score::
      0000B1                        225 	.ds 2
      0000B3                        226 _SCORE::
      0000B3                        227 	.ds 4
      0000B7                        228 _INCREMENT::
      0000B7                        229 	.ds 4
      0000BB                        230 _exCount::
      0000BB                        231 	.ds 1
      0000BC                        232 _oldestEx::
      0000BC                        233 	.ds 1
      0000BD                        234 _exTiles::
      0000BD                        235 	.ds 3
                                    236 ;--------------------------------------------------------
                                    237 ; absolute external ram data
                                    238 ;--------------------------------------------------------
                                    239 	.area _DABS (ABS)
                                    240 ;--------------------------------------------------------
                                    241 ; global & static initialisations
                                    242 ;--------------------------------------------------------
                                    243 	.area _HOME
                                    244 	.area _GSINIT
                                    245 	.area _GSFINAL
                                    246 	.area _GSINIT
                                    247 ;--------------------------------------------------------
                                    248 ; Home
                                    249 ;--------------------------------------------------------
                                    250 	.area _HOME
                                    251 	.area _HOME
                                    252 ;--------------------------------------------------------
                                    253 ; code
                                    254 ;--------------------------------------------------------
                                    255 	.area _CODE
                                    256 ;src/main.c:150: void interruptLCD()
                                    257 ;	---------------------------------
                                    258 ; Function interruptLCD
                                    259 ; ---------------------------------
      000000                        260 _interruptLCD::
                                    261 ;src/main.c:152: HIDE_SPRITES;
      000000 F0r00                  262 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  263 	and	a, #0xfd
      000004 E0r00                  264 	ldh	(_LCDC_REG + 0), a
                                    265 ;src/main.c:153: }
      000006 C9                     266 	ret
      000007                        267 _cross:
      000007 18                     268 	.db #0x18	; 24
      000008 18                     269 	.db #0x18	; 24
      000009 18                     270 	.db #0x18	; 24
      00000A 18                     271 	.db #0x18	; 24
      00000B 3C                     272 	.db #0x3c	; 60
      00000C 3C                     273 	.db #0x3c	; 60
      00000D 3C                     274 	.db #0x3c	; 60
      00000E 3C                     275 	.db #0x3c	; 60
      00000F 7E                     276 	.db #0x7e	; 126
      000010 7E                     277 	.db #0x7e	; 126
      000011 7E                     278 	.db #0x7e	; 126
      000012 7E                     279 	.db #0x7e	; 126
      000013 FF                     280 	.db #0xff	; 255
      000014 FF                     281 	.db #0xff	; 255
      000015 FF                     282 	.db #0xff	; 255
      000016 FF                     283 	.db #0xff	; 255
      000017 0F                     284 	.db #0x0f	; 15
      000018 0F                     285 	.db #0x0f	; 15
      000019 3F                     286 	.db #0x3f	; 63
      00001A 3F                     287 	.db #0x3f	; 63
      00001B FF                     288 	.db #0xff	; 255
      00001C FF                     289 	.db #0xff	; 255
      00001D FF                     290 	.db #0xff	; 255
      00001E FF                     291 	.db #0xff	; 255
      00001F 7E                     292 	.db #0x7e	; 126
      000020 7E                     293 	.db #0x7e	; 126
      000021 3E                     294 	.db #0x3e	; 62
      000022 3E                     295 	.db #0x3e	; 62
      000023 1C                     296 	.db #0x1c	; 28
      000024 1C                     297 	.db #0x1c	; 28
      000025 0C                     298 	.db #0x0c	; 12
      000026 0C                     299 	.db #0x0c	; 12
      000027 C0                     300 	.db #0xc0	; 192
      000028 C0                     301 	.db #0xc0	; 192
      000029 F0                     302 	.db #0xf0	; 240
      00002A F0                     303 	.db #0xf0	; 240
      00002B FC                     304 	.db #0xfc	; 252
      00002C FC                     305 	.db #0xfc	; 252
      00002D FF                     306 	.db #0xff	; 255
      00002E FF                     307 	.db #0xff	; 255
      00002F FF                     308 	.db #0xff	; 255
      000030 FF                     309 	.db #0xff	; 255
      000031 FC                     310 	.db #0xfc	; 252
      000032 FC                     311 	.db #0xfc	; 252
      000033 F0                     312 	.db #0xf0	; 240
      000034 F0                     313 	.db #0xf0	; 240
      000035 C0                     314 	.db #0xc0	; 192
      000036 C0                     315 	.db #0xc0	; 192
      000037 0C                     316 	.db #0x0c	; 12
      000038 0C                     317 	.db #0x0c	; 12
      000039 1C                     318 	.db #0x1c	; 28
      00003A 1C                     319 	.db #0x1c	; 28
      00003B 3E                     320 	.db #0x3e	; 62
      00003C 3E                     321 	.db #0x3e	; 62
      00003D 7E                     322 	.db #0x7e	; 126
      00003E 7E                     323 	.db #0x7e	; 126
      00003F FF                     324 	.db #0xff	; 255
      000040 FF                     325 	.db #0xff	; 255
      000041 FF                     326 	.db #0xff	; 255
      000042 FF                     327 	.db #0xff	; 255
      000043 3F                     328 	.db #0x3f	; 63
      000044 3F                     329 	.db #0x3f	; 63
      000045 0F                     330 	.db #0x0f	; 15
      000046 0F                     331 	.db #0x0f	; 15
      000047 FF                     332 	.db #0xff	; 255
      000048 FF                     333 	.db #0xff	; 255
      000049 FF                     334 	.db #0xff	; 255
      00004A FF                     335 	.db #0xff	; 255
      00004B 7E                     336 	.db #0x7e	; 126
      00004C 7E                     337 	.db #0x7e	; 126
      00004D 7E                     338 	.db #0x7e	; 126
      00004E 7E                     339 	.db #0x7e	; 126
      00004F 3C                     340 	.db #0x3c	; 60
      000050 3C                     341 	.db #0x3c	; 60
      000051 3C                     342 	.db #0x3c	; 60
      000052 3C                     343 	.db #0x3c	; 60
      000053 18                     344 	.db #0x18	; 24
      000054 18                     345 	.db #0x18	; 24
      000055 18                     346 	.db #0x18	; 24
      000056 18                     347 	.db #0x18	; 24
      000057 30                     348 	.db #0x30	; 48	'0'
      000058 30                     349 	.db #0x30	; 48	'0'
      000059 38                     350 	.db #0x38	; 56	'8'
      00005A 38                     351 	.db #0x38	; 56	'8'
      00005B 7C                     352 	.db #0x7c	; 124
      00005C 7C                     353 	.db #0x7c	; 124
      00005D 7E                     354 	.db #0x7e	; 126
      00005E 7E                     355 	.db #0x7e	; 126
      00005F FF                     356 	.db #0xff	; 255
      000060 FF                     357 	.db #0xff	; 255
      000061 FF                     358 	.db #0xff	; 255
      000062 FF                     359 	.db #0xff	; 255
      000063 FC                     360 	.db #0xfc	; 252
      000064 FC                     361 	.db #0xfc	; 252
      000065 F0                     362 	.db #0xf0	; 240
      000066 F0                     363 	.db #0xf0	; 240
      000067 03                     364 	.db #0x03	; 3
      000068 03                     365 	.db #0x03	; 3
      000069 0F                     366 	.db #0x0f	; 15
      00006A 0F                     367 	.db #0x0f	; 15
      00006B 3F                     368 	.db #0x3f	; 63
      00006C 3F                     369 	.db #0x3f	; 63
      00006D FF                     370 	.db #0xff	; 255
      00006E FF                     371 	.db #0xff	; 255
      00006F FF                     372 	.db #0xff	; 255
      000070 FF                     373 	.db #0xff	; 255
      000071 3F                     374 	.db #0x3f	; 63
      000072 3F                     375 	.db #0x3f	; 63
      000073 0F                     376 	.db #0x0f	; 15
      000074 0F                     377 	.db #0x0f	; 15
      000075 03                     378 	.db #0x03	; 3
      000076 03                     379 	.db #0x03	; 3
      000077 F0                     380 	.db #0xf0	; 240
      000078 F0                     381 	.db #0xf0	; 240
      000079 FC                     382 	.db #0xfc	; 252
      00007A FC                     383 	.db #0xfc	; 252
      00007B FF                     384 	.db #0xff	; 255
      00007C FF                     385 	.db #0xff	; 255
      00007D FF                     386 	.db #0xff	; 255
      00007E FF                     387 	.db #0xff	; 255
      00007F 7E                     388 	.db #0x7e	; 126
      000080 7E                     389 	.db #0x7e	; 126
      000081 7C                     390 	.db #0x7c	; 124
      000082 7C                     391 	.db #0x7c	; 124
      000083 38                     392 	.db #0x38	; 56	'8'
      000084 38                     393 	.db #0x38	; 56	'8'
      000085 30                     394 	.db #0x30	; 48	'0'
      000086 30                     395 	.db #0x30	; 48	'0'
      000087                        396 _background1:
      000087 26                     397 	.db #0x26	; 38
      000088 26                     398 	.db #0x26	; 38
      000089 26                     399 	.db #0x26	; 38
      00008A 26                     400 	.db #0x26	; 38
      00008B 26                     401 	.db #0x26	; 38
      00008C 26                     402 	.db #0x26	; 38
      00008D 26                     403 	.db #0x26	; 38
      00008E 26                     404 	.db #0x26	; 38
      00008F 26                     405 	.db #0x26	; 38
      000090 26                     406 	.db #0x26	; 38
      000091 26                     407 	.db #0x26	; 38
      000092 2A                     408 	.db #0x2a	; 42
      000093 29                     409 	.db #0x29	; 41
      000094 26                     410 	.db #0x26	; 38
      000095 26                     411 	.db #0x26	; 38
      000096 26                     412 	.db #0x26	; 38
      000097 26                     413 	.db #0x26	; 38
      000098 26                     414 	.db #0x26	; 38
      000099 26                     415 	.db #0x26	; 38
      00009A 26                     416 	.db #0x26	; 38
      00009B 2C                     417 	.db #0x2c	; 44
      00009C 26                     418 	.db #0x26	; 38
      00009D 26                     419 	.db #0x26	; 38
      00009E 26                     420 	.db #0x26	; 38
      00009F 26                     421 	.db #0x26	; 38
      0000A0 26                     422 	.db #0x26	; 38
      0000A1 26                     423 	.db #0x26	; 38
      0000A2 26                     424 	.db #0x26	; 38
      0000A3 26                     425 	.db #0x26	; 38
      0000A4 26                     426 	.db #0x26	; 38
      0000A5 26                     427 	.db #0x26	; 38
      0000A6 26                     428 	.db #0x26	; 38
      0000A7 26                     429 	.db #0x26	; 38
      0000A8 2B                     430 	.db #0x2b	; 43
      0000A9 26                     431 	.db #0x26	; 38
      0000AA 26                     432 	.db #0x26	; 38
      0000AB 26                     433 	.db #0x26	; 38
      0000AC 26                     434 	.db #0x26	; 38
      0000AD 26                     435 	.db #0x26	; 38
      0000AE 26                     436 	.db #0x26	; 38
      0000AF 26                     437 	.db #0x26	; 38
      0000B0 26                     438 	.db #0x26	; 38
      0000B1 26                     439 	.db #0x26	; 38
      0000B2 26                     440 	.db #0x26	; 38
      0000B3 26                     441 	.db #0x26	; 38
      0000B4 26                     442 	.db #0x26	; 38
      0000B5 26                     443 	.db #0x26	; 38
      0000B6 26                     444 	.db #0x26	; 38
      0000B7 26                     445 	.db #0x26	; 38
      0000B8 26                     446 	.db #0x26	; 38
      0000B9 26                     447 	.db #0x26	; 38
      0000BA 26                     448 	.db #0x26	; 38
      0000BB 26                     449 	.db #0x26	; 38
      0000BC 26                     450 	.db #0x26	; 38
      0000BD 26                     451 	.db #0x26	; 38
      0000BE 26                     452 	.db #0x26	; 38
      0000BF 26                     453 	.db #0x26	; 38
      0000C0 26                     454 	.db #0x26	; 38
      0000C1 26                     455 	.db #0x26	; 38
      0000C2 26                     456 	.db #0x26	; 38
      0000C3 26                     457 	.db #0x26	; 38
      0000C4 26                     458 	.db #0x26	; 38
      0000C5 26                     459 	.db #0x26	; 38
      0000C6 26                     460 	.db #0x26	; 38
      0000C7 26                     461 	.db #0x26	; 38
      0000C8 26                     462 	.db #0x26	; 38
      0000C9 26                     463 	.db #0x26	; 38
      0000CA 26                     464 	.db #0x26	; 38
      0000CB 26                     465 	.db #0x26	; 38
      0000CC 26                     466 	.db #0x26	; 38
      0000CD 26                     467 	.db #0x26	; 38
      0000CE 26                     468 	.db #0x26	; 38
      0000CF 26                     469 	.db #0x26	; 38
      0000D0 26                     470 	.db #0x26	; 38
      0000D1 26                     471 	.db #0x26	; 38
      0000D2 26                     472 	.db #0x26	; 38
      0000D3 26                     473 	.db #0x26	; 38
      0000D4 26                     474 	.db #0x26	; 38
      0000D5 26                     475 	.db #0x26	; 38
      0000D6 26                     476 	.db #0x26	; 38
      0000D7 26                     477 	.db #0x26	; 38
      0000D8 26                     478 	.db #0x26	; 38
      0000D9 26                     479 	.db #0x26	; 38
      0000DA 26                     480 	.db #0x26	; 38
      0000DB 26                     481 	.db #0x26	; 38
      0000DC 26                     482 	.db #0x26	; 38
      0000DD 26                     483 	.db #0x26	; 38
      0000DE 26                     484 	.db #0x26	; 38
      0000DF 26                     485 	.db #0x26	; 38
      0000E0 26                     486 	.db #0x26	; 38
      0000E1 26                     487 	.db #0x26	; 38
      0000E2 26                     488 	.db #0x26	; 38
      0000E3 26                     489 	.db #0x26	; 38
      0000E4 26                     490 	.db #0x26	; 38
      0000E5 26                     491 	.db #0x26	; 38
      0000E6 26                     492 	.db #0x26	; 38
      0000E7 26                     493 	.db #0x26	; 38
      0000E8 26                     494 	.db #0x26	; 38
      0000E9 26                     495 	.db #0x26	; 38
      0000EA 26                     496 	.db #0x26	; 38
      0000EB 26                     497 	.db #0x26	; 38
      0000EC 26                     498 	.db #0x26	; 38
      0000ED 26                     499 	.db #0x26	; 38
      0000EE 26                     500 	.db #0x26	; 38
      0000EF 26                     501 	.db #0x26	; 38
      0000F0 26                     502 	.db #0x26	; 38
      0000F1 26                     503 	.db #0x26	; 38
      0000F2 26                     504 	.db #0x26	; 38
      0000F3 26                     505 	.db #0x26	; 38
      0000F4 26                     506 	.db #0x26	; 38
      0000F5 26                     507 	.db #0x26	; 38
      0000F6 26                     508 	.db #0x26	; 38
      0000F7 26                     509 	.db #0x26	; 38
      0000F8 2B                     510 	.db #0x2b	; 43
      0000F9 26                     511 	.db #0x26	; 38
      0000FA 26                     512 	.db #0x26	; 38
      0000FB 26                     513 	.db #0x26	; 38
      0000FC 26                     514 	.db #0x26	; 38
      0000FD 26                     515 	.db #0x26	; 38
      0000FE 26                     516 	.db #0x26	; 38
      0000FF 2B                     517 	.db #0x2b	; 43
      000100 26                     518 	.db #0x26	; 38
      000101 26                     519 	.db #0x26	; 38
      000102 26                     520 	.db #0x26	; 38
      000103 26                     521 	.db #0x26	; 38
      000104 26                     522 	.db #0x26	; 38
      000105 26                     523 	.db #0x26	; 38
      000106 26                     524 	.db #0x26	; 38
      000107 26                     525 	.db #0x26	; 38
      000108 26                     526 	.db #0x26	; 38
      000109 26                     527 	.db #0x26	; 38
      00010A 26                     528 	.db #0x26	; 38
      00010B 26                     529 	.db #0x26	; 38
      00010C 2B                     530 	.db #0x2b	; 43
      00010D 26                     531 	.db #0x26	; 38
      00010E 26                     532 	.db #0x26	; 38
      00010F 26                     533 	.db #0x26	; 38
      000110 26                     534 	.db #0x26	; 38
      000111 26                     535 	.db #0x26	; 38
      000112 26                     536 	.db #0x26	; 38
      000113 26                     537 	.db #0x26	; 38
      000114 2C                     538 	.db #0x2c	; 44
      000115 26                     539 	.db #0x26	; 38
      000116 26                     540 	.db #0x26	; 38
      000117 26                     541 	.db #0x26	; 38
      000118 26                     542 	.db #0x26	; 38
      000119 26                     543 	.db #0x26	; 38
      00011A 26                     544 	.db #0x26	; 38
      00011B 26                     545 	.db #0x26	; 38
      00011C 26                     546 	.db #0x26	; 38
      00011D 26                     547 	.db #0x26	; 38
      00011E 26                     548 	.db #0x26	; 38
      00011F 26                     549 	.db #0x26	; 38
      000120 26                     550 	.db #0x26	; 38
      000121 26                     551 	.db #0x26	; 38
      000122 26                     552 	.db #0x26	; 38
      000123 26                     553 	.db #0x26	; 38
      000124 26                     554 	.db #0x26	; 38
      000125 26                     555 	.db #0x26	; 38
      000126 26                     556 	.db #0x26	; 38
      000127 26                     557 	.db #0x26	; 38
      000128 26                     558 	.db #0x26	; 38
      000129 2C                     559 	.db #0x2c	; 44
      00012A 26                     560 	.db #0x26	; 38
      00012B 26                     561 	.db #0x26	; 38
      00012C 26                     562 	.db #0x26	; 38
      00012D 26                     563 	.db #0x26	; 38
      00012E 25                     564 	.db #0x25	; 37
      00012F 26                     565 	.db #0x26	; 38
      000130 26                     566 	.db #0x26	; 38
      000131 26                     567 	.db #0x26	; 38
      000132 26                     568 	.db #0x26	; 38
      000133 26                     569 	.db #0x26	; 38
      000134 26                     570 	.db #0x26	; 38
      000135 26                     571 	.db #0x26	; 38
      000136 26                     572 	.db #0x26	; 38
      000137 26                     573 	.db #0x26	; 38
      000138 26                     574 	.db #0x26	; 38
      000139 26                     575 	.db #0x26	; 38
      00013A 26                     576 	.db #0x26	; 38
      00013B 26                     577 	.db #0x26	; 38
      00013C 2C                     578 	.db #0x2c	; 44
      00013D 26                     579 	.db #0x26	; 38
      00013E 26                     580 	.db #0x26	; 38
      00013F 26                     581 	.db #0x26	; 38
      000140 26                     582 	.db #0x26	; 38
      000141 26                     583 	.db #0x26	; 38
      000142 26                     584 	.db #0x26	; 38
      000143 26                     585 	.db #0x26	; 38
      000144 2B                     586 	.db #0x2b	; 43
      000145 26                     587 	.db #0x26	; 38
      000146 26                     588 	.db #0x26	; 38
      000147 26                     589 	.db #0x26	; 38
      000148 26                     590 	.db #0x26	; 38
      000149 26                     591 	.db #0x26	; 38
      00014A 26                     592 	.db #0x26	; 38
      00014B 26                     593 	.db #0x26	; 38
      00014C 26                     594 	.db #0x26	; 38
      00014D 26                     595 	.db #0x26	; 38
      00014E 26                     596 	.db #0x26	; 38
      00014F 26                     597 	.db #0x26	; 38
      000150 26                     598 	.db #0x26	; 38
      000151 26                     599 	.db #0x26	; 38
      000152 26                     600 	.db #0x26	; 38
      000153 26                     601 	.db #0x26	; 38
      000154 26                     602 	.db #0x26	; 38
      000155 26                     603 	.db #0x26	; 38
      000156 26                     604 	.db #0x26	; 38
      000157 26                     605 	.db #0x26	; 38
      000158 26                     606 	.db #0x26	; 38
      000159 26                     607 	.db #0x26	; 38
      00015A 26                     608 	.db #0x26	; 38
      00015B 26                     609 	.db #0x26	; 38
      00015C 26                     610 	.db #0x26	; 38
      00015D 26                     611 	.db #0x26	; 38
      00015E 26                     612 	.db #0x26	; 38
      00015F 26                     613 	.db #0x26	; 38
      000160 2C                     614 	.db #0x2c	; 44
      000161 26                     615 	.db #0x26	; 38
      000162 26                     616 	.db #0x26	; 38
      000163 26                     617 	.db #0x26	; 38
      000164 26                     618 	.db #0x26	; 38
      000165 26                     619 	.db #0x26	; 38
      000166 26                     620 	.db #0x26	; 38
      000167 26                     621 	.db #0x26	; 38
      000168 26                     622 	.db #0x26	; 38
      000169 26                     623 	.db #0x26	; 38
      00016A 26                     624 	.db #0x26	; 38
      00016B 26                     625 	.db #0x26	; 38
      00016C 26                     626 	.db #0x26	; 38
      00016D 26                     627 	.db #0x26	; 38
      00016E 26                     628 	.db #0x26	; 38
      00016F 26                     629 	.db #0x26	; 38
      000170 26                     630 	.db #0x26	; 38
      000171 26                     631 	.db #0x26	; 38
      000172 26                     632 	.db #0x26	; 38
      000173 26                     633 	.db #0x26	; 38
      000174 26                     634 	.db #0x26	; 38
      000175 26                     635 	.db #0x26	; 38
      000176 26                     636 	.db #0x26	; 38
      000177 26                     637 	.db #0x26	; 38
      000178 26                     638 	.db #0x26	; 38
      000179 26                     639 	.db #0x26	; 38
      00017A 26                     640 	.db #0x26	; 38
      00017B 26                     641 	.db #0x26	; 38
      00017C 26                     642 	.db #0x26	; 38
      00017D 26                     643 	.db #0x26	; 38
      00017E 26                     644 	.db #0x26	; 38
      00017F 26                     645 	.db #0x26	; 38
      000180 26                     646 	.db #0x26	; 38
      000181 26                     647 	.db #0x26	; 38
      000182 26                     648 	.db #0x26	; 38
      000183 26                     649 	.db #0x26	; 38
      000184 26                     650 	.db #0x26	; 38
      000185 26                     651 	.db #0x26	; 38
      000186 26                     652 	.db #0x26	; 38
      000187 26                     653 	.db #0x26	; 38
      000188 26                     654 	.db #0x26	; 38
      000189 26                     655 	.db #0x26	; 38
      00018A 26                     656 	.db #0x26	; 38
      00018B 26                     657 	.db #0x26	; 38
      00018C 26                     658 	.db #0x26	; 38
      00018D 26                     659 	.db #0x26	; 38
      00018E 26                     660 	.db #0x26	; 38
      00018F 26                     661 	.db #0x26	; 38
      000190 26                     662 	.db #0x26	; 38
      000191 26                     663 	.db #0x26	; 38
      000192 26                     664 	.db #0x26	; 38
      000193 26                     665 	.db #0x26	; 38
      000194 26                     666 	.db #0x26	; 38
      000195 2B                     667 	.db #0x2b	; 43
      000196 26                     668 	.db #0x26	; 38
      000197 26                     669 	.db #0x26	; 38
      000198 26                     670 	.db #0x26	; 38
      000199 26                     671 	.db #0x26	; 38
      00019A 26                     672 	.db #0x26	; 38
      00019B 26                     673 	.db #0x26	; 38
      00019C 26                     674 	.db #0x26	; 38
      00019D 26                     675 	.db #0x26	; 38
      00019E 26                     676 	.db #0x26	; 38
      00019F 26                     677 	.db #0x26	; 38
      0001A0 26                     678 	.db #0x26	; 38
      0001A1 26                     679 	.db #0x26	; 38
      0001A2 26                     680 	.db #0x26	; 38
      0001A3 26                     681 	.db #0x26	; 38
      0001A4 26                     682 	.db #0x26	; 38
      0001A5 26                     683 	.db #0x26	; 38
      0001A6 25                     684 	.db #0x25	; 37
      0001A7 26                     685 	.db #0x26	; 38
      0001A8 26                     686 	.db #0x26	; 38
      0001A9 26                     687 	.db #0x26	; 38
      0001AA 2B                     688 	.db #0x2b	; 43
      0001AB 26                     689 	.db #0x26	; 38
      0001AC 26                     690 	.db #0x26	; 38
      0001AD 26                     691 	.db #0x26	; 38
      0001AE 26                     692 	.db #0x26	; 38
      0001AF 26                     693 	.db #0x26	; 38
      0001B0 26                     694 	.db #0x26	; 38
      0001B1 26                     695 	.db #0x26	; 38
      0001B2 26                     696 	.db #0x26	; 38
      0001B3 26                     697 	.db #0x26	; 38
      0001B4 26                     698 	.db #0x26	; 38
      0001B5 26                     699 	.db #0x26	; 38
      0001B6 26                     700 	.db #0x26	; 38
      0001B7 26                     701 	.db #0x26	; 38
      0001B8 26                     702 	.db #0x26	; 38
      0001B9 26                     703 	.db #0x26	; 38
      0001BA 26                     704 	.db #0x26	; 38
      0001BB 26                     705 	.db #0x26	; 38
      0001BC 26                     706 	.db #0x26	; 38
      0001BD 26                     707 	.db #0x26	; 38
      0001BE 26                     708 	.db #0x26	; 38
      0001BF 26                     709 	.db #0x26	; 38
      0001C0 26                     710 	.db #0x26	; 38
      0001C1 26                     711 	.db #0x26	; 38
      0001C2 26                     712 	.db #0x26	; 38
      0001C3 26                     713 	.db #0x26	; 38
      0001C4 2B                     714 	.db #0x2b	; 43
      0001C5 26                     715 	.db #0x26	; 38
      0001C6 26                     716 	.db #0x26	; 38
      0001C7 26                     717 	.db #0x26	; 38
      0001C8 26                     718 	.db #0x26	; 38
      0001C9 26                     719 	.db #0x26	; 38
      0001CA 26                     720 	.db #0x26	; 38
      0001CB 26                     721 	.db #0x26	; 38
      0001CC 26                     722 	.db #0x26	; 38
      0001CD 26                     723 	.db #0x26	; 38
      0001CE 26                     724 	.db #0x26	; 38
      0001CF 26                     725 	.db #0x26	; 38
      0001D0 26                     726 	.db #0x26	; 38
      0001D1 26                     727 	.db #0x26	; 38
      0001D2 26                     728 	.db #0x26	; 38
      0001D3 26                     729 	.db #0x26	; 38
      0001D4 26                     730 	.db #0x26	; 38
      0001D5 26                     731 	.db #0x26	; 38
      0001D6 26                     732 	.db #0x26	; 38
      0001D7 26                     733 	.db #0x26	; 38
      0001D8 26                     734 	.db #0x26	; 38
      0001D9 26                     735 	.db #0x26	; 38
      0001DA 27                     736 	.db #0x27	; 39
      0001DB 28                     737 	.db #0x28	; 40
      0001DC 26                     738 	.db #0x26	; 38
      0001DD 26                     739 	.db #0x26	; 38
      0001DE 26                     740 	.db #0x26	; 38
      0001DF 26                     741 	.db #0x26	; 38
      0001E0 26                     742 	.db #0x26	; 38
      0001E1 26                     743 	.db #0x26	; 38
      0001E2 26                     744 	.db #0x26	; 38
      0001E3 26                     745 	.db #0x26	; 38
      0001E4 26                     746 	.db #0x26	; 38
      0001E5 26                     747 	.db #0x26	; 38
      0001E6 26                     748 	.db #0x26	; 38
      0001E7 26                     749 	.db #0x26	; 38
      0001E8 26                     750 	.db #0x26	; 38
      0001E9 26                     751 	.db #0x26	; 38
      0001EA 26                     752 	.db #0x26	; 38
      0001EB 26                     753 	.db #0x26	; 38
      0001EC 26                     754 	.db #0x26	; 38
      0001ED 26                     755 	.db #0x26	; 38
      0001EE 26                     756 	.db #0x26	; 38
      0001EF 26                     757 	.db #0x26	; 38
      0001F0 26                     758 	.db #0x26	; 38
      0001F1 26                     759 	.db #0x26	; 38
      0001F2 26                     760 	.db #0x26	; 38
      0001F3 26                     761 	.db #0x26	; 38
      0001F4 26                     762 	.db #0x26	; 38
      0001F5 26                     763 	.db #0x26	; 38
      0001F6 26                     764 	.db #0x26	; 38
      0001F7 26                     765 	.db #0x26	; 38
      0001F8 26                     766 	.db #0x26	; 38
      0001F9 26                     767 	.db #0x26	; 38
      0001FA 2A                     768 	.db #0x2a	; 42
      0001FB 29                     769 	.db #0x29	; 41
      0001FC 26                     770 	.db #0x26	; 38
      0001FD 26                     771 	.db #0x26	; 38
      0001FE 26                     772 	.db #0x26	; 38
      0001FF 26                     773 	.db #0x26	; 38
      000200 26                     774 	.db #0x26	; 38
      000201 26                     775 	.db #0x26	; 38
      000202 26                     776 	.db #0x26	; 38
      000203 26                     777 	.db #0x26	; 38
      000204 26                     778 	.db #0x26	; 38
      000205 26                     779 	.db #0x26	; 38
      000206 26                     780 	.db #0x26	; 38
      000207 26                     781 	.db #0x26	; 38
      000208 26                     782 	.db #0x26	; 38
      000209 26                     783 	.db #0x26	; 38
      00020A 26                     784 	.db #0x26	; 38
      00020B 26                     785 	.db #0x26	; 38
      00020C 26                     786 	.db #0x26	; 38
      00020D 26                     787 	.db #0x26	; 38
      00020E 27                     788 	.db #0x27	; 39
      00020F 28                     789 	.db #0x28	; 40
      000210 26                     790 	.db #0x26	; 38
      000211 26                     791 	.db #0x26	; 38
      000212 26                     792 	.db #0x26	; 38
      000213 26                     793 	.db #0x26	; 38
      000214 26                     794 	.db #0x26	; 38
      000215 26                     795 	.db #0x26	; 38
      000216 26                     796 	.db #0x26	; 38
      000217 26                     797 	.db #0x26	; 38
      000218 26                     798 	.db #0x26	; 38
      000219 26                     799 	.db #0x26	; 38
      00021A 26                     800 	.db #0x26	; 38
      00021B 26                     801 	.db #0x26	; 38
      00021C 26                     802 	.db #0x26	; 38
      00021D 26                     803 	.db #0x26	; 38
      00021E 26                     804 	.db #0x26	; 38
      00021F 2C                     805 	.db #0x2c	; 44
      000220 26                     806 	.db #0x26	; 38
      000221 26                     807 	.db #0x26	; 38
      000222 26                     808 	.db #0x26	; 38
      000223 26                     809 	.db #0x26	; 38
      000224 26                     810 	.db #0x26	; 38
      000225 26                     811 	.db #0x26	; 38
      000226 26                     812 	.db #0x26	; 38
      000227 26                     813 	.db #0x26	; 38
      000228 26                     814 	.db #0x26	; 38
      000229 26                     815 	.db #0x26	; 38
      00022A 26                     816 	.db #0x26	; 38
      00022B 26                     817 	.db #0x26	; 38
      00022C 26                     818 	.db #0x26	; 38
      00022D 26                     819 	.db #0x26	; 38
      00022E 2A                     820 	.db #0x2a	; 42
      00022F 29                     821 	.db #0x29	; 41
      000230 26                     822 	.db #0x26	; 38
      000231 26                     823 	.db #0x26	; 38
      000232 26                     824 	.db #0x26	; 38
      000233 26                     825 	.db #0x26	; 38
      000234 26                     826 	.db #0x26	; 38
      000235 26                     827 	.db #0x26	; 38
      000236 26                     828 	.db #0x26	; 38
      000237 26                     829 	.db #0x26	; 38
      000238 26                     830 	.db #0x26	; 38
      000239 26                     831 	.db #0x26	; 38
      00023A 26                     832 	.db #0x26	; 38
      00023B 26                     833 	.db #0x26	; 38
      00023C 26                     834 	.db #0x26	; 38
      00023D 25                     835 	.db #0x25	; 37
      00023E 26                     836 	.db #0x26	; 38
      00023F 26                     837 	.db #0x26	; 38
      000240 26                     838 	.db #0x26	; 38
      000241 26                     839 	.db #0x26	; 38
      000242 26                     840 	.db #0x26	; 38
      000243 26                     841 	.db #0x26	; 38
      000244 2C                     842 	.db #0x2c	; 44
      000245 26                     843 	.db #0x26	; 38
      000246 26                     844 	.db #0x26	; 38
      000247 26                     845 	.db #0x26	; 38
      000248 26                     846 	.db #0x26	; 38
      000249 26                     847 	.db #0x26	; 38
      00024A 26                     848 	.db #0x26	; 38
      00024B 26                     849 	.db #0x26	; 38
      00024C 26                     850 	.db #0x26	; 38
      00024D 26                     851 	.db #0x26	; 38
      00024E 26                     852 	.db #0x26	; 38
      00024F 26                     853 	.db #0x26	; 38
      000250 26                     854 	.db #0x26	; 38
      000251 26                     855 	.db #0x26	; 38
      000252 26                     856 	.db #0x26	; 38
      000253 26                     857 	.db #0x26	; 38
      000254 26                     858 	.db #0x26	; 38
      000255 26                     859 	.db #0x26	; 38
      000256 26                     860 	.db #0x26	; 38
      000257 26                     861 	.db #0x26	; 38
      000258 26                     862 	.db #0x26	; 38
      000259 26                     863 	.db #0x26	; 38
      00025A 26                     864 	.db #0x26	; 38
      00025B 26                     865 	.db #0x26	; 38
      00025C 26                     866 	.db #0x26	; 38
      00025D 26                     867 	.db #0x26	; 38
      00025E 26                     868 	.db #0x26	; 38
      00025F 26                     869 	.db #0x26	; 38
      000260 26                     870 	.db #0x26	; 38
      000261 26                     871 	.db #0x26	; 38
      000262 26                     872 	.db #0x26	; 38
      000263 26                     873 	.db #0x26	; 38
      000264 26                     874 	.db #0x26	; 38
      000265 26                     875 	.db #0x26	; 38
      000266 26                     876 	.db #0x26	; 38
      000267 26                     877 	.db #0x26	; 38
      000268 26                     878 	.db #0x26	; 38
      000269 26                     879 	.db #0x26	; 38
      00026A 2C                     880 	.db #0x2c	; 44
      00026B 26                     881 	.db #0x26	; 38
      00026C 26                     882 	.db #0x26	; 38
      00026D 26                     883 	.db #0x26	; 38
      00026E 26                     884 	.db #0x26	; 38
      00026F 26                     885 	.db #0x26	; 38
      000270 26                     886 	.db #0x26	; 38
      000271 26                     887 	.db #0x26	; 38
      000272 26                     888 	.db #0x26	; 38
      000273 26                     889 	.db #0x26	; 38
      000274 26                     890 	.db #0x26	; 38
      000275 26                     891 	.db #0x26	; 38
      000276 26                     892 	.db #0x26	; 38
      000277 26                     893 	.db #0x26	; 38
      000278 26                     894 	.db #0x26	; 38
      000279 2C                     895 	.db #0x2c	; 44
      00027A 26                     896 	.db #0x26	; 38
      00027B 26                     897 	.db #0x26	; 38
      00027C 26                     898 	.db #0x26	; 38
      00027D 26                     899 	.db #0x26	; 38
      00027E 26                     900 	.db #0x26	; 38
      00027F 26                     901 	.db #0x26	; 38
      000280 26                     902 	.db #0x26	; 38
      000281 26                     903 	.db #0x26	; 38
      000282 26                     904 	.db #0x26	; 38
      000283 26                     905 	.db #0x26	; 38
      000284 26                     906 	.db #0x26	; 38
      000285 26                     907 	.db #0x26	; 38
      000286 26                     908 	.db #0x26	; 38
      000287 26                     909 	.db #0x26	; 38
      000288 26                     910 	.db #0x26	; 38
      000289 26                     911 	.db #0x26	; 38
      00028A 26                     912 	.db #0x26	; 38
      00028B 26                     913 	.db #0x26	; 38
      00028C 26                     914 	.db #0x26	; 38
      00028D 26                     915 	.db #0x26	; 38
      00028E 26                     916 	.db #0x26	; 38
      00028F 26                     917 	.db #0x26	; 38
      000290 26                     918 	.db #0x26	; 38
      000291 26                     919 	.db #0x26	; 38
      000292 26                     920 	.db #0x26	; 38
      000293 26                     921 	.db #0x26	; 38
      000294 26                     922 	.db #0x26	; 38
      000295 2B                     923 	.db #0x2b	; 43
      000296 26                     924 	.db #0x26	; 38
      000297 26                     925 	.db #0x26	; 38
      000298 26                     926 	.db #0x26	; 38
      000299 26                     927 	.db #0x26	; 38
      00029A 26                     928 	.db #0x26	; 38
      00029B 26                     929 	.db #0x26	; 38
      00029C 26                     930 	.db #0x26	; 38
      00029D 26                     931 	.db #0x26	; 38
      00029E 26                     932 	.db #0x26	; 38
      00029F 26                     933 	.db #0x26	; 38
      0002A0 26                     934 	.db #0x26	; 38
      0002A1 26                     935 	.db #0x26	; 38
      0002A2 26                     936 	.db #0x26	; 38
      0002A3 26                     937 	.db #0x26	; 38
      0002A4 26                     938 	.db #0x26	; 38
      0002A5 26                     939 	.db #0x26	; 38
      0002A6 26                     940 	.db #0x26	; 38
      0002A7 28                     941 	.db #0x28	; 40
      0002A8 26                     942 	.db #0x26	; 38
      0002A9 26                     943 	.db #0x26	; 38
      0002AA 26                     944 	.db #0x26	; 38
      0002AB 26                     945 	.db #0x26	; 38
      0002AC 26                     946 	.db #0x26	; 38
      0002AD 26                     947 	.db #0x26	; 38
      0002AE 26                     948 	.db #0x26	; 38
      0002AF 26                     949 	.db #0x26	; 38
      0002B0 26                     950 	.db #0x26	; 38
      0002B1 26                     951 	.db #0x26	; 38
      0002B2 26                     952 	.db #0x26	; 38
      0002B3 26                     953 	.db #0x26	; 38
      0002B4 26                     954 	.db #0x26	; 38
      0002B5 26                     955 	.db #0x26	; 38
      0002B6 26                     956 	.db #0x26	; 38
      0002B7 26                     957 	.db #0x26	; 38
      0002B8 26                     958 	.db #0x26	; 38
      0002B9 26                     959 	.db #0x26	; 38
      0002BA 26                     960 	.db #0x26	; 38
      0002BB 26                     961 	.db #0x26	; 38
      0002BC 26                     962 	.db #0x26	; 38
      0002BD 26                     963 	.db #0x26	; 38
      0002BE 26                     964 	.db #0x26	; 38
      0002BF 26                     965 	.db #0x26	; 38
      0002C0 2B                     966 	.db #0x2b	; 43
      0002C1 26                     967 	.db #0x26	; 38
      0002C2 26                     968 	.db #0x26	; 38
      0002C3 26                     969 	.db #0x26	; 38
      0002C4 26                     970 	.db #0x26	; 38
      0002C5 26                     971 	.db #0x26	; 38
      0002C6 27                     972 	.db #0x27	; 39
      0002C7 29                     973 	.db #0x29	; 41
      0002C8 26                     974 	.db #0x26	; 38
      0002C9 26                     975 	.db #0x26	; 38
      0002CA 26                     976 	.db #0x26	; 38
      0002CB 26                     977 	.db #0x26	; 38
      0002CC 26                     978 	.db #0x26	; 38
      0002CD 26                     979 	.db #0x26	; 38
      0002CE 2B                     980 	.db #0x2b	; 43
      0002CF 26                     981 	.db #0x26	; 38
      0002D0 26                     982 	.db #0x26	; 38
      0002D1 26                     983 	.db #0x26	; 38
      0002D2 26                     984 	.db #0x26	; 38
      0002D3 26                     985 	.db #0x26	; 38
      0002D4 26                     986 	.db #0x26	; 38
      0002D5 26                     987 	.db #0x26	; 38
      0002D6 26                     988 	.db #0x26	; 38
      0002D7 26                     989 	.db #0x26	; 38
      0002D8 26                     990 	.db #0x26	; 38
      0002D9 26                     991 	.db #0x26	; 38
      0002DA 26                     992 	.db #0x26	; 38
      0002DB 26                     993 	.db #0x26	; 38
      0002DC 26                     994 	.db #0x26	; 38
      0002DD 26                     995 	.db #0x26	; 38
      0002DE 26                     996 	.db #0x26	; 38
      0002DF 26                     997 	.db #0x26	; 38
      0002E0 26                     998 	.db #0x26	; 38
      0002E1 26                     999 	.db #0x26	; 38
      0002E2 26                    1000 	.db #0x26	; 38
      0002E3 26                    1001 	.db #0x26	; 38
      0002E4 26                    1002 	.db #0x26	; 38
      0002E5 26                    1003 	.db #0x26	; 38
      0002E6 2A                    1004 	.db #0x2a	; 42
      0002E7 26                    1005 	.db #0x26	; 38
      0002E8 26                    1006 	.db #0x26	; 38
      0002E9 26                    1007 	.db #0x26	; 38
      0002EA 26                    1008 	.db #0x26	; 38
      0002EB 26                    1009 	.db #0x26	; 38
      0002EC 26                    1010 	.db #0x26	; 38
      0002ED 26                    1011 	.db #0x26	; 38
      0002EE 26                    1012 	.db #0x26	; 38
      0002EF 26                    1013 	.db #0x26	; 38
      0002F0 26                    1014 	.db #0x26	; 38
      0002F1 26                    1015 	.db #0x26	; 38
      0002F2 2C                    1016 	.db #0x2c	; 44
      0002F3 26                    1017 	.db #0x26	; 38
      0002F4 26                    1018 	.db #0x26	; 38
      0002F5 26                    1019 	.db #0x26	; 38
      0002F6 26                    1020 	.db #0x26	; 38
      0002F7 26                    1021 	.db #0x26	; 38
      0002F8 26                    1022 	.db #0x26	; 38
      0002F9 26                    1023 	.db #0x26	; 38
      0002FA 26                    1024 	.db #0x26	; 38
      0002FB 26                    1025 	.db #0x26	; 38
      0002FC 26                    1026 	.db #0x26	; 38
      0002FD 26                    1027 	.db #0x26	; 38
      0002FE 26                    1028 	.db #0x26	; 38
      0002FF 26                    1029 	.db #0x26	; 38
      000300 26                    1030 	.db #0x26	; 38
      000301 26                    1031 	.db #0x26	; 38
      000302 26                    1032 	.db #0x26	; 38
      000303 26                    1033 	.db #0x26	; 38
      000304 26                    1034 	.db #0x26	; 38
      000305 26                    1035 	.db #0x26	; 38
      000306 26                    1036 	.db #0x26	; 38
      000307 26                    1037 	.db #0x26	; 38
      000308 26                    1038 	.db #0x26	; 38
      000309 26                    1039 	.db #0x26	; 38
      00030A 26                    1040 	.db #0x26	; 38
      00030B 26                    1041 	.db #0x26	; 38
      00030C 26                    1042 	.db #0x26	; 38
      00030D 26                    1043 	.db #0x26	; 38
      00030E 26                    1044 	.db #0x26	; 38
      00030F 26                    1045 	.db #0x26	; 38
      000310 26                    1046 	.db #0x26	; 38
      000311 26                    1047 	.db #0x26	; 38
      000312 26                    1048 	.db #0x26	; 38
      000313 26                    1049 	.db #0x26	; 38
      000314 26                    1050 	.db #0x26	; 38
      000315 26                    1051 	.db #0x26	; 38
      000316 26                    1052 	.db #0x26	; 38
      000317 2B                    1053 	.db #0x2b	; 43
      000318 26                    1054 	.db #0x26	; 38
      000319 26                    1055 	.db #0x26	; 38
      00031A 26                    1056 	.db #0x26	; 38
      00031B 26                    1057 	.db #0x26	; 38
      00031C 26                    1058 	.db #0x26	; 38
      00031D 26                    1059 	.db #0x26	; 38
      00031E 26                    1060 	.db #0x26	; 38
      00031F 26                    1061 	.db #0x26	; 38
      000320 26                    1062 	.db #0x26	; 38
      000321 26                    1063 	.db #0x26	; 38
      000322 26                    1064 	.db #0x26	; 38
      000323 26                    1065 	.db #0x26	; 38
      000324 26                    1066 	.db #0x26	; 38
      000325 26                    1067 	.db #0x26	; 38
      000326 26                    1068 	.db #0x26	; 38
      000327 26                    1069 	.db #0x26	; 38
      000328 26                    1070 	.db #0x26	; 38
      000329 26                    1071 	.db #0x26	; 38
      00032A 26                    1072 	.db #0x26	; 38
      00032B 26                    1073 	.db #0x26	; 38
      00032C 26                    1074 	.db #0x26	; 38
      00032D 26                    1075 	.db #0x26	; 38
      00032E 26                    1076 	.db #0x26	; 38
      00032F 26                    1077 	.db #0x26	; 38
      000330 26                    1078 	.db #0x26	; 38
      000331 26                    1079 	.db #0x26	; 38
      000332 26                    1080 	.db #0x26	; 38
      000333 26                    1081 	.db #0x26	; 38
      000334 26                    1082 	.db #0x26	; 38
      000335 26                    1083 	.db #0x26	; 38
      000336 26                    1084 	.db #0x26	; 38
      000337 26                    1085 	.db #0x26	; 38
      000338 26                    1086 	.db #0x26	; 38
      000339 26                    1087 	.db #0x26	; 38
      00033A 26                    1088 	.db #0x26	; 38
      00033B 26                    1089 	.db #0x26	; 38
      00033C 26                    1090 	.db #0x26	; 38
      00033D 26                    1091 	.db #0x26	; 38
      00033E 2B                    1092 	.db #0x2b	; 43
      00033F 26                    1093 	.db #0x26	; 38
      000340 26                    1094 	.db #0x26	; 38
      000341 26                    1095 	.db #0x26	; 38
      000342 26                    1096 	.db #0x26	; 38
      000343 26                    1097 	.db #0x26	; 38
      000344 26                    1098 	.db #0x26	; 38
      000345 26                    1099 	.db #0x26	; 38
      000346 26                    1100 	.db #0x26	; 38
      000347 26                    1101 	.db #0x26	; 38
      000348 26                    1102 	.db #0x26	; 38
      000349 26                    1103 	.db #0x26	; 38
      00034A 2B                    1104 	.db #0x2b	; 43
      00034B 26                    1105 	.db #0x26	; 38
      00034C 26                    1106 	.db #0x26	; 38
      00034D 26                    1107 	.db #0x26	; 38
      00034E 26                    1108 	.db #0x26	; 38
      00034F 26                    1109 	.db #0x26	; 38
      000350 26                    1110 	.db #0x26	; 38
      000351 26                    1111 	.db #0x26	; 38
      000352 26                    1112 	.db #0x26	; 38
      000353 26                    1113 	.db #0x26	; 38
      000354 26                    1114 	.db #0x26	; 38
      000355 26                    1115 	.db #0x26	; 38
      000356 26                    1116 	.db #0x26	; 38
      000357 26                    1117 	.db #0x26	; 38
      000358 26                    1118 	.db #0x26	; 38
      000359 26                    1119 	.db #0x26	; 38
      00035A 26                    1120 	.db #0x26	; 38
      00035B 26                    1121 	.db #0x26	; 38
      00035C 26                    1122 	.db #0x26	; 38
      00035D 26                    1123 	.db #0x26	; 38
      00035E 26                    1124 	.db #0x26	; 38
      00035F 26                    1125 	.db #0x26	; 38
      000360 26                    1126 	.db #0x26	; 38
      000361 26                    1127 	.db #0x26	; 38
      000362 26                    1128 	.db #0x26	; 38
      000363 26                    1129 	.db #0x26	; 38
      000364 26                    1130 	.db #0x26	; 38
      000365 26                    1131 	.db #0x26	; 38
      000366 2C                    1132 	.db #0x2c	; 44
      000367 26                    1133 	.db #0x26	; 38
      000368 26                    1134 	.db #0x26	; 38
      000369 26                    1135 	.db #0x26	; 38
      00036A 26                    1136 	.db #0x26	; 38
      00036B 26                    1137 	.db #0x26	; 38
      00036C 26                    1138 	.db #0x26	; 38
      00036D 26                    1139 	.db #0x26	; 38
      00036E 26                    1140 	.db #0x26	; 38
      00036F 26                    1141 	.db #0x26	; 38
      000370 2B                    1142 	.db #0x2b	; 43
      000371 26                    1143 	.db #0x26	; 38
      000372 26                    1144 	.db #0x26	; 38
      000373 26                    1145 	.db #0x26	; 38
      000374 26                    1146 	.db #0x26	; 38
      000375 26                    1147 	.db #0x26	; 38
      000376 26                    1148 	.db #0x26	; 38
      000377 26                    1149 	.db #0x26	; 38
      000378 26                    1150 	.db #0x26	; 38
      000379 26                    1151 	.db #0x26	; 38
      00037A 26                    1152 	.db #0x26	; 38
      00037B 26                    1153 	.db #0x26	; 38
      00037C 26                    1154 	.db #0x26	; 38
      00037D 26                    1155 	.db #0x26	; 38
      00037E 26                    1156 	.db #0x26	; 38
      00037F 26                    1157 	.db #0x26	; 38
      000380 26                    1158 	.db #0x26	; 38
      000381 26                    1159 	.db #0x26	; 38
      000382 26                    1160 	.db #0x26	; 38
      000383 26                    1161 	.db #0x26	; 38
      000384 26                    1162 	.db #0x26	; 38
      000385 26                    1163 	.db #0x26	; 38
      000386 26                    1164 	.db #0x26	; 38
      000387 26                    1165 	.db #0x26	; 38
      000388 26                    1166 	.db #0x26	; 38
      000389 26                    1167 	.db #0x26	; 38
      00038A 26                    1168 	.db #0x26	; 38
      00038B 26                    1169 	.db #0x26	; 38
      00038C 26                    1170 	.db #0x26	; 38
      00038D 26                    1171 	.db #0x26	; 38
      00038E 26                    1172 	.db #0x26	; 38
      00038F 26                    1173 	.db #0x26	; 38
      000390 26                    1174 	.db #0x26	; 38
      000391 26                    1175 	.db #0x26	; 38
      000392 26                    1176 	.db #0x26	; 38
      000393 26                    1177 	.db #0x26	; 38
      000394 26                    1178 	.db #0x26	; 38
      000395 26                    1179 	.db #0x26	; 38
      000396 26                    1180 	.db #0x26	; 38
      000397 26                    1181 	.db #0x26	; 38
      000398 27                    1182 	.db #0x27	; 39
      000399 28                    1183 	.db #0x28	; 40
      00039A 26                    1184 	.db #0x26	; 38
      00039B 26                    1185 	.db #0x26	; 38
      00039C 26                    1186 	.db #0x26	; 38
      00039D 26                    1187 	.db #0x26	; 38
      00039E 26                    1188 	.db #0x26	; 38
      00039F 26                    1189 	.db #0x26	; 38
      0003A0 26                    1190 	.db #0x26	; 38
      0003A1 26                    1191 	.db #0x26	; 38
      0003A2 26                    1192 	.db #0x26	; 38
      0003A3 26                    1193 	.db #0x26	; 38
      0003A4 26                    1194 	.db #0x26	; 38
      0003A5 26                    1195 	.db #0x26	; 38
      0003A6 26                    1196 	.db #0x26	; 38
      0003A7 26                    1197 	.db #0x26	; 38
      0003A8 26                    1198 	.db #0x26	; 38
      0003A9 26                    1199 	.db #0x26	; 38
      0003AA 26                    1200 	.db #0x26	; 38
      0003AB 26                    1201 	.db #0x26	; 38
      0003AC 26                    1202 	.db #0x26	; 38
      0003AD 2B                    1203 	.db #0x2b	; 43
      0003AE 26                    1204 	.db #0x26	; 38
      0003AF 26                    1205 	.db #0x26	; 38
      0003B0 26                    1206 	.db #0x26	; 38
      0003B1 26                    1207 	.db #0x26	; 38
      0003B2 26                    1208 	.db #0x26	; 38
      0003B3 26                    1209 	.db #0x26	; 38
      0003B4 26                    1210 	.db #0x26	; 38
      0003B5 25                    1211 	.db #0x25	; 37
      0003B6 26                    1212 	.db #0x26	; 38
      0003B7 26                    1213 	.db #0x26	; 38
      0003B8 2A                    1214 	.db #0x2a	; 42
      0003B9 29                    1215 	.db #0x29	; 41
      0003BA 26                    1216 	.db #0x26	; 38
      0003BB 26                    1217 	.db #0x26	; 38
      0003BC 26                    1218 	.db #0x26	; 38
      0003BD 26                    1219 	.db #0x26	; 38
      0003BE 26                    1220 	.db #0x26	; 38
      0003BF 26                    1221 	.db #0x26	; 38
      0003C0 26                    1222 	.db #0x26	; 38
      0003C1 26                    1223 	.db #0x26	; 38
      0003C2 2B                    1224 	.db #0x2b	; 43
      0003C3 26                    1225 	.db #0x26	; 38
      0003C4 26                    1226 	.db #0x26	; 38
      0003C5 26                    1227 	.db #0x26	; 38
      0003C6 26                    1228 	.db #0x26	; 38
      0003C7 26                    1229 	.db #0x26	; 38
      0003C8 26                    1230 	.db #0x26	; 38
      0003C9 2C                    1231 	.db #0x2c	; 44
      0003CA 26                    1232 	.db #0x26	; 38
      0003CB 26                    1233 	.db #0x26	; 38
      0003CC 26                    1234 	.db #0x26	; 38
      0003CD 26                    1235 	.db #0x26	; 38
      0003CE 26                    1236 	.db #0x26	; 38
      0003CF 26                    1237 	.db #0x26	; 38
      0003D0 26                    1238 	.db #0x26	; 38
      0003D1 26                    1239 	.db #0x26	; 38
      0003D2 26                    1240 	.db #0x26	; 38
      0003D3 26                    1241 	.db #0x26	; 38
      0003D4 26                    1242 	.db #0x26	; 38
      0003D5 2C                    1243 	.db #0x2c	; 44
      0003D6 26                    1244 	.db #0x26	; 38
      0003D7 26                    1245 	.db #0x26	; 38
      0003D8 26                    1246 	.db #0x26	; 38
      0003D9 26                    1247 	.db #0x26	; 38
      0003DA 26                    1248 	.db #0x26	; 38
      0003DB 26                    1249 	.db #0x26	; 38
      0003DC 26                    1250 	.db #0x26	; 38
      0003DD 26                    1251 	.db #0x26	; 38
      0003DE 26                    1252 	.db #0x26	; 38
      0003DF 26                    1253 	.db #0x26	; 38
      0003E0 26                    1254 	.db #0x26	; 38
      0003E1 26                    1255 	.db #0x26	; 38
      0003E2 26                    1256 	.db #0x26	; 38
      0003E3 26                    1257 	.db #0x26	; 38
      0003E4 26                    1258 	.db #0x26	; 38
      0003E5 26                    1259 	.db #0x26	; 38
      0003E6 26                    1260 	.db #0x26	; 38
      0003E7 26                    1261 	.db #0x26	; 38
      0003E8 26                    1262 	.db #0x26	; 38
      0003E9 26                    1263 	.db #0x26	; 38
      0003EA 26                    1264 	.db #0x26	; 38
      0003EB 26                    1265 	.db #0x26	; 38
      0003EC 26                    1266 	.db #0x26	; 38
      0003ED 26                    1267 	.db #0x26	; 38
      0003EE 26                    1268 	.db #0x26	; 38
      0003EF 26                    1269 	.db #0x26	; 38
      0003F0 26                    1270 	.db #0x26	; 38
      0003F1 26                    1271 	.db #0x26	; 38
      0003F2 26                    1272 	.db #0x26	; 38
      0003F3 26                    1273 	.db #0x26	; 38
      0003F4 26                    1274 	.db #0x26	; 38
      0003F5 26                    1275 	.db #0x26	; 38
      0003F6 26                    1276 	.db #0x26	; 38
      0003F7 26                    1277 	.db #0x26	; 38
      0003F8 26                    1278 	.db #0x26	; 38
      0003F9 26                    1279 	.db #0x26	; 38
      0003FA 26                    1280 	.db #0x26	; 38
      0003FB 26                    1281 	.db #0x26	; 38
      0003FC 26                    1282 	.db #0x26	; 38
      0003FD 26                    1283 	.db #0x26	; 38
      0003FE 26                    1284 	.db #0x26	; 38
      0003FF 26                    1285 	.db #0x26	; 38
      000400 26                    1286 	.db #0x26	; 38
      000401 26                    1287 	.db #0x26	; 38
      000402 26                    1288 	.db #0x26	; 38
      000403 26                    1289 	.db #0x26	; 38
      000404 26                    1290 	.db #0x26	; 38
      000405 26                    1291 	.db #0x26	; 38
      000406 26                    1292 	.db #0x26	; 38
      000407 26                    1293 	.db #0x26	; 38
      000408 26                    1294 	.db #0x26	; 38
      000409 26                    1295 	.db #0x26	; 38
      00040A 26                    1296 	.db #0x26	; 38
      00040B 26                    1297 	.db #0x26	; 38
      00040C 26                    1298 	.db #0x26	; 38
      00040D 2B                    1299 	.db #0x2b	; 43
      00040E 26                    1300 	.db #0x26	; 38
      00040F 26                    1301 	.db #0x26	; 38
      000410 26                    1302 	.db #0x26	; 38
      000411 26                    1303 	.db #0x26	; 38
      000412 26                    1304 	.db #0x26	; 38
      000413 26                    1305 	.db #0x26	; 38
      000414 26                    1306 	.db #0x26	; 38
      000415 26                    1307 	.db #0x26	; 38
      000416 26                    1308 	.db #0x26	; 38
      000417 26                    1309 	.db #0x26	; 38
      000418 26                    1310 	.db #0x26	; 38
      000419 26                    1311 	.db #0x26	; 38
      00041A 26                    1312 	.db #0x26	; 38
      00041B 26                    1313 	.db #0x26	; 38
      00041C 26                    1314 	.db #0x26	; 38
      00041D 26                    1315 	.db #0x26	; 38
      00041E 26                    1316 	.db #0x26	; 38
      00041F 26                    1317 	.db #0x26	; 38
      000420 2B                    1318 	.db #0x2b	; 43
      000421 26                    1319 	.db #0x26	; 38
      000422 26                    1320 	.db #0x26	; 38
      000423 26                    1321 	.db #0x26	; 38
      000424 26                    1322 	.db #0x26	; 38
      000425 26                    1323 	.db #0x26	; 38
      000426 26                    1324 	.db #0x26	; 38
      000427 26                    1325 	.db #0x26	; 38
      000428 26                    1326 	.db #0x26	; 38
      000429 26                    1327 	.db #0x26	; 38
      00042A 26                    1328 	.db #0x26	; 38
      00042B 26                    1329 	.db #0x26	; 38
      00042C 26                    1330 	.db #0x26	; 38
      00042D 26                    1331 	.db #0x26	; 38
      00042E 26                    1332 	.db #0x26	; 38
      00042F 26                    1333 	.db #0x26	; 38
      000430 26                    1334 	.db #0x26	; 38
      000431 26                    1335 	.db #0x26	; 38
      000432 26                    1336 	.db #0x26	; 38
      000433 26                    1337 	.db #0x26	; 38
      000434 26                    1338 	.db #0x26	; 38
      000435 26                    1339 	.db #0x26	; 38
      000436 26                    1340 	.db #0x26	; 38
      000437 2C                    1341 	.db #0x2c	; 44
      000438 26                    1342 	.db #0x26	; 38
      000439 26                    1343 	.db #0x26	; 38
      00043A 26                    1344 	.db #0x26	; 38
      00043B 26                    1345 	.db #0x26	; 38
      00043C 26                    1346 	.db #0x26	; 38
      00043D 26                    1347 	.db #0x26	; 38
      00043E 26                    1348 	.db #0x26	; 38
      00043F 26                    1349 	.db #0x26	; 38
      000440 26                    1350 	.db #0x26	; 38
      000441 26                    1351 	.db #0x26	; 38
      000442 26                    1352 	.db #0x26	; 38
      000443 26                    1353 	.db #0x26	; 38
      000444 26                    1354 	.db #0x26	; 38
      000445 26                    1355 	.db #0x26	; 38
      000446 26                    1356 	.db #0x26	; 38
      000447 26                    1357 	.db #0x26	; 38
      000448 25                    1358 	.db #0x25	; 37
      000449 2C                    1359 	.db #0x2c	; 44
      00044A 26                    1360 	.db #0x26	; 38
      00044B 26                    1361 	.db #0x26	; 38
      00044C 26                    1362 	.db #0x26	; 38
      00044D 26                    1363 	.db #0x26	; 38
      00044E 26                    1364 	.db #0x26	; 38
      00044F 26                    1365 	.db #0x26	; 38
      000450 26                    1366 	.db #0x26	; 38
      000451 26                    1367 	.db #0x26	; 38
      000452 26                    1368 	.db #0x26	; 38
      000453 26                    1369 	.db #0x26	; 38
      000454 26                    1370 	.db #0x26	; 38
      000455 26                    1371 	.db #0x26	; 38
      000456 26                    1372 	.db #0x26	; 38
      000457 26                    1373 	.db #0x26	; 38
      000458 26                    1374 	.db #0x26	; 38
      000459 26                    1375 	.db #0x26	; 38
      00045A 2B                    1376 	.db #0x2b	; 43
      00045B 26                    1377 	.db #0x26	; 38
      00045C 26                    1378 	.db #0x26	; 38
      00045D 26                    1379 	.db #0x26	; 38
      00045E 26                    1380 	.db #0x26	; 38
      00045F 26                    1381 	.db #0x26	; 38
      000460 26                    1382 	.db #0x26	; 38
      000461 26                    1383 	.db #0x26	; 38
      000462 26                    1384 	.db #0x26	; 38
      000463 26                    1385 	.db #0x26	; 38
      000464 26                    1386 	.db #0x26	; 38
      000465 26                    1387 	.db #0x26	; 38
      000466 26                    1388 	.db #0x26	; 38
      000467 26                    1389 	.db #0x26	; 38
      000468 26                    1390 	.db #0x26	; 38
      000469 26                    1391 	.db #0x26	; 38
      00046A 26                    1392 	.db #0x26	; 38
      00046B 26                    1393 	.db #0x26	; 38
      00046C 26                    1394 	.db #0x26	; 38
      00046D 26                    1395 	.db #0x26	; 38
      00046E 26                    1396 	.db #0x26	; 38
      00046F 26                    1397 	.db #0x26	; 38
      000470 26                    1398 	.db #0x26	; 38
      000471 26                    1399 	.db #0x26	; 38
      000472 27                    1400 	.db #0x27	; 39
      000473 28                    1401 	.db #0x28	; 40
      000474 26                    1402 	.db #0x26	; 38
      000475 26                    1403 	.db #0x26	; 38
      000476 26                    1404 	.db #0x26	; 38
      000477 26                    1405 	.db #0x26	; 38
      000478 26                    1406 	.db #0x26	; 38
      000479 26                    1407 	.db #0x26	; 38
      00047A 26                    1408 	.db #0x26	; 38
      00047B 26                    1409 	.db #0x26	; 38
      00047C 26                    1410 	.db #0x26	; 38
      00047D 26                    1411 	.db #0x26	; 38
      00047E 26                    1412 	.db #0x26	; 38
      00047F 26                    1413 	.db #0x26	; 38
      000480 26                    1414 	.db #0x26	; 38
      000481 26                    1415 	.db #0x26	; 38
      000482 26                    1416 	.db #0x26	; 38
      000483 26                    1417 	.db #0x26	; 38
      000484 26                    1418 	.db #0x26	; 38
      000485 26                    1419 	.db #0x26	; 38
      000486 2B                    1420 	.db #0x2b	; 43
      000487                       1421 _backgroundtiles:
      000487 40                    1422 	.db #0x40	; 64
      000488 38                    1423 	.db #0x38	; 56	'8'
      000489 3A                    1424 	.db #0x3a	; 58
      00048A 44                    1425 	.db #0x44	; 68	'D'
      00048B 7C                    1426 	.db #0x7c	; 124
      00048C 9A                    1427 	.db #0x9a	; 154
      00048D 5E                    1428 	.db #0x5e	; 94
      00048E E9                    1429 	.db #0xe9	; 233
      00048F 7A                    1430 	.db #0x7a	; 122	'z'
      000490 87                    1431 	.db #0x87	; 135
      000491 76                    1432 	.db #0x76	; 118	'v'
      000492 B9                    1433 	.db #0xb9	; 185
      000493 3C                    1434 	.db #0x3c	; 60
      000494 72                    1435 	.db #0x72	; 114	'r'
      000495 00                    1436 	.db #0x00	; 0
      000496 3C                    1437 	.db #0x3c	; 60
      000497 00                    1438 	.db #0x00	; 0
      000498 00                    1439 	.db #0x00	; 0
      000499 00                    1440 	.db #0x00	; 0
      00049A 00                    1441 	.db #0x00	; 0
      00049B 00                    1442 	.db #0x00	; 0
      00049C 00                    1443 	.db #0x00	; 0
      00049D 00                    1444 	.db #0x00	; 0
      00049E 00                    1445 	.db #0x00	; 0
      00049F 00                    1446 	.db #0x00	; 0
      0004A0 00                    1447 	.db #0x00	; 0
      0004A1 00                    1448 	.db #0x00	; 0
      0004A2 00                    1449 	.db #0x00	; 0
      0004A3 00                    1450 	.db #0x00	; 0
      0004A4 00                    1451 	.db #0x00	; 0
      0004A5 00                    1452 	.db #0x00	; 0
      0004A6 00                    1453 	.db #0x00	; 0
      0004A7 00                    1454 	.db #0x00	; 0
      0004A8 0F                    1455 	.db #0x0f	; 15
      0004A9 08                    1456 	.db #0x08	; 8
      0004AA 17                    1457 	.db #0x17	; 23
      0004AB 1C                    1458 	.db #0x1c	; 28
      0004AC 23                    1459 	.db #0x23	; 35
      0004AD 3E                    1460 	.db #0x3e	; 62
      0004AE 41                    1461 	.db #0x41	; 65	'A'
      0004AF 1B                    1462 	.db #0x1b	; 27
      0004B0 64                    1463 	.db #0x64	; 100	'd'
      0004B1 31                    1464 	.db #0x31	; 49	'1'
      0004B2 4E                    1465 	.db #0x4e	; 78	'N'
      0004B3 B1                    1466 	.db #0xb1	; 177
      0004B4 CE                    1467 	.db #0xce	; 206
      0004B5 BB                    1468 	.db #0xbb	; 187
      0004B6 C4                    1469 	.db #0xc4	; 196
      0004B7 00                    1470 	.db #0x00	; 0
      0004B8 F8                    1471 	.db #0xf8	; 248
      0004B9 00                    1472 	.db #0x00	; 0
      0004BA FC                    1473 	.db #0xfc	; 252
      0004BB E0                    1474 	.db #0xe0	; 224
      0004BC 1E                    1475 	.db #0x1e	; 30
      0004BD F0                    1476 	.db #0xf0	; 240
      0004BE 0F                    1477 	.db #0x0f	; 15
      0004BF BE                    1478 	.db #0xbe	; 190
      0004C0 01                    1479 	.db #0x01	; 1
      0004C1 BC                    1480 	.db #0xbc	; 188
      0004C2 02                    1481 	.db #0x02	; 2
      0004C3 CE                    1482 	.db #0xce	; 206
      0004C4 01                    1483 	.db #0x01	; 1
      0004C5 F6                    1484 	.db #0xf6	; 246
      0004C6 61                    1485 	.db #0x61	; 97	'a'
      0004C7 F4                    1486 	.db #0xf4	; 244
      0004C8 02                    1487 	.db #0x02	; 2
      0004C9 94                    1488 	.db #0x94	; 148
      0004CA 62                    1489 	.db #0x62	; 98	'b'
      0004CB E4                    1490 	.db #0xe4	; 228
      0004CC 02                    1491 	.db #0x02	; 2
      0004CD 6C                    1492 	.db #0x6c	; 108	'l'
      0004CE 82                    1493 	.db #0x82	; 130
      0004CF 70                    1494 	.db #0x70	; 112	'p'
      0004D0 8C                    1495 	.db #0x8c	; 140
      0004D1 60                    1496 	.db #0x60	; 96
      0004D2 90                    1497 	.db #0x90	; 144
      0004D3 00                    1498 	.db #0x00	; 0
      0004D4 E0                    1499 	.db #0xe0	; 224
      0004D5 80                    1500 	.db #0x80	; 128
      0004D6 80                    1501 	.db #0x80	; 128
      0004D7 8E                    1502 	.db #0x8e	; 142
      0004D8 F7                    1503 	.db #0xf7	; 247
      0004D9 8F                    1504 	.db #0x8f	; 143
      0004DA F3                    1505 	.db #0xf3	; 243
      0004DB 86                    1506 	.db #0x86	; 134
      0004DC F9                    1507 	.db #0xf9	; 249
      0004DD 42                    1508 	.db #0x42	; 66	'B'
      0004DE 7D                    1509 	.db #0x7d	; 125
      0004DF 80                    1510 	.db #0x80	; 128
      0004E0 FF                    1511 	.db #0xff	; 255
      0004E1 44                    1512 	.db #0x44	; 68	'D'
      0004E2 7F                    1513 	.db #0x7f	; 127
      0004E3 28                    1514 	.db #0x28	; 40
      0004E4 3F                    1515 	.db #0x3f	; 63
      0004E5 07                    1516 	.db #0x07	; 7
      0004E6 07                    1517 	.db #0x07	; 7
      0004E7 00                    1518 	.db #0x00	; 0
      0004E8 00                    1519 	.db #0x00	; 0
      0004E9 08                    1520 	.db #0x08	; 8
      0004EA 00                    1521 	.db #0x00	; 0
      0004EB 08                    1522 	.db #0x08	; 8
      0004EC 00                    1523 	.db #0x00	; 0
      0004ED 1C                    1524 	.db #0x1c	; 28
      0004EE 00                    1525 	.db #0x00	; 0
      0004EF 7F                    1526 	.db #0x7f	; 127
      0004F0 00                    1527 	.db #0x00	; 0
      0004F1 1C                    1528 	.db #0x1c	; 28
      0004F2 00                    1529 	.db #0x00	; 0
      0004F3 08                    1530 	.db #0x08	; 8
      0004F4 00                    1531 	.db #0x00	; 0
      0004F5 08                    1532 	.db #0x08	; 8
      0004F6 00                    1533 	.db #0x00	; 0
      0004F7 00                    1534 	.db #0x00	; 0
      0004F8 00                    1535 	.db #0x00	; 0
      0004F9 00                    1536 	.db #0x00	; 0
      0004FA 00                    1537 	.db #0x00	; 0
      0004FB 00                    1538 	.db #0x00	; 0
      0004FC 00                    1539 	.db #0x00	; 0
      0004FD 10                    1540 	.db #0x10	; 16
      0004FE 00                    1541 	.db #0x00	; 0
      0004FF 00                    1542 	.db #0x00	; 0
      000500 00                    1543 	.db #0x00	; 0
      000501 00                    1544 	.db #0x00	; 0
      000502 00                    1545 	.db #0x00	; 0
      000503 00                    1546 	.db #0x00	; 0
      000504 00                    1547 	.db #0x00	; 0
      000505 00                    1548 	.db #0x00	; 0
      000506 00                    1549 	.db #0x00	; 0
      000507                       1550 _healthblock:
      000507 FE                    1551 	.db #0xfe	; 254
      000508 FE                    1552 	.db #0xfe	; 254
      000509 FE                    1553 	.db #0xfe	; 254
      00050A FE                    1554 	.db #0xfe	; 254
      00050B FE                    1555 	.db #0xfe	; 254
      00050C FE                    1556 	.db #0xfe	; 254
      00050D FE                    1557 	.db #0xfe	; 254
      00050E FE                    1558 	.db #0xfe	; 254
      00050F FE                    1559 	.db #0xfe	; 254
      000510 FE                    1560 	.db #0xfe	; 254
      000511 FE                    1561 	.db #0xfe	; 254
      000512 FE                    1562 	.db #0xfe	; 254
      000513 FE                    1563 	.db #0xfe	; 254
      000514 FE                    1564 	.db #0xfe	; 254
      000515 00                    1565 	.db #0x00	; 0
      000516 00                    1566 	.db #0x00	; 0
      000517                       1567 _enemyOptionCount:
      000517 05                    1568 	.db #0x05	; 5
      000518                       1569 _enemy1:
      000518 66                    1570 	.db #0x66	; 102	'f'
      000519 24                    1571 	.db #0x24	; 36
      00051A E7                    1572 	.db #0xe7	; 231
      00051B 66                    1573 	.db #0x66	; 102	'f'
      00051C F7                    1574 	.db #0xf7	; 247
      00051D E7                    1575 	.db #0xe7	; 231
      00051E 1C                    1576 	.db #0x1c	; 28
      00051F 18                    1577 	.db #0x18	; 24
      000520 38                    1578 	.db #0x38	; 56	'8'
      000521 18                    1579 	.db #0x18	; 24
      000522 EF                    1580 	.db #0xef	; 239
      000523 E7                    1581 	.db #0xe7	; 231
      000524 E7                    1582 	.db #0xe7	; 231
      000525 66                    1583 	.db #0x66	; 102	'f'
      000526 66                    1584 	.db #0x66	; 102	'f'
      000527 24                    1585 	.db #0x24	; 36
      000528 00                    1586 	.db #0x00	; 0
      000529 00                    1587 	.db #0x00	; 0
      00052A 00                    1588 	.db #0x00	; 0
      00052B 00                    1589 	.db #0x00	; 0
      00052C 00                    1590 	.db #0x00	; 0
      00052D 00                    1591 	.db #0x00	; 0
      00052E 00                    1592 	.db #0x00	; 0
      00052F 00                    1593 	.db #0x00	; 0
      000530 00                    1594 	.db #0x00	; 0
      000531 00                    1595 	.db #0x00	; 0
      000532 00                    1596 	.db #0x00	; 0
      000533 00                    1597 	.db #0x00	; 0
      000534 00                    1598 	.db #0x00	; 0
      000535 00                    1599 	.db #0x00	; 0
      000536 00                    1600 	.db #0x00	; 0
      000537 00                    1601 	.db #0x00	; 0
      000538 3C                    1602 	.db #0x3c	; 60
      000539 3C                    1603 	.db #0x3c	; 60
      00053A 5E                    1604 	.db #0x5e	; 94
      00053B 62                    1605 	.db #0x62	; 98	'b'
      00053C 8F                    1606 	.db #0x8f	; 143
      00053D F1                    1607 	.db #0xf1	; 241
      00053E C7                    1608 	.db #0xc7	; 199
      00053F F9                    1609 	.db #0xf9	; 249
      000540 C3                    1610 	.db #0xc3	; 195
      000541 FD                    1611 	.db #0xfd	; 253
      000542 E1                    1612 	.db #0xe1	; 225
      000543 FF                    1613 	.db #0xff	; 255
      000544 7A                    1614 	.db #0x7a	; 122	'z'
      000545 7E                    1615 	.db #0x7e	; 126
      000546 3C                    1616 	.db #0x3c	; 60
      000547 3C                    1617 	.db #0x3c	; 60
      000548 00                    1618 	.db #0x00	; 0
      000549 00                    1619 	.db #0x00	; 0
      00054A 00                    1620 	.db #0x00	; 0
      00054B 00                    1621 	.db #0x00	; 0
      00054C 00                    1622 	.db #0x00	; 0
      00054D 00                    1623 	.db #0x00	; 0
      00054E 00                    1624 	.db #0x00	; 0
      00054F 00                    1625 	.db #0x00	; 0
      000550 00                    1626 	.db #0x00	; 0
      000551 00                    1627 	.db #0x00	; 0
      000552 00                    1628 	.db #0x00	; 0
      000553 00                    1629 	.db #0x00	; 0
      000554 00                    1630 	.db #0x00	; 0
      000555 00                    1631 	.db #0x00	; 0
      000556 00                    1632 	.db #0x00	; 0
      000557 00                    1633 	.db #0x00	; 0
      000558 3C                    1634 	.db #0x3c	; 60
      000559 3E                    1635 	.db #0x3e	; 62
      00055A 20                    1636 	.db #0x20	; 32
      00055B 38                    1637 	.db #0x38	; 56	'8'
      00055C 44                    1638 	.db #0x44	; 68	'D'
      00055D 78                    1639 	.db #0x78	; 120	'x'
      00055E BA                    1640 	.db #0xba	; 186
      00055F C4                    1641 	.db #0xc4	; 196
      000560 BA                    1642 	.db #0xba	; 186
      000561 C4                    1643 	.db #0xc4	; 196
      000562 44                    1644 	.db #0x44	; 68	'D'
      000563 78                    1645 	.db #0x78	; 120	'x'
      000564 20                    1646 	.db #0x20	; 32
      000565 38                    1647 	.db #0x38	; 56	'8'
      000566 3C                    1648 	.db #0x3c	; 60
      000567 3E                    1649 	.db #0x3e	; 62
      000568                       1650 _largeenemies:
      000568 00                    1651 	.db #0x00	; 0
      000569 00                    1652 	.db #0x00	; 0
      00056A 00                    1653 	.db #0x00	; 0
      00056B 00                    1654 	.db #0x00	; 0
      00056C 00                    1655 	.db #0x00	; 0
      00056D 00                    1656 	.db #0x00	; 0
      00056E 00                    1657 	.db #0x00	; 0
      00056F 00                    1658 	.db #0x00	; 0
      000570 00                    1659 	.db #0x00	; 0
      000571 00                    1660 	.db #0x00	; 0
      000572 00                    1661 	.db #0x00	; 0
      000573 00                    1662 	.db #0x00	; 0
      000574 00                    1663 	.db #0x00	; 0
      000575 00                    1664 	.db #0x00	; 0
      000576 7F                    1665 	.db #0x7f	; 127
      000577 7F                    1666 	.db #0x7f	; 127
      000578 7F                    1667 	.db #0x7f	; 127
      000579 7F                    1668 	.db #0x7f	; 127
      00057A 00                    1669 	.db #0x00	; 0
      00057B 00                    1670 	.db #0x00	; 0
      00057C 00                    1671 	.db #0x00	; 0
      00057D 00                    1672 	.db #0x00	; 0
      00057E 00                    1673 	.db #0x00	; 0
      00057F 00                    1674 	.db #0x00	; 0
      000580 00                    1675 	.db #0x00	; 0
      000581 00                    1676 	.db #0x00	; 0
      000582 00                    1677 	.db #0x00	; 0
      000583 00                    1678 	.db #0x00	; 0
      000584 00                    1679 	.db #0x00	; 0
      000585 00                    1680 	.db #0x00	; 0
      000586 00                    1681 	.db #0x00	; 0
      000587 00                    1682 	.db #0x00	; 0
      000588 00                    1683 	.db #0x00	; 0
      000589 00                    1684 	.db #0x00	; 0
      00058A 40                    1685 	.db #0x40	; 64
      00058B 40                    1686 	.db #0x40	; 64
      00058C 60                    1687 	.db #0x60	; 96
      00058D 60                    1688 	.db #0x60	; 96
      00058E 70                    1689 	.db #0x70	; 112	'p'
      00058F 70                    1690 	.db #0x70	; 112	'p'
      000590 78                    1691 	.db #0x78	; 120	'x'
      000591 78                    1692 	.db #0x78	; 120	'x'
      000592 7C                    1693 	.db #0x7c	; 124
      000593 7C                    1694 	.db #0x7c	; 124
      000594 7E                    1695 	.db #0x7e	; 126
      000595 7E                    1696 	.db #0x7e	; 126
      000596 FF                    1697 	.db #0xff	; 255
      000597 FF                    1698 	.db #0xff	; 255
      000598 FF                    1699 	.db #0xff	; 255
      000599 FF                    1700 	.db #0xff	; 255
      00059A 7E                    1701 	.db #0x7e	; 126
      00059B 7E                    1702 	.db #0x7e	; 126
      00059C 7C                    1703 	.db #0x7c	; 124
      00059D 7C                    1704 	.db #0x7c	; 124
      00059E 78                    1705 	.db #0x78	; 120	'x'
      00059F 78                    1706 	.db #0x78	; 120	'x'
      0005A0 70                    1707 	.db #0x70	; 112	'p'
      0005A1 70                    1708 	.db #0x70	; 112	'p'
      0005A2 60                    1709 	.db #0x60	; 96
      0005A3 60                    1710 	.db #0x60	; 96
      0005A4 40                    1711 	.db #0x40	; 64
      0005A5 40                    1712 	.db #0x40	; 64
      0005A6 00                    1713 	.db #0x00	; 0
      0005A7 00                    1714 	.db #0x00	; 0
      0005A8 07                    1715 	.db #0x07	; 7
      0005A9 00                    1716 	.db #0x00	; 0
      0005AA 18                    1717 	.db #0x18	; 24
      0005AB 00                    1718 	.db #0x00	; 0
      0005AC 20                    1719 	.db #0x20	; 32
      0005AD 00                    1720 	.db #0x00	; 0
      0005AE 4C                    1721 	.db #0x4c	; 76	'L'
      0005AF 0C                    1722 	.db #0x0c	; 12
      0005B0 43                    1723 	.db #0x43	; 67	'C'
      0005B1 0F                    1724 	.db #0x0f	; 15
      0005B2 84                    1725 	.db #0x84	; 132
      0005B3 27                    1726 	.db #0x27	; 39
      0005B4 80                    1727 	.db #0x80	; 128
      0005B5 13                    1728 	.db #0x13	; 19
      0005B6 83                    1729 	.db #0x83	; 131
      0005B7 2A                    1730 	.db #0x2a	; 42
      0005B8 83                    1731 	.db #0x83	; 131
      0005B9 16                    1732 	.db #0x16	; 22
      0005BA 80                    1733 	.db #0x80	; 128
      0005BB 23                    1734 	.db #0x23	; 35
      0005BC 84                    1735 	.db #0x84	; 132
      0005BD 07                    1736 	.db #0x07	; 7
      0005BE 43                    1737 	.db #0x43	; 67	'C'
      0005BF 0F                    1738 	.db #0x0f	; 15
      0005C0 4C                    1739 	.db #0x4c	; 76	'L'
      0005C1 0C                    1740 	.db #0x0c	; 12
      0005C2 20                    1741 	.db #0x20	; 32
      0005C3 00                    1742 	.db #0x00	; 0
      0005C4 18                    1743 	.db #0x18	; 24
      0005C5 00                    1744 	.db #0x00	; 0
      0005C6 07                    1745 	.db #0x07	; 7
      0005C7 00                    1746 	.db #0x00	; 0
      0005C8 E0                    1747 	.db #0xe0	; 224
      0005C9 00                    1748 	.db #0x00	; 0
      0005CA 18                    1749 	.db #0x18	; 24
      0005CB 00                    1750 	.db #0x00	; 0
      0005CC 04                    1751 	.db #0x04	; 4
      0005CD 00                    1752 	.db #0x00	; 0
      0005CE 02                    1753 	.db #0x02	; 2
      0005CF 00                    1754 	.db #0x00	; 0
      0005D0 02                    1755 	.db #0x02	; 2
      0005D1 00                    1756 	.db #0x00	; 0
      0005D2 C1                    1757 	.db #0xc1	; 193
      0005D3 C0                    1758 	.db #0xc0	; 192
      0005D4 11                    1759 	.db #0x11	; 17
      0005D5 F0                    1760 	.db #0xf0	; 240
      0005D6 E5                    1761 	.db #0xe5	; 229
      0005D7 1C                    1762 	.db #0x1c	; 28
      0005D8 E5                    1763 	.db #0xe5	; 229
      0005D9 1C                    1764 	.db #0x1c	; 28
      0005DA 11                    1765 	.db #0x11	; 17
      0005DB F0                    1766 	.db #0xf0	; 240
      0005DC C1                    1767 	.db #0xc1	; 193
      0005DD C0                    1768 	.db #0xc0	; 192
      0005DE 02                    1769 	.db #0x02	; 2
      0005DF 00                    1770 	.db #0x00	; 0
      0005E0 02                    1771 	.db #0x02	; 2
      0005E1 00                    1772 	.db #0x00	; 0
      0005E2 04                    1773 	.db #0x04	; 4
      0005E3 00                    1774 	.db #0x00	; 0
      0005E4 18                    1775 	.db #0x18	; 24
      0005E5 00                    1776 	.db #0x00	; 0
      0005E6 E0                    1777 	.db #0xe0	; 224
      0005E7 00                    1778 	.db #0x00	; 0
      0005E8                       1779 _ProjectileTiles:
      0005E8 24                    1780 	.db #0x24	; 36
      0005E9 18                    1781 	.db #0x18	; 24
      0005EA 18                    1782 	.db #0x18	; 24
      0005EB 3C                    1783 	.db #0x3c	; 60
      0005EC 18                    1784 	.db #0x18	; 24
      0005ED 3C                    1785 	.db #0x3c	; 60
      0005EE 24                    1786 	.db #0x24	; 36
      0005EF 18                    1787 	.db #0x18	; 24
      0005F0 00                    1788 	.db #0x00	; 0
      0005F1 00                    1789 	.db #0x00	; 0
      0005F2 00                    1790 	.db #0x00	; 0
      0005F3 00                    1791 	.db #0x00	; 0
      0005F4 00                    1792 	.db #0x00	; 0
      0005F5 00                    1793 	.db #0x00	; 0
      0005F6 00                    1794 	.db #0x00	; 0
      0005F7 00                    1795 	.db #0x00	; 0
      0005F8 00                    1796 	.db #0x00	; 0
      0005F9 00                    1797 	.db #0x00	; 0
      0005FA 00                    1798 	.db #0x00	; 0
      0005FB 00                    1799 	.db #0x00	; 0
      0005FC 00                    1800 	.db #0x00	; 0
      0005FD 00                    1801 	.db #0x00	; 0
      0005FE 00                    1802 	.db #0x00	; 0
      0005FF 00                    1803 	.db #0x00	; 0
      000600 00                    1804 	.db #0x00	; 0
      000601 00                    1805 	.db #0x00	; 0
      000602 00                    1806 	.db #0x00	; 0
      000603 00                    1807 	.db #0x00	; 0
      000604 00                    1808 	.db #0x00	; 0
      000605 00                    1809 	.db #0x00	; 0
      000606 00                    1810 	.db #0x00	; 0
      000607 00                    1811 	.db #0x00	; 0
      000608 00                    1812 	.db #0x00	; 0
      000609 00                    1813 	.db #0x00	; 0
      00060A 00                    1814 	.db #0x00	; 0
      00060B 00                    1815 	.db #0x00	; 0
      00060C 09                    1816 	.db #0x09	; 9
      00060D 06                    1817 	.db #0x06	; 6
      00060E 06                    1818 	.db #0x06	; 6
      00060F 0F                    1819 	.db #0x0f	; 15
      000610 06                    1820 	.db #0x06	; 6
      000611 0F                    1821 	.db #0x0f	; 15
      000612 09                    1822 	.db #0x09	; 9
      000613 06                    1823 	.db #0x06	; 6
      000614 00                    1824 	.db #0x00	; 0
      000615 00                    1825 	.db #0x00	; 0
      000616 00                    1826 	.db #0x00	; 0
      000617 00                    1827 	.db #0x00	; 0
      000618 00                    1828 	.db #0x00	; 0
      000619 00                    1829 	.db #0x00	; 0
      00061A 00                    1830 	.db #0x00	; 0
      00061B 00                    1831 	.db #0x00	; 0
      00061C 00                    1832 	.db #0x00	; 0
      00061D 00                    1833 	.db #0x00	; 0
      00061E 00                    1834 	.db #0x00	; 0
      00061F 00                    1835 	.db #0x00	; 0
      000620 00                    1836 	.db #0x00	; 0
      000621 00                    1837 	.db #0x00	; 0
      000622 00                    1838 	.db #0x00	; 0
      000623 00                    1839 	.db #0x00	; 0
      000624 00                    1840 	.db #0x00	; 0
      000625 00                    1841 	.db #0x00	; 0
      000626 00                    1842 	.db #0x00	; 0
      000627 00                    1843 	.db #0x00	; 0
      000628 09                    1844 	.db #0x09	; 9
      000629 06                    1845 	.db #0x06	; 6
      00062A 06                    1846 	.db #0x06	; 6
      00062B 0F                    1847 	.db #0x0f	; 15
      00062C 06                    1848 	.db #0x06	; 6
      00062D 0F                    1849 	.db #0x0f	; 15
      00062E 09                    1850 	.db #0x09	; 9
      00062F 06                    1851 	.db #0x06	; 6
      000630 00                    1852 	.db #0x00	; 0
      000631 00                    1853 	.db #0x00	; 0
      000632 00                    1854 	.db #0x00	; 0
      000633 00                    1855 	.db #0x00	; 0
      000634 00                    1856 	.db #0x00	; 0
      000635 00                    1857 	.db #0x00	; 0
      000636 00                    1858 	.db #0x00	; 0
      000637 00                    1859 	.db #0x00	; 0
      000638 00                    1860 	.db #0x00	; 0
      000639 00                    1861 	.db #0x00	; 0
      00063A 00                    1862 	.db #0x00	; 0
      00063B 00                    1863 	.db #0x00	; 0
      00063C 00                    1864 	.db #0x00	; 0
      00063D 00                    1865 	.db #0x00	; 0
      00063E 00                    1866 	.db #0x00	; 0
      00063F 00                    1867 	.db #0x00	; 0
      000640 00                    1868 	.db #0x00	; 0
      000641 00                    1869 	.db #0x00	; 0
      000642 00                    1870 	.db #0x00	; 0
      000643 00                    1871 	.db #0x00	; 0
      000644 00                    1872 	.db #0x00	; 0
      000645 00                    1873 	.db #0x00	; 0
      000646 00                    1874 	.db #0x00	; 0
      000647 00                    1875 	.db #0x00	; 0
      000648 99                    1876 	.db #0x99	; 153
      000649 66                    1877 	.db #0x66	; 102	'f'
      00064A 66                    1878 	.db #0x66	; 102	'f'
      00064B FF                    1879 	.db #0xff	; 255
      00064C 66                    1880 	.db #0x66	; 102	'f'
      00064D FF                    1881 	.db #0xff	; 255
      00064E 99                    1882 	.db #0x99	; 153
      00064F 66                    1883 	.db #0x66	; 102	'f'
      000650 00                    1884 	.db #0x00	; 0
      000651 00                    1885 	.db #0x00	; 0
      000652 00                    1886 	.db #0x00	; 0
      000653 00                    1887 	.db #0x00	; 0
      000654 00                    1888 	.db #0x00	; 0
      000655 00                    1889 	.db #0x00	; 0
      000656 00                    1890 	.db #0x00	; 0
      000657 00                    1891 	.db #0x00	; 0
      000658 00                    1892 	.db #0x00	; 0
      000659 00                    1893 	.db #0x00	; 0
      00065A 00                    1894 	.db #0x00	; 0
      00065B 00                    1895 	.db #0x00	; 0
      00065C 00                    1896 	.db #0x00	; 0
      00065D 00                    1897 	.db #0x00	; 0
      00065E 00                    1898 	.db #0x00	; 0
      00065F 00                    1899 	.db #0x00	; 0
      000660 00                    1900 	.db #0x00	; 0
      000661 00                    1901 	.db #0x00	; 0
      000662 00                    1902 	.db #0x00	; 0
      000663 00                    1903 	.db #0x00	; 0
      000664 00                    1904 	.db #0x00	; 0
      000665 00                    1905 	.db #0x00	; 0
      000666 00                    1906 	.db #0x00	; 0
      000667 00                    1907 	.db #0x00	; 0
      000668 09                    1908 	.db #0x09	; 9
      000669 06                    1909 	.db #0x06	; 6
      00066A 06                    1910 	.db #0x06	; 6
      00066B 0F                    1911 	.db #0x0f	; 15
      00066C 06                    1912 	.db #0x06	; 6
      00066D 0F                    1913 	.db #0x0f	; 15
      00066E 09                    1914 	.db #0x09	; 9
      00066F 06                    1915 	.db #0x06	; 6
      000670 09                    1916 	.db #0x09	; 9
      000671 06                    1917 	.db #0x06	; 6
      000672 06                    1918 	.db #0x06	; 6
      000673 0F                    1919 	.db #0x0f	; 15
      000674 06                    1920 	.db #0x06	; 6
      000675 0F                    1921 	.db #0x0f	; 15
      000676 09                    1922 	.db #0x09	; 9
      000677 06                    1923 	.db #0x06	; 6
      000678 00                    1924 	.db #0x00	; 0
      000679 00                    1925 	.db #0x00	; 0
      00067A 00                    1926 	.db #0x00	; 0
      00067B 00                    1927 	.db #0x00	; 0
      00067C 00                    1928 	.db #0x00	; 0
      00067D 00                    1929 	.db #0x00	; 0
      00067E 00                    1930 	.db #0x00	; 0
      00067F 00                    1931 	.db #0x00	; 0
      000680 00                    1932 	.db #0x00	; 0
      000681 00                    1933 	.db #0x00	; 0
      000682 00                    1934 	.db #0x00	; 0
      000683 00                    1935 	.db #0x00	; 0
      000684 00                    1936 	.db #0x00	; 0
      000685 00                    1937 	.db #0x00	; 0
      000686 00                    1938 	.db #0x00	; 0
      000687 00                    1939 	.db #0x00	; 0
      000688 90                    1940 	.db #0x90	; 144
      000689 60                    1941 	.db #0x60	; 96
      00068A 60                    1942 	.db #0x60	; 96
      00068B F0                    1943 	.db #0xf0	; 240
      00068C 60                    1944 	.db #0x60	; 96
      00068D F0                    1945 	.db #0xf0	; 240
      00068E 90                    1946 	.db #0x90	; 144
      00068F 60                    1947 	.db #0x60	; 96
      000690 09                    1948 	.db #0x09	; 9
      000691 06                    1949 	.db #0x06	; 6
      000692 06                    1950 	.db #0x06	; 6
      000693 0F                    1951 	.db #0x0f	; 15
      000694 06                    1952 	.db #0x06	; 6
      000695 0F                    1953 	.db #0x0f	; 15
      000696 09                    1954 	.db #0x09	; 9
      000697 06                    1955 	.db #0x06	; 6
      000698 00                    1956 	.db #0x00	; 0
      000699 00                    1957 	.db #0x00	; 0
      00069A 00                    1958 	.db #0x00	; 0
      00069B 00                    1959 	.db #0x00	; 0
      00069C 00                    1960 	.db #0x00	; 0
      00069D 00                    1961 	.db #0x00	; 0
      00069E 00                    1962 	.db #0x00	; 0
      00069F 00                    1963 	.db #0x00	; 0
      0006A0 00                    1964 	.db #0x00	; 0
      0006A1 00                    1965 	.db #0x00	; 0
      0006A2 00                    1966 	.db #0x00	; 0
      0006A3 00                    1967 	.db #0x00	; 0
      0006A4 00                    1968 	.db #0x00	; 0
      0006A5 00                    1969 	.db #0x00	; 0
      0006A6 00                    1970 	.db #0x00	; 0
      0006A7 00                    1971 	.db #0x00	; 0
      0006A8 18                    1972 	.db #0x18	; 24
      0006A9 00                    1973 	.db #0x00	; 0
      0006AA 18                    1974 	.db #0x18	; 24
      0006AB 18                    1975 	.db #0x18	; 24
      0006AC 18                    1976 	.db #0x18	; 24
      0006AD 18                    1977 	.db #0x18	; 24
      0006AE 3C                    1978 	.db #0x3c	; 60
      0006AF 18                    1979 	.db #0x18	; 24
      0006B0 3C                    1980 	.db #0x3c	; 60
      0006B1 18                    1981 	.db #0x18	; 24
      0006B2 3C                    1982 	.db #0x3c	; 60
      0006B3 3C                    1983 	.db #0x3c	; 60
      0006B4 7E                    1984 	.db #0x7e	; 126
      0006B5 3C                    1985 	.db #0x3c	; 60
      0006B6 7E                    1986 	.db #0x7e	; 126
      0006B7 24                    1987 	.db #0x24	; 36
      0006B8 00                    1988 	.db #0x00	; 0
      0006B9 00                    1989 	.db #0x00	; 0
      0006BA 00                    1990 	.db #0x00	; 0
      0006BB 00                    1991 	.db #0x00	; 0
      0006BC 00                    1992 	.db #0x00	; 0
      0006BD 00                    1993 	.db #0x00	; 0
      0006BE 00                    1994 	.db #0x00	; 0
      0006BF 00                    1995 	.db #0x00	; 0
      0006C0 00                    1996 	.db #0x00	; 0
      0006C1 00                    1997 	.db #0x00	; 0
      0006C2 00                    1998 	.db #0x00	; 0
      0006C3 00                    1999 	.db #0x00	; 0
      0006C4 00                    2000 	.db #0x00	; 0
      0006C5 00                    2001 	.db #0x00	; 0
      0006C6 00                    2002 	.db #0x00	; 0
      0006C7 00                    2003 	.db #0x00	; 0
      0006C8 C0                    2004 	.db #0xc0	; 192
      0006C9 00                    2005 	.db #0x00	; 0
      0006CA F8                    2006 	.db #0xf8	; 248
      0006CB E0                    2007 	.db #0xe0	; 224
      0006CC FF                    2008 	.db #0xff	; 255
      0006CD 7E                    2009 	.db #0x7e	; 126
      0006CE FF                    2010 	.db #0xff	; 255
      0006CF 7E                    2011 	.db #0x7e	; 126
      0006D0 F8                    2012 	.db #0xf8	; 248
      0006D1 E0                    2013 	.db #0xe0	; 224
      0006D2 C0                    2014 	.db #0xc0	; 192
      0006D3 00                    2015 	.db #0x00	; 0
      0006D4 00                    2016 	.db #0x00	; 0
      0006D5 00                    2017 	.db #0x00	; 0
      0006D6 00                    2018 	.db #0x00	; 0
      0006D7 00                    2019 	.db #0x00	; 0
      0006D8 00                    2020 	.db #0x00	; 0
      0006D9 00                    2021 	.db #0x00	; 0
      0006DA 00                    2022 	.db #0x00	; 0
      0006DB 00                    2023 	.db #0x00	; 0
      0006DC 00                    2024 	.db #0x00	; 0
      0006DD 00                    2025 	.db #0x00	; 0
      0006DE 00                    2026 	.db #0x00	; 0
      0006DF 00                    2027 	.db #0x00	; 0
      0006E0 00                    2028 	.db #0x00	; 0
      0006E1 00                    2029 	.db #0x00	; 0
      0006E2 00                    2030 	.db #0x00	; 0
      0006E3 00                    2031 	.db #0x00	; 0
      0006E4 00                    2032 	.db #0x00	; 0
      0006E5 00                    2033 	.db #0x00	; 0
      0006E6 00                    2034 	.db #0x00	; 0
      0006E7 00                    2035 	.db #0x00	; 0
      0006E8 06                    2036 	.db #0x06	; 6
      0006E9 00                    2037 	.db #0x00	; 0
      0006EA 0F                    2038 	.db #0x0f	; 15
      0006EB 06                    2039 	.db #0x06	; 6
      0006EC 1F                    2040 	.db #0x1f	; 31
      0006ED 0E                    2041 	.db #0x0e	; 14
      0006EE 7E                    2042 	.db #0x7e	; 126
      0006EF 1C                    2043 	.db #0x1c	; 28
      0006F0 FC                    2044 	.db #0xfc	; 252
      0006F1 78                    2045 	.db #0x78	; 120	'x'
      0006F2 F8                    2046 	.db #0xf8	; 248
      0006F3 F0                    2047 	.db #0xf0	; 240
      0006F4 F8                    2048 	.db #0xf8	; 248
      0006F5 70                    2049 	.db #0x70	; 112	'p'
      0006F6 70                    2050 	.db #0x70	; 112	'p'
      0006F7 20                    2051 	.db #0x20	; 32
      0006F8 00                    2052 	.db #0x00	; 0
      0006F9 00                    2053 	.db #0x00	; 0
      0006FA 00                    2054 	.db #0x00	; 0
      0006FB 00                    2055 	.db #0x00	; 0
      0006FC 00                    2056 	.db #0x00	; 0
      0006FD 00                    2057 	.db #0x00	; 0
      0006FE 00                    2058 	.db #0x00	; 0
      0006FF 00                    2059 	.db #0x00	; 0
      000700 00                    2060 	.db #0x00	; 0
      000701 00                    2061 	.db #0x00	; 0
      000702 00                    2062 	.db #0x00	; 0
      000703 00                    2063 	.db #0x00	; 0
      000704 00                    2064 	.db #0x00	; 0
      000705 00                    2065 	.db #0x00	; 0
      000706 00                    2066 	.db #0x00	; 0
      000707 00                    2067 	.db #0x00	; 0
      000708                       2068 _upgrade:
      000708 01                    2069 	.db #0x01	; 1
      000709 00 00                 2070 	.dw #0x0000
      00070B 00 00                 2071 	.dw #0x0000
      00070D 00                    2072 	.db #0x00	; 0
      00070E 00                    2073 	.db #0x00	; 0
      00070F 00                    2074 	.db #0x00	; 0
      000710 70                    2075 	.db #0x70	; 112	'p'
      000711                       2076 _ammo:
      000711 01                    2077 	.db #0x01	; 1
      000712 00 00                 2078 	.dw #0x0000
      000714 00 00                 2079 	.dw #0x0000
      000716 00                    2080 	.db #0x00	; 0
      000717 01                    2081 	.db #0x01	; 1
      000718 05                    2082 	.db #0x05	; 5
      000719 72                    2083 	.db #0x72	; 114	'r'
      00071A                       2084 _health:
      00071A 01                    2085 	.db #0x01	; 1
      00071B 00 00                 2086 	.dw #0x0000
      00071D 00 00                 2087 	.dw #0x0000
      00071F 00                    2088 	.db #0x00	; 0
      000720 02                    2089 	.db #0x02	; 2
      000721 32                    2090 	.db #0x32	; 50	'2'
      000722 74                    2091 	.db #0x74	; 116	't'
      000723                       2092 _Pickups:
      000723 7E                    2093 	.db #0x7e	; 126
      000724 00                    2094 	.db #0x00	; 0
      000725 81                    2095 	.db #0x81	; 129
      000726 00                    2096 	.db #0x00	; 0
      000727 D7                    2097 	.db #0xd7	; 215
      000728 56                    2098 	.db #0x56	; 86	'V'
      000729 D7                    2099 	.db #0xd7	; 215
      00072A 56                    2100 	.db #0x56	; 86	'V'
      00072B D5                    2101 	.db #0xd5	; 213
      00072C 54                    2102 	.db #0x54	; 84	'T'
      00072D F5                    2103 	.db #0xf5	; 245
      00072E 74                    2104 	.db #0x74	; 116	't'
      00072F 81                    2105 	.db #0x81	; 129
      000730 00                    2106 	.db #0x00	; 0
      000731 7E                    2107 	.db #0x7e	; 126
      000732 00                    2108 	.db #0x00	; 0
      000733 00                    2109 	.db #0x00	; 0
      000734 00                    2110 	.db #0x00	; 0
      000735 00                    2111 	.db #0x00	; 0
      000736 00                    2112 	.db #0x00	; 0
      000737 00                    2113 	.db #0x00	; 0
      000738 00                    2114 	.db #0x00	; 0
      000739 00                    2115 	.db #0x00	; 0
      00073A 00                    2116 	.db #0x00	; 0
      00073B 00                    2117 	.db #0x00	; 0
      00073C 00                    2118 	.db #0x00	; 0
      00073D 00                    2119 	.db #0x00	; 0
      00073E 00                    2120 	.db #0x00	; 0
      00073F 00                    2121 	.db #0x00	; 0
      000740 00                    2122 	.db #0x00	; 0
      000741 00                    2123 	.db #0x00	; 0
      000742 00                    2124 	.db #0x00	; 0
      000743 7E                    2125 	.db #0x7e	; 126
      000744 00                    2126 	.db #0x00	; 0
      000745 8F                    2127 	.db #0x8f	; 143
      000746 06                    2128 	.db #0x06	; 6
      000747 9F                    2129 	.db #0x9f	; 159
      000748 0E                    2130 	.db #0x0e	; 14
      000749 FF                    2131 	.db #0xff	; 255
      00074A 1C                    2132 	.db #0x1c	; 28
      00074B FD                    2133 	.db #0xfd	; 253
      00074C 78                    2134 	.db #0x78	; 120	'x'
      00074D F9                    2135 	.db #0xf9	; 249
      00074E 70                    2136 	.db #0x70	; 112	'p'
      00074F F9                    2137 	.db #0xf9	; 249
      000750 70                    2138 	.db #0x70	; 112	'p'
      000751 7E                    2139 	.db #0x7e	; 126
      000752 00                    2140 	.db #0x00	; 0
      000753 00                    2141 	.db #0x00	; 0
      000754 00                    2142 	.db #0x00	; 0
      000755 00                    2143 	.db #0x00	; 0
      000756 00                    2144 	.db #0x00	; 0
      000757 00                    2145 	.db #0x00	; 0
      000758 00                    2146 	.db #0x00	; 0
      000759 00                    2147 	.db #0x00	; 0
      00075A 00                    2148 	.db #0x00	; 0
      00075B 00                    2149 	.db #0x00	; 0
      00075C 00                    2150 	.db #0x00	; 0
      00075D 00                    2151 	.db #0x00	; 0
      00075E 00                    2152 	.db #0x00	; 0
      00075F 00                    2153 	.db #0x00	; 0
      000760 00                    2154 	.db #0x00	; 0
      000761 00                    2155 	.db #0x00	; 0
      000762 00                    2156 	.db #0x00	; 0
      000763 7E                    2157 	.db #0x7e	; 126
      000764 00                    2158 	.db #0x00	; 0
      000765 99                    2159 	.db #0x99	; 153
      000766 18                    2160 	.db #0x18	; 24
      000767 99                    2161 	.db #0x99	; 153
      000768 18                    2162 	.db #0x18	; 24
      000769 FF                    2163 	.db #0xff	; 255
      00076A 7E                    2164 	.db #0x7e	; 126
      00076B FF                    2165 	.db #0xff	; 255
      00076C 7E                    2166 	.db #0x7e	; 126
      00076D 99                    2167 	.db #0x99	; 153
      00076E 18                    2168 	.db #0x18	; 24
      00076F 99                    2169 	.db #0x99	; 153
      000770 18                    2170 	.db #0x18	; 24
      000771 7E                    2171 	.db #0x7e	; 126
      000772 00                    2172 	.db #0x00	; 0
      000773 00                    2173 	.db #0x00	; 0
      000774 00                    2174 	.db #0x00	; 0
      000775 00                    2175 	.db #0x00	; 0
      000776 00                    2176 	.db #0x00	; 0
      000777 00                    2177 	.db #0x00	; 0
      000778 00                    2178 	.db #0x00	; 0
      000779 00                    2179 	.db #0x00	; 0
      00077A 00                    2180 	.db #0x00	; 0
      00077B 00                    2181 	.db #0x00	; 0
      00077C 00                    2182 	.db #0x00	; 0
      00077D 00                    2183 	.db #0x00	; 0
      00077E 00                    2184 	.db #0x00	; 0
      00077F 00                    2185 	.db #0x00	; 0
      000780 00                    2186 	.db #0x00	; 0
      000781 00                    2187 	.db #0x00	; 0
      000782 00                    2188 	.db #0x00	; 0
      000783                       2189 _Player1:
      000783 08                    2190 	.db #0x08	; 8
      000784 08                    2191 	.db #0x08	; 8
      000785 1C                    2192 	.db #0x1c	; 28
      000786 14                    2193 	.db #0x14	; 20
      000787 38                    2194 	.db #0x38	; 56	'8'
      000788 28                    2195 	.db #0x28	; 40
      000789 68                    2196 	.db #0x68	; 104	'h'
      00078A 58                    2197 	.db #0x58	; 88	'X'
      00078B 50                    2198 	.db #0x50	; 80	'P'
      00078C 71                    2199 	.db #0x71	; 113	'q'
      00078D D0                    2200 	.db #0xd0	; 208
      00078E B2                    2201 	.db #0xb2	; 178
      00078F D5                    2202 	.db #0xd5	; 213
      000790 B6                    2203 	.db #0xb6	; 182
      000791 D5                    2204 	.db #0xd5	; 213
      000792 B6                    2205 	.db #0xb6	; 182
      000793 D5                    2206 	.db #0xd5	; 213
      000794 B6                    2207 	.db #0xb6	; 182
      000795 CD                    2208 	.db #0xcd	; 205
      000796 BE                    2209 	.db #0xbe	; 190
      000797 C5                    2210 	.db #0xc5	; 197
      000798 BE                    2211 	.db #0xbe	; 190
      000799 65                    2212 	.db #0x65	; 101	'e'
      00079A 5E                    2213 	.db #0x5e	; 94
      00079B 3E                    2214 	.db #0x3e	; 62
      00079C 2F                    2215 	.db #0x2f	; 47
      00079D 13                    2216 	.db #0x13	; 19
      00079E 13                    2217 	.db #0x13	; 19
      00079F 06                    2218 	.db #0x06	; 6
      0007A0 07                    2219 	.db #0x07	; 7
      0007A1 07                    2220 	.db #0x07	; 7
      0007A2 05                    2221 	.db #0x05	; 5
      0007A3 10                    2222 	.db #0x10	; 16
      0007A4 10                    2223 	.db #0x10	; 16
      0007A5 38                    2224 	.db #0x38	; 56	'8'
      0007A6 28                    2225 	.db #0x28	; 40
      0007A7 1C                    2226 	.db #0x1c	; 28
      0007A8 14                    2227 	.db #0x14	; 20
      0007A9 16                    2228 	.db #0x16	; 22
      0007AA 1A                    2229 	.db #0x1a	; 26
      0007AB 0A                    2230 	.db #0x0a	; 10
      0007AC 8E                    2231 	.db #0x8e	; 142
      0007AD 0B                    2232 	.db #0x0b	; 11
      0007AE 4D                    2233 	.db #0x4d	; 77	'M'
      0007AF AB                    2234 	.db #0xab	; 171
      0007B0 6D                    2235 	.db #0x6d	; 109	'm'
      0007B1 AB                    2236 	.db #0xab	; 171
      0007B2 6D                    2237 	.db #0x6d	; 109	'm'
      0007B3 AB                    2238 	.db #0xab	; 171
      0007B4 6D                    2239 	.db #0x6d	; 109	'm'
      0007B5 B3                    2240 	.db #0xb3	; 179
      0007B6 7D                    2241 	.db #0x7d	; 125
      0007B7 A3                    2242 	.db #0xa3	; 163
      0007B8 7D                    2243 	.db #0x7d	; 125
      0007B9 A6                    2244 	.db #0xa6	; 166
      0007BA 7A                    2245 	.db #0x7a	; 122	'z'
      0007BB 7C                    2246 	.db #0x7c	; 124
      0007BC F4                    2247 	.db #0xf4	; 244
      0007BD C8                    2248 	.db #0xc8	; 200
      0007BE C8                    2249 	.db #0xc8	; 200
      0007BF 60                    2250 	.db #0x60	; 96
      0007C0 E0                    2251 	.db #0xe0	; 224
      0007C1 E0                    2252 	.db #0xe0	; 224
      0007C2 A0                    2253 	.db #0xa0	; 160
      0007C3 07                    2254 	.db #0x07	; 7
      0007C4 07                    2255 	.db #0x07	; 7
      0007C5 0F                    2256 	.db #0x0f	; 15
      0007C6 08                    2257 	.db #0x08	; 8
      0007C7 18                    2258 	.db #0x18	; 24
      0007C8 17                    2259 	.db #0x17	; 23
      0007C9 31                    2260 	.db #0x31	; 49	'1'
      0007CA 2F                    2261 	.db #0x2f	; 47
      0007CB 12                    2262 	.db #0x12	; 18
      0007CC 1E                    2263 	.db #0x1e	; 30
      0007CD DF                    2264 	.db #0xdf	; 223
      0007CE DF                    2265 	.db #0xdf	; 223
      0007CF F0                    2266 	.db #0xf0	; 240
      0007D0 7F                    2267 	.db #0x7f	; 127
      0007D1 AF                    2268 	.db #0xaf	; 175
      0007D2 F0                    2269 	.db #0xf0	; 240
      0007D3 AF                    2270 	.db #0xaf	; 175
      0007D4 F0                    2271 	.db #0xf0	; 240
      0007D5 F0                    2272 	.db #0xf0	; 240
      0007D6 7F                    2273 	.db #0x7f	; 127
      0007D7 DF                    2274 	.db #0xdf	; 223
      0007D8 DF                    2275 	.db #0xdf	; 223
      0007D9 12                    2276 	.db #0x12	; 18
      0007DA 1E                    2277 	.db #0x1e	; 30
      0007DB 31                    2278 	.db #0x31	; 49	'1'
      0007DC 2F                    2279 	.db #0x2f	; 47
      0007DD 18                    2280 	.db #0x18	; 24
      0007DE 17                    2281 	.db #0x17	; 23
      0007DF 0F                    2282 	.db #0x0f	; 15
      0007E0 08                    2283 	.db #0x08	; 8
      0007E1 07                    2284 	.db #0x07	; 7
      0007E2 07                    2285 	.db #0x07	; 7
      0007E3 E0                    2286 	.db #0xe0	; 224
      0007E4 E0                    2287 	.db #0xe0	; 224
      0007E5 F8                    2288 	.db #0xf8	; 248
      0007E6 18                    2289 	.db #0x18	; 24
      0007E7 0C                    2290 	.db #0x0c	; 12
      0007E8 F4                    2291 	.db #0xf4	; 244
      0007E9 F6                    2292 	.db #0xf6	; 246
      0007EA FA                    2293 	.db #0xfa	; 250
      0007EB 0F                    2294 	.db #0x0f	; 15
      0007EC 0D                    2295 	.db #0x0d	; 13
      0007ED C2                    2296 	.db #0xc2	; 194
      0007EE C2                    2297 	.db #0xc2	; 194
      0007EF 00                    2298 	.db #0x00	; 0
      0007F0 E0                    2299 	.db #0xe0	; 224
      0007F1 C0                    2300 	.db #0xc0	; 192
      0007F2 10                    2301 	.db #0x10	; 16
      0007F3 C0                    2302 	.db #0xc0	; 192
      0007F4 10                    2303 	.db #0x10	; 16
      0007F5 00                    2304 	.db #0x00	; 0
      0007F6 E0                    2305 	.db #0xe0	; 224
      0007F7 C2                    2306 	.db #0xc2	; 194
      0007F8 C2                    2307 	.db #0xc2	; 194
      0007F9 0F                    2308 	.db #0x0f	; 15
      0007FA 0D                    2309 	.db #0x0d	; 13
      0007FB F6                    2310 	.db #0xf6	; 246
      0007FC FA                    2311 	.db #0xfa	; 250
      0007FD 0C                    2312 	.db #0x0c	; 12
      0007FE F4                    2313 	.db #0xf4	; 244
      0007FF F8                    2314 	.db #0xf8	; 248
      000800 18                    2315 	.db #0x18	; 24
      000801 E0                    2316 	.db #0xe0	; 224
      000802 E0                    2317 	.db #0xe0	; 224
      000803 07                    2318 	.db #0x07	; 7
      000804 07                    2319 	.db #0x07	; 7
      000805 1B                    2320 	.db #0x1b	; 27
      000806 1C                    2321 	.db #0x1c	; 28
      000807 38                    2322 	.db #0x38	; 56	'8'
      000808 27                    2323 	.db #0x27	; 39
      000809 60                    2324 	.db #0x60	; 96
      00080A 5E                    2325 	.db #0x5e	; 94
      00080B 60                    2326 	.db #0x60	; 96
      00080C 5C                    2327 	.db #0x5c	; 92
      00080D 41                    2328 	.db #0x41	; 65	'A'
      00080E 79                    2329 	.db #0x79	; 121	'y'
      00080F C4                    2330 	.db #0xc4	; 196
      000810 B7                    2331 	.db #0xb7	; 183
      000811 99                    2332 	.db #0x99	; 153
      000812 FE                    2333 	.db #0xfe	; 254
      000813 B3                    2334 	.db #0xb3	; 179
      000814 EC                    2335 	.db #0xec	; 236
      000815 67                    2336 	.db #0x67	; 103	'g'
      000816 58                    2337 	.db #0x58	; 88	'X'
      000817 2E                    2338 	.db #0x2e	; 46
      000818 31                    2339 	.db #0x31	; 49	'1'
      000819 5C                    2340 	.db #0x5c	; 92
      00081A 73                    2341 	.db #0x73	; 115	's'
      00081B 69                    2342 	.db #0x69	; 105	'i'
      00081C 5E                    2343 	.db #0x5e	; 94
      00081D 37                    2344 	.db #0x37	; 55	'7'
      00081E 2D                    2345 	.db #0x2d	; 45
      00081F 1A                    2346 	.db #0x1a	; 26
      000820 1B                    2347 	.db #0x1b	; 27
      000821 01                    2348 	.db #0x01	; 1
      000822 01                    2349 	.db #0x01	; 1
      000823 E0                    2350 	.db #0xe0	; 224
      000824 E0                    2351 	.db #0xe0	; 224
      000825 90                    2352 	.db #0x90	; 144
      000826 70                    2353 	.db #0x70	; 112	'p'
      000827 C0                    2354 	.db #0xc0	; 192
      000828 C0                    2355 	.db #0xc0	; 192
      000829 00                    2356 	.db #0x00	; 0
      00082A 00                    2357 	.db #0x00	; 0
      00082B 02                    2358 	.db #0x02	; 2
      00082C 02                    2359 	.db #0x02	; 2
      00082D C1                    2360 	.db #0xc1	; 193
      00082E C3                    2361 	.db #0xc3	; 195
      00082F 65                    2362 	.db #0x65	; 101	'e'
      000830 A7                    2363 	.db #0xa7	; 167
      000831 A7                    2364 	.db #0xa7	; 167
      000832 65                    2365 	.db #0x65	; 101	'e'
      000833 A3                    2366 	.db #0xa3	; 163
      000834 65                    2367 	.db #0x65	; 101	'e'
      000835 03                    2368 	.db #0x03	; 3
      000836 CD                    2369 	.db #0xcd	; 205
      000837 41                    2370 	.db #0x41	; 65	'A'
      000838 DF                    2371 	.db #0xdf	; 223
      000839 86                    2372 	.db #0x86	; 134
      00083A BA                    2373 	.db #0xba	; 186
      00083B 86                    2374 	.db #0x86	; 134
      00083C FA                    2375 	.db #0xfa	; 250
      00083D 1C                    2376 	.db #0x1c	; 28
      00083E E4                    2377 	.db #0xe4	; 228
      00083F 78                    2378 	.db #0x78	; 120	'x'
      000840 B8                    2379 	.db #0xb8	; 184
      000841 C0                    2380 	.db #0xc0	; 192
      000842 C0                    2381 	.db #0xc0	; 192
      000843 00                    2382 	.db #0x00	; 0
      000844 00                    2383 	.db #0x00	; 0
      000845 00                    2384 	.db #0x00	; 0
      000846 00                    2385 	.db #0x00	; 0
      000847 00                    2386 	.db #0x00	; 0
      000848 00                    2387 	.db #0x00	; 0
      000849 00                    2388 	.db #0x00	; 0
      00084A 00                    2389 	.db #0x00	; 0
      00084B 00                    2390 	.db #0x00	; 0
      00084C 00                    2391 	.db #0x00	; 0
      00084D 00                    2392 	.db #0x00	; 0
      00084E 00                    2393 	.db #0x00	; 0
      00084F 00                    2394 	.db #0x00	; 0
      000850 00                    2395 	.db #0x00	; 0
      000851 00                    2396 	.db #0x00	; 0
      000852 00                    2397 	.db #0x00	; 0
      000853 00                    2398 	.db #0x00	; 0
      000854 00                    2399 	.db #0x00	; 0
      000855 00                    2400 	.db #0x00	; 0
      000856 00                    2401 	.db #0x00	; 0
      000857 00                    2402 	.db #0x00	; 0
      000858 00                    2403 	.db #0x00	; 0
      000859 00                    2404 	.db #0x00	; 0
      00085A 00                    2405 	.db #0x00	; 0
      00085B 00                    2406 	.db #0x00	; 0
      00085C 00                    2407 	.db #0x00	; 0
      00085D 00                    2408 	.db #0x00	; 0
      00085E 00                    2409 	.db #0x00	; 0
      00085F 00                    2410 	.db #0x00	; 0
      000860 00                    2411 	.db #0x00	; 0
      000861 00                    2412 	.db #0x00	; 0
      000862 00                    2413 	.db #0x00	; 0
      000863 00                    2414 	.db #0x00	; 0
      000864 00                    2415 	.db #0x00	; 0
      000865 00                    2416 	.db #0x00	; 0
      000866 00                    2417 	.db #0x00	; 0
      000867 00                    2418 	.db #0x00	; 0
      000868 00                    2419 	.db #0x00	; 0
      000869 00                    2420 	.db #0x00	; 0
      00086A 00                    2421 	.db #0x00	; 0
      00086B 00                    2422 	.db #0x00	; 0
      00086C 00                    2423 	.db #0x00	; 0
      00086D 00                    2424 	.db #0x00	; 0
      00086E 00                    2425 	.db #0x00	; 0
      00086F 00                    2426 	.db #0x00	; 0
      000870 00                    2427 	.db #0x00	; 0
      000871 00                    2428 	.db #0x00	; 0
      000872 00                    2429 	.db #0x00	; 0
      000873 00                    2430 	.db #0x00	; 0
      000874 00                    2431 	.db #0x00	; 0
      000875 00                    2432 	.db #0x00	; 0
      000876 00                    2433 	.db #0x00	; 0
      000877 00                    2434 	.db #0x00	; 0
      000878 00                    2435 	.db #0x00	; 0
      000879 00                    2436 	.db #0x00	; 0
      00087A 00                    2437 	.db #0x00	; 0
      00087B 00                    2438 	.db #0x00	; 0
      00087C 00                    2439 	.db #0x00	; 0
      00087D 00                    2440 	.db #0x00	; 0
      00087E 00                    2441 	.db #0x00	; 0
      00087F 00                    2442 	.db #0x00	; 0
      000880 00                    2443 	.db #0x00	; 0
      000881 00                    2444 	.db #0x00	; 0
      000882 00                    2445 	.db #0x00	; 0
      000883                       2446 _ex:
      000883 00                    2447 	.db #0x00	; 0
      000884 00                    2448 	.db #0x00	; 0
      000885 00                    2449 	.db #0x00	; 0
      000886 00                    2450 	.db #0x00	; 0
      000887 00                    2451 	.db #0x00	; 0
      000888 00                    2452 	.db #0x00	; 0
      000889                       2453 _Ex1:
      000889 00                    2454 	.db #0x00	; 0
      00088A 00                    2455 	.db #0x00	; 0
      00088B 00                    2456 	.db #0x00	; 0
      00088C 00                    2457 	.db #0x00	; 0
      00088D 00                    2458 	.db #0x00	; 0
      00088E 00                    2459 	.db #0x00	; 0
      00088F 00                    2460 	.db #0x00	; 0
      000890 00                    2461 	.db #0x00	; 0
      000891 00                    2462 	.db #0x00	; 0
      000892 00                    2463 	.db #0x00	; 0
      000893 04                    2464 	.db #0x04	; 4
      000894 04                    2465 	.db #0x04	; 4
      000895 06                    2466 	.db #0x06	; 6
      000896 06                    2467 	.db #0x06	; 6
      000897 06                    2468 	.db #0x06	; 6
      000898 06                    2469 	.db #0x06	; 6
      000899 00                    2470 	.db #0x00	; 0
      00089A 00                    2471 	.db #0x00	; 0
      00089B 00                    2472 	.db #0x00	; 0
      00089C 00                    2473 	.db #0x00	; 0
      00089D 03                    2474 	.db #0x03	; 3
      00089E 03                    2475 	.db #0x03	; 3
      00089F 07                    2476 	.db #0x07	; 7
      0008A0 07                    2477 	.db #0x07	; 7
      0008A1 02                    2478 	.db #0x02	; 2
      0008A2 02                    2479 	.db #0x02	; 2
      0008A3 00                    2480 	.db #0x00	; 0
      0008A4 00                    2481 	.db #0x00	; 0
      0008A5 00                    2482 	.db #0x00	; 0
      0008A6 00                    2483 	.db #0x00	; 0
      0008A7 00                    2484 	.db #0x00	; 0
      0008A8 00                    2485 	.db #0x00	; 0
      0008A9 00                    2486 	.db #0x00	; 0
      0008AA 00                    2487 	.db #0x00	; 0
      0008AB 00                    2488 	.db #0x00	; 0
      0008AC 00                    2489 	.db #0x00	; 0
      0008AD 00                    2490 	.db #0x00	; 0
      0008AE 00                    2491 	.db #0x00	; 0
      0008AF 00                    2492 	.db #0x00	; 0
      0008B0 00                    2493 	.db #0x00	; 0
      0008B1 00                    2494 	.db #0x00	; 0
      0008B2 00                    2495 	.db #0x00	; 0
      0008B3 00                    2496 	.db #0x00	; 0
      0008B4 00                    2497 	.db #0x00	; 0
      0008B5 00                    2498 	.db #0x00	; 0
      0008B6 00                    2499 	.db #0x00	; 0
      0008B7 38                    2500 	.db #0x38	; 56	'8'
      0008B8 38                    2501 	.db #0x38	; 56	'8'
      0008B9 38                    2502 	.db #0x38	; 56	'8'
      0008BA 38                    2503 	.db #0x38	; 56	'8'
      0008BB 30                    2504 	.db #0x30	; 48	'0'
      0008BC 30                    2505 	.db #0x30	; 48	'0'
      0008BD 00                    2506 	.db #0x00	; 0
      0008BE 00                    2507 	.db #0x00	; 0
      0008BF 00                    2508 	.db #0x00	; 0
      0008C0 00                    2509 	.db #0x00	; 0
      0008C1 00                    2510 	.db #0x00	; 0
      0008C2 00                    2511 	.db #0x00	; 0
      0008C3 00                    2512 	.db #0x00	; 0
      0008C4 00                    2513 	.db #0x00	; 0
      0008C5 00                    2514 	.db #0x00	; 0
      0008C6 00                    2515 	.db #0x00	; 0
      0008C7 00                    2516 	.db #0x00	; 0
      0008C8 00                    2517 	.db #0x00	; 0
      0008C9 00                    2518 	.db #0x00	; 0
      0008CA 00                    2519 	.db #0x00	; 0
      0008CB 00                    2520 	.db #0x00	; 0
      0008CC 00                    2521 	.db #0x00	; 0
      0008CD 00                    2522 	.db #0x00	; 0
      0008CE 00                    2523 	.db #0x00	; 0
      0008CF 18                    2524 	.db #0x18	; 24
      0008D0 18                    2525 	.db #0x18	; 24
      0008D1 3E                    2526 	.db #0x3e	; 62
      0008D2 3E                    2527 	.db #0x3e	; 62
      0008D3 3E                    2528 	.db #0x3e	; 62
      0008D4 3E                    2529 	.db #0x3e	; 62
      0008D5 1C                    2530 	.db #0x1c	; 28
      0008D6 1C                    2531 	.db #0x1c	; 28
      0008D7 08                    2532 	.db #0x08	; 8
      0008D8 08                    2533 	.db #0x08	; 8
      0008D9 00                    2534 	.db #0x00	; 0
      0008DA 00                    2535 	.db #0x00	; 0
      0008DB 00                    2536 	.db #0x00	; 0
      0008DC 00                    2537 	.db #0x00	; 0
      0008DD 07                    2538 	.db #0x07	; 7
      0008DE 07                    2539 	.db #0x07	; 7
      0008DF 07                    2540 	.db #0x07	; 7
      0008E0 07                    2541 	.db #0x07	; 7
      0008E1 07                    2542 	.db #0x07	; 7
      0008E2 07                    2543 	.db #0x07	; 7
      0008E3 03                    2544 	.db #0x03	; 3
      0008E4 03                    2545 	.db #0x03	; 3
      0008E5 03                    2546 	.db #0x03	; 3
      0008E6 03                    2547 	.db #0x03	; 3
      0008E7 00                    2548 	.db #0x00	; 0
      0008E8 00                    2549 	.db #0x00	; 0
      0008E9 00                    2550 	.db #0x00	; 0
      0008EA 00                    2551 	.db #0x00	; 0
      0008EB 00                    2552 	.db #0x00	; 0
      0008EC 00                    2553 	.db #0x00	; 0
      0008ED 04                    2554 	.db #0x04	; 4
      0008EE 04                    2555 	.db #0x04	; 4
      0008EF 1E                    2556 	.db #0x1e	; 30
      0008F0 1E                    2557 	.db #0x1e	; 30
      0008F1 3E                    2558 	.db #0x3e	; 62
      0008F2 3E                    2559 	.db #0x3e	; 62
      0008F3 3E                    2560 	.db #0x3e	; 62
      0008F4 3E                    2561 	.db #0x3e	; 62
      0008F5 1E                    2562 	.db #0x1e	; 30
      0008F6 1E                    2563 	.db #0x1e	; 30
      0008F7 0C                    2564 	.db #0x0c	; 12
      0008F8 0C                    2565 	.db #0x0c	; 12
      0008F9 00                    2566 	.db #0x00	; 0
      0008FA 00                    2567 	.db #0x00	; 0
      0008FB 00                    2568 	.db #0x00	; 0
      0008FC 00                    2569 	.db #0x00	; 0
      0008FD 00                    2570 	.db #0x00	; 0
      0008FE 00                    2571 	.db #0x00	; 0
      0008FF 80                    2572 	.db #0x80	; 128
      000900 80                    2573 	.db #0x80	; 128
      000901 C0                    2574 	.db #0xc0	; 192
      000902 C0                    2575 	.db #0xc0	; 192
      000903 80                    2576 	.db #0x80	; 128
      000904 80                    2577 	.db #0x80	; 128
      000905 00                    2578 	.db #0x00	; 0
      000906 00                    2579 	.db #0x00	; 0
      000907 00                    2580 	.db #0x00	; 0
      000908 00                    2581 	.db #0x00	; 0
      000909 00                    2582 	.db #0x00	; 0
      00090A 00                    2583 	.db #0x00	; 0
      00090B 20                    2584 	.db #0x20	; 32
      00090C 20                    2585 	.db #0x20	; 32
      00090D 70                    2586 	.db #0x70	; 112	'p'
      00090E 70                    2587 	.db #0x70	; 112	'p'
      00090F 70                    2588 	.db #0x70	; 112	'p'
      000910 70                    2589 	.db #0x70	; 112	'p'
      000911 60                    2590 	.db #0x60	; 96
      000912 60                    2591 	.db #0x60	; 96
      000913 00                    2592 	.db #0x00	; 0
      000914 00                    2593 	.db #0x00	; 0
      000915 00                    2594 	.db #0x00	; 0
      000916 00                    2595 	.db #0x00	; 0
      000917 00                    2596 	.db #0x00	; 0
      000918 00                    2597 	.db #0x00	; 0
      000919 00                    2598 	.db #0x00	; 0
      00091A 00                    2599 	.db #0x00	; 0
      00091B 00                    2600 	.db #0x00	; 0
      00091C 00                    2601 	.db #0x00	; 0
      00091D 00                    2602 	.db #0x00	; 0
      00091E 00                    2603 	.db #0x00	; 0
      00091F 00                    2604 	.db #0x00	; 0
      000920 00                    2605 	.db #0x00	; 0
      000921 00                    2606 	.db #0x00	; 0
      000922 00                    2607 	.db #0x00	; 0
      000923 07                    2608 	.db #0x07	; 7
      000924 07                    2609 	.db #0x07	; 7
      000925 07                    2610 	.db #0x07	; 7
      000926 07                    2611 	.db #0x07	; 7
      000927 06                    2612 	.db #0x06	; 6
      000928 06                    2613 	.db #0x06	; 6
      000929 00                    2614 	.db #0x00	; 0
      00092A 00                    2615 	.db #0x00	; 0
      00092B 04                    2616 	.db #0x04	; 4
      00092C 04                    2617 	.db #0x04	; 4
      00092D 0E                    2618 	.db #0x0e	; 14
      00092E 0E                    2619 	.db #0x0e	; 14
      00092F 0E                    2620 	.db #0x0e	; 14
      000930 0E                    2621 	.db #0x0e	; 14
      000931 00                    2622 	.db #0x00	; 0
      000932 00                    2623 	.db #0x00	; 0
      000933 00                    2624 	.db #0x00	; 0
      000934 00                    2625 	.db #0x00	; 0
      000935 00                    2626 	.db #0x00	; 0
      000936 00                    2627 	.db #0x00	; 0
      000937 00                    2628 	.db #0x00	; 0
      000938 00                    2629 	.db #0x00	; 0
      000939 00                    2630 	.db #0x00	; 0
      00093A 00                    2631 	.db #0x00	; 0
      00093B 00                    2632 	.db #0x00	; 0
      00093C 00                    2633 	.db #0x00	; 0
      00093D 00                    2634 	.db #0x00	; 0
      00093E 00                    2635 	.db #0x00	; 0
      00093F 00                    2636 	.db #0x00	; 0
      000940 00                    2637 	.db #0x00	; 0
      000941 00                    2638 	.db #0x00	; 0
      000942 00                    2639 	.db #0x00	; 0
      000943 00                    2640 	.db #0x00	; 0
      000944 00                    2641 	.db #0x00	; 0
      000945 00                    2642 	.db #0x00	; 0
      000946 00                    2643 	.db #0x00	; 0
      000947 00                    2644 	.db #0x00	; 0
      000948 00                    2645 	.db #0x00	; 0
      000949 00                    2646 	.db #0x00	; 0
      00094A 00                    2647 	.db #0x00	; 0
      00094B 40                    2648 	.db #0x40	; 64
      00094C 40                    2649 	.db #0x40	; 64
      00094D 60                    2650 	.db #0x60	; 96
      00094E 60                    2651 	.db #0x60	; 96
      00094F 00                    2652 	.db #0x00	; 0
      000950 00                    2653 	.db #0x00	; 0
      000951 00                    2654 	.db #0x00	; 0
      000952 00                    2655 	.db #0x00	; 0
      000953 00                    2656 	.db #0x00	; 0
      000954 00                    2657 	.db #0x00	; 0
      000955 00                    2658 	.db #0x00	; 0
      000956 00                    2659 	.db #0x00	; 0
      000957 00                    2660 	.db #0x00	; 0
      000958 00                    2661 	.db #0x00	; 0
      000959 00                    2662 	.db #0x00	; 0
      00095A 00                    2663 	.db #0x00	; 0
      00095B 00                    2664 	.db #0x00	; 0
      00095C 00                    2665 	.db #0x00	; 0
      00095D 00                    2666 	.db #0x00	; 0
      00095E 00                    2667 	.db #0x00	; 0
      00095F 00                    2668 	.db #0x00	; 0
      000960 00                    2669 	.db #0x00	; 0
      000961 00                    2670 	.db #0x00	; 0
      000962 00                    2671 	.db #0x00	; 0
      000963 00                    2672 	.db #0x00	; 0
      000964 00                    2673 	.db #0x00	; 0
      000965 04                    2674 	.db #0x04	; 4
      000966 04                    2675 	.db #0x04	; 4
      000967 06                    2676 	.db #0x06	; 6
      000968 06                    2677 	.db #0x06	; 6
      000969 00                    2678 	.db #0x00	; 0
      00096A 00                    2679 	.db #0x00	; 0
      00096B 02                    2680 	.db #0x02	; 2
      00096C 02                    2681 	.db #0x02	; 2
      00096D 02                    2682 	.db #0x02	; 2
      00096E 02                    2683 	.db #0x02	; 2
      00096F 00                    2684 	.db #0x00	; 0
      000970 00                    2685 	.db #0x00	; 0
      000971 00                    2686 	.db #0x00	; 0
      000972 00                    2687 	.db #0x00	; 0
      000973 00                    2688 	.db #0x00	; 0
      000974 00                    2689 	.db #0x00	; 0
      000975 00                    2690 	.db #0x00	; 0
      000976 00                    2691 	.db #0x00	; 0
      000977 00                    2692 	.db #0x00	; 0
      000978 00                    2693 	.db #0x00	; 0
      000979 00                    2694 	.db #0x00	; 0
      00097A 00                    2695 	.db #0x00	; 0
      00097B 00                    2696 	.db #0x00	; 0
      00097C 00                    2697 	.db #0x00	; 0
      00097D 00                    2698 	.db #0x00	; 0
      00097E 00                    2699 	.db #0x00	; 0
      00097F 00                    2700 	.db #0x00	; 0
      000980 00                    2701 	.db #0x00	; 0
      000981 00                    2702 	.db #0x00	; 0
      000982 00                    2703 	.db #0x00	; 0
      000983 00                    2704 	.db #0x00	; 0
      000984 00                    2705 	.db #0x00	; 0
      000985 00                    2706 	.db #0x00	; 0
      000986 00                    2707 	.db #0x00	; 0
      000987 00                    2708 	.db #0x00	; 0
      000988 00                    2709 	.db #0x00	; 0
      000989                       2710 _Ex2:
      000989 00                    2711 	.db #0x00	; 0
      00098A 00                    2712 	.db #0x00	; 0
      00098B 00                    2713 	.db #0x00	; 0
      00098C 00                    2714 	.db #0x00	; 0
      00098D 00                    2715 	.db #0x00	; 0
      00098E 00                    2716 	.db #0x00	; 0
      00098F 01                    2717 	.db #0x01	; 1
      000990 01                    2718 	.db #0x01	; 1
      000991 03                    2719 	.db #0x03	; 3
      000992 03                    2720 	.db #0x03	; 3
      000993 03                    2721 	.db #0x03	; 3
      000994 03                    2722 	.db #0x03	; 3
      000995 00                    2723 	.db #0x00	; 0
      000996 00                    2724 	.db #0x00	; 0
      000997 06                    2725 	.db #0x06	; 6
      000998 06                    2726 	.db #0x06	; 6
      000999 0E                    2727 	.db #0x0e	; 14
      00099A 0E                    2728 	.db #0x0e	; 14
      00099B 0E                    2729 	.db #0x0e	; 14
      00099C 0E                    2730 	.db #0x0e	; 14
      00099D 00                    2731 	.db #0x00	; 0
      00099E 00                    2732 	.db #0x00	; 0
      00099F 00                    2733 	.db #0x00	; 0
      0009A0 00                    2734 	.db #0x00	; 0
      0009A1 00                    2735 	.db #0x00	; 0
      0009A2 00                    2736 	.db #0x00	; 0
      0009A3 00                    2737 	.db #0x00	; 0
      0009A4 00                    2738 	.db #0x00	; 0
      0009A5 00                    2739 	.db #0x00	; 0
      0009A6 00                    2740 	.db #0x00	; 0
      0009A7 00                    2741 	.db #0x00	; 0
      0009A8 00                    2742 	.db #0x00	; 0
      0009A9 00                    2743 	.db #0x00	; 0
      0009AA 00                    2744 	.db #0x00	; 0
      0009AB 00                    2745 	.db #0x00	; 0
      0009AC 00                    2746 	.db #0x00	; 0
      0009AD 00                    2747 	.db #0x00	; 0
      0009AE 00                    2748 	.db #0x00	; 0
      0009AF 80                    2749 	.db #0x80	; 128
      0009B0 80                    2750 	.db #0x80	; 128
      0009B1 80                    2751 	.db #0x80	; 128
      0009B2 80                    2752 	.db #0x80	; 128
      0009B3 00                    2753 	.db #0x00	; 0
      0009B4 00                    2754 	.db #0x00	; 0
      0009B5 60                    2755 	.db #0x60	; 96
      0009B6 60                    2756 	.db #0x60	; 96
      0009B7 60                    2757 	.db #0x60	; 96
      0009B8 60                    2758 	.db #0x60	; 96
      0009B9 00                    2759 	.db #0x00	; 0
      0009BA 00                    2760 	.db #0x00	; 0
      0009BB C0                    2761 	.db #0xc0	; 192
      0009BC C0                    2762 	.db #0xc0	; 192
      0009BD C0                    2763 	.db #0xc0	; 192
      0009BE C0                    2764 	.db #0xc0	; 192
      0009BF C0                    2765 	.db #0xc0	; 192
      0009C0 C0                    2766 	.db #0xc0	; 192
      0009C1 00                    2767 	.db #0x00	; 0
      0009C2 00                    2768 	.db #0x00	; 0
      0009C3 00                    2769 	.db #0x00	; 0
      0009C4 00                    2770 	.db #0x00	; 0
      0009C5 00                    2771 	.db #0x00	; 0
      0009C6 00                    2772 	.db #0x00	; 0
      0009C7 00                    2773 	.db #0x00	; 0
      0009C8 00                    2774 	.db #0x00	; 0
      0009C9 00                    2775 	.db #0x00	; 0
      0009CA 00                    2776 	.db #0x00	; 0
      0009CB 00                    2777 	.db #0x00	; 0
      0009CC 00                    2778 	.db #0x00	; 0
      0009CD 03                    2779 	.db #0x03	; 3
      0009CE 03                    2780 	.db #0x03	; 3
      0009CF 03                    2781 	.db #0x03	; 3
      0009D0 03                    2782 	.db #0x03	; 3
      0009D1 03                    2783 	.db #0x03	; 3
      0009D2 03                    2784 	.db #0x03	; 3
      0009D3 01                    2785 	.db #0x01	; 1
      0009D4 01                    2786 	.db #0x01	; 1
      0009D5 00                    2787 	.db #0x00	; 0
      0009D6 00                    2788 	.db #0x00	; 0
      0009D7 00                    2789 	.db #0x00	; 0
      0009D8 00                    2790 	.db #0x00	; 0
      0009D9 00                    2791 	.db #0x00	; 0
      0009DA 00                    2792 	.db #0x00	; 0
      0009DB 1C                    2793 	.db #0x1c	; 28
      0009DC 1C                    2794 	.db #0x1c	; 28
      0009DD 3C                    2795 	.db #0x3c	; 60
      0009DE 3C                    2796 	.db #0x3c	; 60
      0009DF 3C                    2797 	.db #0x3c	; 60
      0009E0 3C                    2798 	.db #0x3c	; 60
      0009E1 30                    2799 	.db #0x30	; 48	'0'
      0009E2 30                    2800 	.db #0x30	; 48	'0'
      0009E3 00                    2801 	.db #0x00	; 0
      0009E4 00                    2802 	.db #0x00	; 0
      0009E5 00                    2803 	.db #0x00	; 0
      0009E6 00                    2804 	.db #0x00	; 0
      0009E7 00                    2805 	.db #0x00	; 0
      0009E8 00                    2806 	.db #0x00	; 0
      0009E9 00                    2807 	.db #0x00	; 0
      0009EA 00                    2808 	.db #0x00	; 0
      0009EB 00                    2809 	.db #0x00	; 0
      0009EC 00                    2810 	.db #0x00	; 0
      0009ED 80                    2811 	.db #0x80	; 128
      0009EE 80                    2812 	.db #0x80	; 128
      0009EF C0                    2813 	.db #0xc0	; 192
      0009F0 C0                    2814 	.db #0xc0	; 192
      0009F1 C0                    2815 	.db #0xc0	; 192
      0009F2 C0                    2816 	.db #0xc0	; 192
      0009F3 DE                    2817 	.db #0xde	; 222
      0009F4 DE                    2818 	.db #0xde	; 222
      0009F5 9E                    2819 	.db #0x9e	; 158
      0009F6 9E                    2820 	.db #0x9e	; 158
      0009F7 0E                    2821 	.db #0x0e	; 14
      0009F8 0E                    2822 	.db #0x0e	; 14
      0009F9 00                    2823 	.db #0x00	; 0
      0009FA 00                    2824 	.db #0x00	; 0
      0009FB 00                    2825 	.db #0x00	; 0
      0009FC 00                    2826 	.db #0x00	; 0
      0009FD 38                    2827 	.db #0x38	; 56	'8'
      0009FE 38                    2828 	.db #0x38	; 56	'8'
      0009FF 3C                    2829 	.db #0x3c	; 60
      000A00 3C                    2830 	.db #0x3c	; 60
      000A01 3C                    2831 	.db #0x3c	; 60
      000A02 3C                    2832 	.db #0x3c	; 60
      000A03 3C                    2833 	.db #0x3c	; 60
      000A04 3C                    2834 	.db #0x3c	; 60
      000A05 1C                    2835 	.db #0x1c	; 28
      000A06 1C                    2836 	.db #0x1c	; 28
      000A07 00                    2837 	.db #0x00	; 0
      000A08 00                    2838 	.db #0x00	; 0
      000A09 00                    2839 	.db #0x00	; 0
      000A0A 00                    2840 	.db #0x00	; 0
      000A0B 04                    2841 	.db #0x04	; 4
      000A0C 04                    2842 	.db #0x04	; 4
      000A0D 07                    2843 	.db #0x07	; 7
      000A0E 07                    2844 	.db #0x07	; 7
      000A0F 07                    2845 	.db #0x07	; 7
      000A10 07                    2846 	.db #0x07	; 7
      000A11 00                    2847 	.db #0x00	; 0
      000A12 00                    2848 	.db #0x00	; 0
      000A13 00                    2849 	.db #0x00	; 0
      000A14 00                    2850 	.db #0x00	; 0
      000A15 00                    2851 	.db #0x00	; 0
      000A16 00                    2852 	.db #0x00	; 0
      000A17 00                    2853 	.db #0x00	; 0
      000A18 00                    2854 	.db #0x00	; 0
      000A19 00                    2855 	.db #0x00	; 0
      000A1A 00                    2856 	.db #0x00	; 0
      000A1B 00                    2857 	.db #0x00	; 0
      000A1C 00                    2858 	.db #0x00	; 0
      000A1D 00                    2859 	.db #0x00	; 0
      000A1E 00                    2860 	.db #0x00	; 0
      000A1F 00                    2861 	.db #0x00	; 0
      000A20 00                    2862 	.db #0x00	; 0
      000A21 38                    2863 	.db #0x38	; 56	'8'
      000A22 38                    2864 	.db #0x38	; 56	'8'
      000A23 18                    2865 	.db #0x18	; 24
      000A24 18                    2866 	.db #0x18	; 24
      000A25 00                    2867 	.db #0x00	; 0
      000A26 00                    2868 	.db #0x00	; 0
      000A27 00                    2869 	.db #0x00	; 0
      000A28 00                    2870 	.db #0x00	; 0
      000A29 00                    2871 	.db #0x00	; 0
      000A2A 00                    2872 	.db #0x00	; 0
      000A2B 00                    2873 	.db #0x00	; 0
      000A2C 00                    2874 	.db #0x00	; 0
      000A2D 00                    2875 	.db #0x00	; 0
      000A2E 00                    2876 	.db #0x00	; 0
      000A2F 00                    2877 	.db #0x00	; 0
      000A30 00                    2878 	.db #0x00	; 0
      000A31 00                    2879 	.db #0x00	; 0
      000A32 00                    2880 	.db #0x00	; 0
      000A33 0C                    2881 	.db #0x0c	; 12
      000A34 0C                    2882 	.db #0x0c	; 12
      000A35 0E                    2883 	.db #0x0e	; 14
      000A36 0E                    2884 	.db #0x0e	; 14
      000A37 06                    2885 	.db #0x06	; 6
      000A38 06                    2886 	.db #0x06	; 6
      000A39 00                    2887 	.db #0x00	; 0
      000A3A 00                    2888 	.db #0x00	; 0
      000A3B 00                    2889 	.db #0x00	; 0
      000A3C 00                    2890 	.db #0x00	; 0
      000A3D 00                    2891 	.db #0x00	; 0
      000A3E 00                    2892 	.db #0x00	; 0
      000A3F 00                    2893 	.db #0x00	; 0
      000A40 00                    2894 	.db #0x00	; 0
      000A41 06                    2895 	.db #0x06	; 6
      000A42 06                    2896 	.db #0x06	; 6
      000A43 0E                    2897 	.db #0x0e	; 14
      000A44 0E                    2898 	.db #0x0e	; 14
      000A45 04                    2899 	.db #0x04	; 4
      000A46 04                    2900 	.db #0x04	; 4
      000A47 00                    2901 	.db #0x00	; 0
      000A48 00                    2902 	.db #0x00	; 0
      000A49 0E                    2903 	.db #0x0e	; 14
      000A4A 0E                    2904 	.db #0x0e	; 14
      000A4B 04                    2905 	.db #0x04	; 4
      000A4C 04                    2906 	.db #0x04	; 4
      000A4D 00                    2907 	.db #0x00	; 0
      000A4E 00                    2908 	.db #0x00	; 0
      000A4F 00                    2909 	.db #0x00	; 0
      000A50 00                    2910 	.db #0x00	; 0
      000A51 00                    2911 	.db #0x00	; 0
      000A52 00                    2912 	.db #0x00	; 0
      000A53 00                    2913 	.db #0x00	; 0
      000A54 00                    2914 	.db #0x00	; 0
      000A55 00                    2915 	.db #0x00	; 0
      000A56 00                    2916 	.db #0x00	; 0
      000A57 00                    2917 	.db #0x00	; 0
      000A58 00                    2918 	.db #0x00	; 0
      000A59 00                    2919 	.db #0x00	; 0
      000A5A 00                    2920 	.db #0x00	; 0
      000A5B 00                    2921 	.db #0x00	; 0
      000A5C 00                    2922 	.db #0x00	; 0
      000A5D 00                    2923 	.db #0x00	; 0
      000A5E 00                    2924 	.db #0x00	; 0
      000A5F 00                    2925 	.db #0x00	; 0
      000A60 00                    2926 	.db #0x00	; 0
      000A61 20                    2927 	.db #0x20	; 32
      000A62 20                    2928 	.db #0x20	; 32
      000A63 30                    2929 	.db #0x30	; 48	'0'
      000A64 30                    2930 	.db #0x30	; 48	'0'
      000A65 00                    2931 	.db #0x00	; 0
      000A66 00                    2932 	.db #0x00	; 0
      000A67 00                    2933 	.db #0x00	; 0
      000A68 00                    2934 	.db #0x00	; 0
      000A69 00                    2935 	.db #0x00	; 0
      000A6A 00                    2936 	.db #0x00	; 0
      000A6B 00                    2937 	.db #0x00	; 0
      000A6C 00                    2938 	.db #0x00	; 0
      000A6D 00                    2939 	.db #0x00	; 0
      000A6E 00                    2940 	.db #0x00	; 0
      000A6F 00                    2941 	.db #0x00	; 0
      000A70 00                    2942 	.db #0x00	; 0
      000A71 00                    2943 	.db #0x00	; 0
      000A72 00                    2944 	.db #0x00	; 0
      000A73 00                    2945 	.db #0x00	; 0
      000A74 00                    2946 	.db #0x00	; 0
      000A75 04                    2947 	.db #0x04	; 4
      000A76 04                    2948 	.db #0x04	; 4
      000A77 03                    2949 	.db #0x03	; 3
      000A78 03                    2950 	.db #0x03	; 3
      000A79 00                    2951 	.db #0x00	; 0
      000A7A 00                    2952 	.db #0x00	; 0
      000A7B 00                    2953 	.db #0x00	; 0
      000A7C 00                    2954 	.db #0x00	; 0
      000A7D 00                    2955 	.db #0x00	; 0
      000A7E 00                    2956 	.db #0x00	; 0
      000A7F 00                    2957 	.db #0x00	; 0
      000A80 00                    2958 	.db #0x00	; 0
      000A81 00                    2959 	.db #0x00	; 0
      000A82 00                    2960 	.db #0x00	; 0
      000A83 02                    2961 	.db #0x02	; 2
      000A84 02                    2962 	.db #0x02	; 2
      000A85 02                    2963 	.db #0x02	; 2
      000A86 02                    2964 	.db #0x02	; 2
      000A87 00                    2965 	.db #0x00	; 0
      000A88 00                    2966 	.db #0x00	; 0
      000A89                       2967 _Ex3:
      000A89 00                    2968 	.db #0x00	; 0
      000A8A 00                    2969 	.db #0x00	; 0
      000A8B 00                    2970 	.db #0x00	; 0
      000A8C 00                    2971 	.db #0x00	; 0
      000A8D 00                    2972 	.db #0x00	; 0
      000A8E 00                    2973 	.db #0x00	; 0
      000A8F 00                    2974 	.db #0x00	; 0
      000A90 00                    2975 	.db #0x00	; 0
      000A91 00                    2976 	.db #0x00	; 0
      000A92 00                    2977 	.db #0x00	; 0
      000A93 00                    2978 	.db #0x00	; 0
      000A94 00                    2979 	.db #0x00	; 0
      000A95 02                    2980 	.db #0x02	; 2
      000A96 02                    2981 	.db #0x02	; 2
      000A97 07                    2982 	.db #0x07	; 7
      000A98 07                    2983 	.db #0x07	; 7
      000A99 02                    2984 	.db #0x02	; 2
      000A9A 02                    2985 	.db #0x02	; 2
      000A9B 00                    2986 	.db #0x00	; 0
      000A9C 00                    2987 	.db #0x00	; 0
      000A9D 00                    2988 	.db #0x00	; 0
      000A9E 00                    2989 	.db #0x00	; 0
      000A9F 00                    2990 	.db #0x00	; 0
      000AA0 00                    2991 	.db #0x00	; 0
      000AA1 00                    2992 	.db #0x00	; 0
      000AA2 00                    2993 	.db #0x00	; 0
      000AA3 00                    2994 	.db #0x00	; 0
      000AA4 00                    2995 	.db #0x00	; 0
      000AA5 00                    2996 	.db #0x00	; 0
      000AA6 00                    2997 	.db #0x00	; 0
      000AA7 00                    2998 	.db #0x00	; 0
      000AA8 00                    2999 	.db #0x00	; 0
      000AA9 00                    3000 	.db #0x00	; 0
      000AAA 00                    3001 	.db #0x00	; 0
      000AAB 00                    3002 	.db #0x00	; 0
      000AAC 00                    3003 	.db #0x00	; 0
      000AAD 00                    3004 	.db #0x00	; 0
      000AAE 00                    3005 	.db #0x00	; 0
      000AAF 00                    3006 	.db #0x00	; 0
      000AB0 00                    3007 	.db #0x00	; 0
      000AB1 00                    3008 	.db #0x00	; 0
      000AB2 00                    3009 	.db #0x00	; 0
      000AB3 00                    3010 	.db #0x00	; 0
      000AB4 00                    3011 	.db #0x00	; 0
      000AB5 20                    3012 	.db #0x20	; 32
      000AB6 20                    3013 	.db #0x20	; 32
      000AB7 70                    3014 	.db #0x70	; 112	'p'
      000AB8 70                    3015 	.db #0x70	; 112	'p'
      000AB9 20                    3016 	.db #0x20	; 32
      000ABA 20                    3017 	.db #0x20	; 32
      000ABB 00                    3018 	.db #0x00	; 0
      000ABC 00                    3019 	.db #0x00	; 0
      000ABD 00                    3020 	.db #0x00	; 0
      000ABE 00                    3021 	.db #0x00	; 0
      000ABF 00                    3022 	.db #0x00	; 0
      000AC0 00                    3023 	.db #0x00	; 0
      000AC1 00                    3024 	.db #0x00	; 0
      000AC2 00                    3025 	.db #0x00	; 0
      000AC3 00                    3026 	.db #0x00	; 0
      000AC4 00                    3027 	.db #0x00	; 0
      000AC5 00                    3028 	.db #0x00	; 0
      000AC6 00                    3029 	.db #0x00	; 0
      000AC7 00                    3030 	.db #0x00	; 0
      000AC8 00                    3031 	.db #0x00	; 0
      000AC9 00                    3032 	.db #0x00	; 0
      000ACA 00                    3033 	.db #0x00	; 0
      000ACB 00                    3034 	.db #0x00	; 0
      000ACC 00                    3035 	.db #0x00	; 0
      000ACD 00                    3036 	.db #0x00	; 0
      000ACE 00                    3037 	.db #0x00	; 0
      000ACF 00                    3038 	.db #0x00	; 0
      000AD0 00                    3039 	.db #0x00	; 0
      000AD1 00                    3040 	.db #0x00	; 0
      000AD2 00                    3041 	.db #0x00	; 0
      000AD3 10                    3042 	.db #0x10	; 16
      000AD4 10                    3043 	.db #0x10	; 16
      000AD5 38                    3044 	.db #0x38	; 56	'8'
      000AD6 38                    3045 	.db #0x38	; 56	'8'
      000AD7 3E                    3046 	.db #0x3e	; 62
      000AD8 3E                    3047 	.db #0x3e	; 62
      000AD9 18                    3048 	.db #0x18	; 24
      000ADA 18                    3049 	.db #0x18	; 24
      000ADB 00                    3050 	.db #0x00	; 0
      000ADC 00                    3051 	.db #0x00	; 0
      000ADD 00                    3052 	.db #0x00	; 0
      000ADE 00                    3053 	.db #0x00	; 0
      000ADF 00                    3054 	.db #0x00	; 0
      000AE0 00                    3055 	.db #0x00	; 0
      000AE1 00                    3056 	.db #0x00	; 0
      000AE2 00                    3057 	.db #0x00	; 0
      000AE3 00                    3058 	.db #0x00	; 0
      000AE4 00                    3059 	.db #0x00	; 0
      000AE5 00                    3060 	.db #0x00	; 0
      000AE6 00                    3061 	.db #0x00	; 0
      000AE7 00                    3062 	.db #0x00	; 0
      000AE8 00                    3063 	.db #0x00	; 0
      000AE9 00                    3064 	.db #0x00	; 0
      000AEA 00                    3065 	.db #0x00	; 0
      000AEB 00                    3066 	.db #0x00	; 0
      000AEC 00                    3067 	.db #0x00	; 0
      000AED 00                    3068 	.db #0x00	; 0
      000AEE 00                    3069 	.db #0x00	; 0
      000AEF 00                    3070 	.db #0x00	; 0
      000AF0 00                    3071 	.db #0x00	; 0
      000AF1 00                    3072 	.db #0x00	; 0
      000AF2 00                    3073 	.db #0x00	; 0
      000AF3 00                    3074 	.db #0x00	; 0
      000AF4 00                    3075 	.db #0x00	; 0
      000AF5 1C                    3076 	.db #0x1c	; 28
      000AF6 1C                    3077 	.db #0x1c	; 28
      000AF7 7C                    3078 	.db #0x7c	; 124
      000AF8 7C                    3079 	.db #0x7c	; 124
      000AF9 1C                    3080 	.db #0x1c	; 28
      000AFA 1C                    3081 	.db #0x1c	; 28
      000AFB 08                    3082 	.db #0x08	; 8
      000AFC 08                    3083 	.db #0x08	; 8
      000AFD 00                    3084 	.db #0x00	; 0
      000AFE 00                    3085 	.db #0x00	; 0
      000AFF 00                    3086 	.db #0x00	; 0
      000B00 00                    3087 	.db #0x00	; 0
      000B01 00                    3088 	.db #0x00	; 0
      000B02 00                    3089 	.db #0x00	; 0
      000B03 00                    3090 	.db #0x00	; 0
      000B04 00                    3091 	.db #0x00	; 0
      000B05 00                    3092 	.db #0x00	; 0
      000B06 00                    3093 	.db #0x00	; 0
      000B07 00                    3094 	.db #0x00	; 0
      000B08 00                    3095 	.db #0x00	; 0
      000B09 00                    3096 	.db #0x00	; 0
      000B0A 00                    3097 	.db #0x00	; 0
      000B0B 00                    3098 	.db #0x00	; 0
      000B0C 00                    3099 	.db #0x00	; 0
      000B0D 00                    3100 	.db #0x00	; 0
      000B0E 00                    3101 	.db #0x00	; 0
      000B0F 00                    3102 	.db #0x00	; 0
      000B10 00                    3103 	.db #0x00	; 0
      000B11 00                    3104 	.db #0x00	; 0
      000B12 00                    3105 	.db #0x00	; 0
      000B13 00                    3106 	.db #0x00	; 0
      000B14 00                    3107 	.db #0x00	; 0
      000B15 28                    3108 	.db #0x28	; 40
      000B16 28                    3109 	.db #0x28	; 40
      000B17 30                    3110 	.db #0x30	; 48	'0'
      000B18 30                    3111 	.db #0x30	; 48	'0'
      000B19 38                    3112 	.db #0x38	; 56	'8'
      000B1A 38                    3113 	.db #0x38	; 56	'8'
      000B1B 10                    3114 	.db #0x10	; 16
      000B1C 10                    3115 	.db #0x10	; 16
      000B1D 00                    3116 	.db #0x00	; 0
      000B1E 00                    3117 	.db #0x00	; 0
      000B1F 00                    3118 	.db #0x00	; 0
      000B20 00                    3119 	.db #0x00	; 0
      000B21 00                    3120 	.db #0x00	; 0
      000B22 00                    3121 	.db #0x00	; 0
      000B23 00                    3122 	.db #0x00	; 0
      000B24 00                    3123 	.db #0x00	; 0
      000B25 00                    3124 	.db #0x00	; 0
      000B26 00                    3125 	.db #0x00	; 0
      000B27 00                    3126 	.db #0x00	; 0
      000B28 00                    3127 	.db #0x00	; 0
      000B29 00                    3128 	.db #0x00	; 0
      000B2A 00                    3129 	.db #0x00	; 0
      000B2B 00                    3130 	.db #0x00	; 0
      000B2C 00                    3131 	.db #0x00	; 0
      000B2D 00                    3132 	.db #0x00	; 0
      000B2E 00                    3133 	.db #0x00	; 0
      000B2F 00                    3134 	.db #0x00	; 0
      000B30 00                    3135 	.db #0x00	; 0
      000B31 00                    3136 	.db #0x00	; 0
      000B32 00                    3137 	.db #0x00	; 0
      000B33 00                    3138 	.db #0x00	; 0
      000B34 00                    3139 	.db #0x00	; 0
      000B35 04                    3140 	.db #0x04	; 4
      000B36 04                    3141 	.db #0x04	; 4
      000B37 0E                    3142 	.db #0x0e	; 14
      000B38 0E                    3143 	.db #0x0e	; 14
      000B39 0E                    3144 	.db #0x0e	; 14
      000B3A 0E                    3145 	.db #0x0e	; 14
      000B3B 00                    3146 	.db #0x00	; 0
      000B3C 00                    3147 	.db #0x00	; 0
      000B3D 00                    3148 	.db #0x00	; 0
      000B3E 00                    3149 	.db #0x00	; 0
      000B3F 00                    3150 	.db #0x00	; 0
      000B40 00                    3151 	.db #0x00	; 0
      000B41 00                    3152 	.db #0x00	; 0
      000B42 00                    3153 	.db #0x00	; 0
      000B43 00                    3154 	.db #0x00	; 0
      000B44 00                    3155 	.db #0x00	; 0
      000B45 00                    3156 	.db #0x00	; 0
      000B46 00                    3157 	.db #0x00	; 0
      000B47 00                    3158 	.db #0x00	; 0
      000B48 00                    3159 	.db #0x00	; 0
      000B49 00                    3160 	.db #0x00	; 0
      000B4A 00                    3161 	.db #0x00	; 0
      000B4B 00                    3162 	.db #0x00	; 0
      000B4C 00                    3163 	.db #0x00	; 0
      000B4D 00                    3164 	.db #0x00	; 0
      000B4E 00                    3165 	.db #0x00	; 0
      000B4F 00                    3166 	.db #0x00	; 0
      000B50 00                    3167 	.db #0x00	; 0
      000B51 00                    3168 	.db #0x00	; 0
      000B52 00                    3169 	.db #0x00	; 0
      000B53 00                    3170 	.db #0x00	; 0
      000B54 00                    3171 	.db #0x00	; 0
      000B55 00                    3172 	.db #0x00	; 0
      000B56 00                    3173 	.db #0x00	; 0
      000B57 60                    3174 	.db #0x60	; 96
      000B58 60                    3175 	.db #0x60	; 96
      000B59 40                    3176 	.db #0x40	; 64
      000B5A 40                    3177 	.db #0x40	; 64
      000B5B 00                    3178 	.db #0x00	; 0
      000B5C 00                    3179 	.db #0x00	; 0
      000B5D 00                    3180 	.db #0x00	; 0
      000B5E 00                    3181 	.db #0x00	; 0
      000B5F 00                    3182 	.db #0x00	; 0
      000B60 00                    3183 	.db #0x00	; 0
      000B61 00                    3184 	.db #0x00	; 0
      000B62 00                    3185 	.db #0x00	; 0
      000B63 00                    3186 	.db #0x00	; 0
      000B64 00                    3187 	.db #0x00	; 0
      000B65 00                    3188 	.db #0x00	; 0
      000B66 00                    3189 	.db #0x00	; 0
      000B67 00                    3190 	.db #0x00	; 0
      000B68 00                    3191 	.db #0x00	; 0
      000B69 00                    3192 	.db #0x00	; 0
      000B6A 00                    3193 	.db #0x00	; 0
      000B6B 00                    3194 	.db #0x00	; 0
      000B6C 00                    3195 	.db #0x00	; 0
      000B6D 00                    3196 	.db #0x00	; 0
      000B6E 00                    3197 	.db #0x00	; 0
      000B6F 00                    3198 	.db #0x00	; 0
      000B70 00                    3199 	.db #0x00	; 0
      000B71 00                    3200 	.db #0x00	; 0
      000B72 00                    3201 	.db #0x00	; 0
      000B73 00                    3202 	.db #0x00	; 0
      000B74 00                    3203 	.db #0x00	; 0
      000B75 00                    3204 	.db #0x00	; 0
      000B76 00                    3205 	.db #0x00	; 0
      000B77 02                    3206 	.db #0x02	; 2
      000B78 02                    3207 	.db #0x02	; 2
      000B79 02                    3208 	.db #0x02	; 2
      000B7A 02                    3209 	.db #0x02	; 2
      000B7B 00                    3210 	.db #0x00	; 0
      000B7C 00                    3211 	.db #0x00	; 0
      000B7D 00                    3212 	.db #0x00	; 0
      000B7E 00                    3213 	.db #0x00	; 0
      000B7F 00                    3214 	.db #0x00	; 0
      000B80 00                    3215 	.db #0x00	; 0
      000B81 00                    3216 	.db #0x00	; 0
      000B82 00                    3217 	.db #0x00	; 0
      000B83 00                    3218 	.db #0x00	; 0
      000B84 00                    3219 	.db #0x00	; 0
      000B85 00                    3220 	.db #0x00	; 0
      000B86 00                    3221 	.db #0x00	; 0
      000B87 00                    3222 	.db #0x00	; 0
      000B88 00                    3223 	.db #0x00	; 0
      000B89                       3224 _BLANKSIZE:
      000B89 03                    3225 	.db #0x03	; 3
      000B8A                       3226 _BLANK:
      000B8A 26                    3227 	.db #0x26	; 38
      000B8B 2B                    3228 	.db #0x2b	; 43
      000B8C 2C                    3229 	.db #0x2c	; 44
      000B8D                       3230 _EMPTYSPRITE:
      000B8D 50                    3231 	.db #0x50	; 80	'P'
      000B8E                       3232 _ENEMYCOUNT:
      000B8E 05                    3233 	.db #0x05	; 5
      000B8F                       3234 _xSpawnPositions:
      000B8F 00                    3235 	.db #0x00	; 0
      000B90 60                    3236 	.db #0x60	; 96
      000B91 B0                    3237 	.db #0xb0	; 176
      000B92 00                    3238 	.db #0x00	; 0
      000B93 B0                    3239 	.db #0xb0	; 176
      000B94 00                    3240 	.db #0x00	; 0
      000B95 60                    3241 	.db #0x60	; 96
      000B96 B0                    3242 	.db #0xb0	; 176
      000B97                       3243 _ySpawnPositions:
      000B97 00                    3244 	.db #0x00	; 0
      000B98 00                    3245 	.db #0x00	; 0
      000B99 00                    3246 	.db #0x00	; 0
      000B9A 5C                    3247 	.db #0x5c	; 92
      000B9B 5C                    3248 	.db #0x5c	; 92
      000B9C A0                    3249 	.db #0xa0	; 160
      000B9D A0                    3250 	.db #0xa0	; 160
      000B9E A0                    3251 	.db #0xa0	; 160
      000B9F                       3252 _PROJECTILECOUNT:
      000B9F 05                    3253 	.db #0x05	; 5
      000BA0                       3254 _PLAYERSIZE:
      000BA0 10                    3255 	.db #0x10	; 16
      000BA1                       3256 _maxHull:
      000BA1 64                    3257 	.db #0x64	;  100	'd'
      000BA2                       3258 _maxShield:
      000BA2 64                    3259 	.db #0x64	;  100	'd'
      000BA3                       3260 _MAXGUNLEVEL:
      000BA3 01                    3261 	.db #0x01	; 1
      000BA4                       3262 _SPLASHDROPOFF:
      000BA4 01                    3263 	.db #0x01	; 1
      000BA5                       3264 _EXPLFRAMETIME:
      000BA5 0A                    3265 	.db #0x0a	; 10
                                   3266 ;src/main.c:156: void setHealthBar(uint8_t row, uint8_t hp) {
                                   3267 ;	---------------------------------
                                   3268 ; Function setHealthBar
                                   3269 ; ---------------------------------
      000BA6                       3270 _setHealthBar::
      000BA6 E8 FB                 3271 	add	sp, #-5
                                   3272 ;src/main.c:158: if (hp >= 80) {
      000BA8 F8 08                 3273 	ldhl	sp,	#8
      000BAA 7E                    3274 	ld	a, (hl)
      000BAB D6 50                 3275 	sub	a, #0x50
      000BAD 38 31                 3276 	jr	C, 00102$
                                   3277 ;src/main.c:159: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      000BAF F8 00                 3278 	ldhl	sp,	#0
      000BB1 4D                    3279 	ld	c, l
      000BB2 44                    3280 	ld	b, h
      000BB3 36 50                 3281 	ld	(hl), #0x50
      000BB5 69                    3282 	ld	l, c
                                   3283 ;	spillPairReg hl
                                   3284 ;	spillPairReg hl
      000BB6 60                    3285 	ld	h, b
                                   3286 ;	spillPairReg hl
                                   3287 ;	spillPairReg hl
      000BB7 23                    3288 	inc	hl
      000BB8 36 50                 3289 	ld	(hl), #0x50
      000BBA 69                    3290 	ld	l, c
                                   3291 ;	spillPairReg hl
                                   3292 ;	spillPairReg hl
      000BBB 60                    3293 	ld	h, b
                                   3294 ;	spillPairReg hl
                                   3295 ;	spillPairReg hl
      000BBC 23                    3296 	inc	hl
      000BBD 23                    3297 	inc	hl
      000BBE 36 50                 3298 	ld	(hl), #0x50
      000BC0 69                    3299 	ld	l, c
                                   3300 ;	spillPairReg hl
                                   3301 ;	spillPairReg hl
      000BC1 60                    3302 	ld	h, b
                                   3303 ;	spillPairReg hl
                                   3304 ;	spillPairReg hl
      000BC2 23                    3305 	inc	hl
      000BC3 23                    3306 	inc	hl
      000BC4 23                    3307 	inc	hl
      000BC5 36 50                 3308 	ld	(hl), #0x50
      000BC7 21 04 00              3309 	ld	hl, #0x0004
      000BCA 09                    3310 	add	hl, bc
      000BCB 36 50                 3311 	ld	(hl), #0x50
                                   3312 ;src/main.c:160: set_win_tiles(5,row,5,1,blockmap);
      000BCD C5                    3313 	push	bc
      000BCE 21 05 01              3314 	ld	hl, #0x105
      000BD1 E5                    3315 	push	hl
      000BD2 F8 0B                 3316 	ldhl	sp,	#11
      000BD4 66                    3317 	ld	h, (hl)
      000BD5 2E 05                 3318 	ld	l, #0x05
      000BD7 E5                    3319 	push	hl
      000BD8 CDr00r00              3320 	call	_set_win_tiles
      000BDB E8 06                 3321 	add	sp, #6
                                   3322 ;src/main.c:161: return;
      000BDD C3rB4r0C              3323 	jp	00109$
      000BE0                       3324 00102$:
                                   3325 ;src/main.c:163: if (hp >= 60) {
      000BE0 F8 08                 3326 	ldhl	sp,	#8
      000BE2 7E                    3327 	ld	a, (hl)
      000BE3 D6 3C                 3328 	sub	a, #0x3c
      000BE5 38 31                 3329 	jr	C, 00104$
                                   3330 ;src/main.c:164: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      000BE7 F8 00                 3331 	ldhl	sp,	#0
      000BE9 4D                    3332 	ld	c, l
      000BEA 44                    3333 	ld	b, h
      000BEB 36 50                 3334 	ld	(hl), #0x50
      000BED 69                    3335 	ld	l, c
                                   3336 ;	spillPairReg hl
                                   3337 ;	spillPairReg hl
      000BEE 60                    3338 	ld	h, b
                                   3339 ;	spillPairReg hl
                                   3340 ;	spillPairReg hl
      000BEF 23                    3341 	inc	hl
      000BF0 36 50                 3342 	ld	(hl), #0x50
      000BF2 69                    3343 	ld	l, c
                                   3344 ;	spillPairReg hl
                                   3345 ;	spillPairReg hl
      000BF3 60                    3346 	ld	h, b
                                   3347 ;	spillPairReg hl
                                   3348 ;	spillPairReg hl
      000BF4 23                    3349 	inc	hl
      000BF5 23                    3350 	inc	hl
      000BF6 36 50                 3351 	ld	(hl), #0x50
      000BF8 69                    3352 	ld	l, c
                                   3353 ;	spillPairReg hl
                                   3354 ;	spillPairReg hl
      000BF9 60                    3355 	ld	h, b
                                   3356 ;	spillPairReg hl
                                   3357 ;	spillPairReg hl
      000BFA 23                    3358 	inc	hl
      000BFB 23                    3359 	inc	hl
      000BFC 23                    3360 	inc	hl
      000BFD 36 50                 3361 	ld	(hl), #0x50
      000BFF 21 04 00              3362 	ld	hl, #0x0004
      000C02 09                    3363 	add	hl, bc
      000C03 36 00                 3364 	ld	(hl), #0x00
                                   3365 ;src/main.c:165: set_win_tiles(5,row,5,1,blockmap);
      000C05 C5                    3366 	push	bc
      000C06 21 05 01              3367 	ld	hl, #0x105
      000C09 E5                    3368 	push	hl
      000C0A F8 0B                 3369 	ldhl	sp,	#11
      000C0C 66                    3370 	ld	h, (hl)
      000C0D 2E 05                 3371 	ld	l, #0x05
      000C0F E5                    3372 	push	hl
      000C10 CDr00r00              3373 	call	_set_win_tiles
      000C13 E8 06                 3374 	add	sp, #6
                                   3375 ;src/main.c:166: return;
      000C15 C3rB4r0C              3376 	jp	00109$
      000C18                       3377 00104$:
                                   3378 ;src/main.c:168: if (hp >= 40) {
      000C18 F8 08                 3379 	ldhl	sp,	#8
      000C1A 7E                    3380 	ld	a, (hl)
      000C1B D6 28                 3381 	sub	a, #0x28
      000C1D 38 30                 3382 	jr	C, 00106$
                                   3383 ;src/main.c:169: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000C1F F8 00                 3384 	ldhl	sp,	#0
      000C21 4D                    3385 	ld	c, l
      000C22 44                    3386 	ld	b, h
      000C23 36 50                 3387 	ld	(hl), #0x50
      000C25 69                    3388 	ld	l, c
                                   3389 ;	spillPairReg hl
                                   3390 ;	spillPairReg hl
      000C26 60                    3391 	ld	h, b
                                   3392 ;	spillPairReg hl
                                   3393 ;	spillPairReg hl
      000C27 23                    3394 	inc	hl
      000C28 36 50                 3395 	ld	(hl), #0x50
      000C2A 69                    3396 	ld	l, c
                                   3397 ;	spillPairReg hl
                                   3398 ;	spillPairReg hl
      000C2B 60                    3399 	ld	h, b
                                   3400 ;	spillPairReg hl
                                   3401 ;	spillPairReg hl
      000C2C 23                    3402 	inc	hl
      000C2D 23                    3403 	inc	hl
      000C2E 36 50                 3404 	ld	(hl), #0x50
      000C30 59                    3405 	ld	e, c
      000C31 50                    3406 	ld	d, b
      000C32 13                    3407 	inc	de
      000C33 13                    3408 	inc	de
      000C34 13                    3409 	inc	de
      000C35 AF                    3410 	xor	a, a
      000C36 12                    3411 	ld	(de), a
      000C37 21 04 00              3412 	ld	hl, #0x0004
      000C3A 09                    3413 	add	hl, bc
      000C3B 36 00                 3414 	ld	(hl), #0x00
                                   3415 ;src/main.c:170: set_win_tiles(5,row,5,1,blockmap);
      000C3D C5                    3416 	push	bc
      000C3E 21 05 01              3417 	ld	hl, #0x105
      000C41 E5                    3418 	push	hl
      000C42 F8 0B                 3419 	ldhl	sp,	#11
      000C44 66                    3420 	ld	h, (hl)
      000C45 2E 05                 3421 	ld	l, #0x05
      000C47 E5                    3422 	push	hl
      000C48 CDr00r00              3423 	call	_set_win_tiles
      000C4B E8 06                 3424 	add	sp, #6
                                   3425 ;src/main.c:171: return;
      000C4D 18 65                 3426 	jr	00109$
      000C4F                       3427 00106$:
                                   3428 ;src/main.c:173: if (hp >= 20) {
      000C4F F8 08                 3429 	ldhl	sp,	#8
      000C51 7E                    3430 	ld	a, (hl)
      000C52 D6 14                 3431 	sub	a, #0x14
      000C54 38 30                 3432 	jr	C, 00108$
                                   3433 ;src/main.c:174: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000C56 F8 00                 3434 	ldhl	sp,	#0
      000C58 4D                    3435 	ld	c, l
      000C59 44                    3436 	ld	b, h
      000C5A 36 50                 3437 	ld	(hl), #0x50
      000C5C 69                    3438 	ld	l, c
                                   3439 ;	spillPairReg hl
                                   3440 ;	spillPairReg hl
      000C5D 60                    3441 	ld	h, b
                                   3442 ;	spillPairReg hl
                                   3443 ;	spillPairReg hl
      000C5E 23                    3444 	inc	hl
      000C5F 36 50                 3445 	ld	(hl), #0x50
      000C61 59                    3446 	ld	e, c
      000C62 50                    3447 	ld	d, b
      000C63 13                    3448 	inc	de
      000C64 13                    3449 	inc	de
      000C65 AF                    3450 	xor	a, a
      000C66 12                    3451 	ld	(de), a
      000C67 59                    3452 	ld	e, c
      000C68 50                    3453 	ld	d, b
      000C69 13                    3454 	inc	de
      000C6A 13                    3455 	inc	de
      000C6B 13                    3456 	inc	de
      000C6C AF                    3457 	xor	a, a
      000C6D 12                    3458 	ld	(de), a
      000C6E 21 04 00              3459 	ld	hl, #0x0004
      000C71 09                    3460 	add	hl, bc
      000C72 36 00                 3461 	ld	(hl), #0x00
                                   3462 ;src/main.c:175: set_win_tiles(5,row,5,1,blockmap);
      000C74 C5                    3463 	push	bc
      000C75 21 05 01              3464 	ld	hl, #0x105
      000C78 E5                    3465 	push	hl
      000C79 F8 0B                 3466 	ldhl	sp,	#11
      000C7B 66                    3467 	ld	h, (hl)
      000C7C 2E 05                 3468 	ld	l, #0x05
      000C7E E5                    3469 	push	hl
      000C7F CDr00r00              3470 	call	_set_win_tiles
      000C82 E8 06                 3471 	add	sp, #6
                                   3472 ;src/main.c:176: return;
      000C84 18 2E                 3473 	jr	00109$
      000C86                       3474 00108$:
                                   3475 ;src/main.c:178: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000C86 F8 00                 3476 	ldhl	sp,	#0
      000C88 4D                    3477 	ld	c, l
      000C89 44                    3478 	ld	b, h
      000C8A 36 50                 3479 	ld	(hl), #0x50
      000C8C 59                    3480 	ld	e, c
      000C8D 50                    3481 	ld	d, b
      000C8E 13                    3482 	inc	de
      000C8F AF                    3483 	xor	a, a
      000C90 12                    3484 	ld	(de), a
      000C91 59                    3485 	ld	e, c
      000C92 50                    3486 	ld	d, b
      000C93 13                    3487 	inc	de
      000C94 13                    3488 	inc	de
      000C95 AF                    3489 	xor	a, a
      000C96 12                    3490 	ld	(de), a
      000C97 59                    3491 	ld	e, c
      000C98 50                    3492 	ld	d, b
      000C99 13                    3493 	inc	de
      000C9A 13                    3494 	inc	de
      000C9B 13                    3495 	inc	de
      000C9C AF                    3496 	xor	a, a
      000C9D 12                    3497 	ld	(de), a
      000C9E 21 04 00              3498 	ld	hl, #0x0004
      000CA1 09                    3499 	add	hl, bc
      000CA2 36 00                 3500 	ld	(hl), #0x00
                                   3501 ;src/main.c:179: set_win_tiles(5,row,5,1,blockmap);
      000CA4 C5                    3502 	push	bc
      000CA5 21 05 01              3503 	ld	hl, #0x105
      000CA8 E5                    3504 	push	hl
      000CA9 F8 0B                 3505 	ldhl	sp,	#11
      000CAB 66                    3506 	ld	h, (hl)
      000CAC 2E 05                 3507 	ld	l, #0x05
      000CAE E5                    3508 	push	hl
      000CAF CDr00r00              3509 	call	_set_win_tiles
      000CB2 E8 06                 3510 	add	sp, #6
                                   3511 ;src/main.c:180: return;
      000CB4                       3512 00109$:
                                   3513 ;src/main.c:182: }
      000CB4 E8 05                 3514 	add	sp, #5
      000CB6 C9                    3515 	ret
                                   3516 ;src/main.c:184: void updateScore() {
                                   3517 ;	---------------------------------
                                   3518 ; Function updateScore
                                   3519 ; ---------------------------------
      000CB7                       3520 _updateScore::
      000CB7 E8 F6                 3521 	add	sp, #-10
                                   3522 ;src/main.c:188: len = bcd2text(&SCORE, 0x01, buf);
      000CB9 F8 00                 3523 	ldhl	sp,	#0
      000CBB 4D                    3524 	ld	c, l
      000CBC 44                    3525 	ld	b, h
      000CBD 59                    3526 	ld	e, c
      000CBE 50                    3527 	ld	d, b
      000CBF C5                    3528 	push	bc
      000CC0 D5                    3529 	push	de
      000CC1 3E 01                 3530 	ld	a, #0x01
      000CC3 F5                    3531 	push	af
      000CC4 33                    3532 	inc	sp
      000CC5 11rB3r00              3533 	ld	de, #_SCORE
      000CC8 D5                    3534 	push	de
      000CC9 CDr00r00              3535 	call	_bcd2text
      000CCC E8 05                 3536 	add	sp, #5
      000CCE C1                    3537 	pop	bc
                                   3538 ;src/main.c:189: set_win_tiles(15, 1, 5, 1, buf+3);
      000CCF 03                    3539 	inc	bc
      000CD0 03                    3540 	inc	bc
      000CD1 03                    3541 	inc	bc
      000CD2 C5                    3542 	push	bc
      000CD3 21 05 01              3543 	ld	hl, #0x105
      000CD6 E5                    3544 	push	hl
      000CD7 21 0F 01              3545 	ld	hl, #0x10f
      000CDA E5                    3546 	push	hl
      000CDB CDr00r00              3547 	call	_set_win_tiles
                                   3548 ;src/main.c:190: }
      000CDE E8 10                 3549 	add	sp, #16
      000CE0 C9                    3550 	ret
                                   3551 ;src/main.c:192: void updateMissileCount(int8_t amount) {
                                   3552 ;	---------------------------------
                                   3553 ; Function updateMissileCount
                                   3554 ; ---------------------------------
      000CE1                       3555 _updateMissileCount::
      000CE1 E8 F6                 3556 	add	sp, #-10
                                   3557 ;src/main.c:193: if (amount == -1) {
      000CE3 F8 0C                 3558 	ldhl	sp,	#12
      000CE5 7E                    3559 	ld	a, (hl)
      000CE6 3C                    3560 	inc	a
      000CE7 20 13                 3561 	jr	NZ, 00112$
                                   3562 ;src/main.c:194: missiles--;
      000CE9 21rA8r00              3563 	ld	hl, #_missiles
      000CEC 35                    3564 	dec	(hl)
                                   3565 ;src/main.c:195: bcd_sub(&MISSILES, &INCREMENT);
      000CED 11rB7r00              3566 	ld	de, #_INCREMENT
      000CF0 D5                    3567 	push	de
      000CF1 11rA9r00              3568 	ld	de, #_MISSILES
      000CF4 D5                    3569 	push	de
      000CF5 CDr00r00              3570 	call	_bcd_sub
      000CF8 E8 04                 3571 	add	sp, #4
      000CFA 18 30                 3572 	jr	00104$
                                   3573 ;src/main.c:198: for(int8_t i=0; i<amount;i++) {
      000CFC                       3574 00112$:
      000CFC 0E 00                 3575 	ld	c, #0x00
      000CFE                       3576 00106$:
      000CFE F8 0C                 3577 	ldhl	sp,	#12
      000D00 5E                    3578 	ld	e, (hl)
      000D01 79                    3579 	ld	a,c
      000D02 57                    3580 	ld	d,a
      000D03 96                    3581 	sub	a, (hl)
      000D04 CB 7B                 3582 	bit	7, e
      000D06 28 07                 3583 	jr	Z, 00128$
      000D08 CB 7A                 3584 	bit	7, d
      000D0A 20 08                 3585 	jr	NZ, 00129$
      000D0C BF                    3586 	cp	a, a
      000D0D 18 05                 3587 	jr	00129$
      000D0F                       3588 00128$:
      000D0F CB 7A                 3589 	bit	7, d
      000D11 28 01                 3590 	jr	Z, 00129$
      000D13 37                    3591 	scf
      000D14                       3592 00129$:
      000D14 30 16                 3593 	jr	NC, 00104$
                                   3594 ;src/main.c:199: ++missiles;
      000D16 21rA8r00              3595 	ld	hl, #_missiles
      000D19 34                    3596 	inc	(hl)
                                   3597 ;src/main.c:200: bcd_add(&MISSILES, &INCREMENT);
      000D1A C5                    3598 	push	bc
      000D1B 11rB7r00              3599 	ld	de, #_INCREMENT
      000D1E D5                    3600 	push	de
      000D1F 11rA9r00              3601 	ld	de, #_MISSILES
      000D22 D5                    3602 	push	de
      000D23 CDr00r00              3603 	call	_bcd_add
      000D26 E8 04                 3604 	add	sp, #4
      000D28 C1                    3605 	pop	bc
                                   3606 ;src/main.c:198: for(int8_t i=0; i<amount;i++) {
      000D29 0C                    3607 	inc	c
      000D2A 18 D2                 3608 	jr	00106$
      000D2C                       3609 00104$:
                                   3610 ;src/main.c:205: len = bcd2text(&MISSILES, 0x01, buf);
      000D2C F8 00                 3611 	ldhl	sp,	#0
      000D2E 4D                    3612 	ld	c, l
      000D2F 44                    3613 	ld	b, h
      000D30 59                    3614 	ld	e, c
      000D31 50                    3615 	ld	d, b
      000D32 C5                    3616 	push	bc
      000D33 D5                    3617 	push	de
      000D34 3E 01                 3618 	ld	a, #0x01
      000D36 F5                    3619 	push	af
      000D37 33                    3620 	inc	sp
      000D38 11rA9r00              3621 	ld	de, #_MISSILES
      000D3B D5                    3622 	push	de
      000D3C CDr00r00              3623 	call	_bcd2text
      000D3F E8 05                 3624 	add	sp, #5
      000D41 C1                    3625 	pop	bc
                                   3626 ;src/main.c:206: set_win_tiles(18, 0, 2, 1, buf+6);
      000D42 21 06 00              3627 	ld	hl, #0x0006
      000D45 09                    3628 	add	hl, bc
      000D46 E5                    3629 	push	hl
      000D47 21 02 01              3630 	ld	hl, #0x102
      000D4A E5                    3631 	push	hl
      000D4B 21 12 00              3632 	ld	hl, #0x12
      000D4E E5                    3633 	push	hl
      000D4F CDr00r00              3634 	call	_set_win_tiles
                                   3635 ;src/main.c:208: }
      000D52 E8 10                 3636 	add	sp, #16
      000D54 C9                    3637 	ret
                                   3638 ;src/main.c:210: void incrementScore() {
                                   3639 ;	---------------------------------
                                   3640 ; Function incrementScore
                                   3641 ; ---------------------------------
      000D55                       3642 _incrementScore::
                                   3643 ;src/main.c:211: score += 1;
      000D55 21rB1r00              3644 	ld	hl, #_score
      000D58 2A                    3645 	ld	a, (hl+)
      000D59 4F                    3646 	ld	c, a
      000D5A 3A                    3647 	ld	a, (hl-)
      000D5B 47                    3648 	ld	b, a
      000D5C 03                    3649 	inc	bc
      000D5D 79                    3650 	ld	a, c
      000D5E 22                    3651 	ld	(hl+), a
      000D5F 70                    3652 	ld	(hl), b
                                   3653 ;src/main.c:212: bcd_add(&SCORE, &INCREMENT);
      000D60 11rB7r00              3654 	ld	de, #_INCREMENT
      000D63 D5                    3655 	push	de
      000D64 11rB3r00              3656 	ld	de, #_SCORE
      000D67 D5                    3657 	push	de
      000D68 CDr00r00              3658 	call	_bcd_add
      000D6B E8 04                 3659 	add	sp, #4
                                   3660 ;src/main.c:213: }
      000D6D C9                    3661 	ret
                                   3662 ;src/main.c:215: void updateDirection() {
                                   3663 ;	---------------------------------
                                   3664 ; Function updateDirection
                                   3665 ; ---------------------------------
      000D6E                       3666 _updateDirection::
      000D6E E8 FC                 3667 	add	sp, #-4
                                   3668 ;src/main.c:219: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000D70 21rF5r00              3669 	ld	hl, #_joydata
      000D73 5E                    3670 	ld	e, (hl)
      000D74 7B                    3671 	ld	a, e
      000D75 E6 01                 3672 	and	a, #0x01
      000D77 F8 00                 3673 	ldhl	sp,	#0
      000D79 22                    3674 	ld	(hl+), a
      000D7A AF                    3675 	xor	a, a
      000D7B 22                    3676 	ld	(hl+), a
      000D7C 7B                    3677 	ld	a, e
      000D7D E6 04                 3678 	and	a, #0x04
      000D7F 22                    3679 	ld	(hl+), a
      000D80 AF                    3680 	xor	a, a
      000D81 32                    3681 	ld	(hl-), a
      000D82 2B                    3682 	dec	hl
      000D83 7B                    3683 	ld	a, e
      000D84 E6 08                 3684 	and	a, #0x08
      000D86 4F                    3685 	ld	c, a
      000D87 06 00                 3686 	ld	b, #0x00
      000D89 3A                    3687 	ld	a, (hl-)
      000D8A B6                    3688 	or	a, (hl)
      000D8B 28 14                 3689 	jr	Z, 00102$
      000D8D F8 03                 3690 	ldhl	sp,	#3
      000D8F 3A                    3691 	ld	a, (hl-)
      000D90 B6                    3692 	or	a, (hl)
      000D91 20 0E                 3693 	jr	NZ, 00102$
      000D93 78                    3694 	ld	a, b
      000D94 B1                    3695 	or	a, c
      000D95 20 0A                 3696 	jr	NZ, 00102$
                                   3697 ;src/main.c:220: xDir = 1;
      000D97 21r93r00              3698 	ld	hl, #_xDir
      000D9A 36 01                 3699 	ld	(hl), #0x01
                                   3700 ;src/main.c:221: yDir = 0;
      000D9C 21r94r00              3701 	ld	hl, #_yDir
      000D9F 36 00                 3702 	ld	(hl), #0x00
      000DA1                       3703 00102$:
                                   3704 ;src/main.c:223: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000DA1 7B                    3705 	ld	a, e
      000DA2 E6 02                 3706 	and	a, #0x02
      000DA4 5F                    3707 	ld	e, a
      000DA5 16 00                 3708 	ld	d, #0x00
      000DA7 7A                    3709 	ld	a, d
      000DA8 B3                    3710 	or	a, e
      000DA9 28 14                 3711 	jr	Z, 00106$
      000DAB F8 03                 3712 	ldhl	sp,	#3
      000DAD 3A                    3713 	ld	a, (hl-)
      000DAE B6                    3714 	or	a, (hl)
      000DAF 20 0E                 3715 	jr	NZ, 00106$
      000DB1 78                    3716 	ld	a, b
      000DB2 B1                    3717 	or	a, c
      000DB3 20 0A                 3718 	jr	NZ, 00106$
                                   3719 ;src/main.c:224: xDir = -1;
      000DB5 21r93r00              3720 	ld	hl, #_xDir
      000DB8 36 FF                 3721 	ld	(hl), #0xff
                                   3722 ;src/main.c:225: yDir = 0;
      000DBA 21r94r00              3723 	ld	hl, #_yDir
      000DBD 36 00                 3724 	ld	(hl), #0x00
      000DBF                       3725 00106$:
                                   3726 ;src/main.c:227: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DBF F8 03                 3727 	ldhl	sp,	#3
      000DC1 3A                    3728 	ld	a, (hl-)
      000DC2 B6                    3729 	or	a, (hl)
      000DC3 28 13                 3730 	jr	Z, 00110$
      000DC5 7A                    3731 	ld	a, d
      000DC6 B3                    3732 	or	a, e
      000DC7 20 0F                 3733 	jr	NZ, 00110$
      000DC9 2B                    3734 	dec	hl
      000DCA 3A                    3735 	ld	a, (hl-)
      000DCB B6                    3736 	or	a, (hl)
      000DCC 20 0A                 3737 	jr	NZ, 00110$
                                   3738 ;src/main.c:228: xDir = 0;
      000DCE 21r93r00              3739 	ld	hl, #_xDir
      000DD1 36 00                 3740 	ld	(hl), #0x00
                                   3741 ;src/main.c:229: yDir = -1;
      000DD3 21r94r00              3742 	ld	hl, #_yDir
      000DD6 36 FF                 3743 	ld	(hl), #0xff
      000DD8                       3744 00110$:
                                   3745 ;src/main.c:231: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DD8 78                    3746 	ld	a, b
      000DD9 B1                    3747 	or	a, c
      000DDA 28 14                 3748 	jr	Z, 00114$
      000DDC 7A                    3749 	ld	a, d
      000DDD B3                    3750 	or	a, e
      000DDE 20 10                 3751 	jr	NZ, 00114$
      000DE0 F8 01                 3752 	ldhl	sp,	#1
      000DE2 3A                    3753 	ld	a, (hl-)
      000DE3 B6                    3754 	or	a, (hl)
      000DE4 20 0A                 3755 	jr	NZ, 00114$
                                   3756 ;src/main.c:232: xDir = 0;
      000DE6 21r93r00              3757 	ld	hl, #_xDir
      000DE9 36 00                 3758 	ld	(hl), #0x00
                                   3759 ;src/main.c:233: yDir = 1;
      000DEB 21r94r00              3760 	ld	hl, #_yDir
      000DEE 36 01                 3761 	ld	(hl), #0x01
      000DF0                       3762 00114$:
                                   3763 ;src/main.c:237: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000DF0 F8 03                 3764 	ldhl	sp,	#3
      000DF2 3A                    3765 	ld	a, (hl-)
      000DF3 B6                    3766 	or	a, (hl)
      000DF4 28 0F                 3767 	jr	Z, 00118$
      000DF6 2B                    3768 	dec	hl
      000DF7 3A                    3769 	ld	a, (hl-)
      000DF8 B6                    3770 	or	a, (hl)
      000DF9 28 0A                 3771 	jr	Z, 00118$
                                   3772 ;src/main.c:238: xDir = 1;
      000DFB 21r93r00              3773 	ld	hl, #_xDir
      000DFE 36 01                 3774 	ld	(hl), #0x01
                                   3775 ;src/main.c:239: yDir = -1;
      000E00 21r94r00              3776 	ld	hl, #_yDir
      000E03 36 FF                 3777 	ld	(hl), #0xff
      000E05                       3778 00118$:
                                   3779 ;src/main.c:241: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000E05 F8 03                 3780 	ldhl	sp,	#3
      000E07 3A                    3781 	ld	a, (hl-)
      000E08 B6                    3782 	or	a, (hl)
      000E09 28 0E                 3783 	jr	Z, 00121$
      000E0B 7A                    3784 	ld	a, d
      000E0C B3                    3785 	or	a, e
      000E0D 28 0A                 3786 	jr	Z, 00121$
                                   3787 ;src/main.c:242: xDir = -1;
      000E0F 21r93r00              3788 	ld	hl, #_xDir
      000E12 36 FF                 3789 	ld	(hl), #0xff
                                   3790 ;src/main.c:243: yDir = -1;
      000E14 21r94r00              3791 	ld	hl, #_yDir
      000E17 36 FF                 3792 	ld	(hl), #0xff
      000E19                       3793 00121$:
                                   3794 ;src/main.c:245: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000E19 78                    3795 	ld	a, b
      000E1A B1                    3796 	or	a, c
      000E1B 28 10                 3797 	jr	Z, 00124$
      000E1D F8 01                 3798 	ldhl	sp,	#1
      000E1F 3A                    3799 	ld	a, (hl-)
      000E20 B6                    3800 	or	a, (hl)
      000E21 28 0A                 3801 	jr	Z, 00124$
                                   3802 ;src/main.c:246: xDir = 1;
      000E23 21r93r00              3803 	ld	hl, #_xDir
      000E26 36 01                 3804 	ld	(hl), #0x01
                                   3805 ;src/main.c:247: yDir = 1;
      000E28 21r94r00              3806 	ld	hl, #_yDir
      000E2B 36 01                 3807 	ld	(hl), #0x01
      000E2D                       3808 00124$:
                                   3809 ;src/main.c:249: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000E2D 78                    3810 	ld	a, b
      000E2E B1                    3811 	or	a, c
      000E2F 28 0E                 3812 	jr	Z, 00127$
      000E31 7A                    3813 	ld	a, d
      000E32 B3                    3814 	or	a, e
      000E33 28 0A                 3815 	jr	Z, 00127$
                                   3816 ;src/main.c:250: xDir = -1;
      000E35 21r93r00              3817 	ld	hl, #_xDir
      000E38 36 FF                 3818 	ld	(hl), #0xff
                                   3819 ;src/main.c:251: yDir = 1;
      000E3A 21r94r00              3820 	ld	hl, #_yDir
      000E3D 36 01                 3821 	ld	(hl), #0x01
      000E3F                       3822 00127$:
                                   3823 ;src/main.c:256: if (xDir == 0 && yDir == 0) {
      000E3F FAr93r00              3824 	ld	a, (#_xDir)
      000E42 B7                    3825 	or	a, a
      000E43 20 07                 3826 	jr	NZ, 00130$
      000E45 FAr94r00              3827 	ld	a, (#_yDir)
      000E48 B7                    3828 	or	a, a
                                   3829 ;src/main.c:257: return;
      000E49 CAr95r0F              3830 	jp	Z,00195$
      000E4C                       3831 00130$:
                                   3832 ;src/main.c:289: if (xDir == 0 && yDir > 0) {
      000E4C 21r94r00              3833 	ld	hl, #_yDir
      000E4F 5E                    3834 	ld	e, (hl)
      000E50 AF                    3835 	xor	a, a
      000E51 57                    3836 	ld	d, a
      000E52 96                    3837 	sub	a, (hl)
      000E53 CB 7B                 3838 	bit	7, e
      000E55 28 07                 3839 	jr	Z, 00387$
      000E57 CB 7A                 3840 	bit	7, d
      000E59 20 08                 3841 	jr	NZ, 00388$
      000E5B BF                    3842 	cp	a, a
      000E5C 18 05                 3843 	jr	00388$
      000E5E                       3844 00387$:
      000E5E CB 7A                 3845 	bit	7, d
      000E60 28 01                 3846 	jr	Z, 00388$
      000E62 37                    3847 	scf
      000E63                       3848 00388$:
      000E63 3E 00                 3849 	ld	a, #0x00
      000E65 17                    3850 	rla
      000E66 4F                    3851 	ld	c, a
      000E67 FAr93r00              3852 	ld	a, (#_xDir)
      000E6A B7                    3853 	or	a,a
      000E6B 20 1A                 3854 	jr	NZ, 00160$
      000E6D B1                    3855 	or	a,c
      000E6E 28 17                 3856 	jr	Z, 00160$
                                   3857 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E70 21r02r00              3858 	ld	hl, #(_shadow_OAM + 2)
      000E73 36 00                 3859 	ld	(hl), #0x00
      000E75 21r06r00              3860 	ld	hl, #(_shadow_OAM + 6)
      000E78 36 02                 3861 	ld	(hl), #0x02
                                   3862 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000E7A 21r03r00              3863 	ld	hl, #(_shadow_OAM + 3)
      000E7D 36 40                 3864 	ld	(hl), #0x40
      000E7F 21r07r00              3865 	ld	hl, #(_shadow_OAM + 7)
      000E82 36 40                 3866 	ld	(hl), #0x40
                                   3867 ;src/main.c:293: set_sprite_prop(1, S_FLIPY); 
      000E84 C3r95r0F              3868 	jp	00195$
      000E87                       3869 00160$:
                                   3870 ;src/main.c:295: else if (xDir == 0 && yDir < 0) {
      000E87 FAr94r00              3871 	ld	a, (#_yDir)
      000E8A 07                    3872 	rlca
      000E8B E6 01                 3873 	and	a,#0x01
      000E8D F8 02                 3874 	ldhl	sp,	#2
      000E8F 77                    3875 	ld	(hl), a
      000E90 FAr93r00              3876 	ld	a, (#_xDir)
      000E93 B7                    3877 	or	a, a
      000E94 20 1D                 3878 	jr	NZ, 00156$
      000E96 F8 02                 3879 	ldhl	sp,	#2
      000E98 7E                    3880 	ld	a, (hl)
      000E99 B7                    3881 	or	a, a
      000E9A 28 17                 3882 	jr	Z, 00156$
                                   3883 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E9C 21r02r00              3884 	ld	hl, #(_shadow_OAM + 2)
      000E9F 36 00                 3885 	ld	(hl), #0x00
      000EA1 21r06r00              3886 	ld	hl, #(_shadow_OAM + 6)
      000EA4 36 02                 3887 	ld	(hl), #0x02
                                   3888 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EA6 21r03r00              3889 	ld	hl, #(_shadow_OAM + 3)
      000EA9 36 00                 3890 	ld	(hl), #0x00
      000EAB 21r07r00              3891 	ld	hl, #(_shadow_OAM + 7)
      000EAE 36 00                 3892 	ld	(hl), #0x00
                                   3893 ;src/main.c:299: set_sprite_prop(1, 0); 
      000EB0 C3r95r0F              3894 	jp	00195$
      000EB3                       3895 00156$:
                                   3896 ;src/main.c:301: else if (xDir > 0 && yDir == 0) {
      000EB3 21r93r00              3897 	ld	hl, #_xDir
      000EB6 5E                    3898 	ld	e, (hl)
      000EB7 AF                    3899 	xor	a, a
      000EB8 57                    3900 	ld	d, a
      000EB9 96                    3901 	sub	a, (hl)
      000EBA CB 7B                 3902 	bit	7, e
      000EBC 28 07                 3903 	jr	Z, 00389$
      000EBE CB 7A                 3904 	bit	7, d
      000EC0 20 08                 3905 	jr	NZ, 00390$
      000EC2 BF                    3906 	cp	a, a
      000EC3 18 05                 3907 	jr	00390$
      000EC5                       3908 00389$:
      000EC5 CB 7A                 3909 	bit	7, d
      000EC7 28 01                 3910 	jr	Z, 00390$
      000EC9 37                    3911 	scf
      000ECA                       3912 00390$:
      000ECA 3E 00                 3913 	ld	a, #0x00
      000ECC 17                    3914 	rla
      000ECD 47                    3915 	ld	b, a
      000ECE B7                    3916 	or	a, a
      000ECF 28 1D                 3917 	jr	Z, 00152$
      000ED1 FAr94r00              3918 	ld	a, (#_yDir)
      000ED4 B7                    3919 	or	a, a
      000ED5 20 17                 3920 	jr	NZ, 00152$
                                   3921 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000ED7 21r02r00              3922 	ld	hl, #(_shadow_OAM + 2)
      000EDA 36 04                 3923 	ld	(hl), #0x04
      000EDC 21r06r00              3924 	ld	hl, #(_shadow_OAM + 6)
      000EDF 36 06                 3925 	ld	(hl), #0x06
                                   3926 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EE1 21r03r00              3927 	ld	hl, #(_shadow_OAM + 3)
      000EE4 36 00                 3928 	ld	(hl), #0x00
      000EE6 21r07r00              3929 	ld	hl, #(_shadow_OAM + 7)
      000EE9 36 00                 3930 	ld	(hl), #0x00
                                   3931 ;src/main.c:305: set_sprite_prop(1, 0); 
      000EEB C3r95r0F              3932 	jp	00195$
      000EEE                       3933 00152$:
                                   3934 ;src/main.c:307: else if (xDir < 0 && yDir == 0) {
      000EEE FAr93r00              3935 	ld	a, (#_xDir)
      000EF1 07                    3936 	rlca
      000EF2 E6 01                 3937 	and	a,#0x01
      000EF4 F8 03                 3938 	ldhl	sp,	#3
      000EF6 77                    3939 	ld	(hl), a
      000EF7 7E                    3940 	ld	a, (hl)
      000EF8 B7                    3941 	or	a, a
      000EF9 28 1D                 3942 	jr	Z, 00148$
      000EFB FAr94r00              3943 	ld	a, (#_yDir)
      000EFE B7                    3944 	or	a, a
      000EFF 20 17                 3945 	jr	NZ, 00148$
                                   3946 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F01 21r02r00              3947 	ld	hl, #(_shadow_OAM + 2)
      000F04 36 04                 3948 	ld	(hl), #0x04
      000F06 21r06r00              3949 	ld	hl, #(_shadow_OAM + 6)
      000F09 36 06                 3950 	ld	(hl), #0x06
                                   3951 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F0B 21r03r00              3952 	ld	hl, #(_shadow_OAM + 3)
      000F0E 36 20                 3953 	ld	(hl), #0x20
      000F10 21r07r00              3954 	ld	hl, #(_shadow_OAM + 7)
      000F13 36 20                 3955 	ld	(hl), #0x20
                                   3956 ;src/main.c:311: set_sprite_prop(1, S_FLIPX); 
      000F15 C3r95r0F              3957 	jp	00195$
      000F18                       3958 00148$:
                                   3959 ;src/main.c:313: else if (xDir > 0 && yDir < 0) {
      000F18 78                    3960 	ld	a, b
      000F19 B7                    3961 	or	a, a
      000F1A 28 1C                 3962 	jr	Z, 00144$
      000F1C F8 02                 3963 	ldhl	sp,	#2
      000F1E 7E                    3964 	ld	a, (hl)
      000F1F B7                    3965 	or	a, a
      000F20 28 16                 3966 	jr	Z, 00144$
                                   3967 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F22 21r02r00              3968 	ld	hl, #(_shadow_OAM + 2)
      000F25 36 08                 3969 	ld	(hl), #0x08
      000F27 21r06r00              3970 	ld	hl, #(_shadow_OAM + 6)
      000F2A 36 0A                 3971 	ld	(hl), #0x0a
                                   3972 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F2C 21r03r00              3973 	ld	hl, #(_shadow_OAM + 3)
      000F2F 36 00                 3974 	ld	(hl), #0x00
      000F31 21r07r00              3975 	ld	hl, #(_shadow_OAM + 7)
      000F34 36 00                 3976 	ld	(hl), #0x00
                                   3977 ;src/main.c:317: set_sprite_prop(1, 0); 
      000F36 18 5D                 3978 	jr	00195$
      000F38                       3979 00144$:
                                   3980 ;src/main.c:319: else if (xDir > 0 && yDir > 0) {
      000F38 78                    3981 	ld	a, b
      000F39 B7                    3982 	or	a, a
      000F3A 28 1A                 3983 	jr	Z, 00140$
      000F3C 79                    3984 	ld	a, c
      000F3D B7                    3985 	or	a, a
      000F3E 28 16                 3986 	jr	Z, 00140$
                                   3987 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F40 21r02r00              3988 	ld	hl, #(_shadow_OAM + 2)
      000F43 36 08                 3989 	ld	(hl), #0x08
      000F45 21r06r00              3990 	ld	hl, #(_shadow_OAM + 6)
      000F48 36 0A                 3991 	ld	(hl), #0x0a
                                   3992 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F4A 21r03r00              3993 	ld	hl, #(_shadow_OAM + 3)
      000F4D 36 40                 3994 	ld	(hl), #0x40
      000F4F 21r07r00              3995 	ld	hl, #(_shadow_OAM + 7)
      000F52 36 40                 3996 	ld	(hl), #0x40
                                   3997 ;src/main.c:323: set_sprite_prop(1, S_FLIPY); 
      000F54 18 3F                 3998 	jr	00195$
      000F56                       3999 00140$:
                                   4000 ;src/main.c:325: else if (xDir < 0 && yDir > 0) {
      000F56 F8 03                 4001 	ldhl	sp,	#3
      000F58 7E                    4002 	ld	a, (hl)
      000F59 B7                    4003 	or	a, a
      000F5A 28 1A                 4004 	jr	Z, 00136$
      000F5C 79                    4005 	ld	a, c
      000F5D B7                    4006 	or	a, a
      000F5E 28 16                 4007 	jr	Z, 00136$
                                   4008 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F60 21r02r00              4009 	ld	hl, #(_shadow_OAM + 2)
      000F63 36 08                 4010 	ld	(hl), #0x08
      000F65 21r06r00              4011 	ld	hl, #(_shadow_OAM + 6)
      000F68 36 0A                 4012 	ld	(hl), #0x0a
                                   4013 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F6A 21r03r00              4014 	ld	hl, #(_shadow_OAM + 3)
      000F6D 36 60                 4015 	ld	(hl), #0x60
      000F6F 21r07r00              4016 	ld	hl, #(_shadow_OAM + 7)
      000F72 36 60                 4017 	ld	(hl), #0x60
                                   4018 ;src/main.c:329: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000F74 18 1F                 4019 	jr	00195$
      000F76                       4020 00136$:
                                   4021 ;src/main.c:331: else if (xDir < 0 && yDir < 0) {
      000F76 F8 03                 4022 	ldhl	sp,	#3
      000F78 7E                    4023 	ld	a, (hl)
      000F79 B7                    4024 	or	a, a
      000F7A 28 19                 4025 	jr	Z, 00195$
      000F7C 2B                    4026 	dec	hl
      000F7D 7E                    4027 	ld	a, (hl)
      000F7E B7                    4028 	or	a, a
      000F7F 28 14                 4029 	jr	Z, 00195$
                                   4030 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F81 21r02r00              4031 	ld	hl, #(_shadow_OAM + 2)
      000F84 36 08                 4032 	ld	(hl), #0x08
      000F86 21r06r00              4033 	ld	hl, #(_shadow_OAM + 6)
      000F89 36 0A                 4034 	ld	(hl), #0x0a
                                   4035 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F8B 21r03r00              4036 	ld	hl, #(_shadow_OAM + 3)
      000F8E 36 20                 4037 	ld	(hl), #0x20
      000F90 21r07r00              4038 	ld	hl, #(_shadow_OAM + 7)
      000F93 36 20                 4039 	ld	(hl), #0x20
                                   4040 ;src/main.c:335: set_sprite_prop(1, S_FLIPX); 
      000F95                       4041 00195$:
                                   4042 ;src/main.c:337: }
      000F95 E8 04                 4043 	add	sp, #4
      000F97 C9                    4044 	ret
                                   4045 ;src/main.c:371: void playSound(uint8_t type) {
                                   4046 ;	---------------------------------
                                   4047 ; Function playSound
                                   4048 ; ---------------------------------
      000F98                       4049 _playSound::
                                   4050 ;src/main.c:372: if (type == 20) { //singlegun
      000F98 F8 02                 4051 	ldhl	sp,	#2
      000F9A 7E                    4052 	ld	a, (hl)
      000F9B D6 14                 4053 	sub	a, #0x14
      000F9D 20 13                 4054 	jr	NZ, 00102$
                                   4055 ;src/main.c:373: NR10_REG = 0x00;
      000F9F AF                    4056 	xor	a, a
      000FA0 E0r00                 4057 	ldh	(_NR10_REG + 0), a
                                   4058 ;src/main.c:374: NR11_REG = 0x81;
      000FA2 3E 81                 4059 	ld	a, #0x81
      000FA4 E0r00                 4060 	ldh	(_NR11_REG + 0), a
                                   4061 ;src/main.c:375: NR12_REG = 0x43;
      000FA6 3E 43                 4062 	ld	a, #0x43
      000FA8 E0r00                 4063 	ldh	(_NR12_REG + 0), a
                                   4064 ;src/main.c:376: NR13_REG = 0X00;//0x6D;
      000FAA AF                    4065 	xor	a, a
      000FAB E0r00                 4066 	ldh	(_NR13_REG + 0), a
                                   4067 ;src/main.c:377: NR14_REG = 0x86;
      000FAD 3E 86                 4068 	ld	a, #0x86
      000FAF E0r00                 4069 	ldh	(_NR14_REG + 0), a
                                   4070 ;src/main.c:378: return;
      000FB1 C9                    4071 	ret
      000FB2                       4072 00102$:
                                   4073 ;src/main.c:380: if (type == 23) {
      000FB2 F8 02                 4074 	ldhl	sp,	#2
      000FB4 7E                    4075 	ld	a, (hl)
      000FB5 D6 17                 4076 	sub	a, #0x17
      000FB7 20 12                 4077 	jr	NZ, 00104$
                                   4078 ;src/main.c:381: NR10_REG = 0x00;
      000FB9 AF                    4079 	xor	a, a
      000FBA E0r00                 4080 	ldh	(_NR10_REG + 0), a
                                   4081 ;src/main.c:382: NR11_REG = 0x81;
      000FBC 3E 81                 4082 	ld	a, #0x81
      000FBE E0r00                 4083 	ldh	(_NR11_REG + 0), a
                                   4084 ;src/main.c:383: NR12_REG = 0x53;
      000FC0 3E 53                 4085 	ld	a, #0x53
      000FC2 E0r00                 4086 	ldh	(_NR12_REG + 0), a
                                   4087 ;src/main.c:384: NR13_REG = 0X00;//0x6D;
      000FC4 AF                    4088 	xor	a, a
      000FC5 E0r00                 4089 	ldh	(_NR13_REG + 0), a
                                   4090 ;src/main.c:385: NR14_REG = 0x86;
      000FC7 3E 86                 4091 	ld	a, #0x86
      000FC9 E0r00                 4092 	ldh	(_NR14_REG + 0), a
      000FCB                       4093 00104$:
                                   4094 ;src/main.c:387: if (type == 26) {
      000FCB F8 02                 4095 	ldhl	sp,	#2
      000FCD 7E                    4096 	ld	a, (hl)
      000FCE D6 1A                 4097 	sub	a, #0x1a
      000FD0 20 13                 4098 	jr	NZ, 00106$
                                   4099 ;src/main.c:388: NR10_REG = 0x00;
      000FD2 AF                    4100 	xor	a, a
      000FD3 E0r00                 4101 	ldh	(_NR10_REG + 0), a
                                   4102 ;src/main.c:389: NR11_REG = 0x89;
      000FD5 3E 89                 4103 	ld	a, #0x89
      000FD7 E0r00                 4104 	ldh	(_NR11_REG + 0), a
                                   4105 ;src/main.c:390: NR12_REG = 0x55;
      000FD9 3E 55                 4106 	ld	a, #0x55
      000FDB E0r00                 4107 	ldh	(_NR12_REG + 0), a
                                   4108 ;src/main.c:391: NR13_REG = 0x70;//0Xbe;//0x6D;
      000FDD 3E 70                 4109 	ld	a, #0x70
      000FDF E0r00                 4110 	ldh	(_NR13_REG + 0), a
                                   4111 ;src/main.c:392: NR14_REG = 0x84;
      000FE1 3E 84                 4112 	ld	a, #0x84
      000FE3 E0r00                 4113 	ldh	(_NR14_REG + 0), a
      000FE5                       4114 00106$:
                                   4115 ;src/main.c:394: if (type == 0) {  // explosion
      000FE5 F8 02                 4116 	ldhl	sp,	#2
      000FE7 7E                    4117 	ld	a, (hl)
      000FE8 B7                    4118 	or	a, a
      000FE9 C0                    4119 	ret	NZ
                                   4120 ;src/main.c:395: NR41_REG = 0x20;  
      000FEA 3E 20                 4121 	ld	a, #0x20
      000FEC E0r00                 4122 	ldh	(_NR41_REG + 0), a
                                   4123 ;src/main.c:396: NR42_REG = 0xa2;//0xa3;  
      000FEE 3E A2                 4124 	ld	a, #0xa2
      000FF0 E0r00                 4125 	ldh	(_NR42_REG + 0), a
                                   4126 ;src/main.c:397: NR43_REG = 0x57;  
      000FF2 3E 57                 4127 	ld	a, #0x57
      000FF4 E0r00                 4128 	ldh	(_NR43_REG + 0), a
                                   4129 ;src/main.c:398: NR44_REG = 0x80;  
      000FF6 3E 80                 4130 	ld	a, #0x80
      000FF8 E0r00                 4131 	ldh	(_NR44_REG + 0), a
                                   4132 ;src/main.c:404: }
      000FFA C9                    4133 	ret
                                   4134 ;src/main.c:406: void initEnemies(uint8_t loadSprites) {
                                   4135 ;	---------------------------------
                                   4136 ; Function initEnemies
                                   4137 ; ---------------------------------
      000FFB                       4138 _initEnemies::
      000FFB E8 F9                 4139 	add	sp, #-7
                                   4140 ;src/main.c:408: if (loadSprites) {
      000FFD F8 09                 4141 	ldhl	sp,	#9
      000FFF 7E                    4142 	ld	a, (hl)
      001000 B7                    4143 	or	a, a
      001001 28 1A                 4144 	jr	Z, 00102$
                                   4145 ;src/main.c:410: set_sprite_data(0x40, 5, enemy1);
      001003 11r18r05              4146 	ld	de, #_enemy1
      001006 D5                    4147 	push	de
      001007 21 40 05              4148 	ld	hl, #0x540
      00100A E5                    4149 	push	hl
      00100B CDr00r00              4150 	call	_set_sprite_data
      00100E E8 04                 4151 	add	sp, #4
                                   4152 ;src/main.c:411: set_sprite_data(0x50, 8, largeenemies);
      001010 11r68r05              4153 	ld	de, #_largeenemies
      001013 D5                    4154 	push	de
      001014 21 50 08              4155 	ld	hl, #0x850
      001017 E5                    4156 	push	hl
      001018 CDr00r00              4157 	call	_set_sprite_data
      00101B E8 04                 4158 	add	sp, #4
      00101D                       4159 00102$:
                                   4160 ;src/main.c:414: struct Enemy *eptr = enemies;
      00101D 01r5Ar00              4161 	ld	bc, #_enemies+0
                                   4162 ;src/main.c:416: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001020 F8 06                 4163 	ldhl	sp,	#6
      001022 36 00                 4164 	ld	(hl), #0x00
      001024                       4165 00116$:
      001024 21r8Er0B              4166 	ld	hl, #_ENEMYCOUNT
      001027 5E                    4167 	ld	e, (hl)
      001028 F8 06                 4168 	ldhl	sp,	#6
      00102A 7E                    4169 	ld	a, (hl)
      00102B 93                    4170 	sub	a, e
      00102C D2r63r11              4171 	jp	NC, 00118$
                                   4172 ;src/main.c:417: if (eptr->alive == 0) {
      00102F 21 09 00              4173 	ld	hl, #0x0009
      001032 09                    4174 	add	hl, bc
      001033 7E                    4175 	ld	a, (hl)
      001034 B7                    4176 	or	a, a
      001035 C2r57r11              4177 	jp	NZ, 00107$
                                   4178 ;src/main.c:419: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      001038 C5                    4179 	push	bc
      001039 CDr00r00              4180 	call	_rand
      00103C 7B                    4181 	ld	a, e
      00103D C1                    4182 	pop	bc
      00103E 21r17r05              4183 	ld	hl, #_enemyOptionCount
      001041 56                    4184 	ld	d, (hl)
      001042 C5                    4185 	push	bc
      001043 D5                    4186 	push	de
      001044 33                    4187 	inc	sp
      001045 F5                    4188 	push	af
      001046 33                    4189 	inc	sp
      001047 CDr00r00              4190 	call	__moduchar
      00104A E1                    4191 	pop	hl
      00104B 7B                    4192 	ld	a, e
      00104C C1                    4193 	pop	bc
                                   4194 ;src/main.c:421: (*eptr) = enemyOptions[enemyInd];
      00104D 5F                    4195 	ld	e, a
      00104E 16 00                 4196 	ld	d, #0x00
      001050 6B                    4197 	ld	l, e
      001051 62                    4198 	ld	h, d
      001052 29                    4199 	add	hl, hl
      001053 29                    4200 	add	hl, hl
      001054 29                    4201 	add	hl, hl
      001055 19                    4202 	add	hl, de
      001056 29                    4203 	add	hl, hl
      001057 11r00r00              4204 	ld	de, #_enemyOptions
      00105A 19                    4205 	add	hl, de
      00105B 59                    4206 	ld	e, c
      00105C 50                    4207 	ld	d, b
      00105D C5                    4208 	push	bc
      00105E 01 12 00              4209 	ld	bc, #0x12
      001061 C5                    4210 	push	bc
      001062 E5                    4211 	push	hl
      001063 D5                    4212 	push	de
      001064 CDr00r00              4213 	call	___memcpy
      001067 E8 06                 4214 	add	sp, #6
      001069 CDr00r00              4215 	call	_rand
      00106C 7B                    4216 	ld	a, e
      00106D C1                    4217 	pop	bc
      00106E E6 07                 4218 	and	a, #0x07
      001070 F8 05                 4219 	ldhl	sp,	#5
      001072 77                    4220 	ld	(hl), a
                                   4221 ;src/main.c:424: eptr->x = xSpawnPositions[posIndex];
      001073 11r8Fr0B              4222 	ld	de, #_xSpawnPositions
      001076 6E                    4223 	ld	l, (hl)
      001077 26 00                 4224 	ld	h, #0x00
      001079 19                    4225 	add	hl, de
      00107A 5D                    4226 	ld	e, l
      00107B 54                    4227 	ld	d, h
      00107C 1A                    4228 	ld	a, (de)
      00107D 5F                    4229 	ld	e, a
      00107E 16 00                 4230 	ld	d, #0x00
      001080 69                    4231 	ld	l, c
      001081 60                    4232 	ld	h, b
      001082 7B                    4233 	ld	a, e
      001083 22                    4234 	ld	(hl+), a
      001084 72                    4235 	ld	(hl), d
                                   4236 ;src/main.c:425: eptr->y = ySpawnPositions[posIndex];
      001085 21 02 00              4237 	ld	hl, #0x0002
      001088 09                    4238 	add	hl, bc
      001089 33                    4239 	inc	sp
      00108A 33                    4240 	inc	sp
      00108B E5                    4241 	push	hl
      00108C 11r97r0B              4242 	ld	de, #_ySpawnPositions
      00108F F8 05                 4243 	ldhl	sp,	#5
      001091 6E                    4244 	ld	l, (hl)
      001092 26 00                 4245 	ld	h, #0x00
      001094 19                    4246 	add	hl, de
      001095 5D                    4247 	ld	e, l
      001096 54                    4248 	ld	d, h
      001097 1A                    4249 	ld	a, (de)
      001098 F8 04                 4250 	ldhl	sp,	#4
      00109A 22                    4251 	ld	(hl+), a
      00109B AF                    4252 	xor	a, a
      00109C 32                    4253 	ld	(hl-), a
      00109D D1                    4254 	pop	de
      00109E D5                    4255 	push	de
      00109F 2A                    4256 	ld	a, (hl+)
      0010A0 12                    4257 	ld	(de), a
      0010A1 13                    4258 	inc	de
      0010A2 7E                    4259 	ld	a, (hl)
      0010A3 12                    4260 	ld	(de), a
                                   4261 ;src/main.c:427: if (eptr->spriteCount == 1) {
      0010A4 21 08 00              4262 	ld	hl, #0x0008
      0010A7 09                    4263 	add	hl, bc
      0010A8 7E                    4264 	ld	a, (hl)
      0010A9 F8 05                 4265 	ldhl	sp,	#5
      0010AB 77                    4266 	ld	(hl), a
                                   4267 ;src/main.c:428: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010AC 21 06 00              4268 	ld	hl, #0x0006
      0010AF 09                    4269 	add	hl, bc
      0010B0 5D                    4270 	ld	e, l
      0010B1 54                    4271 	ld	d, h
      0010B2 F8 06                 4272 	ldhl	sp,	#6
      0010B4 6E                    4273 	ld	l, (hl)
                                   4274 ;	spillPairReg hl
                                   4275 ;	spillPairReg hl
      0010B5 1A                    4276 	ld	a, (de)
      0010B6 5F                    4277 	ld	e, a
      0010B7 7D                    4278 	ld	a, l
      0010B8 87                    4279 	add	a, a
      0010B9 F8 02                 4280 	ldhl	sp,	#2
      0010BB 77                    4281 	ld	(hl), a
      0010BC 2A                    4282 	ld	a, (hl+)
      0010BD C6 0A                 4283 	add	a, #0x0a
                                   4284 ;src/main.c:427: if (eptr->spriteCount == 1) {
      0010BF 22                    4285 	ld	(hl+), a
      0010C0 23                    4286 	inc	hl
      0010C1 7E                    4287 	ld	a, (hl)
      0010C2 3D                    4288 	dec	a
      0010C3 20 2D                 4289 	jr	NZ, 00104$
                                   4290 ;src/main.c:428: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010C5 F8 03                 4291 	ldhl	sp,	#3
      0010C7 56                    4292 	ld	d, (hl)
                                   4293 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010C8 6A                    4294 	ld	l, d
                                   4295 ;	spillPairReg hl
                                   4296 ;	spillPairReg hl
      0010C9 26 00                 4297 	ld	h, #0x00
                                   4298 ;	spillPairReg hl
                                   4299 ;	spillPairReg hl
      0010CB 29                    4300 	add	hl, hl
      0010CC 29                    4301 	add	hl, hl
      0010CD D5                    4302 	push	de
      0010CE 11r00r00              4303 	ld	de, #_shadow_OAM
      0010D1 19                    4304 	add	hl, de
      0010D2 23                    4305 	inc	hl
      0010D3 23                    4306 	inc	hl
      0010D4 D1                    4307 	pop	de
      0010D5 73                    4308 	ld	(hl), e
                                   4309 ;src/main.c:429: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010D6 D1                    4310 	pop	de
      0010D7 D5                    4311 	push	de
      0010D8 1A                    4312 	ld	a, (de)
      0010D9 F8 05                 4313 	ldhl	sp,	#5
      0010DB 32                    4314 	ld	(hl-), a
      0010DC 0A                    4315 	ld	a, (bc)
      0010DD 32                    4316 	ld	(hl-), a
                                   4317 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0010DE 6E                    4318 	ld	l, (hl)
                                   4319 ;	spillPairReg hl
                                   4320 ;	spillPairReg hl
      0010DF 26 00                 4321 	ld	h, #0x00
                                   4322 ;	spillPairReg hl
                                   4323 ;	spillPairReg hl
      0010E1 29                    4324 	add	hl, hl
      0010E2 29                    4325 	add	hl, hl
      0010E3 11r00r00              4326 	ld	de, #_shadow_OAM
      0010E6 19                    4327 	add	hl, de
      0010E7 5D                    4328 	ld	e, l
      0010E8 54                    4329 	ld	d, h
                                   4330 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0010E9 F8 05                 4331 	ldhl	sp,	#5
      0010EB 3A                    4332 	ld	a, (hl-)
      0010EC 12                    4333 	ld	(de), a
      0010ED 13                    4334 	inc	de
      0010EE 7E                    4335 	ld	a, (hl)
      0010EF 12                    4336 	ld	(de), a
                                   4337 ;src/main.c:429: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010F0 18 65                 4338 	jr	00107$
      0010F2                       4339 00104$:
                                   4340 ;src/main.c:432: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010F2 F8 03                 4341 	ldhl	sp,	#3
      0010F4 56                    4342 	ld	d, (hl)
                                   4343 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010F5 6A                    4344 	ld	l, d
                                   4345 ;	spillPairReg hl
                                   4346 ;	spillPairReg hl
      0010F6 26 00                 4347 	ld	h, #0x00
                                   4348 ;	spillPairReg hl
                                   4349 ;	spillPairReg hl
      0010F8 29                    4350 	add	hl, hl
      0010F9 29                    4351 	add	hl, hl
      0010FA D5                    4352 	push	de
      0010FB 11r00r00              4353 	ld	de, #_shadow_OAM
      0010FE 19                    4354 	add	hl, de
      0010FF 23                    4355 	inc	hl
      001100 23                    4356 	inc	hl
      001101 D1                    4357 	pop	de
      001102 73                    4358 	ld	(hl), e
                                   4359 ;src/main.c:433: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      001103 D1                    4360 	pop	de
      001104 D5                    4361 	push	de
      001105 1A                    4362 	ld	a, (de)
      001106 F8 04                 4363 	ldhl	sp,	#4
      001108 22                    4364 	ld	(hl+), a
      001109 0A                    4365 	ld	a, (bc)
      00110A 32                    4366 	ld	(hl-), a
      00110B 2B                    4367 	dec	hl
      00110C 5E                    4368 	ld	e, (hl)
                                   4369 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00110D 26 00                 4370 	ld	h, #0x00
                                   4371 ;	spillPairReg hl
                                   4372 ;	spillPairReg hl
      00110F 6B                    4373 	ld	l, e
      001110 29                    4374 	add	hl, hl
      001111 29                    4375 	add	hl, hl
      001112 11r00r00              4376 	ld	de, #_shadow_OAM
      001115 19                    4377 	add	hl, de
      001116 5D                    4378 	ld	e, l
      001117 54                    4379 	ld	d, h
                                   4380 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001118 F8 04                 4381 	ldhl	sp,	#4
      00111A 2A                    4382 	ld	a, (hl+)
      00111B 12                    4383 	ld	(de), a
      00111C 13                    4384 	inc	de
      00111D 7E                    4385 	ld	a, (hl)
      00111E 12                    4386 	ld	(de), a
                                   4387 ;src/main.c:435: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      00111F 21 07 00              4388 	ld	hl, #0x0007
      001122 09                    4389 	add	hl, bc
      001123 5E                    4390 	ld	e, (hl)
      001124 F8 02                 4391 	ldhl	sp,	#2
      001126 7E                    4392 	ld	a, (hl)
      001127 C6 0B                 4393 	add	a, #0x0b
      001129 F8 05                 4394 	ldhl	sp,	#5
      00112B 77                    4395 	ld	(hl), a
      00112C 56                    4396 	ld	d, (hl)
                                   4397 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00112D 6A                    4398 	ld	l, d
                                   4399 ;	spillPairReg hl
                                   4400 ;	spillPairReg hl
      00112E 26 00                 4401 	ld	h, #0x00
                                   4402 ;	spillPairReg hl
                                   4403 ;	spillPairReg hl
      001130 29                    4404 	add	hl, hl
      001131 29                    4405 	add	hl, hl
      001132 D5                    4406 	push	de
      001133 11r00r00              4407 	ld	de, #_shadow_OAM
      001136 19                    4408 	add	hl, de
      001137 23                    4409 	inc	hl
      001138 23                    4410 	inc	hl
      001139 D1                    4411 	pop	de
      00113A 73                    4412 	ld	(hl), e
                                   4413 ;src/main.c:436: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      00113B D1                    4414 	pop	de
      00113C D5                    4415 	push	de
      00113D 1A                    4416 	ld	a, (de)
      00113E F8 04                 4417 	ldhl	sp,	#4
      001140 32                    4418 	ld	(hl-), a
      001141 0A                    4419 	ld	a, (bc)
      001142 22                    4420 	ld	(hl+), a
      001143 23                    4421 	inc	hl
      001144 5E                    4422 	ld	e, (hl)
                                   4423 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001145 26 00                 4424 	ld	h, #0x00
                                   4425 ;	spillPairReg hl
                                   4426 ;	spillPairReg hl
      001147 6B                    4427 	ld	l, e
      001148 29                    4428 	add	hl, hl
      001149 29                    4429 	add	hl, hl
      00114A 11r00r00              4430 	ld	de, #_shadow_OAM
      00114D 19                    4431 	add	hl, de
      00114E 5D                    4432 	ld	e, l
      00114F 54                    4433 	ld	d, h
                                   4434 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001150 F8 04                 4435 	ldhl	sp,	#4
      001152 3A                    4436 	ld	a, (hl-)
      001153 12                    4437 	ld	(de), a
      001154 13                    4438 	inc	de
      001155 7E                    4439 	ld	a, (hl)
      001156 12                    4440 	ld	(de), a
                                   4441 ;src/main.c:436: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      001157                       4442 00107$:
                                   4443 ;src/main.c:441: eptr++;
      001157 21 12 00              4444 	ld	hl, #0x0012
      00115A 09                    4445 	add	hl, bc
      00115B 4D                    4446 	ld	c, l
      00115C 44                    4447 	ld	b, h
                                   4448 ;src/main.c:416: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00115D F8 06                 4449 	ldhl	sp,	#6
      00115F 34                    4450 	inc	(hl)
      001160 C3r24r10              4451 	jp	00116$
      001163                       4452 00118$:
                                   4453 ;src/main.c:444: }
      001163 E8 07                 4454 	add	sp, #7
      001165 C9                    4455 	ret
                                   4456 ;src/main.c:447: void updateEnemyPositions() {
                                   4457 ;	---------------------------------
                                   4458 ; Function updateEnemyPositions
                                   4459 ; ---------------------------------
      001166                       4460 _updateEnemyPositions::
      001166 E8 F0                 4461 	add	sp, #-16
                                   4462 ;src/main.c:450: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001168 F8 0F                 4463 	ldhl	sp,	#15
      00116A 36 00                 4464 	ld	(hl), #0x00
      00116C                       4465 00196$:
      00116C 21r8Er0B              4466 	ld	hl, #_ENEMYCOUNT
      00116F 4E                    4467 	ld	c, (hl)
      001170 F8 0F                 4468 	ldhl	sp,	#15
      001172 7E                    4469 	ld	a, (hl)
      001173 91                    4470 	sub	a, c
      001174 D2r18r16              4471 	jp	NC, 00134$
                                   4472 ;src/main.c:451: if (!enemies[i].alive) {
      001177 4E                    4473 	ld	c, (hl)
      001178 06 00                 4474 	ld	b, #0x00
      00117A 69                    4475 	ld	l, c
      00117B 60                    4476 	ld	h, b
      00117C 29                    4477 	add	hl, hl
      00117D 29                    4478 	add	hl, hl
      00117E 29                    4479 	add	hl, hl
      00117F 09                    4480 	add	hl, bc
      001180 29                    4481 	add	hl, hl
                                   4482 ;src/main.c:459: if (enemies[i].x < playerDrawX) {
      001181 01r5Ar00              4483 	ld	bc,#_enemies
      001184 09                    4484 	add	hl,bc
      001185 E5                    4485 	push	hl
      001186 7D                    4486 	ld	a, l
      001187 F8 04                 4487 	ldhl	sp,	#4
      001189 77                    4488 	ld	(hl), a
      00118A E1                    4489 	pop	hl
      00118B 7C                    4490 	ld	a, h
      00118C F8 03                 4491 	ldhl	sp,	#3
                                   4492 ;src/main.c:451: if (!enemies[i].alive) {
      00118E 32                    4493 	ld	(hl-), a
      00118F 2A                    4494 	ld	a, (hl+)
      001190 5F                    4495 	ld	e, a
      001191 56                    4496 	ld	d, (hl)
      001192 21 09 00              4497 	ld	hl, #0x0009
      001195 19                    4498 	add	hl, de
      001196 4D                    4499 	ld	c, l
      001197 44                    4500 	ld	b, h
      001198 0A                    4501 	ld	a, (bc)
      001199 B7                    4502 	or	a, a
      00119A CAr12r16              4503 	jp	Z, 00133$
                                   4504 ;src/main.c:454: enemies[i].x -= xOverflow;
      00119D F8 02                 4505 	ldhl	sp,#2
      00119F 2A                    4506 	ld	a, (hl+)
      0011A0 5F                    4507 	ld	e, a
      0011A1 56                    4508 	ld	d, (hl)
      0011A2 1A                    4509 	ld	a, (de)
      0011A3 4F                    4510 	ld	c, a
      0011A4 13                    4511 	inc	de
      0011A5 1A                    4512 	ld	a, (de)
      0011A6 47                    4513 	ld	b, a
      0011A7 21rA1r00              4514 	ld	hl, #_xOverflow
      0011AA 2A                    4515 	ld	a, (hl+)
      0011AB 5F                    4516 	ld	e, a
      0011AC 56                    4517 	ld	d, (hl)
      0011AD 79                    4518 	ld	a, c
      0011AE 93                    4519 	sub	a, e
      0011AF 5F                    4520 	ld	e, a
      0011B0 78                    4521 	ld	a, b
      0011B1 9A                    4522 	sbc	a, d
      0011B2 F8 0E                 4523 	ldhl	sp,	#14
      0011B4 32                    4524 	ld	(hl-), a
      0011B5 73                    4525 	ld	(hl), e
      0011B6 F8 02                 4526 	ldhl	sp,#2
      0011B8 2A                    4527 	ld	a, (hl+)
      0011B9 5F                    4528 	ld	e, a
      0011BA 56                    4529 	ld	d, (hl)
      0011BB F8 0D                 4530 	ldhl	sp,	#13
      0011BD 2A                    4531 	ld	a, (hl+)
      0011BE 12                    4532 	ld	(de), a
      0011BF 13                    4533 	inc	de
      0011C0 7E                    4534 	ld	a, (hl)
      0011C1 12                    4535 	ld	(de), a
                                   4536 ;src/main.c:455: enemies[i].y -= yOverflow;
      0011C2 F8 02                 4537 	ldhl	sp,#2
      0011C4 2A                    4538 	ld	a, (hl+)
      0011C5 5F                    4539 	ld	e, a
      0011C6 56                    4540 	ld	d, (hl)
      0011C7 21 02 00              4541 	ld	hl, #0x0002
      0011CA 19                    4542 	add	hl, de
      0011CB E5                    4543 	push	hl
      0011CC 7D                    4544 	ld	a, l
      0011CD F8 06                 4545 	ldhl	sp,	#6
      0011CF 77                    4546 	ld	(hl), a
      0011D0 E1                    4547 	pop	hl
      0011D1 7C                    4548 	ld	a, h
      0011D2 F8 05                 4549 	ldhl	sp,	#5
      0011D4 32                    4550 	ld	(hl-), a
      0011D5 2A                    4551 	ld	a, (hl+)
      0011D6 5F                    4552 	ld	e, a
      0011D7 56                    4553 	ld	d, (hl)
      0011D8 1A                    4554 	ld	a, (de)
      0011D9 4F                    4555 	ld	c, a
      0011DA 13                    4556 	inc	de
      0011DB 1A                    4557 	ld	a, (de)
      0011DC 47                    4558 	ld	b, a
      0011DD 79                    4559 	ld	a, c
      0011DE 21rA3r00              4560 	ld	hl, #_yOverflow
      0011E1 96                    4561 	sub	a, (hl)
      0011E2 23                    4562 	inc	hl
      0011E3 4F                    4563 	ld	c, a
      0011E4 78                    4564 	ld	a, b
      0011E5 9E                    4565 	sbc	a, (hl)
      0011E6 47                    4566 	ld	b, a
      0011E7 F8 04                 4567 	ldhl	sp,	#4
      0011E9 2A                    4568 	ld	a,	(hl+)
      0011EA 66                    4569 	ld	h, (hl)
      0011EB 6F                    4570 	ld	l, a
      0011EC 79                    4571 	ld	a, c
      0011ED 22                    4572 	ld	(hl+), a
      0011EE 70                    4573 	ld	(hl), b
                                   4574 ;src/main.c:458: if (abs(enemies[i].x - playerDrawX) > 8) {
      0011EF F8 0D                 4575 	ldhl	sp,	#13
      0011F1 7E                    4576 	ld	a, (hl)
      0011F2 21r9Br00              4577 	ld	hl, #_playerDrawX
      0011F5 4E                    4578 	ld	c, (hl)
      0011F6 91                    4579 	sub	a, c
      0011F7 4F                    4580 	ld	c, a
                                   4581 ;src/main.c:361: if (value >= 0) return value;
      0011F8 CB 79                 4582 	bit	7, c
      0011FA 20 03                 4583 	jr	NZ, 00169$
      0011FC 41                    4584 	ld	b, c
      0011FD 18 03                 4585 	jr	00171$
      0011FF                       4586 00169$:
                                   4587 ;src/main.c:362: else return - value;
      0011FF AF                    4588 	xor	a, a
      001200 91                    4589 	sub	a, c
      001201 47                    4590 	ld	b, a
                                   4591 ;src/main.c:458: if (abs(enemies[i].x - playerDrawX) > 8) {
      001202                       4592 00171$:
                                   4593 ;src/main.c:473: enemies[i].ySpeed += enemies[i].accel;
      001202 F8 02                 4594 	ldhl	sp,#2
      001204 2A                    4595 	ld	a, (hl+)
      001205 5F                    4596 	ld	e, a
      001206 56                    4597 	ld	d, (hl)
      001207 21 0D 00              4598 	ld	hl, #0x000d
      00120A 19                    4599 	add	hl, de
      00120B 33                    4600 	inc	sp
      00120C 33                    4601 	inc	sp
      00120D E5                    4602 	push	hl
                                   4603 ;src/main.c:460: enemies[i].xSpeed += enemies[i].accel;
      00120E F8 02                 4604 	ldhl	sp,#2
      001210 2A                    4605 	ld	a, (hl+)
      001211 5F                    4606 	ld	e, a
      001212 56                    4607 	ld	d, (hl)
      001213 21 0E 00              4608 	ld	hl, #0x000e
      001216 19                    4609 	add	hl, de
      001217 E5                    4610 	push	hl
      001218 7D                    4611 	ld	a, l
      001219 F8 08                 4612 	ldhl	sp,	#8
      00121B 77                    4613 	ld	(hl), a
      00121C E1                    4614 	pop	hl
      00121D 7C                    4615 	ld	a, h
      00121E F8 07                 4616 	ldhl	sp,	#7
                                   4617 ;src/main.c:467: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      001220 32                    4618 	ld	(hl-), a
      001221 2A                    4619 	ld	a, (hl+)
      001222 5F                    4620 	ld	e, a
      001223 56                    4621 	ld	d, (hl)
      001224 1A                    4622 	ld	a, (de)
      001225 4F                    4623 	ld	c, a
                                   4624 ;src/main.c:458: if (abs(enemies[i].x - playerDrawX) > 8) {
      001226 58                    4625 	ld	e, b
      001227 3E 08                 4626 	ld	a,#0x08
      001229 57                    4627 	ld	d,a
      00122A 90                    4628 	sub	a, b
      00122B CB 7B                 4629 	bit	7, e
      00122D 28 07                 4630 	jr	Z, 00407$
      00122F CB 7A                 4631 	bit	7, d
      001231 20 08                 4632 	jr	NZ, 00408$
      001233 BF                    4633 	cp	a, a
      001234 18 05                 4634 	jr	00408$
      001236                       4635 00407$:
      001236 CB 7A                 4636 	bit	7, d
      001238 28 01                 4637 	jr	Z, 00408$
      00123A 37                    4638 	scf
      00123B                       4639 00408$:
      00123B 30 4E                 4640 	jr	NC, 00111$
                                   4641 ;src/main.c:459: if (enemies[i].x < playerDrawX) {
      00123D F8 02                 4642 	ldhl	sp,#2
      00123F 2A                    4643 	ld	a, (hl+)
      001240 5F                    4644 	ld	e, a
      001241 56                    4645 	ld	d, (hl)
      001242 1A                    4646 	ld	a, (de)
      001243 F8 0B                 4647 	ldhl	sp,	#11
      001245 22                    4648 	ld	(hl+), a
      001246 13                    4649 	inc	de
      001247 1A                    4650 	ld	a, (de)
      001248 77                    4651 	ld	(hl), a
      001249 FAr9Br00              4652 	ld	a, (#_playerDrawX)
      00124C F8 0D                 4653 	ldhl	sp,	#13
      00124E 22                    4654 	ld	(hl+), a
      00124F 36 00                 4655 	ld	(hl), #0x00
                                   4656 ;src/main.c:460: enemies[i].xSpeed += enemies[i].accel;
      001251 D1                    4657 	pop	de
      001252 D5                    4658 	push	de
      001253 1A                    4659 	ld	a, (de)
      001254 47                    4660 	ld	b, a
                                   4661 ;src/main.c:459: if (enemies[i].x < playerDrawX) {
      001255 F8 0B                 4662 	ldhl	sp,	#11
      001257 5D                    4663 	ld	e, l
      001258 54                    4664 	ld	d, h
      001259 F8 0D                 4665 	ldhl	sp,	#13
      00125B 1A                    4666 	ld	a, (de)
      00125C 13                    4667 	inc	de
      00125D 96                    4668 	sub	a, (hl)
      00125E 23                    4669 	inc	hl
      00125F 1A                    4670 	ld	a, (de)
      001260 9E                    4671 	sbc	a, (hl)
      001261 1A                    4672 	ld	a, (de)
      001262 57                    4673 	ld	d, a
      001263 CB 7E                 4674 	bit	7, (hl)
      001265 28 07                 4675 	jr	Z, 00409$
      001267 CB 7A                 4676 	bit	7, d
      001269 20 08                 4677 	jr	NZ, 00410$
      00126B BF                    4678 	cp	a, a
      00126C 18 05                 4679 	jr	00410$
      00126E                       4680 00409$:
      00126E CB 7A                 4681 	bit	7, d
      001270 28 01                 4682 	jr	Z, 00410$
      001272 37                    4683 	scf
      001273                       4684 00410$:
      001273 30 0B                 4685 	jr	NC, 00104$
                                   4686 ;src/main.c:460: enemies[i].xSpeed += enemies[i].accel;
      001275 79                    4687 	ld	a, c
      001276 80                    4688 	add	a, b
      001277 4F                    4689 	ld	c, a
      001278 F8 06                 4690 	ldhl	sp,	#6
      00127A 2A                    4691 	ld	a,	(hl+)
      00127B 66                    4692 	ld	h, (hl)
      00127C 6F                    4693 	ld	l, a
      00127D 71                    4694 	ld	(hl), c
      00127E 18 38                 4695 	jr	00112$
      001280                       4696 00104$:
                                   4697 ;src/main.c:463: enemies[i].xSpeed -= enemies[i].accel;
      001280 79                    4698 	ld	a, c
      001281 90                    4699 	sub	a, b
      001282 4F                    4700 	ld	c, a
      001283 F8 06                 4701 	ldhl	sp,	#6
      001285 2A                    4702 	ld	a,	(hl+)
      001286 66                    4703 	ld	h, (hl)
      001287 6F                    4704 	ld	l, a
      001288 71                    4705 	ld	(hl), c
      001289 18 2D                 4706 	jr	00112$
      00128B                       4707 00111$:
                                   4708 ;src/main.c:467: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      00128B 59                    4709 	ld	e, c
      00128C AF                    4710 	xor	a, a
      00128D 57                    4711 	ld	d, a
      00128E 91                    4712 	sub	a, c
      00128F CB 7B                 4713 	bit	7, e
      001291 28 07                 4714 	jr	Z, 00411$
      001293 CB 7A                 4715 	bit	7, d
      001295 20 08                 4716 	jr	NZ, 00412$
      001297 BF                    4717 	cp	a, a
      001298 18 05                 4718 	jr	00412$
      00129A                       4719 00411$:
      00129A CB 7A                 4720 	bit	7, d
      00129C 28 01                 4721 	jr	Z, 00412$
      00129E 37                    4722 	scf
      00129F                       4723 00412$:
      00129F 30 07                 4724 	jr	NC, 00107$
      0012A1 0D                    4725 	dec	c
      0012A2 F8 06                 4726 	ldhl	sp,	#6
      0012A4 2A                    4727 	ld	a,	(hl+)
      0012A5 66                    4728 	ld	h, (hl)
      0012A6 6F                    4729 	ld	l, a
      0012A7 71                    4730 	ld	(hl), c
      0012A8                       4731 00107$:
      0012A8 F8 06                 4732 	ldhl	sp,#6
      0012AA 2A                    4733 	ld	a, (hl+)
      0012AB 5F                    4734 	ld	e, a
      0012AC 56                    4735 	ld	d, (hl)
      0012AD 1A                    4736 	ld	a, (de)
      0012AE 4F                    4737 	ld	c, a
                                   4738 ;src/main.c:468: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      0012AF CB 79                 4739 	bit	7, c
      0012B1 28 05                 4740 	jr	Z, 00112$
      0012B3 0C                    4741 	inc	c
      0012B4 3A                    4742 	ld	a, (hl-)
      0012B5 6E                    4743 	ld	l, (hl)
      0012B6 67                    4744 	ld	h, a
      0012B7 71                    4745 	ld	(hl), c
      0012B8                       4746 00112$:
                                   4747 ;src/main.c:471: if (abs(enemies[i].y - playerDrawY) > 8) {
      0012B8 F8 04                 4748 	ldhl	sp,#4
      0012BA 2A                    4749 	ld	a, (hl+)
      0012BB 5F                    4750 	ld	e, a
      0012BC 56                    4751 	ld	d, (hl)
      0012BD 1A                    4752 	ld	a, (de)
      0012BE 4F                    4753 	ld	c, a
      0012BF 13                    4754 	inc	de
      0012C0 1A                    4755 	ld	a, (de)
      0012C1 47                    4756 	ld	b, a
      0012C2 79                    4757 	ld	a, c
      0012C3 21r9Cr00              4758 	ld	hl, #_playerDrawY
      0012C6 5E                    4759 	ld	e, (hl)
      0012C7 93                    4760 	sub	a, e
      0012C8 6F                    4761 	ld	l, a
                                   4762 ;	spillPairReg hl
                                   4763 ;	spillPairReg hl
                                   4764 ;src/main.c:361: if (value >= 0) return value;
      0012C9 CB 7D                 4765 	bit	7, l
      0012CB 20 06                 4766 	jr	NZ, 00173$
      0012CD 7D                    4767 	ld	a, l
      0012CE F8 0E                 4768 	ldhl	sp,	#14
      0012D0 77                    4769 	ld	(hl), a
      0012D1 18 06                 4770 	jr	00175$
      0012D3                       4771 00173$:
                                   4772 ;src/main.c:362: else return - value;
      0012D3 AF                    4773 	xor	a, a
      0012D4 95                    4774 	sub	a, l
      0012D5 5F                    4775 	ld	e, a
      0012D6 F8 0E                 4776 	ldhl	sp,	#14
      0012D8 73                    4777 	ld	(hl), e
                                   4778 ;src/main.c:471: if (abs(enemies[i].y - playerDrawY) > 8) {
      0012D9                       4779 00175$:
                                   4780 ;src/main.c:473: enemies[i].ySpeed += enemies[i].accel;
      0012D9 F8 02                 4781 	ldhl	sp,#2
      0012DB 2A                    4782 	ld	a, (hl+)
      0012DC 5F                    4783 	ld	e, a
      0012DD 56                    4784 	ld	d, (hl)
      0012DE 21 0F 00              4785 	ld	hl, #0x000f
      0012E1 19                    4786 	add	hl, de
      0012E2 E5                    4787 	push	hl
      0012E3 7D                    4788 	ld	a, l
      0012E4 F8 0A                 4789 	ldhl	sp,	#10
      0012E6 77                    4790 	ld	(hl), a
      0012E7 E1                    4791 	pop	hl
      0012E8 7C                    4792 	ld	a, h
      0012E9 F8 09                 4793 	ldhl	sp,	#9
                                   4794 ;src/main.c:480: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      0012EB 32                    4795 	ld	(hl-), a
      0012EC 2A                    4796 	ld	a, (hl+)
      0012ED 5F                    4797 	ld	e, a
      0012EE 2A                    4798 	ld	a, (hl+)
      0012EF 23                    4799 	inc	hl
      0012F0 57                    4800 	ld	d, a
      0012F1 1A                    4801 	ld	a, (de)
      0012F2 77                    4802 	ld	(hl), a
                                   4803 ;src/main.c:471: if (abs(enemies[i].y - playerDrawY) > 8) {
      0012F3 F8 0E                 4804 	ldhl	sp,	#14
      0012F5 5E                    4805 	ld	e, (hl)
      0012F6 3E 08                 4806 	ld	a,#0x08
      0012F8 57                    4807 	ld	d,a
      0012F9 96                    4808 	sub	a, (hl)
      0012FA CB 7B                 4809 	bit	7, e
      0012FC 28 07                 4810 	jr	Z, 00413$
      0012FE CB 7A                 4811 	bit	7, d
      001300 20 08                 4812 	jr	NZ, 00414$
      001302 BF                    4813 	cp	a, a
      001303 18 05                 4814 	jr	00414$
      001305                       4815 00413$:
      001305 CB 7A                 4816 	bit	7, d
      001307 28 01                 4817 	jr	Z, 00414$
      001309 37                    4818 	scf
      00130A                       4819 00414$:
      00130A 30 44                 4820 	jr	NC, 00121$
                                   4821 ;src/main.c:472: if (enemies[i].y < playerDrawY) {
      00130C FAr9Cr00              4822 	ld	a, (#_playerDrawY)
      00130F F8 0C                 4823 	ldhl	sp,	#12
      001311 22                    4824 	ld	(hl+), a
                                   4825 ;src/main.c:460: enemies[i].xSpeed += enemies[i].accel;
      001312 AF                    4826 	xor	a, a
      001313 22                    4827 	ld	(hl+), a
      001314 D1                    4828 	pop	de
      001315 D5                    4829 	push	de
      001316 1A                    4830 	ld	a, (de)
                                   4831 ;src/main.c:472: if (enemies[i].y < playerDrawY) {
      001317 32                    4832 	ld	(hl-), a
      001318 2B                    4833 	dec	hl
      001319 79                    4834 	ld	a, c
      00131A 96                    4835 	sub	a, (hl)
      00131B 23                    4836 	inc	hl
      00131C 78                    4837 	ld	a, b
      00131D 9E                    4838 	sbc	a, (hl)
      00131E 78                    4839 	ld	a, b
      00131F 57                    4840 	ld	d, a
      001320 CB 7E                 4841 	bit	7, (hl)
      001322 28 07                 4842 	jr	Z, 00415$
      001324 CB 7A                 4843 	bit	7, d
      001326 20 08                 4844 	jr	NZ, 00416$
      001328 BF                    4845 	cp	a, a
      001329 18 05                 4846 	jr	00416$
      00132B                       4847 00415$:
      00132B CB 7A                 4848 	bit	7, d
      00132D 28 01                 4849 	jr	Z, 00416$
      00132F 37                    4850 	scf
      001330                       4851 00416$:
      001330 30 0F                 4852 	jr	NC, 00114$
                                   4853 ;src/main.c:473: enemies[i].ySpeed += enemies[i].accel;
      001332 F8 0B                 4854 	ldhl	sp,	#11
      001334 7E                    4855 	ld	a, (hl)
      001335 F8 0E                 4856 	ldhl	sp,	#14
      001337 86                    4857 	add	a, (hl)
      001338 4F                    4858 	ld	c, a
      001339 F8 08                 4859 	ldhl	sp,	#8
      00133B 2A                    4860 	ld	a,	(hl+)
      00133C 66                    4861 	ld	h, (hl)
      00133D 6F                    4862 	ld	l, a
      00133E 71                    4863 	ld	(hl), c
      00133F 18 41                 4864 	jr	00122$
      001341                       4865 00114$:
                                   4866 ;src/main.c:476: enemies[i].ySpeed -= enemies[i].accel;
      001341 F8 0B                 4867 	ldhl	sp,	#11
      001343 7E                    4868 	ld	a, (hl)
      001344 F8 0E                 4869 	ldhl	sp,	#14
      001346 96                    4870 	sub	a, (hl)
      001347 4F                    4871 	ld	c, a
      001348 F8 08                 4872 	ldhl	sp,	#8
      00134A 2A                    4873 	ld	a,	(hl+)
      00134B 66                    4874 	ld	h, (hl)
      00134C 6F                    4875 	ld	l, a
      00134D 71                    4876 	ld	(hl), c
      00134E 18 32                 4877 	jr	00122$
      001350                       4878 00121$:
                                   4879 ;src/main.c:480: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001350 F8 0B                 4880 	ldhl	sp,	#11
      001352 5E                    4881 	ld	e, (hl)
      001353 AF                    4882 	xor	a, a
      001354 57                    4883 	ld	d, a
      001355 96                    4884 	sub	a, (hl)
      001356 CB 7B                 4885 	bit	7, e
      001358 28 07                 4886 	jr	Z, 00417$
      00135A CB 7A                 4887 	bit	7, d
      00135C 20 08                 4888 	jr	NZ, 00418$
      00135E BF                    4889 	cp	a, a
      00135F 18 05                 4890 	jr	00418$
      001361                       4891 00417$:
      001361 CB 7A                 4892 	bit	7, d
      001363 28 01                 4893 	jr	Z, 00418$
      001365 37                    4894 	scf
      001366                       4895 00418$:
      001366 30 0A                 4896 	jr	NC, 00117$
      001368 F8 0B                 4897 	ldhl	sp,	#11
      00136A 4E                    4898 	ld	c, (hl)
      00136B 0D                    4899 	dec	c
      00136C F8 08                 4900 	ldhl	sp,	#8
      00136E 2A                    4901 	ld	a,	(hl+)
      00136F 66                    4902 	ld	h, (hl)
      001370 6F                    4903 	ld	l, a
      001371 71                    4904 	ld	(hl), c
      001372                       4905 00117$:
      001372 F8 08                 4906 	ldhl	sp,#8
      001374 2A                    4907 	ld	a, (hl+)
      001375 5F                    4908 	ld	e, a
      001376 56                    4909 	ld	d, (hl)
      001377 1A                    4910 	ld	a, (de)
      001378 4F                    4911 	ld	c, a
                                   4912 ;src/main.c:481: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      001379 CB 79                 4913 	bit	7, c
      00137B 28 05                 4914 	jr	Z, 00122$
      00137D 0C                    4915 	inc	c
      00137E 3A                    4916 	ld	a, (hl-)
      00137F 6E                    4917 	ld	l, (hl)
      001380 67                    4918 	ld	h, a
      001381 71                    4919 	ld	(hl), c
      001382                       4920 00122$:
                                   4921 ;src/main.c:485: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001382 F8 02                 4922 	ldhl	sp,#2
      001384 2A                    4923 	ld	a, (hl+)
      001385 5F                    4924 	ld	e, a
      001386 56                    4925 	ld	d, (hl)
      001387 21 0C 00              4926 	ld	hl, #0x000c
      00138A 19                    4927 	add	hl, de
      00138B E5                    4928 	push	hl
      00138C 7D                    4929 	ld	a, l
      00138D F8 0C                 4930 	ldhl	sp,	#12
      00138F 77                    4931 	ld	(hl), a
      001390 E1                    4932 	pop	hl
      001391 7C                    4933 	ld	a, h
      001392 F8 0B                 4934 	ldhl	sp,	#11
      001394 32                    4935 	ld	(hl-), a
      001395 2A                    4936 	ld	a, (hl+)
      001396 5F                    4937 	ld	e, a
      001397 2A                    4938 	ld	a, (hl+)
      001398 57                    4939 	ld	d, a
      001399 1A                    4940 	ld	a, (de)
      00139A 4F                    4941 	ld	c, a
      00139B 22                    4942 	ld	(hl+), a
      00139C AF                    4943 	xor	a, a
      00139D 91                    4944 	sub	a, c
      00139E 77                    4945 	ld	(hl), a
      00139F F8 06                 4946 	ldhl	sp,#6
      0013A1 2A                    4947 	ld	a, (hl+)
      0013A2 5F                    4948 	ld	e, a
      0013A3 56                    4949 	ld	d, (hl)
      0013A4 1A                    4950 	ld	a, (de)
      0013A5 F8 0E                 4951 	ldhl	sp,	#14
                                   4952 ;src/main.c:342: return (value < min) ? min : (value > max) ? max : value;
      0013A7 32                    4953 	ld	(hl-), a
      0013A8 2A                    4954 	ld	a, (hl+)
      0013A9 5F                    4955 	ld	e, a
      0013AA 56                    4956 	ld	d, (hl)
      0013AB 3A                    4957 	ld	a, (hl-)
      0013AC 96                    4958 	sub	a, (hl)
      0013AD CB 7B                 4959 	bit	7, e
      0013AF 28 07                 4960 	jr	Z, 00419$
      0013B1 CB 7A                 4961 	bit	7, d
      0013B3 20 08                 4962 	jr	NZ, 00420$
      0013B5 BF                    4963 	cp	a, a
      0013B6 18 05                 4964 	jr	00420$
      0013B8                       4965 00419$:
      0013B8 CB 7A                 4966 	bit	7, d
      0013BA 28 01                 4967 	jr	Z, 00420$
      0013BC 37                    4968 	scf
      0013BD                       4969 00420$:
      0013BD 30 06                 4970 	jr	NC, 00202$
      0013BF F8 0D                 4971 	ldhl	sp,	#13
      0013C1 2A                    4972 	ld	a, (hl+)
      0013C2 77                    4973 	ld	(hl), a
      0013C3 18 26                 4974 	jr	00203$
      0013C5                       4975 00202$:
      0013C5 F8 0E                 4976 	ldhl	sp,	#14
      0013C7 3A                    4977 	ld	a, (hl-)
      0013C8 2B                    4978 	dec	hl
      0013C9 5F                    4979 	ld	e, a
      0013CA 56                    4980 	ld	d, (hl)
      0013CB 2A                    4981 	ld	a, (hl+)
      0013CC 23                    4982 	inc	hl
      0013CD 96                    4983 	sub	a, (hl)
      0013CE CB 7B                 4984 	bit	7, e
      0013D0 28 07                 4985 	jr	Z, 00421$
      0013D2 CB 7A                 4986 	bit	7, d
      0013D4 20 08                 4987 	jr	NZ, 00422$
      0013D6 BF                    4988 	cp	a, a
      0013D7 18 05                 4989 	jr	00422$
      0013D9                       4990 00421$:
      0013D9 CB 7A                 4991 	bit	7, d
      0013DB 28 01                 4992 	jr	Z, 00422$
      0013DD 37                    4993 	scf
      0013DE                       4994 00422$:
      0013DE 30 05                 4995 	jr	NC, 00204$
      0013E0 F8 0C                 4996 	ldhl	sp,	#12
      0013E2 5E                    4997 	ld	e, (hl)
      0013E3 18 03                 4998 	jr	00205$
      0013E5                       4999 00204$:
      0013E5 F8 0E                 5000 	ldhl	sp,	#14
      0013E7 5E                    5001 	ld	e, (hl)
      0013E8                       5002 00205$:
      0013E8 F8 0E                 5003 	ldhl	sp,	#14
      0013EA 73                    5004 	ld	(hl), e
      0013EB                       5005 00203$:
      0013EB F8 0E                 5006 	ldhl	sp,	#14
      0013ED 4E                    5007 	ld	c, (hl)
                                   5008 ;src/main.c:485: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0013EE F8 06                 5009 	ldhl	sp,	#6
      0013F0 2A                    5010 	ld	a,	(hl+)
      0013F1 66                    5011 	ld	h, (hl)
      0013F2 6F                    5012 	ld	l, a
      0013F3 71                    5013 	ld	(hl), c
                                   5014 ;src/main.c:486: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0013F4 F8 0A                 5015 	ldhl	sp,#10
      0013F6 2A                    5016 	ld	a, (hl+)
      0013F7 5F                    5017 	ld	e, a
      0013F8 3A                    5018 	ld	a, (hl-)
      0013F9 2B                    5019 	dec	hl
      0013FA 2B                    5020 	dec	hl
      0013FB 57                    5021 	ld	d, a
      0013FC 1A                    5022 	ld	a, (de)
      0013FD 47                    5023 	ld	b, a
      0013FE 48                    5024 	ld	c, b
      0013FF AF                    5025 	xor	a, a
      001400 90                    5026 	sub	a, b
      001401 47                    5027 	ld	b, a
      001402 2A                    5028 	ld	a, (hl+)
      001403 5F                    5029 	ld	e, a
      001404 56                    5030 	ld	d, (hl)
      001405 1A                    5031 	ld	a, (de)
      001406 6F                    5032 	ld	l, a
                                   5033 ;	spillPairReg hl
                                   5034 ;	spillPairReg hl
                                   5035 ;src/main.c:342: return (value < min) ? min : (value > max) ? max : value;
      001407 58                    5036 	ld	e, b
      001408 7D                    5037 	ld	a,l
      001409 57                    5038 	ld	d,a
      00140A 90                    5039 	sub	a, b
      00140B CB 7B                 5040 	bit	7, e
      00140D 28 07                 5041 	jr	Z, 00423$
      00140F CB 7A                 5042 	bit	7, d
      001411 20 08                 5043 	jr	NZ, 00424$
      001413 BF                    5044 	cp	a, a
      001414 18 05                 5045 	jr	00424$
      001416                       5046 00423$:
      001416 CB 7A                 5047 	bit	7, d
      001418 28 01                 5048 	jr	Z, 00424$
      00141A 37                    5049 	scf
      00141B                       5050 00424$:
      00141B 30 03                 5051 	jr	NC, 00206$
      00141D 48                    5052 	ld	c, b
      00141E 18 17                 5053 	jr	00207$
      001420                       5054 00206$:
      001420 5D                    5055 	ld	e, l
      001421 79                    5056 	ld	a,c
      001422 57                    5057 	ld	d,a
      001423 95                    5058 	sub	a, l
      001424 CB 7B                 5059 	bit	7, e
      001426 28 07                 5060 	jr	Z, 00425$
      001428 CB 7A                 5061 	bit	7, d
      00142A 20 08                 5062 	jr	NZ, 00426$
      00142C BF                    5063 	cp	a, a
      00142D 18 05                 5064 	jr	00426$
      00142F                       5065 00425$:
      00142F CB 7A                 5066 	bit	7, d
      001431 28 01                 5067 	jr	Z, 00426$
      001433 37                    5068 	scf
      001434                       5069 00426$:
      001434 38 01                 5070 	jr	C, 00209$
      001436 4D                    5071 	ld	c, l
      001437                       5072 00209$:
      001437                       5073 00207$:
                                   5074 ;src/main.c:486: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      001437 F8 08                 5075 	ldhl	sp,	#8
      001439 2A                    5076 	ld	a,	(hl+)
      00143A 66                    5077 	ld	h, (hl)
      00143B 6F                    5078 	ld	l, a
      00143C 71                    5079 	ld	(hl), c
                                   5080 ;src/main.c:489: enemies[i].xReserve += enemies[i].xSpeed;
      00143D F8 02                 5081 	ldhl	sp,#2
      00143F 2A                    5082 	ld	a, (hl+)
      001440 5F                    5083 	ld	e, a
      001441 56                    5084 	ld	d, (hl)
      001442 21 04 00              5085 	ld	hl, #0x0004
      001445 19                    5086 	add	hl, de
      001446 E5                    5087 	push	hl
      001447 7D                    5088 	ld	a, l
      001448 F8 0F                 5089 	ldhl	sp,	#15
      00144A 77                    5090 	ld	(hl), a
      00144B E1                    5091 	pop	hl
      00144C 7C                    5092 	ld	a, h
      00144D F8 0E                 5093 	ldhl	sp,	#14
      00144F 32                    5094 	ld	(hl-), a
      001450 2A                    5095 	ld	a, (hl+)
      001451 5F                    5096 	ld	e, a
      001452 56                    5097 	ld	d, (hl)
      001453 1A                    5098 	ld	a, (de)
      001454 47                    5099 	ld	b, a
      001455 F8 06                 5100 	ldhl	sp,#6
      001457 2A                    5101 	ld	a, (hl+)
      001458 5F                    5102 	ld	e, a
      001459 56                    5103 	ld	d, (hl)
      00145A 1A                    5104 	ld	a, (de)
      00145B 80                    5105 	add	a, b
      00145C 47                    5106 	ld	b, a
      00145D F8 0D                 5107 	ldhl	sp,	#13
      00145F 2A                    5108 	ld	a,	(hl+)
      001460 66                    5109 	ld	h, (hl)
      001461 6F                    5110 	ld	l, a
      001462 70                    5111 	ld	(hl), b
                                   5112 ;src/main.c:490: enemies[i].yReserve += enemies[i].ySpeed;
      001463 F8 02                 5113 	ldhl	sp,#2
      001465 2A                    5114 	ld	a, (hl+)
      001466 5F                    5115 	ld	e, a
      001467 56                    5116 	ld	d, (hl)
      001468 21 05 00              5117 	ld	hl, #0x0005
      00146B 19                    5118 	add	hl, de
      00146C E5                    5119 	push	hl
      00146D 7D                    5120 	ld	a, l
      00146E F8 0C                 5121 	ldhl	sp,	#12
      001470 77                    5122 	ld	(hl), a
      001471 E1                    5123 	pop	hl
      001472 7C                    5124 	ld	a, h
      001473 F8 0B                 5125 	ldhl	sp,	#11
      001475 32                    5126 	ld	(hl-), a
      001476 2A                    5127 	ld	a, (hl+)
      001477 5F                    5128 	ld	e, a
      001478 56                    5129 	ld	d, (hl)
      001479 1A                    5130 	ld	a, (de)
      00147A 81                    5131 	add	a, c
      00147B 4F                    5132 	ld	c, a
      00147C 3A                    5133 	ld	a, (hl-)
      00147D 6E                    5134 	ld	l, (hl)
      00147E 67                    5135 	ld	h, a
      00147F 71                    5136 	ld	(hl), c
                                   5137 ;src/main.c:494: if (enemies[i].xReserve >> 3 > 0) {
      001480 F8 0D                 5138 	ldhl	sp,#13
      001482 2A                    5139 	ld	a, (hl+)
      001483 5F                    5140 	ld	e, a
      001484 3A                    5141 	ld	a, (hl-)
      001485 2B                    5142 	dec	hl
      001486 57                    5143 	ld	d, a
      001487 1A                    5144 	ld	a, (de)
      001488 77                    5145 	ld	(hl), a
      001489 CB 28                 5146 	sra	b
      00148B CB 28                 5147 	sra	b
      00148D CB 28                 5148 	sra	b
      00148F 58                    5149 	ld	e, b
      001490 AF                    5150 	xor	a, a
      001491 57                    5151 	ld	d, a
      001492 90                    5152 	sub	a, b
      001493 CB 7B                 5153 	bit	7, e
      001495 28 07                 5154 	jr	Z, 00427$
      001497 CB 7A                 5155 	bit	7, d
      001499 20 08                 5156 	jr	NZ, 00428$
      00149B BF                    5157 	cp	a, a
      00149C 18 05                 5158 	jr	00428$
      00149E                       5159 00427$:
      00149E CB 7A                 5160 	bit	7, d
      0014A0 28 01                 5161 	jr	Z, 00428$
      0014A2 37                    5162 	scf
      0014A3                       5163 00428$:
      0014A3 30 3F                 5164 	jr	NC, 00126$
                                   5165 ;src/main.c:495: int8_t xMovement = enemies[i].xReserve >> 3;
      0014A5 F8 0C                 5166 	ldhl	sp,	#12
      0014A7 7E                    5167 	ld	a, (hl)
      0014A8 CB 2F                 5168 	sra	a
      0014AA CB 2F                 5169 	sra	a
      0014AC CB 2F                 5170 	sra	a
      0014AE 77                    5171 	ld	(hl), a
                                   5172 ;src/main.c:496: enemies[i].x += xMovement;
      0014AF F8 02                 5173 	ldhl	sp,#2
      0014B1 2A                    5174 	ld	a, (hl+)
      0014B2 5F                    5175 	ld	e, a
      0014B3 56                    5176 	ld	d, (hl)
      0014B4 1A                    5177 	ld	a, (de)
      0014B5 4F                    5178 	ld	c, a
      0014B6 13                    5179 	inc	de
      0014B7 1A                    5180 	ld	a, (de)
      0014B8 47                    5181 	ld	b, a
      0014B9 F8 0C                 5182 	ldhl	sp,	#12
      0014BB 7E                    5183 	ld	a, (hl)
      0014BC 5F                    5184 	ld	e, a
      0014BD 07                    5185 	rlca
      0014BE 9F                    5186 	sbc	a, a
      0014BF 57                    5187 	ld	d, a
      0014C0 69                    5188 	ld	l, c
                                   5189 ;	spillPairReg hl
                                   5190 ;	spillPairReg hl
      0014C1 60                    5191 	ld	h, b
                                   5192 ;	spillPairReg hl
                                   5193 ;	spillPairReg hl
      0014C2 19                    5194 	add	hl, de
      0014C3 4D                    5195 	ld	c, l
      0014C4 44                    5196 	ld	b, h
      0014C5 F8 02                 5197 	ldhl	sp,	#2
      0014C7 2A                    5198 	ld	a,	(hl+)
      0014C8 66                    5199 	ld	h, (hl)
      0014C9 6F                    5200 	ld	l, a
      0014CA 79                    5201 	ld	a, c
      0014CB 22                    5202 	ld	(hl+), a
      0014CC 70                    5203 	ld	(hl), b
                                   5204 ;src/main.c:497: enemies[i].xReserve -=  xMovement << 3;
      0014CD F8 0D                 5205 	ldhl	sp,#13
      0014CF 2A                    5206 	ld	a, (hl+)
      0014D0 5F                    5207 	ld	e, a
      0014D1 3A                    5208 	ld	a, (hl-)
      0014D2 2B                    5209 	dec	hl
      0014D3 57                    5210 	ld	d, a
      0014D4 1A                    5211 	ld	a, (de)
      0014D5 F5                    5212 	push	af
      0014D6 2A                    5213 	ld	a, (hl+)
      0014D7 87                    5214 	add	a, a
      0014D8 87                    5215 	add	a, a
      0014D9 87                    5216 	add	a, a
      0014DA 4F                    5217 	ld	c, a
      0014DB F1                    5218 	pop	af
      0014DC 91                    5219 	sub	a, c
      0014DD 4F                    5220 	ld	c, a
      0014DE 2A                    5221 	ld	a,	(hl+)
      0014DF 66                    5222 	ld	h, (hl)
      0014E0 6F                    5223 	ld	l, a
      0014E1 71                    5224 	ld	(hl), c
      0014E2 18 69                 5225 	jr	00127$
      0014E4                       5226 00126$:
                                   5227 ;src/main.c:500: else if ((-enemies[i].xReserve) >> 3 > 0){
      0014E4 F8 0C                 5228 	ldhl	sp,	#12
      0014E6 7E                    5229 	ld	a, (hl)
      0014E7 4F                    5230 	ld	c, a
      0014E8 07                    5231 	rlca
      0014E9 9F                    5232 	sbc	a, a
      0014EA 47                    5233 	ld	b, a
      0014EB AF                    5234 	xor	a, a
      0014EC 91                    5235 	sub	a, c
      0014ED 4F                    5236 	ld	c, a
      0014EE 9F                    5237 	sbc	a, a
      0014EF 90                    5238 	sub	a, b
      0014F0 47                    5239 	ld	b, a
      0014F1 CB 28                 5240 	sra	b
      0014F3 CB 19                 5241 	rr	c
      0014F5 CB 28                 5242 	sra	b
      0014F7 CB 19                 5243 	rr	c
      0014F9 CB 28                 5244 	sra	b
      0014FB CB 19                 5245 	rr	c
      0014FD 58                    5246 	ld	e, b
      0014FE AF                    5247 	xor	a, a
      0014FF 57                    5248 	ld	d, a
      001500 B9                    5249 	cp	a, c
      001501 98                    5250 	sbc	a, b
      001502 CB 7B                 5251 	bit	7, e
      001504 28 07                 5252 	jr	Z, 00429$
      001506 CB 7A                 5253 	bit	7, d
      001508 20 08                 5254 	jr	NZ, 00430$
      00150A BF                    5255 	cp	a, a
      00150B 18 05                 5256 	jr	00430$
      00150D                       5257 00429$:
      00150D CB 7A                 5258 	bit	7, d
      00150F 28 01                 5259 	jr	Z, 00430$
      001511 37                    5260 	scf
      001512                       5261 00430$:
      001512 30 39                 5262 	jr	NC, 00127$
                                   5263 ;src/main.c:501: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      001514 AF                    5264 	xor	a, a
      001515 91                    5265 	sub	a, c
      001516 4F                    5266 	ld	c, a
      001517 F8 0C                 5267 	ldhl	sp,	#12
      001519 71                    5268 	ld	(hl), c
                                   5269 ;src/main.c:502: enemies[i].x += xMovement;
      00151A F8 02                 5270 	ldhl	sp,#2
      00151C 2A                    5271 	ld	a, (hl+)
      00151D 5F                    5272 	ld	e, a
      00151E 56                    5273 	ld	d, (hl)
      00151F 1A                    5274 	ld	a, (de)
      001520 4F                    5275 	ld	c, a
      001521 13                    5276 	inc	de
      001522 1A                    5277 	ld	a, (de)
      001523 47                    5278 	ld	b, a
      001524 F8 0C                 5279 	ldhl	sp,	#12
      001526 7E                    5280 	ld	a, (hl)
      001527 5F                    5281 	ld	e, a
      001528 07                    5282 	rlca
      001529 9F                    5283 	sbc	a, a
      00152A 57                    5284 	ld	d, a
      00152B 69                    5285 	ld	l, c
                                   5286 ;	spillPairReg hl
                                   5287 ;	spillPairReg hl
      00152C 60                    5288 	ld	h, b
                                   5289 ;	spillPairReg hl
                                   5290 ;	spillPairReg hl
      00152D 19                    5291 	add	hl, de
      00152E 4D                    5292 	ld	c, l
      00152F 44                    5293 	ld	b, h
      001530 F8 02                 5294 	ldhl	sp,	#2
      001532 2A                    5295 	ld	a,	(hl+)
      001533 66                    5296 	ld	h, (hl)
      001534 6F                    5297 	ld	l, a
      001535 79                    5298 	ld	a, c
      001536 22                    5299 	ld	(hl+), a
      001537 70                    5300 	ld	(hl), b
                                   5301 ;src/main.c:503: enemies[i].xReserve +=  (-xMovement) << 3;
      001538 F8 0D                 5302 	ldhl	sp,#13
      00153A 2A                    5303 	ld	a, (hl+)
      00153B 5F                    5304 	ld	e, a
      00153C 3A                    5305 	ld	a, (hl-)
      00153D 2B                    5306 	dec	hl
      00153E 57                    5307 	ld	d, a
      00153F 1A                    5308 	ld	a, (de)
      001540 4F                    5309 	ld	c, a
      001541 AF                    5310 	xor	a, a
      001542 96                    5311 	sub	a, (hl)
      001543 23                    5312 	inc	hl
      001544 87                    5313 	add	a, a
      001545 87                    5314 	add	a, a
      001546 87                    5315 	add	a, a
      001547 81                    5316 	add	a, c
      001548 4F                    5317 	ld	c, a
      001549 2A                    5318 	ld	a,	(hl+)
      00154A 66                    5319 	ld	h, (hl)
      00154B 6F                    5320 	ld	l, a
      00154C 71                    5321 	ld	(hl), c
      00154D                       5322 00127$:
                                   5323 ;src/main.c:490: enemies[i].yReserve += enemies[i].ySpeed;
      00154D F8 0A                 5324 	ldhl	sp,#10
      00154F 2A                    5325 	ld	a, (hl+)
      001550 5F                    5326 	ld	e, a
      001551 56                    5327 	ld	d, (hl)
      001552 1A                    5328 	ld	a, (de)
      001553 4F                    5329 	ld	c, a
                                   5330 ;src/main.c:506: if (enemies[i].yReserve >> 3 > 0) {
      001554 41                    5331 	ld	b, c
      001555 CB 28                 5332 	sra	b
      001557 CB 28                 5333 	sra	b
      001559 CB 28                 5334 	sra	b
      00155B 58                    5335 	ld	e, b
      00155C AF                    5336 	xor	a, a
      00155D 57                    5337 	ld	d, a
      00155E 90                    5338 	sub	a, b
      00155F CB 7B                 5339 	bit	7, e
      001561 28 07                 5340 	jr	Z, 00431$
      001563 CB 7A                 5341 	bit	7, d
      001565 20 08                 5342 	jr	NZ, 00432$
      001567 BF                    5343 	cp	a, a
      001568 18 05                 5344 	jr	00432$
      00156A                       5345 00431$:
      00156A CB 7A                 5346 	bit	7, d
      00156C 28 01                 5347 	jr	Z, 00432$
      00156E 37                    5348 	scf
      00156F                       5349 00432$:
      00156F 30 3A                 5350 	jr	NC, 00131$
                                   5351 ;src/main.c:507: int8_t yMovement = enemies[i].yReserve >> 3;
      001571 F8 0E                 5352 	ldhl	sp,	#14
      001573 70                    5353 	ld	(hl), b
                                   5354 ;src/main.c:508: enemies[i].y += yMovement;
      001574 F8 04                 5355 	ldhl	sp,#4
      001576 2A                    5356 	ld	a, (hl+)
      001577 5F                    5357 	ld	e, a
      001578 56                    5358 	ld	d, (hl)
      001579 1A                    5359 	ld	a, (de)
      00157A 4F                    5360 	ld	c, a
      00157B 13                    5361 	inc	de
      00157C 1A                    5362 	ld	a, (de)
      00157D 47                    5363 	ld	b, a
      00157E F8 0E                 5364 	ldhl	sp,	#14
      001580 7E                    5365 	ld	a, (hl)
      001581 5F                    5366 	ld	e, a
      001582 07                    5367 	rlca
      001583 9F                    5368 	sbc	a, a
      001584 57                    5369 	ld	d, a
      001585 69                    5370 	ld	l, c
                                   5371 ;	spillPairReg hl
                                   5372 ;	spillPairReg hl
      001586 60                    5373 	ld	h, b
                                   5374 ;	spillPairReg hl
                                   5375 ;	spillPairReg hl
      001587 19                    5376 	add	hl, de
      001588 4D                    5377 	ld	c, l
      001589 44                    5378 	ld	b, h
      00158A F8 04                 5379 	ldhl	sp,	#4
      00158C 2A                    5380 	ld	a,	(hl+)
      00158D 66                    5381 	ld	h, (hl)
      00158E 6F                    5382 	ld	l, a
      00158F 79                    5383 	ld	a, c
      001590 22                    5384 	ld	(hl+), a
      001591 70                    5385 	ld	(hl), b
                                   5386 ;src/main.c:509: enemies[i].yReserve -=  yMovement << 3;
      001592 F8 0A                 5387 	ldhl	sp,#10
      001594 2A                    5388 	ld	a, (hl+)
      001595 5F                    5389 	ld	e, a
      001596 56                    5390 	ld	d, (hl)
      001597 1A                    5391 	ld	a, (de)
      001598 F5                    5392 	push	af
      001599 F8 10                 5393 	ldhl	sp,	#16
      00159B 7E                    5394 	ld	a, (hl)
      00159C 87                    5395 	add	a, a
      00159D 87                    5396 	add	a, a
      00159E 87                    5397 	add	a, a
      00159F 4F                    5398 	ld	c, a
      0015A0 F1                    5399 	pop	af
      0015A1 91                    5400 	sub	a, c
      0015A2 4F                    5401 	ld	c, a
      0015A3 F8 0A                 5402 	ldhl	sp,	#10
      0015A5 2A                    5403 	ld	a,	(hl+)
      0015A6 66                    5404 	ld	h, (hl)
      0015A7 6F                    5405 	ld	l, a
      0015A8 71                    5406 	ld	(hl), c
      0015A9 18 67                 5407 	jr	00133$
      0015AB                       5408 00131$:
                                   5409 ;src/main.c:511: else if ((-enemies[i].yReserve) >> 3 > 0){
      0015AB 79                    5410 	ld	a, c
      0015AC 07                    5411 	rlca
      0015AD 9F                    5412 	sbc	a, a
      0015AE 47                    5413 	ld	b, a
      0015AF AF                    5414 	xor	a, a
      0015B0 91                    5415 	sub	a, c
      0015B1 4F                    5416 	ld	c, a
      0015B2 9F                    5417 	sbc	a, a
      0015B3 90                    5418 	sub	a, b
      0015B4 47                    5419 	ld	b, a
      0015B5 CB 28                 5420 	sra	b
      0015B7 CB 19                 5421 	rr	c
      0015B9 CB 28                 5422 	sra	b
      0015BB CB 19                 5423 	rr	c
      0015BD CB 28                 5424 	sra	b
      0015BF CB 19                 5425 	rr	c
      0015C1 58                    5426 	ld	e, b
      0015C2 AF                    5427 	xor	a, a
      0015C3 57                    5428 	ld	d, a
      0015C4 B9                    5429 	cp	a, c
      0015C5 98                    5430 	sbc	a, b
      0015C6 CB 7B                 5431 	bit	7, e
      0015C8 28 07                 5432 	jr	Z, 00433$
      0015CA CB 7A                 5433 	bit	7, d
      0015CC 20 08                 5434 	jr	NZ, 00434$
      0015CE BF                    5435 	cp	a, a
      0015CF 18 05                 5436 	jr	00434$
      0015D1                       5437 00433$:
      0015D1 CB 7A                 5438 	bit	7, d
      0015D3 28 01                 5439 	jr	Z, 00434$
      0015D5 37                    5440 	scf
      0015D6                       5441 00434$:
      0015D6 30 3A                 5442 	jr	NC, 00133$
                                   5443 ;src/main.c:512: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      0015D8 AF                    5444 	xor	a, a
      0015D9 91                    5445 	sub	a, c
      0015DA 4F                    5446 	ld	c, a
      0015DB F8 0E                 5447 	ldhl	sp,	#14
      0015DD 71                    5448 	ld	(hl), c
                                   5449 ;src/main.c:513: enemies[i].y += yMovement;
      0015DE F8 04                 5450 	ldhl	sp,#4
      0015E0 2A                    5451 	ld	a, (hl+)
      0015E1 5F                    5452 	ld	e, a
      0015E2 56                    5453 	ld	d, (hl)
      0015E3 1A                    5454 	ld	a, (de)
      0015E4 4F                    5455 	ld	c, a
      0015E5 13                    5456 	inc	de
      0015E6 1A                    5457 	ld	a, (de)
      0015E7 47                    5458 	ld	b, a
      0015E8 F8 0E                 5459 	ldhl	sp,	#14
      0015EA 7E                    5460 	ld	a, (hl)
      0015EB 5F                    5461 	ld	e, a
      0015EC 07                    5462 	rlca
      0015ED 9F                    5463 	sbc	a, a
      0015EE 57                    5464 	ld	d, a
      0015EF 69                    5465 	ld	l, c
      0015F0 60                    5466 	ld	h, b
      0015F1 19                    5467 	add	hl, de
      0015F2 4D                    5468 	ld	c, l
      0015F3 44                    5469 	ld	b, h
      0015F4 F8 04                 5470 	ldhl	sp,	#4
      0015F6 2A                    5471 	ld	a,	(hl+)
      0015F7 66                    5472 	ld	h, (hl)
      0015F8 6F                    5473 	ld	l, a
      0015F9 79                    5474 	ld	a, c
      0015FA 22                    5475 	ld	(hl+), a
      0015FB 70                    5476 	ld	(hl), b
                                   5477 ;src/main.c:514: enemies[i].yReserve +=  (-yMovement) << 3;
      0015FC F8 0A                 5478 	ldhl	sp,#10
      0015FE 2A                    5479 	ld	a, (hl+)
      0015FF 5F                    5480 	ld	e, a
      001600 56                    5481 	ld	d, (hl)
      001601 1A                    5482 	ld	a, (de)
      001602 4F                    5483 	ld	c, a
      001603 AF                    5484 	xor	a, a
      001604 F8 0E                 5485 	ldhl	sp,	#14
      001606 96                    5486 	sub	a, (hl)
      001607 87                    5487 	add	a, a
      001608 87                    5488 	add	a, a
      001609 87                    5489 	add	a, a
      00160A 81                    5490 	add	a, c
      00160B 4F                    5491 	ld	c, a
      00160C F8 0A                 5492 	ldhl	sp,	#10
      00160E 2A                    5493 	ld	a,	(hl+)
      00160F 66                    5494 	ld	h, (hl)
      001610 6F                    5495 	ld	l, a
      001611 71                    5496 	ld	(hl), c
      001612                       5497 00133$:
                                   5498 ;src/main.c:450: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001612 F8 0F                 5499 	ldhl	sp,	#15
      001614 34                    5500 	inc	(hl)
      001615 C3r6Cr11              5501 	jp	00196$
      001618                       5502 00134$:
                                   5503 ;src/main.c:521: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001618 F8 0F                 5504 	ldhl	sp,	#15
      00161A 36 00                 5505 	ld	(hl), #0x00
      00161C                       5506 00198$:
      00161C 21r8Er0B              5507 	ld	hl, #_ENEMYCOUNT
      00161F 4E                    5508 	ld	c, (hl)
      001620 F8 0F                 5509 	ldhl	sp,	#15
      001622 7E                    5510 	ld	a, (hl)
      001623 91                    5511 	sub	a, c
      001624 D2rC2r19              5512 	jp	NC, 00200$
                                   5513 ;src/main.c:523: if (enemies[i].alive) {
      001627 4E                    5514 	ld	c, (hl)
      001628 06 00                 5515 	ld	b, #0x00
      00162A 69                    5516 	ld	l, c
      00162B 60                    5517 	ld	h, b
      00162C 29                    5518 	add	hl, hl
      00162D 29                    5519 	add	hl, hl
      00162E 29                    5520 	add	hl, hl
      00162F 09                    5521 	add	hl, bc
      001630 29                    5522 	add	hl, hl
                                   5523 ;src/main.c:539: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      001631 01r5Ar00              5524 	ld	bc,#_enemies
      001634 09                    5525 	add	hl,bc
      001635 E5                    5526 	push	hl
      001636 7D                    5527 	ld	a, l
      001637 F8 03                 5528 	ldhl	sp,	#3
      001639 77                    5529 	ld	(hl), a
      00163A E1                    5530 	pop	hl
      00163B 7C                    5531 	ld	a, h
      00163C F8 02                 5532 	ldhl	sp,	#2
                                   5533 ;src/main.c:523: if (enemies[i].alive) {
      00163E 32                    5534 	ld	(hl-), a
      00163F 2A                    5535 	ld	a, (hl+)
      001640 5F                    5536 	ld	e, a
      001641 56                    5537 	ld	d, (hl)
      001642 21 09 00              5538 	ld	hl, #0x0009
      001645 19                    5539 	add	hl, de
      001646 E5                    5540 	push	hl
      001647 7D                    5541 	ld	a, l
      001648 F8 05                 5542 	ldhl	sp,	#5
      00164A 77                    5543 	ld	(hl), a
      00164B E1                    5544 	pop	hl
      00164C 7C                    5545 	ld	a, h
      00164D F8 04                 5546 	ldhl	sp,	#4
      00164F 32                    5547 	ld	(hl-), a
      001650 2A                    5548 	ld	a, (hl+)
      001651 5F                    5549 	ld	e, a
      001652 56                    5550 	ld	d, (hl)
      001653 1A                    5551 	ld	a, (de)
      001654 F8 0E                 5552 	ldhl	sp,	#14
      001656 77                    5553 	ld	(hl), a
      001657 7E                    5554 	ld	a, (hl)
      001658 B7                    5555 	or	a, a
      001659 CAr4Fr18              5556 	jp	Z, 00157$
                                   5557 ;src/main.c:524: if (enemies[i].visible == 1) {
      00165C F8 01                 5558 	ldhl	sp,#1
      00165E 2A                    5559 	ld	a, (hl+)
      00165F 5F                    5560 	ld	e, a
      001660 56                    5561 	ld	d, (hl)
      001661 21 0A 00              5562 	ld	hl, #0x000a
      001664 19                    5563 	add	hl, de
      001665 E5                    5564 	push	hl
      001666 7D                    5565 	ld	a, l
      001667 F8 07                 5566 	ldhl	sp,	#7
      001669 77                    5567 	ld	(hl), a
      00166A E1                    5568 	pop	hl
      00166B 7C                    5569 	ld	a, h
      00166C F8 06                 5570 	ldhl	sp,	#6
      00166E 32                    5571 	ld	(hl-), a
      00166F 2A                    5572 	ld	a, (hl+)
      001670 5F                    5573 	ld	e, a
      001671 2A                    5574 	ld	a, (hl+)
      001672 57                    5575 	ld	d, a
      001673 1A                    5576 	ld	a, (de)
      001674 77                    5577 	ld	(hl), a
                                   5578 ;src/main.c:525: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001675 F8 01                 5579 	ldhl	sp,#1
      001677 2A                    5580 	ld	a, (hl+)
      001678 5F                    5581 	ld	e, a
      001679 56                    5582 	ld	d, (hl)
      00167A 1A                    5583 	ld	a, (de)
      00167B F8 08                 5584 	ldhl	sp,	#8
      00167D 22                    5585 	ld	(hl+), a
      00167E 13                    5586 	inc	de
      00167F 1A                    5587 	ld	a, (de)
      001680 77                    5588 	ld	(hl), a
      001681 F8 01                 5589 	ldhl	sp,	#1
      001683 2A                    5590 	ld	a, (hl+)
      001684 4F                    5591 	ld	c, a
      001685 46                    5592 	ld	b, (hl)
      001686 03                    5593 	inc	bc
      001687 03                    5594 	inc	bc
                                   5595 ;src/main.c:527: set_sprite_tile(10+(i<<1), 0x7f);
      001688 F8 0F                 5596 	ldhl	sp,	#15
      00168A 5E                    5597 	ld	e, (hl)
                                   5598 ;src/main.c:525: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      00168B F8 08                 5599 	ldhl	sp,	#8
      00168D 2A                    5600 	ld	a, (hl+)
      00168E 23                    5601 	inc	hl
      00168F 32                    5602 	ld	(hl-), a
      001690 2A                    5603 	ld	a, (hl+)
      001691 23                    5604 	inc	hl
                                   5605 ;src/main.c:527: set_sprite_tile(10+(i<<1), 0x7f);
      001692 22                    5606 	ld	(hl+), a
      001693 7B                    5607 	ld	a, e
      001694 87                    5608 	add	a, a
                                   5609 ;src/main.c:525: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001695 32                    5610 	ld	(hl-), a
      001696 2A                    5611 	ld	a, (hl+)
      001697 23                    5612 	inc	hl
      001698 07                    5613 	rlca
      001699 E6 01                 5614 	and	a,#0x01
                                   5615 ;src/main.c:527: set_sprite_tile(10+(i<<1), 0x7f);
      00169B 32                    5616 	ld	(hl-), a
      00169C 2A                    5617 	ld	a, (hl+)
      00169D 23                    5618 	inc	hl
      00169E C6 0A                 5619 	add	a, #0x0a
      0016A0 77                    5620 	ld	(hl), a
                                   5621 ;src/main.c:524: if (enemies[i].visible == 1) {
      0016A1 F8 07                 5622 	ldhl	sp,	#7
      0016A3 7E                    5623 	ld	a, (hl)
      0016A4 3D                    5624 	dec	a
      0016A5 20 74                 5625 	jr	NZ, 00154$
                                   5626 ;src/main.c:525: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0016A7 F8 0D                 5627 	ldhl	sp,	#13
      0016A9 7E                    5628 	ld	a, (hl)
      0016AA B7                    5629 	or	a, a
      0016AB 20 43                 5630 	jr	NZ, 00135$
      0016AD F8 0A                 5631 	ldhl	sp,	#10
      0016AF 3E AC                 5632 	ld	a, #0xac
      0016B1 96                    5633 	sub	a, (hl)
      0016B2 23                    5634 	inc	hl
      0016B3 3E 00                 5635 	ld	a, #0x00
      0016B5 9E                    5636 	sbc	a, (hl)
      0016B6 3E 00                 5637 	ld	a, #0x00
      0016B8 57                    5638 	ld	d, a
      0016B9 CB 7E                 5639 	bit	7, (hl)
      0016BB 28 07                 5640 	jr	Z, 00437$
      0016BD CB 7A                 5641 	bit	7, d
      0016BF 20 08                 5642 	jr	NZ, 00438$
      0016C1 BF                    5643 	cp	a, a
      0016C2 18 05                 5644 	jr	00438$
      0016C4                       5645 00437$:
      0016C4 CB 7A                 5646 	bit	7, d
      0016C6 28 01                 5647 	jr	Z, 00438$
      0016C8 37                    5648 	scf
      0016C9                       5649 00438$:
      0016C9 38 25                 5650 	jr	C, 00135$
      0016CB 69                    5651 	ld	l, c
      0016CC 60                    5652 	ld	h, b
      0016CD 2A                    5653 	ld	a, (hl+)
      0016CE 4F                    5654 	ld	c, a
      0016CF 46                    5655 	ld	b, (hl)
      0016D0 CB 78                 5656 	bit	7, b
      0016D2 20 1C                 5657 	jr	NZ, 00135$
      0016D4 58                    5658 	ld	e, b
      0016D5 16 00                 5659 	ld	d, #0x00
      0016D7 3E 98                 5660 	ld	a, #0x98
      0016D9 B9                    5661 	cp	a, c
      0016DA 3E 00                 5662 	ld	a, #0x00
      0016DC 98                    5663 	sbc	a, b
      0016DD CB 7B                 5664 	bit	7, e
      0016DF 28 07                 5665 	jr	Z, 00439$
      0016E1 CB 7A                 5666 	bit	7, d
      0016E3 20 08                 5667 	jr	NZ, 00440$
      0016E5 BF                    5668 	cp	a, a
      0016E6 18 05                 5669 	jr	00440$
      0016E8                       5670 00439$:
      0016E8 CB 7A                 5671 	bit	7, d
      0016EA 28 01                 5672 	jr	Z, 00440$
      0016EC 37                    5673 	scf
      0016ED                       5674 00440$:
      0016ED D2r4Fr18              5675 	jp	NC, 00157$
      0016F0                       5676 00135$:
                                   5677 ;src/main.c:526: enemies[i].visible = 0;
      0016F0 F8 05                 5678 	ldhl	sp,	#5
      0016F2 2A                    5679 	ld	a,	(hl+)
      0016F3 66                    5680 	ld	h, (hl)
      0016F4 6F                    5681 	ld	l, a
      0016F5 36 00                 5682 	ld	(hl), #0x00
                                   5683 ;src/main.c:527: set_sprite_tile(10+(i<<1), 0x7f);
      0016F7 F8 0E                 5684 	ldhl	sp,	#14
                                   5685 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0016F9 6E                    5686 	ld	l, (hl)
      0016FA 01r00r00              5687 	ld	bc, #_shadow_OAM+0
                                   5688 ;	spillPairReg hl
                                   5689 ;	spillPairReg hl
      0016FD 26 00                 5690 	ld	h, #0x00
                                   5691 ;	spillPairReg hl
                                   5692 ;	spillPairReg hl
      0016FF 29                    5693 	add	hl, hl
      001700 29                    5694 	add	hl, hl
      001701 09                    5695 	add	hl, bc
      001702 23                    5696 	inc	hl
      001703 23                    5697 	inc	hl
      001704 36 7F                 5698 	ld	(hl), #0x7f
                                   5699 ;src/main.c:528: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001706 F8 0C                 5700 	ldhl	sp,	#12
      001708 7E                    5701 	ld	a, (hl)
      001709 C6 0B                 5702 	add	a, #0x0b
                                   5703 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00170B 6F                    5704 	ld	l, a
      00170C 01r00r00              5705 	ld	bc, #_shadow_OAM+0
                                   5706 ;	spillPairReg hl
                                   5707 ;	spillPairReg hl
      00170F 26 00                 5708 	ld	h, #0x00
                                   5709 ;	spillPairReg hl
                                   5710 ;	spillPairReg hl
      001711 29                    5711 	add	hl, hl
      001712 29                    5712 	add	hl, hl
      001713 09                    5713 	add	hl, bc
      001714 23                    5714 	inc	hl
      001715 23                    5715 	inc	hl
      001716 36 7F                 5716 	ld	(hl), #0x7f
                                   5717 ;src/main.c:528: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001718 C3r4Fr18              5718 	jp	00157$
      00171B                       5719 00154$:
                                   5720 ;src/main.c:532: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      00171B F8 0D                 5721 	ldhl	sp,	#13
      00171D CB 46                 5722 	bit	0, (hl)
      00171F C2rBAr17              5723 	jp	NZ, 00148$
      001722 F8 0A                 5724 	ldhl	sp,	#10
      001724 2A                    5725 	ld	a, (hl+)
      001725 D6 AC                 5726 	sub	a, #0xac
      001727 7E                    5727 	ld	a, (hl)
      001728 DE 00                 5728 	sbc	a, #0x00
      00172A 56                    5729 	ld	d, (hl)
      00172B 3E 00                 5730 	ld	a, #0x00
      00172D CB 7F                 5731 	bit	7,a
      00172F 28 07                 5732 	jr	Z, 00441$
      001731 CB 7A                 5733 	bit	7, d
      001733 20 08                 5734 	jr	NZ, 00442$
      001735 BF                    5735 	cp	a, a
      001736 18 05                 5736 	jr	00442$
      001738                       5737 00441$:
      001738 CB 7A                 5738 	bit	7, d
      00173A 28 01                 5739 	jr	Z, 00442$
      00173C 37                    5740 	scf
      00173D                       5741 00442$:
      00173D 30 7B                 5742 	jr	NC, 00148$
      00173F 69                    5743 	ld	l, c
      001740 60                    5744 	ld	h, b
      001741 2A                    5745 	ld	a,	(hl+)
      001742 66                    5746 	ld	h, (hl)
                                   5747 ;	spillPairReg hl
      001743 6F                    5748 	ld	l, a
                                   5749 ;	spillPairReg hl
                                   5750 ;	spillPairReg hl
      001744 5C                    5751 	ld	e, h
      001745 AF                    5752 	xor	a, a
      001746 57                    5753 	ld	d, a
      001747 BD                    5754 	cp	a, l
      001748 9C                    5755 	sbc	a, h
      001749 CB 7B                 5756 	bit	7, e
      00174B 28 07                 5757 	jr	Z, 00443$
      00174D CB 7A                 5758 	bit	7, d
      00174F 20 08                 5759 	jr	NZ, 00444$
      001751 BF                    5760 	cp	a, a
      001752 18 05                 5761 	jr	00444$
      001754                       5762 00443$:
      001754 CB 7A                 5763 	bit	7, d
      001756 28 01                 5764 	jr	Z, 00444$
      001758 37                    5765 	scf
      001759                       5766 00444$:
      001759 30 5F                 5767 	jr	NC, 00148$
      00175B 7D                    5768 	ld	a, l
      00175C D6 98                 5769 	sub	a, #0x98
      00175E 7C                    5770 	ld	a, h
      00175F 17                    5771 	rla
      001760 3F                    5772 	ccf
      001761 1F                    5773 	rra
      001762 DE 80                 5774 	sbc	a, #0x80
      001764 30 54                 5775 	jr	NC, 00148$
                                   5776 ;src/main.c:533: enemies[i].visible = 1;
      001766 F8 05                 5777 	ldhl	sp,	#5
      001768 2A                    5778 	ld	a,	(hl+)
      001769 66                    5779 	ld	h, (hl)
      00176A 6F                    5780 	ld	l, a
      00176B 36 01                 5781 	ld	(hl), #0x01
                                   5782 ;src/main.c:534: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      00176D F8 01                 5783 	ldhl	sp,#1
      00176F 2A                    5784 	ld	a, (hl+)
      001770 5F                    5785 	ld	e, a
      001771 56                    5786 	ld	d, (hl)
      001772 21 06 00              5787 	ld	hl, #0x0006
      001775 19                    5788 	add	hl, de
      001776 4D                    5789 	ld	c, l
      001777 44                    5790 	ld	b, h
      001778 0A                    5791 	ld	a, (bc)
      001779 4F                    5792 	ld	c, a
      00177A F8 0E                 5793 	ldhl	sp,	#14
                                   5794 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00177C 6E                    5795 	ld	l, (hl)
                                   5796 ;	spillPairReg hl
                                   5797 ;	spillPairReg hl
      00177D 26 00                 5798 	ld	h, #0x00
                                   5799 ;	spillPairReg hl
                                   5800 ;	spillPairReg hl
      00177F 29                    5801 	add	hl, hl
      001780 29                    5802 	add	hl, hl
      001781 11r00r00              5803 	ld	de, #_shadow_OAM
      001784 19                    5804 	add	hl, de
      001785 23                    5805 	inc	hl
      001786 23                    5806 	inc	hl
      001787 71                    5807 	ld	(hl), c
                                   5808 ;src/main.c:535: if (enemies[i].spriteCount == 2) {
      001788 F8 01                 5809 	ldhl	sp,#1
      00178A 2A                    5810 	ld	a, (hl+)
      00178B 5F                    5811 	ld	e, a
      00178C 56                    5812 	ld	d, (hl)
      00178D 21 08 00              5813 	ld	hl, #0x0008
      001790 19                    5814 	add	hl, de
      001791 4D                    5815 	ld	c, l
      001792 44                    5816 	ld	b, h
      001793 0A                    5817 	ld	a, (bc)
      001794 D6 02                 5818 	sub	a, #0x02
      001796 C2r4Fr18              5819 	jp	NZ,00157$
                                   5820 ;src/main.c:536: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001799 F8 01                 5821 	ldhl	sp,#1
      00179B 2A                    5822 	ld	a, (hl+)
      00179C 5F                    5823 	ld	e, a
      00179D 56                    5824 	ld	d, (hl)
      00179E 21 07 00              5825 	ld	hl, #0x0007
      0017A1 19                    5826 	add	hl, de
      0017A2 4D                    5827 	ld	c, l
      0017A3 44                    5828 	ld	b, h
      0017A4 0A                    5829 	ld	a, (bc)
      0017A5 4F                    5830 	ld	c, a
      0017A6 F8 0C                 5831 	ldhl	sp,	#12
      0017A8 7E                    5832 	ld	a, (hl)
      0017A9 C6 0B                 5833 	add	a, #0x0b
                                   5834 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0017AB 6F                    5835 	ld	l, a
                                   5836 ;	spillPairReg hl
                                   5837 ;	spillPairReg hl
      0017AC 26 00                 5838 	ld	h, #0x00
                                   5839 ;	spillPairReg hl
                                   5840 ;	spillPairReg hl
      0017AE 29                    5841 	add	hl, hl
      0017AF 29                    5842 	add	hl, hl
      0017B0 11r00r00              5843 	ld	de, #_shadow_OAM
      0017B3 19                    5844 	add	hl, de
      0017B4 23                    5845 	inc	hl
      0017B5 23                    5846 	inc	hl
      0017B6 71                    5847 	ld	(hl), c
                                   5848 ;src/main.c:536: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0017B7 C3r4Fr18              5849 	jp	00157$
      0017BA                       5850 00148$:
                                   5851 ;src/main.c:539: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      0017BA F8 08                 5852 	ldhl	sp,	#8
      0017BC 2A                    5853 	ld	a, (hl+)
      0017BD D6 9C                 5854 	sub	a, #0x9c
      0017BF 7E                    5855 	ld	a, (hl)
      0017C0 DE FF                 5856 	sbc	a, #0xff
      0017C2 56                    5857 	ld	d, (hl)
      0017C3 3E FF                 5858 	ld	a, #0xff
      0017C5 CB 7F                 5859 	bit	7,a
      0017C7 28 07                 5860 	jr	Z, 00447$
      0017C9 CB 7A                 5861 	bit	7, d
      0017CB 20 08                 5862 	jr	NZ, 00448$
      0017CD BF                    5863 	cp	a, a
      0017CE 18 05                 5864 	jr	00448$
      0017D0                       5865 00447$:
      0017D0 CB 7A                 5866 	bit	7, d
      0017D2 28 01                 5867 	jr	Z, 00448$
      0017D4 37                    5868 	scf
      0017D5                       5869 00448$:
      0017D5 38 49                 5870 	jr	C, 00142$
      0017D7 F8 0A                 5871 	ldhl	sp,	#10
      0017D9 3E 10                 5872 	ld	a, #0x10
      0017DB 96                    5873 	sub	a, (hl)
      0017DC 23                    5874 	inc	hl
      0017DD 3E 01                 5875 	ld	a, #0x01
      0017DF 9E                    5876 	sbc	a, (hl)
      0017E0 3E 01                 5877 	ld	a, #0x01
      0017E2 57                    5878 	ld	d, a
      0017E3 CB 7E                 5879 	bit	7, (hl)
      0017E5 28 07                 5880 	jr	Z, 00449$
      0017E7 CB 7A                 5881 	bit	7, d
      0017E9 20 08                 5882 	jr	NZ, 00450$
      0017EB BF                    5883 	cp	a, a
      0017EC 18 05                 5884 	jr	00450$
      0017EE                       5885 00449$:
      0017EE CB 7A                 5886 	bit	7, d
      0017F0 28 01                 5887 	jr	Z, 00450$
      0017F2 37                    5888 	scf
      0017F3                       5889 00450$:
      0017F3 38 2B                 5890 	jr	C, 00142$
      0017F5 69                    5891 	ld	l, c
      0017F6 60                    5892 	ld	h, b
      0017F7 2A                    5893 	ld	a, (hl+)
      0017F8 4F                    5894 	ld	c, a
      0017F9 46                    5895 	ld	b, (hl)
      0017FA 79                    5896 	ld	a, c
      0017FB D6 9C                 5897 	sub	a, #0x9c
      0017FD 78                    5898 	ld	a, b
      0017FE 17                    5899 	rla
      0017FF 3F                    5900 	ccf
      001800 1F                    5901 	rra
      001801 DE 7F                 5902 	sbc	a, #0x7f
      001803 38 1B                 5903 	jr	C, 00142$
      001805 58                    5904 	ld	e, b
      001806 16 00                 5905 	ld	d, #0x00
      001808 3E FC                 5906 	ld	a, #0xfc
      00180A B9                    5907 	cp	a, c
      00180B 3E 00                 5908 	ld	a, #0x00
      00180D 98                    5909 	sbc	a, b
      00180E CB 7B                 5910 	bit	7, e
      001810 28 07                 5911 	jr	Z, 00451$
      001812 CB 7A                 5912 	bit	7, d
      001814 20 08                 5913 	jr	NZ, 00452$
      001816 BF                    5914 	cp	a, a
      001817 18 05                 5915 	jr	00452$
      001819                       5916 00451$:
      001819 CB 7A                 5917 	bit	7, d
      00181B 28 01                 5918 	jr	Z, 00452$
      00181D 37                    5919 	scf
      00181E                       5920 00452$:
      00181E 30 2F                 5921 	jr	NC, 00157$
      001820                       5922 00142$:
                                   5923 ;src/main.c:540: enemies[i].alive = 0;
      001820 F8 03                 5924 	ldhl	sp,	#3
      001822 2A                    5925 	ld	a,	(hl+)
      001823 66                    5926 	ld	h, (hl)
      001824 6F                    5927 	ld	l, a
      001825 36 00                 5928 	ld	(hl), #0x00
                                   5929 ;src/main.c:541: set_sprite_tile(10+(i<<1), 0x7f);
      001827 F8 0E                 5930 	ldhl	sp,	#14
                                   5931 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001829 6E                    5932 	ld	l, (hl)
      00182A 01r00r00              5933 	ld	bc, #_shadow_OAM+0
                                   5934 ;	spillPairReg hl
                                   5935 ;	spillPairReg hl
      00182D 26 00                 5936 	ld	h, #0x00
                                   5937 ;	spillPairReg hl
                                   5938 ;	spillPairReg hl
      00182F 29                    5939 	add	hl, hl
      001830 29                    5940 	add	hl, hl
      001831 09                    5941 	add	hl, bc
      001832 23                    5942 	inc	hl
      001833 23                    5943 	inc	hl
      001834 36 7F                 5944 	ld	(hl), #0x7f
                                   5945 ;src/main.c:542: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001836 F8 0C                 5946 	ldhl	sp,	#12
      001838 7E                    5947 	ld	a, (hl)
      001839 C6 0B                 5948 	add	a, #0x0b
                                   5949 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00183B 6F                    5950 	ld	l, a
      00183C 01r00r00              5951 	ld	bc, #_shadow_OAM+0
                                   5952 ;	spillPairReg hl
                                   5953 ;	spillPairReg hl
      00183F 26 00                 5954 	ld	h, #0x00
                                   5955 ;	spillPairReg hl
                                   5956 ;	spillPairReg hl
      001841 29                    5957 	add	hl, hl
      001842 29                    5958 	add	hl, hl
      001843 09                    5959 	add	hl, bc
      001844 23                    5960 	inc	hl
      001845 23                    5961 	inc	hl
      001846 36 7F                 5962 	ld	(hl), #0x7f
                                   5963 ;src/main.c:543: initEnemies(0);
      001848 AF                    5964 	xor	a, a
      001849 F5                    5965 	push	af
      00184A 33                    5966 	inc	sp
      00184B CDrFBr0F              5967 	call	_initEnemies
      00184E 33                    5968 	inc	sp
      00184F                       5969 00157$:
                                   5970 ;src/main.c:547: if (enemies[i].spriteCount == 1) {
      00184F F8 0F                 5971 	ldhl	sp,	#15
      001851 4E                    5972 	ld	c, (hl)
      001852 06 00                 5973 	ld	b, #0x00
      001854 69                    5974 	ld	l, c
      001855 60                    5975 	ld	h, b
      001856 29                    5976 	add	hl, hl
      001857 29                    5977 	add	hl, hl
      001858 29                    5978 	add	hl, hl
      001859 09                    5979 	add	hl, bc
      00185A 29                    5980 	add	hl, hl
      00185B 01r5Ar00              5981 	ld	bc,#_enemies
      00185E 09                    5982 	add	hl,bc
      00185F 4D                    5983 	ld	c, l
      001860 44                    5984 	ld	b, h
      001861 21 08 00              5985 	ld	hl, #0x0008
      001864 09                    5986 	add	hl, bc
      001865 5E                    5987 	ld	e, (hl)
                                   5988 ;src/main.c:527: set_sprite_tile(10+(i<<1), 0x7f);
      001866 F8 0F                 5989 	ldhl	sp,	#15
      001868 3A                    5990 	ld	a, (hl-)
      001869 87                    5991 	add	a, a
      00186A 77                    5992 	ld	(hl), a
      00186B 7E                    5993 	ld	a, (hl)
      00186C C6 0A                 5994 	add	a, #0x0a
      00186E F8 0A                 5995 	ldhl	sp,	#10
      001870 77                    5996 	ld	(hl), a
                                   5997 ;src/main.c:547: if (enemies[i].spriteCount == 1) {
      001871 1D                    5998 	dec	e
      001872 20 52                 5999 	jr	NZ, 00165$
                                   6000 ;src/main.c:548: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      001874 59                    6001 	ld	e, c
      001875 50                    6002 	ld	d, b
      001876 13                    6003 	inc	de
      001877 13                    6004 	inc	de
      001878 1A                    6005 	ld	a, (de)
      001879 C6 0C                 6006 	add	a, #0x0c
      00187B 5F                    6007 	ld	e, a
      00187C 0A                    6008 	ld	a, (bc)
      00187D C6 04                 6009 	add	a, #0x04
      00187F F8 0E                 6010 	ldhl	sp,	#14
      001881 77                    6011 	ld	(hl), a
      001882 F8 0A                 6012 	ldhl	sp,	#10
      001884 56                    6013 	ld	d, (hl)
                                   6014 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001885 6A                    6015 	ld	l, d
                                   6016 ;	spillPairReg hl
                                   6017 ;	spillPairReg hl
      001886 26 00                 6018 	ld	h, #0x00
                                   6019 ;	spillPairReg hl
                                   6020 ;	spillPairReg hl
      001888 29                    6021 	add	hl, hl
      001889 29                    6022 	add	hl, hl
      00188A D5                    6023 	push	de
      00188B 11r00r00              6024 	ld	de, #_shadow_OAM
      00188E 19                    6025 	add	hl, de
      00188F D1                    6026 	pop	de
                                   6027 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001890 7B                    6028 	ld	a, e
      001891 22                    6029 	ld	(hl+), a
      001892 5D                    6030 	ld	e, l
      001893 54                    6031 	ld	d, h
      001894 F8 0E                 6032 	ldhl	sp,	#14
      001896 7E                    6033 	ld	a, (hl)
      001897 12                    6034 	ld	(de), a
                                   6035 ;src/main.c:549: if (enemies[i].xSpeed >= 0) {
      001898 21 0E 00              6036 	ld	hl, #0x000e
      00189B 09                    6037 	add	hl, bc
      00189C CB 7E                 6038 	bit	7, (hl)
      00189E 20 13                 6039 	jr	NZ, 00159$
                                   6040 ;src/main.c:550: set_sprite_prop(10+(i<<1), 0);
      0018A0 F8 0A                 6041 	ldhl	sp,	#10
                                   6042 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0018A2 6E                    6043 	ld	l, (hl)
      0018A3 01r00r00              6044 	ld	bc, #_shadow_OAM+0
                                   6045 ;	spillPairReg hl
                                   6046 ;	spillPairReg hl
      0018A6 26 00                 6047 	ld	h, #0x00
                                   6048 ;	spillPairReg hl
                                   6049 ;	spillPairReg hl
      0018A8 29                    6050 	add	hl, hl
      0018A9 29                    6051 	add	hl, hl
      0018AA 09                    6052 	add	hl, bc
      0018AB 23                    6053 	inc	hl
      0018AC 23                    6054 	inc	hl
      0018AD 23                    6055 	inc	hl
      0018AE 36 00                 6056 	ld	(hl), #0x00
                                   6057 ;src/main.c:550: set_sprite_prop(10+(i<<1), 0);
      0018B0 C3rBCr19              6058 	jp	00199$
      0018B3                       6059 00159$:
                                   6060 ;src/main.c:553: set_sprite_prop(10+(i<<1), S_FLIPX);
      0018B3 F8 0A                 6061 	ldhl	sp,	#10
                                   6062 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0018B5 6E                    6063 	ld	l, (hl)
      0018B6 01r00r00              6064 	ld	bc, #_shadow_OAM+0
                                   6065 ;	spillPairReg hl
                                   6066 ;	spillPairReg hl
      0018B9 26 00                 6067 	ld	h, #0x00
                                   6068 ;	spillPairReg hl
                                   6069 ;	spillPairReg hl
      0018BB 29                    6070 	add	hl, hl
      0018BC 29                    6071 	add	hl, hl
      0018BD 09                    6072 	add	hl, bc
      0018BE 23                    6073 	inc	hl
      0018BF 23                    6074 	inc	hl
      0018C0 23                    6075 	inc	hl
      0018C1 36 20                 6076 	ld	(hl), #0x20
                                   6077 ;src/main.c:553: set_sprite_prop(10+(i<<1), S_FLIPX);
      0018C3 C3rBCr19              6078 	jp	00199$
      0018C6                       6079 00165$:
                                   6080 ;src/main.c:558: if (enemies[i].xSpeed >= 0) {
      0018C6 21 0E 00              6081 	ld	hl, #0x000e
      0018C9 09                    6082 	add	hl, bc
      0018CA E5                    6083 	push	hl
      0018CB 7D                    6084 	ld	a, l
      0018CC F8 0E                 6085 	ldhl	sp,	#14
      0018CE 77                    6086 	ld	(hl), a
      0018CF E1                    6087 	pop	hl
      0018D0 7C                    6088 	ld	a, h
      0018D1 F8 0D                 6089 	ldhl	sp,	#13
      0018D3 32                    6090 	ld	(hl-), a
      0018D4 2A                    6091 	ld	a, (hl+)
      0018D5 5F                    6092 	ld	e, a
      0018D6 56                    6093 	ld	d, (hl)
      0018D7 1A                    6094 	ld	a, (de)
                                   6095 ;	spillPairReg hl
                                   6096 ;	spillPairReg hl
      0018D8 CB 7F                 6097 	bit	7,a
      0018DA 20 70                 6098 	jr	NZ, 00162$
                                   6099 ;src/main.c:559: set_sprite_prop(10+(i<<1), 0);
      0018DC F8 0A                 6100 	ldhl	sp,	#10
                                   6101 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0018DE 6E                    6102 	ld	l, (hl)
                                   6103 ;	spillPairReg hl
                                   6104 ;	spillPairReg hl
      0018DF 26 00                 6105 	ld	h, #0x00
                                   6106 ;	spillPairReg hl
                                   6107 ;	spillPairReg hl
      0018E1 29                    6108 	add	hl, hl
      0018E2 29                    6109 	add	hl, hl
      0018E3 11r00r00              6110 	ld	de, #_shadow_OAM
      0018E6 19                    6111 	add	hl, de
      0018E7 23                    6112 	inc	hl
      0018E8 23                    6113 	inc	hl
      0018E9 23                    6114 	inc	hl
      0018EA 36 00                 6115 	ld	(hl), #0x00
                                   6116 ;src/main.c:560: set_sprite_prop(10+(i<<1)+1, 0);
      0018EC F8 0E                 6117 	ldhl	sp,	#14
      0018EE 7E                    6118 	ld	a, (hl)
      0018EF C6 0B                 6119 	add	a, #0x0b
      0018F1 F8 0B                 6120 	ldhl	sp,	#11
      0018F3 77                    6121 	ld	(hl), a
                                   6122 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0018F4 6E                    6123 	ld	l, (hl)
                                   6124 ;	spillPairReg hl
                                   6125 ;	spillPairReg hl
      0018F5 26 00                 6126 	ld	h, #0x00
                                   6127 ;	spillPairReg hl
                                   6128 ;	spillPairReg hl
      0018F7 29                    6129 	add	hl, hl
      0018F8 29                    6130 	add	hl, hl
      0018F9 11r00r00              6131 	ld	de, #_shadow_OAM
      0018FC 19                    6132 	add	hl, de
      0018FD 23                    6133 	inc	hl
      0018FE 23                    6134 	inc	hl
      0018FF 23                    6135 	inc	hl
      001900 36 00                 6136 	ld	(hl), #0x00
                                   6137 ;src/main.c:561: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      001902 21 02 00              6138 	ld	hl, #0x0002
      001905 09                    6139 	add	hl, bc
      001906 E5                    6140 	push	hl
      001907 7D                    6141 	ld	a, l
      001908 F8 0E                 6142 	ldhl	sp,	#14
      00190A 77                    6143 	ld	(hl), a
      00190B E1                    6144 	pop	hl
      00190C 7C                    6145 	ld	a, h
      00190D F8 0D                 6146 	ldhl	sp,	#13
      00190F 32                    6147 	ld	(hl-), a
      001910 2A                    6148 	ld	a, (hl+)
      001911 5F                    6149 	ld	e, a
      001912 2A                    6150 	ld	a, (hl+)
      001913 57                    6151 	ld	d, a
      001914 1A                    6152 	ld	a, (de)
      001915 C6 08                 6153 	add	a, #0x08
      001917 5F                    6154 	ld	e, a
      001918 0A                    6155 	ld	a, (bc)
      001919 77                    6156 	ld	(hl), a
      00191A F8 0A                 6157 	ldhl	sp,	#10
      00191C 56                    6158 	ld	d, (hl)
                                   6159 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00191D 6A                    6160 	ld	l, d
                                   6161 ;	spillPairReg hl
                                   6162 ;	spillPairReg hl
      00191E 26 00                 6163 	ld	h, #0x00
                                   6164 ;	spillPairReg hl
                                   6165 ;	spillPairReg hl
      001920 29                    6166 	add	hl, hl
      001921 29                    6167 	add	hl, hl
      001922 D5                    6168 	push	de
      001923 11r00r00              6169 	ld	de, #_shadow_OAM
      001926 19                    6170 	add	hl, de
      001927 D1                    6171 	pop	de
                                   6172 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001928 7B                    6173 	ld	a, e
      001929 22                    6174 	ld	(hl+), a
      00192A 5D                    6175 	ld	e, l
      00192B 54                    6176 	ld	d, h
      00192C F8 0E                 6177 	ldhl	sp,	#14
                                   6178 ;src/main.c:562: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      00192E 3A                    6179 	ld	a, (hl-)
      00192F 2B                    6180 	dec	hl
      001930 12                    6181 	ld	(de), a
      001931 2A                    6182 	ld	a, (hl+)
      001932 5F                    6183 	ld	e, a
      001933 3A                    6184 	ld	a, (hl-)
      001934 2B                    6185 	dec	hl
      001935 57                    6186 	ld	d, a
      001936 1A                    6187 	ld	a, (de)
      001937 C6 08                 6188 	add	a, #0x08
      001939 57                    6189 	ld	d, a
      00193A 0A                    6190 	ld	a, (bc)
      00193B C6 08                 6191 	add	a, #0x08
      00193D 5F                    6192 	ld	e, a
                                   6193 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00193E 6E                    6194 	ld	l, (hl)
                                   6195 ;	spillPairReg hl
                                   6196 ;	spillPairReg hl
      00193F 26 00                 6197 	ld	h, #0x00
                                   6198 ;	spillPairReg hl
                                   6199 ;	spillPairReg hl
      001941 29                    6200 	add	hl, hl
      001942 29                    6201 	add	hl, hl
      001943 01r00r00              6202 	ld	bc, #_shadow_OAM
      001946 09                    6203 	add	hl, bc
                                   6204 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001947 7A                    6205 	ld	a, d
      001948 22                    6206 	ld	(hl+), a
      001949 73                    6207 	ld	(hl), e
                                   6208 ;src/main.c:562: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      00194A 18 70                 6209 	jr	00199$
      00194C                       6210 00162$:
                                   6211 ;src/main.c:565: set_sprite_prop(10+(i<<1), S_FLIPX);
      00194C F8 0A                 6212 	ldhl	sp,	#10
      00194E 5E                    6213 	ld	e, (hl)
                                   6214 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00194F 26 00                 6215 	ld	h, #0x00
                                   6216 ;	spillPairReg hl
                                   6217 ;	spillPairReg hl
      001951 6B                    6218 	ld	l, e
      001952 29                    6219 	add	hl, hl
      001953 29                    6220 	add	hl, hl
      001954 11r00r00              6221 	ld	de, #_shadow_OAM
      001957 19                    6222 	add	hl, de
      001958 23                    6223 	inc	hl
      001959 23                    6224 	inc	hl
      00195A 23                    6225 	inc	hl
      00195B 36 20                 6226 	ld	(hl), #0x20
                                   6227 ;src/main.c:566: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      00195D F8 0E                 6228 	ldhl	sp,	#14
      00195F 7E                    6229 	ld	a, (hl)
      001960 C6 0B                 6230 	add	a, #0x0b
      001962 F8 0B                 6231 	ldhl	sp,	#11
      001964 77                    6232 	ld	(hl), a
      001965 5E                    6233 	ld	e, (hl)
                                   6234 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001966 26 00                 6235 	ld	h, #0x00
                                   6236 ;	spillPairReg hl
                                   6237 ;	spillPairReg hl
      001968 6B                    6238 	ld	l, e
      001969 29                    6239 	add	hl, hl
      00196A 29                    6240 	add	hl, hl
      00196B 11r00r00              6241 	ld	de, #_shadow_OAM
      00196E 19                    6242 	add	hl, de
      00196F 23                    6243 	inc	hl
      001970 23                    6244 	inc	hl
      001971 23                    6245 	inc	hl
      001972 36 20                 6246 	ld	(hl), #0x20
                                   6247 ;src/main.c:567: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      001974 21 02 00              6248 	ld	hl, #0x0002
      001977 09                    6249 	add	hl, bc
      001978 E5                    6250 	push	hl
      001979 7D                    6251 	ld	a, l
      00197A F8 0E                 6252 	ldhl	sp,	#14
      00197C 77                    6253 	ld	(hl), a
      00197D E1                    6254 	pop	hl
      00197E 7C                    6255 	ld	a, h
      00197F F8 0D                 6256 	ldhl	sp,	#13
      001981 32                    6257 	ld	(hl-), a
      001982 2A                    6258 	ld	a, (hl+)
      001983 5F                    6259 	ld	e, a
      001984 2A                    6260 	ld	a, (hl+)
      001985 57                    6261 	ld	d, a
      001986 1A                    6262 	ld	a, (de)
      001987 C6 08                 6263 	add	a, #0x08
      001989 5F                    6264 	ld	e, a
      00198A 0A                    6265 	ld	a, (bc)
      00198B C6 08                 6266 	add	a, #0x08
      00198D 77                    6267 	ld	(hl), a
      00198E F8 0A                 6268 	ldhl	sp,	#10
      001990 56                    6269 	ld	d, (hl)
                                   6270 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001991 6A                    6271 	ld	l, d
                                   6272 ;	spillPairReg hl
                                   6273 ;	spillPairReg hl
      001992 26 00                 6274 	ld	h, #0x00
                                   6275 ;	spillPairReg hl
                                   6276 ;	spillPairReg hl
      001994 29                    6277 	add	hl, hl
      001995 29                    6278 	add	hl, hl
      001996 D5                    6279 	push	de
      001997 11r00r00              6280 	ld	de, #_shadow_OAM
      00199A 19                    6281 	add	hl, de
      00199B D1                    6282 	pop	de
                                   6283 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00199C 7B                    6284 	ld	a, e
      00199D 22                    6285 	ld	(hl+), a
      00199E 5D                    6286 	ld	e, l
      00199F 54                    6287 	ld	d, h
      0019A0 F8 0E                 6288 	ldhl	sp,	#14
                                   6289 ;src/main.c:568: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0019A2 3A                    6290 	ld	a, (hl-)
      0019A3 2B                    6291 	dec	hl
      0019A4 12                    6292 	ld	(de), a
      0019A5 2A                    6293 	ld	a, (hl+)
      0019A6 5F                    6294 	ld	e, a
      0019A7 3A                    6295 	ld	a, (hl-)
      0019A8 2B                    6296 	dec	hl
      0019A9 57                    6297 	ld	d, a
      0019AA 1A                    6298 	ld	a, (de)
      0019AB C6 08                 6299 	add	a, #0x08
      0019AD 57                    6300 	ld	d, a
      0019AE 0A                    6301 	ld	a, (bc)
      0019AF 5F                    6302 	ld	e, a
                                   6303 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0019B0 6E                    6304 	ld	l, (hl)
                                   6305 ;	spillPairReg hl
                                   6306 ;	spillPairReg hl
      0019B1 26 00                 6307 	ld	h, #0x00
                                   6308 ;	spillPairReg hl
                                   6309 ;	spillPairReg hl
      0019B3 29                    6310 	add	hl, hl
      0019B4 29                    6311 	add	hl, hl
      0019B5 01r00r00              6312 	ld	bc, #_shadow_OAM
      0019B8 09                    6313 	add	hl, bc
                                   6314 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0019B9 7A                    6315 	ld	a, d
      0019BA 22                    6316 	ld	(hl+), a
      0019BB 73                    6317 	ld	(hl), e
                                   6318 ;src/main.c:568: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0019BC                       6319 00199$:
                                   6320 ;src/main.c:521: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0019BC F8 0F                 6321 	ldhl	sp,	#15
      0019BE 34                    6322 	inc	(hl)
      0019BF C3r1Cr16              6323 	jp	00198$
      0019C2                       6324 00200$:
                                   6325 ;src/main.c:574: }
      0019C2 E8 10                 6326 	add	sp, #16
      0019C4 C9                    6327 	ret
                                   6328 ;src/main.c:579: void move() {
                                   6329 ;	---------------------------------
                                   6330 ; Function move
                                   6331 ; ---------------------------------
      0019C5                       6332 _move::
      0019C5 E8 F8                 6333 	add	sp, #-8
                                   6334 ;src/main.c:583: if (joydata & J_A) {
      0019C7 FArF5r00              6335 	ld	a, (#_joydata)
      0019CA CB 67                 6336 	bit	4, a
      0019CC 28 16                 6337 	jr	Z, 00102$
                                   6338 ;src/main.c:584: xSpeed += xDir + xDir + xDir;
      0019CE 21r93r00              6339 	ld	hl, #_xDir
      0019D1 7E                    6340 	ld	a, (hl)
      0019D2 87                    6341 	add	a, a
      0019D3 86                    6342 	add	a, (hl)
      0019D4 21r95r00              6343 	ld	hl, #_xSpeed
      0019D7 86                    6344 	add	a, (hl)
      0019D8 77                    6345 	ld	(hl), a
                                   6346 ;src/main.c:585: ySpeed += yDir + yDir + yDir;
      0019D9 21r94r00              6347 	ld	hl, #_yDir
      0019DC 7E                    6348 	ld	a, (hl)
      0019DD 87                    6349 	add	a, a
      0019DE 86                    6350 	add	a, (hl)
      0019DF 21r96r00              6351 	ld	hl, #_ySpeed
      0019E2 86                    6352 	add	a, (hl)
      0019E3 77                    6353 	ld	(hl), a
      0019E4                       6354 00102$:
                                   6355 ;src/main.c:589: xSpeed = clamp(xSpeed, -100, 100);
      0019E4 21r95r00              6356 	ld	hl, #_xSpeed
      0019E7 4E                    6357 	ld	c, (hl)
                                   6358 ;src/main.c:342: return (value < min) ? min : (value > max) ? max : value;
      0019E8 79                    6359 	ld	a, c
      0019E9 EE 80                 6360 	xor	a, #0x80
      0019EB D6 1C                 6361 	sub	a, #0x1c
      0019ED 30 04                 6362 	jr	NC, 00165$
      0019EF 0E 9C                 6363 	ld	c, #0x9c
      0019F1 18 19                 6364 	jr	00166$
      0019F3                       6365 00165$:
      0019F3 59                    6366 	ld	e, c
      0019F4 3E 64                 6367 	ld	a,#0x64
      0019F6 57                    6368 	ld	d,a
      0019F7 91                    6369 	sub	a, c
      0019F8 CB 7B                 6370 	bit	7, e
      0019FA 28 07                 6371 	jr	Z, 00342$
      0019FC CB 7A                 6372 	bit	7, d
      0019FE 20 08                 6373 	jr	NZ, 00343$
      001A00 BF                    6374 	cp	a, a
      001A01 18 05                 6375 	jr	00343$
      001A03                       6376 00342$:
      001A03 CB 7A                 6377 	bit	7, d
      001A05 28 01                 6378 	jr	Z, 00343$
      001A07 37                    6379 	scf
      001A08                       6380 00343$:
      001A08 30 02                 6381 	jr	NC, 00167$
      001A0A 0E 64                 6382 	ld	c, #0x64
      001A0C                       6383 00167$:
      001A0C                       6384 00166$:
      001A0C 21r95r00              6385 	ld	hl, #_xSpeed
      001A0F 71                    6386 	ld	(hl), c
                                   6387 ;src/main.c:590: ySpeed = clamp(ySpeed, -100, 100);
      001A10 21r96r00              6388 	ld	hl, #_ySpeed
      001A13 4E                    6389 	ld	c, (hl)
                                   6390 ;src/main.c:342: return (value < min) ? min : (value > max) ? max : value;
      001A14 79                    6391 	ld	a, c
      001A15 EE 80                 6392 	xor	a, #0x80
      001A17 D6 1C                 6393 	sub	a, #0x1c
      001A19 30 04                 6394 	jr	NC, 00169$
      001A1B 0E 9C                 6395 	ld	c, #0x9c
      001A1D 18 19                 6396 	jr	00170$
      001A1F                       6397 00169$:
      001A1F 59                    6398 	ld	e, c
      001A20 3E 64                 6399 	ld	a,#0x64
      001A22 57                    6400 	ld	d,a
      001A23 91                    6401 	sub	a, c
      001A24 CB 7B                 6402 	bit	7, e
      001A26 28 07                 6403 	jr	Z, 00344$
      001A28 CB 7A                 6404 	bit	7, d
      001A2A 20 08                 6405 	jr	NZ, 00345$
      001A2C BF                    6406 	cp	a, a
      001A2D 18 05                 6407 	jr	00345$
      001A2F                       6408 00344$:
      001A2F CB 7A                 6409 	bit	7, d
      001A31 28 01                 6410 	jr	Z, 00345$
      001A33 37                    6411 	scf
      001A34                       6412 00345$:
      001A34 30 02                 6413 	jr	NC, 00171$
      001A36 0E 64                 6414 	ld	c, #0x64
      001A38                       6415 00171$:
      001A38                       6416 00170$:
      001A38 21r96r00              6417 	ld	hl, #_ySpeed
      001A3B 71                    6418 	ld	(hl), c
                                   6419 ;src/main.c:592: xOverflow = 0;
      001A3C AF                    6420 	xor	a, a
      001A3D 21rA1r00              6421 	ld	hl, #_xOverflow
      001A40 22                    6422 	ld	(hl+), a
      001A41 77                    6423 	ld	(hl), a
                                   6424 ;src/main.c:593: yOverflow = 0;
      001A42 AF                    6425 	xor	a, a
      001A43 21rA3r00              6426 	ld	hl, #_yOverflow
      001A46 22                    6427 	ld	(hl+), a
      001A47 77                    6428 	ld	(hl), a
                                   6429 ;src/main.c:598: uint8_t xCollisionPoint = playerDrawX; 
      001A48 21r9Br00              6430 	ld	hl, #_playerDrawX
      001A4B 4E                    6431 	ld	c, (hl)
                                   6432 ;src/main.c:601: xCollisionPoint = playerDrawX +8; //right edge
      001A4C 46                    6433 	ld	b, (hl)
                                   6434 ;src/main.c:600: if (xSpeed > 0) {
      001A4D 21r95r00              6435 	ld	hl, #_xSpeed
      001A50 5E                    6436 	ld	e, (hl)
      001A51 AF                    6437 	xor	a, a
      001A52 57                    6438 	ld	d, a
      001A53 96                    6439 	sub	a, (hl)
      001A54 CB 7B                 6440 	bit	7, e
      001A56 28 07                 6441 	jr	Z, 00346$
      001A58 CB 7A                 6442 	bit	7, d
      001A5A 20 08                 6443 	jr	NZ, 00347$
      001A5C BF                    6444 	cp	a, a
      001A5D 18 05                 6445 	jr	00347$
      001A5F                       6446 00346$:
      001A5F CB 7A                 6447 	bit	7, d
      001A61 28 01                 6448 	jr	Z, 00347$
      001A63 37                    6449 	scf
      001A64                       6450 00347$:
      001A64 30 04                 6451 	jr	NC, 00104$
                                   6452 ;src/main.c:601: xCollisionPoint = playerDrawX +8; //right edge
      001A66 78                    6453 	ld	a, b
      001A67 C6 08                 6454 	add	a, #0x08
      001A69 4F                    6455 	ld	c, a
      001A6A                       6456 00104$:
                                   6457 ;src/main.c:603: if (xSpeed < 0) {
      001A6A FAr95r00              6458 	ld	a, (#_xSpeed)
      001A6D CB 7F                 6459 	bit	7, a
      001A6F 28 04                 6460 	jr	Z, 00106$
                                   6461 ;src/main.c:604: xCollisionPoint = playerDrawX -8; //left edge
      001A71 78                    6462 	ld	a, b
      001A72 C6 F8                 6463 	add	a, #0xf8
      001A74 4F                    6464 	ld	c, a
      001A75                       6465 00106$:
                                   6466 ;src/main.c:608: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      001A75 06 00                 6467 	ld	b, #0x00
      001A77 79                    6468 	ld	a, c
      001A78 21r9Dr00              6469 	ld	hl, #_bgX
      001A7B 86                    6470 	add	a, (hl)
      001A7C 23                    6471 	inc	hl
      001A7D 4F                    6472 	ld	c, a
      001A7E 78                    6473 	ld	a, b
      001A7F 8E                    6474 	adc	a, (hl)
      001A80 47                    6475 	ld	b, a
      001A81 CB 28                 6476 	sra	b
      001A83 CB 19                 6477 	rr	c
      001A85 CB 28                 6478 	sra	b
      001A87 CB 19                 6479 	rr	c
      001A89 CB 28                 6480 	sra	b
      001A8B CB 19                 6481 	rr	c
      001A8D 11 20 00              6482 	ld	de, #0x0020
      001A90 D5                    6483 	push	de
      001A91 C5                    6484 	push	bc
      001A92 CDr00r00              6485 	call	__modsint
      001A95 E8 04                 6486 	add	sp, #4
                                   6487 ;src/main.c:612: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001A97 21r9Cr00              6488 	ld	hl, #_playerDrawY
      001A9A 4E                    6489 	ld	c, (hl)
      001A9B 06 00                 6490 	ld	b, #0x00
      001A9D 79                    6491 	ld	a, c
      001A9E 21r9Fr00              6492 	ld	hl, #_bgY
      001AA1 86                    6493 	add	a, (hl)
      001AA2 23                    6494 	inc	hl
      001AA3 4F                    6495 	ld	c, a
      001AA4 78                    6496 	ld	a, b
      001AA5 8E                    6497 	adc	a, (hl)
      001AA6 47                    6498 	ld	b, a
      001AA7 CB 28                 6499 	sra	b
      001AA9 CB 19                 6500 	rr	c
      001AAB CB 28                 6501 	sra	b
      001AAD CB 19                 6502 	rr	c
      001AAF CB 28                 6503 	sra	b
      001AB1 CB 19                 6504 	rr	c
      001AB3 D5                    6505 	push	de
      001AB4 21 20 00              6506 	ld	hl, #0x0020
      001AB7 E5                    6507 	push	hl
      001AB8 C5                    6508 	push	bc
      001AB9 CDr00r00              6509 	call	__modsint
      001ABC E8 04                 6510 	add	sp, #4
      001ABE 6B                    6511 	ld	l, e
                                   6512 ;	spillPairReg hl
                                   6513 ;	spillPairReg hl
                                   6514 ;	spillPairReg hl
                                   6515 ;	spillPairReg hl
      001ABF D1                    6516 	pop	de
                                   6517 ;src/main.c:615: uint16_t ind = 32*bgindY + bgindX;
      001AC0 26 00                 6518 	ld	h, #0x00
                                   6519 ;	spillPairReg hl
                                   6520 ;	spillPairReg hl
      001AC2 29                    6521 	add	hl, hl
      001AC3 29                    6522 	add	hl, hl
      001AC4 29                    6523 	add	hl, hl
      001AC5 29                    6524 	add	hl, hl
      001AC6 29                    6525 	add	hl, hl
      001AC7 19                    6526 	add	hl, de
      001AC8 5D                    6527 	ld	e, l
      001AC9 54                    6528 	ld	d, h
                                   6529 ;src/main.c:616: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001ACA 0E 01                 6530 	ld	c, #0x01
                                   6531 ;src/main.c:617: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001ACC 21r87r00              6532 	ld	hl, #_background1
      001ACF 19                    6533 	add	hl, de
      001AD0 46                    6534 	ld	b, (hl)
      001AD1 1E 00                 6535 	ld	e, #0x00
      001AD3                       6536 00158$:
      001AD3 FAr89r0B              6537 	ld	a, (#_BLANKSIZE)
      001AD6 F8 02                 6538 	ldhl	sp,	#2
      001AD8 77                    6539 	ld	(hl), a
      001AD9 7B                    6540 	ld	a, e
      001ADA 96                    6541 	sub	a, (hl)
      001ADB 30 11                 6542 	jr	NC, 00109$
                                   6543 ;src/main.c:618: if (background1[ind] == BLANK[i] ) {
      001ADD 21r8Ar0B              6544 	ld	hl, #_BLANK
      001AE0 16 00                 6545 	ld	d, #0x00
      001AE2 19                    6546 	add	hl, de
      001AE3 56                    6547 	ld	d, (hl)
      001AE4 78                    6548 	ld	a, b
                                   6549 ;src/main.c:619: result = 0;
      001AE5 92                    6550 	sub	a,d
      001AE6 20 03                 6551 	jr	NZ, 00159$
      001AE8 4F                    6552 	ld	c,a
                                   6553 ;src/main.c:620: break;
      001AE9 18 03                 6554 	jr	00109$
      001AEB                       6555 00159$:
                                   6556 ;src/main.c:617: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001AEB 1C                    6557 	inc	e
      001AEC 18 E5                 6558 	jr	00158$
      001AEE                       6559 00109$:
                                   6560 ;src/main.c:624: if (result == 0) {
      001AEE 79                    6561 	ld	a, c
      001AEF B7                    6562 	or	a, a
      001AF0 C2rBEr1B              6563 	jp	NZ, 00114$
                                   6564 ;src/main.c:625: playerX+=xSpeed;
      001AF3 FAr95r00              6565 	ld	a, (#_xSpeed)
      001AF6 4F                    6566 	ld	c, a
      001AF7 07                    6567 	rlca
      001AF8 9F                    6568 	sbc	a, a
      001AF9 47                    6569 	ld	b, a
      001AFA 21r97r00              6570 	ld	hl, #_playerX
      001AFD 6E                    6571 	ld	l, (hl)
                                   6572 ;	spillPairReg hl
                                   6573 ;	spillPairReg hl
      001AFE FAr98r00              6574 	ld	a, (_playerX + 1)
      001B01 67                    6575 	ld	h, a
                                   6576 ;	spillPairReg hl
                                   6577 ;	spillPairReg hl
      001B02 09                    6578 	add	hl, bc
      001B03 4D                    6579 	ld	c, l
      001B04 44                    6580 	ld	b, h
      001B05 21r97r00              6581 	ld	hl, #_playerX
      001B08 79                    6582 	ld	a, c
      001B09 22                    6583 	ld	(hl+), a
                                   6584 ;src/main.c:627: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001B0A 78                    6585 	ld	a, b
      001B0B 32                    6586 	ld	(hl-), a
      001B0C 2A                    6587 	ld	a, (hl+)
      001B0D 4F                    6588 	ld	c, a
      001B0E 46                    6589 	ld	b, (hl)
      001B0F 79                    6590 	ld	a, c
      001B10 D6 80                 6591 	sub	a, #0x80
      001B12 78                    6592 	ld	a, b
      001B13 DE 08                 6593 	sbc	a, #0x08
      001B15 30 05                 6594 	jr	NC, 00173$
      001B17 01 80 08              6595 	ld	bc, #0x0880
      001B1A 18 0B                 6596 	jr	00174$
      001B1C                       6597 00173$:
      001B1C 3E 80                 6598 	ld	a, #0x80
      001B1E B9                    6599 	cp	a, c
      001B1F 3E 0B                 6600 	ld	a, #0x0b
      001B21 98                    6601 	sbc	a, b
      001B22 30 03                 6602 	jr	NC, 00175$
      001B24 01 80 0B              6603 	ld	bc, #0x0b80
      001B27                       6604 00175$:
      001B27                       6605 00174$:
      001B27 59                    6606 	ld	e,c
      001B28 50                    6607 	ld	d,b
                                   6608 ;src/main.c:629: xOverflow = (playerX - limitedPlayerX);
      001B29 FAr97r00              6609 	ld	a, (#_playerX)
      001B2C 93                    6610 	sub	a, e
      001B2D EArA1r00              6611 	ld	(#_xOverflow),a
      001B30 FAr98r00              6612 	ld	a, (#_playerX + 1)
      001B33 9A                    6613 	sbc	a, d
      001B34 21rA2r00              6614 	ld	hl, #_xOverflow + 1
                                   6615 ;src/main.c:630: if (xOverflow >= 0) {
      001B37 32                    6616 	ld	(hl-), a
      001B38 6E                    6617 	ld	l, (hl)
                                   6618 ;	spillPairReg hl
                                   6619 ;	spillPairReg hl
      001B39 FArA2r00              6620 	ld	a, (_xOverflow + 1)
                                   6621 ;	spillPairReg hl
                                   6622 ;	spillPairReg hl
      001B3C CB 7F                 6623 	bit	7,a
      001B3E 20 22                 6624 	jr	NZ, 00111$
                                   6625 ;src/main.c:631: xOverflow = xOverflow >> 5;
      001B40 21rA2r00              6626 	ld	hl, #_xOverflow + 1
      001B43 CB 2E                 6627 	sra	(hl)
      001B45 2B                    6628 	dec	hl
      001B46 CB 1E                 6629 	rr	(hl)
      001B48 23                    6630 	inc	hl
      001B49 CB 2E                 6631 	sra	(hl)
      001B4B 2B                    6632 	dec	hl
      001B4C CB 1E                 6633 	rr	(hl)
      001B4E 23                    6634 	inc	hl
      001B4F CB 2E                 6635 	sra	(hl)
      001B51 2B                    6636 	dec	hl
      001B52 CB 1E                 6637 	rr	(hl)
      001B54 23                    6638 	inc	hl
      001B55 CB 2E                 6639 	sra	(hl)
      001B57 2B                    6640 	dec	hl
      001B58 CB 1E                 6641 	rr	(hl)
      001B5A 23                    6642 	inc	hl
      001B5B CB 2E                 6643 	sra	(hl)
      001B5D 2B                    6644 	dec	hl
      001B5E CB 1E                 6645 	rr	(hl)
      001B60 18 25                 6646 	jr	00112$
      001B62                       6647 00111$:
                                   6648 ;src/main.c:634: xOverflow = -((-xOverflow) >> 5);
      001B62 AF                    6649 	xor	a, a
      001B63 21rA1r00              6650 	ld	hl, #_xOverflow
      001B66 96                    6651 	sub	a, (hl)
      001B67 23                    6652 	inc	hl
      001B68 5F                    6653 	ld	e, a
      001B69 9F                    6654 	sbc	a, a
      001B6A 96                    6655 	sub	a, (hl)
      001B6B 2B                    6656 	dec	hl
      001B6C 57                    6657 	ld	d, a
      001B6D CB 2A                 6658 	sra	d
      001B6F CB 1B                 6659 	rr	e
      001B71 CB 2A                 6660 	sra	d
      001B73 CB 1B                 6661 	rr	e
      001B75 CB 2A                 6662 	sra	d
      001B77 CB 1B                 6663 	rr	e
      001B79 CB 2A                 6664 	sra	d
      001B7B CB 1B                 6665 	rr	e
      001B7D CB 2A                 6666 	sra	d
      001B7F CB 1B                 6667 	rr	e
      001B81 AF                    6668 	xor	a, a
      001B82 93                    6669 	sub	a, e
      001B83 22                    6670 	ld	(hl+), a
      001B84 9F                    6671 	sbc	a, a
      001B85 92                    6672 	sub	a, d
      001B86 77                    6673 	ld	(hl), a
      001B87                       6674 00112$:
                                   6675 ;src/main.c:636: bgX += xOverflow;
      001B87 FAr9Dr00              6676 	ld	a, (#_bgX)
      001B8A 21rA1r00              6677 	ld	hl, #_xOverflow
      001B8D 86                    6678 	add	a, (hl)
      001B8E 21r9Dr00              6679 	ld	hl, #_bgX
      001B91 22                    6680 	ld	(hl+), a
      001B92 7E                    6681 	ld	a, (hl)
      001B93 21rA2r00              6682 	ld	hl, #_xOverflow + 1
      001B96 8E                    6683 	adc	a, (hl)
      001B97 EAr9Er00              6684 	ld	(#_bgX + 1),a
                                   6685 ;src/main.c:637: playerX = limitedPlayerX;
      001B9A 21r97r00              6686 	ld	hl, #_playerX
      001B9D 79                    6687 	ld	a, c
      001B9E 22                    6688 	ld	(hl+), a
                                   6689 ;src/main.c:638: playerDrawX=playerX >> 5;
      001B9F 78                    6690 	ld	a, b
      001BA0 32                    6691 	ld	(hl-), a
      001BA1 2A                    6692 	ld	a, (hl+)
      001BA2 4F                    6693 	ld	c, a
      001BA3 46                    6694 	ld	b, (hl)
      001BA4 CB 38                 6695 	srl	b
      001BA6 CB 19                 6696 	rr	c
      001BA8 CB 38                 6697 	srl	b
      001BAA CB 19                 6698 	rr	c
      001BAC CB 38                 6699 	srl	b
      001BAE CB 19                 6700 	rr	c
      001BB0 CB 38                 6701 	srl	b
      001BB2 CB 19                 6702 	rr	c
      001BB4 CB 38                 6703 	srl	b
      001BB6 CB 19                 6704 	rr	c
      001BB8 21r9Br00              6705 	ld	hl, #_playerDrawX
      001BBB 71                    6706 	ld	(hl), c
      001BBC 18 05                 6707 	jr	00115$
      001BBE                       6708 00114$:
                                   6709 ;src/main.c:646: xSpeed = 0;
      001BBE 21r95r00              6710 	ld	hl, #_xSpeed
      001BC1 36 00                 6711 	ld	(hl), #0x00
      001BC3                       6712 00115$:
                                   6713 ;src/main.c:654: uint8_t yCollisionPoint = playerDrawY; 
      001BC3 FAr9Cr00              6714 	ld	a, (#_playerDrawY)
      001BC6 F8 07                 6715 	ldhl	sp,	#7
      001BC8 77                    6716 	ld	(hl), a
                                   6717 ;src/main.c:657: yCollisionPoint = playerDrawY +8; //bottom edge
      001BC9 21r9Cr00              6718 	ld	hl, #_playerDrawY
      001BCC 4E                    6719 	ld	c, (hl)
                                   6720 ;src/main.c:656: if (ySpeed > 0) {
      001BCD 21r96r00              6721 	ld	hl, #_ySpeed
      001BD0 5E                    6722 	ld	e, (hl)
      001BD1 AF                    6723 	xor	a, a
      001BD2 57                    6724 	ld	d, a
      001BD3 96                    6725 	sub	a, (hl)
      001BD4 CB 7B                 6726 	bit	7, e
      001BD6 28 07                 6727 	jr	Z, 00350$
      001BD8 CB 7A                 6728 	bit	7, d
      001BDA 20 08                 6729 	jr	NZ, 00351$
      001BDC BF                    6730 	cp	a, a
      001BDD 18 05                 6731 	jr	00351$
      001BDF                       6732 00350$:
      001BDF CB 7A                 6733 	bit	7, d
      001BE1 28 01                 6734 	jr	Z, 00351$
      001BE3 37                    6735 	scf
      001BE4                       6736 00351$:
      001BE4 30 06                 6737 	jr	NC, 00117$
                                   6738 ;src/main.c:657: yCollisionPoint = playerDrawY +8; //bottom edge
      001BE6 79                    6739 	ld	a, c
      001BE7 C6 08                 6740 	add	a, #0x08
      001BE9 F8 07                 6741 	ldhl	sp,	#7
      001BEB 77                    6742 	ld	(hl), a
      001BEC                       6743 00117$:
                                   6744 ;src/main.c:659: if (ySpeed < 0) {
      001BEC FAr96r00              6745 	ld	a, (#_ySpeed)
      001BEF CB 7F                 6746 	bit	7, a
      001BF1 28 06                 6747 	jr	Z, 00119$
                                   6748 ;src/main.c:660: yCollisionPoint = playerDrawY -8; //top edge, 
      001BF3 79                    6749 	ld	a, c
      001BF4 C6 F8                 6750 	add	a, #0xf8
      001BF6 F8 07                 6751 	ldhl	sp,	#7
      001BF8 77                    6752 	ld	(hl), a
      001BF9                       6753 00119$:
                                   6754 ;src/main.c:664: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001BF9 FAr9Br00              6755 	ld	a, (#_playerDrawX)
      001BFC 0E 00                 6756 	ld	c, #0x00
      001BFE F8 03                 6757 	ldhl	sp,	#3
      001C00 22                    6758 	ld	(hl+), a
      001C01 79                    6759 	ld	a, c
      001C02 32                    6760 	ld	(hl-), a
      001C03 2A                    6761 	ld	a, (hl+)
      001C04 5F                    6762 	ld	e, a
      001C05 56                    6763 	ld	d, (hl)
      001C06 21r9Dr00              6764 	ld	hl, #_bgX
      001C09 2A                    6765 	ld	a,	(hl+)
      001C0A 66                    6766 	ld	h, (hl)
      001C0B 6F                    6767 	ld	l, a
      001C0C 19                    6768 	add	hl, de
      001C0D E5                    6769 	push	hl
      001C0E 7D                    6770 	ld	a, l
      001C0F F8 07                 6771 	ldhl	sp,	#7
      001C11 77                    6772 	ld	(hl), a
      001C12 E1                    6773 	pop	hl
      001C13 7C                    6774 	ld	a, h
      001C14 F8 06                 6775 	ldhl	sp,	#6
      001C16 77                    6776 	ld	(hl), a
      001C17 CB 2E                 6777 	sra	(hl)
      001C19 2B                    6778 	dec	hl
      001C1A CB 1E                 6779 	rr	(hl)
      001C1C 23                    6780 	inc	hl
      001C1D CB 2E                 6781 	sra	(hl)
      001C1F 2B                    6782 	dec	hl
      001C20 CB 1E                 6783 	rr	(hl)
      001C22 23                    6784 	inc	hl
      001C23 CB 2E                 6785 	sra	(hl)
      001C25 2B                    6786 	dec	hl
      001C26 CB 1E                 6787 	rr	(hl)
      001C28 11 20 00              6788 	ld	de, #0x0020
      001C2B D5                    6789 	push	de
      001C2C 2A                    6790 	ld	a, (hl+)
      001C2D 5F                    6791 	ld	e, a
      001C2E 56                    6792 	ld	d, (hl)
      001C2F D5                    6793 	push	de
      001C30 CDr00r00              6794 	call	__modsint
      001C33 E8 04                 6795 	add	sp, #4
      001C35 F8 05                 6796 	ldhl	sp,	#5
      001C37 7B                    6797 	ld	a, e
      001C38 22                    6798 	ld	(hl+), a
      001C39 72                    6799 	ld	(hl), d
      001C3A F8 05                 6800 	ldhl	sp,	#5
      001C3C 7E                    6801 	ld	a, (hl)
      001C3D F8 00                 6802 	ldhl	sp,	#0
      001C3F 77                    6803 	ld	(hl), a
      001C40 F8 06                 6804 	ldhl	sp,	#6
      001C42 7E                    6805 	ld	a, (hl)
      001C43 F8 01                 6806 	ldhl	sp,	#1
      001C45 77                    6807 	ld	(hl), a
                                   6808 ;src/main.c:667: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001C46 F8 07                 6809 	ldhl	sp,	#7
      001C48 3A                    6810 	ld	a, (hl-)
      001C49 22                    6811 	ld	(hl+), a
      001C4A AF                    6812 	xor	a, a
      001C4B 32                    6813 	ld	(hl-), a
      001C4C 3A                    6814 	ld	a, (hl-)
      001C4D 2B                    6815 	dec	hl
      001C4E 77                    6816 	ld	(hl), a
      001C4F F8 07                 6817 	ldhl	sp,	#7
      001C51 3A                    6818 	ld	a, (hl-)
      001C52 2B                    6819 	dec	hl
      001C53 32                    6820 	ld	(hl-), a
      001C54 2A                    6821 	ld	a, (hl+)
      001C55 5F                    6822 	ld	e, a
      001C56 56                    6823 	ld	d, (hl)
      001C57 21r9Fr00              6824 	ld	hl, #_bgY
      001C5A 2A                    6825 	ld	a,	(hl+)
      001C5B 66                    6826 	ld	h, (hl)
      001C5C 6F                    6827 	ld	l, a
      001C5D 19                    6828 	add	hl, de
      001C5E E5                    6829 	push	hl
      001C5F 7D                    6830 	ld	a, l
      001C60 F8 08                 6831 	ldhl	sp,	#8
      001C62 77                    6832 	ld	(hl), a
      001C63 E1                    6833 	pop	hl
      001C64 7C                    6834 	ld	a, h
      001C65 F8 07                 6835 	ldhl	sp,	#7
      001C67 77                    6836 	ld	(hl), a
      001C68 CB 2E                 6837 	sra	(hl)
      001C6A 2B                    6838 	dec	hl
      001C6B CB 1E                 6839 	rr	(hl)
      001C6D 23                    6840 	inc	hl
      001C6E CB 2E                 6841 	sra	(hl)
      001C70 2B                    6842 	dec	hl
      001C71 CB 1E                 6843 	rr	(hl)
      001C73 23                    6844 	inc	hl
      001C74 CB 2E                 6845 	sra	(hl)
      001C76 2B                    6846 	dec	hl
      001C77 CB 1E                 6847 	rr	(hl)
      001C79 11 20 00              6848 	ld	de, #0x0020
      001C7C D5                    6849 	push	de
      001C7D 2A                    6850 	ld	a, (hl+)
      001C7E 5F                    6851 	ld	e, a
      001C7F 56                    6852 	ld	d, (hl)
      001C80 D5                    6853 	push	de
      001C81 CDr00r00              6854 	call	__modsint
      001C84 E8 04                 6855 	add	sp, #4
      001C86 F8 06                 6856 	ldhl	sp,	#6
      001C88 7B                    6857 	ld	a, e
      001C89 22                    6858 	ld	(hl+), a
      001C8A 72                    6859 	ld	(hl), d
      001C8B F8 06                 6860 	ldhl	sp,	#6
      001C8D 2A                    6861 	ld	a, (hl+)
      001C8E 77                    6862 	ld	(hl), a
                                   6863 ;src/main.c:670: ind = 32*bgindY + bgindX;
      001C8F 3A                    6864 	ld	a, (hl-)
      001C90 22                    6865 	ld	(hl+), a
      001C91 36 00                 6866 	ld	(hl), #0x00
      001C93 3E 05                 6867 	ld	a, #0x05
      001C95                       6868 00352$:
      001C95 F8 06                 6869 	ldhl	sp,	#6
      001C97 CB 26                 6870 	sla	(hl)
      001C99 23                    6871 	inc	hl
      001C9A CB 16                 6872 	rl	(hl)
      001C9C 3D                    6873 	dec	a
      001C9D 20 F6                 6874 	jr	NZ, 00352$
      001C9F 2B                    6875 	dec	hl
      001CA0 3A                    6876 	ld	a, (hl-)
      001CA1 2B                    6877 	dec	hl
      001CA2 77                    6878 	ld	(hl), a
      001CA3 F8 07                 6879 	ldhl	sp,	#7
      001CA5 3A                    6880 	ld	a, (hl-)
      001CA6 2B                    6881 	dec	hl
      001CA7 77                    6882 	ld	(hl), a
      001CA8 D1                    6883 	pop	de
      001CA9 D5                    6884 	push	de
      001CAA 3A                    6885 	ld	a, (hl-)
      001CAB 6E                    6886 	ld	l, (hl)
      001CAC 67                    6887 	ld	h, a
      001CAD 19                    6888 	add	hl, de
      001CAE E5                    6889 	push	hl
      001CAF 7D                    6890 	ld	a, l
      001CB0 F8 08                 6891 	ldhl	sp,	#8
      001CB2 77                    6892 	ld	(hl), a
      001CB3 E1                    6893 	pop	hl
      001CB4 7C                    6894 	ld	a, h
      001CB5 F8 07                 6895 	ldhl	sp,	#7
      001CB7 77                    6896 	ld	(hl), a
                                   6897 ;src/main.c:671: result = 1;
      001CB8 F8 03                 6898 	ldhl	sp,	#3
      001CBA 36 01                 6899 	ld	(hl), #0x01
                                   6900 ;src/main.c:672: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001CBC F8 06                 6901 	ldhl	sp,#6
      001CBE 2A                    6902 	ld	a, (hl+)
      001CBF 5F                    6903 	ld	e, a
      001CC0 56                    6904 	ld	d, (hl)
      001CC1 21r87r00              6905 	ld	hl, #_background1
      001CC4 19                    6906 	add	hl, de
      001CC5 4D                    6907 	ld	c, l
      001CC6 44                    6908 	ld	b, h
      001CC7 0A                    6909 	ld	a, (bc)
      001CC8 F8 04                 6910 	ldhl	sp,	#4
      001CCA 77                    6911 	ld	(hl), a
      001CCB F8 07                 6912 	ldhl	sp,	#7
      001CCD 36 00                 6913 	ld	(hl), #0x00
      001CCF                       6914 00161$:
      001CCF F8 07                 6915 	ldhl	sp,	#7
      001CD1 7E                    6916 	ld	a, (hl)
      001CD2 F8 02                 6917 	ldhl	sp,	#2
      001CD4 96                    6918 	sub	a, (hl)
      001CD5 30 29                 6919 	jr	NC, 00122$
                                   6920 ;src/main.c:673: if (background1[ind] == BLANK[j] ) {
      001CD7 11r8Ar0B              6921 	ld	de, #_BLANK
      001CDA F8 07                 6922 	ldhl	sp,	#7
      001CDC 6E                    6923 	ld	l, (hl)
      001CDD 26 00                 6924 	ld	h, #0x00
      001CDF 19                    6925 	add	hl, de
      001CE0 E5                    6926 	push	hl
      001CE1 7D                    6927 	ld	a, l
      001CE2 F8 07                 6928 	ldhl	sp,	#7
      001CE4 77                    6929 	ld	(hl), a
      001CE5 E1                    6930 	pop	hl
      001CE6 7C                    6931 	ld	a, h
      001CE7 F8 06                 6932 	ldhl	sp,	#6
      001CE9 32                    6933 	ld	(hl-), a
      001CEA 2A                    6934 	ld	a, (hl+)
      001CEB 5F                    6935 	ld	e, a
      001CEC 3A                    6936 	ld	a, (hl-)
      001CED 2B                    6937 	dec	hl
      001CEE 57                    6938 	ld	d, a
      001CEF 1A                    6939 	ld	a, (de)
      001CF0 4F                    6940 	ld	c, a
      001CF1 7E                    6941 	ld	a, (hl)
      001CF2 91                    6942 	sub	a, c
      001CF3 20 06                 6943 	jr	NZ, 00162$
                                   6944 ;src/main.c:674: result = 0;
      001CF5 F8 03                 6945 	ldhl	sp,	#3
      001CF7 36 00                 6946 	ld	(hl), #0x00
                                   6947 ;src/main.c:675: break;
      001CF9 18 05                 6948 	jr	00122$
      001CFB                       6949 00162$:
                                   6950 ;src/main.c:672: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001CFB F8 07                 6951 	ldhl	sp,	#7
      001CFD 34                    6952 	inc	(hl)
      001CFE 18 CF                 6953 	jr	00161$
      001D00                       6954 00122$:
                                   6955 ;src/main.c:679: if (result == 0) {
      001D00 F8 03                 6956 	ldhl	sp,	#3
      001D02 7E                    6957 	ld	a, (hl)
      001D03 B7                    6958 	or	a, a
      001D04 C2rCEr1D              6959 	jp	NZ, 00127$
                                   6960 ;src/main.c:680: playerY += ySpeed;
      001D07 FAr96r00              6961 	ld	a, (#_ySpeed)
      001D0A 4F                    6962 	ld	c, a
      001D0B 07                    6963 	rlca
      001D0C 9F                    6964 	sbc	a, a
      001D0D 21r99r00              6965 	ld	hl, #_playerY
      001D10 5E                    6966 	ld	e, (hl)
      001D11 23                    6967 	inc	hl
      001D12 56                    6968 	ld	d, (hl)
      001D13 2B                    6969 	dec	hl
      001D14 47                    6970 	ld	b, a
      001D15 79                    6971 	ld	a, c
      001D16 83                    6972 	add	a, e
      001D17 4F                    6973 	ld	c, a
      001D18 78                    6974 	ld	a, b
      001D19 8A                    6975 	adc	a, d
      001D1A 47                    6976 	ld	b, a
      001D1B 79                    6977 	ld	a, c
      001D1C 22                    6978 	ld	(hl+), a
                                   6979 ;src/main.c:682: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001D1D 78                    6980 	ld	a, b
      001D1E 32                    6981 	ld	(hl-), a
      001D1F 2A                    6982 	ld	a, (hl+)
      001D20 5F                    6983 	ld	e, a
      001D21 56                    6984 	ld	d, (hl)
      001D22 7A                    6985 	ld	a, d
      001D23 D6 06                 6986 	sub	a, #0x06
      001D25 30 05                 6987 	jr	NC, 00177$
      001D27 11 00 06              6988 	ld	de, #0x0600
      001D2A 18 0B                 6989 	jr	00178$
      001D2C                       6990 00177$:
      001D2C 3E C0                 6991 	ld	a, #0xc0
      001D2E BB                    6992 	cp	a, e
      001D2F 3E 09                 6993 	ld	a, #0x09
      001D31 9A                    6994 	sbc	a, d
      001D32 30 03                 6995 	jr	NC, 00179$
      001D34 11 C0 09              6996 	ld	de, #0x09c0
      001D37                       6997 00179$:
      001D37                       6998 00178$:
      001D37 4B                    6999 	ld	c, e
      001D38 42                    7000 	ld	b, d
                                   7001 ;src/main.c:684: yOverflow = (playerY - limitedPlayerY);
      001D39 FAr99r00              7002 	ld	a, (#_playerY)
      001D3C 93                    7003 	sub	a, e
      001D3D EArA3r00              7004 	ld	(#_yOverflow),a
      001D40 FAr9Ar00              7005 	ld	a, (#_playerY + 1)
      001D43 9A                    7006 	sbc	a, d
      001D44 21rA4r00              7007 	ld	hl, #_yOverflow + 1
                                   7008 ;src/main.c:685: if (yOverflow >= 0) {
      001D47 32                    7009 	ld	(hl-), a
      001D48 6E                    7010 	ld	l, (hl)
                                   7011 ;	spillPairReg hl
                                   7012 ;	spillPairReg hl
      001D49 FArA4r00              7013 	ld	a, (_yOverflow + 1)
                                   7014 ;	spillPairReg hl
                                   7015 ;	spillPairReg hl
      001D4C CB 7F                 7016 	bit	7,a
      001D4E 20 22                 7017 	jr	NZ, 00124$
                                   7018 ;src/main.c:686: yOverflow = yOverflow >> 5;
      001D50 21rA4r00              7019 	ld	hl, #_yOverflow + 1
      001D53 CB 2E                 7020 	sra	(hl)
      001D55 2B                    7021 	dec	hl
      001D56 CB 1E                 7022 	rr	(hl)
      001D58 23                    7023 	inc	hl
      001D59 CB 2E                 7024 	sra	(hl)
      001D5B 2B                    7025 	dec	hl
      001D5C CB 1E                 7026 	rr	(hl)
      001D5E 23                    7027 	inc	hl
      001D5F CB 2E                 7028 	sra	(hl)
      001D61 2B                    7029 	dec	hl
      001D62 CB 1E                 7030 	rr	(hl)
      001D64 23                    7031 	inc	hl
      001D65 CB 2E                 7032 	sra	(hl)
      001D67 2B                    7033 	dec	hl
      001D68 CB 1E                 7034 	rr	(hl)
      001D6A 23                    7035 	inc	hl
      001D6B CB 2E                 7036 	sra	(hl)
      001D6D 2B                    7037 	dec	hl
      001D6E CB 1E                 7038 	rr	(hl)
      001D70 18 25                 7039 	jr	00125$
      001D72                       7040 00124$:
                                   7041 ;src/main.c:689: yOverflow = -((-yOverflow) >> 5);
      001D72 AF                    7042 	xor	a, a
      001D73 21rA3r00              7043 	ld	hl, #_yOverflow
      001D76 96                    7044 	sub	a, (hl)
      001D77 23                    7045 	inc	hl
      001D78 5F                    7046 	ld	e, a
      001D79 9F                    7047 	sbc	a, a
      001D7A 96                    7048 	sub	a, (hl)
      001D7B 2B                    7049 	dec	hl
      001D7C 57                    7050 	ld	d, a
      001D7D CB 2A                 7051 	sra	d
      001D7F CB 1B                 7052 	rr	e
      001D81 CB 2A                 7053 	sra	d
      001D83 CB 1B                 7054 	rr	e
      001D85 CB 2A                 7055 	sra	d
      001D87 CB 1B                 7056 	rr	e
      001D89 CB 2A                 7057 	sra	d
      001D8B CB 1B                 7058 	rr	e
      001D8D CB 2A                 7059 	sra	d
      001D8F CB 1B                 7060 	rr	e
      001D91 AF                    7061 	xor	a, a
      001D92 93                    7062 	sub	a, e
      001D93 22                    7063 	ld	(hl+), a
      001D94 9F                    7064 	sbc	a, a
      001D95 92                    7065 	sub	a, d
      001D96 77                    7066 	ld	(hl), a
      001D97                       7067 00125$:
                                   7068 ;src/main.c:691: bgY += yOverflow;
      001D97 FAr9Fr00              7069 	ld	a, (#_bgY)
      001D9A 21rA3r00              7070 	ld	hl, #_yOverflow
      001D9D 86                    7071 	add	a, (hl)
      001D9E 21r9Fr00              7072 	ld	hl, #_bgY
      001DA1 22                    7073 	ld	(hl+), a
      001DA2 7E                    7074 	ld	a, (hl)
      001DA3 21rA4r00              7075 	ld	hl, #_yOverflow + 1
      001DA6 8E                    7076 	adc	a, (hl)
      001DA7 EArA0r00              7077 	ld	(#_bgY + 1),a
                                   7078 ;src/main.c:692: playerY = limitedPlayerY;
      001DAA 21r99r00              7079 	ld	hl, #_playerY
      001DAD 79                    7080 	ld	a, c
      001DAE 22                    7081 	ld	(hl+), a
                                   7082 ;src/main.c:693: playerDrawY=playerY >> 5;
      001DAF 78                    7083 	ld	a, b
      001DB0 32                    7084 	ld	(hl-), a
      001DB1 2A                    7085 	ld	a, (hl+)
      001DB2 4F                    7086 	ld	c, a
      001DB3 46                    7087 	ld	b, (hl)
      001DB4 CB 38                 7088 	srl	b
      001DB6 CB 19                 7089 	rr	c
      001DB8 CB 38                 7090 	srl	b
      001DBA CB 19                 7091 	rr	c
      001DBC CB 38                 7092 	srl	b
      001DBE CB 19                 7093 	rr	c
      001DC0 CB 38                 7094 	srl	b
      001DC2 CB 19                 7095 	rr	c
      001DC4 CB 38                 7096 	srl	b
      001DC6 CB 19                 7097 	rr	c
      001DC8 21r9Cr00              7098 	ld	hl, #_playerDrawY
      001DCB 71                    7099 	ld	(hl), c
      001DCC 18 05                 7100 	jr	00128$
      001DCE                       7101 00127$:
                                   7102 ;src/main.c:698: ySpeed = 0;
      001DCE 21r96r00              7103 	ld	hl, #_ySpeed
      001DD1 36 00                 7104 	ld	(hl), #0x00
      001DD3                       7105 00128$:
                                   7106 ;src/main.c:598: uint8_t xCollisionPoint = playerDrawX; 
      001DD3 FAr9Br00              7107 	ld	a, (#_playerDrawX)
      001DD6 F8 07                 7108 	ldhl	sp,	#7
      001DD8 77                    7109 	ld	(hl), a
                                   7110 ;src/main.c:657: yCollisionPoint = playerDrawY +8; //bottom edge
      001DD9 FAr9Cr00              7111 	ld	a, (#_playerDrawY)
      001DDC C6 08                 7112 	add	a, #0x08
      001DDE F8 06                 7113 	ldhl	sp,	#6
      001DE0 77                    7114 	ld	(hl), a
                                   7115 ;src/main.c:701: if (xDir >= 0) {
      001DE1 FAr93r00              7116 	ld	a, (#_xDir)
      001DE4 CB 7F                 7117 	bit	7, a
      001DE6 20 2A                 7118 	jr	NZ, 00130$
                                   7119 ;src/main.c:702: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   7120 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7121 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001DE8 11r00r00              7122 	ld	de, #_shadow_OAM
      001DEB F8 06                 7123 	ldhl	sp,	#6
      001DED 2A                    7124 	ld	a, (hl+)
      001DEE 12                    7125 	ld	(de), a
      001DEF 11r01r00              7126 	ld	de, #(_shadow_OAM + 1)
      001DF2 7E                    7127 	ld	a, (hl)
      001DF3 12                    7128 	ld	(de), a
                                   7129 ;src/main.c:704: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001DF4 FAr9Cr00              7130 	ld	a, (#_playerDrawY)
      001DF7 F8 07                 7131 	ldhl	sp,	#7
      001DF9 77                    7132 	ld	(hl), a
      001DFA 3A                    7133 	ld	a, (hl-)
      001DFB C6 08                 7134 	add	a, #0x08
      001DFD 77                    7135 	ld	(hl), a
      001DFE FAr9Br00              7136 	ld	a, (#_playerDrawX)
      001E01 C6 08                 7137 	add	a, #0x08
      001E03 F8 07                 7138 	ldhl	sp,	#7
                                   7139 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7140 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001E05 32                    7141 	ld	(hl-), a
      001E06 11r04r00              7142 	ld	de, #(_shadow_OAM + 4)
      001E09 2A                    7143 	ld	a, (hl+)
      001E0A 12                    7144 	ld	(de), a
      001E0B 11r05r00              7145 	ld	de, #(_shadow_OAM + 5)
      001E0E 7E                    7146 	ld	a, (hl)
      001E0F 12                    7147 	ld	(de), a
                                   7148 ;src/main.c:704: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001E10 18 28                 7149 	jr	00131$
      001E12                       7150 00130$:
                                   7151 ;src/main.c:707: move_sprite(1, playerDrawX , playerDrawY +8);
                                   7152 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001E12 01r04r00              7153 	ld	bc, #(_shadow_OAM + 4)
                                   7154 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001E15 F8 06                 7155 	ldhl	sp,	#6
      001E17 2A                    7156 	ld	a, (hl+)
      001E18 02                    7157 	ld	(bc), a
      001E19 03                    7158 	inc	bc
      001E1A 7E                    7159 	ld	a, (hl)
      001E1B 02                    7160 	ld	(bc), a
                                   7161 ;src/main.c:709: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001E1C FAr9Cr00              7162 	ld	a, (#_playerDrawY)
      001E1F F8 07                 7163 	ldhl	sp,	#7
      001E21 77                    7164 	ld	(hl), a
      001E22 3A                    7165 	ld	a, (hl-)
      001E23 C6 08                 7166 	add	a, #0x08
      001E25 77                    7167 	ld	(hl), a
      001E26 FAr9Br00              7168 	ld	a, (#_playerDrawX)
      001E29 F8 07                 7169 	ldhl	sp,	#7
      001E2B 77                    7170 	ld	(hl), a
      001E2C 7E                    7171 	ld	a, (hl)
      001E2D C6 08                 7172 	add	a, #0x08
                                   7173 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7174 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001E2F 32                    7175 	ld	(hl-), a
      001E30 11r00r00              7176 	ld	de, #_shadow_OAM
      001E33 2A                    7177 	ld	a, (hl+)
      001E34 12                    7178 	ld	(de), a
      001E35 11r01r00              7179 	ld	de, #(_shadow_OAM + 1)
      001E38 7E                    7180 	ld	a, (hl)
      001E39 12                    7181 	ld	(de), a
                                   7182 ;src/main.c:709: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001E3A                       7183 00131$:
                                   7184 ;src/main.c:714: if (bgX >= 256) {
      001E3A 21r9Dr00              7185 	ld	hl, #_bgX
      001E3D 2A                    7186 	ld	a, (hl+)
      001E3E 4F                    7187 	ld	c, a
      001E3F 46                    7188 	ld	b, (hl)
      001E40 78                    7189 	ld	a, b
      001E41 EE 80                 7190 	xor	a, #0x80
      001E43 D6 81                 7191 	sub	a, #0x81
      001E45 38 0F                 7192 	jr	C, 00133$
                                   7193 ;src/main.c:715: bgX = bgX % 256;
      001E47 AF                    7194 	xor	a, a
      001E48 3C                    7195 	inc	a
      001E49 F5                    7196 	push	af
      001E4A C5                    7197 	push	bc
      001E4B CDr00r00              7198 	call	__modsint
      001E4E E8 04                 7199 	add	sp, #4
      001E50 21r9Dr00              7200 	ld	hl, #_bgX
      001E53 7B                    7201 	ld	a, e
      001E54 22                    7202 	ld	(hl+), a
      001E55 72                    7203 	ld	(hl), d
      001E56                       7204 00133$:
                                   7205 ;src/main.c:717: if (bgX < 0) {
      001E56 21r9Dr00              7206 	ld	hl, #_bgX
      001E59 2A                    7207 	ld	a, (hl+)
      001E5A 4F                    7208 	ld	c, a
      001E5B 46                    7209 	ld	b, (hl)
      001E5C CB 78                 7210 	bit	7, b
      001E5E 28 15                 7211 	jr	Z, 00135$
                                   7212 ;src/main.c:718: bgX = 255 - (bgX % 256);
      001E60 AF                    7213 	xor	a, a
      001E61 3C                    7214 	inc	a
      001E62 F5                    7215 	push	af
      001E63 C5                    7216 	push	bc
      001E64 CDr00r00              7217 	call	__modsint
      001E67 E8 04                 7218 	add	sp, #4
      001E69 3E FF                 7219 	ld	a, #0xff
      001E6B 93                    7220 	sub	a, e
      001E6C 4F                    7221 	ld	c, a
      001E6D 9F                    7222 	sbc	a, a
      001E6E 92                    7223 	sub	a, d
      001E6F 21r9Dr00              7224 	ld	hl, #_bgX
      001E72 71                    7225 	ld	(hl), c
      001E73 23                    7226 	inc	hl
      001E74 77                    7227 	ld	(hl), a
      001E75                       7228 00135$:
                                   7229 ;src/main.c:720: if (bgY >= 256) {
      001E75 21r9Fr00              7230 	ld	hl, #_bgY
      001E78 2A                    7231 	ld	a, (hl+)
      001E79 4F                    7232 	ld	c, a
      001E7A 46                    7233 	ld	b, (hl)
      001E7B 78                    7234 	ld	a, b
      001E7C EE 80                 7235 	xor	a, #0x80
      001E7E D6 81                 7236 	sub	a, #0x81
      001E80 38 0F                 7237 	jr	C, 00137$
                                   7238 ;src/main.c:721: bgY = bgY % 256;
      001E82 AF                    7239 	xor	a, a
      001E83 3C                    7240 	inc	a
      001E84 F5                    7241 	push	af
      001E85 C5                    7242 	push	bc
      001E86 CDr00r00              7243 	call	__modsint
      001E89 E8 04                 7244 	add	sp, #4
      001E8B 21r9Fr00              7245 	ld	hl, #_bgY
      001E8E 7B                    7246 	ld	a, e
      001E8F 22                    7247 	ld	(hl+), a
      001E90 72                    7248 	ld	(hl), d
      001E91                       7249 00137$:
                                   7250 ;src/main.c:723: if (bgY < 0) {
      001E91 21r9Fr00              7251 	ld	hl, #_bgY
      001E94 2A                    7252 	ld	a, (hl+)
      001E95 4F                    7253 	ld	c, a
      001E96 46                    7254 	ld	b, (hl)
      001E97 CB 78                 7255 	bit	7, b
      001E99 28 15                 7256 	jr	Z, 00139$
                                   7257 ;src/main.c:724: bgY = 255 - (bgY % 256);
      001E9B AF                    7258 	xor	a, a
      001E9C 3C                    7259 	inc	a
      001E9D F5                    7260 	push	af
      001E9E C5                    7261 	push	bc
      001E9F CDr00r00              7262 	call	__modsint
      001EA2 E8 04                 7263 	add	sp, #4
      001EA4 3E FF                 7264 	ld	a, #0xff
      001EA6 93                    7265 	sub	a, e
      001EA7 4F                    7266 	ld	c, a
      001EA8 9F                    7267 	sbc	a, a
      001EA9 92                    7268 	sub	a, d
      001EAA 21r9Fr00              7269 	ld	hl, #_bgY
      001EAD 71                    7270 	ld	(hl), c
      001EAE 23                    7271 	inc	hl
      001EAF 77                    7272 	ld	(hl), a
      001EB0                       7273 00139$:
                                   7274 ;src/main.c:727: move_bkg(bgX, bgY);
      001EB0 21r9Fr00              7275 	ld	hl, #_bgY
      001EB3 4E                    7276 	ld	c, (hl)
      001EB4 FAr9Dr00              7277 	ld	a, (#_bgX)
      001EB7 E0r00                 7278 	ldh	(_SCX_REG + 0), a
                                   7279 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001EB9 79                    7280 	ld	a, c
      001EBA E0r00                 7281 	ldh	(_SCY_REG + 0), a
                                   7282 ;src/main.c:730: if (ySpeed > 0) ySpeed--;
      001EBC 21r96r00              7283 	ld	hl, #_ySpeed
      001EBF 5E                    7284 	ld	e, (hl)
      001EC0 AF                    7285 	xor	a, a
      001EC1 57                    7286 	ld	d, a
      001EC2 96                    7287 	sub	a, (hl)
      001EC3 CB 7B                 7288 	bit	7, e
      001EC5 28 07                 7289 	jr	Z, 00355$
      001EC7 CB 7A                 7290 	bit	7, d
      001EC9 20 08                 7291 	jr	NZ, 00356$
      001ECB BF                    7292 	cp	a, a
      001ECC 18 05                 7293 	jr	00356$
      001ECE                       7294 00355$:
      001ECE CB 7A                 7295 	bit	7, d
      001ED0 28 01                 7296 	jr	Z, 00356$
      001ED2 37                    7297 	scf
      001ED3                       7298 00356$:
      001ED3 30 04                 7299 	jr	NC, 00141$
      001ED5 21r96r00              7300 	ld	hl, #_ySpeed
      001ED8 35                    7301 	dec	(hl)
      001ED9                       7302 00141$:
                                   7303 ;src/main.c:731: if (ySpeed < 0) ySpeed++;
      001ED9 21r96r00              7304 	ld	hl, #_ySpeed
      001EDC CB 7E                 7305 	bit	7, (hl)
      001EDE 28 01                 7306 	jr	Z, 00143$
      001EE0 34                    7307 	inc	(hl)
      001EE1                       7308 00143$:
                                   7309 ;src/main.c:732: if (xSpeed > 0) xSpeed--;
      001EE1 21r95r00              7310 	ld	hl, #_xSpeed
      001EE4 5E                    7311 	ld	e, (hl)
      001EE5 AF                    7312 	xor	a, a
      001EE6 57                    7313 	ld	d, a
      001EE7 96                    7314 	sub	a, (hl)
      001EE8 CB 7B                 7315 	bit	7, e
      001EEA 28 07                 7316 	jr	Z, 00357$
      001EEC CB 7A                 7317 	bit	7, d
      001EEE 20 08                 7318 	jr	NZ, 00358$
      001EF0 BF                    7319 	cp	a, a
      001EF1 18 05                 7320 	jr	00358$
      001EF3                       7321 00357$:
      001EF3 CB 7A                 7322 	bit	7, d
      001EF5 28 01                 7323 	jr	Z, 00358$
      001EF7 37                    7324 	scf
      001EF8                       7325 00358$:
      001EF8 30 04                 7326 	jr	NC, 00145$
      001EFA 21r95r00              7327 	ld	hl, #_xSpeed
      001EFD 35                    7328 	dec	(hl)
      001EFE                       7329 00145$:
                                   7330 ;src/main.c:733: if (xSpeed < 0) xSpeed++;
      001EFE 21r95r00              7331 	ld	hl, #_xSpeed
      001F01 CB 7E                 7332 	bit	7, (hl)
      001F03 28 01                 7333 	jr	Z, 00163$
      001F05 34                    7334 	inc	(hl)
      001F06                       7335 00163$:
                                   7336 ;src/main.c:737: }
      001F06 E8 08                 7337 	add	sp, #8
      001F08 C9                    7338 	ret
                                   7339 ;src/main.c:739: void takeDamage(int16_t amount) {
                                   7340 ;	---------------------------------
                                   7341 ; Function takeDamage
                                   7342 ; ---------------------------------
      001F09                       7343 _takeDamage::
      001F09 3B                    7344 	dec	sp
                                   7345 ;src/main.c:740: if (amount > shield) {
      001F0A FArF7r00              7346 	ld	a, (#_shield)
      001F0D 4F                    7347 	ld	c, a
      001F0E 07                    7348 	rlca
      001F0F 9F                    7349 	sbc	a, a
      001F10 47                    7350 	ld	b, a
                                   7351 ;src/main.c:742: hull -= (amount - shield);
      001F11 F8 03                 7352 	ldhl	sp,	#3
      001F13 7E                    7353 	ld	a, (hl)
      001F14 F8 00                 7354 	ldhl	sp,	#0
      001F16 77                    7355 	ld	(hl), a
                                   7356 ;src/main.c:740: if (amount > shield) {
      001F17 F8 03                 7357 	ldhl	sp,	#3
      001F19 79                    7358 	ld	a, c
      001F1A 96                    7359 	sub	a, (hl)
      001F1B 23                    7360 	inc	hl
      001F1C 78                    7361 	ld	a, b
      001F1D 9E                    7362 	sbc	a, (hl)
      001F1E 78                    7363 	ld	a, b
      001F1F 57                    7364 	ld	d, a
      001F20 CB 7E                 7365 	bit	7, (hl)
      001F22 28 07                 7366 	jr	Z, 00111$
      001F24 CB 7A                 7367 	bit	7, d
      001F26 20 08                 7368 	jr	NZ, 00112$
      001F28 BF                    7369 	cp	a, a
      001F29 18 05                 7370 	jr	00112$
      001F2B                       7371 00111$:
      001F2B CB 7A                 7372 	bit	7, d
      001F2D 28 01                 7373 	jr	Z, 00112$
      001F2F 37                    7374 	scf
      001F30                       7375 00112$:
      001F30 30 10                 7376 	jr	NC, 00102$
                                   7377 ;src/main.c:741: shield = 0;
      001F32 21rF7r00              7378 	ld	hl, #_shield
      001F35 36 00                 7379 	ld	(hl), #0x00
                                   7380 ;src/main.c:742: hull -= (amount - shield);
      001F37 FArF6r00              7381 	ld	a, (#_hull)
      001F3A F8 00                 7382 	ldhl	sp,	#0
      001F3C 96                    7383 	sub	a, (hl)
      001F3D EArF6r00              7384 	ld	(#_hull),a
      001F40 18 09                 7385 	jr	00104$
      001F42                       7386 00102$:
                                   7387 ;src/main.c:745: shield -= amount;
      001F42 FArF7r00              7388 	ld	a, (#_shield)
      001F45 F8 00                 7389 	ldhl	sp,	#0
      001F47 96                    7390 	sub	a, (hl)
      001F48 EArF7r00              7391 	ld	(#_shield),a
      001F4B                       7392 00104$:
                                   7393 ;src/main.c:747: }
      001F4B 33                    7394 	inc	sp
      001F4C C9                    7395 	ret
                                   7396 ;src/main.c:749: void spawnPickup(int16_t x, int16_t y) {
                                   7397 ;	---------------------------------
                                   7398 ; Function spawnPickup
                                   7399 ; ---------------------------------
      001F4D                       7400 _spawnPickup::
                                   7401 ;src/main.c:750: uint8_t spawn = ((uint8_t)rand()) % (uint8_t) 16;
      001F4D CDr00r00              7402 	call	_rand
      001F50 7B                    7403 	ld	a, e
      001F51 E6 0F                 7404 	and	a, #0x0f
      001F53 C0                    7405 	ret	NZ
                                   7406 ;src/main.c:751: if (spawn == 0) {
                                   7407 ;src/main.c:752: uint8_t type = ((uint8_t)rand()) % (uint8_t) 4;
      001F54 CDr00r00              7408 	call	_rand
      001F57 7B                    7409 	ld	a, e
      001F58 E6 03                 7410 	and	a, #0x03
                                   7411 ;src/main.c:753: if (type == 0) {
      001F5A 5F                    7412 	ld	e,a
      001F5B B7                    7413 	or	a, a
      001F5C 20 13                 7414 	jr	NZ, 00106$
                                   7415 ;src/main.c:754: pickup = health;
      001F5E 11 09 00              7416 	ld	de, #0x0009
      001F61 D5                    7417 	push	de
      001F62 11r1Ar07              7418 	ld	de, #_health
      001F65 D5                    7419 	push	de
      001F66 11rFAr00              7420 	ld	de, #_pickup
      001F69 D5                    7421 	push	de
      001F6A CDr00r00              7422 	call	___memcpy
      001F6D E8 06                 7423 	add	sp, #6
      001F6F 18 31                 7424 	jr	00107$
      001F71                       7425 00106$:
                                   7426 ;src/main.c:756: else if (type == 1 && gunLevel < MAXGUNLEVEL) {
      001F71 1D                    7427 	dec	e
      001F72 20 1D                 7428 	jr	NZ, 00102$
      001F74 21rA3r0B              7429 	ld	hl, #_MAXGUNLEVEL
      001F77 4E                    7430 	ld	c, (hl)
      001F78 FArA6r00              7431 	ld	a, (#_gunLevel)
      001F7B 91                    7432 	sub	a, c
      001F7C 30 13                 7433 	jr	NC, 00102$
                                   7434 ;src/main.c:757: pickup = upgrade;
      001F7E 11 09 00              7435 	ld	de, #0x0009
      001F81 D5                    7436 	push	de
      001F82 11r08r07              7437 	ld	de, #_upgrade
      001F85 D5                    7438 	push	de
      001F86 11rFAr00              7439 	ld	de, #_pickup
      001F89 D5                    7440 	push	de
      001F8A CDr00r00              7441 	call	___memcpy
      001F8D E8 06                 7442 	add	sp, #6
      001F8F 18 11                 7443 	jr	00107$
      001F91                       7444 00102$:
                                   7445 ;src/main.c:760: pickup = ammo;
      001F91 01r11r07              7446 	ld	bc, #_ammo
      001F94 11rFAr00              7447 	ld	de, #_pickup
      001F97 21 09 00              7448 	ld	hl, #0x0009
      001F9A E5                    7449 	push	hl
      001F9B C5                    7450 	push	bc
      001F9C D5                    7451 	push	de
      001F9D CDr00r00              7452 	call	___memcpy
      001FA0 E8 06                 7453 	add	sp, #6
      001FA2                       7454 00107$:
                                   7455 ;src/main.c:762: pickup.active = 1;
      001FA2 21rFFr00              7456 	ld	hl, #(_pickup + 5)
      001FA5 36 01                 7457 	ld	(hl), #0x01
                                   7458 ;src/main.c:764: pickup.x = x;
      001FA7 11rFBr00              7459 	ld	de, #(_pickup + 1)
      001FAA F8 02                 7460 	ldhl	sp,	#2
      001FAC 2A                    7461 	ld	a, (hl+)
      001FAD 12                    7462 	ld	(de), a
      001FAE 13                    7463 	inc	de
                                   7464 ;src/main.c:765: pickup.y = y;
      001FAF 2A                    7465 	ld	a, (hl+)
      001FB0 12                    7466 	ld	(de), a
      001FB1 11rFDr00              7467 	ld	de, #(_pickup + 3)
      001FB4 2A                    7468 	ld	a, (hl+)
      001FB5 12                    7469 	ld	(de), a
      001FB6 13                    7470 	inc	de
      001FB7 7E                    7471 	ld	a, (hl)
      001FB8 12                    7472 	ld	(de), a
                                   7473 ;src/main.c:767: set_sprite_tile(3, pickup.tile); //0x7f
      001FB9 21r02r01              7474 	ld	hl, #(_pickup + 8)
      001FBC 4E                    7475 	ld	c, (hl)
                                   7476 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FBD 21r0Er00              7477 	ld	hl, #(_shadow_OAM + 14)
      001FC0 71                    7478 	ld	(hl), c
                                   7479 ;src/main.c:767: set_sprite_tile(3, pickup.tile); //0x7f
                                   7480 ;src/main.c:773: }
      001FC1 C9                    7481 	ret
                                   7482 ;src/main.c:775: void killEnemy(uint8_t i) {
                                   7483 ;	---------------------------------
                                   7484 ; Function killEnemy
                                   7485 ; ---------------------------------
      001FC2                       7486 _killEnemy::
      001FC2 E8 FC                 7487 	add	sp, #-4
                                   7488 ;src/main.c:776: set_sprite_tile(10+(i<<1), 0x7f);
      001FC4 F8 06                 7489 	ldhl	sp,	#6
      001FC6 7E                    7490 	ld	a, (hl)
      001FC7 87                    7491 	add	a, a
      001FC8 4F                    7492 	ld	c, a
      001FC9 C6 0A                 7493 	add	a, #0x0a
                                   7494 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FCB 6F                    7495 	ld	l, a
      001FCC 11r00r00              7496 	ld	de, #_shadow_OAM+0
                                   7497 ;	spillPairReg hl
                                   7498 ;	spillPairReg hl
      001FCF 26 00                 7499 	ld	h, #0x00
                                   7500 ;	spillPairReg hl
                                   7501 ;	spillPairReg hl
      001FD1 29                    7502 	add	hl, hl
      001FD2 29                    7503 	add	hl, hl
      001FD3 19                    7504 	add	hl, de
      001FD4 23                    7505 	inc	hl
      001FD5 23                    7506 	inc	hl
      001FD6 36 7F                 7507 	ld	(hl), #0x7f
                                   7508 ;src/main.c:777: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001FD8 79                    7509 	ld	a, c
      001FD9 C6 0B                 7510 	add	a, #0x0b
                                   7511 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FDB 6F                    7512 	ld	l, a
      001FDC 01r00r00              7513 	ld	bc, #_shadow_OAM+0
                                   7514 ;	spillPairReg hl
                                   7515 ;	spillPairReg hl
      001FDF 26 00                 7516 	ld	h, #0x00
                                   7517 ;	spillPairReg hl
                                   7518 ;	spillPairReg hl
      001FE1 29                    7519 	add	hl, hl
      001FE2 29                    7520 	add	hl, hl
      001FE3 09                    7521 	add	hl, bc
      001FE4 23                    7522 	inc	hl
      001FE5 23                    7523 	inc	hl
      001FE6 36 7F                 7524 	ld	(hl), #0x7f
                                   7525 ;src/main.c:779: spawnPickup(enemies[i].x, enemies[i].y);
      001FE8 F8 06                 7526 	ldhl	sp,	#6
      001FEA 4E                    7527 	ld	c, (hl)
      001FEB 06 00                 7528 	ld	b, #0x00
      001FED 69                    7529 	ld	l, c
      001FEE 60                    7530 	ld	h, b
      001FEF 29                    7531 	add	hl, hl
      001FF0 29                    7532 	add	hl, hl
      001FF1 29                    7533 	add	hl, hl
      001FF2 09                    7534 	add	hl, bc
      001FF3 29                    7535 	add	hl, hl
      001FF4 01r5Ar00              7536 	ld	bc,#_enemies
      001FF7 09                    7537 	add	hl,bc
      001FF8 33                    7538 	inc	sp
      001FF9 33                    7539 	inc	sp
      001FFA 5D                    7540 	ld	e, l
      001FFB 54                    7541 	ld	d, h
      001FFC D5                    7542 	push	de
      001FFD 21 02 00              7543 	ld	hl, #0x0002
      002000 19                    7544 	add	hl, de
      002001 E5                    7545 	push	hl
      002002 7D                    7546 	ld	a, l
      002003 F8 04                 7547 	ldhl	sp,	#4
      002005 77                    7548 	ld	(hl), a
      002006 E1                    7549 	pop	hl
      002007 7C                    7550 	ld	a, h
      002008 F8 03                 7551 	ldhl	sp,	#3
      00200A 32                    7552 	ld	(hl-), a
      00200B 2A                    7553 	ld	a, (hl+)
      00200C 5F                    7554 	ld	e, a
      00200D 56                    7555 	ld	d, (hl)
      00200E 1A                    7556 	ld	a, (de)
      00200F 4F                    7557 	ld	c, a
      002010 13                    7558 	inc	de
      002011 1A                    7559 	ld	a, (de)
      002012 47                    7560 	ld	b, a
      002013 D1                    7561 	pop	de
      002014 D5                    7562 	push	de
      002015 1A                    7563 	ld	a, (de)
      002016 6F                    7564 	ld	l, a
                                   7565 ;	spillPairReg hl
                                   7566 ;	spillPairReg hl
      002017 13                    7567 	inc	de
      002018 1A                    7568 	ld	a, (de)
      002019 67                    7569 	ld	h, a
                                   7570 ;	spillPairReg hl
                                   7571 ;	spillPairReg hl
      00201A C5                    7572 	push	bc
      00201B E5                    7573 	push	hl
      00201C CDr4Dr1F              7574 	call	_spawnPickup
      00201F E8 04                 7575 	add	sp, #4
                                   7576 ;src/main.c:781: enemies[i].alive = 0;
      002021 D1                    7577 	pop	de
      002022 D5                    7578 	push	de
      002023 21 09 00              7579 	ld	hl, #0x0009
      002026 19                    7580 	add	hl, de
      002027 4D                    7581 	ld	c, l
      002028 44                    7582 	ld	b, h
      002029 AF                    7583 	xor	a, a
      00202A 02                    7584 	ld	(bc), a
                                   7585 ;src/main.c:782: enemies[i].visible = 0;
      00202B D1                    7586 	pop	de
      00202C D5                    7587 	push	de
      00202D 21 0A 00              7588 	ld	hl, #0x000a
      002030 19                    7589 	add	hl, de
      002031 4D                    7590 	ld	c, l
      002032 44                    7591 	ld	b, h
      002033 AF                    7592 	xor	a, a
      002034 02                    7593 	ld	(bc), a
                                   7594 ;src/main.c:783: playSound(0);
      002035 AF                    7595 	xor	a, a
      002036 F5                    7596 	push	af
      002037 33                    7597 	inc	sp
      002038 CDr98r0F              7598 	call	_playSound
      00203B 33                    7599 	inc	sp
                                   7600 ;src/main.c:784: incrementScore();
      00203C CDr55r0D              7601 	call	_incrementScore
                                   7602 ;src/main.c:785: updateScore();
      00203F CDrB7r0C              7603 	call	_updateScore
                                   7604 ;src/main.c:791: explosions[oldestEx].visible = 1;
      002042 21rBCr00              7605 	ld	hl, #_oldestEx
      002045 4E                    7606 	ld	c, (hl)
      002046 06 00                 7607 	ld	b, #0x00
      002048 69                    7608 	ld	l, c
      002049 60                    7609 	ld	h, b
      00204A 29                    7610 	add	hl, hl
      00204B 09                    7611 	add	hl, bc
      00204C 29                    7612 	add	hl, hl
      00204D 01r03r01              7613 	ld	bc,#_explosions
      002050 09                    7614 	add	hl,bc
      002051 36 01                 7615 	ld	(hl), #0x01
                                   7616 ;src/main.c:792: explosions[oldestEx].x = enemies[i].x;
      002053 21rBCr00              7617 	ld	hl, #_oldestEx
      002056 4E                    7618 	ld	c, (hl)
      002057 06 00                 7619 	ld	b, #0x00
      002059 69                    7620 	ld	l, c
      00205A 60                    7621 	ld	h, b
      00205B 29                    7622 	add	hl, hl
      00205C 09                    7623 	add	hl, bc
      00205D 29                    7624 	add	hl, hl
      00205E 01r03r01              7625 	ld	bc,#_explosions
      002061 09                    7626 	add	hl,bc
      002062 23                    7627 	inc	hl
      002063 4D                    7628 	ld	c, l
      002064 44                    7629 	ld	b, h
      002065 D1                    7630 	pop	de
      002066 D5                    7631 	push	de
      002067 1A                    7632 	ld	a, (de)
      002068 02                    7633 	ld	(bc), a
                                   7634 ;src/main.c:793: explosions[oldestEx].y = enemies[i].y;
      002069 21rBCr00              7635 	ld	hl, #_oldestEx
      00206C 4E                    7636 	ld	c, (hl)
      00206D 06 00                 7637 	ld	b, #0x00
      00206F 69                    7638 	ld	l, c
      002070 60                    7639 	ld	h, b
      002071 29                    7640 	add	hl, hl
      002072 09                    7641 	add	hl, bc
      002073 29                    7642 	add	hl, hl
      002074 01r03r01              7643 	ld	bc,#_explosions
      002077 09                    7644 	add	hl,bc
      002078 23                    7645 	inc	hl
      002079 23                    7646 	inc	hl
      00207A 4D                    7647 	ld	c, l
      00207B 44                    7648 	ld	b, h
      00207C F8 02                 7649 	ldhl	sp,#2
      00207E 2A                    7650 	ld	a, (hl+)
      00207F 5F                    7651 	ld	e, a
      002080 56                    7652 	ld	d, (hl)
      002081 1A                    7653 	ld	a, (de)
      002082 02                    7654 	ld	(bc), a
                                   7655 ;src/main.c:794: explosions[oldestEx].tile = exTiles[0];
      002083 21rBCr00              7656 	ld	hl, #_oldestEx
      002086 4E                    7657 	ld	c, (hl)
      002087 06 00                 7658 	ld	b, #0x00
      002089 69                    7659 	ld	l, c
      00208A 60                    7660 	ld	h, b
      00208B 29                    7661 	add	hl, hl
      00208C 09                    7662 	add	hl, bc
      00208D 29                    7663 	add	hl, hl
      00208E 01r03r01              7664 	ld	bc,#_explosions
      002091 09                    7665 	add	hl,bc
      002092 23                    7666 	inc	hl
      002093 23                    7667 	inc	hl
      002094 23                    7668 	inc	hl
      002095 23                    7669 	inc	hl
      002096 23                    7670 	inc	hl
      002097 4D                    7671 	ld	c, l
      002098 44                    7672 	ld	b, h
      002099 FArBDr00              7673 	ld	a, (#_exTiles + 0)
      00209C 02                    7674 	ld	(bc), a
                                   7675 ;src/main.c:795: explosions[oldestEx].frame = 0;
      00209D 21rBCr00              7676 	ld	hl, #_oldestEx
      0020A0 4E                    7677 	ld	c, (hl)
      0020A1 06 00                 7678 	ld	b, #0x00
      0020A3 69                    7679 	ld	l, c
      0020A4 60                    7680 	ld	h, b
      0020A5 29                    7681 	add	hl, hl
      0020A6 09                    7682 	add	hl, bc
      0020A7 29                    7683 	add	hl, hl
      0020A8 01r03r01              7684 	ld	bc,#_explosions
      0020AB 09                    7685 	add	hl,bc
      0020AC 23                    7686 	inc	hl
      0020AD 23                    7687 	inc	hl
      0020AE 23                    7688 	inc	hl
      0020AF 36 00                 7689 	ld	(hl), #0x00
                                   7690 ;src/main.c:796: set_sprite_tile(20, explosions[oldestEx].tile + (explosions[oldestEx].frame<<1));
      0020B1 21rBCr00              7691 	ld	hl, #_oldestEx
      0020B4 4E                    7692 	ld	c, (hl)
      0020B5 06 00                 7693 	ld	b, #0x00
      0020B7 69                    7694 	ld	l, c
      0020B8 60                    7695 	ld	h, b
      0020B9 29                    7696 	add	hl, hl
      0020BA 09                    7697 	add	hl, bc
      0020BB 29                    7698 	add	hl, hl
      0020BC 01r03r01              7699 	ld	bc,#_explosions
      0020BF 09                    7700 	add	hl,bc
      0020C0 5D                    7701 	ld	e, l
      0020C1 54                    7702 	ld	d, h
      0020C2 21 05 00              7703 	ld	hl, #0x0005
      0020C5 19                    7704 	add	hl, de
      0020C6 4E                    7705 	ld	c, (hl)
      0020C7 13                    7706 	inc	de
      0020C8 13                    7707 	inc	de
      0020C9 13                    7708 	inc	de
      0020CA 1A                    7709 	ld	a, (de)
      0020CB 87                    7710 	add	a, a
      0020CC 81                    7711 	add	a, c
      0020CD 4F                    7712 	ld	c, a
                                   7713 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0020CE 21r52r00              7714 	ld	hl, #(_shadow_OAM + 82)
      0020D1 71                    7715 	ld	(hl), c
                                   7716 ;src/main.c:797: set_sprite_tile(21, explosions[oldestEx].tile+(explosions[oldestEx].frame<<1) +2);
      0020D2 21rBCr00              7717 	ld	hl, #_oldestEx
      0020D5 4E                    7718 	ld	c, (hl)
      0020D6 06 00                 7719 	ld	b, #0x00
      0020D8 69                    7720 	ld	l, c
      0020D9 60                    7721 	ld	h, b
      0020DA 29                    7722 	add	hl, hl
      0020DB 09                    7723 	add	hl, bc
      0020DC 29                    7724 	add	hl, hl
      0020DD 01r03r01              7725 	ld	bc,#_explosions
      0020E0 09                    7726 	add	hl,bc
      0020E1 5D                    7727 	ld	e, l
      0020E2 54                    7728 	ld	d, h
      0020E3 21 05 00              7729 	ld	hl, #0x0005
      0020E6 19                    7730 	add	hl, de
      0020E7 4E                    7731 	ld	c, (hl)
      0020E8 13                    7732 	inc	de
      0020E9 13                    7733 	inc	de
      0020EA 13                    7734 	inc	de
      0020EB 1A                    7735 	ld	a, (de)
      0020EC 87                    7736 	add	a, a
      0020ED 81                    7737 	add	a, c
      0020EE C6 02                 7738 	add	a, #0x02
      0020F0 4F                    7739 	ld	c, a
                                   7740 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0020F1 21r56r00              7741 	ld	hl, #(_shadow_OAM + 86)
      0020F4 71                    7742 	ld	(hl), c
                                   7743 ;src/main.c:798: move_sprite(20, explosions[oldestEx].x, explosions[oldestEx].y+8);
      0020F5 21rBCr00              7744 	ld	hl, #_oldestEx
      0020F8 4E                    7745 	ld	c, (hl)
      0020F9 06 00                 7746 	ld	b, #0x00
      0020FB 69                    7747 	ld	l, c
      0020FC 60                    7748 	ld	h, b
      0020FD 29                    7749 	add	hl, hl
      0020FE 09                    7750 	add	hl, bc
      0020FF 29                    7751 	add	hl, hl
      002100 01r03r01              7752 	ld	bc,#_explosions
      002103 09                    7753 	add	hl,bc
      002104 4D                    7754 	ld	c, l
      002105 44                    7755 	ld	b, h
      002106 23                    7756 	inc	hl
      002107 03                    7757 	inc	bc
      002108 03                    7758 	inc	bc
      002109 0A                    7759 	ld	a, (bc)
      00210A C6 08                 7760 	add	a, #0x08
      00210C 47                    7761 	ld	b, a
      00210D 4E                    7762 	ld	c, (hl)
                                   7763 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00210E 21r50r00              7764 	ld	hl, #(_shadow_OAM + 80)
                                   7765 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002111 78                    7766 	ld	a, b
      002112 22                    7767 	ld	(hl+), a
      002113 71                    7768 	ld	(hl), c
                                   7769 ;src/main.c:799: move_sprite(21, explosions[oldestEx].x+8, explosions[oldestEx].y+8);
      002114 21rBCr00              7770 	ld	hl, #_oldestEx
      002117 4E                    7771 	ld	c, (hl)
      002118 06 00                 7772 	ld	b, #0x00
      00211A 69                    7773 	ld	l, c
      00211B 60                    7774 	ld	h, b
      00211C 29                    7775 	add	hl, hl
      00211D 09                    7776 	add	hl, bc
      00211E 29                    7777 	add	hl, hl
      00211F 01r03r01              7778 	ld	bc,#_explosions
      002122 09                    7779 	add	hl,bc
      002123 4D                    7780 	ld	c, l
      002124 44                    7781 	ld	b, h
      002125 23                    7782 	inc	hl
      002126 03                    7783 	inc	bc
      002127 03                    7784 	inc	bc
      002128 0A                    7785 	ld	a, (bc)
      002129 C6 08                 7786 	add	a, #0x08
      00212B 47                    7787 	ld	b, a
      00212C 7E                    7788 	ld	a, (hl)
      00212D C6 08                 7789 	add	a, #0x08
      00212F 4F                    7790 	ld	c, a
                                   7791 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002130 21r54r00              7792 	ld	hl, #(_shadow_OAM + 84)
                                   7793 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002133 78                    7794 	ld	a, b
      002134 22                    7795 	ld	(hl+), a
      002135 71                    7796 	ld	(hl), c
                                   7797 ;src/main.c:801: oldestEx++;
      002136 21rBCr00              7798 	ld	hl, #_oldestEx
      002139 34                    7799 	inc	(hl)
                                   7800 ;src/main.c:802: if (oldestEx >= exCount) {
      00213A 7E                    7801 	ld	a, (hl)
      00213B 21rBBr00              7802 	ld	hl, #_exCount
      00213E 96                    7803 	sub	a, (hl)
      00213F 38 05                 7804 	jr	C, 00109$
                                   7805 ;src/main.c:803: oldestEx = 0;
      002141 21rBCr00              7806 	ld	hl, #_oldestEx
      002144 36 00                 7807 	ld	(hl), #0x00
      002146                       7808 00109$:
                                   7809 ;src/main.c:807: }
      002146 E8 04                 7810 	add	sp, #4
      002148 C9                    7811 	ret
                                   7812 ;src/main.c:809: void checkCollision() {
                                   7813 ;	---------------------------------
                                   7814 ; Function checkCollision
                                   7815 ; ---------------------------------
      002149                       7816 _checkCollision::
      002149 E8 E7                 7817 	add	sp, #-25
                                   7818 ;src/main.c:816: struct Enemy *eptr = enemies + enemyCollisionCount;
      00214B 21rA5r00              7819 	ld	hl, #_enemyCollisionCount
      00214E 4E                    7820 	ld	c, (hl)
      00214F 06 00                 7821 	ld	b, #0x00
      002151 69                    7822 	ld	l, c
      002152 60                    7823 	ld	h, b
      002153 29                    7824 	add	hl, hl
      002154 29                    7825 	add	hl, hl
      002155 29                    7826 	add	hl, hl
      002156 09                    7827 	add	hl, bc
      002157 29                    7828 	add	hl, hl
      002158 01r5Ar00              7829 	ld	bc,#_enemies
      00215B 09                    7830 	add	hl,bc
      00215C 4D                    7831 	ld	c, l
      00215D 7C                    7832 	ld	a, h
      00215E F8 00                 7833 	ldhl	sp,	#0
      002160 71                    7834 	ld	(hl), c
      002161 23                    7835 	inc	hl
      002162 77                    7836 	ld	(hl), a
                                   7837 ;src/main.c:817: uint8_t i = enemyCollisionCount;
      002163 FArA5r00              7838 	ld	a, (#_enemyCollisionCount)
      002166 F8 02                 7839 	ldhl	sp,	#2
      002168 77                    7840 	ld	(hl), a
                                   7841 ;src/main.c:819: if (eptr->visible && eptr->alive) {
      002169 D1                    7842 	pop	de
      00216A D5                    7843 	push	de
      00216B 21 0A 00              7844 	ld	hl, #0x000a
      00216E 19                    7845 	add	hl, de
      00216F 4D                    7846 	ld	c, l
      002170 44                    7847 	ld	b, h
      002171 0A                    7848 	ld	a, (bc)
      002172 B7                    7849 	or	a, a
      002173 CAr03r26              7850 	jp	Z, 00137$
      002176 D1                    7851 	pop	de
      002177 D5                    7852 	push	de
      002178 21 09 00              7853 	ld	hl, #0x0009
      00217B 19                    7854 	add	hl, de
      00217C 4D                    7855 	ld	c, l
      00217D 44                    7856 	ld	b, h
      00217E 0A                    7857 	ld	a, (bc)
      00217F B7                    7858 	or	a, a
      002180 CAr03r26              7859 	jp	Z, 00137$
                                   7860 ;src/main.c:821: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      002183 D1                    7861 	pop	de
      002184 D5                    7862 	push	de
      002185 21 08 00              7863 	ld	hl, #0x0008
      002188 19                    7864 	add	hl, de
      002189 4D                    7865 	ld	c, l
      00218A 44                    7866 	ld	b, h
      00218B 0A                    7867 	ld	a, (bc)
      00218C 4F                    7868 	ld	c, a
      00218D 3D                    7869 	dec	a
      00218E 3E 01                 7870 	ld	a, #0x01
      002190 28 01                 7871 	jr	Z, 00343$
      002192 AF                    7872 	xor	a, a
      002193                       7873 00343$:
      002193 F8 15                 7874 	ldhl	sp,	#21
      002195 77                    7875 	ld	(hl), a
      002196 FAr9Br00              7876 	ld	a, (#_playerDrawX)
      002199 F8 16                 7877 	ldhl	sp,	#22
      00219B 77                    7878 	ld	(hl), a
                                   7879 ;src/main.c:822: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      00219C 79                    7880 	ld	a, c
      00219D D6 02                 7881 	sub	a, #0x02
      00219F 3E 01                 7882 	ld	a, #0x01
      0021A1 28 01                 7883 	jr	Z, 00345$
      0021A3 AF                    7884 	xor	a, a
      0021A4                       7885 00345$:
      0021A4 F8 17                 7886 	ldhl	sp,	#23
                                   7887 ;src/main.c:821: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      0021A6 32                    7888 	ld	(hl-), a
      0021A7 2B                    7889 	dec	hl
      0021A8 7E                    7890 	ld	a, (hl)
      0021A9 B7                    7891 	or	a, a
      0021AA 28 2E                 7892 	jr	Z, 00110$
      0021AC D1                    7893 	pop	de
      0021AD D5                    7894 	push	de
      0021AE 1A                    7895 	ld	a, (de)
      0021AF F8 18                 7896 	ldhl	sp,	#24
      0021B1 77                    7897 	ld	(hl), a
      0021B2 3A                    7898 	ld	a, (hl-)
      0021B3 2B                    7899 	dec	hl
      0021B4 96                    7900 	sub	a, (hl)
      0021B5 23                    7901 	inc	hl
      0021B6 23                    7902 	inc	hl
      0021B7 77                    7903 	ld	(hl), a
                                   7904 ;src/main.c:361: if (value >= 0) return value;
      0021B8 CB 7E                 7905 	bit	7, (hl)
      0021BA 28 05                 7906 	jr	Z, 00145$
                                   7907 ;src/main.c:362: else return - value;
      0021BC AF                    7908 	xor	a, a
      0021BD F8 18                 7909 	ldhl	sp,	#24
      0021BF 96                    7910 	sub	a, (hl)
      0021C0 77                    7911 	ld	(hl), a
                                   7912 ;src/main.c:821: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      0021C1                       7913 00145$:
      0021C1 F8 18                 7914 	ldhl	sp,	#24
      0021C3 5E                    7915 	ld	e, (hl)
      0021C4 3E 08                 7916 	ld	a,#0x08
      0021C6 57                    7917 	ld	d,a
      0021C7 96                    7918 	sub	a, (hl)
      0021C8 CB 7B                 7919 	bit	7, e
      0021CA 28 07                 7920 	jr	Z, 00346$
      0021CC CB 7A                 7921 	bit	7, d
      0021CE 20 08                 7922 	jr	NZ, 00347$
      0021D0 BF                    7923 	cp	a, a
      0021D1 18 05                 7924 	jr	00347$
      0021D3                       7925 00346$:
      0021D3 CB 7A                 7926 	bit	7, d
      0021D5 28 01                 7927 	jr	Z, 00347$
      0021D7 37                    7928 	scf
      0021D8                       7929 00347$:
      0021D8 30 33                 7930 	jr	NC, 00106$
      0021DA                       7931 00110$:
                                   7932 ;src/main.c:822: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      0021DA F8 17                 7933 	ldhl	sp,	#23
      0021DC 7E                    7934 	ld	a, (hl)
      0021DD B7                    7935 	or	a, a
      0021DE CArC1r22              7936 	jp	Z, 00107$
      0021E1 2B                    7937 	dec	hl
      0021E2 D1                    7938 	pop	de
      0021E3 D5                    7939 	push	de
      0021E4 1A                    7940 	ld	a, (de)
      0021E5 96                    7941 	sub	a, (hl)
      0021E6 23                    7942 	inc	hl
      0021E7 23                    7943 	inc	hl
      0021E8 77                    7944 	ld	(hl), a
                                   7945 ;src/main.c:361: if (value >= 0) return value;
      0021E9 CB 7E                 7946 	bit	7, (hl)
      0021EB 28 06                 7947 	jr	Z, 00149$
                                   7948 ;src/main.c:362: else return - value;
      0021ED AF                    7949 	xor	a, a
      0021EE F8 18                 7950 	ldhl	sp,	#24
      0021F0 96                    7951 	sub	a, (hl)
      0021F1 4F                    7952 	ld	c, a
      0021F2 71                    7953 	ld	(hl), c
                                   7954 ;src/main.c:822: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      0021F3                       7955 00149$:
      0021F3 F8 18                 7956 	ldhl	sp,	#24
      0021F5 5E                    7957 	ld	e, (hl)
      0021F6 3E 10                 7958 	ld	a,#0x10
      0021F8 57                    7959 	ld	d,a
      0021F9 96                    7960 	sub	a, (hl)
      0021FA CB 7B                 7961 	bit	7, e
      0021FC 28 07                 7962 	jr	Z, 00348$
      0021FE CB 7A                 7963 	bit	7, d
      002200 20 08                 7964 	jr	NZ, 00349$
      002202 BF                    7965 	cp	a, a
      002203 18 05                 7966 	jr	00349$
      002205                       7967 00348$:
      002205 CB 7A                 7968 	bit	7, d
      002207 28 01                 7969 	jr	Z, 00349$
      002209 37                    7970 	scf
      00220A                       7971 00349$:
      00220A DArC1r22              7972 	jp	C, 00107$
      00220D                       7973 00106$:
                                   7974 ;src/main.c:823: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      00220D C1                    7975 	pop	bc
      00220E C5                    7976 	push	bc
      00220F 03                    7977 	inc	bc
      002210 03                    7978 	inc	bc
      002211 FAr9Cr00              7979 	ld	a, (#_playerDrawY)
      002214 F8 18                 7980 	ldhl	sp,	#24
      002216 77                    7981 	ld	(hl), a
      002217 F8 15                 7982 	ldhl	sp,	#21
      002219 7E                    7983 	ld	a, (hl)
      00221A B7                    7984 	or	a, a
      00221B 28 23                 7985 	jr	Z, 00105$
      00221D 0A                    7986 	ld	a, (bc)
      00221E F8 18                 7987 	ldhl	sp,	#24
      002220 96                    7988 	sub	a, (hl)
      002221 6F                    7989 	ld	l, a
                                   7990 ;	spillPairReg hl
                                   7991 ;	spillPairReg hl
                                   7992 ;src/main.c:361: if (value >= 0) return value;
      002222 CB 7D                 7993 	bit	7, l
      002224 28 03                 7994 	jr	Z, 00153$
                                   7995 ;src/main.c:362: else return - value;
      002226 AF                    7996 	xor	a, a
      002227 95                    7997 	sub	a, l
      002228 6F                    7998 	ld	l, a
                                   7999 ;	spillPairReg hl
                                   8000 ;	spillPairReg hl
                                   8001 ;src/main.c:823: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      002229                       8002 00153$:
      002229 5D                    8003 	ld	e, l
      00222A 3E 08                 8004 	ld	a,#0x08
      00222C 57                    8005 	ld	d,a
      00222D 95                    8006 	sub	a, l
      00222E CB 7B                 8007 	bit	7, e
      002230 28 07                 8008 	jr	Z, 00350$
      002232 CB 7A                 8009 	bit	7, d
      002234 20 08                 8010 	jr	NZ, 00351$
      002236 BF                    8011 	cp	a, a
      002237 18 05                 8012 	jr	00351$
      002239                       8013 00350$:
      002239 CB 7A                 8014 	bit	7, d
      00223B 28 01                 8015 	jr	Z, 00351$
      00223D 37                    8016 	scf
      00223E                       8017 00351$:
      00223E 30 28                 8018 	jr	NC, 00101$
      002240                       8019 00105$:
                                   8020 ;src/main.c:824: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      002240 F8 17                 8021 	ldhl	sp,	#23
      002242 7E                    8022 	ld	a, (hl)
      002243 B7                    8023 	or	a, a
      002244 28 7B                 8024 	jr	Z, 00107$
      002246 23                    8025 	inc	hl
      002247 0A                    8026 	ld	a, (bc)
      002248 96                    8027 	sub	a, (hl)
      002249 4F                    8028 	ld	c, a
                                   8029 ;src/main.c:361: if (value >= 0) return value;
      00224A CB 79                 8030 	bit	7, c
      00224C 28 03                 8031 	jr	Z, 00157$
                                   8032 ;src/main.c:362: else return - value;
      00224E AF                    8033 	xor	a, a
      00224F 91                    8034 	sub	a, c
      002250 4F                    8035 	ld	c, a
                                   8036 ;src/main.c:824: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      002251                       8037 00157$:
      002251 59                    8038 	ld	e, c
      002252 3E 10                 8039 	ld	a,#0x10
      002254 57                    8040 	ld	d,a
      002255 91                    8041 	sub	a, c
      002256 CB 7B                 8042 	bit	7, e
      002258 28 07                 8043 	jr	Z, 00352$
      00225A CB 7A                 8044 	bit	7, d
      00225C 20 08                 8045 	jr	NZ, 00353$
      00225E BF                    8046 	cp	a, a
      00225F 18 05                 8047 	jr	00353$
      002261                       8048 00352$:
      002261 CB 7A                 8049 	bit	7, d
      002263 28 01                 8050 	jr	Z, 00353$
      002265 37                    8051 	scf
      002266                       8052 00353$:
      002266 38 59                 8053 	jr	C, 00107$
      002268                       8054 00101$:
                                   8055 ;src/main.c:826: set_sprite_tile(10+(i<<1), 0x7f);
      002268 F8 02                 8056 	ldhl	sp,	#2
      00226A 7E                    8057 	ld	a, (hl)
      00226B 87                    8058 	add	a, a
      00226C C6 0A                 8059 	add	a, #0x0a
                                   8060 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00226E 6F                    8061 	ld	l, a
      00226F 01r00r00              8062 	ld	bc, #_shadow_OAM+0
                                   8063 ;	spillPairReg hl
                                   8064 ;	spillPairReg hl
      002272 26 00                 8065 	ld	h, #0x00
                                   8066 ;	spillPairReg hl
                                   8067 ;	spillPairReg hl
      002274 29                    8068 	add	hl, hl
      002275 29                    8069 	add	hl, hl
      002276 09                    8070 	add	hl, bc
      002277 23                    8071 	inc	hl
      002278 23                    8072 	inc	hl
      002279 36 7F                 8073 	ld	(hl), #0x7f
                                   8074 ;src/main.c:827: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00227B F8 02                 8075 	ldhl	sp,	#2
      00227D 7E                    8076 	ld	a, (hl)
      00227E 87                    8077 	add	a, a
      00227F C6 0B                 8078 	add	a, #0x0b
                                   8079 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002281 6F                    8080 	ld	l, a
      002282 01r00r00              8081 	ld	bc, #_shadow_OAM+0
                                   8082 ;	spillPairReg hl
                                   8083 ;	spillPairReg hl
      002285 26 00                 8084 	ld	h, #0x00
                                   8085 ;	spillPairReg hl
                                   8086 ;	spillPairReg hl
      002287 29                    8087 	add	hl, hl
      002288 29                    8088 	add	hl, hl
      002289 09                    8089 	add	hl, bc
      00228A 23                    8090 	inc	hl
      00228B 23                    8091 	inc	hl
      00228C 36 7F                 8092 	ld	(hl), #0x7f
                                   8093 ;src/main.c:828: eptr->alive = 0;
      00228E D1                    8094 	pop	de
      00228F D5                    8095 	push	de
      002290 21 09 00              8096 	ld	hl, #0x0009
      002293 19                    8097 	add	hl, de
      002294 4D                    8098 	ld	c, l
      002295 44                    8099 	ld	b, h
      002296 AF                    8100 	xor	a, a
      002297 02                    8101 	ld	(bc), a
                                   8102 ;src/main.c:829: eptr->visible = 0;
      002298 D1                    8103 	pop	de
      002299 D5                    8104 	push	de
      00229A 21 0A 00              8105 	ld	hl, #0x000a
      00229D 19                    8106 	add	hl, de
      00229E 4D                    8107 	ld	c, l
      00229F 44                    8108 	ld	b, h
      0022A0 AF                    8109 	xor	a, a
      0022A1 02                    8110 	ld	(bc), a
                                   8111 ;src/main.c:830: takeDamage(eptr->damage);
      0022A2 D1                    8112 	pop	de
      0022A3 D5                    8113 	push	de
      0022A4 21 0B 00              8114 	ld	hl, #0x000b
      0022A7 19                    8115 	add	hl, de
      0022A8 4D                    8116 	ld	c, l
      0022A9 44                    8117 	ld	b, h
      0022AA 0A                    8118 	ld	a, (bc)
      0022AB 06 00                 8119 	ld	b, #0x00
      0022AD 4F                    8120 	ld	c, a
      0022AE C5                    8121 	push	bc
      0022AF CDr09r1F              8122 	call	_takeDamage
      0022B2 E1                    8123 	pop	hl
                                   8124 ;src/main.c:831: initEnemies(0);
      0022B3 AF                    8125 	xor	a, a
      0022B4 F5                    8126 	push	af
      0022B5 33                    8127 	inc	sp
      0022B6 CDrFBr0F              8128 	call	_initEnemies
      0022B9 33                    8129 	inc	sp
                                   8130 ;src/main.c:832: playSound(0);
      0022BA AF                    8131 	xor	a, a
      0022BB F5                    8132 	push	af
      0022BC 33                    8133 	inc	sp
      0022BD CDr98r0F              8134 	call	_playSound
      0022C0 33                    8135 	inc	sp
      0022C1                       8136 00107$:
                                   8137 ;src/main.c:838: struct Projectile *pptr = projectiles;
      0022C1 F8 15                 8138 	ldhl	sp,	#21
      0022C3 3ErB4                 8139 	ld	a, #<(_projectiles)
      0022C5 22                    8140 	ld	(hl+), a
      0022C6 36s00                 8141 	ld	(hl), #>(_projectiles)
                                   8142 ;src/main.c:840: while (j < PROJECTILECOUNT) {
      0022C8 D1                    8143 	pop	de
      0022C9 D5                    8144 	push	de
      0022CA 21 02 00              8145 	ld	hl, #0x0002
      0022CD 19                    8146 	add	hl, de
      0022CE E5                    8147 	push	hl
      0022CF 7D                    8148 	ld	a, l
      0022D0 F8 05                 8149 	ldhl	sp,	#5
      0022D2 77                    8150 	ld	(hl), a
      0022D3 E1                    8151 	pop	hl
      0022D4 7C                    8152 	ld	a, h
      0022D5 F8 04                 8153 	ldhl	sp,	#4
      0022D7 32                    8154 	ld	(hl-), a
      0022D8 2A                    8155 	ld	a, (hl+)
      0022D9 23                    8156 	inc	hl
      0022DA 32                    8157 	ld	(hl-), a
      0022DB 2A                    8158 	ld	a, (hl+)
      0022DC 23                    8159 	inc	hl
      0022DD 77                    8160 	ld	(hl), a
      0022DE D1                    8161 	pop	de
      0022DF D5                    8162 	push	de
      0022E0 21 08 00              8163 	ld	hl, #0x0008
      0022E3 19                    8164 	add	hl, de
      0022E4 E5                    8165 	push	hl
      0022E5 7D                    8166 	ld	a, l
      0022E6 F8 09                 8167 	ldhl	sp,	#9
      0022E8 77                    8168 	ld	(hl), a
      0022E9 E1                    8169 	pop	hl
      0022EA 7C                    8170 	ld	a, h
      0022EB F8 08                 8171 	ldhl	sp,	#8
      0022ED 77                    8172 	ld	(hl), a
      0022EE F8 03                 8173 	ldhl	sp,	#3
      0022F0 7E                    8174 	ld	a, (hl)
      0022F1 F8 09                 8175 	ldhl	sp,	#9
      0022F3 77                    8176 	ld	(hl), a
      0022F4 F8 04                 8177 	ldhl	sp,	#4
      0022F6 7E                    8178 	ld	a, (hl)
      0022F7 F8 0A                 8179 	ldhl	sp,	#10
      0022F9 77                    8180 	ld	(hl), a
      0022FA F8 17                 8181 	ldhl	sp,	#23
      0022FC 36 00                 8182 	ld	(hl), #0x00
      0022FE                       8183 00133$:
      0022FE 21r9Fr0B              8184 	ld	hl, #_PROJECTILECOUNT
      002301 4E                    8185 	ld	c, (hl)
      002302 F8 17                 8186 	ldhl	sp,	#23
      002304 7E                    8187 	ld	a, (hl)
      002305 91                    8188 	sub	a, c
      002306 D2r03r26              8189 	jp	NC, 00137$
                                   8190 ;src/main.c:841: if (pptr->active) {
      002309 2B                    8191 	dec	hl
      00230A 2B                    8192 	dec	hl
      00230B 2A                    8193 	ld	a, (hl+)
      00230C 5F                    8194 	ld	e, a
      00230D 56                    8195 	ld	d, (hl)
      00230E 21 0A 00              8196 	ld	hl, #0x000a
      002311 19                    8197 	add	hl, de
      002312 4D                    8198 	ld	c, l
      002313 44                    8199 	ld	b, h
      002314 0A                    8200 	ld	a, (bc)
      002315 B7                    8201 	or	a, a
      002316 CArEAr25              8202 	jp	Z, 00132$
                                   8203 ;src/main.c:845: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      002319 F8 07                 8204 	ldhl	sp,#7
      00231B 2A                    8205 	ld	a, (hl+)
      00231C 5F                    8206 	ld	e, a
      00231D 56                    8207 	ld	d, (hl)
      00231E 1A                    8208 	ld	a, (de)
      00231F 4F                    8209 	ld	c, a
      002320 3D                    8210 	dec	a
      002321 3E 01                 8211 	ld	a, #0x01
      002323 28 01                 8212 	jr	Z, 00355$
      002325 AF                    8213 	xor	a, a
      002326                       8214 00355$:
      002326 F8 13                 8215 	ldhl	sp,	#19
      002328 77                    8216 	ld	(hl), a
                                   8217 ;src/main.c:846: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002329 79                    8218 	ld	a, c
      00232A D6 02                 8219 	sub	a, #0x02
      00232C 3E 01                 8220 	ld	a, #0x01
      00232E 28 01                 8221 	jr	Z, 00357$
      002330 AF                    8222 	xor	a, a
      002331                       8223 00357$:
      002331 F8 14                 8224 	ldhl	sp,	#20
                                   8225 ;src/main.c:845: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      002333 32                    8226 	ld	(hl-), a
      002334 7E                    8227 	ld	a, (hl)
      002335 B7                    8228 	or	a, a
      002336 28 2C                 8229 	jr	Z, 00130$
      002338 D1                    8230 	pop	de
      002339 D5                    8231 	push	de
      00233A 1A                    8232 	ld	a, (de)
      00233B F8 15                 8233 	ldhl	sp,#21
      00233D 5E                    8234 	ld	e, (hl)
      00233E 23                    8235 	inc	hl
      00233F 56                    8236 	ld	d, (hl)
      002340 F5                    8237 	push	af
      002341 1A                    8238 	ld	a, (de)
      002342 4F                    8239 	ld	c, a
      002343 F1                    8240 	pop	af
      002344 91                    8241 	sub	a, c
      002345 4F                    8242 	ld	c, a
                                   8243 ;src/main.c:361: if (value >= 0) return value;
      002346 CB 79                 8244 	bit	7, c
      002348 28 03                 8245 	jr	Z, 00163$
                                   8246 ;src/main.c:362: else return - value;
      00234A AF                    8247 	xor	a, a
      00234B 91                    8248 	sub	a, c
      00234C 4F                    8249 	ld	c, a
                                   8250 ;src/main.c:845: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      00234D                       8251 00163$:
      00234D 59                    8252 	ld	e, c
      00234E 3E 08                 8253 	ld	a,#0x08
      002350 57                    8254 	ld	d,a
      002351 91                    8255 	sub	a, c
      002352 CB 7B                 8256 	bit	7, e
      002354 28 07                 8257 	jr	Z, 00358$
      002356 CB 7A                 8258 	bit	7, d
      002358 20 08                 8259 	jr	NZ, 00359$
      00235A BF                    8260 	cp	a, a
      00235B 18 05                 8261 	jr	00359$
      00235D                       8262 00358$:
      00235D CB 7A                 8263 	bit	7, d
      00235F 28 01                 8264 	jr	Z, 00359$
      002361 37                    8265 	scf
      002362                       8266 00359$:
      002362 30 3A                 8267 	jr	NC, 00126$
      002364                       8268 00130$:
                                   8269 ;src/main.c:846: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002364 F8 14                 8270 	ldhl	sp,	#20
      002366 7E                    8271 	ld	a, (hl)
      002367 B7                    8272 	or	a, a
      002368 CArEAr25              8273 	jp	Z, 00132$
      00236B 23                    8274 	inc	hl
      00236C D1                    8275 	pop	de
      00236D D5                    8276 	push	de
      00236E 1A                    8277 	ld	a, (de)
      00236F 5E                    8278 	ld	e, (hl)
      002370 23                    8279 	inc	hl
      002371 56                    8280 	ld	d, (hl)
      002372 23                    8281 	inc	hl
      002373 23                    8282 	inc	hl
      002374 F5                    8283 	push	af
      002375 1A                    8284 	ld	a, (de)
      002376 4F                    8285 	ld	c, a
      002377 F1                    8286 	pop	af
      002378 91                    8287 	sub	a, c
      002379 77                    8288 	ld	(hl), a
                                   8289 ;src/main.c:361: if (value >= 0) return value;
      00237A CB 7E                 8290 	bit	7, (hl)
      00237C 20 03                 8291 	jr	NZ, 00165$
      00237E 4E                    8292 	ld	c, (hl)
      00237F 18 05                 8293 	jr	00167$
      002381                       8294 00165$:
                                   8295 ;src/main.c:362: else return - value;
      002381 AF                    8296 	xor	a, a
      002382 F8 18                 8297 	ldhl	sp,	#24
      002384 96                    8298 	sub	a, (hl)
      002385 4F                    8299 	ld	c, a
                                   8300 ;src/main.c:846: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002386                       8301 00167$:
      002386 59                    8302 	ld	e, c
      002387 3E 10                 8303 	ld	a,#0x10
      002389 57                    8304 	ld	d,a
      00238A 91                    8305 	sub	a, c
      00238B CB 7B                 8306 	bit	7, e
      00238D 28 07                 8307 	jr	Z, 00360$
      00238F CB 7A                 8308 	bit	7, d
      002391 20 08                 8309 	jr	NZ, 00361$
      002393 BF                    8310 	cp	a, a
      002394 18 05                 8311 	jr	00361$
      002396                       8312 00360$:
      002396 CB 7A                 8313 	bit	7, d
      002398 28 01                 8314 	jr	Z, 00361$
      00239A 37                    8315 	scf
      00239B                       8316 00361$:
      00239B DArEAr25              8317 	jp	C, 00132$
      00239E                       8318 00126$:
                                   8319 ;src/main.c:847: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      00239E F8 15                 8320 	ldhl	sp,	#21
      0023A0 2A                    8321 	ld	a, (hl+)
      0023A1 4F                    8322 	ld	c, a
      0023A2 46                    8323 	ld	b, (hl)
      0023A3 03                    8324 	inc	bc
      0023A4 03                    8325 	inc	bc
      0023A5 F8 13                 8326 	ldhl	sp,	#19
      0023A7 7E                    8327 	ld	a, (hl)
      0023A8 B7                    8328 	or	a, a
      0023A9 28 2A                 8329 	jr	Z, 00125$
      0023AB F8 09                 8330 	ldhl	sp,#9
      0023AD 2A                    8331 	ld	a, (hl+)
      0023AE 5F                    8332 	ld	e, a
      0023AF 56                    8333 	ld	d, (hl)
      0023B0 1A                    8334 	ld	a, (de)
      0023B1 F5                    8335 	push	af
      0023B2 0A                    8336 	ld	a, (bc)
      0023B3 5F                    8337 	ld	e, a
      0023B4 F1                    8338 	pop	af
      0023B5 93                    8339 	sub	a, e
      0023B6 6F                    8340 	ld	l, a
                                   8341 ;	spillPairReg hl
                                   8342 ;	spillPairReg hl
                                   8343 ;src/main.c:361: if (value >= 0) return value;
      0023B7 CB 7D                 8344 	bit	7, l
      0023B9 28 03                 8345 	jr	Z, 00171$
                                   8346 ;src/main.c:362: else return - value;
      0023BB AF                    8347 	xor	a, a
      0023BC 95                    8348 	sub	a, l
      0023BD 6F                    8349 	ld	l, a
                                   8350 ;	spillPairReg hl
                                   8351 ;	spillPairReg hl
                                   8352 ;src/main.c:847: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      0023BE                       8353 00171$:
      0023BE 5D                    8354 	ld	e, l
      0023BF 3E 08                 8355 	ld	a,#0x08
      0023C1 57                    8356 	ld	d,a
      0023C2 95                    8357 	sub	a, l
      0023C3 CB 7B                 8358 	bit	7, e
      0023C5 28 07                 8359 	jr	Z, 00362$
      0023C7 CB 7A                 8360 	bit	7, d
      0023C9 20 08                 8361 	jr	NZ, 00363$
      0023CB BF                    8362 	cp	a, a
      0023CC 18 05                 8363 	jr	00363$
      0023CE                       8364 00362$:
      0023CE CB 7A                 8365 	bit	7, d
      0023D0 28 01                 8366 	jr	Z, 00363$
      0023D2 37                    8367 	scf
      0023D3                       8368 00363$:
      0023D3 30 32                 8369 	jr	NC, 00121$
      0023D5                       8370 00125$:
                                   8371 ;src/main.c:848: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      0023D5 F8 14                 8372 	ldhl	sp,	#20
      0023D7 7E                    8373 	ld	a, (hl)
      0023D8 B7                    8374 	or	a, a
      0023D9 CArEAr25              8375 	jp	Z, 00132$
      0023DC F8 03                 8376 	ldhl	sp,#3
      0023DE 2A                    8377 	ld	a, (hl+)
      0023DF 5F                    8378 	ld	e, a
      0023E0 56                    8379 	ld	d, (hl)
      0023E1 1A                    8380 	ld	a, (de)
      0023E2 F5                    8381 	push	af
      0023E3 0A                    8382 	ld	a, (bc)
      0023E4 4F                    8383 	ld	c, a
      0023E5 F1                    8384 	pop	af
      0023E6 91                    8385 	sub	a, c
      0023E7 4F                    8386 	ld	c, a
                                   8387 ;src/main.c:361: if (value >= 0) return value;
      0023E8 CB 79                 8388 	bit	7, c
      0023EA 28 03                 8389 	jr	Z, 00175$
                                   8390 ;src/main.c:362: else return - value;
      0023EC AF                    8391 	xor	a, a
      0023ED 91                    8392 	sub	a, c
      0023EE 4F                    8393 	ld	c, a
                                   8394 ;src/main.c:848: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      0023EF                       8395 00175$:
      0023EF 59                    8396 	ld	e, c
      0023F0 3E 10                 8397 	ld	a,#0x10
      0023F2 57                    8398 	ld	d,a
      0023F3 91                    8399 	sub	a, c
      0023F4 CB 7B                 8400 	bit	7, e
      0023F6 28 07                 8401 	jr	Z, 00364$
      0023F8 CB 7A                 8402 	bit	7, d
      0023FA 20 08                 8403 	jr	NZ, 00365$
      0023FC BF                    8404 	cp	a, a
      0023FD 18 05                 8405 	jr	00365$
      0023FF                       8406 00364$:
      0023FF CB 7A                 8407 	bit	7, d
      002401 28 01                 8408 	jr	Z, 00365$
      002403 37                    8409 	scf
      002404                       8410 00365$:
      002404 DArEAr25              8411 	jp	C, 00132$
      002407                       8412 00121$:
                                   8413 ;src/main.c:850: set_sprite_tile(30+j, 0x7f);
      002407 F8 17                 8414 	ldhl	sp,	#23
      002409 7E                    8415 	ld	a, (hl)
      00240A C6 1E                 8416 	add	a, #0x1e
                                   8417 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00240C 6F                    8418 	ld	l, a
      00240D 01r00r00              8419 	ld	bc, #_shadow_OAM+0
                                   8420 ;	spillPairReg hl
                                   8421 ;	spillPairReg hl
      002410 26 00                 8422 	ld	h, #0x00
                                   8423 ;	spillPairReg hl
                                   8424 ;	spillPairReg hl
      002412 29                    8425 	add	hl, hl
      002413 29                    8426 	add	hl, hl
      002414 09                    8427 	add	hl, bc
      002415 23                    8428 	inc	hl
      002416 23                    8429 	inc	hl
      002417 36 7F                 8430 	ld	(hl), #0x7f
                                   8431 ;src/main.c:851: pptr->active = 0;
      002419 F8 15                 8432 	ldhl	sp,#21
      00241B 2A                    8433 	ld	a, (hl+)
      00241C 5F                    8434 	ld	e, a
      00241D 56                    8435 	ld	d, (hl)
      00241E 21 0A 00              8436 	ld	hl, #0x000a
      002421 19                    8437 	add	hl, de
      002422 4D                    8438 	ld	c, l
      002423 44                    8439 	ld	b, h
      002424 AF                    8440 	xor	a, a
      002425 02                    8441 	ld	(bc), a
                                   8442 ;src/main.c:853: if (pptr->type == 0x2c) { //missile
      002426 F8 15                 8443 	ldhl	sp,#21
      002428 2A                    8444 	ld	a, (hl+)
      002429 5F                    8445 	ld	e, a
      00242A 56                    8446 	ld	d, (hl)
      00242B 21 0C 00              8447 	ld	hl, #0x000c
      00242E 19                    8448 	add	hl, de
      00242F 4D                    8449 	ld	c, l
      002430 44                    8450 	ld	b, h
      002431 0A                    8451 	ld	a, (bc)
      002432 4F                    8452 	ld	c, a
                                   8453 ;src/main.c:858: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002433 F8 15                 8454 	ldhl	sp,#21
      002435 2A                    8455 	ld	a, (hl+)
      002436 5F                    8456 	ld	e, a
      002437 56                    8457 	ld	d, (hl)
      002438 21 08 00              8458 	ld	hl, #0x0008
      00243B 19                    8459 	add	hl, de
      00243C E5                    8460 	push	hl
      00243D 7D                    8461 	ld	a, l
      00243E F8 15                 8462 	ldhl	sp,	#21
      002440 77                    8463 	ld	(hl), a
      002441 E1                    8464 	pop	hl
      002442 7C                    8465 	ld	a, h
      002443 F8 14                 8466 	ldhl	sp,	#20
      002445 77                    8467 	ld	(hl), a
                                   8468 ;src/main.c:853: if (pptr->type == 0x2c) { //missile
      002446 79                    8469 	ld	a, c
      002447 D6 2C                 8470 	sub	a, #0x2c
      002449 C2r94r25              8471 	jp	NZ,00119$
                                   8472 ;src/main.c:858: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      00244C 2B                    8473 	dec	hl
      00244D 7E                    8474 	ld	a, (hl)
      00244E F8 0B                 8475 	ldhl	sp,	#11
      002450 77                    8476 	ld	(hl), a
      002451 F8 14                 8477 	ldhl	sp,	#20
      002453 7E                    8478 	ld	a, (hl)
      002454 F8 0C                 8479 	ldhl	sp,	#12
      002456 77                    8480 	ld	(hl), a
      002457 F8 18                 8481 	ldhl	sp,	#24
      002459 36 00                 8482 	ld	(hl), #0x00
      00245B                       8483 00186$:
      00245B 21r8Er0B              8484 	ld	hl, #_ENEMYCOUNT
      00245E 4E                    8485 	ld	c, (hl)
      00245F F8 18                 8486 	ldhl	sp,	#24
      002461 7E                    8487 	ld	a, (hl)
      002462 91                    8488 	sub	a, c
      002463 D2rE3r25              8489 	jp	NC, 00120$
                                   8490 ;src/main.c:859: int16_t dmgDropOff = ((i16abs(eptr->x - enemies[k].x) + i16abs(eptr->y - enemies[k].y))<<SPLASHDROPOFF);
      002466 D1                    8491 	pop	de
      002467 D5                    8492 	push	de
      002468 1A                    8493 	ld	a, (de)
      002469 F8 13                 8494 	ldhl	sp,	#19
      00246B 22                    8495 	ld	(hl+), a
      00246C 13                    8496 	inc	de
      00246D 1A                    8497 	ld	a, (de)
      00246E 77                    8498 	ld	(hl), a
      00246F F8 18                 8499 	ldhl	sp,	#24
      002471 4E                    8500 	ld	c, (hl)
      002472 06 00                 8501 	ld	b, #0x00
      002474 69                    8502 	ld	l, c
      002475 60                    8503 	ld	h, b
      002476 29                    8504 	add	hl, hl
      002477 29                    8505 	add	hl, hl
      002478 29                    8506 	add	hl, hl
      002479 09                    8507 	add	hl, bc
      00247A 29                    8508 	add	hl, hl
      00247B 01r5Ar00              8509 	ld	bc,#_enemies
      00247E 09                    8510 	add	hl,bc
      00247F E5                    8511 	push	hl
      002480 7D                    8512 	ld	a, l
      002481 F8 0F                 8513 	ldhl	sp,	#15
      002483 77                    8514 	ld	(hl), a
      002484 E1                    8515 	pop	hl
      002485 7C                    8516 	ld	a, h
      002486 F8 0E                 8517 	ldhl	sp,	#14
      002488 32                    8518 	ld	(hl-), a
      002489 2A                    8519 	ld	a, (hl+)
      00248A 5F                    8520 	ld	e, a
      00248B 56                    8521 	ld	d, (hl)
      00248C 1A                    8522 	ld	a, (de)
      00248D 4F                    8523 	ld	c, a
      00248E 13                    8524 	inc	de
      00248F 1A                    8525 	ld	a, (de)
      002490 47                    8526 	ld	b, a
      002491 F8 13                 8527 	ldhl	sp,#19
      002493 2A                    8528 	ld	a, (hl+)
      002494 5F                    8529 	ld	e, a
      002495 56                    8530 	ld	d, (hl)
      002496 7B                    8531 	ld	a, e
      002497 91                    8532 	sub	a, c
      002498 5F                    8533 	ld	e, a
      002499 7A                    8534 	ld	a, d
      00249A 98                    8535 	sbc	a, b
      00249B 4B                    8536 	ld	c, e
      00249C 47                    8537 	ld	b, a
                                   8538 ;	spillPairReg hl
                                   8539 ;	spillPairReg hl
      00249D 60                    8540 	ld	h, b
                                   8541 ;	spillPairReg hl
                                   8542 ;	spillPairReg hl
      00249E CB 7C                 8543 	bit	7, h
      0024A0 28 06                 8544 	jr	Z, 00180$
      0024A2 AF                    8545 	xor	a, a
      0024A3 91                    8546 	sub	a, c
      0024A4 4F                    8547 	ld	c, a
      0024A5 9F                    8548 	sbc	a, a
      0024A6 90                    8549 	sub	a, b
      0024A7 47                    8550 	ld	b, a
      0024A8                       8551 00180$:
      0024A8 F8 05                 8552 	ldhl	sp,#5
      0024AA 2A                    8553 	ld	a, (hl+)
      0024AB 5F                    8554 	ld	e, a
      0024AC 56                    8555 	ld	d, (hl)
      0024AD 1A                    8556 	ld	a, (de)
      0024AE F8 0F                 8557 	ldhl	sp,	#15
      0024B0 22                    8558 	ld	(hl+), a
      0024B1 13                    8559 	inc	de
      0024B2 1A                    8560 	ld	a, (de)
      0024B3 77                    8561 	ld	(hl), a
      0024B4 F8 0D                 8562 	ldhl	sp,	#13
      0024B6 2A                    8563 	ld	a, (hl+)
      0024B7 66                    8564 	ld	h, (hl)
                                   8565 ;	spillPairReg hl
                                   8566 ;	spillPairReg hl
      0024B8 6F                    8567 	ld	l, a
                                   8568 ;	spillPairReg hl
                                   8569 ;	spillPairReg hl
      0024B9 23                    8570 	inc	hl
      0024BA 23                    8571 	inc	hl
      0024BB 5D                    8572 	ld	e, l
      0024BC 54                    8573 	ld	d, h
      0024BD 1A                    8574 	ld	a, (de)
      0024BE F8 11                 8575 	ldhl	sp,	#17
      0024C0 22                    8576 	ld	(hl+), a
      0024C1 13                    8577 	inc	de
      0024C2 1A                    8578 	ld	a, (de)
      0024C3 77                    8579 	ld	(hl), a
      0024C4 F8 0F                 8580 	ldhl	sp,#15
      0024C6 2A                    8581 	ld	a, (hl+)
      0024C7 5F                    8582 	ld	e, a
      0024C8 2A                    8583 	ld	a, (hl+)
      0024C9 57                    8584 	ld	d, a
      0024CA 2A                    8585 	ld	a,	(hl+)
      0024CB 66                    8586 	ld	h, (hl)
      0024CC 6F                    8587 	ld	l, a
      0024CD 7B                    8588 	ld	a, e
      0024CE 95                    8589 	sub	a, l
      0024CF 5F                    8590 	ld	e, a
      0024D0 7A                    8591 	ld	a, d
      0024D1 9C                    8592 	sbc	a, h
      0024D2 F8 14                 8593 	ldhl	sp,	#20
      0024D4 32                    8594 	ld	(hl-), a
      0024D5 73                    8595 	ld	(hl), e
      0024D6 3A                    8596 	ld	a, (hl-)
      0024D7 2B                    8597 	dec	hl
      0024D8 77                    8598 	ld	(hl), a
      0024D9 F8 14                 8599 	ldhl	sp,	#20
      0024DB 3A                    8600 	ld	a, (hl-)
      0024DC 2B                    8601 	dec	hl
      0024DD 77                    8602 	ld	(hl), a
      0024DE CB 7E                 8603 	bit	7, (hl)
      0024E0 20 05                 8604 	jr	NZ, 00182$
      0024E2 23                    8605 	inc	hl
      0024E3 2A                    8606 	ld	a, (hl+)
      0024E4 5E                    8607 	ld	e, (hl)
      0024E5 18 13                 8608 	jr	00184$
      0024E7                       8609 00182$:
      0024E7 11 00 00              8610 	ld	de, #0x0000
      0024EA F8 13                 8611 	ldhl	sp,	#19
      0024EC 2A                    8612 	ld	a,	(hl+)
      0024ED 66                    8613 	ld	h, (hl)
      0024EE 6F                    8614 	ld	l, a
      0024EF 7B                    8615 	ld	a, e
      0024F0 95                    8616 	sub	a, l
      0024F1 5F                    8617 	ld	e, a
      0024F2 7A                    8618 	ld	a, d
      0024F3 9C                    8619 	sbc	a, h
      0024F4 F8 12                 8620 	ldhl	sp,	#18
      0024F6 32                    8621 	ld	(hl-), a
      0024F7 73                    8622 	ld	(hl), e
      0024F8 2A                    8623 	ld	a, (hl+)
      0024F9 5E                    8624 	ld	e, (hl)
      0024FA                       8625 00184$:
      0024FA 81                    8626 	add	a, c
      0024FB 4F                    8627 	ld	c, a
      0024FC 7B                    8628 	ld	a, e
      0024FD 88                    8629 	adc	a, b
      0024FE 47                    8630 	ld	b, a
      0024FF 21rA4r0B              8631 	ld	hl, #_SPLASHDROPOFF
      002502 5E                    8632 	ld	e, (hl)
      002503 1C                    8633 	inc	e
      002504 18 04                 8634 	jr	00369$
      002506                       8635 00368$:
      002506 CB 21                 8636 	sla	c
      002508 CB 10                 8637 	rl	b
      00250A                       8638 00369$:
      00250A 1D                    8639 	dec	e
      00250B 20 F9                 8640 	jr	NZ,00368$
                                   8641 ;src/main.c:860: int16_t dmg = pptr->damage - dmgDropOff;
      00250D F8 0B                 8642 	ldhl	sp,#11
      00250F 2A                    8643 	ld	a, (hl+)
      002510 5F                    8644 	ld	e, a
      002511 56                    8645 	ld	d, (hl)
      002512 1A                    8646 	ld	a, (de)
      002513 6F                    8647 	ld	l, a
                                   8648 ;	spillPairReg hl
                                   8649 ;	spillPairReg hl
      002514 13                    8650 	inc	de
      002515 1A                    8651 	ld	a, (de)
      002516 67                    8652 	ld	h, a
                                   8653 ;	spillPairReg hl
                                   8654 ;	spillPairReg hl
      002517 7D                    8655 	ld	a, l
      002518 91                    8656 	sub	a, c
      002519 4F                    8657 	ld	c, a
      00251A 7C                    8658 	ld	a, h
      00251B 98                    8659 	sbc	a, b
      00251C F8 11                 8660 	ldhl	sp,	#17
      00251E 71                    8661 	ld	(hl), c
      00251F 23                    8662 	inc	hl
                                   8663 ;src/main.c:861: if (dmg > 0) {
      002520 32                    8664 	ld	(hl-), a
      002521 2A                    8665 	ld	a, (hl+)
      002522 4F                    8666 	ld	c, a
      002523 46                    8667 	ld	b, (hl)
      002524 58                    8668 	ld	e, b
      002525 AF                    8669 	xor	a, a
      002526 57                    8670 	ld	d, a
      002527 B9                    8671 	cp	a, c
      002528 98                    8672 	sbc	a, b
      002529 CB 7B                 8673 	bit	7, e
      00252B 28 07                 8674 	jr	Z, 00370$
      00252D CB 7A                 8675 	bit	7, d
      00252F 20 08                 8676 	jr	NZ, 00371$
      002531 BF                    8677 	cp	a, a
      002532 18 05                 8678 	jr	00371$
      002534                       8679 00370$:
      002534 CB 7A                 8680 	bit	7, d
      002536 28 01                 8681 	jr	Z, 00371$
      002538 37                    8682 	scf
      002539                       8683 00371$:
      002539 30 53                 8684 	jr	NC, 00187$
                                   8685 ;src/main.c:862: enemies[k].hp -= dmg;
      00253B F8 0D                 8686 	ldhl	sp,#13
      00253D 2A                    8687 	ld	a, (hl+)
      00253E 5F                    8688 	ld	e, a
      00253F 56                    8689 	ld	d, (hl)
      002540 21 10 00              8690 	ld	hl, #0x0010
      002543 19                    8691 	add	hl, de
      002544 E5                    8692 	push	hl
      002545 7D                    8693 	ld	a, l
      002546 F8 15                 8694 	ldhl	sp,	#21
      002548 77                    8695 	ld	(hl), a
      002549 E1                    8696 	pop	hl
      00254A 7C                    8697 	ld	a, h
      00254B F8 14                 8698 	ldhl	sp,	#20
      00254D 32                    8699 	ld	(hl-), a
      00254E 2A                    8700 	ld	a, (hl+)
      00254F 5F                    8701 	ld	e, a
      002550 56                    8702 	ld	d, (hl)
      002551 1A                    8703 	ld	a, (de)
      002552 F8 0F                 8704 	ldhl	sp,	#15
      002554 22                    8705 	ld	(hl+), a
      002555 13                    8706 	inc	de
      002556 1A                    8707 	ld	a, (de)
      002557 32                    8708 	ld	(hl-), a
      002558 2A                    8709 	ld	a, (hl+)
      002559 5F                    8710 	ld	e, a
      00255A 2A                    8711 	ld	a, (hl+)
      00255B 57                    8712 	ld	d, a
      00255C 2A                    8713 	ld	a,	(hl+)
      00255D 66                    8714 	ld	h, (hl)
      00255E 6F                    8715 	ld	l, a
      00255F 7B                    8716 	ld	a, e
      002560 95                    8717 	sub	a, l
      002561 5F                    8718 	ld	e, a
      002562 7A                    8719 	ld	a, d
      002563 9C                    8720 	sbc	a, h
      002564 47                    8721 	ld	b, a
      002565 4B                    8722 	ld	c, e
      002566 F8 13                 8723 	ldhl	sp,	#19
      002568 2A                    8724 	ld	a,	(hl+)
      002569 66                    8725 	ld	h, (hl)
      00256A 6F                    8726 	ld	l, a
      00256B 79                    8727 	ld	a, c
      00256C 22                    8728 	ld	(hl+), a
      00256D 70                    8729 	ld	(hl), b
                                   8730 ;src/main.c:863: if (enemies[k].hp <= 0) {
      00256E 58                    8731 	ld	e, b
      00256F AF                    8732 	xor	a, a
      002570 57                    8733 	ld	d, a
      002571 B9                    8734 	cp	a, c
      002572 98                    8735 	sbc	a, b
      002573 CB 7B                 8736 	bit	7, e
      002575 28 07                 8737 	jr	Z, 00372$
      002577 CB 7A                 8738 	bit	7, d
      002579 20 08                 8739 	jr	NZ, 00373$
      00257B BF                    8740 	cp	a, a
      00257C 18 05                 8741 	jr	00373$
      00257E                       8742 00372$:
      00257E CB 7A                 8743 	bit	7, d
      002580 28 01                 8744 	jr	Z, 00373$
      002582 37                    8745 	scf
      002583                       8746 00373$:
      002583 38 09                 8747 	jr	C, 00187$
                                   8748 ;src/main.c:864: killEnemy(k);
      002585 F8 18                 8749 	ldhl	sp,	#24
      002587 7E                    8750 	ld	a, (hl)
      002588 F5                    8751 	push	af
      002589 33                    8752 	inc	sp
      00258A CDrC2r1F              8753 	call	_killEnemy
      00258D 33                    8754 	inc	sp
      00258E                       8755 00187$:
                                   8756 ;src/main.c:858: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      00258E F8 18                 8757 	ldhl	sp,	#24
      002590 34                    8758 	inc	(hl)
      002591 C3r5Br24              8759 	jp	00186$
      002594                       8760 00119$:
                                   8761 ;src/main.c:872: eptr->hp -= pptr->damage;
      002594 D1                    8762 	pop	de
      002595 D5                    8763 	push	de
      002596 21 10 00              8764 	ld	hl, #0x0010
      002599 19                    8765 	add	hl, de
      00259A E5                    8766 	push	hl
      00259B 7D                    8767 	ld	a, l
      00259C F8 13                 8768 	ldhl	sp,	#19
      00259E 77                    8769 	ld	(hl), a
      00259F E1                    8770 	pop	hl
      0025A0 7C                    8771 	ld	a, h
      0025A1 F8 12                 8772 	ldhl	sp,	#18
      0025A3 32                    8773 	ld	(hl-), a
      0025A4 2A                    8774 	ld	a, (hl+)
      0025A5 5F                    8775 	ld	e, a
      0025A6 2A                    8776 	ld	a, (hl+)
      0025A7 57                    8777 	ld	d, a
      0025A8 1A                    8778 	ld	a, (de)
      0025A9 4F                    8779 	ld	c, a
      0025AA 13                    8780 	inc	de
      0025AB 1A                    8781 	ld	a, (de)
      0025AC 47                    8782 	ld	b, a
      0025AD 2A                    8783 	ld	a, (hl+)
      0025AE 5F                    8784 	ld	e, a
      0025AF 56                    8785 	ld	d, (hl)
      0025B0 1A                    8786 	ld	a, (de)
      0025B1 6F                    8787 	ld	l, a
                                   8788 ;	spillPairReg hl
                                   8789 ;	spillPairReg hl
      0025B2 13                    8790 	inc	de
      0025B3 1A                    8791 	ld	a, (de)
      0025B4 67                    8792 	ld	h, a
                                   8793 ;	spillPairReg hl
                                   8794 ;	spillPairReg hl
      0025B5 79                    8795 	ld	a, c
      0025B6 95                    8796 	sub	a, l
      0025B7 4F                    8797 	ld	c, a
      0025B8 78                    8798 	ld	a, b
      0025B9 9C                    8799 	sbc	a, h
      0025BA 47                    8800 	ld	b, a
      0025BB F8 11                 8801 	ldhl	sp,	#17
      0025BD 2A                    8802 	ld	a,	(hl+)
      0025BE 66                    8803 	ld	h, (hl)
      0025BF 6F                    8804 	ld	l, a
      0025C0 79                    8805 	ld	a, c
      0025C1 22                    8806 	ld	(hl+), a
      0025C2 70                    8807 	ld	(hl), b
                                   8808 ;src/main.c:874: if (eptr->hp <= 0) {
      0025C3 58                    8809 	ld	e, b
      0025C4 AF                    8810 	xor	a, a
      0025C5 57                    8811 	ld	d, a
      0025C6 B9                    8812 	cp	a, c
      0025C7 98                    8813 	sbc	a, b
      0025C8 CB 7B                 8814 	bit	7, e
      0025CA 28 07                 8815 	jr	Z, 00374$
      0025CC CB 7A                 8816 	bit	7, d
      0025CE 20 08                 8817 	jr	NZ, 00375$
      0025D0 BF                    8818 	cp	a, a
      0025D1 18 05                 8819 	jr	00375$
      0025D3                       8820 00374$:
      0025D3 CB 7A                 8821 	bit	7, d
      0025D5 28 01                 8822 	jr	Z, 00375$
      0025D7 37                    8823 	scf
      0025D8                       8824 00375$:
      0025D8 38 09                 8825 	jr	C, 00120$
                                   8826 ;src/main.c:876: killEnemy(i);
      0025DA F8 02                 8827 	ldhl	sp,	#2
      0025DC 7E                    8828 	ld	a, (hl)
      0025DD F5                    8829 	push	af
      0025DE 33                    8830 	inc	sp
      0025DF CDrC2r1F              8831 	call	_killEnemy
      0025E2 33                    8832 	inc	sp
      0025E3                       8833 00120$:
                                   8834 ;src/main.c:881: initEnemies(0);
      0025E3 AF                    8835 	xor	a, a
      0025E4 F5                    8836 	push	af
      0025E5 33                    8837 	inc	sp
      0025E6 CDrFBr0F              8838 	call	_initEnemies
      0025E9 33                    8839 	inc	sp
      0025EA                       8840 00132$:
                                   8841 ;src/main.c:888: j++;
      0025EA F8 17                 8842 	ldhl	sp,	#23
      0025EC 34                    8843 	inc	(hl)
                                   8844 ;src/main.c:889: pptr++;
      0025ED 2B                    8845 	dec	hl
      0025EE 2B                    8846 	dec	hl
      0025EF 2A                    8847 	ld	a, (hl+)
      0025F0 5F                    8848 	ld	e, a
      0025F1 56                    8849 	ld	d, (hl)
      0025F2 21 0D 00              8850 	ld	hl, #0x000d
      0025F5 19                    8851 	add	hl, de
      0025F6 E5                    8852 	push	hl
      0025F7 7D                    8853 	ld	a, l
      0025F8 F8 17                 8854 	ldhl	sp,	#23
      0025FA 77                    8855 	ld	(hl), a
      0025FB E1                    8856 	pop	hl
      0025FC 7C                    8857 	ld	a, h
      0025FD F8 16                 8858 	ldhl	sp,	#22
      0025FF 77                    8859 	ld	(hl), a
      002600 C3rFEr22              8860 	jp	00133$
      002603                       8861 00137$:
                                   8862 ;src/main.c:893: if (enemyCollisionCount == 0) {
      002603 FArA5r00              8863 	ld	a, (#_enemyCollisionCount)
      002606 B7                    8864 	or	a, a
      002607 20 09                 8865 	jr	NZ, 00140$
                                   8866 ;src/main.c:894: enemyCollisionCount = ENEMYCOUNT - 1;
      002609 FAr8Er0B              8867 	ld	a, (#_ENEMYCOUNT)
      00260C 3D                    8868 	dec	a
      00260D EArA5r00              8869 	ld	(#_enemyCollisionCount),a
      002610 18 04                 8870 	jr	00188$
      002612                       8871 00140$:
                                   8872 ;src/main.c:897: enemyCollisionCount--;
      002612 21rA5r00              8873 	ld	hl, #_enemyCollisionCount
      002615 35                    8874 	dec	(hl)
      002616                       8875 00188$:
                                   8876 ;src/main.c:902: }
      002616 E8 19                 8877 	add	sp, #25
      002618 C9                    8878 	ret
                                   8879 ;src/main.c:905: void setGunIcon() {
                                   8880 ;	---------------------------------
                                   8881 ; Function setGunIcon
                                   8882 ; ---------------------------------
      002619                       8883 _setGunIcon::
                                   8884 ;src/main.c:907: if (currentGun == 0) {
      002619 FArA7r00              8885 	ld	a, (#_currentGun)
      00261C B7                    8886 	or	a, a
      00261D 20 1B                 8887 	jr	NZ, 00102$
                                   8888 ;src/main.c:908: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      00261F 01rAEr00              8889 	ld	bc, #_gunMap+0
      002622 79                    8890 	ld	a, c
      002623 21rA6r00              8891 	ld	hl, #_gunLevel
      002626 86                    8892 	add	a, (hl)
      002627 4F                    8893 	ld	c, a
      002628 30 01                 8894 	jr	NC, 00111$
      00262A 04                    8895 	inc	b
      00262B                       8896 00111$:
      00262B C5                    8897 	push	bc
      00262C 21 01 01              8898 	ld	hl, #0x101
      00262F E5                    8899 	push	hl
      002630 21 0F 00              8900 	ld	hl, #0x0f
      002633 E5                    8901 	push	hl
      002634 CDr00r00              8902 	call	_set_win_tiles
      002637 E8 06                 8903 	add	sp, #6
      002639 C9                    8904 	ret
      00263A                       8905 00102$:
                                   8906 ;src/main.c:911: set_win_tiles(15, 0,1,1,gunMap+2);
      00263A 11rB0r00              8907 	ld	de, #(_gunMap + 2)
      00263D D5                    8908 	push	de
      00263E 21 01 01              8909 	ld	hl, #0x101
      002641 E5                    8910 	push	hl
      002642 21 0F 00              8911 	ld	hl, #0x0f
      002645 E5                    8912 	push	hl
      002646 CDr00r00              8913 	call	_set_win_tiles
      002649 E8 06                 8914 	add	sp, #6
                                   8915 ;src/main.c:913: }
      00264B C9                    8916 	ret
                                   8917 ;src/main.c:923: void fire() {
                                   8918 ;	---------------------------------
                                   8919 ; Function fire
                                   8920 ; ---------------------------------
      00264C                       8921 _fire::
      00264C E8 FB                 8922 	add	sp, #-5
                                   8923 ;src/main.c:925: oldestProjectile += 1;
      00264E 21r91r00              8924 	ld	hl, #_oldestProjectile
      002651 34                    8925 	inc	(hl)
      002652 7E                    8926 	ld	a, (hl)
                                   8927 ;src/main.c:926: if (oldestProjectile >= PROJECTILECOUNT) {
      002653 21r9Fr0B              8928 	ld	hl, #_PROJECTILECOUNT
      002656 4E                    8929 	ld	c, (hl)
      002657 21r91r00              8930 	ld	hl, #_oldestProjectile
      00265A 7E                    8931 	ld	a, (hl)
      00265B 91                    8932 	sub	a, c
      00265C 38 02                 8933 	jr	C, 00102$
                                   8934 ;src/main.c:927: oldestProjectile = 0;
      00265E 36 00                 8935 	ld	(hl), #0x00
      002660                       8936 00102$:
                                   8937 ;src/main.c:930: if (currentGun == 0) {
      002660 FArA7r00              8938 	ld	a, (#_currentGun)
      002663 B7                    8939 	or	a, a
      002664 20 3B                 8940 	jr	NZ, 00107$
                                   8941 ;src/main.c:932: projectiles[oldestProjectile] = singleGun;
      002666 21r91r00              8942 	ld	hl, #_oldestProjectile
      002669 4E                    8943 	ld	c, (hl)
      00266A 06 00                 8944 	ld	b, #0x00
      00266C 69                    8945 	ld	l, c
      00266D 60                    8946 	ld	h, b
      00266E 29                    8947 	add	hl, hl
      00266F 09                    8948 	add	hl, bc
      002670 29                    8949 	add	hl, hl
      002671 29                    8950 	add	hl, hl
      002672 09                    8951 	add	hl, bc
      002673 4D                    8952 	ld	c, l
      002674 44                    8953 	ld	b, h
                                   8954 ;src/main.c:931: if (gunLevel == 0) {
      002675 FArA6r00              8955 	ld	a, (#_gunLevel)
      002678 B7                    8956 	or	a, a
      002679 20 14                 8957 	jr	NZ, 00104$
                                   8958 ;src/main.c:932: projectiles[oldestProjectile] = singleGun;
      00267B 11r6Ar00              8959 	ld	de, #_singleGun+0
      00267E 21rB4r00              8960 	ld	hl, #_projectiles
      002681 09                    8961 	add	hl, bc
      002682 01 0D 00              8962 	ld	bc, #0x000d
      002685 C5                    8963 	push	bc
      002686 D5                    8964 	push	de
      002687 E5                    8965 	push	hl
      002688 CDr00r00              8966 	call	___memcpy
      00268B E8 06                 8967 	add	sp, #6
      00268D 18 12                 8968 	jr	00107$
      00268F                       8969 00104$:
                                   8970 ;src/main.c:935: projectiles[oldestProjectile] = doubleGun;
      00268F 11r77r00              8971 	ld	de, #_doubleGun+0
      002692 21rB4r00              8972 	ld	hl, #_projectiles
      002695 09                    8973 	add	hl, bc
      002696 01 0D 00              8974 	ld	bc, #0x000d
      002699 C5                    8975 	push	bc
      00269A D5                    8976 	push	de
      00269B E5                    8977 	push	hl
      00269C CDr00r00              8978 	call	___memcpy
      00269F E8 06                 8979 	add	sp, #6
      0026A1                       8980 00107$:
                                   8981 ;src/main.c:938: if (currentGun == 1) {
      0026A1 FArA7r00              8982 	ld	a, (#_currentGun)
      0026A4 3D                    8983 	dec	a
      0026A5 20 46                 8984 	jr	NZ, 00113$
                                   8985 ;src/main.c:939: if (missiles == 0) {
      0026A7 FArA8r00              8986 	ld	a, (#_missiles)
      0026AA B7                    8987 	or	a, a
      0026AB 20 0B                 8988 	jr	NZ, 00109$
                                   8989 ;src/main.c:940: currentGun = 0;
      0026AD 21rA7r00              8990 	ld	hl, #_currentGun
      0026B0 36 00                 8991 	ld	(hl), #0x00
                                   8992 ;src/main.c:941: setGunIcon();
      0026B2 CDr19r26              8993 	call	_setGunIcon
                                   8994 ;src/main.c:942: return;
      0026B5 C3rF2r2B              8995 	jp	00154$
      0026B8                       8996 00109$:
                                   8997 ;src/main.c:945: projectiles[oldestProjectile] = missile;
      0026B8 21r91r00              8998 	ld	hl, #_oldestProjectile
      0026BB 4E                    8999 	ld	c, (hl)
      0026BC 06 00                 9000 	ld	b, #0x00
      0026BE 69                    9001 	ld	l, c
      0026BF 60                    9002 	ld	h, b
      0026C0 29                    9003 	add	hl, hl
      0026C1 09                    9004 	add	hl, bc
      0026C2 29                    9005 	add	hl, hl
      0026C3 29                    9006 	add	hl, hl
      0026C4 09                    9007 	add	hl, bc
      0026C5 01rB4r00              9008 	ld	bc,#_projectiles
      0026C8 09                    9009 	add	hl,bc
      0026C9 11 0D 00              9010 	ld	de, #0x000d
      0026CC D5                    9011 	push	de
      0026CD 11r84r00              9012 	ld	de, #_missile
      0026D0 D5                    9013 	push	de
      0026D1 E5                    9014 	push	hl
      0026D2 CDr00r00              9015 	call	___memcpy
      0026D5 E8 06                 9016 	add	sp, #6
                                   9017 ;src/main.c:946: updateMissileCount(-1);
      0026D7 3E FF                 9018 	ld	a, #0xff
      0026D9 F5                    9019 	push	af
      0026DA 33                    9020 	inc	sp
      0026DB CDrE1r0C              9021 	call	_updateMissileCount
      0026DE 33                    9022 	inc	sp
                                   9023 ;src/main.c:948: if (missiles == 0) {
      0026DF FArA8r00              9024 	ld	a, (#_missiles)
      0026E2 B7                    9025 	or	a, a
      0026E3 20 08                 9026 	jr	NZ, 00113$
                                   9027 ;src/main.c:949: currentGun = 0;
      0026E5 21rA7r00              9028 	ld	hl, #_currentGun
      0026E8 36 00                 9029 	ld	(hl), #0x00
                                   9030 ;src/main.c:950: setGunIcon();
      0026EA CDr19r26              9031 	call	_setGunIcon
      0026ED                       9032 00113$:
                                   9033 ;src/main.c:953: projectiles[oldestProjectile].x = playerDrawX;
      0026ED 21r91r00              9034 	ld	hl, #_oldestProjectile
      0026F0 4E                    9035 	ld	c, (hl)
      0026F1 06 00                 9036 	ld	b, #0x00
      0026F3 69                    9037 	ld	l, c
      0026F4 60                    9038 	ld	h, b
      0026F5 29                    9039 	add	hl, hl
      0026F6 09                    9040 	add	hl, bc
      0026F7 29                    9041 	add	hl, hl
      0026F8 29                    9042 	add	hl, hl
      0026F9 09                    9043 	add	hl, bc
      0026FA 01rB4r00              9044 	ld	bc,#_projectiles
      0026FD 09                    9045 	add	hl,bc
      0026FE E5                    9046 	push	hl
      0026FF FAr9Br00              9047 	ld	a, (#_playerDrawX)
      002702 E1                    9048 	pop	hl
      002703 0E 00                 9049 	ld	c, #0x00
      002705 22                    9050 	ld	(hl+), a
      002706 71                    9051 	ld	(hl), c
                                   9052 ;src/main.c:954: projectiles[oldestProjectile].y = playerDrawY;
      002707 21r91r00              9053 	ld	hl, #_oldestProjectile
      00270A 4E                    9054 	ld	c, (hl)
      00270B 06 00                 9055 	ld	b, #0x00
      00270D 69                    9056 	ld	l, c
      00270E 60                    9057 	ld	h, b
      00270F 29                    9058 	add	hl, hl
      002710 09                    9059 	add	hl, bc
      002711 29                    9060 	add	hl, hl
      002712 29                    9061 	add	hl, hl
      002713 09                    9062 	add	hl, bc
      002714 01rB4r00              9063 	ld	bc,#_projectiles
      002717 09                    9064 	add	hl,bc
      002718 23                    9065 	inc	hl
      002719 23                    9066 	inc	hl
      00271A E5                    9067 	push	hl
      00271B FAr9Cr00              9068 	ld	a, (#_playerDrawY)
      00271E E1                    9069 	pop	hl
      00271F 0E 00                 9070 	ld	c, #0x00
      002721 22                    9071 	ld	(hl+), a
      002722 71                    9072 	ld	(hl), c
                                   9073 ;src/main.c:955: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      002723 21r91r00              9074 	ld	hl, #_oldestProjectile
      002726 4E                    9075 	ld	c, (hl)
      002727 06 00                 9076 	ld	b, #0x00
      002729 69                    9077 	ld	l, c
      00272A 60                    9078 	ld	h, b
      00272B 29                    9079 	add	hl, hl
      00272C 09                    9080 	add	hl, bc
      00272D 29                    9081 	add	hl, hl
      00272E 29                    9082 	add	hl, hl
      00272F 09                    9083 	add	hl, bc
      002730 01rB4r00              9084 	ld	bc,#_projectiles
      002733 09                    9085 	add	hl,bc
      002734 5D                    9086 	ld	e, l
      002735 54                    9087 	ld	d, h
      002736 21 05 00              9088 	ld	hl, #0x0005
      002739 19                    9089 	add	hl, de
      00273A 4D                    9090 	ld	c, l
      00273B 44                    9091 	ld	b, h
      00273C 21 07 00              9092 	ld	hl, #0x0007
      00273F 19                    9093 	add	hl, de
      002740 7E                    9094 	ld	a, (hl)
      002741 C5                    9095 	push	bc
      002742 F5                    9096 	push	af
      002743 33                    9097 	inc	sp
      002744 FAr93r00              9098 	ld	a, (#_xDir)
      002747 F5                    9099 	push	af
      002748 33                    9100 	inc	sp
      002749 CDr00r00              9101 	call	__muluschar
      00274C E1                    9102 	pop	hl
      00274D 7B                    9103 	ld	a, e
      00274E C1                    9104 	pop	bc
      00274F 02                    9105 	ld	(bc), a
                                   9106 ;src/main.c:956: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      002750 21r91r00              9107 	ld	hl, #_oldestProjectile
      002753 4E                    9108 	ld	c, (hl)
      002754 06 00                 9109 	ld	b, #0x00
      002756 69                    9110 	ld	l, c
      002757 60                    9111 	ld	h, b
      002758 29                    9112 	add	hl, hl
      002759 09                    9113 	add	hl, bc
      00275A 29                    9114 	add	hl, hl
      00275B 29                    9115 	add	hl, hl
      00275C 09                    9116 	add	hl, bc
      00275D 01rB4r00              9117 	ld	bc,#_projectiles
      002760 09                    9118 	add	hl,bc
      002761 5D                    9119 	ld	e, l
      002762 54                    9120 	ld	d, h
      002763 21 06 00              9121 	ld	hl, #0x0006
      002766 19                    9122 	add	hl, de
      002767 4D                    9123 	ld	c, l
      002768 44                    9124 	ld	b, h
      002769 21 07 00              9125 	ld	hl, #0x0007
      00276C 19                    9126 	add	hl, de
      00276D 7E                    9127 	ld	a, (hl)
      00276E C5                    9128 	push	bc
      00276F F5                    9129 	push	af
      002770 33                    9130 	inc	sp
      002771 FAr94r00              9131 	ld	a, (#_yDir)
      002774 F5                    9132 	push	af
      002775 33                    9133 	inc	sp
      002776 CDr00r00              9134 	call	__muluschar
      002779 E1                    9135 	pop	hl
      00277A 7B                    9136 	ld	a, e
      00277B C1                    9137 	pop	bc
      00277C 02                    9138 	ld	(bc), a
                                   9139 ;src/main.c:925: oldestProjectile += 1;
      00277D FAr91r00              9140 	ld	a, (#_oldestProjectile)
      002780 F8 04                 9141 	ldhl	sp,	#4
      002782 77                    9142 	ld	(hl), a
                                   9143 ;src/main.c:932: projectiles[oldestProjectile] = singleGun;
      002783 21r91r00              9144 	ld	hl, #_oldestProjectile
      002786 4E                    9145 	ld	c, (hl)
      002787 06 00                 9146 	ld	b, #0x00
      002789 69                    9147 	ld	l, c
      00278A 60                    9148 	ld	h, b
      00278B 29                    9149 	add	hl, hl
      00278C 09                    9150 	add	hl, bc
      00278D 29                    9151 	add	hl, hl
      00278E 29                    9152 	add	hl, hl
      00278F 09                    9153 	add	hl, bc
                                   9154 ;src/main.c:961: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002790 01rB4r00              9155 	ld	bc,#_projectiles
      002793 09                    9156 	add	hl,bc
      002794 4D                    9157 	ld	c, l
      002795 44                    9158 	ld	b, h
      002796 F8 04                 9159 	ldhl	sp,	#4
      002798 3A                    9160 	ld	a, (hl-)
      002799 C6 1E                 9161 	add	a, #0x1e
      00279B 77                    9162 	ld	(hl), a
      00279C 21 0C 00              9163 	ld	hl, #0x000c
      00279F 09                    9164 	add	hl, bc
      0027A0 7E                    9165 	ld	a, (hl)
      0027A1 F8 04                 9166 	ldhl	sp,	#4
      0027A3 77                    9167 	ld	(hl), a
                                   9168 ;src/main.c:960: if (yDir != 0 && xDir == 0) {
      0027A4 FAr94r00              9169 	ld	a, (#_yDir)
      0027A7 B7                    9170 	or	a, a
      0027A8 28 71                 9171 	jr	Z, 00140$
      0027AA FAr93r00              9172 	ld	a, (#_xDir)
      0027AD B7                    9173 	or	a, a
      0027AE 20 6B                 9174 	jr	NZ, 00140$
                                   9175 ;src/main.c:961: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0027B0 F8 04                 9176 	ldhl	sp,	#4
      0027B2 3A                    9177 	ld	a, (hl-)
      0027B3 4F                    9178 	ld	c, a
                                   9179 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0027B4 6E                    9180 	ld	l, (hl)
                                   9181 ;	spillPairReg hl
                                   9182 ;	spillPairReg hl
      0027B5 26 00                 9183 	ld	h, #0x00
                                   9184 ;	spillPairReg hl
                                   9185 ;	spillPairReg hl
      0027B7 29                    9186 	add	hl, hl
      0027B8 29                    9187 	add	hl, hl
      0027B9 11r00r00              9188 	ld	de, #_shadow_OAM
      0027BC 19                    9189 	add	hl, de
      0027BD 23                    9190 	inc	hl
      0027BE 23                    9191 	inc	hl
      0027BF 71                    9192 	ld	(hl), c
                                   9193 ;src/main.c:925: oldestProjectile += 1;
      0027C0 FAr91r00              9194 	ld	a, (#_oldestProjectile)
                                   9195 ;src/main.c:961: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0027C3 C6 1E                 9196 	add	a, #0x1e
      0027C5 4F                    9197 	ld	c, a
                                   9198 ;src/main.c:962: if (yDir == 1) {
      0027C6 FAr94r00              9199 	ld	a, (#_yDir)
                                   9200 ;src/main.c:963: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   9201 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0027C9 3D                    9202 	dec	a
      0027CA 20 27                 9203 	jr	NZ, 00115$
      0027CC 67                    9204 	ld	h,a
                                   9205 ;	spillPairReg hl
                                   9206 ;	spillPairReg hl
      0027CD 69                    9207 	ld	l, c
      0027CE 29                    9208 	add	hl, hl
      0027CF 29                    9209 	add	hl, hl
      0027D0 11r00r00              9210 	ld	de, #_shadow_OAM
      0027D3 19                    9211 	add	hl, de
      0027D4 23                    9212 	inc	hl
      0027D5 23                    9213 	inc	hl
      0027D6 23                    9214 	inc	hl
      0027D7 36 40                 9215 	ld	(hl), #0x40
                                   9216 ;src/main.c:964: projectiles[oldestProjectile].offset = 4;
      0027D9 21r91r00              9217 	ld	hl, #_oldestProjectile
      0027DC 4E                    9218 	ld	c, (hl)
      0027DD 06 00                 9219 	ld	b, #0x00
      0027DF 69                    9220 	ld	l, c
      0027E0 60                    9221 	ld	h, b
      0027E1 29                    9222 	add	hl, hl
      0027E2 09                    9223 	add	hl, bc
      0027E3 29                    9224 	add	hl, hl
      0027E4 29                    9225 	add	hl, hl
      0027E5 09                    9226 	add	hl, bc
      0027E6 01rB4r00              9227 	ld	bc,#_projectiles
      0027E9 09                    9228 	add	hl,bc
      0027EA 01 04 00              9229 	ld	bc, #0x0004
      0027ED 09                    9230 	add	hl, bc
      0027EE 36 04                 9231 	ld	(hl), #0x04
      0027F0 C3rCCr2B              9232 	jp	00141$
      0027F3                       9233 00115$:
                                   9234 ;src/main.c:967: set_sprite_prop(30+oldestProjectile, 0); 
                                   9235 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0027F3 26 00                 9236 	ld	h, #0x00
                                   9237 ;	spillPairReg hl
                                   9238 ;	spillPairReg hl
      0027F5 69                    9239 	ld	l, c
      0027F6 29                    9240 	add	hl, hl
      0027F7 29                    9241 	add	hl, hl
      0027F8 11r00r00              9242 	ld	de, #_shadow_OAM
      0027FB 19                    9243 	add	hl, de
      0027FC 23                    9244 	inc	hl
      0027FD 23                    9245 	inc	hl
      0027FE 23                    9246 	inc	hl
      0027FF 36 00                 9247 	ld	(hl), #0x00
                                   9248 ;src/main.c:968: projectiles[oldestProjectile].offset = 12;
      002801 21r91r00              9249 	ld	hl, #_oldestProjectile
      002804 4E                    9250 	ld	c, (hl)
      002805 06 00                 9251 	ld	b, #0x00
      002807 69                    9252 	ld	l, c
      002808 60                    9253 	ld	h, b
      002809 29                    9254 	add	hl, hl
      00280A 09                    9255 	add	hl, bc
      00280B 29                    9256 	add	hl, hl
      00280C 29                    9257 	add	hl, hl
      00280D 09                    9258 	add	hl, bc
      00280E 01rB4r00              9259 	ld	bc,#_projectiles
      002811 09                    9260 	add	hl,bc
      002812 01 04 00              9261 	ld	bc, #0x0004
      002815 09                    9262 	add	hl, bc
      002816 36 0C                 9263 	ld	(hl), #0x0c
      002818 C3rCCr2B              9264 	jp	00141$
      00281B                       9265 00140$:
                                   9266 ;src/main.c:972: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   9267 ;src/main.c:971: else if (xDir != 0 && yDir == 0) {
      00281B FAr93r00              9268 	ld	a, (#_xDir)
      00281E B7                    9269 	or	a, a
      00281F CAr65r29              9270 	jp	Z, 00136$
      002822 FAr94r00              9271 	ld	a, (#_yDir)
      002825 B7                    9272 	or	a, a
      002826 C2r65r29              9273 	jp	NZ, 00136$
                                   9274 ;src/main.c:972: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      002829 F8 04                 9275 	ldhl	sp,	#4
      00282B 34                    9276 	inc	(hl)
      00282C 34                    9277 	inc	(hl)
      00282D 2B                    9278 	dec	hl
                                   9279 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00282E 3A                    9280 	ld	a, (hl-)
      00282F 22                    9281 	ld	(hl+), a
      002830 36 00                 9282 	ld	(hl), #0x00
      002832 3E 02                 9283 	ld	a, #0x02
      002834                       9284 00260$:
      002834 F8 02                 9285 	ldhl	sp,	#2
      002836 CB 26                 9286 	sla	(hl)
      002838 23                    9287 	inc	hl
      002839 CB 16                 9288 	rl	(hl)
      00283B 3D                    9289 	dec	a
      00283C 20 F6                 9290 	jr	NZ, 00260$
      00283E 2B                    9291 	dec	hl
      00283F 2A                    9292 	ld	a, (hl+)
      002840 5F                    9293 	ld	e, a
      002841 56                    9294 	ld	d, (hl)
      002842 21r00r00              9295 	ld	hl, #_shadow_OAM
      002845 19                    9296 	add	hl, de
      002846 33                    9297 	inc	sp
      002847 33                    9298 	inc	sp
      002848 5D                    9299 	ld	e, l
      002849 54                    9300 	ld	d, h
      00284A D5                    9301 	push	de
      00284B 21 02 00              9302 	ld	hl, #0x0002
      00284E 19                    9303 	add	hl, de
      00284F E5                    9304 	push	hl
      002850 7D                    9305 	ld	a, l
      002851 F8 04                 9306 	ldhl	sp,	#4
      002853 77                    9307 	ld	(hl), a
      002854 E1                    9308 	pop	hl
      002855 7C                    9309 	ld	a, h
      002856 F8 03                 9310 	ldhl	sp,	#3
      002858 32                    9311 	ld	(hl-), a
      002859 2A                    9312 	ld	a, (hl+)
      00285A 5F                    9313 	ld	e, a
      00285B 2A                    9314 	ld	a, (hl+)
      00285C 57                    9315 	ld	d, a
      00285D 7E                    9316 	ld	a, (hl)
      00285E 12                    9317 	ld	(de), a
                                   9318 ;src/main.c:925: oldestProjectile += 1;
      00285F FAr91r00              9319 	ld	a, (#_oldestProjectile)
      002862 F8 04                 9320 	ldhl	sp,	#4
      002864 77                    9321 	ld	(hl), a
                                   9322 ;src/main.c:961: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002865 7E                    9323 	ld	a, (hl)
      002866 C6 1E                 9324 	add	a, #0x1e
      002868 77                    9325 	ld	(hl), a
                                   9326 ;src/main.c:973: if (xDir == 1) {
      002869 FAr93r00              9327 	ld	a, (#_xDir)
      00286C 3D                    9328 	dec	a
      00286D 20 7B                 9329 	jr	NZ, 00118$
                                   9330 ;src/main.c:974: set_sprite_prop(30+oldestProjectile, 0);
      00286F F8 04                 9331 	ldhl	sp,	#4
                                   9332 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002871 3A                    9333 	ld	a, (hl-)
      002872 22                    9334 	ld	(hl+), a
      002873 36 00                 9335 	ld	(hl), #0x00
      002875 3E 02                 9336 	ld	a, #0x02
      002877                       9337 00263$:
      002877 F8 03                 9338 	ldhl	sp,	#3
      002879 CB 26                 9339 	sla	(hl)
      00287B 23                    9340 	inc	hl
      00287C CB 16                 9341 	rl	(hl)
      00287E 3D                    9342 	dec	a
      00287F 20 F6                 9343 	jr	NZ, 00263$
      002881 2B                    9344 	dec	hl
      002882 2A                    9345 	ld	a, (hl+)
      002883 5F                    9346 	ld	e, a
      002884 56                    9347 	ld	d, (hl)
      002885 21r00r00              9348 	ld	hl, #_shadow_OAM
      002888 19                    9349 	add	hl, de
      002889 E5                    9350 	push	hl
      00288A 7D                    9351 	ld	a, l
      00288B F8 03                 9352 	ldhl	sp,	#3
      00288D 77                    9353 	ld	(hl), a
      00288E E1                    9354 	pop	hl
      00288F 7C                    9355 	ld	a, h
      002890 F8 02                 9356 	ldhl	sp,	#2
      002892 32                    9357 	ld	(hl-), a
      002893 2A                    9358 	ld	a, (hl+)
      002894 5F                    9359 	ld	e, a
      002895 56                    9360 	ld	d, (hl)
      002896 21 03 00              9361 	ld	hl, #0x0003
      002899 19                    9362 	add	hl, de
      00289A E5                    9363 	push	hl
      00289B 7D                    9364 	ld	a, l
      00289C F8 05                 9365 	ldhl	sp,	#5
      00289E 77                    9366 	ld	(hl), a
      00289F E1                    9367 	pop	hl
      0028A0 7C                    9368 	ld	a, h
      0028A1 F8 04                 9369 	ldhl	sp,	#4
      0028A3 32                    9370 	ld	(hl-), a
      0028A4 2A                    9371 	ld	a,	(hl+)
      0028A5 66                    9372 	ld	h, (hl)
      0028A6 6F                    9373 	ld	l, a
      0028A7 36 00                 9374 	ld	(hl), #0x00
                                   9375 ;src/main.c:975: projectiles[oldestProjectile].offset = 12;
      0028A9 21r91r00              9376 	ld	hl, #_oldestProjectile
      0028AC 4E                    9377 	ld	c, (hl)
      0028AD 06 00                 9378 	ld	b, #0x00
      0028AF 69                    9379 	ld	l, c
      0028B0 60                    9380 	ld	h, b
      0028B1 29                    9381 	add	hl, hl
      0028B2 09                    9382 	add	hl, bc
      0028B3 29                    9383 	add	hl, hl
      0028B4 29                    9384 	add	hl, hl
      0028B5 09                    9385 	add	hl, bc
      0028B6 E5                    9386 	push	hl
      0028B7 7D                    9387 	ld	a, l
      0028B8 F8 05                 9388 	ldhl	sp,	#5
      0028BA 77                    9389 	ld	(hl), a
      0028BB E1                    9390 	pop	hl
      0028BC 7C                    9391 	ld	a, h
      0028BD F8 04                 9392 	ldhl	sp,	#4
      0028BF 32                    9393 	ld	(hl-), a
      0028C0 2A                    9394 	ld	a, (hl+)
      0028C1 5F                    9395 	ld	e, a
      0028C2 56                    9396 	ld	d, (hl)
      0028C3 21rB4r00              9397 	ld	hl, #_projectiles
      0028C6 19                    9398 	add	hl, de
      0028C7 E5                    9399 	push	hl
      0028C8 7D                    9400 	ld	a, l
      0028C9 F8 03                 9401 	ldhl	sp,	#3
      0028CB 77                    9402 	ld	(hl), a
      0028CC E1                    9403 	pop	hl
      0028CD 7C                    9404 	ld	a, h
      0028CE F8 02                 9405 	ldhl	sp,	#2
      0028D0 32                    9406 	ld	(hl-), a
      0028D1 2A                    9407 	ld	a, (hl+)
      0028D2 5F                    9408 	ld	e, a
      0028D3 56                    9409 	ld	d, (hl)
      0028D4 21 04 00              9410 	ld	hl, #0x0004
      0028D7 19                    9411 	add	hl, de
      0028D8 E5                    9412 	push	hl
      0028D9 7D                    9413 	ld	a, l
      0028DA F8 05                 9414 	ldhl	sp,	#5
      0028DC 77                    9415 	ld	(hl), a
      0028DD E1                    9416 	pop	hl
      0028DE 7C                    9417 	ld	a, h
      0028DF F8 04                 9418 	ldhl	sp,	#4
      0028E1 32                    9419 	ld	(hl-), a
      0028E2 2A                    9420 	ld	a,	(hl+)
      0028E3 66                    9421 	ld	h, (hl)
      0028E4 6F                    9422 	ld	l, a
      0028E5 36 0C                 9423 	ld	(hl), #0x0c
      0028E7 C3rCCr2B              9424 	jp	00141$
      0028EA                       9425 00118$:
                                   9426 ;src/main.c:978: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      0028EA F8 04                 9427 	ldhl	sp,	#4
                                   9428 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0028EC 3A                    9429 	ld	a, (hl-)
      0028ED 22                    9430 	ld	(hl+), a
      0028EE 36 00                 9431 	ld	(hl), #0x00
      0028F0 3E 02                 9432 	ld	a, #0x02
      0028F2                       9433 00264$:
      0028F2 F8 03                 9434 	ldhl	sp,	#3
      0028F4 CB 26                 9435 	sla	(hl)
      0028F6 23                    9436 	inc	hl
      0028F7 CB 16                 9437 	rl	(hl)
      0028F9 3D                    9438 	dec	a
      0028FA 20 F6                 9439 	jr	NZ, 00264$
      0028FC 2B                    9440 	dec	hl
      0028FD 2A                    9441 	ld	a, (hl+)
      0028FE 5F                    9442 	ld	e, a
      0028FF 56                    9443 	ld	d, (hl)
      002900 21r00r00              9444 	ld	hl, #_shadow_OAM
      002903 19                    9445 	add	hl, de
      002904 E5                    9446 	push	hl
      002905 7D                    9447 	ld	a, l
      002906 F8 03                 9448 	ldhl	sp,	#3
      002908 77                    9449 	ld	(hl), a
      002909 E1                    9450 	pop	hl
      00290A 7C                    9451 	ld	a, h
      00290B F8 02                 9452 	ldhl	sp,	#2
      00290D 32                    9453 	ld	(hl-), a
      00290E 2A                    9454 	ld	a, (hl+)
      00290F 5F                    9455 	ld	e, a
      002910 56                    9456 	ld	d, (hl)
      002911 21 03 00              9457 	ld	hl, #0x0003
      002914 19                    9458 	add	hl, de
      002915 E5                    9459 	push	hl
      002916 7D                    9460 	ld	a, l
      002917 F8 05                 9461 	ldhl	sp,	#5
      002919 77                    9462 	ld	(hl), a
      00291A E1                    9463 	pop	hl
      00291B 7C                    9464 	ld	a, h
      00291C F8 04                 9465 	ldhl	sp,	#4
      00291E 32                    9466 	ld	(hl-), a
      00291F 2A                    9467 	ld	a,	(hl+)
      002920 66                    9468 	ld	h, (hl)
      002921 6F                    9469 	ld	l, a
      002922 36 20                 9470 	ld	(hl), #0x20
                                   9471 ;src/main.c:979: projectiles[oldestProjectile].offset = 12;
      002924 21r91r00              9472 	ld	hl, #_oldestProjectile
      002927 4E                    9473 	ld	c, (hl)
      002928 06 00                 9474 	ld	b, #0x00
      00292A 69                    9475 	ld	l, c
      00292B 60                    9476 	ld	h, b
      00292C 29                    9477 	add	hl, hl
      00292D 09                    9478 	add	hl, bc
      00292E 29                    9479 	add	hl, hl
      00292F 29                    9480 	add	hl, hl
      002930 09                    9481 	add	hl, bc
      002931 E5                    9482 	push	hl
      002932 7D                    9483 	ld	a, l
      002933 F8 05                 9484 	ldhl	sp,	#5
      002935 77                    9485 	ld	(hl), a
      002936 E1                    9486 	pop	hl
      002937 7C                    9487 	ld	a, h
      002938 F8 04                 9488 	ldhl	sp,	#4
      00293A 32                    9489 	ld	(hl-), a
      00293B 2A                    9490 	ld	a, (hl+)
      00293C 5F                    9491 	ld	e, a
      00293D 56                    9492 	ld	d, (hl)
      00293E 21rB4r00              9493 	ld	hl, #_projectiles
      002941 19                    9494 	add	hl, de
      002942 E5                    9495 	push	hl
      002943 7D                    9496 	ld	a, l
      002944 F8 03                 9497 	ldhl	sp,	#3
      002946 77                    9498 	ld	(hl), a
      002947 E1                    9499 	pop	hl
      002948 7C                    9500 	ld	a, h
      002949 F8 02                 9501 	ldhl	sp,	#2
      00294B 32                    9502 	ld	(hl-), a
      00294C 2A                    9503 	ld	a, (hl+)
      00294D 5F                    9504 	ld	e, a
      00294E 56                    9505 	ld	d, (hl)
      00294F 21 04 00              9506 	ld	hl, #0x0004
      002952 19                    9507 	add	hl, de
      002953 E5                    9508 	push	hl
      002954 7D                    9509 	ld	a, l
      002955 F8 05                 9510 	ldhl	sp,	#5
      002957 77                    9511 	ld	(hl), a
      002958 E1                    9512 	pop	hl
      002959 7C                    9513 	ld	a, h
      00295A F8 04                 9514 	ldhl	sp,	#4
      00295C 32                    9515 	ld	(hl-), a
      00295D 2A                    9516 	ld	a,	(hl+)
      00295E 66                    9517 	ld	h, (hl)
      00295F 6F                    9518 	ld	l, a
      002960 36 0C                 9519 	ld	(hl), #0x0c
      002962 C3rCCr2B              9520 	jp	00141$
      002965                       9521 00136$:
                                   9522 ;src/main.c:983: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      002965 F8 04                 9523 	ldhl	sp,	#4
      002967 7E                    9524 	ld	a, (hl)
      002968 C6 04                 9525 	add	a, #0x04
      00296A F8 00                 9526 	ldhl	sp,	#0
      00296C 77                    9527 	ld	(hl), a
      00296D F8 03                 9528 	ldhl	sp,	#3
                                   9529 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00296F 7E                    9530 	ld	a, (hl)
      002970 22                    9531 	ld	(hl+), a
      002971 36 00                 9532 	ld	(hl), #0x00
      002973 3E 02                 9533 	ld	a, #0x02
      002975                       9534 00265$:
      002975 F8 03                 9535 	ldhl	sp,	#3
      002977 CB 26                 9536 	sla	(hl)
      002979 23                    9537 	inc	hl
      00297A CB 16                 9538 	rl	(hl)
      00297C 3D                    9539 	dec	a
      00297D 20 F6                 9540 	jr	NZ, 00265$
      00297F 2B                    9541 	dec	hl
      002980 2A                    9542 	ld	a, (hl+)
      002981 5F                    9543 	ld	e, a
      002982 56                    9544 	ld	d, (hl)
      002983 21r00r00              9545 	ld	hl, #_shadow_OAM
      002986 19                    9546 	add	hl, de
      002987 E5                    9547 	push	hl
      002988 7D                    9548 	ld	a, l
      002989 F8 03                 9549 	ldhl	sp,	#3
      00298B 77                    9550 	ld	(hl), a
      00298C E1                    9551 	pop	hl
      00298D 7C                    9552 	ld	a, h
      00298E F8 02                 9553 	ldhl	sp,	#2
      002990 32                    9554 	ld	(hl-), a
      002991 2A                    9555 	ld	a, (hl+)
      002992 5F                    9556 	ld	e, a
      002993 56                    9557 	ld	d, (hl)
      002994 21 02 00              9558 	ld	hl, #0x0002
      002997 19                    9559 	add	hl, de
      002998 E5                    9560 	push	hl
      002999 7D                    9561 	ld	a, l
      00299A F8 05                 9562 	ldhl	sp,	#5
      00299C 77                    9563 	ld	(hl), a
      00299D E1                    9564 	pop	hl
      00299E 7C                    9565 	ld	a, h
      00299F F8 04                 9566 	ldhl	sp,	#4
      0029A1 32                    9567 	ld	(hl-), a
      0029A2 2A                    9568 	ld	a, (hl+)
      0029A3 5F                    9569 	ld	e, a
      0029A4 56                    9570 	ld	d, (hl)
      0029A5 F8 00                 9571 	ldhl	sp,	#0
      0029A7 7E                    9572 	ld	a, (hl)
      0029A8 12                    9573 	ld	(de), a
                                   9574 ;src/main.c:984: if (xDir == 1 && yDir == -1) {
      0029A9 FAr93r00              9575 	ld	a, (#_xDir)
      0029AC 3D                    9576 	dec	a
      0029AD 3E 01                 9577 	ld	a, #0x01
      0029AF 28 01                 9578 	jr	Z, 00267$
      0029B1 AF                    9579 	xor	a, a
      0029B2                       9580 00267$:
      0029B2 F8 04                 9581 	ldhl	sp,	#4
      0029B4 77                    9582 	ld	(hl), a
                                   9583 ;src/main.c:925: oldestProjectile += 1;
      0029B5 21r91r00              9584 	ld	hl, #_oldestProjectile
      0029B8 4E                    9585 	ld	c, (hl)
                                   9586 ;src/main.c:984: if (xDir == 1 && yDir == -1) {
      0029B9 FAr94r00              9587 	ld	a, (#_yDir)
      0029BC 3C                    9588 	inc	a
      0029BD 3E 01                 9589 	ld	a, #0x01
      0029BF 28 01                 9590 	jr	Z, 00269$
      0029C1 AF                    9591 	xor	a, a
      0029C2                       9592 00269$:
      0029C2 F8 01                 9593 	ldhl	sp,	#1
                                   9594 ;src/main.c:961: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0029C4 22                    9595 	ld	(hl+), a
      0029C5 79                    9596 	ld	a, c
      0029C6 C6 1E                 9597 	add	a, #0x1e
                                   9598 ;src/main.c:984: if (xDir == 1 && yDir == -1) {
      0029C8 22                    9599 	ld	(hl+), a
      0029C9 23                    9600 	inc	hl
      0029CA 7E                    9601 	ld	a, (hl)
      0029CB B7                    9602 	or	a, a
      0029CC CAr4Fr2A              9603 	jp	Z, 00132$
      0029CF F8 01                 9604 	ldhl	sp,	#1
      0029D1 7E                    9605 	ld	a, (hl)
      0029D2 B7                    9606 	or	a, a
      0029D3 28 7A                 9607 	jr	Z, 00132$
                                   9608 ;src/main.c:985: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      0029D5 23                    9609 	inc	hl
                                   9610 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0029D6 2A                    9611 	ld	a, (hl+)
      0029D7 22                    9612 	ld	(hl+), a
      0029D8 36 00                 9613 	ld	(hl), #0x00
      0029DA 3E 02                 9614 	ld	a, #0x02
      0029DC                       9615 00270$:
      0029DC F8 03                 9616 	ldhl	sp,	#3
      0029DE CB 26                 9617 	sla	(hl)
      0029E0 23                    9618 	inc	hl
      0029E1 CB 16                 9619 	rl	(hl)
      0029E3 3D                    9620 	dec	a
      0029E4 20 F6                 9621 	jr	NZ, 00270$
      0029E6 2B                    9622 	dec	hl
      0029E7 2A                    9623 	ld	a, (hl+)
      0029E8 5F                    9624 	ld	e, a
      0029E9 56                    9625 	ld	d, (hl)
      0029EA 21r00r00              9626 	ld	hl, #_shadow_OAM
      0029ED 19                    9627 	add	hl, de
      0029EE E5                    9628 	push	hl
      0029EF 7D                    9629 	ld	a, l
      0029F0 F8 03                 9630 	ldhl	sp,	#3
      0029F2 77                    9631 	ld	(hl), a
      0029F3 E1                    9632 	pop	hl
      0029F4 7C                    9633 	ld	a, h
      0029F5 F8 02                 9634 	ldhl	sp,	#2
      0029F7 32                    9635 	ld	(hl-), a
      0029F8 2A                    9636 	ld	a, (hl+)
      0029F9 5F                    9637 	ld	e, a
      0029FA 56                    9638 	ld	d, (hl)
      0029FB 21 03 00              9639 	ld	hl, #0x0003
      0029FE 19                    9640 	add	hl, de
      0029FF E5                    9641 	push	hl
      002A00 7D                    9642 	ld	a, l
      002A01 F8 05                 9643 	ldhl	sp,	#5
      002A03 77                    9644 	ld	(hl), a
      002A04 E1                    9645 	pop	hl
      002A05 7C                    9646 	ld	a, h
      002A06 F8 04                 9647 	ldhl	sp,	#4
      002A08 32                    9648 	ld	(hl-), a
      002A09 2A                    9649 	ld	a,	(hl+)
      002A0A 66                    9650 	ld	h, (hl)
      002A0B 6F                    9651 	ld	l, a
      002A0C 36 00                 9652 	ld	(hl), #0x00
                                   9653 ;src/main.c:986: projectiles[oldestProjectile].offset = 12;
      002A0E 21r91r00              9654 	ld	hl, #_oldestProjectile
      002A11 4E                    9655 	ld	c, (hl)
      002A12 06 00                 9656 	ld	b, #0x00
      002A14 69                    9657 	ld	l, c
      002A15 60                    9658 	ld	h, b
      002A16 29                    9659 	add	hl, hl
      002A17 09                    9660 	add	hl, bc
      002A18 29                    9661 	add	hl, hl
      002A19 29                    9662 	add	hl, hl
      002A1A 09                    9663 	add	hl, bc
      002A1B E5                    9664 	push	hl
      002A1C 7D                    9665 	ld	a, l
      002A1D F8 05                 9666 	ldhl	sp,	#5
      002A1F 77                    9667 	ld	(hl), a
      002A20 E1                    9668 	pop	hl
      002A21 7C                    9669 	ld	a, h
      002A22 F8 04                 9670 	ldhl	sp,	#4
      002A24 32                    9671 	ld	(hl-), a
      002A25 2A                    9672 	ld	a, (hl+)
      002A26 5F                    9673 	ld	e, a
      002A27 56                    9674 	ld	d, (hl)
      002A28 21rB4r00              9675 	ld	hl, #_projectiles
      002A2B 19                    9676 	add	hl, de
      002A2C E5                    9677 	push	hl
      002A2D 7D                    9678 	ld	a, l
      002A2E F8 03                 9679 	ldhl	sp,	#3
      002A30 77                    9680 	ld	(hl), a
      002A31 E1                    9681 	pop	hl
      002A32 7C                    9682 	ld	a, h
      002A33 F8 02                 9683 	ldhl	sp,	#2
      002A35 32                    9684 	ld	(hl-), a
      002A36 2A                    9685 	ld	a, (hl+)
      002A37 5F                    9686 	ld	e, a
      002A38 56                    9687 	ld	d, (hl)
      002A39 21 04 00              9688 	ld	hl, #0x0004
      002A3C 19                    9689 	add	hl, de
      002A3D E5                    9690 	push	hl
      002A3E 7D                    9691 	ld	a, l
      002A3F F8 05                 9692 	ldhl	sp,	#5
      002A41 77                    9693 	ld	(hl), a
      002A42 E1                    9694 	pop	hl
      002A43 7C                    9695 	ld	a, h
      002A44 F8 04                 9696 	ldhl	sp,	#4
      002A46 32                    9697 	ld	(hl-), a
      002A47 2A                    9698 	ld	a,	(hl+)
      002A48 66                    9699 	ld	h, (hl)
      002A49 6F                    9700 	ld	l, a
      002A4A 36 0C                 9701 	ld	(hl), #0x0c
      002A4C C3rCCr2B              9702 	jp	00141$
      002A4F                       9703 00132$:
                                   9704 ;src/main.c:962: if (yDir == 1) {
      002A4F FAr94r00              9705 	ld	a, (#_yDir)
      002A52 3D                    9706 	dec	a
      002A53 3E 01                 9707 	ld	a, #0x01
      002A55 28 01                 9708 	jr	Z, 00272$
      002A57 AF                    9709 	xor	a, a
      002A58                       9710 00272$:
      002A58 F8 03                 9711 	ldhl	sp,	#3
                                   9712 ;src/main.c:988: else if (xDir == 1 && yDir == 1) {
      002A5A 22                    9713 	ld	(hl+), a
      002A5B 7E                    9714 	ld	a, (hl)
      002A5C B7                    9715 	or	a, a
      002A5D CArDFr2A              9716 	jp	Z, 00128$
      002A60 2B                    9717 	dec	hl
      002A61 7E                    9718 	ld	a, (hl)
      002A62 B7                    9719 	or	a, a
      002A63 28 7A                 9720 	jr	Z, 00128$
                                   9721 ;src/main.c:989: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      002A65 2B                    9722 	dec	hl
                                   9723 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002A66 2A                    9724 	ld	a, (hl+)
      002A67 22                    9725 	ld	(hl+), a
      002A68 36 00                 9726 	ld	(hl), #0x00
      002A6A 3E 02                 9727 	ld	a, #0x02
      002A6C                       9728 00273$:
      002A6C F8 03                 9729 	ldhl	sp,	#3
      002A6E CB 26                 9730 	sla	(hl)
      002A70 23                    9731 	inc	hl
      002A71 CB 16                 9732 	rl	(hl)
      002A73 3D                    9733 	dec	a
      002A74 20 F6                 9734 	jr	NZ, 00273$
      002A76 2B                    9735 	dec	hl
      002A77 2A                    9736 	ld	a, (hl+)
      002A78 5F                    9737 	ld	e, a
      002A79 56                    9738 	ld	d, (hl)
      002A7A 21r00r00              9739 	ld	hl, #_shadow_OAM
      002A7D 19                    9740 	add	hl, de
      002A7E E5                    9741 	push	hl
      002A7F 7D                    9742 	ld	a, l
      002A80 F8 03                 9743 	ldhl	sp,	#3
      002A82 77                    9744 	ld	(hl), a
      002A83 E1                    9745 	pop	hl
      002A84 7C                    9746 	ld	a, h
      002A85 F8 02                 9747 	ldhl	sp,	#2
      002A87 32                    9748 	ld	(hl-), a
      002A88 2A                    9749 	ld	a, (hl+)
      002A89 5F                    9750 	ld	e, a
      002A8A 56                    9751 	ld	d, (hl)
      002A8B 21 03 00              9752 	ld	hl, #0x0003
      002A8E 19                    9753 	add	hl, de
      002A8F E5                    9754 	push	hl
      002A90 7D                    9755 	ld	a, l
      002A91 F8 05                 9756 	ldhl	sp,	#5
      002A93 77                    9757 	ld	(hl), a
      002A94 E1                    9758 	pop	hl
      002A95 7C                    9759 	ld	a, h
      002A96 F8 04                 9760 	ldhl	sp,	#4
      002A98 32                    9761 	ld	(hl-), a
      002A99 2A                    9762 	ld	a,	(hl+)
      002A9A 66                    9763 	ld	h, (hl)
      002A9B 6F                    9764 	ld	l, a
      002A9C 36 40                 9765 	ld	(hl), #0x40
                                   9766 ;src/main.c:990: projectiles[oldestProjectile].offset = 4;
      002A9E 21r91r00              9767 	ld	hl, #_oldestProjectile
      002AA1 4E                    9768 	ld	c, (hl)
      002AA2 06 00                 9769 	ld	b, #0x00
      002AA4 69                    9770 	ld	l, c
      002AA5 60                    9771 	ld	h, b
      002AA6 29                    9772 	add	hl, hl
      002AA7 09                    9773 	add	hl, bc
      002AA8 29                    9774 	add	hl, hl
      002AA9 29                    9775 	add	hl, hl
      002AAA 09                    9776 	add	hl, bc
      002AAB E5                    9777 	push	hl
      002AAC 7D                    9778 	ld	a, l
      002AAD F8 05                 9779 	ldhl	sp,	#5
      002AAF 77                    9780 	ld	(hl), a
      002AB0 E1                    9781 	pop	hl
      002AB1 7C                    9782 	ld	a, h
      002AB2 F8 04                 9783 	ldhl	sp,	#4
      002AB4 32                    9784 	ld	(hl-), a
      002AB5 2A                    9785 	ld	a, (hl+)
      002AB6 5F                    9786 	ld	e, a
      002AB7 56                    9787 	ld	d, (hl)
      002AB8 21rB4r00              9788 	ld	hl, #_projectiles
      002ABB 19                    9789 	add	hl, de
      002ABC E5                    9790 	push	hl
      002ABD 7D                    9791 	ld	a, l
      002ABE F8 03                 9792 	ldhl	sp,	#3
      002AC0 77                    9793 	ld	(hl), a
      002AC1 E1                    9794 	pop	hl
      002AC2 7C                    9795 	ld	a, h
      002AC3 F8 02                 9796 	ldhl	sp,	#2
      002AC5 32                    9797 	ld	(hl-), a
      002AC6 2A                    9798 	ld	a, (hl+)
      002AC7 5F                    9799 	ld	e, a
      002AC8 56                    9800 	ld	d, (hl)
      002AC9 21 04 00              9801 	ld	hl, #0x0004
      002ACC 19                    9802 	add	hl, de
      002ACD E5                    9803 	push	hl
      002ACE 7D                    9804 	ld	a, l
      002ACF F8 05                 9805 	ldhl	sp,	#5
      002AD1 77                    9806 	ld	(hl), a
      002AD2 E1                    9807 	pop	hl
      002AD3 7C                    9808 	ld	a, h
      002AD4 F8 04                 9809 	ldhl	sp,	#4
      002AD6 32                    9810 	ld	(hl-), a
      002AD7 2A                    9811 	ld	a,	(hl+)
      002AD8 66                    9812 	ld	h, (hl)
      002AD9 6F                    9813 	ld	l, a
      002ADA 36 04                 9814 	ld	(hl), #0x04
      002ADC C3rCCr2B              9815 	jp	00141$
      002ADF                       9816 00128$:
                                   9817 ;src/main.c:992: else if (xDir == -1 && yDir == 1) {
      002ADF FAr93r00              9818 	ld	a, (#_xDir)
      002AE2 3C                    9819 	inc	a
      002AE3 3E 01                 9820 	ld	a, #0x01
      002AE5 28 01                 9821 	jr	Z, 00275$
      002AE7 AF                    9822 	xor	a, a
      002AE8                       9823 00275$:
      002AE8 F8 04                 9824 	ldhl	sp,	#4
      002AEA 77                    9825 	ld	(hl), a
      002AEB 7E                    9826 	ld	a, (hl)
      002AEC B7                    9827 	or	a, a
      002AED CAr6Er2B              9828 	jp	Z, 00124$
      002AF0 2B                    9829 	dec	hl
      002AF1 7E                    9830 	ld	a, (hl)
      002AF2 B7                    9831 	or	a, a
      002AF3 28 79                 9832 	jr	Z, 00124$
                                   9833 ;src/main.c:993: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      002AF5 2B                    9834 	dec	hl
                                   9835 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002AF6 2A                    9836 	ld	a, (hl+)
      002AF7 22                    9837 	ld	(hl+), a
      002AF8 36 00                 9838 	ld	(hl), #0x00
      002AFA 3E 02                 9839 	ld	a, #0x02
      002AFC                       9840 00276$:
      002AFC F8 03                 9841 	ldhl	sp,	#3
      002AFE CB 26                 9842 	sla	(hl)
      002B00 23                    9843 	inc	hl
      002B01 CB 16                 9844 	rl	(hl)
      002B03 3D                    9845 	dec	a
      002B04 20 F6                 9846 	jr	NZ, 00276$
      002B06 2B                    9847 	dec	hl
      002B07 2A                    9848 	ld	a, (hl+)
      002B08 5F                    9849 	ld	e, a
      002B09 56                    9850 	ld	d, (hl)
      002B0A 21r00r00              9851 	ld	hl, #_shadow_OAM
      002B0D 19                    9852 	add	hl, de
      002B0E E5                    9853 	push	hl
      002B0F 7D                    9854 	ld	a, l
      002B10 F8 03                 9855 	ldhl	sp,	#3
      002B12 77                    9856 	ld	(hl), a
      002B13 E1                    9857 	pop	hl
      002B14 7C                    9858 	ld	a, h
      002B15 F8 02                 9859 	ldhl	sp,	#2
      002B17 32                    9860 	ld	(hl-), a
      002B18 2A                    9861 	ld	a, (hl+)
      002B19 5F                    9862 	ld	e, a
      002B1A 56                    9863 	ld	d, (hl)
      002B1B 21 03 00              9864 	ld	hl, #0x0003
      002B1E 19                    9865 	add	hl, de
      002B1F E5                    9866 	push	hl
      002B20 7D                    9867 	ld	a, l
      002B21 F8 05                 9868 	ldhl	sp,	#5
      002B23 77                    9869 	ld	(hl), a
      002B24 E1                    9870 	pop	hl
      002B25 7C                    9871 	ld	a, h
      002B26 F8 04                 9872 	ldhl	sp,	#4
      002B28 32                    9873 	ld	(hl-), a
      002B29 2A                    9874 	ld	a,	(hl+)
      002B2A 66                    9875 	ld	h, (hl)
      002B2B 6F                    9876 	ld	l, a
      002B2C 36 60                 9877 	ld	(hl), #0x60
                                   9878 ;src/main.c:994: projectiles[oldestProjectile].offset = 4;
      002B2E 21r91r00              9879 	ld	hl, #_oldestProjectile
      002B31 4E                    9880 	ld	c, (hl)
      002B32 06 00                 9881 	ld	b, #0x00
      002B34 69                    9882 	ld	l, c
      002B35 60                    9883 	ld	h, b
      002B36 29                    9884 	add	hl, hl
      002B37 09                    9885 	add	hl, bc
      002B38 29                    9886 	add	hl, hl
      002B39 29                    9887 	add	hl, hl
      002B3A 09                    9888 	add	hl, bc
      002B3B E5                    9889 	push	hl
      002B3C 7D                    9890 	ld	a, l
      002B3D F8 05                 9891 	ldhl	sp,	#5
      002B3F 77                    9892 	ld	(hl), a
      002B40 E1                    9893 	pop	hl
      002B41 7C                    9894 	ld	a, h
      002B42 F8 04                 9895 	ldhl	sp,	#4
      002B44 32                    9896 	ld	(hl-), a
      002B45 2A                    9897 	ld	a, (hl+)
      002B46 5F                    9898 	ld	e, a
      002B47 56                    9899 	ld	d, (hl)
      002B48 21rB4r00              9900 	ld	hl, #_projectiles
      002B4B 19                    9901 	add	hl, de
      002B4C E5                    9902 	push	hl
      002B4D 7D                    9903 	ld	a, l
      002B4E F8 03                 9904 	ldhl	sp,	#3
      002B50 77                    9905 	ld	(hl), a
      002B51 E1                    9906 	pop	hl
      002B52 7C                    9907 	ld	a, h
      002B53 F8 02                 9908 	ldhl	sp,	#2
      002B55 32                    9909 	ld	(hl-), a
      002B56 2A                    9910 	ld	a, (hl+)
      002B57 5F                    9911 	ld	e, a
      002B58 56                    9912 	ld	d, (hl)
      002B59 21 04 00              9913 	ld	hl, #0x0004
      002B5C 19                    9914 	add	hl, de
      002B5D E5                    9915 	push	hl
      002B5E 7D                    9916 	ld	a, l
      002B5F F8 05                 9917 	ldhl	sp,	#5
      002B61 77                    9918 	ld	(hl), a
      002B62 E1                    9919 	pop	hl
      002B63 7C                    9920 	ld	a, h
      002B64 F8 04                 9921 	ldhl	sp,	#4
      002B66 32                    9922 	ld	(hl-), a
      002B67 2A                    9923 	ld	a,	(hl+)
      002B68 66                    9924 	ld	h, (hl)
      002B69 6F                    9925 	ld	l, a
      002B6A 36 04                 9926 	ld	(hl), #0x04
      002B6C 18 5E                 9927 	jr	00141$
      002B6E                       9928 00124$:
                                   9929 ;src/main.c:996: else if (xDir == -1 && yDir == -1) {
      002B6E F8 04                 9930 	ldhl	sp,	#4
      002B70 7E                    9931 	ld	a, (hl)
      002B71 B7                    9932 	or	a, a
      002B72 28 58                 9933 	jr	Z, 00141$
      002B74 F8 01                 9934 	ldhl	sp,	#1
      002B76 7E                    9935 	ld	a, (hl)
      002B77 B7                    9936 	or	a, a
      002B78 28 52                 9937 	jr	Z, 00141$
                                   9938 ;src/main.c:997: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002B7A 23                    9939 	inc	hl
                                   9940 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002B7B 2A                    9941 	ld	a, (hl+)
      002B7C 22                    9942 	ld	(hl+), a
      002B7D 36 00                 9943 	ld	(hl), #0x00
      002B7F 3E 02                 9944 	ld	a, #0x02
      002B81                       9945 00277$:
      002B81 F8 03                 9946 	ldhl	sp,	#3
      002B83 CB 26                 9947 	sla	(hl)
      002B85 23                    9948 	inc	hl
      002B86 CB 16                 9949 	rl	(hl)
      002B88 3D                    9950 	dec	a
      002B89 20 F6                 9951 	jr	NZ, 00277$
      002B8B 2B                    9952 	dec	hl
      002B8C 2A                    9953 	ld	a, (hl+)
      002B8D 5F                    9954 	ld	e, a
      002B8E 56                    9955 	ld	d, (hl)
      002B8F 21r00r00              9956 	ld	hl, #_shadow_OAM
      002B92 19                    9957 	add	hl, de
      002B93 E5                    9958 	push	hl
      002B94 7D                    9959 	ld	a, l
      002B95 F8 03                 9960 	ldhl	sp,	#3
      002B97 77                    9961 	ld	(hl), a
      002B98 E1                    9962 	pop	hl
      002B99 7C                    9963 	ld	a, h
      002B9A F8 02                 9964 	ldhl	sp,	#2
      002B9C 32                    9965 	ld	(hl-), a
      002B9D 2A                    9966 	ld	a, (hl+)
      002B9E 5F                    9967 	ld	e, a
      002B9F 56                    9968 	ld	d, (hl)
      002BA0 21 03 00              9969 	ld	hl, #0x0003
      002BA3 19                    9970 	add	hl, de
      002BA4 E5                    9971 	push	hl
      002BA5 7D                    9972 	ld	a, l
      002BA6 F8 05                 9973 	ldhl	sp,	#5
      002BA8 77                    9974 	ld	(hl), a
      002BA9 E1                    9975 	pop	hl
      002BAA 7C                    9976 	ld	a, h
      002BAB F8 04                 9977 	ldhl	sp,	#4
      002BAD 32                    9978 	ld	(hl-), a
      002BAE 2A                    9979 	ld	a,	(hl+)
      002BAF 66                    9980 	ld	h, (hl)
      002BB0 6F                    9981 	ld	l, a
      002BB1 36 20                 9982 	ld	(hl), #0x20
                                   9983 ;src/main.c:998: projectiles[oldestProjectile].offset = 12;
      002BB3 21r91r00              9984 	ld	hl, #_oldestProjectile
      002BB6 4E                    9985 	ld	c, (hl)
      002BB7 06 00                 9986 	ld	b, #0x00
      002BB9 69                    9987 	ld	l, c
      002BBA 60                    9988 	ld	h, b
      002BBB 29                    9989 	add	hl, hl
      002BBC 09                    9990 	add	hl, bc
      002BBD 29                    9991 	add	hl, hl
      002BBE 29                    9992 	add	hl, hl
      002BBF 09                    9993 	add	hl, bc
      002BC0 01rB4r00              9994 	ld	bc,#_projectiles
      002BC3 09                    9995 	add	hl,bc
      002BC4 4D                    9996 	ld	c, l
      002BC5 44                    9997 	ld	b, h
      002BC6 21 04 00              9998 	ld	hl, #0x0004
      002BC9 09                    9999 	add	hl, bc
      002BCA 36 0C                10000 	ld	(hl), #0x0c
      002BCC                      10001 00141$:
                                  10002 ;src/main.c:1002: fireCooldown = projectiles[oldestProjectile].delay;
      002BCC 21r91r00             10003 	ld	hl, #_oldestProjectile
      002BCF 4E                   10004 	ld	c, (hl)
      002BD0 06 00                10005 	ld	b, #0x00
      002BD2 69                   10006 	ld	l, c
      002BD3 60                   10007 	ld	h, b
      002BD4 29                   10008 	add	hl, hl
      002BD5 09                   10009 	add	hl, bc
      002BD6 29                   10010 	add	hl, hl
      002BD7 29                   10011 	add	hl, hl
      002BD8 09                   10012 	add	hl, bc
      002BD9 01rB4r00             10013 	ld	bc,#_projectiles
      002BDC 09                   10014 	add	hl,bc
      002BDD 4D                   10015 	ld	c, l
      002BDE 44                   10016 	ld	b, h
      002BDF 21 0B 00             10017 	ld	hl, #0x000b
      002BE2 09                   10018 	add	hl, bc
      002BE3 7E                   10019 	ld	a, (hl)
      002BE4 EAr92r00             10020 	ld	(#_fireCooldown),a
                                  10021 ;src/main.c:1004: playSound(projectiles[oldestProjectile].type);
      002BE7 21 0C 00             10022 	ld	hl, #0x000c
      002BEA 09                   10023 	add	hl, bc
      002BEB 7E                   10024 	ld	a, (hl)
      002BEC F5                   10025 	push	af
      002BED 33                   10026 	inc	sp
      002BEE CDr98r0F             10027 	call	_playSound
      002BF1 33                   10028 	inc	sp
      002BF2                      10029 00154$:
                                  10030 ;src/main.c:1008: }
      002BF2 E8 05                10031 	add	sp, #5
      002BF4 C9                   10032 	ret
                                  10033 ;src/main.c:1011: void moveProjectiles() {
                                  10034 ;	---------------------------------
                                  10035 ; Function moveProjectiles
                                  10036 ; ---------------------------------
      002BF5                      10037 _moveProjectiles::
      002BF5 E8 F9                10038 	add	sp, #-7
                                  10039 ;src/main.c:1012: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002BF7 F8 06                10040 	ldhl	sp,	#6
      002BF9 36 00                10041 	ld	(hl), #0x00
      002BFB                      10042 00112$:
      002BFB 21r9Fr0B             10043 	ld	hl, #_PROJECTILECOUNT
      002BFE 4E                   10044 	ld	c, (hl)
      002BFF F8 06                10045 	ldhl	sp,	#6
      002C01 7E                   10046 	ld	a, (hl)
      002C02 91                   10047 	sub	a, c
      002C03 D2r53r2D             10048 	jp	NC, 00114$
                                  10049 ;src/main.c:1013: projectiles[i].x -= xOverflow;
      002C06 4E                   10050 	ld	c, (hl)
      002C07 06 00                10051 	ld	b, #0x00
      002C09 69                   10052 	ld	l, c
      002C0A 60                   10053 	ld	h, b
      002C0B 29                   10054 	add	hl, hl
      002C0C 09                   10055 	add	hl, bc
      002C0D 29                   10056 	add	hl, hl
      002C0E 29                   10057 	add	hl, hl
      002C0F 09                   10058 	add	hl, bc
      002C10 01rB4r00             10059 	ld	bc,#_projectiles
      002C13 09                   10060 	add	hl,bc
      002C14 33                   10061 	inc	sp
      002C15 33                   10062 	inc	sp
      002C16 5D                   10063 	ld	e, l
      002C17 54                   10064 	ld	d, h
      002C18 D5                   10065 	push	de
      002C19 1A                   10066 	ld	a, (de)
      002C1A 4F                   10067 	ld	c, a
      002C1B 13                   10068 	inc	de
      002C1C 1A                   10069 	ld	a, (de)
      002C1D 47                   10070 	ld	b, a
      002C1E 79                   10071 	ld	a, c
      002C1F 21rA1r00             10072 	ld	hl, #_xOverflow
      002C22 96                   10073 	sub	a, (hl)
      002C23 23                   10074 	inc	hl
      002C24 4F                   10075 	ld	c, a
      002C25 78                   10076 	ld	a, b
      002C26 9E                   10077 	sbc	a, (hl)
      002C27 47                   10078 	ld	b, a
      002C28 E1                   10079 	pop	hl
      002C29 E5                   10080 	push	hl
      002C2A 79                   10081 	ld	a, c
      002C2B 22                   10082 	ld	(hl+), a
      002C2C 70                   10083 	ld	(hl), b
                                  10084 ;src/main.c:1014: projectiles[i].y -= yOverflow;
      002C2D D1                   10085 	pop	de
      002C2E D5                   10086 	push	de
      002C2F 21 02 00             10087 	ld	hl, #0x0002
      002C32 19                   10088 	add	hl, de
      002C33 E5                   10089 	push	hl
      002C34 7D                   10090 	ld	a, l
      002C35 F8 04                10091 	ldhl	sp,	#4
      002C37 77                   10092 	ld	(hl), a
      002C38 E1                   10093 	pop	hl
      002C39 7C                   10094 	ld	a, h
      002C3A F8 03                10095 	ldhl	sp,	#3
      002C3C 32                   10096 	ld	(hl-), a
      002C3D 2A                   10097 	ld	a, (hl+)
      002C3E 5F                   10098 	ld	e, a
      002C3F 56                   10099 	ld	d, (hl)
      002C40 1A                   10100 	ld	a, (de)
      002C41 4F                   10101 	ld	c, a
      002C42 13                   10102 	inc	de
      002C43 1A                   10103 	ld	a, (de)
      002C44 47                   10104 	ld	b, a
      002C45 79                   10105 	ld	a, c
      002C46 21rA3r00             10106 	ld	hl, #_yOverflow
      002C49 96                   10107 	sub	a, (hl)
      002C4A 23                   10108 	inc	hl
      002C4B 4F                   10109 	ld	c, a
      002C4C 78                   10110 	ld	a, b
      002C4D 9E                   10111 	sbc	a, (hl)
      002C4E 47                   10112 	ld	b, a
      002C4F F8 02                10113 	ldhl	sp,	#2
      002C51 2A                   10114 	ld	a,	(hl+)
      002C52 66                   10115 	ld	h, (hl)
      002C53 6F                   10116 	ld	l, a
      002C54 79                   10117 	ld	a, c
      002C55 22                   10118 	ld	(hl+), a
      002C56 70                   10119 	ld	(hl), b
                                  10120 ;src/main.c:1016: if (projectiles[i].active) {
      002C57 D1                   10121 	pop	de
      002C58 D5                   10122 	push	de
      002C59 21 0A 00             10123 	ld	hl, #0x000a
      002C5C 19                   10124 	add	hl, de
      002C5D 4D                   10125 	ld	c, l
      002C5E 44                   10126 	ld	b, h
      002C5F 0A                   10127 	ld	a, (bc)
      002C60 B7                   10128 	or	a, a
      002C61 CAr4Dr2D             10129 	jp	Z, 00113$
                                  10130 ;src/main.c:1017: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      002C64 F8 02                10131 	ldhl	sp,#2
      002C66 2A                   10132 	ld	a, (hl+)
      002C67 5F                   10133 	ld	e, a
      002C68 56                   10134 	ld	d, (hl)
      002C69 1A                   10135 	ld	a, (de)
      002C6A 4F                   10136 	ld	c, a
      002C6B 13                   10137 	inc	de
      002C6C 1A                   10138 	ld	a, (de)
      002C6D 47                   10139 	ld	b, a
      002C6E D1                   10140 	pop	de
      002C6F D5                   10141 	push	de
      002C70 21 06 00             10142 	ld	hl, #0x0006
      002C73 19                   10143 	add	hl, de
      002C74 5D                   10144 	ld	e, l
      002C75 54                   10145 	ld	d, h
      002C76 1A                   10146 	ld	a, (de)
      002C77 6F                   10147 	ld	l, a
                                  10148 ;	spillPairReg hl
                                  10149 ;	spillPairReg hl
      002C78 07                   10150 	rlca
      002C79 9F                   10151 	sbc	a, a
      002C7A 67                   10152 	ld	h, a
                                  10153 ;	spillPairReg hl
                                  10154 ;	spillPairReg hl
      002C7B 09                   10155 	add	hl, bc
      002C7C 4D                   10156 	ld	c, l
      002C7D 44                   10157 	ld	b, h
      002C7E F8 04                10158 	ldhl	sp,	#4
      002C80 79                   10159 	ld	a, c
      002C81 22                   10160 	ld	(hl+), a
      002C82 70                   10161 	ld	(hl), b
                                  10162 ;src/main.c:1018: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      002C83 D1                   10163 	pop	de
      002C84 D5                   10164 	push	de
      002C85 1A                   10165 	ld	a, (de)
      002C86 4F                   10166 	ld	c, a
      002C87 13                   10167 	inc	de
      002C88 1A                   10168 	ld	a, (de)
      002C89 47                   10169 	ld	b, a
      002C8A D1                   10170 	pop	de
      002C8B D5                   10171 	push	de
      002C8C 21 05 00             10172 	ld	hl, #0x0005
      002C8F 19                   10173 	add	hl, de
      002C90 5D                   10174 	ld	e, l
      002C91 54                   10175 	ld	d, h
      002C92 1A                   10176 	ld	a, (de)
      002C93 6F                   10177 	ld	l, a
                                  10178 ;	spillPairReg hl
                                  10179 ;	spillPairReg hl
      002C94 07                   10180 	rlca
      002C95 9F                   10181 	sbc	a, a
      002C96 67                   10182 	ld	h, a
                                  10183 ;	spillPairReg hl
                                  10184 ;	spillPairReg hl
      002C97 09                   10185 	add	hl, bc
      002C98 4D                   10186 	ld	c, l
      002C99 44                   10187 	ld	b, h
                                  10188 ;src/main.c:1021: projectiles[i].y = newY;
      002C9A F8 02                10189 	ldhl	sp,#2
      002C9C 2A                   10190 	ld	a, (hl+)
      002C9D 5F                   10191 	ld	e, a
      002C9E 2A                   10192 	ld	a, (hl+)
      002C9F 57                   10193 	ld	d, a
      002CA0 2A                   10194 	ld	a, (hl+)
      002CA1 12                   10195 	ld	(de), a
      002CA2 13                   10196 	inc	de
      002CA3 7E                   10197 	ld	a, (hl)
      002CA4 12                   10198 	ld	(de), a
                                  10199 ;src/main.c:1022: projectiles[i].x = newX;
      002CA5 E1                   10200 	pop	hl
      002CA6 E5                   10201 	push	hl
      002CA7 79                   10202 	ld	a, c
      002CA8 22                   10203 	ld	(hl+), a
      002CA9 70                   10204 	ld	(hl), b
                                  10205 ;src/main.c:1026: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      002CAA F8 04                10206 	ldhl	sp,	#4
      002CAC 2A                   10207 	ld	a, (hl+)
      002CAD 77                   10208 	ld	(hl), a
      002CAE D1                   10209 	pop	de
      002CAF D5                   10210 	push	de
      002CB0 21 04 00             10211 	ld	hl, #0x0004
      002CB3 19                   10212 	add	hl, de
      002CB4 5D                   10213 	ld	e, l
      002CB5 54                   10214 	ld	d, h
      002CB6 1A                   10215 	ld	a, (de)
      002CB7 F8 05                10216 	ldhl	sp,	#5
      002CB9 86                   10217 	add	a, (hl)
      002CBA 2B                   10218 	dec	hl
      002CBB 5F                   10219 	ld	e, a
      002CBC 79                   10220 	ld	a, c
      002CBD C6 04                10221 	add	a, #0x04
      002CBF 22                   10222 	ld	(hl+), a
      002CC0 23                   10223 	inc	hl
      002CC1 3A                   10224 	ld	a, (hl-)
      002CC2 C6 1E                10225 	add	a, #0x1e
      002CC4 77                   10226 	ld	(hl), a
      002CC5 56                   10227 	ld	d, (hl)
                                  10228 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002CC6 26 00                10229 	ld	h, #0x00
                                  10230 ;	spillPairReg hl
                                  10231 ;	spillPairReg hl
      002CC8 6A                   10232 	ld	l, d
      002CC9 29                   10233 	add	hl, hl
      002CCA 29                   10234 	add	hl, hl
      002CCB D5                   10235 	push	de
      002CCC 11r00r00             10236 	ld	de, #_shadow_OAM
      002CCF 19                   10237 	add	hl, de
      002CD0 D1                   10238 	pop	de
                                  10239 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002CD1 7B                   10240 	ld	a, e
      002CD2 22                   10241 	ld	(hl+), a
      002CD3 5D                   10242 	ld	e, l
      002CD4 54                   10243 	ld	d, h
      002CD5 F8 04                10244 	ldhl	sp,	#4
      002CD7 7E                   10245 	ld	a, (hl)
      002CD8 12                   10246 	ld	(de), a
                                  10247 ;src/main.c:1030: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002CD9 D1                   10248 	pop	de
      002CDA D5                   10249 	push	de
      002CDB 1A                   10250 	ld	a, (de)
      002CDC 6F                   10251 	ld	l, a
                                  10252 ;	spillPairReg hl
                                  10253 ;	spillPairReg hl
      002CDD 13                   10254 	inc	de
      002CDE 1A                   10255 	ld	a, (de)
      002CDF 67                   10256 	ld	h, a
                                  10257 ;	spillPairReg hl
                                  10258 ;	spillPairReg hl
      002CE0 CB 78                10259 	bit	7, b
      002CE2 20 44                10260 	jr	NZ, 00101$
      002CE4 5C                   10261 	ld	e, h
      002CE5 16 00                10262 	ld	d, #0x00
      002CE7 3E AA                10263 	ld	a, #0xaa
      002CE9 BD                   10264 	cp	a, l
      002CEA 3E 00                10265 	ld	a, #0x00
      002CEC 9C                   10266 	sbc	a, h
      002CED CB 7B                10267 	bit	7, e
      002CEF 28 07                10268 	jr	Z, 00147$
      002CF1 CB 7A                10269 	bit	7, d
      002CF3 20 08                10270 	jr	NZ, 00148$
      002CF5 BF                   10271 	cp	a, a
      002CF6 18 05                10272 	jr	00148$
      002CF8                      10273 00147$:
      002CF8 CB 7A                10274 	bit	7, d
      002CFA 28 01                10275 	jr	Z, 00148$
      002CFC 37                   10276 	scf
      002CFD                      10277 00148$:
      002CFD 38 29                10278 	jr	C, 00101$
                                  10279 ;src/main.c:1014: projectiles[i].y -= yOverflow;
      002CFF F8 02                10280 	ldhl	sp,#2
      002D01 2A                   10281 	ld	a, (hl+)
      002D02 5F                   10282 	ld	e, a
      002D03 56                   10283 	ld	d, (hl)
      002D04 1A                   10284 	ld	a, (de)
      002D05 4F                   10285 	ld	c, a
      002D06 13                   10286 	inc	de
      002D07 1A                   10287 	ld	a, (de)
                                  10288 ;src/main.c:1030: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002D08 47                   10289 	ld	b, a
      002D09 CB 78                10290 	bit	7, b
      002D0B 20 1B                10291 	jr	NZ, 00101$
      002D0D 58                   10292 	ld	e, b
      002D0E 16 00                10293 	ld	d, #0x00
      002D10 3E 9A                10294 	ld	a, #0x9a
      002D12 B9                   10295 	cp	a, c
      002D13 3E 00                10296 	ld	a, #0x00
      002D15 98                   10297 	sbc	a, b
      002D16 CB 7B                10298 	bit	7, e
      002D18 28 07                10299 	jr	Z, 00149$
      002D1A CB 7A                10300 	bit	7, d
      002D1C 20 08                10301 	jr	NZ, 00150$
      002D1E BF                   10302 	cp	a, a
      002D1F 18 05                10303 	jr	00150$
      002D21                      10304 00149$:
      002D21 CB 7A                10305 	bit	7, d
      002D23 28 01                10306 	jr	Z, 00150$
      002D25 37                   10307 	scf
      002D26                      10308 00150$:
      002D26 30 25                10309 	jr	NC, 00113$
      002D28                      10310 00101$:
                                  10311 ;src/main.c:1031: projectiles[i].active = 0;
      002D28 F8 06                10312 	ldhl	sp,	#6
      002D2A 4E                   10313 	ld	c, (hl)
      002D2B 06 00                10314 	ld	b, #0x00
      002D2D 69                   10315 	ld	l, c
      002D2E 60                   10316 	ld	h, b
      002D2F 29                   10317 	add	hl, hl
      002D30 09                   10318 	add	hl, bc
      002D31 29                   10319 	add	hl, hl
      002D32 29                   10320 	add	hl, hl
      002D33 09                   10321 	add	hl, bc
      002D34 11rB4r00             10322 	ld	de, #_projectiles
      002D37 19                   10323 	add	hl, de
      002D38 01 0A 00             10324 	ld	bc, #0x000a
      002D3B 09                   10325 	add	hl, bc
      002D3C 36 00                10326 	ld	(hl), #0x00
                                  10327 ;src/main.c:1032: set_sprite_tile(30+i, 0x7f);
      002D3E F8 05                10328 	ldhl	sp,	#5
                                  10329 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002D40 6E                   10330 	ld	l, (hl)
                                  10331 ;	spillPairReg hl
                                  10332 ;	spillPairReg hl
      002D41 26 00                10333 	ld	h, #0x00
                                  10334 ;	spillPairReg hl
                                  10335 ;	spillPairReg hl
      002D43 29                   10336 	add	hl, hl
      002D44 29                   10337 	add	hl, hl
      002D45 11r00r00             10338 	ld	de, #_shadow_OAM
      002D48 19                   10339 	add	hl, de
      002D49 23                   10340 	inc	hl
      002D4A 23                   10341 	inc	hl
      002D4B 36 7F                10342 	ld	(hl), #0x7f
                                  10343 ;src/main.c:1032: set_sprite_tile(30+i, 0x7f);
      002D4D                      10344 00113$:
                                  10345 ;src/main.c:1012: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002D4D F8 06                10346 	ldhl	sp,	#6
      002D4F 34                   10347 	inc	(hl)
      002D50 C3rFBr2B             10348 	jp	00112$
      002D53                      10349 00114$:
                                  10350 ;src/main.c:1036: }
      002D53 E8 07                10351 	add	sp, #7
      002D55 C9                   10352 	ret
                                  10353 ;src/main.c:1038: void tickPickups() {
                                  10354 ;	---------------------------------
                                  10355 ; Function tickPickups
                                  10356 ; ---------------------------------
      002D56                      10357 _tickPickups::
      002D56 E8 FC                10358 	add	sp, #-4
                                  10359 ;src/main.c:1040: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002D58 FArFDr00             10360 	ld	a, (#(_pickup + 3) + 0)
      002D5B C6 0C                10361 	add	a, #0x0c
      002D5D 47                   10362 	ld	b, a
      002D5E FArFBr00             10363 	ld	a, (#(_pickup + 1) + 0)
      002D61 C6 04                10364 	add	a, #0x04
      002D63 4F                   10365 	ld	c, a
                                  10366 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002D64 21r0Cr00             10367 	ld	hl, #(_shadow_OAM + 12)
                                  10368 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002D67 78                   10369 	ld	a, b
      002D68 22                   10370 	ld	(hl+), a
      002D69 71                   10371 	ld	(hl), c
                                  10372 ;src/main.c:1041: if (pickup.active) {
      002D6A FArFFr00             10373 	ld	a, (#(_pickup + 5) + 0)
      002D6D B7                   10374 	or	a, a
      002D6E CAr22r2F             10375 	jp	Z, 00143$
                                  10376 ;src/main.c:1042: if (pickup.visible) {
      002D71 21rFAr00             10377 	ld	hl, #_pickup
      002D74 4E                   10378 	ld	c, (hl)
                                  10379 ;src/main.c:1040: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002D75 11rFBr00             10380 	ld	de, #(_pickup + 1)
      002D78 1A                   10381 	ld	a, (de)
      002D79 F8 00                10382 	ldhl	sp,	#0
      002D7B 22                   10383 	ld	(hl+), a
      002D7C 13                   10384 	inc	de
      002D7D 1A                   10385 	ld	a, (de)
      002D7E 77                   10386 	ld	(hl), a
                                  10387 ;src/main.c:1042: if (pickup.visible) {
      002D7F 79                   10388 	ld	a, c
      002D80 B7                   10389 	or	a, a
      002D81 CArB6r2E             10390 	jp	Z, 00127$
                                  10391 ;src/main.c:1043: pickup.x -= xOverflow;
      002D84 D1                   10392 	pop	de
      002D85 D5                   10393 	push	de
      002D86 21rA1r00             10394 	ld	hl, #_xOverflow
      002D89 2A                   10395 	ld	a,	(hl+)
      002D8A 66                   10396 	ld	h, (hl)
      002D8B 6F                   10397 	ld	l, a
      002D8C 7B                   10398 	ld	a, e
      002D8D 95                   10399 	sub	a, l
      002D8E 5F                   10400 	ld	e, a
      002D8F 7A                   10401 	ld	a, d
      002D90 9C                   10402 	sbc	a, h
      002D91 F8 03                10403 	ldhl	sp,	#3
      002D93 32                   10404 	ld	(hl-), a
      002D94 73                   10405 	ld	(hl), e
      002D95 11rFBr00             10406 	ld	de, #(_pickup + 1)
      002D98 2A                   10407 	ld	a, (hl+)
      002D99 12                   10408 	ld	(de), a
      002D9A 13                   10409 	inc	de
      002D9B 7E                   10410 	ld	a, (hl)
      002D9C 12                   10411 	ld	(de), a
                                  10412 ;src/main.c:1044: pickup.y -= yOverflow;
      002D9D 21rFDr00             10413 	ld	hl, #(_pickup + 3)
      002DA0 2A                   10414 	ld	a, (hl+)
      002DA1 4F                   10415 	ld	c, a
      002DA2 46                   10416 	ld	b, (hl)
      002DA3 79                   10417 	ld	a, c
      002DA4 21rA3r00             10418 	ld	hl, #_yOverflow
      002DA7 96                   10419 	sub	a, (hl)
      002DA8 23                   10420 	inc	hl
      002DA9 4F                   10421 	ld	c, a
      002DAA 78                   10422 	ld	a, b
      002DAB 9E                   10423 	sbc	a, (hl)
      002DAC 47                   10424 	ld	b, a
      002DAD 21rFDr00             10425 	ld	hl, #(_pickup + 3)
      002DB0 79                   10426 	ld	a, c
      002DB1 22                   10427 	ld	(hl+), a
      002DB2 70                   10428 	ld	(hl), b
                                  10429 ;src/main.c:1045: if (abs(pickup.x - playerDrawX) < 10) {
      002DB3 F8 02                10430 	ldhl	sp,	#2
      002DB5 7E                   10431 	ld	a, (hl)
      002DB6 21r9Br00             10432 	ld	hl, #_playerDrawX
      002DB9 4E                   10433 	ld	c, (hl)
      002DBA 91                   10434 	sub	a, c
      002DBB 4F                   10435 	ld	c, a
                                  10436 ;src/main.c:361: if (value >= 0) return value;
      002DBC CB 79                10437 	bit	7, c
      002DBE 28 03                10438 	jr	Z, 00135$
                                  10439 ;src/main.c:362: else return - value;
      002DC0 AF                   10440 	xor	a, a
      002DC1 91                   10441 	sub	a, c
      002DC2 4F                   10442 	ld	c, a
                                  10443 ;src/main.c:1045: if (abs(pickup.x - playerDrawX) < 10) {
      002DC3                      10444 00135$:
      002DC3 79                   10445 	ld	a, c
      002DC4 EE 80                10446 	xor	a, #0x80
      002DC6 D6 8A                10447 	sub	a, #0x8a
      002DC8 D2r59r2E             10448 	jp	NC, 00115$
                                  10449 ;src/main.c:1046: if (abs(pickup.y - playerDrawY) < 10) {
      002DCB FArFDr00             10450 	ld	a, (#(_pickup + 3) + 0)
      002DCE F8 01                10451 	ldhl	sp,	#1
      002DD0 77                   10452 	ld	(hl), a
      002DD1 FAr9Cr00             10453 	ld	a, (#_playerDrawY)
      002DD4 F8 03                10454 	ldhl	sp,	#3
      002DD6 32                   10455 	ld	(hl-), a
      002DD7 2B                   10456 	dec	hl
      002DD8 2A                   10457 	ld	a, (hl+)
      002DD9 23                   10458 	inc	hl
      002DDA 96                   10459 	sub	a, (hl)
      002DDB 77                   10460 	ld	(hl), a
                                  10461 ;src/main.c:361: if (value >= 0) return value;
      002DDC CB 7E                10462 	bit	7, (hl)
      002DDE 28 05                10463 	jr	Z, 00139$
                                  10464 ;src/main.c:362: else return - value;
      002DE0 AF                   10465 	xor	a, a
      002DE1 F8 03                10466 	ldhl	sp,	#3
      002DE3 96                   10467 	sub	a, (hl)
      002DE4 77                   10468 	ld	(hl), a
                                  10469 ;src/main.c:1046: if (abs(pickup.y - playerDrawY) < 10) {
      002DE5                      10470 00139$:
      002DE5 F8 03                10471 	ldhl	sp,	#3
      002DE7 7E                   10472 	ld	a, (hl)
      002DE8 EE 80                10473 	xor	a, #0x80
      002DEA D6 8A                10474 	sub	a, #0x8a
      002DEC 30 6B                10475 	jr	NC, 00115$
                                  10476 ;src/main.c:1047: if (pickup.type == 0) { //upgrade
      002DEE FAr00r01             10477 	ld	a, (#(_pickup + 6) + 0)
      002DF1 B7                   10478 	or	a, a
      002DF2 20 0D                10479 	jr	NZ, 00104$
                                  10480 ;src/main.c:1048: if (gunLevel < 1) {
      002DF4 21rA6r00             10481 	ld	hl, #_gunLevel
      002DF7 7E                   10482 	ld	a, (hl)
      002DF8 D6 01                10483 	sub	a, #0x01
      002DFA 30 05                10484 	jr	NC, 00104$
                                  10485 ;src/main.c:1049: gunLevel += 1;
      002DFC 34                   10486 	inc	(hl)
      002DFD 7E                   10487 	ld	a, (hl)
                                  10488 ;src/main.c:1050: setGunIcon();
      002DFE CDr19r26             10489 	call	_setGunIcon
      002E01                      10490 00104$:
                                  10491 ;src/main.c:1053: if (pickup.type == 1) { //missile ammo
      002E01 21r00r01             10492 	ld	hl, #(_pickup + 6)
      002E04 6E                   10493 	ld	l, (hl)
                                  10494 ;	spillPairReg hl
                                  10495 ;src/main.c:1054: updateMissileCount(pickup.amount);
      002E05 01r01r01             10496 	ld	bc, #_pickup + 7
                                  10497 ;src/main.c:1053: if (pickup.type == 1) { //missile ammo
      002E08 2D                   10498 	dec	l
      002E09 20 09                10499 	jr	NZ, 00106$
                                  10500 ;src/main.c:1054: updateMissileCount(pickup.amount);
      002E0B 0A                   10501 	ld	a, (bc)
      002E0C C5                   10502 	push	bc
      002E0D F5                   10503 	push	af
      002E0E 33                   10504 	inc	sp
      002E0F CDrE1r0C             10505 	call	_updateMissileCount
      002E12 33                   10506 	inc	sp
      002E13 C1                   10507 	pop	bc
      002E14                      10508 00106$:
                                  10509 ;src/main.c:1056: if (pickup.type == 2) {
      002E14 FAr00r01             10510 	ld	a, (#(_pickup + 6) + 0)
      002E17 D6 02                10511 	sub	a, #0x02
      002E19 20 34                10512 	jr	NZ, 00111$
                                  10513 ;src/main.c:1057: if (hull + pickup.amount <= 100) {
      002E1B 21rF6r00             10514 	ld	hl, #_hull
      002E1E 5E                   10515 	ld	e, (hl)
      002E1F 16 00                10516 	ld	d, #0x00
      002E21 0A                   10517 	ld	a, (bc)
      002E22 4F                   10518 	ld	c, a
      002E23 69                   10519 	ld	l, c
                                  10520 ;	spillPairReg hl
                                  10521 ;	spillPairReg hl
      002E24 26 00                10522 	ld	h, #0x00
                                  10523 ;	spillPairReg hl
                                  10524 ;	spillPairReg hl
      002E26 19                   10525 	add	hl, de
      002E27 5C                   10526 	ld	e, h
      002E28 16 00                10527 	ld	d, #0x00
      002E2A 3E 64                10528 	ld	a, #0x64
      002E2C BD                   10529 	cp	a, l
      002E2D 3E 00                10530 	ld	a, #0x00
      002E2F 9C                   10531 	sbc	a, h
      002E30 CB 7B                10532 	bit	7, e
      002E32 28 07                10533 	jr	Z, 00239$
      002E34 CB 7A                10534 	bit	7, d
      002E36 20 08                10535 	jr	NZ, 00240$
      002E38 BF                   10536 	cp	a, a
      002E39 18 05                10537 	jr	00240$
      002E3B                      10538 00239$:
      002E3B CB 7A                10539 	bit	7, d
      002E3D 28 01                10540 	jr	Z, 00240$
      002E3F 37                   10541 	scf
      002E40                      10542 00240$:
      002E40 38 08                10543 	jr	C, 00108$
                                  10544 ;src/main.c:1058: hull += pickup.amount;
      002E42 79                   10545 	ld	a, c
      002E43 21rF6r00             10546 	ld	hl, #_hull
      002E46 86                   10547 	add	a, (hl)
      002E47 77                   10548 	ld	(hl), a
      002E48 18 05                10549 	jr	00111$
      002E4A                      10550 00108$:
                                  10551 ;src/main.c:1061: hull = 100;
      002E4A 21rF6r00             10552 	ld	hl, #_hull
      002E4D 36 64                10553 	ld	(hl), #0x64
      002E4F                      10554 00111$:
                                  10555 ;src/main.c:1064: pickup.active = 0;
      002E4F 21rFFr00             10556 	ld	hl, #(_pickup + 5)
      002E52 36 00                10557 	ld	(hl), #0x00
                                  10558 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002E54 21r0Er00             10559 	ld	hl, #(_shadow_OAM + 14)
      002E57 36 7F                10560 	ld	(hl), #0x7f
                                  10561 ;src/main.c:1065: set_sprite_tile(3, 0x7f);
      002E59                      10562 00115$:
                                  10563 ;src/main.c:1040: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002E59 21rFBr00             10564 	ld	hl, #(_pickup + 1)
      002E5C 2A                   10565 	ld	a, (hl+)
      002E5D 4F                   10566 	ld	c, a
      002E5E 46                   10567 	ld	b, (hl)
                                  10568 ;src/main.c:1068: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      002E5F 79                   10569 	ld	a, c
      002E60 D6 F6                10570 	sub	a, #0xf6
      002E62 78                   10571 	ld	a, b
      002E63 17                   10572 	rla
      002E64 3F                   10573 	ccf
      002E65 1F                   10574 	rra
      002E66 DE 7F                10575 	sbc	a, #0x7f
      002E68 38 40                10576 	jr	C, 00116$
      002E6A 58                   10577 	ld	e, b
      002E6B 16 00                10578 	ld	d, #0x00
      002E6D 3E AA                10579 	ld	a, #0xaa
      002E6F B9                   10580 	cp	a, c
      002E70 3E 00                10581 	ld	a, #0x00
      002E72 98                   10582 	sbc	a, b
      002E73 CB 7B                10583 	bit	7, e
      002E75 28 07                10584 	jr	Z, 00241$
      002E77 CB 7A                10585 	bit	7, d
      002E79 20 08                10586 	jr	NZ, 00242$
      002E7B BF                   10587 	cp	a, a
      002E7C 18 05                10588 	jr	00242$
      002E7E                      10589 00241$:
      002E7E CB 7A                10590 	bit	7, d
      002E80 28 01                10591 	jr	Z, 00242$
      002E82 37                   10592 	scf
      002E83                      10593 00242$:
      002E83 38 25                10594 	jr	C, 00116$
                                  10595 ;src/main.c:1040: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002E85 21rFDr00             10596 	ld	hl, #(_pickup + 3)
      002E88 2A                   10597 	ld	a, (hl+)
      002E89 4F                   10598 	ld	c, a
      002E8A 46                   10599 	ld	b, (hl)
                                  10600 ;src/main.c:1068: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      002E8B CB 78                10601 	bit	7, b
      002E8D 20 1B                10602 	jr	NZ, 00116$
      002E8F 58                   10603 	ld	e, b
      002E90 16 00                10604 	ld	d, #0x00
      002E92 3E 9B                10605 	ld	a, #0x9b
      002E94 B9                   10606 	cp	a, c
      002E95 3E 00                10607 	ld	a, #0x00
      002E97 98                   10608 	sbc	a, b
      002E98 CB 7B                10609 	bit	7, e
      002E9A 28 07                10610 	jr	Z, 00243$
      002E9C CB 7A                10611 	bit	7, d
      002E9E 20 08                10612 	jr	NZ, 00244$
      002EA0 BF                   10613 	cp	a, a
      002EA1 18 05                10614 	jr	00244$
      002EA3                      10615 00243$:
      002EA3 CB 7A                10616 	bit	7, d
      002EA5 28 01                10617 	jr	Z, 00244$
      002EA7 37                   10618 	scf
      002EA8                      10619 00244$:
      002EA8 30 78                10620 	jr	NC, 00143$
      002EAA                      10621 00116$:
                                  10622 ;src/main.c:1069: pickup.visible = 0;
      002EAA 21rFAr00             10623 	ld	hl, #_pickup
      002EAD 36 00                10624 	ld	(hl), #0x00
                                  10625 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002EAF 21r0Er00             10626 	ld	hl, #(_shadow_OAM + 14)
      002EB2 36 7F                10627 	ld	(hl), #0x7f
                                  10628 ;src/main.c:1070: set_sprite_tile(3, 0x7f);
      002EB4 18 6C                10629 	jr	00143$
      002EB6                      10630 00127$:
                                  10631 ;src/main.c:1074: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      002EB6 F8 00                10632 	ldhl	sp,	#0
      002EB8 2A                   10633 	ld	a, (hl+)
      002EB9 D6 F6                10634 	sub	a, #0xf6
      002EBB 7E                   10635 	ld	a, (hl)
      002EBC DE FF                10636 	sbc	a, #0xff
      002EBE 56                   10637 	ld	d, (hl)
      002EBF 3E FF                10638 	ld	a, #0xff
      002EC1 CB 7F                10639 	bit	7,a
      002EC3 28 07                10640 	jr	Z, 00245$
      002EC5 CB 7A                10641 	bit	7, d
      002EC7 20 08                10642 	jr	NZ, 00246$
      002EC9 BF                   10643 	cp	a, a
      002ECA 18 05                10644 	jr	00246$
      002ECC                      10645 00245$:
      002ECC CB 7A                10646 	bit	7, d
      002ECE 28 01                10647 	jr	Z, 00246$
      002ED0 37                   10648 	scf
      002ED1                      10649 00246$:
      002ED1 38 4F                10650 	jr	C, 00143$
      002ED3 C1                   10651 	pop	bc
      002ED4 C5                   10652 	push	bc
      002ED5 58                   10653 	ld	e, b
      002ED6 16 00                10654 	ld	d, #0x00
      002ED8 3E AA                10655 	ld	a, #0xaa
      002EDA B9                   10656 	cp	a, c
      002EDB 3E 00                10657 	ld	a, #0x00
      002EDD 98                   10658 	sbc	a, b
      002EDE CB 7B                10659 	bit	7, e
      002EE0 28 07                10660 	jr	Z, 00247$
      002EE2 CB 7A                10661 	bit	7, d
      002EE4 20 08                10662 	jr	NZ, 00248$
      002EE6 BF                   10663 	cp	a, a
      002EE7 18 05                10664 	jr	00248$
      002EE9                      10665 00247$:
      002EE9 CB 7A                10666 	bit	7, d
      002EEB 28 01                10667 	jr	Z, 00248$
      002EED 37                   10668 	scf
      002EEE                      10669 00248$:
      002EEE 38 32                10670 	jr	C, 00143$
      002EF0 21rFDr00             10671 	ld	hl, #(_pickup + 3)
      002EF3 2A                   10672 	ld	a, (hl+)
      002EF4 4F                   10673 	ld	c, a
      002EF5 46                   10674 	ld	b, (hl)
      002EF6 CB 78                10675 	bit	7, b
      002EF8 20 28                10676 	jr	NZ, 00143$
      002EFA 58                   10677 	ld	e, b
      002EFB 16 00                10678 	ld	d, #0x00
      002EFD 3E 9B                10679 	ld	a, #0x9b
      002EFF B9                   10680 	cp	a, c
      002F00 3E 00                10681 	ld	a, #0x00
      002F02 98                   10682 	sbc	a, b
      002F03 CB 7B                10683 	bit	7, e
      002F05 28 07                10684 	jr	Z, 00249$
      002F07 CB 7A                10685 	bit	7, d
      002F09 20 08                10686 	jr	NZ, 00250$
      002F0B BF                   10687 	cp	a, a
      002F0C 18 05                10688 	jr	00250$
      002F0E                      10689 00249$:
      002F0E CB 7A                10690 	bit	7, d
      002F10 28 01                10691 	jr	Z, 00250$
      002F12 37                   10692 	scf
      002F13                      10693 00250$:
      002F13 38 0D                10694 	jr	C, 00143$
                                  10695 ;src/main.c:1075: pickup.visible = 1;
      002F15 21rFAr00             10696 	ld	hl, #_pickup
      002F18 36 01                10697 	ld	(hl), #0x01
                                  10698 ;src/main.c:1076: set_sprite_tile(3, pickup.tile);
      002F1A 21r02r01             10699 	ld	hl, #(_pickup + 8)
      002F1D 4E                   10700 	ld	c, (hl)
                                  10701 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002F1E 21r0Er00             10702 	ld	hl, #(_shadow_OAM + 14)
      002F21 71                   10703 	ld	(hl), c
                                  10704 ;src/main.c:1076: set_sprite_tile(3, pickup.tile);
      002F22                      10705 00143$:
                                  10706 ;src/main.c:1081: }
      002F22 E8 04                10707 	add	sp, #4
      002F24 C9                   10708 	ret
                                  10709 ;src/main.c:1083: void tickEx() {
                                  10710 ;	---------------------------------
                                  10711 ; Function tickEx
                                  10712 ; ---------------------------------
      002F25                      10713 _tickEx::
      002F25 E8 F8                10714 	add	sp, #-8
                                  10715 ;src/main.c:1084: for (uint8_t i = 0; i < exCount; ++i) {
      002F27 F8 07                10716 	ldhl	sp,	#7
      002F29 36 00                10717 	ld	(hl), #0x00
      002F2B                      10718 00116$:
      002F2B F8 07                10719 	ldhl	sp,	#7
      002F2D 7E                   10720 	ld	a, (hl)
      002F2E 21rBBr00             10721 	ld	hl, #_exCount
      002F31 96                   10722 	sub	a, (hl)
      002F32 D2r42r30             10723 	jp	NC, 00118$
                                  10724 ;src/main.c:1085: if (explosions[i].visible) {
      002F35 F8 07                10725 	ldhl	sp,	#7
      002F37 4E                   10726 	ld	c, (hl)
      002F38 06 00                10727 	ld	b, #0x00
      002F3A 69                   10728 	ld	l, c
      002F3B 60                   10729 	ld	h, b
      002F3C 29                   10730 	add	hl, hl
      002F3D 09                   10731 	add	hl, bc
      002F3E 29                   10732 	add	hl, hl
      002F3F 01r03r01             10733 	ld	bc,#_explosions
      002F42 09                   10734 	add	hl,bc
      002F43 E5                   10735 	push	hl
      002F44 7D                   10736 	ld	a, l
      002F45 F8 07                10737 	ldhl	sp,	#7
      002F47 77                   10738 	ld	(hl), a
      002F48 E1                   10739 	pop	hl
      002F49 7C                   10740 	ld	a, h
      002F4A F8 06                10741 	ldhl	sp,	#6
      002F4C 32                   10742 	ld	(hl-), a
      002F4D 2A                   10743 	ld	a, (hl+)
      002F4E 5F                   10744 	ld	e, a
      002F4F 3A                   10745 	ld	a, (hl-)
      002F50 2B                   10746 	dec	hl
      002F51 57                   10747 	ld	d, a
      002F52 1A                   10748 	ld	a, (de)
      002F53 77                   10749 	ld	(hl), a
      002F54 7E                   10750 	ld	a, (hl)
      002F55 B7                   10751 	or	a, a
      002F56 CAr3Cr30             10752 	jp	Z, 00117$
                                  10753 ;src/main.c:1087: explosions[i].x -= xOverflow;
      002F59 23                   10754 	inc	hl
      002F5A 2A                   10755 	ld	a, (hl+)
      002F5B 4F                   10756 	ld	c, a
      002F5C 46                   10757 	ld	b, (hl)
      002F5D 03                   10758 	inc	bc
      002F5E 0A                   10759 	ld	a, (bc)
      002F5F 21rA1r00             10760 	ld	hl, #_xOverflow
      002F62 5E                   10761 	ld	e, (hl)
      002F63 93                   10762 	sub	a, e
      002F64 02                   10763 	ld	(bc), a
                                  10764 ;src/main.c:1088: explosions[i].y -= yOverflow;
      002F65 F8 05                10765 	ldhl	sp,#5
      002F67 2A                   10766 	ld	a, (hl+)
      002F68 5F                   10767 	ld	e, a
      002F69 56                   10768 	ld	d, (hl)
      002F6A 21 02 00             10769 	ld	hl, #0x0002
      002F6D 19                   10770 	add	hl, de
      002F6E E5                   10771 	push	hl
      002F6F 7D                   10772 	ld	a, l
      002F70 F8 05                10773 	ldhl	sp,	#5
      002F72 77                   10774 	ld	(hl), a
      002F73 E1                   10775 	pop	hl
      002F74 7C                   10776 	ld	a, h
      002F75 F8 04                10777 	ldhl	sp,	#4
      002F77 32                   10778 	ld	(hl-), a
      002F78 2A                   10779 	ld	a, (hl+)
      002F79 5F                   10780 	ld	e, a
      002F7A 56                   10781 	ld	d, (hl)
      002F7B 1A                   10782 	ld	a, (de)
      002F7C 21rA3r00             10783 	ld	hl, #_yOverflow
      002F7F 5E                   10784 	ld	e, (hl)
      002F80 93                   10785 	sub	a, e
      002F81 F8 03                10786 	ldhl	sp,	#3
      002F83 F5                   10787 	push	af
      002F84 2A                   10788 	ld	a,	(hl+)
      002F85 66                   10789 	ld	h, (hl)
      002F86 6F                   10790 	ld	l, a
      002F87 F1                   10791 	pop	af
      002F88 77                   10792 	ld	(hl), a
                                  10793 ;src/main.c:1089: move_sprite(20, explosions[i].x, explosions[i].y+8);
      002F89 F8 03                10794 	ldhl	sp,#3
      002F8B 2A                   10795 	ld	a, (hl+)
      002F8C 5F                   10796 	ld	e, a
      002F8D 56                   10797 	ld	d, (hl)
      002F8E 1A                   10798 	ld	a, (de)
      002F8F C6 08                10799 	add	a, #0x08
      002F91 5F                   10800 	ld	e, a
      002F92 0A                   10801 	ld	a, (bc)
      002F93 57                   10802 	ld	d, a
                                  10803 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002F94 21r50r00             10804 	ld	hl, #(_shadow_OAM + 80)
                                  10805 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002F97 7B                   10806 	ld	a, e
      002F98 22                   10807 	ld	(hl+), a
      002F99 72                   10808 	ld	(hl), d
                                  10809 ;src/main.c:1090: move_sprite(21, explosions[i].x+8, explosions[i].y+8);
      002F9A F8 03                10810 	ldhl	sp,#3
      002F9C 2A                   10811 	ld	a, (hl+)
      002F9D 5F                   10812 	ld	e, a
      002F9E 56                   10813 	ld	d, (hl)
      002F9F 1A                   10814 	ld	a, (de)
      002FA0 C6 08                10815 	add	a, #0x08
      002FA2 5F                   10816 	ld	e, a
      002FA3 0A                   10817 	ld	a, (bc)
      002FA4 C6 08                10818 	add	a, #0x08
      002FA6 4F                   10819 	ld	c, a
                                  10820 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002FA7 21r54r00             10821 	ld	hl, #(_shadow_OAM + 84)
                                  10822 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002FAA 7B                   10823 	ld	a, e
      002FAB 22                   10824 	ld	(hl+), a
      002FAC 71                   10825 	ld	(hl), c
                                  10826 ;src/main.c:1092: explosions[i].frameCounter++;
      002FAD F8 05                10827 	ldhl	sp,#5
      002FAF 2A                   10828 	ld	a, (hl+)
      002FB0 5F                   10829 	ld	e, a
      002FB1 56                   10830 	ld	d, (hl)
      002FB2 21 04 00             10831 	ld	hl, #0x0004
      002FB5 19                   10832 	add	hl, de
      002FB6 4D                   10833 	ld	c, l
      002FB7 44                   10834 	ld	b, h
      002FB8 0A                   10835 	ld	a, (bc)
      002FB9 3C                   10836 	inc	a
      002FBA 5F                   10837 	ld	e, a
      002FBB 02                   10838 	ld	(bc), a
                                  10839 ;src/main.c:1093: if (explosions[i].frameCounter > EXPLFRAMETIME) {
      002FBC FArA5r0B             10840 	ld	a, (#_EXPLFRAMETIME)
      002FBF 93                   10841 	sub	a, e
      002FC0 30 7A                10842 	jr	NC, 00117$
                                  10843 ;src/main.c:1094: explosions[i].frameCounter = 0;
      002FC2 AF                   10844 	xor	a, a
      002FC3 02                   10845 	ld	(bc), a
                                  10846 ;src/main.c:1095: explosions[i].frame += 1; 
      002FC4 F8 05                10847 	ldhl	sp,#5
      002FC6 2A                   10848 	ld	a, (hl+)
      002FC7 5F                   10849 	ld	e, a
      002FC8 56                   10850 	ld	d, (hl)
      002FC9 21 03 00             10851 	ld	hl, #0x0003
      002FCC 19                   10852 	add	hl, de
      002FCD 33                   10853 	inc	sp
      002FCE 33                   10854 	inc	sp
      002FCF 5D                   10855 	ld	e, l
      002FD0 54                   10856 	ld	d, h
      002FD1 D5                   10857 	push	de
      002FD2 1A                   10858 	ld	a, (de)
      002FD3 4F                   10859 	ld	c, a
      002FD4 0C                   10860 	inc	c
      002FD5 E1                   10861 	pop	hl
      002FD6 E5                   10862 	push	hl
      002FD7 71                   10863 	ld	(hl), c
                                  10864 ;src/main.c:1096: if (explosions[i].frame > 3) {
      002FD8 D1                   10865 	pop	de
      002FD9 D5                   10866 	push	de
      002FDA 1A                   10867 	ld	a, (de)
      002FDB 4F                   10868 	ld	c, a
      002FDC 3E 03                10869 	ld	a, #0x03
      002FDE 91                   10870 	sub	a, c
      002FDF 30 13                10871 	jr	NC, 00102$
                                  10872 ;src/main.c:1097: explosions[i].visible = 0;
      002FE1 F8 05                10873 	ldhl	sp,	#5
      002FE3 2A                   10874 	ld	a,	(hl+)
      002FE4 66                   10875 	ld	h, (hl)
      002FE5 6F                   10876 	ld	l, a
      002FE6 36 00                10877 	ld	(hl), #0x00
                                  10878 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002FE8 21r52r00             10879 	ld	hl, #(_shadow_OAM + 82)
      002FEB 36 7F                10880 	ld	(hl), #0x7f
      002FED 21r56r00             10881 	ld	hl, #(_shadow_OAM + 86)
      002FF0 36 7F                10882 	ld	(hl), #0x7f
                                  10883 ;src/main.c:1099: set_sprite_tile(21, 0x7f);
      002FF2 18 48                10884 	jr	00117$
      002FF4                      10885 00102$:
                                  10886 ;src/main.c:1102: set_sprite_tile(20, explosions[i].tile + (explosions[i].frame *4));
      002FF4 F8 05                10887 	ldhl	sp,#5
      002FF6 2A                   10888 	ld	a, (hl+)
      002FF7 5F                   10889 	ld	e, a
      002FF8 56                   10890 	ld	d, (hl)
      002FF9 21 05 00             10891 	ld	hl, #0x0005
      002FFC 19                   10892 	add	hl, de
      002FFD E5                   10893 	push	hl
      002FFE 7D                   10894 	ld	a, l
      002FFF F8 04                10895 	ldhl	sp,	#4
      003001 77                   10896 	ld	(hl), a
      003002 E1                   10897 	pop	hl
      003003 7C                   10898 	ld	a, h
      003004 F8 03                10899 	ldhl	sp,	#3
      003006 32                   10900 	ld	(hl-), a
      003007 2A                   10901 	ld	a, (hl+)
      003008 5F                   10902 	ld	e, a
      003009 56                   10903 	ld	d, (hl)
      00300A 1A                   10904 	ld	a, (de)
      00300B F8 06                10905 	ldhl	sp,	#6
      00300D 32                   10906 	ld	(hl-), a
      00300E 71                   10907 	ld	(hl), c
      00300F 3A                   10908 	ld	a, (hl-)
      003010 87                   10909 	add	a, a
      003011 87                   10910 	add	a, a
      003012 22                   10911 	ld	(hl+), a
      003013 23                   10912 	inc	hl
      003014 3A                   10913 	ld	a, (hl-)
      003015 2B                   10914 	dec	hl
      003016 86                   10915 	add	a, (hl)
      003017 23                   10916 	inc	hl
      003018 23                   10917 	inc	hl
      003019 77                   10918 	ld	(hl), a
                                  10919 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00301A 11r52r00             10920 	ld	de, #(_shadow_OAM + 82)
      00301D 7E                   10921 	ld	a, (hl)
      00301E 12                   10922 	ld	(de), a
                                  10923 ;src/main.c:1103: set_sprite_tile(21, explosions[i].tile+(explosions[i].frame *4) +2);
      00301F F8 02                10924 	ldhl	sp,#2
      003021 2A                   10925 	ld	a, (hl+)
      003022 5F                   10926 	ld	e, a
      003023 56                   10927 	ld	d, (hl)
      003024 1A                   10928 	ld	a, (de)
      003025 F8 06                10929 	ldhl	sp,	#6
      003027 32                   10930 	ld	(hl-), a
      003028 D1                   10931 	pop	de
      003029 D5                   10932 	push	de
      00302A 1A                   10933 	ld	a, (de)
      00302B 77                   10934 	ld	(hl), a
      00302C CB 26                10935 	sla	(hl)
      00302E CB 26                10936 	sla	(hl)
      003030 23                   10937 	inc	hl
      003031 3A                   10938 	ld	a, (hl-)
      003032 86                   10939 	add	a, (hl)
      003033 23                   10940 	inc	hl
      003034 77                   10941 	ld	(hl), a
      003035 34                   10942 	inc	(hl)
      003036 34                   10943 	inc	(hl)
                                  10944 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003037 11r56r00             10945 	ld	de, #(_shadow_OAM + 86)
      00303A 7E                   10946 	ld	a, (hl)
      00303B 12                   10947 	ld	(de), a
                                  10948 ;src/main.c:1103: set_sprite_tile(21, explosions[i].tile+(explosions[i].frame *4) +2);
      00303C                      10949 00117$:
                                  10950 ;src/main.c:1084: for (uint8_t i = 0; i < exCount; ++i) {
      00303C F8 07                10951 	ldhl	sp,	#7
      00303E 34                   10952 	inc	(hl)
      00303F C3r2Br2F             10953 	jp	00116$
      003042                      10954 00118$:
                                  10955 ;src/main.c:1108: }
      003042 E8 08                10956 	add	sp, #8
      003044 C9                   10957 	ret
                                  10958 ;src/main.c:1110: void initEnemyOptions() {
                                  10959 ;	---------------------------------
                                  10960 ; Function initEnemyOptions
                                  10961 ; ---------------------------------
      003045                      10962 _initEnemyOptions::
                                  10963 ;src/main.c:1111: enemyOptions[0] = blob;
      003045 11 12 00             10964 	ld	de, #0x0012
      003048 D5                   10965 	push	de
      003049 11r10r00             10966 	ld	de, #_blob
      00304C D5                   10967 	push	de
      00304D 11r00r00             10968 	ld	de, #_enemyOptions
      003050 D5                   10969 	push	de
      003051 CDr00r00             10970 	call	___memcpy
      003054 E8 06                10971 	add	sp, #6
                                  10972 ;src/main.c:1112: enemyOptions[1] = bomb;
      003056 11 12 00             10973 	ld	de, #0x0012
      003059 D5                   10974 	push	de
      00305A 11r22r00             10975 	ld	de, #_bomb
      00305D D5                   10976 	push	de
      00305E 11r12r00             10977 	ld	de, #(_enemyOptions + 18)
      003061 D5                   10978 	push	de
      003062 CDr00r00             10979 	call	___memcpy
      003065 E8 06                10980 	add	sp, #6
                                  10981 ;src/main.c:1113: enemyOptions[2] = miniship;
      003067 11 12 00             10982 	ld	de, #0x0012
      00306A D5                   10983 	push	de
      00306B 11r34r00             10984 	ld	de, #_miniship
      00306E D5                   10985 	push	de
      00306F 11r24r00             10986 	ld	de, #(_enemyOptions + 36)
      003072 D5                   10987 	push	de
      003073 CDr00r00             10988 	call	___memcpy
      003076 E8 06                10989 	add	sp, #6
                                  10990 ;src/main.c:1114: enemyOptions[3] = shieldship;
      003078 11 12 00             10991 	ld	de, #0x0012
      00307B D5                   10992 	push	de
      00307C 11r58r00             10993 	ld	de, #_shieldship
      00307F D5                   10994 	push	de
      003080 11r36r00             10995 	ld	de, #(_enemyOptions + 54)
      003083 D5                   10996 	push	de
      003084 CDr00r00             10997 	call	___memcpy
      003087 E8 06                10998 	add	sp, #6
                                  10999 ;src/main.c:1116: enemyOptions[4] = bigblob;
      003089 11 12 00             11000 	ld	de, #0x0012
      00308C D5                   11001 	push	de
      00308D 11r46r00             11002 	ld	de, #_bigblob
      003090 D5                   11003 	push	de
      003091 11r48r00             11004 	ld	de, #(_enemyOptions + 72)
      003094 D5                   11005 	push	de
      003095 CDr00r00             11006 	call	___memcpy
      003098 E8 06                11007 	add	sp, #6
                                  11008 ;src/main.c:1117: }
      00309A C9                   11009 	ret
                                  11010 ;src/main.c:1120: void initProjectiles() {
                                  11011 ;	---------------------------------
                                  11012 ; Function initProjectiles
                                  11013 ; ---------------------------------
      00309B                      11014 _initProjectiles::
                                  11015 ;src/main.c:1121: set_sprite_data(0x20, 17, ProjectileTiles); 
      00309B 11rE8r05             11016 	ld	de, #_ProjectileTiles
      00309E D5                   11017 	push	de
      00309F 21 20 11             11018 	ld	hl, #0x1120
      0030A2 E5                   11019 	push	hl
      0030A3 CDr00r00             11020 	call	_set_sprite_data
      0030A6 E8 04                11021 	add	sp, #4
                                  11022 ;src/main.c:1123: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0030A8 AF                   11023 	xor	a, a
      0030A9                      11024 00103$:
      0030A9 21r9Fr0B             11025 	ld	hl, #_PROJECTILECOUNT
      0030AC 4E                   11026 	ld	c, (hl)
      0030AD B9                   11027 	cp	a, c
      0030AE D0                   11028 	ret	NC
      0030AF 3C                   11029 	inc	a
                                  11030 ;src/main.c:1127: }
      0030B0 18 F7                11031 	jr	00103$
                                  11032 ;src/main.c:1129: void initGame() {
                                  11033 ;	---------------------------------
                                  11034 ; Function initGame
                                  11035 ; ---------------------------------
      0030B2                      11036 _initGame::
                                  11037 ;src/main.c:1132: xDir = 0;
      0030B2 21r93r00             11038 	ld	hl, #_xDir
      0030B5 36 00                11039 	ld	(hl), #0x00
                                  11040 ;src/main.c:1133: yDir = -1;
      0030B7 21r94r00             11041 	ld	hl, #_yDir
      0030BA 36 FF                11042 	ld	(hl), #0xff
                                  11043 ;src/main.c:1134: xSpeed = 0;
      0030BC 21r95r00             11044 	ld	hl, #_xSpeed
      0030BF 36 00                11045 	ld	(hl), #0x00
                                  11046 ;src/main.c:1135: ySpeed = 0;
      0030C1 21r96r00             11047 	ld	hl, #_ySpeed
      0030C4 36 00                11048 	ld	(hl), #0x00
                                  11049 ;src/main.c:1138: playerX = 80<<5;
      0030C6 21r97r00             11050 	ld	hl, #_playerX
      0030C9 36 00                11051 	ld	(hl), #0x00
      0030CB 23                   11052 	inc	hl
      0030CC 36 0A                11053 	ld	(hl), #0x0a
                                  11054 ;src/main.c:1139: playerY = 80<<5;
      0030CE 21r99r00             11055 	ld	hl, #_playerY
      0030D1 36 00                11056 	ld	(hl), #0x00
      0030D3 23                   11057 	inc	hl
      0030D4 36 0A                11058 	ld	(hl), #0x0a
                                  11059 ;src/main.c:1141: playerDrawX = 80;
      0030D6 21r9Br00             11060 	ld	hl, #_playerDrawX
      0030D9 36 50                11061 	ld	(hl), #0x50
                                  11062 ;src/main.c:1142: playerDrawY = 80;
      0030DB 21r9Cr00             11063 	ld	hl, #_playerDrawY
      0030DE 36 50                11064 	ld	(hl), #0x50
                                  11065 ;src/main.c:1145: bgX = 0;
      0030E0 AF                   11066 	xor	a, a
      0030E1 21r9Dr00             11067 	ld	hl, #_bgX
      0030E4 22                   11068 	ld	(hl+), a
      0030E5 77                   11069 	ld	(hl), a
                                  11070 ;src/main.c:1146: bgY = 0;
      0030E6 AF                   11071 	xor	a, a
      0030E7 21r9Fr00             11072 	ld	hl, #_bgY
      0030EA 22                   11073 	ld	(hl+), a
      0030EB 77                   11074 	ld	(hl), a
                                  11075 ;src/main.c:1148: hull = maxHull;
      0030EC FArA1r0B             11076 	ld	a, (#_maxHull)
      0030EF EArF6r00             11077 	ld	(#_hull),a
                                  11078 ;src/main.c:1149: shield = maxShield;
      0030F2 FArA2r0B             11079 	ld	a, (#_maxShield)
      0030F5 EArF7r00             11080 	ld	(#_shield),a
                                  11081 ;src/main.c:1151: DISPLAY_ON;
      0030F8 F0r00                11082 	ldh	a, (_LCDC_REG + 0)
      0030FA F6 80                11083 	or	a, #0x80
      0030FC E0r00                11084 	ldh	(_LCDC_REG + 0), a
                                  11085 ;src/main.c:1152: SPRITES_8x16;
      0030FE F0r00                11086 	ldh	a, (_LCDC_REG + 0)
      003100 F6 04                11087 	or	a, #0x04
      003102 E0r00                11088 	ldh	(_LCDC_REG + 0), a
                                  11089 ;src/main.c:1153: set_sprite_data(0, 12, Player1);
      003104 11r83r07             11090 	ld	de, #_Player1
      003107 D5                   11091 	push	de
      003108 21 00 0C             11092 	ld	hl, #0xc00
      00310B E5                   11093 	push	hl
      00310C CDr00r00             11094 	call	_set_sprite_data
      00310F E8 04                11095 	add	sp, #4
                                  11096 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003111 21r02r00             11097 	ld	hl, #(_shadow_OAM + 2)
      003114 36 00                11098 	ld	(hl), #0x00
      003116 21r06r00             11099 	ld	hl, #(_shadow_OAM + 6)
      003119 36 02                11100 	ld	(hl), #0x02
                                  11101 ;src/main.c:1159: SHOW_SPRITES;
      00311B F0r00                11102 	ldh	a, (_LCDC_REG + 0)
      00311D F6 02                11103 	or	a, #0x02
      00311F E0r00                11104 	ldh	(_LCDC_REG + 0), a
                                  11105 ;src/main.c:1163: font_init();
      003121 CDr00r00             11106 	call	_font_init
                                  11107 ;src/main.c:1165: min_font = font_load(font_min); // 36 tiles of characters
      003124 11r00r00             11108 	ld	de, #_font_min
      003127 D5                   11109 	push	de
      003128 CDr00r00             11110 	call	_font_load
      00312B E1                   11111 	pop	hl
      00312C 21rF8r00             11112 	ld	hl, #_min_font
      00312F 7B                   11113 	ld	a, e
      003130 22                   11114 	ld	(hl+), a
                                  11115 ;src/main.c:1166: font_set(min_font);
      003131 7A                   11116 	ld	a, d
      003132 32                   11117 	ld	(hl-), a
      003133 2A                   11118 	ld	a, (hl+)
      003134 5F                   11119 	ld	e, a
      003135 56                   11120 	ld	d, (hl)
      003136 D5                   11121 	push	de
      003137 CDr00r00             11122 	call	_font_set
      00313A E1                   11123 	pop	hl
                                  11124 ;src/main.c:1167: set_win_tiles(1,0,4,1,hullabel);
      00313B 11r00r00             11125 	ld	de, #_hullabel
      00313E D5                   11126 	push	de
      00313F 21 04 01             11127 	ld	hl, #0x104
      003142 E5                   11128 	push	hl
      003143 21 01 00             11129 	ld	hl, #0x01
      003146 E5                   11130 	push	hl
      003147 CDr00r00             11131 	call	_set_win_tiles
      00314A E8 06                11132 	add	sp, #6
                                  11133 ;src/main.c:1168: set_win_tiles(1,1,4,1,shieldlabel);
      00314C 11r04r00             11134 	ld	de, #_shieldlabel
      00314F D5                   11135 	push	de
      003150 21 04 01             11136 	ld	hl, #0x104
      003153 E5                   11137 	push	hl
      003154 21 01 01             11138 	ld	hl, #0x101
      003157 E5                   11139 	push	hl
      003158 CDr00r00             11140 	call	_set_win_tiles
      00315B E8 06                11141 	add	sp, #6
                                  11142 ;src/main.c:1173: set_bkg_data(0x50,1,healthblock);
      00315D 11r07r05             11143 	ld	de, #_healthblock
      003160 D5                   11144 	push	de
      003161 21 50 01             11145 	ld	hl, #0x150
      003164 E5                   11146 	push	hl
      003165 CDr00r00             11147 	call	_set_bkg_data
      003168 E8 04                11148 	add	sp, #4
                                  11149 ;src/main.c:1175: setHealthBar(0, hull);
      00316A FArF6r00             11150 	ld	a, (#_hull)
      00316D 67                   11151 	ld	h, a
      00316E 2E 00                11152 	ld	l, #0x00
      003170 E5                   11153 	push	hl
      003171 CDrA6r0B             11154 	call	_setHealthBar
      003174 E1                   11155 	pop	hl
                                  11156 ;src/main.c:1176: setHealthBar(1, shield);
      003175 FArF7r00             11157 	ld	a, (#_shield)
      003178 67                   11158 	ld	h, a
      003179 2E 01                11159 	ld	l, #0x01
      00317B E5                   11160 	push	hl
      00317C CDrA6r0B             11161 	call	_setHealthBar
      00317F E1                   11162 	pop	hl
                                  11163 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      003180 3E 07                11164 	ld	a, #0x07
      003182 E0r00                11165 	ldh	(_WX_REG + 0), a
      003184 3E 7E                11166 	ld	a, #0x7e
      003186 E0r00                11167 	ldh	(_WY_REG + 0), a
                                  11168 ;src/main.c:1183: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      003188 11r87r04             11169 	ld	de, #_backgroundtiles
      00318B D5                   11170 	push	de
      00318C 21 25 08             11171 	ld	hl, #0x825
      00318F E5                   11172 	push	hl
      003190 CDr00r00             11173 	call	_set_bkg_data
      003193 E8 04                11174 	add	sp, #4
                                  11175 ;src/main.c:1184: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      003195 11r87r00             11176 	ld	de, #_background1
      003198 D5                   11177 	push	de
      003199 21 20 20             11178 	ld	hl, #0x2020
      00319C E5                   11179 	push	hl
      00319D AF                   11180 	xor	a, a
      00319E 0F                   11181 	rrca
      00319F F5                   11182 	push	af
      0031A0 CDr00r00             11183 	call	_set_bkg_tiles
      0031A3 E8 06                11184 	add	sp, #6
                                  11185 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      0031A5 AF                   11186 	xor	a, a
      0031A6 E0r00                11187 	ldh	(_SCX_REG + 0), a
      0031A8 AF                   11188 	xor	a, a
      0031A9 E0r00                11189 	ldh	(_SCY_REG + 0), a
                                  11190 ;src/main.c:1190: set_bkg_data(0x51, 18, ProjectileTiles);
      0031AB 11rE8r05             11191 	ld	de, #_ProjectileTiles
      0031AE D5                   11192 	push	de
      0031AF 21 51 12             11193 	ld	hl, #0x1251
      0031B2 E5                   11194 	push	hl
      0031B3 CDr00r00             11195 	call	_set_bkg_data
      0031B6 E8 04                11196 	add	sp, #4
                                  11197 ;src/main.c:1192: set_win_tiles(10, 0,4,1,weaponlabel);
      0031B8 11r08r00             11198 	ld	de, #_weaponlabel
      0031BB D5                   11199 	push	de
      0031BC 21 04 01             11200 	ld	hl, #0x104
      0031BF E5                   11201 	push	hl
      0031C0 21 0A 00             11202 	ld	hl, #0x0a
      0031C3 E5                   11203 	push	hl
      0031C4 CDr00r00             11204 	call	_set_win_tiles
      0031C7 E8 06                11205 	add	sp, #6
                                  11206 ;src/main.c:1193: set_win_tiles(10, 1,4,1,scorelabel);
      0031C9 11r0Cr00             11207 	ld	de, #_scorelabel
      0031CC D5                   11208 	push	de
      0031CD 21 04 01             11209 	ld	hl, #0x104
      0031D0 E5                   11210 	push	hl
      0031D1 21 0A 01             11211 	ld	hl, #0x10a
      0031D4 E5                   11212 	push	hl
      0031D5 CDr00r00             11213 	call	_set_win_tiles
      0031D8 E8 06                11214 	add	sp, #6
                                  11215 ;src/main.c:1195: setGunIcon();
      0031DA CDr19r26             11216 	call	_setGunIcon
                                  11217 ;src/main.c:1196: SHOW_BKG;
      0031DD F0r00                11218 	ldh	a, (_LCDC_REG + 0)
      0031DF F6 01                11219 	or	a, #0x01
      0031E1 E0r00                11220 	ldh	(_LCDC_REG + 0), a
                                  11221 ;src/main.c:1197: SHOW_WIN;;
      0031E3 F0r00                11222 	ldh	a, (_LCDC_REG + 0)
      0031E5 F6 20                11223 	or	a, #0x20
      0031E7 E0r00                11224 	ldh	(_LCDC_REG + 0), a
                                  11225 ;src/main.c:1199: SCORE = MAKE_BCD(00000);
      0031E9 AF                   11226 	xor	a, a
      0031EA 21rB3r00             11227 	ld	hl, #_SCORE
      0031ED 22                   11228 	ld	(hl+), a
      0031EE 22                   11229 	ld	(hl+), a
      0031EF 22                   11230 	ld	(hl+), a
      0031F0 77                   11231 	ld	(hl), a
                                  11232 ;src/main.c:1200: updateScore();
      0031F1 CDrB7r0C             11233 	call	_updateScore
                                  11234 ;src/main.c:1201: missiles = 0;
      0031F4 21rA8r00             11235 	ld	hl, #_missiles
      0031F7 36 00                11236 	ld	(hl), #0x00
                                  11237 ;src/main.c:1202: MISSILES = MAKE_BCD(0);
      0031F9 AF                   11238 	xor	a, a
      0031FA 21rA9r00             11239 	ld	hl, #_MISSILES
      0031FD 22                   11240 	ld	(hl+), a
      0031FE 22                   11241 	ld	(hl+), a
      0031FF 22                   11242 	ld	(hl+), a
      003200 77                   11243 	ld	(hl), a
                                  11244 ;src/main.c:1203: updateMissileCount(0);
      003201 AF                   11245 	xor	a, a
      003202 F5                   11246 	push	af
      003203 33                   11247 	inc	sp
      003204 CDrE1r0C             11248 	call	_updateMissileCount
      003207 33                   11249 	inc	sp
                                  11250 ;src/main.c:1204: set_win_tiles(17, 0,1,1,gunMap+2);
      003208 11rB0r00             11251 	ld	de, #(_gunMap + 2)
      00320B D5                   11252 	push	de
      00320C 21 01 01             11253 	ld	hl, #0x101
      00320F E5                   11254 	push	hl
      003210 21 11 00             11255 	ld	hl, #0x11
      003213 E5                   11256 	push	hl
      003214 CDr00r00             11257 	call	_set_win_tiles
      003217 E8 06                11258 	add	sp, #6
                                  11259 ;src/main.c:1208: pickup = upgrade;//upgrade;
      003219 11 09 00             11260 	ld	de, #0x0009
      00321C D5                   11261 	push	de
      00321D 11r08r07             11262 	ld	de, #_upgrade
      003220 D5                   11263 	push	de
      003221 11rFAr00             11264 	ld	de, #_pickup
      003224 D5                   11265 	push	de
      003225 CDr00r00             11266 	call	___memcpy
      003228 E8 06                11267 	add	sp, #6
                                  11268 ;src/main.c:1210: set_sprite_data(0x70, 6, Pickups);
      00322A 11r23r07             11269 	ld	de, #_Pickups
      00322D D5                   11270 	push	de
      00322E 21 70 06             11271 	ld	hl, #0x670
      003231 E5                   11272 	push	hl
      003232 CDr00r00             11273 	call	_set_sprite_data
      003235 E8 04                11274 	add	sp, #4
                                  11275 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003237 21r0Er00             11276 	ld	hl, #(_shadow_OAM + 14)
      00323A 36 7F                11277 	ld	(hl), #0x7f
                                  11278 ;src/main.c:1214: move_sprite(3, pickup.x + 4, pickup.y + 12);
      00323C FArFDr00             11279 	ld	a, (#(_pickup + 3) + 0)
      00323F C6 0C                11280 	add	a, #0x0c
      003241 47                   11281 	ld	b, a
      003242 FArFBr00             11282 	ld	a, (#(_pickup + 1) + 0)
      003245 C6 04                11283 	add	a, #0x04
      003247 4F                   11284 	ld	c, a
                                  11285 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      003248 21r0Cr00             11286 	ld	hl, #(_shadow_OAM + 12)
                                  11287 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00324B 78                   11288 	ld	a, b
      00324C 22                   11289 	ld	(hl+), a
      00324D 71                   11290 	ld	(hl), c
                                  11291 ;src/main.c:1216: for (uint8_t i = 0; i<exCount; ++i) {
      00324E 0E 00                11292 	ld	c, #0x00
      003250                      11293 00109$:
      003250 79                   11294 	ld	a, c
      003251 21rBBr00             11295 	ld	hl, #_exCount
      003254 96                   11296 	sub	a, (hl)
      003255 30 1E                11297 	jr	NC, 00101$
                                  11298 ;src/main.c:1217: explosions[i] = ex;
      003257 06 00                11299 	ld	b, #0x00
      003259 69                   11300 	ld	l, c
      00325A 60                   11301 	ld	h, b
      00325B 29                   11302 	add	hl, hl
      00325C 09                   11303 	add	hl, bc
      00325D 29                   11304 	add	hl, hl
      00325E 11r03r01             11305 	ld	de, #_explosions
      003261 19                   11306 	add	hl, de
      003262 C5                   11307 	push	bc
      003263 11 06 00             11308 	ld	de, #0x0006
      003266 D5                   11309 	push	de
      003267 11r83r08             11310 	ld	de, #_ex
      00326A D5                   11311 	push	de
      00326B E5                   11312 	push	hl
      00326C CDr00r00             11313 	call	___memcpy
      00326F E8 06                11314 	add	sp, #6
      003271 C1                   11315 	pop	bc
                                  11316 ;src/main.c:1216: for (uint8_t i = 0; i<exCount; ++i) {
      003272 0C                   11317 	inc	c
      003273 18 DB                11318 	jr	00109$
      003275                      11319 00101$:
                                  11320 ;src/main.c:1219: set_sprite_data(exTiles[0], 16, Ex1);
      003275 FArBDr00             11321 	ld	a, (#_exTiles + 0)
      003278 11r89r08             11322 	ld	de, #_Ex1
      00327B D5                   11323 	push	de
      00327C 26 10                11324 	ld	h, #0x10
                                  11325 ;	spillPairReg hl
                                  11326 ;	spillPairReg hl
      00327E E5                   11327 	push	hl
      00327F 33                   11328 	inc	sp
      003280 F5                   11329 	push	af
      003281 33                   11330 	inc	sp
      003282 CDr00r00             11331 	call	_set_sprite_data
      003285 E8 04                11332 	add	sp, #4
                                  11333 ;src/main.c:1220: set_sprite_data(exTiles[1], 16, Ex2);
      003287 FArBEr00             11334 	ld	a, (#(_exTiles + 1) + 0)
      00328A 11r89r09             11335 	ld	de, #_Ex2
      00328D D5                   11336 	push	de
      00328E 26 10                11337 	ld	h, #0x10
                                  11338 ;	spillPairReg hl
                                  11339 ;	spillPairReg hl
      003290 E5                   11340 	push	hl
      003291 33                   11341 	inc	sp
      003292 F5                   11342 	push	af
      003293 33                   11343 	inc	sp
      003294 CDr00r00             11344 	call	_set_sprite_data
      003297 E8 04                11345 	add	sp, #4
                                  11346 ;src/main.c:1221: set_sprite_data(exTiles[2], 16, Ex3);
      003299 FArBFr00             11347 	ld	a, (#(_exTiles + 2) + 0)
      00329C 11r89r0A             11348 	ld	de, #_Ex3
      00329F D5                   11349 	push	de
      0032A0 26 10                11350 	ld	h, #0x10
                                  11351 ;	spillPairReg hl
                                  11352 ;	spillPairReg hl
      0032A2 E5                   11353 	push	hl
      0032A3 33                   11354 	inc	sp
      0032A4 F5                   11355 	push	af
      0032A5 33                   11356 	inc	sp
      0032A6 CDr00r00             11357 	call	_set_sprite_data
      0032A9 E8 04                11358 	add	sp, #4
                                  11359 ;src/main.c:1225: }
      0032AB C9                   11360 	ret
                                  11361 ;src/main.c:1227: void main(){
                                  11362 ;	---------------------------------
                                  11363 ; Function main
                                  11364 ; ---------------------------------
      0032AC                      11365 _main::
                                  11366 ;src/main.c:1230: initEnemyOptions();
      0032AC CDr45r30             11367 	call	_initEnemyOptions
                                  11368 ;src/main.c:1233: STAT_REG = 0x45;
      0032AF 3E 45                11369 	ld	a, #0x45
      0032B1 E0r00                11370 	ldh	(_STAT_REG + 0), a
                                  11371 ;src/main.c:1234: LYC_REG = 0x7e; //line 126
      0032B3 3E 7E                11372 	ld	a, #0x7e
      0032B5 E0r00                11373 	ldh	(_LYC_REG + 0), a
                                  11374 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      0032B7 F3                   11375 	di
                                  11376 ;src/main.c:1236: add_LCD(interruptLCD);
      0032B8 11r00r00             11377 	ld	de, #_interruptLCD
      0032BB D5                   11378 	push	de
      0032BC CDr00r00             11379 	call	_add_LCD
      0032BF 33                   11380 	inc	sp
      0032C0 33                   11381 	inc	sp
                                  11382 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      0032C1 FB                   11383 	ei
                                  11384 ;src/main.c:1238: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      0032C2 3E 03                11385 	ld	a, #0x03
      0032C4 F5                   11386 	push	af
      0032C5 33                   11387 	inc	sp
      0032C6 CDr00r00             11388 	call	_set_interrupts
      0032C9 33                   11389 	inc	sp
                                  11390 ;src/main.c:1242: NR52_REG = 0x80; // sound on 
      0032CA 3E 80                11391 	ld	a, #0x80
      0032CC E0r00                11392 	ldh	(_NR52_REG + 0), a
                                  11393 ;src/main.c:1243: NR50_REG = 0x77; // volume
      0032CE 3E 77                11394 	ld	a, #0x77
      0032D0 E0r00                11395 	ldh	(_NR50_REG + 0), a
                                  11396 ;src/main.c:1244: NR51_REG = 0xFF; // all channels
      0032D2 3E FF                11397 	ld	a, #0xff
      0032D4 E0r00                11398 	ldh	(_NR51_REG + 0), a
                                  11399 ;src/main.c:1248: waitpad(J_A);
      0032D6 3E 10                11400 	ld	a, #0x10
      0032D8 F5                   11401 	push	af
      0032D9 33                   11402 	inc	sp
      0032DA CDr00r00             11403 	call	_waitpad
      0032DD 33                   11404 	inc	sp
                                  11405 ;src/main.c:1249: uint16_t seed = LY_REG;
      0032DE F0r00                11406 	ldh	a, (_LY_REG + 0)
      0032E0 4F                   11407 	ld	c, a
      0032E1 06 00                11408 	ld	b, #0x00
                                  11409 ;src/main.c:1250: seed |= (uint16_t)DIV_REG << 8;
      0032E3 F0r00                11410 	ldh	a, (_DIV_REG + 0)
      0032E5 5F                   11411 	ld	e, a
      0032E6 AF                   11412 	xor	a, a
      0032E7 B1                   11413 	or	a, c
      0032E8 4F                   11414 	ld	c, a
      0032E9 7B                   11415 	ld	a, e
      0032EA B0                   11416 	or	a, b
      0032EB 47                   11417 	ld	b, a
                                  11418 ;src/main.c:1251: initrand(seed);
      0032EC C5                   11419 	push	bc
      0032ED CDr00r00             11420 	call	_initrand
      0032F0 E1                   11421 	pop	hl
                                  11422 ;src/main.c:1256: initGame();
      0032F1 CDrB2r30             11423 	call	_initGame
                                  11424 ;src/main.c:1257: initEnemies(1);
      0032F4 3E 01                11425 	ld	a, #0x01
      0032F6 F5                   11426 	push	af
      0032F7 33                   11427 	inc	sp
      0032F8 CDrFBr0F             11428 	call	_initEnemies
      0032FB 33                   11429 	inc	sp
                                  11430 ;src/main.c:1258: initProjectiles();
      0032FC CDr9Br30             11431 	call	_initProjectiles
                                  11432 ;src/main.c:1260: while(1) {
      0032FF                      11433 00119$:
                                  11434 ;src/main.c:1261: SHOW_SPRITES;
      0032FF F0r00                11435 	ldh	a, (_LCDC_REG + 0)
      003301 F6 02                11436 	or	a, #0x02
      003303 E0r00                11437 	ldh	(_LCDC_REG + 0), a
                                  11438 ;src/main.c:1263: joydata = joypad(); // query for button states
      003305 CDr00r00             11439 	call	_joypad
      003308 21rF5r00             11440 	ld	hl, #_joydata
      00330B 73                   11441 	ld	(hl), e
                                  11442 ;src/main.c:1265: updateDirection(); // set player direction
      00330C CDr6Er0D             11443 	call	_updateDirection
                                  11444 ;src/main.c:1268: move(); 
      00330F CDrC5r19             11445 	call	_move
                                  11446 ;src/main.c:1270: updateEnemyPositions();
      003312 CDr66r11             11447 	call	_updateEnemyPositions
                                  11448 ;src/main.c:1273: checkCollision(); 
      003315 CDr49r21             11449 	call	_checkCollision
                                  11450 ;src/main.c:916: if (shield < maxShield) {
      003318 21rA2r0B             11451 	ld	hl, #_maxShield
      00331B 4E                   11452 	ld	c, (hl)
      00331C 59                   11453 	ld	e, c
      00331D 21rF7r00             11454 	ld	hl, #_shield
      003320 56                   11455 	ld	d, (hl)
      003321 7E                   11456 	ld	a, (hl)
      003322 91                   11457 	sub	a, c
      003323 CB 7B                11458 	bit	7, e
      003325 28 07                11459 	jr	Z, 00186$
      003327 CB 7A                11460 	bit	7, d
      003329 20 08                11461 	jr	NZ, 00187$
      00332B BF                   11462 	cp	a, a
      00332C 18 05                11463 	jr	00187$
      00332E                      11464 00186$:
      00332E CB 7A                11465 	bit	7, d
      003330 28 01                11466 	jr	Z, 00187$
      003332 37                   11467 	scf
      003333                      11468 00187$:
      003333 30 04                11469 	jr	NC, 00127$
                                  11470 ;src/main.c:917: shield += 1;
      003335 21rF7r00             11471 	ld	hl, #_shield
      003338 34                   11472 	inc	(hl)
      003339                      11473 00127$:
                                  11474 ;src/main.c:919: setHealthBar(0, hull);
      003339 FArF6r00             11475 	ld	a, (#_hull)
      00333C 67                   11476 	ld	h, a
      00333D 2E 00                11477 	ld	l, #0x00
      00333F E5                   11478 	push	hl
      003340 CDrA6r0B             11479 	call	_setHealthBar
      003343 E1                   11480 	pop	hl
                                  11481 ;src/main.c:920: setHealthBar(1, shield);
      003344 FArF7r00             11482 	ld	a, (#_shield)
      003347 67                   11483 	ld	h, a
      003348 2E 01                11484 	ld	l, #0x01
      00334A E5                   11485 	push	hl
      00334B CDrA6r0B             11486 	call	_setHealthBar
      00334E E1                   11487 	pop	hl
                                  11488 ;src/main.c:1278: if (joydata & J_B && fireCooldown == 0) {
      00334F FArF5r00             11489 	ld	a, (#_joydata)
      003352 CB 6F                11490 	bit	5, a
      003354 28 09                11491 	jr	Z, 00102$
      003356 FAr92r00             11492 	ld	a, (#_fireCooldown)
      003359 B7                   11493 	or	a, a
      00335A 20 03                11494 	jr	NZ, 00102$
                                  11495 ;src/main.c:1279: fire();
      00335C CDr4Cr26             11496 	call	_fire
      00335F                      11497 00102$:
                                  11498 ;src/main.c:1281: if (fireCooldown > 0) {
      00335F 21r92r00             11499 	ld	hl, #_fireCooldown
      003362 7E                   11500 	ld	a, (hl)
      003363 B7                   11501 	or	a, a
      003364 28 01                11502 	jr	Z, 00105$
                                  11503 ;src/main.c:1282: --fireCooldown;
      003366 35                   11504 	dec	(hl)
      003367                      11505 00105$:
                                  11506 ;src/main.c:1285: if (joydata & J_SELECT && switchDelay == 0) {
      003367 FArF5r00             11507 	ld	a, (#_joydata)
      00336A CB 77                11508 	bit	6, a
      00336C 28 24                11509 	jr	Z, 00112$
      00336E FArADr00             11510 	ld	a, (#_switchDelay)
      003371 B7                   11511 	or	a, a
      003372 20 1E                11512 	jr	NZ, 00112$
                                  11513 ;src/main.c:1286: if (currentGun == 0) {
      003374 21rA7r00             11514 	ld	hl, #_currentGun
      003377 7E                   11515 	ld	a, (hl)
      003378 B7                   11516 	or	a, a
      003379 20 04                11517 	jr	NZ, 00109$
                                  11518 ;src/main.c:1287: currentGun = 1;
      00337B 36 01                11519 	ld	(hl), #0x01
      00337D 18 0B                11520 	jr	00110$
      00337F                      11521 00109$:
                                  11522 ;src/main.c:1289: else if (currentGun == 1) {
      00337F FArA7r00             11523 	ld	a, (#_currentGun)
      003382 3D                   11524 	dec	a
      003383 20 05                11525 	jr	NZ, 00110$
                                  11526 ;src/main.c:1290: currentGun = 0;
      003385 21rA7r00             11527 	ld	hl, #_currentGun
      003388 36 00                11528 	ld	(hl), #0x00
      00338A                      11529 00110$:
                                  11530 ;src/main.c:1292: setGunIcon();
      00338A CDr19r26             11531 	call	_setGunIcon
                                  11532 ;src/main.c:1293: switchDelay = 30;
      00338D 21rADr00             11533 	ld	hl, #_switchDelay
      003390 36 1E                11534 	ld	(hl), #0x1e
      003392                      11535 00112$:
                                  11536 ;src/main.c:1295: if (switchDelay != 0) {
      003392 21rADr00             11537 	ld	hl, #_switchDelay
      003395 7E                   11538 	ld	a, (hl)
      003396 B7                   11539 	or	a, a
      003397 28 01                11540 	jr	Z, 00115$
                                  11541 ;src/main.c:1296: switchDelay--;
      003399 35                   11542 	dec	(hl)
      00339A                      11543 00115$:
                                  11544 ;src/main.c:1298: moveProjectiles();
      00339A CDrF5r2B             11545 	call	_moveProjectiles
                                  11546 ;src/main.c:1299: tickPickups();
      00339D CDr56r2D             11547 	call	_tickPickups
                                  11548 ;src/main.c:1300: tickEx();
      0033A0 CDr25r2F             11549 	call	_tickEx
                                  11550 ;src/main.c:1304: if (hull > 100) {
      0033A3 3E 64                11551 	ld	a, #0x64
      0033A5 21rF6r00             11552 	ld	hl, #_hull
      0033A8 96                   11553 	sub	a, (hl)
      0033A9 30 02                11554 	jr	NC, 00117$
                                  11555 ;src/main.c:1305: hull = 0;
      0033AB 36 00                11556 	ld	(hl), #0x00
      0033AD                      11557 00117$:
                                  11558 ;src/main.c:1308: SHOW_WIN;	
      0033AD F0r00                11559 	ldh	a, (_LCDC_REG + 0)
      0033AF F6 20                11560 	or	a, #0x20
      0033B1 E0r00                11561 	ldh	(_LCDC_REG + 0), a
                                  11562 ;src/main.c:1309: wait_vbl_done(); // Idle until next frame
      0033B3 CDr00r00             11563 	call	_wait_vbl_done
                                  11564 ;src/main.c:1314: }
      0033B6 C3rFFr32             11565 	jp	00119$
                                  11566 	.area _CODE
                                  11567 	.area _INITIALIZER
      000000                      11568 __xinit__hullabel:
      000000 12                   11569 	.db #0x12	; 18
      000001 1F                   11570 	.db #0x1f	; 31
      000002 16                   11571 	.db #0x16	; 22
      000003 16                   11572 	.db #0x16	; 22
      000004                      11573 __xinit__shieldlabel:
      000004 1D                   11574 	.db #0x1d	; 29
      000005 12                   11575 	.db #0x12	; 18
      000006 16                   11576 	.db #0x16	; 22
      000007 0E                   11577 	.db #0x0e	; 14
      000008                      11578 __xinit__weaponlabel:
      000008 21                   11579 	.db #0x21	; 33
      000009 0F                   11580 	.db #0x0f	; 15
      00000A 1A                   11581 	.db #0x1a	; 26
      00000B 18                   11582 	.db #0x18	; 24
      00000C                      11583 __xinit__scorelabel:
      00000C 1D                   11584 	.db #0x1d	; 29
      00000D 0D                   11585 	.db #0x0d	; 13
      00000E 1C                   11586 	.db #0x1c	; 28
      00000F 0F                   11587 	.db #0x0f	; 15
      000010                      11588 __xinit__blob:
      000010 00 00                11589 	.dw #0x0000
      000012 00 00                11590 	.dw #0x0000
      000014 00                   11591 	.db #0x00	;  0
      000015 00                   11592 	.db #0x00	;  0
      000016 40                   11593 	.db #0x40	; 64
      000017 00                   11594 	.db #0x00	; 0
      000018 01                   11595 	.db #0x01	; 1
      000019 01                   11596 	.db #0x01	; 1
      00001A 01                   11597 	.db #0x01	; 1
      00001B 32                   11598 	.db #0x32	; 50	'2'
      00001C 03                   11599 	.db #0x03	;  3
      00001D 01                   11600 	.db #0x01	; 1
      00001E 00                   11601 	.db #0x00	;  0
      00001F 00                   11602 	.db #0x00	;  0
      000020 32 00                11603 	.dw #0x0032
      000022                      11604 __xinit__bomb:
      000022 00 00                11605 	.dw #0x0000
      000024 00 00                11606 	.dw #0x0000
      000026 00                   11607 	.db #0x00	;  0
      000027 00                   11608 	.db #0x00	;  0
      000028 42                   11609 	.db #0x42	; 66	'B'
      000029 00                   11610 	.db #0x00	; 0
      00002A 01                   11611 	.db #0x01	; 1
      00002B 01                   11612 	.db #0x01	; 1
      00002C 01                   11613 	.db #0x01	; 1
      00002D 32                   11614 	.db #0x32	; 50	'2'
      00002E 05                   11615 	.db #0x05	;  5
      00002F 01                   11616 	.db #0x01	; 1
      000030 00                   11617 	.db #0x00	;  0
      000031 00                   11618 	.db #0x00	;  0
      000032 32 00                11619 	.dw #0x0032
      000034                      11620 __xinit__miniship:
      000034 00 00                11621 	.dw #0x0000
      000036 00 00                11622 	.dw #0x0000
      000038 00                   11623 	.db #0x00	;  0
      000039 00                   11624 	.db #0x00	;  0
      00003A 44                   11625 	.db #0x44	; 68	'D'
      00003B 00                   11626 	.db #0x00	; 0
      00003C 01                   11627 	.db #0x01	; 1
      00003D 01                   11628 	.db #0x01	; 1
      00003E 01                   11629 	.db #0x01	; 1
      00003F 32                   11630 	.db #0x32	; 50	'2'
      000040 05                   11631 	.db #0x05	;  5
      000041 01                   11632 	.db #0x01	; 1
      000042 00                   11633 	.db #0x00	;  0
      000043 00                   11634 	.db #0x00	;  0
      000044 32 00                11635 	.dw #0x0032
      000046                      11636 __xinit__bigblob:
      000046 00 00                11637 	.dw #0x0000
      000048 00 00                11638 	.dw #0x0000
      00004A 00                   11639 	.db #0x00	;  0
      00004B 00                   11640 	.db #0x00	;  0
      00004C 50                   11641 	.db #0x50	; 80	'P'
      00004D 52                   11642 	.db #0x52	; 82	'R'
      00004E 02                   11643 	.db #0x02	; 2
      00004F 01                   11644 	.db #0x01	; 1
      000050 01                   11645 	.db #0x01	; 1
      000051 32                   11646 	.db #0x32	; 50	'2'
      000052 03                   11647 	.db #0x03	;  3
      000053 01                   11648 	.db #0x01	; 1
      000054 00                   11649 	.db #0x00	;  0
      000055 00                   11650 	.db #0x00	;  0
      000056 64 00                11651 	.dw #0x0064
      000058                      11652 __xinit__shieldship:
      000058 00 00                11653 	.dw #0x0000
      00005A 00 00                11654 	.dw #0x0000
      00005C 00                   11655 	.db #0x00	;  0
      00005D 00                   11656 	.db #0x00	;  0
      00005E 54                   11657 	.db #0x54	; 84	'T'
      00005F 56                   11658 	.db #0x56	; 86	'V'
      000060 02                   11659 	.db #0x02	; 2
      000061 01                   11660 	.db #0x01	; 1
      000062 01                   11661 	.db #0x01	; 1
      000063 32                   11662 	.db #0x32	; 50	'2'
      000064 03                   11663 	.db #0x03	;  3
      000065 01                   11664 	.db #0x01	; 1
      000066 00                   11665 	.db #0x00	;  0
      000067 00                   11666 	.db #0x00	;  0
      000068 46 00                11667 	.dw #0x0046
      00006A                      11668 __xinit__singleGun:
      00006A 00 00                11669 	.dw #0x0000
      00006C 00 00                11670 	.dw #0x0000
      00006E 00                   11671 	.db #0x00	;  0
      00006F 00                   11672 	.db #0x00	;  0
      000070 FF                   11673 	.db #0xff	; -1
      000071 02                   11674 	.db #0x02	; 2
      000072 32 00                11675 	.dw #0x0032
      000074 01                   11676 	.db #0x01	; 1
      000075 0F                   11677 	.db #0x0f	; 15
      000076 20                   11678 	.db #0x20	; 32
      000077                      11679 __xinit__doubleGun:
      000077 00 00                11680 	.dw #0x0000
      000079 00 00                11681 	.dw #0x0000
      00007B 00                   11682 	.db #0x00	;  0
      00007C 00                   11683 	.db #0x00	;  0
      00007D FF                   11684 	.db #0xff	; -1
      00007E 02                   11685 	.db #0x02	; 2
      00007F 46 00                11686 	.dw #0x0046
      000081 01                   11687 	.db #0x01	; 1
      000082 0F                   11688 	.db #0x0f	; 15
      000083 26                   11689 	.db #0x26	; 38
      000084                      11690 __xinit__missile:
      000084 00 00                11691 	.dw #0x0000
      000086 00 00                11692 	.dw #0x0000
      000088 00                   11693 	.db #0x00	;  0
      000089 00                   11694 	.db #0x00	;  0
      00008A FF                   11695 	.db #0xff	; -1
      00008B 01                   11696 	.db #0x01	; 1
      00008C 64 00                11697 	.dw #0x0064
      00008E 01                   11698 	.db #0x01	; 1
      00008F 1E                   11699 	.db #0x1e	; 30
      000090 2C                   11700 	.db #0x2c	; 44
      000091                      11701 __xinit__oldestProjectile:
      000091 00                   11702 	.db #0x00	; 0
      000092                      11703 __xinit__fireCooldown:
      000092 00                   11704 	.db #0x00	; 0
      000093                      11705 __xinit__xDir:
      000093 00                   11706 	.db #0x00	;  0
      000094                      11707 __xinit__yDir:
      000094 FF                   11708 	.db #0xff	; -1
      000095                      11709 __xinit__xSpeed:
      000095 00                   11710 	.db #0x00	;  0
      000096                      11711 __xinit__ySpeed:
      000096 00                   11712 	.db #0x00	;  0
      000097                      11713 __xinit__playerX:
      000097 00 0A                11714 	.dw #0x0a00
      000099                      11715 __xinit__playerY:
      000099 00 0A                11716 	.dw #0x0a00
      00009B                      11717 __xinit__playerDrawX:
      00009B 50                   11718 	.db #0x50	; 80	'P'
      00009C                      11719 __xinit__playerDrawY:
      00009C 50                   11720 	.db #0x50	; 80	'P'
      00009D                      11721 __xinit__bgX:
      00009D 00 00                11722 	.dw #0x0000
      00009F                      11723 __xinit__bgY:
      00009F 00 00                11724 	.dw #0x0000
      0000A1                      11725 __xinit__xOverflow:
      0000A1 00 00                11726 	.dw #0x0000
      0000A3                      11727 __xinit__yOverflow:
      0000A3 00 00                11728 	.dw #0x0000
      0000A5                      11729 __xinit__enemyCollisionCount:
      0000A5 00                   11730 	.db #0x00	; 0
      0000A6                      11731 __xinit__gunLevel:
      0000A6 00                   11732 	.db #0x00	; 0
      0000A7                      11733 __xinit__currentGun:
      0000A7 00                   11734 	.db #0x00	; 0
      0000A8                      11735 __xinit__missiles:
      0000A8 00                   11736 	.db #0x00	; 0
      0000A9                      11737 __xinit__MISSILES:
      0000A9 00 00 00 00          11738 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000AD                      11739 __xinit__switchDelay:
      0000AD 00                   11740 	.db #0x00	; 0
      0000AE                      11741 __xinit__gunMap:
      0000AE 53                   11742 	.db #0x53	; 83	'S'
      0000AF 5B                   11743 	.db #0x5b	; 91
      0000B0 61                   11744 	.db #0x61	; 97	'a'
      0000B1                      11745 __xinit__score:
      0000B1 00 00                11746 	.dw #0x0000
      0000B3                      11747 __xinit__SCORE:
      0000B3 00 00 00 00          11748 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000B7                      11749 __xinit__INCREMENT:
      0000B7 01 00 00 00          11750 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      0000BB                      11751 __xinit__exCount:
      0000BB 03                   11752 	.db #0x03	; 3
      0000BC                      11753 __xinit__oldestEx:
      0000BC 00                   11754 	.db #0x00	; 0
      0000BD                      11755 __xinit__exTiles:
      0000BD 80                   11756 	.db #0x80	; 128
      0000BE 90                   11757 	.db #0x90	; 144
      0000BF A0                   11758 	.db #0xa0	; 160
                                  11759 	.area _CABS (ABS)
