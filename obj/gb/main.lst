                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _initEnemyOptions
                                     15 	.globl _tickPickups
                                     16 	.globl _moveProjectiles
                                     17 	.globl _fire
                                     18 	.globl _setGunIcon
                                     19 	.globl _checkCollision
                                     20 	.globl _killEnemy
                                     21 	.globl _spawnPickup
                                     22 	.globl _takeDamage
                                     23 	.globl _move
                                     24 	.globl _updateEnemyPositions
                                     25 	.globl _initEnemies
                                     26 	.globl _playSound
                                     27 	.globl _updateDirection
                                     28 	.globl _incrementScore
                                     29 	.globl _updateMissileCount
                                     30 	.globl _updateScore
                                     31 	.globl _setHealthBar
                                     32 	.globl _interruptLCD
                                     33 	.globl _bcd2text
                                     34 	.globl _bcd_sub
                                     35 	.globl _bcd_add
                                     36 	.globl _rand
                                     37 	.globl _initrand
                                     38 	.globl _font_set
                                     39 	.globl _font_load
                                     40 	.globl _font_init
                                     41 	.globl _set_sprite_data
                                     42 	.globl _set_win_tiles
                                     43 	.globl _set_bkg_tiles
                                     44 	.globl _set_bkg_data
                                     45 	.globl _wait_vbl_done
                                     46 	.globl _set_interrupts
                                     47 	.globl _waitpad
                                     48 	.globl _joypad
                                     49 	.globl _add_LCD
                                     50 	.globl _INCREMENT
                                     51 	.globl _SCORE
                                     52 	.globl _score
                                     53 	.globl _gunMap
                                     54 	.globl _switchDelay
                                     55 	.globl _MISSILES
                                     56 	.globl _missiles
                                     57 	.globl _currentGun
                                     58 	.globl _gunLevel
                                     59 	.globl _enemyCollisionCount
                                     60 	.globl _yOverflow
                                     61 	.globl _xOverflow
                                     62 	.globl _bgY
                                     63 	.globl _bgX
                                     64 	.globl _playerDrawY
                                     65 	.globl _playerDrawX
                                     66 	.globl _playerY
                                     67 	.globl _playerX
                                     68 	.globl _ySpeed
                                     69 	.globl _xSpeed
                                     70 	.globl _yDir
                                     71 	.globl _xDir
                                     72 	.globl _fireCooldown
                                     73 	.globl _oldestProjectile
                                     74 	.globl _missile
                                     75 	.globl _doubleGun
                                     76 	.globl _singleGun
                                     77 	.globl _shieldship
                                     78 	.globl _bigblob
                                     79 	.globl _miniship
                                     80 	.globl _bomb
                                     81 	.globl _blob
                                     82 	.globl _scorelabel
                                     83 	.globl _weaponlabel
                                     84 	.globl _shieldlabel
                                     85 	.globl _hullabel
                                     86 	.globl _pickup
                                     87 	.globl _min_font
                                     88 	.globl _shield
                                     89 	.globl _hull
                                     90 	.globl _joydata
                                     91 	.globl _projectiles
                                     92 	.globl _enemies
                                     93 	.globl _enemyOptions
                                     94 	.globl _SPLASHDROPOFF
                                     95 	.globl _MAXGUNLEVEL
                                     96 	.globl _maxShield
                                     97 	.globl _maxHull
                                     98 	.globl _PLAYERSIZE
                                     99 	.globl _PROJECTILECOUNT
                                    100 	.globl _ySpawnPositions
                                    101 	.globl _xSpawnPositions
                                    102 	.globl _ENEMYCOUNT
                                    103 	.globl _EMPTYSPRITE
                                    104 	.globl _BLANK
                                    105 	.globl _BLANKSIZE
                                    106 	.globl _Player1
                                    107 	.globl _Pickups
                                    108 	.globl _health
                                    109 	.globl _ammo
                                    110 	.globl _upgrade
                                    111 	.globl _ProjectileTiles
                                    112 	.globl _largeenemies
                                    113 	.globl _enemy1
                                    114 	.globl _enemyOptionCount
                                    115 	.globl _healthblock
                                    116 	.globl _backgroundtiles
                                    117 	.globl _background1
                                    118 	.globl _cross
                                    119 ;--------------------------------------------------------
                                    120 ; special function registers
                                    121 ;--------------------------------------------------------
                                    122 ;--------------------------------------------------------
                                    123 ; ram data
                                    124 ;--------------------------------------------------------
                                    125 	.area _DATA
      000000                        126 _enemyOptions::
      000000                        127 	.ds 90
      00005A                        128 _enemies::
      00005A                        129 	.ds 90
      0000B4                        130 _projectiles::
      0000B4                        131 	.ds 65
      0000F5                        132 _joydata::
      0000F5                        133 	.ds 1
      0000F6                        134 _hull::
      0000F6                        135 	.ds 1
      0000F7                        136 _shield::
      0000F7                        137 	.ds 1
      0000F8                        138 _min_font::
      0000F8                        139 	.ds 2
      0000FA                        140 _pickup::
      0000FA                        141 	.ds 9
                                    142 ;--------------------------------------------------------
                                    143 ; ram data
                                    144 ;--------------------------------------------------------
                                    145 	.area _INITIALIZED
      000000                        146 _hullabel::
      000000                        147 	.ds 4
      000004                        148 _shieldlabel::
      000004                        149 	.ds 4
      000008                        150 _weaponlabel::
      000008                        151 	.ds 4
      00000C                        152 _scorelabel::
      00000C                        153 	.ds 4
      000010                        154 _blob::
      000010                        155 	.ds 18
      000022                        156 _bomb::
      000022                        157 	.ds 18
      000034                        158 _miniship::
      000034                        159 	.ds 18
      000046                        160 _bigblob::
      000046                        161 	.ds 18
      000058                        162 _shieldship::
      000058                        163 	.ds 18
      00006A                        164 _singleGun::
      00006A                        165 	.ds 13
      000077                        166 _doubleGun::
      000077                        167 	.ds 13
      000084                        168 _missile::
      000084                        169 	.ds 13
      000091                        170 _oldestProjectile::
      000091                        171 	.ds 1
      000092                        172 _fireCooldown::
      000092                        173 	.ds 1
      000093                        174 _xDir::
      000093                        175 	.ds 1
      000094                        176 _yDir::
      000094                        177 	.ds 1
      000095                        178 _xSpeed::
      000095                        179 	.ds 1
      000096                        180 _ySpeed::
      000096                        181 	.ds 1
      000097                        182 _playerX::
      000097                        183 	.ds 2
      000099                        184 _playerY::
      000099                        185 	.ds 2
      00009B                        186 _playerDrawX::
      00009B                        187 	.ds 1
      00009C                        188 _playerDrawY::
      00009C                        189 	.ds 1
      00009D                        190 _bgX::
      00009D                        191 	.ds 2
      00009F                        192 _bgY::
      00009F                        193 	.ds 2
      0000A1                        194 _xOverflow::
      0000A1                        195 	.ds 2
      0000A3                        196 _yOverflow::
      0000A3                        197 	.ds 2
      0000A5                        198 _enemyCollisionCount::
      0000A5                        199 	.ds 1
      0000A6                        200 _gunLevel::
      0000A6                        201 	.ds 1
      0000A7                        202 _currentGun::
      0000A7                        203 	.ds 1
      0000A8                        204 _missiles::
      0000A8                        205 	.ds 1
      0000A9                        206 _MISSILES::
      0000A9                        207 	.ds 4
      0000AD                        208 _switchDelay::
      0000AD                        209 	.ds 1
      0000AE                        210 _gunMap::
      0000AE                        211 	.ds 3
      0000B1                        212 _score::
      0000B1                        213 	.ds 2
      0000B3                        214 _SCORE::
      0000B3                        215 	.ds 4
      0000B7                        216 _INCREMENT::
      0000B7                        217 	.ds 4
                                    218 ;--------------------------------------------------------
                                    219 ; absolute external ram data
                                    220 ;--------------------------------------------------------
                                    221 	.area _DABS (ABS)
                                    222 ;--------------------------------------------------------
                                    223 ; global & static initialisations
                                    224 ;--------------------------------------------------------
                                    225 	.area _HOME
                                    226 	.area _GSINIT
                                    227 	.area _GSFINAL
                                    228 	.area _GSINIT
                                    229 ;--------------------------------------------------------
                                    230 ; Home
                                    231 ;--------------------------------------------------------
                                    232 	.area _HOME
                                    233 	.area _HOME
                                    234 ;--------------------------------------------------------
                                    235 ; code
                                    236 ;--------------------------------------------------------
                                    237 	.area _CODE
                                    238 ;src/main.c:137: void interruptLCD()
                                    239 ;	---------------------------------
                                    240 ; Function interruptLCD
                                    241 ; ---------------------------------
      000000                        242 _interruptLCD::
                                    243 ;src/main.c:139: HIDE_SPRITES;
      000000 F0r00                  244 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  245 	and	a, #0xfd
      000004 E0r00                  246 	ldh	(_LCDC_REG + 0), a
                                    247 ;src/main.c:140: }
      000006 C9                     248 	ret
      000007                        249 _cross:
      000007 18                     250 	.db #0x18	; 24
      000008 18                     251 	.db #0x18	; 24
      000009 18                     252 	.db #0x18	; 24
      00000A 18                     253 	.db #0x18	; 24
      00000B 3C                     254 	.db #0x3c	; 60
      00000C 3C                     255 	.db #0x3c	; 60
      00000D 3C                     256 	.db #0x3c	; 60
      00000E 3C                     257 	.db #0x3c	; 60
      00000F 7E                     258 	.db #0x7e	; 126
      000010 7E                     259 	.db #0x7e	; 126
      000011 7E                     260 	.db #0x7e	; 126
      000012 7E                     261 	.db #0x7e	; 126
      000013 FF                     262 	.db #0xff	; 255
      000014 FF                     263 	.db #0xff	; 255
      000015 FF                     264 	.db #0xff	; 255
      000016 FF                     265 	.db #0xff	; 255
      000017 0F                     266 	.db #0x0f	; 15
      000018 0F                     267 	.db #0x0f	; 15
      000019 3F                     268 	.db #0x3f	; 63
      00001A 3F                     269 	.db #0x3f	; 63
      00001B FF                     270 	.db #0xff	; 255
      00001C FF                     271 	.db #0xff	; 255
      00001D FF                     272 	.db #0xff	; 255
      00001E FF                     273 	.db #0xff	; 255
      00001F 7E                     274 	.db #0x7e	; 126
      000020 7E                     275 	.db #0x7e	; 126
      000021 3E                     276 	.db #0x3e	; 62
      000022 3E                     277 	.db #0x3e	; 62
      000023 1C                     278 	.db #0x1c	; 28
      000024 1C                     279 	.db #0x1c	; 28
      000025 0C                     280 	.db #0x0c	; 12
      000026 0C                     281 	.db #0x0c	; 12
      000027 C0                     282 	.db #0xc0	; 192
      000028 C0                     283 	.db #0xc0	; 192
      000029 F0                     284 	.db #0xf0	; 240
      00002A F0                     285 	.db #0xf0	; 240
      00002B FC                     286 	.db #0xfc	; 252
      00002C FC                     287 	.db #0xfc	; 252
      00002D FF                     288 	.db #0xff	; 255
      00002E FF                     289 	.db #0xff	; 255
      00002F FF                     290 	.db #0xff	; 255
      000030 FF                     291 	.db #0xff	; 255
      000031 FC                     292 	.db #0xfc	; 252
      000032 FC                     293 	.db #0xfc	; 252
      000033 F0                     294 	.db #0xf0	; 240
      000034 F0                     295 	.db #0xf0	; 240
      000035 C0                     296 	.db #0xc0	; 192
      000036 C0                     297 	.db #0xc0	; 192
      000037 0C                     298 	.db #0x0c	; 12
      000038 0C                     299 	.db #0x0c	; 12
      000039 1C                     300 	.db #0x1c	; 28
      00003A 1C                     301 	.db #0x1c	; 28
      00003B 3E                     302 	.db #0x3e	; 62
      00003C 3E                     303 	.db #0x3e	; 62
      00003D 7E                     304 	.db #0x7e	; 126
      00003E 7E                     305 	.db #0x7e	; 126
      00003F FF                     306 	.db #0xff	; 255
      000040 FF                     307 	.db #0xff	; 255
      000041 FF                     308 	.db #0xff	; 255
      000042 FF                     309 	.db #0xff	; 255
      000043 3F                     310 	.db #0x3f	; 63
      000044 3F                     311 	.db #0x3f	; 63
      000045 0F                     312 	.db #0x0f	; 15
      000046 0F                     313 	.db #0x0f	; 15
      000047 FF                     314 	.db #0xff	; 255
      000048 FF                     315 	.db #0xff	; 255
      000049 FF                     316 	.db #0xff	; 255
      00004A FF                     317 	.db #0xff	; 255
      00004B 7E                     318 	.db #0x7e	; 126
      00004C 7E                     319 	.db #0x7e	; 126
      00004D 7E                     320 	.db #0x7e	; 126
      00004E 7E                     321 	.db #0x7e	; 126
      00004F 3C                     322 	.db #0x3c	; 60
      000050 3C                     323 	.db #0x3c	; 60
      000051 3C                     324 	.db #0x3c	; 60
      000052 3C                     325 	.db #0x3c	; 60
      000053 18                     326 	.db #0x18	; 24
      000054 18                     327 	.db #0x18	; 24
      000055 18                     328 	.db #0x18	; 24
      000056 18                     329 	.db #0x18	; 24
      000057 30                     330 	.db #0x30	; 48	'0'
      000058 30                     331 	.db #0x30	; 48	'0'
      000059 38                     332 	.db #0x38	; 56	'8'
      00005A 38                     333 	.db #0x38	; 56	'8'
      00005B 7C                     334 	.db #0x7c	; 124
      00005C 7C                     335 	.db #0x7c	; 124
      00005D 7E                     336 	.db #0x7e	; 126
      00005E 7E                     337 	.db #0x7e	; 126
      00005F FF                     338 	.db #0xff	; 255
      000060 FF                     339 	.db #0xff	; 255
      000061 FF                     340 	.db #0xff	; 255
      000062 FF                     341 	.db #0xff	; 255
      000063 FC                     342 	.db #0xfc	; 252
      000064 FC                     343 	.db #0xfc	; 252
      000065 F0                     344 	.db #0xf0	; 240
      000066 F0                     345 	.db #0xf0	; 240
      000067 03                     346 	.db #0x03	; 3
      000068 03                     347 	.db #0x03	; 3
      000069 0F                     348 	.db #0x0f	; 15
      00006A 0F                     349 	.db #0x0f	; 15
      00006B 3F                     350 	.db #0x3f	; 63
      00006C 3F                     351 	.db #0x3f	; 63
      00006D FF                     352 	.db #0xff	; 255
      00006E FF                     353 	.db #0xff	; 255
      00006F FF                     354 	.db #0xff	; 255
      000070 FF                     355 	.db #0xff	; 255
      000071 3F                     356 	.db #0x3f	; 63
      000072 3F                     357 	.db #0x3f	; 63
      000073 0F                     358 	.db #0x0f	; 15
      000074 0F                     359 	.db #0x0f	; 15
      000075 03                     360 	.db #0x03	; 3
      000076 03                     361 	.db #0x03	; 3
      000077 F0                     362 	.db #0xf0	; 240
      000078 F0                     363 	.db #0xf0	; 240
      000079 FC                     364 	.db #0xfc	; 252
      00007A FC                     365 	.db #0xfc	; 252
      00007B FF                     366 	.db #0xff	; 255
      00007C FF                     367 	.db #0xff	; 255
      00007D FF                     368 	.db #0xff	; 255
      00007E FF                     369 	.db #0xff	; 255
      00007F 7E                     370 	.db #0x7e	; 126
      000080 7E                     371 	.db #0x7e	; 126
      000081 7C                     372 	.db #0x7c	; 124
      000082 7C                     373 	.db #0x7c	; 124
      000083 38                     374 	.db #0x38	; 56	'8'
      000084 38                     375 	.db #0x38	; 56	'8'
      000085 30                     376 	.db #0x30	; 48	'0'
      000086 30                     377 	.db #0x30	; 48	'0'
      000087                        378 _background1:
      000087 26                     379 	.db #0x26	; 38
      000088 26                     380 	.db #0x26	; 38
      000089 26                     381 	.db #0x26	; 38
      00008A 26                     382 	.db #0x26	; 38
      00008B 26                     383 	.db #0x26	; 38
      00008C 26                     384 	.db #0x26	; 38
      00008D 26                     385 	.db #0x26	; 38
      00008E 26                     386 	.db #0x26	; 38
      00008F 26                     387 	.db #0x26	; 38
      000090 26                     388 	.db #0x26	; 38
      000091 26                     389 	.db #0x26	; 38
      000092 2A                     390 	.db #0x2a	; 42
      000093 29                     391 	.db #0x29	; 41
      000094 26                     392 	.db #0x26	; 38
      000095 26                     393 	.db #0x26	; 38
      000096 26                     394 	.db #0x26	; 38
      000097 26                     395 	.db #0x26	; 38
      000098 26                     396 	.db #0x26	; 38
      000099 26                     397 	.db #0x26	; 38
      00009A 26                     398 	.db #0x26	; 38
      00009B 2C                     399 	.db #0x2c	; 44
      00009C 26                     400 	.db #0x26	; 38
      00009D 26                     401 	.db #0x26	; 38
      00009E 26                     402 	.db #0x26	; 38
      00009F 26                     403 	.db #0x26	; 38
      0000A0 26                     404 	.db #0x26	; 38
      0000A1 26                     405 	.db #0x26	; 38
      0000A2 26                     406 	.db #0x26	; 38
      0000A3 26                     407 	.db #0x26	; 38
      0000A4 26                     408 	.db #0x26	; 38
      0000A5 26                     409 	.db #0x26	; 38
      0000A6 26                     410 	.db #0x26	; 38
      0000A7 26                     411 	.db #0x26	; 38
      0000A8 2B                     412 	.db #0x2b	; 43
      0000A9 26                     413 	.db #0x26	; 38
      0000AA 26                     414 	.db #0x26	; 38
      0000AB 26                     415 	.db #0x26	; 38
      0000AC 26                     416 	.db #0x26	; 38
      0000AD 26                     417 	.db #0x26	; 38
      0000AE 26                     418 	.db #0x26	; 38
      0000AF 26                     419 	.db #0x26	; 38
      0000B0 26                     420 	.db #0x26	; 38
      0000B1 26                     421 	.db #0x26	; 38
      0000B2 26                     422 	.db #0x26	; 38
      0000B3 26                     423 	.db #0x26	; 38
      0000B4 26                     424 	.db #0x26	; 38
      0000B5 26                     425 	.db #0x26	; 38
      0000B6 26                     426 	.db #0x26	; 38
      0000B7 26                     427 	.db #0x26	; 38
      0000B8 26                     428 	.db #0x26	; 38
      0000B9 26                     429 	.db #0x26	; 38
      0000BA 26                     430 	.db #0x26	; 38
      0000BB 26                     431 	.db #0x26	; 38
      0000BC 26                     432 	.db #0x26	; 38
      0000BD 26                     433 	.db #0x26	; 38
      0000BE 26                     434 	.db #0x26	; 38
      0000BF 26                     435 	.db #0x26	; 38
      0000C0 26                     436 	.db #0x26	; 38
      0000C1 26                     437 	.db #0x26	; 38
      0000C2 26                     438 	.db #0x26	; 38
      0000C3 26                     439 	.db #0x26	; 38
      0000C4 26                     440 	.db #0x26	; 38
      0000C5 26                     441 	.db #0x26	; 38
      0000C6 26                     442 	.db #0x26	; 38
      0000C7 26                     443 	.db #0x26	; 38
      0000C8 26                     444 	.db #0x26	; 38
      0000C9 26                     445 	.db #0x26	; 38
      0000CA 26                     446 	.db #0x26	; 38
      0000CB 26                     447 	.db #0x26	; 38
      0000CC 26                     448 	.db #0x26	; 38
      0000CD 26                     449 	.db #0x26	; 38
      0000CE 26                     450 	.db #0x26	; 38
      0000CF 26                     451 	.db #0x26	; 38
      0000D0 26                     452 	.db #0x26	; 38
      0000D1 26                     453 	.db #0x26	; 38
      0000D2 26                     454 	.db #0x26	; 38
      0000D3 26                     455 	.db #0x26	; 38
      0000D4 26                     456 	.db #0x26	; 38
      0000D5 26                     457 	.db #0x26	; 38
      0000D6 26                     458 	.db #0x26	; 38
      0000D7 26                     459 	.db #0x26	; 38
      0000D8 26                     460 	.db #0x26	; 38
      0000D9 26                     461 	.db #0x26	; 38
      0000DA 26                     462 	.db #0x26	; 38
      0000DB 26                     463 	.db #0x26	; 38
      0000DC 26                     464 	.db #0x26	; 38
      0000DD 26                     465 	.db #0x26	; 38
      0000DE 26                     466 	.db #0x26	; 38
      0000DF 26                     467 	.db #0x26	; 38
      0000E0 26                     468 	.db #0x26	; 38
      0000E1 26                     469 	.db #0x26	; 38
      0000E2 26                     470 	.db #0x26	; 38
      0000E3 26                     471 	.db #0x26	; 38
      0000E4 26                     472 	.db #0x26	; 38
      0000E5 26                     473 	.db #0x26	; 38
      0000E6 26                     474 	.db #0x26	; 38
      0000E7 26                     475 	.db #0x26	; 38
      0000E8 26                     476 	.db #0x26	; 38
      0000E9 26                     477 	.db #0x26	; 38
      0000EA 26                     478 	.db #0x26	; 38
      0000EB 26                     479 	.db #0x26	; 38
      0000EC 26                     480 	.db #0x26	; 38
      0000ED 26                     481 	.db #0x26	; 38
      0000EE 26                     482 	.db #0x26	; 38
      0000EF 26                     483 	.db #0x26	; 38
      0000F0 26                     484 	.db #0x26	; 38
      0000F1 26                     485 	.db #0x26	; 38
      0000F2 26                     486 	.db #0x26	; 38
      0000F3 26                     487 	.db #0x26	; 38
      0000F4 26                     488 	.db #0x26	; 38
      0000F5 26                     489 	.db #0x26	; 38
      0000F6 26                     490 	.db #0x26	; 38
      0000F7 26                     491 	.db #0x26	; 38
      0000F8 2B                     492 	.db #0x2b	; 43
      0000F9 26                     493 	.db #0x26	; 38
      0000FA 26                     494 	.db #0x26	; 38
      0000FB 26                     495 	.db #0x26	; 38
      0000FC 26                     496 	.db #0x26	; 38
      0000FD 26                     497 	.db #0x26	; 38
      0000FE 26                     498 	.db #0x26	; 38
      0000FF 2B                     499 	.db #0x2b	; 43
      000100 26                     500 	.db #0x26	; 38
      000101 26                     501 	.db #0x26	; 38
      000102 26                     502 	.db #0x26	; 38
      000103 26                     503 	.db #0x26	; 38
      000104 26                     504 	.db #0x26	; 38
      000105 26                     505 	.db #0x26	; 38
      000106 26                     506 	.db #0x26	; 38
      000107 26                     507 	.db #0x26	; 38
      000108 26                     508 	.db #0x26	; 38
      000109 26                     509 	.db #0x26	; 38
      00010A 26                     510 	.db #0x26	; 38
      00010B 26                     511 	.db #0x26	; 38
      00010C 2B                     512 	.db #0x2b	; 43
      00010D 26                     513 	.db #0x26	; 38
      00010E 26                     514 	.db #0x26	; 38
      00010F 26                     515 	.db #0x26	; 38
      000110 26                     516 	.db #0x26	; 38
      000111 26                     517 	.db #0x26	; 38
      000112 26                     518 	.db #0x26	; 38
      000113 26                     519 	.db #0x26	; 38
      000114 2C                     520 	.db #0x2c	; 44
      000115 26                     521 	.db #0x26	; 38
      000116 26                     522 	.db #0x26	; 38
      000117 26                     523 	.db #0x26	; 38
      000118 26                     524 	.db #0x26	; 38
      000119 26                     525 	.db #0x26	; 38
      00011A 26                     526 	.db #0x26	; 38
      00011B 26                     527 	.db #0x26	; 38
      00011C 26                     528 	.db #0x26	; 38
      00011D 26                     529 	.db #0x26	; 38
      00011E 26                     530 	.db #0x26	; 38
      00011F 26                     531 	.db #0x26	; 38
      000120 26                     532 	.db #0x26	; 38
      000121 26                     533 	.db #0x26	; 38
      000122 26                     534 	.db #0x26	; 38
      000123 26                     535 	.db #0x26	; 38
      000124 26                     536 	.db #0x26	; 38
      000125 26                     537 	.db #0x26	; 38
      000126 26                     538 	.db #0x26	; 38
      000127 26                     539 	.db #0x26	; 38
      000128 26                     540 	.db #0x26	; 38
      000129 2C                     541 	.db #0x2c	; 44
      00012A 26                     542 	.db #0x26	; 38
      00012B 26                     543 	.db #0x26	; 38
      00012C 26                     544 	.db #0x26	; 38
      00012D 26                     545 	.db #0x26	; 38
      00012E 25                     546 	.db #0x25	; 37
      00012F 26                     547 	.db #0x26	; 38
      000130 26                     548 	.db #0x26	; 38
      000131 26                     549 	.db #0x26	; 38
      000132 26                     550 	.db #0x26	; 38
      000133 26                     551 	.db #0x26	; 38
      000134 26                     552 	.db #0x26	; 38
      000135 26                     553 	.db #0x26	; 38
      000136 26                     554 	.db #0x26	; 38
      000137 26                     555 	.db #0x26	; 38
      000138 26                     556 	.db #0x26	; 38
      000139 26                     557 	.db #0x26	; 38
      00013A 26                     558 	.db #0x26	; 38
      00013B 26                     559 	.db #0x26	; 38
      00013C 2C                     560 	.db #0x2c	; 44
      00013D 26                     561 	.db #0x26	; 38
      00013E 26                     562 	.db #0x26	; 38
      00013F 26                     563 	.db #0x26	; 38
      000140 26                     564 	.db #0x26	; 38
      000141 26                     565 	.db #0x26	; 38
      000142 26                     566 	.db #0x26	; 38
      000143 26                     567 	.db #0x26	; 38
      000144 2B                     568 	.db #0x2b	; 43
      000145 26                     569 	.db #0x26	; 38
      000146 26                     570 	.db #0x26	; 38
      000147 26                     571 	.db #0x26	; 38
      000148 26                     572 	.db #0x26	; 38
      000149 26                     573 	.db #0x26	; 38
      00014A 26                     574 	.db #0x26	; 38
      00014B 26                     575 	.db #0x26	; 38
      00014C 26                     576 	.db #0x26	; 38
      00014D 26                     577 	.db #0x26	; 38
      00014E 26                     578 	.db #0x26	; 38
      00014F 26                     579 	.db #0x26	; 38
      000150 26                     580 	.db #0x26	; 38
      000151 26                     581 	.db #0x26	; 38
      000152 26                     582 	.db #0x26	; 38
      000153 26                     583 	.db #0x26	; 38
      000154 26                     584 	.db #0x26	; 38
      000155 26                     585 	.db #0x26	; 38
      000156 26                     586 	.db #0x26	; 38
      000157 26                     587 	.db #0x26	; 38
      000158 26                     588 	.db #0x26	; 38
      000159 26                     589 	.db #0x26	; 38
      00015A 26                     590 	.db #0x26	; 38
      00015B 26                     591 	.db #0x26	; 38
      00015C 26                     592 	.db #0x26	; 38
      00015D 26                     593 	.db #0x26	; 38
      00015E 26                     594 	.db #0x26	; 38
      00015F 26                     595 	.db #0x26	; 38
      000160 2C                     596 	.db #0x2c	; 44
      000161 26                     597 	.db #0x26	; 38
      000162 26                     598 	.db #0x26	; 38
      000163 26                     599 	.db #0x26	; 38
      000164 26                     600 	.db #0x26	; 38
      000165 26                     601 	.db #0x26	; 38
      000166 26                     602 	.db #0x26	; 38
      000167 26                     603 	.db #0x26	; 38
      000168 26                     604 	.db #0x26	; 38
      000169 26                     605 	.db #0x26	; 38
      00016A 26                     606 	.db #0x26	; 38
      00016B 26                     607 	.db #0x26	; 38
      00016C 26                     608 	.db #0x26	; 38
      00016D 26                     609 	.db #0x26	; 38
      00016E 26                     610 	.db #0x26	; 38
      00016F 26                     611 	.db #0x26	; 38
      000170 26                     612 	.db #0x26	; 38
      000171 26                     613 	.db #0x26	; 38
      000172 26                     614 	.db #0x26	; 38
      000173 26                     615 	.db #0x26	; 38
      000174 26                     616 	.db #0x26	; 38
      000175 26                     617 	.db #0x26	; 38
      000176 26                     618 	.db #0x26	; 38
      000177 26                     619 	.db #0x26	; 38
      000178 26                     620 	.db #0x26	; 38
      000179 26                     621 	.db #0x26	; 38
      00017A 26                     622 	.db #0x26	; 38
      00017B 26                     623 	.db #0x26	; 38
      00017C 26                     624 	.db #0x26	; 38
      00017D 26                     625 	.db #0x26	; 38
      00017E 26                     626 	.db #0x26	; 38
      00017F 26                     627 	.db #0x26	; 38
      000180 26                     628 	.db #0x26	; 38
      000181 26                     629 	.db #0x26	; 38
      000182 26                     630 	.db #0x26	; 38
      000183 26                     631 	.db #0x26	; 38
      000184 26                     632 	.db #0x26	; 38
      000185 26                     633 	.db #0x26	; 38
      000186 26                     634 	.db #0x26	; 38
      000187 26                     635 	.db #0x26	; 38
      000188 26                     636 	.db #0x26	; 38
      000189 26                     637 	.db #0x26	; 38
      00018A 26                     638 	.db #0x26	; 38
      00018B 26                     639 	.db #0x26	; 38
      00018C 26                     640 	.db #0x26	; 38
      00018D 26                     641 	.db #0x26	; 38
      00018E 26                     642 	.db #0x26	; 38
      00018F 26                     643 	.db #0x26	; 38
      000190 26                     644 	.db #0x26	; 38
      000191 26                     645 	.db #0x26	; 38
      000192 26                     646 	.db #0x26	; 38
      000193 26                     647 	.db #0x26	; 38
      000194 26                     648 	.db #0x26	; 38
      000195 2B                     649 	.db #0x2b	; 43
      000196 26                     650 	.db #0x26	; 38
      000197 26                     651 	.db #0x26	; 38
      000198 26                     652 	.db #0x26	; 38
      000199 26                     653 	.db #0x26	; 38
      00019A 26                     654 	.db #0x26	; 38
      00019B 26                     655 	.db #0x26	; 38
      00019C 26                     656 	.db #0x26	; 38
      00019D 26                     657 	.db #0x26	; 38
      00019E 26                     658 	.db #0x26	; 38
      00019F 26                     659 	.db #0x26	; 38
      0001A0 26                     660 	.db #0x26	; 38
      0001A1 26                     661 	.db #0x26	; 38
      0001A2 26                     662 	.db #0x26	; 38
      0001A3 26                     663 	.db #0x26	; 38
      0001A4 26                     664 	.db #0x26	; 38
      0001A5 26                     665 	.db #0x26	; 38
      0001A6 25                     666 	.db #0x25	; 37
      0001A7 26                     667 	.db #0x26	; 38
      0001A8 26                     668 	.db #0x26	; 38
      0001A9 26                     669 	.db #0x26	; 38
      0001AA 2B                     670 	.db #0x2b	; 43
      0001AB 26                     671 	.db #0x26	; 38
      0001AC 26                     672 	.db #0x26	; 38
      0001AD 26                     673 	.db #0x26	; 38
      0001AE 26                     674 	.db #0x26	; 38
      0001AF 26                     675 	.db #0x26	; 38
      0001B0 26                     676 	.db #0x26	; 38
      0001B1 26                     677 	.db #0x26	; 38
      0001B2 26                     678 	.db #0x26	; 38
      0001B3 26                     679 	.db #0x26	; 38
      0001B4 26                     680 	.db #0x26	; 38
      0001B5 26                     681 	.db #0x26	; 38
      0001B6 26                     682 	.db #0x26	; 38
      0001B7 26                     683 	.db #0x26	; 38
      0001B8 26                     684 	.db #0x26	; 38
      0001B9 26                     685 	.db #0x26	; 38
      0001BA 26                     686 	.db #0x26	; 38
      0001BB 26                     687 	.db #0x26	; 38
      0001BC 26                     688 	.db #0x26	; 38
      0001BD 26                     689 	.db #0x26	; 38
      0001BE 26                     690 	.db #0x26	; 38
      0001BF 26                     691 	.db #0x26	; 38
      0001C0 26                     692 	.db #0x26	; 38
      0001C1 26                     693 	.db #0x26	; 38
      0001C2 26                     694 	.db #0x26	; 38
      0001C3 26                     695 	.db #0x26	; 38
      0001C4 2B                     696 	.db #0x2b	; 43
      0001C5 26                     697 	.db #0x26	; 38
      0001C6 26                     698 	.db #0x26	; 38
      0001C7 26                     699 	.db #0x26	; 38
      0001C8 26                     700 	.db #0x26	; 38
      0001C9 26                     701 	.db #0x26	; 38
      0001CA 26                     702 	.db #0x26	; 38
      0001CB 26                     703 	.db #0x26	; 38
      0001CC 26                     704 	.db #0x26	; 38
      0001CD 26                     705 	.db #0x26	; 38
      0001CE 26                     706 	.db #0x26	; 38
      0001CF 26                     707 	.db #0x26	; 38
      0001D0 26                     708 	.db #0x26	; 38
      0001D1 26                     709 	.db #0x26	; 38
      0001D2 26                     710 	.db #0x26	; 38
      0001D3 26                     711 	.db #0x26	; 38
      0001D4 26                     712 	.db #0x26	; 38
      0001D5 26                     713 	.db #0x26	; 38
      0001D6 26                     714 	.db #0x26	; 38
      0001D7 26                     715 	.db #0x26	; 38
      0001D8 26                     716 	.db #0x26	; 38
      0001D9 26                     717 	.db #0x26	; 38
      0001DA 27                     718 	.db #0x27	; 39
      0001DB 28                     719 	.db #0x28	; 40
      0001DC 26                     720 	.db #0x26	; 38
      0001DD 26                     721 	.db #0x26	; 38
      0001DE 26                     722 	.db #0x26	; 38
      0001DF 26                     723 	.db #0x26	; 38
      0001E0 26                     724 	.db #0x26	; 38
      0001E1 26                     725 	.db #0x26	; 38
      0001E2 26                     726 	.db #0x26	; 38
      0001E3 26                     727 	.db #0x26	; 38
      0001E4 26                     728 	.db #0x26	; 38
      0001E5 26                     729 	.db #0x26	; 38
      0001E6 26                     730 	.db #0x26	; 38
      0001E7 26                     731 	.db #0x26	; 38
      0001E8 26                     732 	.db #0x26	; 38
      0001E9 26                     733 	.db #0x26	; 38
      0001EA 26                     734 	.db #0x26	; 38
      0001EB 26                     735 	.db #0x26	; 38
      0001EC 26                     736 	.db #0x26	; 38
      0001ED 26                     737 	.db #0x26	; 38
      0001EE 26                     738 	.db #0x26	; 38
      0001EF 26                     739 	.db #0x26	; 38
      0001F0 26                     740 	.db #0x26	; 38
      0001F1 26                     741 	.db #0x26	; 38
      0001F2 26                     742 	.db #0x26	; 38
      0001F3 26                     743 	.db #0x26	; 38
      0001F4 26                     744 	.db #0x26	; 38
      0001F5 26                     745 	.db #0x26	; 38
      0001F6 26                     746 	.db #0x26	; 38
      0001F7 26                     747 	.db #0x26	; 38
      0001F8 26                     748 	.db #0x26	; 38
      0001F9 26                     749 	.db #0x26	; 38
      0001FA 2A                     750 	.db #0x2a	; 42
      0001FB 29                     751 	.db #0x29	; 41
      0001FC 26                     752 	.db #0x26	; 38
      0001FD 26                     753 	.db #0x26	; 38
      0001FE 26                     754 	.db #0x26	; 38
      0001FF 26                     755 	.db #0x26	; 38
      000200 26                     756 	.db #0x26	; 38
      000201 26                     757 	.db #0x26	; 38
      000202 26                     758 	.db #0x26	; 38
      000203 26                     759 	.db #0x26	; 38
      000204 26                     760 	.db #0x26	; 38
      000205 26                     761 	.db #0x26	; 38
      000206 26                     762 	.db #0x26	; 38
      000207 26                     763 	.db #0x26	; 38
      000208 26                     764 	.db #0x26	; 38
      000209 26                     765 	.db #0x26	; 38
      00020A 26                     766 	.db #0x26	; 38
      00020B 26                     767 	.db #0x26	; 38
      00020C 26                     768 	.db #0x26	; 38
      00020D 26                     769 	.db #0x26	; 38
      00020E 27                     770 	.db #0x27	; 39
      00020F 28                     771 	.db #0x28	; 40
      000210 26                     772 	.db #0x26	; 38
      000211 26                     773 	.db #0x26	; 38
      000212 26                     774 	.db #0x26	; 38
      000213 26                     775 	.db #0x26	; 38
      000214 26                     776 	.db #0x26	; 38
      000215 26                     777 	.db #0x26	; 38
      000216 26                     778 	.db #0x26	; 38
      000217 26                     779 	.db #0x26	; 38
      000218 26                     780 	.db #0x26	; 38
      000219 26                     781 	.db #0x26	; 38
      00021A 26                     782 	.db #0x26	; 38
      00021B 26                     783 	.db #0x26	; 38
      00021C 26                     784 	.db #0x26	; 38
      00021D 26                     785 	.db #0x26	; 38
      00021E 26                     786 	.db #0x26	; 38
      00021F 2C                     787 	.db #0x2c	; 44
      000220 26                     788 	.db #0x26	; 38
      000221 26                     789 	.db #0x26	; 38
      000222 26                     790 	.db #0x26	; 38
      000223 26                     791 	.db #0x26	; 38
      000224 26                     792 	.db #0x26	; 38
      000225 26                     793 	.db #0x26	; 38
      000226 26                     794 	.db #0x26	; 38
      000227 26                     795 	.db #0x26	; 38
      000228 26                     796 	.db #0x26	; 38
      000229 26                     797 	.db #0x26	; 38
      00022A 26                     798 	.db #0x26	; 38
      00022B 26                     799 	.db #0x26	; 38
      00022C 26                     800 	.db #0x26	; 38
      00022D 26                     801 	.db #0x26	; 38
      00022E 2A                     802 	.db #0x2a	; 42
      00022F 29                     803 	.db #0x29	; 41
      000230 26                     804 	.db #0x26	; 38
      000231 26                     805 	.db #0x26	; 38
      000232 26                     806 	.db #0x26	; 38
      000233 26                     807 	.db #0x26	; 38
      000234 26                     808 	.db #0x26	; 38
      000235 26                     809 	.db #0x26	; 38
      000236 26                     810 	.db #0x26	; 38
      000237 26                     811 	.db #0x26	; 38
      000238 26                     812 	.db #0x26	; 38
      000239 26                     813 	.db #0x26	; 38
      00023A 26                     814 	.db #0x26	; 38
      00023B 26                     815 	.db #0x26	; 38
      00023C 26                     816 	.db #0x26	; 38
      00023D 25                     817 	.db #0x25	; 37
      00023E 26                     818 	.db #0x26	; 38
      00023F 26                     819 	.db #0x26	; 38
      000240 26                     820 	.db #0x26	; 38
      000241 26                     821 	.db #0x26	; 38
      000242 26                     822 	.db #0x26	; 38
      000243 26                     823 	.db #0x26	; 38
      000244 2C                     824 	.db #0x2c	; 44
      000245 26                     825 	.db #0x26	; 38
      000246 26                     826 	.db #0x26	; 38
      000247 26                     827 	.db #0x26	; 38
      000248 26                     828 	.db #0x26	; 38
      000249 26                     829 	.db #0x26	; 38
      00024A 26                     830 	.db #0x26	; 38
      00024B 26                     831 	.db #0x26	; 38
      00024C 26                     832 	.db #0x26	; 38
      00024D 26                     833 	.db #0x26	; 38
      00024E 26                     834 	.db #0x26	; 38
      00024F 26                     835 	.db #0x26	; 38
      000250 26                     836 	.db #0x26	; 38
      000251 26                     837 	.db #0x26	; 38
      000252 26                     838 	.db #0x26	; 38
      000253 26                     839 	.db #0x26	; 38
      000254 26                     840 	.db #0x26	; 38
      000255 26                     841 	.db #0x26	; 38
      000256 26                     842 	.db #0x26	; 38
      000257 26                     843 	.db #0x26	; 38
      000258 26                     844 	.db #0x26	; 38
      000259 26                     845 	.db #0x26	; 38
      00025A 26                     846 	.db #0x26	; 38
      00025B 26                     847 	.db #0x26	; 38
      00025C 26                     848 	.db #0x26	; 38
      00025D 26                     849 	.db #0x26	; 38
      00025E 26                     850 	.db #0x26	; 38
      00025F 26                     851 	.db #0x26	; 38
      000260 26                     852 	.db #0x26	; 38
      000261 26                     853 	.db #0x26	; 38
      000262 26                     854 	.db #0x26	; 38
      000263 26                     855 	.db #0x26	; 38
      000264 26                     856 	.db #0x26	; 38
      000265 26                     857 	.db #0x26	; 38
      000266 26                     858 	.db #0x26	; 38
      000267 26                     859 	.db #0x26	; 38
      000268 26                     860 	.db #0x26	; 38
      000269 26                     861 	.db #0x26	; 38
      00026A 2C                     862 	.db #0x2c	; 44
      00026B 26                     863 	.db #0x26	; 38
      00026C 26                     864 	.db #0x26	; 38
      00026D 26                     865 	.db #0x26	; 38
      00026E 26                     866 	.db #0x26	; 38
      00026F 26                     867 	.db #0x26	; 38
      000270 26                     868 	.db #0x26	; 38
      000271 26                     869 	.db #0x26	; 38
      000272 26                     870 	.db #0x26	; 38
      000273 26                     871 	.db #0x26	; 38
      000274 26                     872 	.db #0x26	; 38
      000275 26                     873 	.db #0x26	; 38
      000276 26                     874 	.db #0x26	; 38
      000277 26                     875 	.db #0x26	; 38
      000278 26                     876 	.db #0x26	; 38
      000279 2C                     877 	.db #0x2c	; 44
      00027A 26                     878 	.db #0x26	; 38
      00027B 26                     879 	.db #0x26	; 38
      00027C 26                     880 	.db #0x26	; 38
      00027D 26                     881 	.db #0x26	; 38
      00027E 26                     882 	.db #0x26	; 38
      00027F 26                     883 	.db #0x26	; 38
      000280 26                     884 	.db #0x26	; 38
      000281 26                     885 	.db #0x26	; 38
      000282 26                     886 	.db #0x26	; 38
      000283 26                     887 	.db #0x26	; 38
      000284 26                     888 	.db #0x26	; 38
      000285 26                     889 	.db #0x26	; 38
      000286 26                     890 	.db #0x26	; 38
      000287 26                     891 	.db #0x26	; 38
      000288 26                     892 	.db #0x26	; 38
      000289 26                     893 	.db #0x26	; 38
      00028A 26                     894 	.db #0x26	; 38
      00028B 26                     895 	.db #0x26	; 38
      00028C 26                     896 	.db #0x26	; 38
      00028D 26                     897 	.db #0x26	; 38
      00028E 26                     898 	.db #0x26	; 38
      00028F 26                     899 	.db #0x26	; 38
      000290 26                     900 	.db #0x26	; 38
      000291 26                     901 	.db #0x26	; 38
      000292 26                     902 	.db #0x26	; 38
      000293 26                     903 	.db #0x26	; 38
      000294 26                     904 	.db #0x26	; 38
      000295 2B                     905 	.db #0x2b	; 43
      000296 26                     906 	.db #0x26	; 38
      000297 26                     907 	.db #0x26	; 38
      000298 26                     908 	.db #0x26	; 38
      000299 26                     909 	.db #0x26	; 38
      00029A 26                     910 	.db #0x26	; 38
      00029B 26                     911 	.db #0x26	; 38
      00029C 26                     912 	.db #0x26	; 38
      00029D 26                     913 	.db #0x26	; 38
      00029E 26                     914 	.db #0x26	; 38
      00029F 26                     915 	.db #0x26	; 38
      0002A0 26                     916 	.db #0x26	; 38
      0002A1 26                     917 	.db #0x26	; 38
      0002A2 26                     918 	.db #0x26	; 38
      0002A3 26                     919 	.db #0x26	; 38
      0002A4 26                     920 	.db #0x26	; 38
      0002A5 26                     921 	.db #0x26	; 38
      0002A6 26                     922 	.db #0x26	; 38
      0002A7 28                     923 	.db #0x28	; 40
      0002A8 26                     924 	.db #0x26	; 38
      0002A9 26                     925 	.db #0x26	; 38
      0002AA 26                     926 	.db #0x26	; 38
      0002AB 26                     927 	.db #0x26	; 38
      0002AC 26                     928 	.db #0x26	; 38
      0002AD 26                     929 	.db #0x26	; 38
      0002AE 26                     930 	.db #0x26	; 38
      0002AF 26                     931 	.db #0x26	; 38
      0002B0 26                     932 	.db #0x26	; 38
      0002B1 26                     933 	.db #0x26	; 38
      0002B2 26                     934 	.db #0x26	; 38
      0002B3 26                     935 	.db #0x26	; 38
      0002B4 26                     936 	.db #0x26	; 38
      0002B5 26                     937 	.db #0x26	; 38
      0002B6 26                     938 	.db #0x26	; 38
      0002B7 26                     939 	.db #0x26	; 38
      0002B8 26                     940 	.db #0x26	; 38
      0002B9 26                     941 	.db #0x26	; 38
      0002BA 26                     942 	.db #0x26	; 38
      0002BB 26                     943 	.db #0x26	; 38
      0002BC 26                     944 	.db #0x26	; 38
      0002BD 26                     945 	.db #0x26	; 38
      0002BE 26                     946 	.db #0x26	; 38
      0002BF 26                     947 	.db #0x26	; 38
      0002C0 2B                     948 	.db #0x2b	; 43
      0002C1 26                     949 	.db #0x26	; 38
      0002C2 26                     950 	.db #0x26	; 38
      0002C3 26                     951 	.db #0x26	; 38
      0002C4 26                     952 	.db #0x26	; 38
      0002C5 26                     953 	.db #0x26	; 38
      0002C6 27                     954 	.db #0x27	; 39
      0002C7 29                     955 	.db #0x29	; 41
      0002C8 26                     956 	.db #0x26	; 38
      0002C9 26                     957 	.db #0x26	; 38
      0002CA 26                     958 	.db #0x26	; 38
      0002CB 26                     959 	.db #0x26	; 38
      0002CC 26                     960 	.db #0x26	; 38
      0002CD 26                     961 	.db #0x26	; 38
      0002CE 2B                     962 	.db #0x2b	; 43
      0002CF 26                     963 	.db #0x26	; 38
      0002D0 26                     964 	.db #0x26	; 38
      0002D1 26                     965 	.db #0x26	; 38
      0002D2 26                     966 	.db #0x26	; 38
      0002D3 26                     967 	.db #0x26	; 38
      0002D4 26                     968 	.db #0x26	; 38
      0002D5 26                     969 	.db #0x26	; 38
      0002D6 26                     970 	.db #0x26	; 38
      0002D7 26                     971 	.db #0x26	; 38
      0002D8 26                     972 	.db #0x26	; 38
      0002D9 26                     973 	.db #0x26	; 38
      0002DA 26                     974 	.db #0x26	; 38
      0002DB 26                     975 	.db #0x26	; 38
      0002DC 26                     976 	.db #0x26	; 38
      0002DD 26                     977 	.db #0x26	; 38
      0002DE 26                     978 	.db #0x26	; 38
      0002DF 26                     979 	.db #0x26	; 38
      0002E0 26                     980 	.db #0x26	; 38
      0002E1 26                     981 	.db #0x26	; 38
      0002E2 26                     982 	.db #0x26	; 38
      0002E3 26                     983 	.db #0x26	; 38
      0002E4 26                     984 	.db #0x26	; 38
      0002E5 26                     985 	.db #0x26	; 38
      0002E6 2A                     986 	.db #0x2a	; 42
      0002E7 26                     987 	.db #0x26	; 38
      0002E8 26                     988 	.db #0x26	; 38
      0002E9 26                     989 	.db #0x26	; 38
      0002EA 26                     990 	.db #0x26	; 38
      0002EB 26                     991 	.db #0x26	; 38
      0002EC 26                     992 	.db #0x26	; 38
      0002ED 26                     993 	.db #0x26	; 38
      0002EE 26                     994 	.db #0x26	; 38
      0002EF 26                     995 	.db #0x26	; 38
      0002F0 26                     996 	.db #0x26	; 38
      0002F1 26                     997 	.db #0x26	; 38
      0002F2 2C                     998 	.db #0x2c	; 44
      0002F3 26                     999 	.db #0x26	; 38
      0002F4 26                    1000 	.db #0x26	; 38
      0002F5 26                    1001 	.db #0x26	; 38
      0002F6 26                    1002 	.db #0x26	; 38
      0002F7 26                    1003 	.db #0x26	; 38
      0002F8 26                    1004 	.db #0x26	; 38
      0002F9 26                    1005 	.db #0x26	; 38
      0002FA 26                    1006 	.db #0x26	; 38
      0002FB 26                    1007 	.db #0x26	; 38
      0002FC 26                    1008 	.db #0x26	; 38
      0002FD 26                    1009 	.db #0x26	; 38
      0002FE 26                    1010 	.db #0x26	; 38
      0002FF 26                    1011 	.db #0x26	; 38
      000300 26                    1012 	.db #0x26	; 38
      000301 26                    1013 	.db #0x26	; 38
      000302 26                    1014 	.db #0x26	; 38
      000303 26                    1015 	.db #0x26	; 38
      000304 26                    1016 	.db #0x26	; 38
      000305 26                    1017 	.db #0x26	; 38
      000306 26                    1018 	.db #0x26	; 38
      000307 26                    1019 	.db #0x26	; 38
      000308 26                    1020 	.db #0x26	; 38
      000309 26                    1021 	.db #0x26	; 38
      00030A 26                    1022 	.db #0x26	; 38
      00030B 26                    1023 	.db #0x26	; 38
      00030C 26                    1024 	.db #0x26	; 38
      00030D 26                    1025 	.db #0x26	; 38
      00030E 26                    1026 	.db #0x26	; 38
      00030F 26                    1027 	.db #0x26	; 38
      000310 26                    1028 	.db #0x26	; 38
      000311 26                    1029 	.db #0x26	; 38
      000312 26                    1030 	.db #0x26	; 38
      000313 26                    1031 	.db #0x26	; 38
      000314 26                    1032 	.db #0x26	; 38
      000315 26                    1033 	.db #0x26	; 38
      000316 26                    1034 	.db #0x26	; 38
      000317 2B                    1035 	.db #0x2b	; 43
      000318 26                    1036 	.db #0x26	; 38
      000319 26                    1037 	.db #0x26	; 38
      00031A 26                    1038 	.db #0x26	; 38
      00031B 26                    1039 	.db #0x26	; 38
      00031C 26                    1040 	.db #0x26	; 38
      00031D 26                    1041 	.db #0x26	; 38
      00031E 26                    1042 	.db #0x26	; 38
      00031F 26                    1043 	.db #0x26	; 38
      000320 26                    1044 	.db #0x26	; 38
      000321 26                    1045 	.db #0x26	; 38
      000322 26                    1046 	.db #0x26	; 38
      000323 26                    1047 	.db #0x26	; 38
      000324 26                    1048 	.db #0x26	; 38
      000325 26                    1049 	.db #0x26	; 38
      000326 26                    1050 	.db #0x26	; 38
      000327 26                    1051 	.db #0x26	; 38
      000328 26                    1052 	.db #0x26	; 38
      000329 26                    1053 	.db #0x26	; 38
      00032A 26                    1054 	.db #0x26	; 38
      00032B 26                    1055 	.db #0x26	; 38
      00032C 26                    1056 	.db #0x26	; 38
      00032D 26                    1057 	.db #0x26	; 38
      00032E 26                    1058 	.db #0x26	; 38
      00032F 26                    1059 	.db #0x26	; 38
      000330 26                    1060 	.db #0x26	; 38
      000331 26                    1061 	.db #0x26	; 38
      000332 26                    1062 	.db #0x26	; 38
      000333 26                    1063 	.db #0x26	; 38
      000334 26                    1064 	.db #0x26	; 38
      000335 26                    1065 	.db #0x26	; 38
      000336 26                    1066 	.db #0x26	; 38
      000337 26                    1067 	.db #0x26	; 38
      000338 26                    1068 	.db #0x26	; 38
      000339 26                    1069 	.db #0x26	; 38
      00033A 26                    1070 	.db #0x26	; 38
      00033B 26                    1071 	.db #0x26	; 38
      00033C 26                    1072 	.db #0x26	; 38
      00033D 26                    1073 	.db #0x26	; 38
      00033E 2B                    1074 	.db #0x2b	; 43
      00033F 26                    1075 	.db #0x26	; 38
      000340 26                    1076 	.db #0x26	; 38
      000341 26                    1077 	.db #0x26	; 38
      000342 26                    1078 	.db #0x26	; 38
      000343 26                    1079 	.db #0x26	; 38
      000344 26                    1080 	.db #0x26	; 38
      000345 26                    1081 	.db #0x26	; 38
      000346 26                    1082 	.db #0x26	; 38
      000347 26                    1083 	.db #0x26	; 38
      000348 26                    1084 	.db #0x26	; 38
      000349 26                    1085 	.db #0x26	; 38
      00034A 2B                    1086 	.db #0x2b	; 43
      00034B 26                    1087 	.db #0x26	; 38
      00034C 26                    1088 	.db #0x26	; 38
      00034D 26                    1089 	.db #0x26	; 38
      00034E 26                    1090 	.db #0x26	; 38
      00034F 26                    1091 	.db #0x26	; 38
      000350 26                    1092 	.db #0x26	; 38
      000351 26                    1093 	.db #0x26	; 38
      000352 26                    1094 	.db #0x26	; 38
      000353 26                    1095 	.db #0x26	; 38
      000354 26                    1096 	.db #0x26	; 38
      000355 26                    1097 	.db #0x26	; 38
      000356 26                    1098 	.db #0x26	; 38
      000357 26                    1099 	.db #0x26	; 38
      000358 26                    1100 	.db #0x26	; 38
      000359 26                    1101 	.db #0x26	; 38
      00035A 26                    1102 	.db #0x26	; 38
      00035B 26                    1103 	.db #0x26	; 38
      00035C 26                    1104 	.db #0x26	; 38
      00035D 26                    1105 	.db #0x26	; 38
      00035E 26                    1106 	.db #0x26	; 38
      00035F 26                    1107 	.db #0x26	; 38
      000360 26                    1108 	.db #0x26	; 38
      000361 26                    1109 	.db #0x26	; 38
      000362 26                    1110 	.db #0x26	; 38
      000363 26                    1111 	.db #0x26	; 38
      000364 26                    1112 	.db #0x26	; 38
      000365 26                    1113 	.db #0x26	; 38
      000366 2C                    1114 	.db #0x2c	; 44
      000367 26                    1115 	.db #0x26	; 38
      000368 26                    1116 	.db #0x26	; 38
      000369 26                    1117 	.db #0x26	; 38
      00036A 26                    1118 	.db #0x26	; 38
      00036B 26                    1119 	.db #0x26	; 38
      00036C 26                    1120 	.db #0x26	; 38
      00036D 26                    1121 	.db #0x26	; 38
      00036E 26                    1122 	.db #0x26	; 38
      00036F 26                    1123 	.db #0x26	; 38
      000370 2B                    1124 	.db #0x2b	; 43
      000371 26                    1125 	.db #0x26	; 38
      000372 26                    1126 	.db #0x26	; 38
      000373 26                    1127 	.db #0x26	; 38
      000374 26                    1128 	.db #0x26	; 38
      000375 26                    1129 	.db #0x26	; 38
      000376 26                    1130 	.db #0x26	; 38
      000377 26                    1131 	.db #0x26	; 38
      000378 26                    1132 	.db #0x26	; 38
      000379 26                    1133 	.db #0x26	; 38
      00037A 26                    1134 	.db #0x26	; 38
      00037B 26                    1135 	.db #0x26	; 38
      00037C 26                    1136 	.db #0x26	; 38
      00037D 26                    1137 	.db #0x26	; 38
      00037E 26                    1138 	.db #0x26	; 38
      00037F 26                    1139 	.db #0x26	; 38
      000380 26                    1140 	.db #0x26	; 38
      000381 26                    1141 	.db #0x26	; 38
      000382 26                    1142 	.db #0x26	; 38
      000383 26                    1143 	.db #0x26	; 38
      000384 26                    1144 	.db #0x26	; 38
      000385 26                    1145 	.db #0x26	; 38
      000386 26                    1146 	.db #0x26	; 38
      000387 26                    1147 	.db #0x26	; 38
      000388 26                    1148 	.db #0x26	; 38
      000389 26                    1149 	.db #0x26	; 38
      00038A 26                    1150 	.db #0x26	; 38
      00038B 26                    1151 	.db #0x26	; 38
      00038C 26                    1152 	.db #0x26	; 38
      00038D 26                    1153 	.db #0x26	; 38
      00038E 26                    1154 	.db #0x26	; 38
      00038F 26                    1155 	.db #0x26	; 38
      000390 26                    1156 	.db #0x26	; 38
      000391 26                    1157 	.db #0x26	; 38
      000392 26                    1158 	.db #0x26	; 38
      000393 26                    1159 	.db #0x26	; 38
      000394 26                    1160 	.db #0x26	; 38
      000395 26                    1161 	.db #0x26	; 38
      000396 26                    1162 	.db #0x26	; 38
      000397 26                    1163 	.db #0x26	; 38
      000398 27                    1164 	.db #0x27	; 39
      000399 28                    1165 	.db #0x28	; 40
      00039A 26                    1166 	.db #0x26	; 38
      00039B 26                    1167 	.db #0x26	; 38
      00039C 26                    1168 	.db #0x26	; 38
      00039D 26                    1169 	.db #0x26	; 38
      00039E 26                    1170 	.db #0x26	; 38
      00039F 26                    1171 	.db #0x26	; 38
      0003A0 26                    1172 	.db #0x26	; 38
      0003A1 26                    1173 	.db #0x26	; 38
      0003A2 26                    1174 	.db #0x26	; 38
      0003A3 26                    1175 	.db #0x26	; 38
      0003A4 26                    1176 	.db #0x26	; 38
      0003A5 26                    1177 	.db #0x26	; 38
      0003A6 26                    1178 	.db #0x26	; 38
      0003A7 26                    1179 	.db #0x26	; 38
      0003A8 26                    1180 	.db #0x26	; 38
      0003A9 26                    1181 	.db #0x26	; 38
      0003AA 26                    1182 	.db #0x26	; 38
      0003AB 26                    1183 	.db #0x26	; 38
      0003AC 26                    1184 	.db #0x26	; 38
      0003AD 2B                    1185 	.db #0x2b	; 43
      0003AE 26                    1186 	.db #0x26	; 38
      0003AF 26                    1187 	.db #0x26	; 38
      0003B0 26                    1188 	.db #0x26	; 38
      0003B1 26                    1189 	.db #0x26	; 38
      0003B2 26                    1190 	.db #0x26	; 38
      0003B3 26                    1191 	.db #0x26	; 38
      0003B4 26                    1192 	.db #0x26	; 38
      0003B5 25                    1193 	.db #0x25	; 37
      0003B6 26                    1194 	.db #0x26	; 38
      0003B7 26                    1195 	.db #0x26	; 38
      0003B8 2A                    1196 	.db #0x2a	; 42
      0003B9 29                    1197 	.db #0x29	; 41
      0003BA 26                    1198 	.db #0x26	; 38
      0003BB 26                    1199 	.db #0x26	; 38
      0003BC 26                    1200 	.db #0x26	; 38
      0003BD 26                    1201 	.db #0x26	; 38
      0003BE 26                    1202 	.db #0x26	; 38
      0003BF 26                    1203 	.db #0x26	; 38
      0003C0 26                    1204 	.db #0x26	; 38
      0003C1 26                    1205 	.db #0x26	; 38
      0003C2 2B                    1206 	.db #0x2b	; 43
      0003C3 26                    1207 	.db #0x26	; 38
      0003C4 26                    1208 	.db #0x26	; 38
      0003C5 26                    1209 	.db #0x26	; 38
      0003C6 26                    1210 	.db #0x26	; 38
      0003C7 26                    1211 	.db #0x26	; 38
      0003C8 26                    1212 	.db #0x26	; 38
      0003C9 2C                    1213 	.db #0x2c	; 44
      0003CA 26                    1214 	.db #0x26	; 38
      0003CB 26                    1215 	.db #0x26	; 38
      0003CC 26                    1216 	.db #0x26	; 38
      0003CD 26                    1217 	.db #0x26	; 38
      0003CE 26                    1218 	.db #0x26	; 38
      0003CF 26                    1219 	.db #0x26	; 38
      0003D0 26                    1220 	.db #0x26	; 38
      0003D1 26                    1221 	.db #0x26	; 38
      0003D2 26                    1222 	.db #0x26	; 38
      0003D3 26                    1223 	.db #0x26	; 38
      0003D4 26                    1224 	.db #0x26	; 38
      0003D5 2C                    1225 	.db #0x2c	; 44
      0003D6 26                    1226 	.db #0x26	; 38
      0003D7 26                    1227 	.db #0x26	; 38
      0003D8 26                    1228 	.db #0x26	; 38
      0003D9 26                    1229 	.db #0x26	; 38
      0003DA 26                    1230 	.db #0x26	; 38
      0003DB 26                    1231 	.db #0x26	; 38
      0003DC 26                    1232 	.db #0x26	; 38
      0003DD 26                    1233 	.db #0x26	; 38
      0003DE 26                    1234 	.db #0x26	; 38
      0003DF 26                    1235 	.db #0x26	; 38
      0003E0 26                    1236 	.db #0x26	; 38
      0003E1 26                    1237 	.db #0x26	; 38
      0003E2 26                    1238 	.db #0x26	; 38
      0003E3 26                    1239 	.db #0x26	; 38
      0003E4 26                    1240 	.db #0x26	; 38
      0003E5 26                    1241 	.db #0x26	; 38
      0003E6 26                    1242 	.db #0x26	; 38
      0003E7 26                    1243 	.db #0x26	; 38
      0003E8 26                    1244 	.db #0x26	; 38
      0003E9 26                    1245 	.db #0x26	; 38
      0003EA 26                    1246 	.db #0x26	; 38
      0003EB 26                    1247 	.db #0x26	; 38
      0003EC 26                    1248 	.db #0x26	; 38
      0003ED 26                    1249 	.db #0x26	; 38
      0003EE 26                    1250 	.db #0x26	; 38
      0003EF 26                    1251 	.db #0x26	; 38
      0003F0 26                    1252 	.db #0x26	; 38
      0003F1 26                    1253 	.db #0x26	; 38
      0003F2 26                    1254 	.db #0x26	; 38
      0003F3 26                    1255 	.db #0x26	; 38
      0003F4 26                    1256 	.db #0x26	; 38
      0003F5 26                    1257 	.db #0x26	; 38
      0003F6 26                    1258 	.db #0x26	; 38
      0003F7 26                    1259 	.db #0x26	; 38
      0003F8 26                    1260 	.db #0x26	; 38
      0003F9 26                    1261 	.db #0x26	; 38
      0003FA 26                    1262 	.db #0x26	; 38
      0003FB 26                    1263 	.db #0x26	; 38
      0003FC 26                    1264 	.db #0x26	; 38
      0003FD 26                    1265 	.db #0x26	; 38
      0003FE 26                    1266 	.db #0x26	; 38
      0003FF 26                    1267 	.db #0x26	; 38
      000400 26                    1268 	.db #0x26	; 38
      000401 26                    1269 	.db #0x26	; 38
      000402 26                    1270 	.db #0x26	; 38
      000403 26                    1271 	.db #0x26	; 38
      000404 26                    1272 	.db #0x26	; 38
      000405 26                    1273 	.db #0x26	; 38
      000406 26                    1274 	.db #0x26	; 38
      000407 26                    1275 	.db #0x26	; 38
      000408 26                    1276 	.db #0x26	; 38
      000409 26                    1277 	.db #0x26	; 38
      00040A 26                    1278 	.db #0x26	; 38
      00040B 26                    1279 	.db #0x26	; 38
      00040C 26                    1280 	.db #0x26	; 38
      00040D 2B                    1281 	.db #0x2b	; 43
      00040E 26                    1282 	.db #0x26	; 38
      00040F 26                    1283 	.db #0x26	; 38
      000410 26                    1284 	.db #0x26	; 38
      000411 26                    1285 	.db #0x26	; 38
      000412 26                    1286 	.db #0x26	; 38
      000413 26                    1287 	.db #0x26	; 38
      000414 26                    1288 	.db #0x26	; 38
      000415 26                    1289 	.db #0x26	; 38
      000416 26                    1290 	.db #0x26	; 38
      000417 26                    1291 	.db #0x26	; 38
      000418 26                    1292 	.db #0x26	; 38
      000419 26                    1293 	.db #0x26	; 38
      00041A 26                    1294 	.db #0x26	; 38
      00041B 26                    1295 	.db #0x26	; 38
      00041C 26                    1296 	.db #0x26	; 38
      00041D 26                    1297 	.db #0x26	; 38
      00041E 26                    1298 	.db #0x26	; 38
      00041F 26                    1299 	.db #0x26	; 38
      000420 2B                    1300 	.db #0x2b	; 43
      000421 26                    1301 	.db #0x26	; 38
      000422 26                    1302 	.db #0x26	; 38
      000423 26                    1303 	.db #0x26	; 38
      000424 26                    1304 	.db #0x26	; 38
      000425 26                    1305 	.db #0x26	; 38
      000426 26                    1306 	.db #0x26	; 38
      000427 26                    1307 	.db #0x26	; 38
      000428 26                    1308 	.db #0x26	; 38
      000429 26                    1309 	.db #0x26	; 38
      00042A 26                    1310 	.db #0x26	; 38
      00042B 26                    1311 	.db #0x26	; 38
      00042C 26                    1312 	.db #0x26	; 38
      00042D 26                    1313 	.db #0x26	; 38
      00042E 26                    1314 	.db #0x26	; 38
      00042F 26                    1315 	.db #0x26	; 38
      000430 26                    1316 	.db #0x26	; 38
      000431 26                    1317 	.db #0x26	; 38
      000432 26                    1318 	.db #0x26	; 38
      000433 26                    1319 	.db #0x26	; 38
      000434 26                    1320 	.db #0x26	; 38
      000435 26                    1321 	.db #0x26	; 38
      000436 26                    1322 	.db #0x26	; 38
      000437 2C                    1323 	.db #0x2c	; 44
      000438 26                    1324 	.db #0x26	; 38
      000439 26                    1325 	.db #0x26	; 38
      00043A 26                    1326 	.db #0x26	; 38
      00043B 26                    1327 	.db #0x26	; 38
      00043C 26                    1328 	.db #0x26	; 38
      00043D 26                    1329 	.db #0x26	; 38
      00043E 26                    1330 	.db #0x26	; 38
      00043F 26                    1331 	.db #0x26	; 38
      000440 26                    1332 	.db #0x26	; 38
      000441 26                    1333 	.db #0x26	; 38
      000442 26                    1334 	.db #0x26	; 38
      000443 26                    1335 	.db #0x26	; 38
      000444 26                    1336 	.db #0x26	; 38
      000445 26                    1337 	.db #0x26	; 38
      000446 26                    1338 	.db #0x26	; 38
      000447 26                    1339 	.db #0x26	; 38
      000448 25                    1340 	.db #0x25	; 37
      000449 2C                    1341 	.db #0x2c	; 44
      00044A 26                    1342 	.db #0x26	; 38
      00044B 26                    1343 	.db #0x26	; 38
      00044C 26                    1344 	.db #0x26	; 38
      00044D 26                    1345 	.db #0x26	; 38
      00044E 26                    1346 	.db #0x26	; 38
      00044F 26                    1347 	.db #0x26	; 38
      000450 26                    1348 	.db #0x26	; 38
      000451 26                    1349 	.db #0x26	; 38
      000452 26                    1350 	.db #0x26	; 38
      000453 26                    1351 	.db #0x26	; 38
      000454 26                    1352 	.db #0x26	; 38
      000455 26                    1353 	.db #0x26	; 38
      000456 26                    1354 	.db #0x26	; 38
      000457 26                    1355 	.db #0x26	; 38
      000458 26                    1356 	.db #0x26	; 38
      000459 26                    1357 	.db #0x26	; 38
      00045A 2B                    1358 	.db #0x2b	; 43
      00045B 26                    1359 	.db #0x26	; 38
      00045C 26                    1360 	.db #0x26	; 38
      00045D 26                    1361 	.db #0x26	; 38
      00045E 26                    1362 	.db #0x26	; 38
      00045F 26                    1363 	.db #0x26	; 38
      000460 26                    1364 	.db #0x26	; 38
      000461 26                    1365 	.db #0x26	; 38
      000462 26                    1366 	.db #0x26	; 38
      000463 26                    1367 	.db #0x26	; 38
      000464 26                    1368 	.db #0x26	; 38
      000465 26                    1369 	.db #0x26	; 38
      000466 26                    1370 	.db #0x26	; 38
      000467 26                    1371 	.db #0x26	; 38
      000468 26                    1372 	.db #0x26	; 38
      000469 26                    1373 	.db #0x26	; 38
      00046A 26                    1374 	.db #0x26	; 38
      00046B 26                    1375 	.db #0x26	; 38
      00046C 26                    1376 	.db #0x26	; 38
      00046D 26                    1377 	.db #0x26	; 38
      00046E 26                    1378 	.db #0x26	; 38
      00046F 26                    1379 	.db #0x26	; 38
      000470 26                    1380 	.db #0x26	; 38
      000471 26                    1381 	.db #0x26	; 38
      000472 27                    1382 	.db #0x27	; 39
      000473 28                    1383 	.db #0x28	; 40
      000474 26                    1384 	.db #0x26	; 38
      000475 26                    1385 	.db #0x26	; 38
      000476 26                    1386 	.db #0x26	; 38
      000477 26                    1387 	.db #0x26	; 38
      000478 26                    1388 	.db #0x26	; 38
      000479 26                    1389 	.db #0x26	; 38
      00047A 26                    1390 	.db #0x26	; 38
      00047B 26                    1391 	.db #0x26	; 38
      00047C 26                    1392 	.db #0x26	; 38
      00047D 26                    1393 	.db #0x26	; 38
      00047E 26                    1394 	.db #0x26	; 38
      00047F 26                    1395 	.db #0x26	; 38
      000480 26                    1396 	.db #0x26	; 38
      000481 26                    1397 	.db #0x26	; 38
      000482 26                    1398 	.db #0x26	; 38
      000483 26                    1399 	.db #0x26	; 38
      000484 26                    1400 	.db #0x26	; 38
      000485 26                    1401 	.db #0x26	; 38
      000486 2B                    1402 	.db #0x2b	; 43
      000487                       1403 _backgroundtiles:
      000487 40                    1404 	.db #0x40	; 64
      000488 38                    1405 	.db #0x38	; 56	'8'
      000489 3A                    1406 	.db #0x3a	; 58
      00048A 44                    1407 	.db #0x44	; 68	'D'
      00048B 7C                    1408 	.db #0x7c	; 124
      00048C 9A                    1409 	.db #0x9a	; 154
      00048D 5E                    1410 	.db #0x5e	; 94
      00048E E9                    1411 	.db #0xe9	; 233
      00048F 7A                    1412 	.db #0x7a	; 122	'z'
      000490 87                    1413 	.db #0x87	; 135
      000491 76                    1414 	.db #0x76	; 118	'v'
      000492 B9                    1415 	.db #0xb9	; 185
      000493 3C                    1416 	.db #0x3c	; 60
      000494 72                    1417 	.db #0x72	; 114	'r'
      000495 00                    1418 	.db #0x00	; 0
      000496 3C                    1419 	.db #0x3c	; 60
      000497 00                    1420 	.db #0x00	; 0
      000498 00                    1421 	.db #0x00	; 0
      000499 00                    1422 	.db #0x00	; 0
      00049A 00                    1423 	.db #0x00	; 0
      00049B 00                    1424 	.db #0x00	; 0
      00049C 00                    1425 	.db #0x00	; 0
      00049D 00                    1426 	.db #0x00	; 0
      00049E 00                    1427 	.db #0x00	; 0
      00049F 00                    1428 	.db #0x00	; 0
      0004A0 00                    1429 	.db #0x00	; 0
      0004A1 00                    1430 	.db #0x00	; 0
      0004A2 00                    1431 	.db #0x00	; 0
      0004A3 00                    1432 	.db #0x00	; 0
      0004A4 00                    1433 	.db #0x00	; 0
      0004A5 00                    1434 	.db #0x00	; 0
      0004A6 00                    1435 	.db #0x00	; 0
      0004A7 00                    1436 	.db #0x00	; 0
      0004A8 0F                    1437 	.db #0x0f	; 15
      0004A9 08                    1438 	.db #0x08	; 8
      0004AA 17                    1439 	.db #0x17	; 23
      0004AB 1C                    1440 	.db #0x1c	; 28
      0004AC 23                    1441 	.db #0x23	; 35
      0004AD 3E                    1442 	.db #0x3e	; 62
      0004AE 41                    1443 	.db #0x41	; 65	'A'
      0004AF 1B                    1444 	.db #0x1b	; 27
      0004B0 64                    1445 	.db #0x64	; 100	'd'
      0004B1 31                    1446 	.db #0x31	; 49	'1'
      0004B2 4E                    1447 	.db #0x4e	; 78	'N'
      0004B3 B1                    1448 	.db #0xb1	; 177
      0004B4 CE                    1449 	.db #0xce	; 206
      0004B5 BB                    1450 	.db #0xbb	; 187
      0004B6 C4                    1451 	.db #0xc4	; 196
      0004B7 00                    1452 	.db #0x00	; 0
      0004B8 F8                    1453 	.db #0xf8	; 248
      0004B9 00                    1454 	.db #0x00	; 0
      0004BA FC                    1455 	.db #0xfc	; 252
      0004BB E0                    1456 	.db #0xe0	; 224
      0004BC 1E                    1457 	.db #0x1e	; 30
      0004BD F0                    1458 	.db #0xf0	; 240
      0004BE 0F                    1459 	.db #0x0f	; 15
      0004BF BE                    1460 	.db #0xbe	; 190
      0004C0 01                    1461 	.db #0x01	; 1
      0004C1 BC                    1462 	.db #0xbc	; 188
      0004C2 02                    1463 	.db #0x02	; 2
      0004C3 CE                    1464 	.db #0xce	; 206
      0004C4 01                    1465 	.db #0x01	; 1
      0004C5 F6                    1466 	.db #0xf6	; 246
      0004C6 61                    1467 	.db #0x61	; 97	'a'
      0004C7 F4                    1468 	.db #0xf4	; 244
      0004C8 02                    1469 	.db #0x02	; 2
      0004C9 94                    1470 	.db #0x94	; 148
      0004CA 62                    1471 	.db #0x62	; 98	'b'
      0004CB E4                    1472 	.db #0xe4	; 228
      0004CC 02                    1473 	.db #0x02	; 2
      0004CD 6C                    1474 	.db #0x6c	; 108	'l'
      0004CE 82                    1475 	.db #0x82	; 130
      0004CF 70                    1476 	.db #0x70	; 112	'p'
      0004D0 8C                    1477 	.db #0x8c	; 140
      0004D1 60                    1478 	.db #0x60	; 96
      0004D2 90                    1479 	.db #0x90	; 144
      0004D3 00                    1480 	.db #0x00	; 0
      0004D4 E0                    1481 	.db #0xe0	; 224
      0004D5 80                    1482 	.db #0x80	; 128
      0004D6 80                    1483 	.db #0x80	; 128
      0004D7 8E                    1484 	.db #0x8e	; 142
      0004D8 F7                    1485 	.db #0xf7	; 247
      0004D9 8F                    1486 	.db #0x8f	; 143
      0004DA F3                    1487 	.db #0xf3	; 243
      0004DB 86                    1488 	.db #0x86	; 134
      0004DC F9                    1489 	.db #0xf9	; 249
      0004DD 42                    1490 	.db #0x42	; 66	'B'
      0004DE 7D                    1491 	.db #0x7d	; 125
      0004DF 80                    1492 	.db #0x80	; 128
      0004E0 FF                    1493 	.db #0xff	; 255
      0004E1 44                    1494 	.db #0x44	; 68	'D'
      0004E2 7F                    1495 	.db #0x7f	; 127
      0004E3 28                    1496 	.db #0x28	; 40
      0004E4 3F                    1497 	.db #0x3f	; 63
      0004E5 07                    1498 	.db #0x07	; 7
      0004E6 07                    1499 	.db #0x07	; 7
      0004E7 00                    1500 	.db #0x00	; 0
      0004E8 00                    1501 	.db #0x00	; 0
      0004E9 08                    1502 	.db #0x08	; 8
      0004EA 00                    1503 	.db #0x00	; 0
      0004EB 08                    1504 	.db #0x08	; 8
      0004EC 00                    1505 	.db #0x00	; 0
      0004ED 1C                    1506 	.db #0x1c	; 28
      0004EE 00                    1507 	.db #0x00	; 0
      0004EF 7F                    1508 	.db #0x7f	; 127
      0004F0 00                    1509 	.db #0x00	; 0
      0004F1 1C                    1510 	.db #0x1c	; 28
      0004F2 00                    1511 	.db #0x00	; 0
      0004F3 08                    1512 	.db #0x08	; 8
      0004F4 00                    1513 	.db #0x00	; 0
      0004F5 08                    1514 	.db #0x08	; 8
      0004F6 00                    1515 	.db #0x00	; 0
      0004F7 00                    1516 	.db #0x00	; 0
      0004F8 00                    1517 	.db #0x00	; 0
      0004F9 00                    1518 	.db #0x00	; 0
      0004FA 00                    1519 	.db #0x00	; 0
      0004FB 00                    1520 	.db #0x00	; 0
      0004FC 00                    1521 	.db #0x00	; 0
      0004FD 10                    1522 	.db #0x10	; 16
      0004FE 00                    1523 	.db #0x00	; 0
      0004FF 00                    1524 	.db #0x00	; 0
      000500 00                    1525 	.db #0x00	; 0
      000501 00                    1526 	.db #0x00	; 0
      000502 00                    1527 	.db #0x00	; 0
      000503 00                    1528 	.db #0x00	; 0
      000504 00                    1529 	.db #0x00	; 0
      000505 00                    1530 	.db #0x00	; 0
      000506 00                    1531 	.db #0x00	; 0
      000507                       1532 _healthblock:
      000507 FE                    1533 	.db #0xfe	; 254
      000508 FE                    1534 	.db #0xfe	; 254
      000509 FE                    1535 	.db #0xfe	; 254
      00050A FE                    1536 	.db #0xfe	; 254
      00050B FE                    1537 	.db #0xfe	; 254
      00050C FE                    1538 	.db #0xfe	; 254
      00050D FE                    1539 	.db #0xfe	; 254
      00050E FE                    1540 	.db #0xfe	; 254
      00050F FE                    1541 	.db #0xfe	; 254
      000510 FE                    1542 	.db #0xfe	; 254
      000511 FE                    1543 	.db #0xfe	; 254
      000512 FE                    1544 	.db #0xfe	; 254
      000513 FE                    1545 	.db #0xfe	; 254
      000514 FE                    1546 	.db #0xfe	; 254
      000515 00                    1547 	.db #0x00	; 0
      000516 00                    1548 	.db #0x00	; 0
      000517                       1549 _enemyOptionCount:
      000517 05                    1550 	.db #0x05	; 5
      000518                       1551 _enemy1:
      000518 66                    1552 	.db #0x66	; 102	'f'
      000519 24                    1553 	.db #0x24	; 36
      00051A E7                    1554 	.db #0xe7	; 231
      00051B 66                    1555 	.db #0x66	; 102	'f'
      00051C F7                    1556 	.db #0xf7	; 247
      00051D E7                    1557 	.db #0xe7	; 231
      00051E 1C                    1558 	.db #0x1c	; 28
      00051F 18                    1559 	.db #0x18	; 24
      000520 38                    1560 	.db #0x38	; 56	'8'
      000521 18                    1561 	.db #0x18	; 24
      000522 EF                    1562 	.db #0xef	; 239
      000523 E7                    1563 	.db #0xe7	; 231
      000524 E7                    1564 	.db #0xe7	; 231
      000525 66                    1565 	.db #0x66	; 102	'f'
      000526 66                    1566 	.db #0x66	; 102	'f'
      000527 24                    1567 	.db #0x24	; 36
      000528 00                    1568 	.db #0x00	; 0
      000529 00                    1569 	.db #0x00	; 0
      00052A 00                    1570 	.db #0x00	; 0
      00052B 00                    1571 	.db #0x00	; 0
      00052C 00                    1572 	.db #0x00	; 0
      00052D 00                    1573 	.db #0x00	; 0
      00052E 00                    1574 	.db #0x00	; 0
      00052F 00                    1575 	.db #0x00	; 0
      000530 00                    1576 	.db #0x00	; 0
      000531 00                    1577 	.db #0x00	; 0
      000532 00                    1578 	.db #0x00	; 0
      000533 00                    1579 	.db #0x00	; 0
      000534 00                    1580 	.db #0x00	; 0
      000535 00                    1581 	.db #0x00	; 0
      000536 00                    1582 	.db #0x00	; 0
      000537 00                    1583 	.db #0x00	; 0
      000538 3C                    1584 	.db #0x3c	; 60
      000539 3C                    1585 	.db #0x3c	; 60
      00053A 5E                    1586 	.db #0x5e	; 94
      00053B 62                    1587 	.db #0x62	; 98	'b'
      00053C 8F                    1588 	.db #0x8f	; 143
      00053D F1                    1589 	.db #0xf1	; 241
      00053E C7                    1590 	.db #0xc7	; 199
      00053F F9                    1591 	.db #0xf9	; 249
      000540 C3                    1592 	.db #0xc3	; 195
      000541 FD                    1593 	.db #0xfd	; 253
      000542 E1                    1594 	.db #0xe1	; 225
      000543 FF                    1595 	.db #0xff	; 255
      000544 7A                    1596 	.db #0x7a	; 122	'z'
      000545 7E                    1597 	.db #0x7e	; 126
      000546 3C                    1598 	.db #0x3c	; 60
      000547 3C                    1599 	.db #0x3c	; 60
      000548 00                    1600 	.db #0x00	; 0
      000549 00                    1601 	.db #0x00	; 0
      00054A 00                    1602 	.db #0x00	; 0
      00054B 00                    1603 	.db #0x00	; 0
      00054C 00                    1604 	.db #0x00	; 0
      00054D 00                    1605 	.db #0x00	; 0
      00054E 00                    1606 	.db #0x00	; 0
      00054F 00                    1607 	.db #0x00	; 0
      000550 00                    1608 	.db #0x00	; 0
      000551 00                    1609 	.db #0x00	; 0
      000552 00                    1610 	.db #0x00	; 0
      000553 00                    1611 	.db #0x00	; 0
      000554 00                    1612 	.db #0x00	; 0
      000555 00                    1613 	.db #0x00	; 0
      000556 00                    1614 	.db #0x00	; 0
      000557 00                    1615 	.db #0x00	; 0
      000558 3C                    1616 	.db #0x3c	; 60
      000559 3E                    1617 	.db #0x3e	; 62
      00055A 20                    1618 	.db #0x20	; 32
      00055B 38                    1619 	.db #0x38	; 56	'8'
      00055C 44                    1620 	.db #0x44	; 68	'D'
      00055D 78                    1621 	.db #0x78	; 120	'x'
      00055E BA                    1622 	.db #0xba	; 186
      00055F C4                    1623 	.db #0xc4	; 196
      000560 BA                    1624 	.db #0xba	; 186
      000561 C4                    1625 	.db #0xc4	; 196
      000562 44                    1626 	.db #0x44	; 68	'D'
      000563 78                    1627 	.db #0x78	; 120	'x'
      000564 20                    1628 	.db #0x20	; 32
      000565 38                    1629 	.db #0x38	; 56	'8'
      000566 3C                    1630 	.db #0x3c	; 60
      000567 3E                    1631 	.db #0x3e	; 62
      000568                       1632 _largeenemies:
      000568 00                    1633 	.db #0x00	; 0
      000569 00                    1634 	.db #0x00	; 0
      00056A 00                    1635 	.db #0x00	; 0
      00056B 00                    1636 	.db #0x00	; 0
      00056C 00                    1637 	.db #0x00	; 0
      00056D 00                    1638 	.db #0x00	; 0
      00056E 00                    1639 	.db #0x00	; 0
      00056F 00                    1640 	.db #0x00	; 0
      000570 00                    1641 	.db #0x00	; 0
      000571 00                    1642 	.db #0x00	; 0
      000572 00                    1643 	.db #0x00	; 0
      000573 00                    1644 	.db #0x00	; 0
      000574 00                    1645 	.db #0x00	; 0
      000575 00                    1646 	.db #0x00	; 0
      000576 7F                    1647 	.db #0x7f	; 127
      000577 7F                    1648 	.db #0x7f	; 127
      000578 7F                    1649 	.db #0x7f	; 127
      000579 7F                    1650 	.db #0x7f	; 127
      00057A 00                    1651 	.db #0x00	; 0
      00057B 00                    1652 	.db #0x00	; 0
      00057C 00                    1653 	.db #0x00	; 0
      00057D 00                    1654 	.db #0x00	; 0
      00057E 00                    1655 	.db #0x00	; 0
      00057F 00                    1656 	.db #0x00	; 0
      000580 00                    1657 	.db #0x00	; 0
      000581 00                    1658 	.db #0x00	; 0
      000582 00                    1659 	.db #0x00	; 0
      000583 00                    1660 	.db #0x00	; 0
      000584 00                    1661 	.db #0x00	; 0
      000585 00                    1662 	.db #0x00	; 0
      000586 00                    1663 	.db #0x00	; 0
      000587 00                    1664 	.db #0x00	; 0
      000588 00                    1665 	.db #0x00	; 0
      000589 00                    1666 	.db #0x00	; 0
      00058A 40                    1667 	.db #0x40	; 64
      00058B 40                    1668 	.db #0x40	; 64
      00058C 60                    1669 	.db #0x60	; 96
      00058D 60                    1670 	.db #0x60	; 96
      00058E 70                    1671 	.db #0x70	; 112	'p'
      00058F 70                    1672 	.db #0x70	; 112	'p'
      000590 78                    1673 	.db #0x78	; 120	'x'
      000591 78                    1674 	.db #0x78	; 120	'x'
      000592 7C                    1675 	.db #0x7c	; 124
      000593 7C                    1676 	.db #0x7c	; 124
      000594 7E                    1677 	.db #0x7e	; 126
      000595 7E                    1678 	.db #0x7e	; 126
      000596 FF                    1679 	.db #0xff	; 255
      000597 FF                    1680 	.db #0xff	; 255
      000598 FF                    1681 	.db #0xff	; 255
      000599 FF                    1682 	.db #0xff	; 255
      00059A 7E                    1683 	.db #0x7e	; 126
      00059B 7E                    1684 	.db #0x7e	; 126
      00059C 7C                    1685 	.db #0x7c	; 124
      00059D 7C                    1686 	.db #0x7c	; 124
      00059E 78                    1687 	.db #0x78	; 120	'x'
      00059F 78                    1688 	.db #0x78	; 120	'x'
      0005A0 70                    1689 	.db #0x70	; 112	'p'
      0005A1 70                    1690 	.db #0x70	; 112	'p'
      0005A2 60                    1691 	.db #0x60	; 96
      0005A3 60                    1692 	.db #0x60	; 96
      0005A4 40                    1693 	.db #0x40	; 64
      0005A5 40                    1694 	.db #0x40	; 64
      0005A6 00                    1695 	.db #0x00	; 0
      0005A7 00                    1696 	.db #0x00	; 0
      0005A8 07                    1697 	.db #0x07	; 7
      0005A9 00                    1698 	.db #0x00	; 0
      0005AA 18                    1699 	.db #0x18	; 24
      0005AB 00                    1700 	.db #0x00	; 0
      0005AC 20                    1701 	.db #0x20	; 32
      0005AD 00                    1702 	.db #0x00	; 0
      0005AE 4C                    1703 	.db #0x4c	; 76	'L'
      0005AF 0C                    1704 	.db #0x0c	; 12
      0005B0 43                    1705 	.db #0x43	; 67	'C'
      0005B1 0F                    1706 	.db #0x0f	; 15
      0005B2 84                    1707 	.db #0x84	; 132
      0005B3 27                    1708 	.db #0x27	; 39
      0005B4 80                    1709 	.db #0x80	; 128
      0005B5 13                    1710 	.db #0x13	; 19
      0005B6 83                    1711 	.db #0x83	; 131
      0005B7 2A                    1712 	.db #0x2a	; 42
      0005B8 83                    1713 	.db #0x83	; 131
      0005B9 16                    1714 	.db #0x16	; 22
      0005BA 80                    1715 	.db #0x80	; 128
      0005BB 23                    1716 	.db #0x23	; 35
      0005BC 84                    1717 	.db #0x84	; 132
      0005BD 07                    1718 	.db #0x07	; 7
      0005BE 43                    1719 	.db #0x43	; 67	'C'
      0005BF 0F                    1720 	.db #0x0f	; 15
      0005C0 4C                    1721 	.db #0x4c	; 76	'L'
      0005C1 0C                    1722 	.db #0x0c	; 12
      0005C2 20                    1723 	.db #0x20	; 32
      0005C3 00                    1724 	.db #0x00	; 0
      0005C4 18                    1725 	.db #0x18	; 24
      0005C5 00                    1726 	.db #0x00	; 0
      0005C6 07                    1727 	.db #0x07	; 7
      0005C7 00                    1728 	.db #0x00	; 0
      0005C8 E0                    1729 	.db #0xe0	; 224
      0005C9 00                    1730 	.db #0x00	; 0
      0005CA 18                    1731 	.db #0x18	; 24
      0005CB 00                    1732 	.db #0x00	; 0
      0005CC 04                    1733 	.db #0x04	; 4
      0005CD 00                    1734 	.db #0x00	; 0
      0005CE 02                    1735 	.db #0x02	; 2
      0005CF 00                    1736 	.db #0x00	; 0
      0005D0 02                    1737 	.db #0x02	; 2
      0005D1 00                    1738 	.db #0x00	; 0
      0005D2 C1                    1739 	.db #0xc1	; 193
      0005D3 C0                    1740 	.db #0xc0	; 192
      0005D4 11                    1741 	.db #0x11	; 17
      0005D5 F0                    1742 	.db #0xf0	; 240
      0005D6 E5                    1743 	.db #0xe5	; 229
      0005D7 1C                    1744 	.db #0x1c	; 28
      0005D8 E5                    1745 	.db #0xe5	; 229
      0005D9 1C                    1746 	.db #0x1c	; 28
      0005DA 11                    1747 	.db #0x11	; 17
      0005DB F0                    1748 	.db #0xf0	; 240
      0005DC C1                    1749 	.db #0xc1	; 193
      0005DD C0                    1750 	.db #0xc0	; 192
      0005DE 02                    1751 	.db #0x02	; 2
      0005DF 00                    1752 	.db #0x00	; 0
      0005E0 02                    1753 	.db #0x02	; 2
      0005E1 00                    1754 	.db #0x00	; 0
      0005E2 04                    1755 	.db #0x04	; 4
      0005E3 00                    1756 	.db #0x00	; 0
      0005E4 18                    1757 	.db #0x18	; 24
      0005E5 00                    1758 	.db #0x00	; 0
      0005E6 E0                    1759 	.db #0xe0	; 224
      0005E7 00                    1760 	.db #0x00	; 0
      0005E8                       1761 _ProjectileTiles:
      0005E8 24                    1762 	.db #0x24	; 36
      0005E9 18                    1763 	.db #0x18	; 24
      0005EA 18                    1764 	.db #0x18	; 24
      0005EB 3C                    1765 	.db #0x3c	; 60
      0005EC 18                    1766 	.db #0x18	; 24
      0005ED 3C                    1767 	.db #0x3c	; 60
      0005EE 24                    1768 	.db #0x24	; 36
      0005EF 18                    1769 	.db #0x18	; 24
      0005F0 00                    1770 	.db #0x00	; 0
      0005F1 00                    1771 	.db #0x00	; 0
      0005F2 00                    1772 	.db #0x00	; 0
      0005F3 00                    1773 	.db #0x00	; 0
      0005F4 00                    1774 	.db #0x00	; 0
      0005F5 00                    1775 	.db #0x00	; 0
      0005F6 00                    1776 	.db #0x00	; 0
      0005F7 00                    1777 	.db #0x00	; 0
      0005F8 00                    1778 	.db #0x00	; 0
      0005F9 00                    1779 	.db #0x00	; 0
      0005FA 00                    1780 	.db #0x00	; 0
      0005FB 00                    1781 	.db #0x00	; 0
      0005FC 00                    1782 	.db #0x00	; 0
      0005FD 00                    1783 	.db #0x00	; 0
      0005FE 00                    1784 	.db #0x00	; 0
      0005FF 00                    1785 	.db #0x00	; 0
      000600 00                    1786 	.db #0x00	; 0
      000601 00                    1787 	.db #0x00	; 0
      000602 00                    1788 	.db #0x00	; 0
      000603 00                    1789 	.db #0x00	; 0
      000604 00                    1790 	.db #0x00	; 0
      000605 00                    1791 	.db #0x00	; 0
      000606 00                    1792 	.db #0x00	; 0
      000607 00                    1793 	.db #0x00	; 0
      000608 00                    1794 	.db #0x00	; 0
      000609 00                    1795 	.db #0x00	; 0
      00060A 00                    1796 	.db #0x00	; 0
      00060B 00                    1797 	.db #0x00	; 0
      00060C 09                    1798 	.db #0x09	; 9
      00060D 06                    1799 	.db #0x06	; 6
      00060E 06                    1800 	.db #0x06	; 6
      00060F 0F                    1801 	.db #0x0f	; 15
      000610 06                    1802 	.db #0x06	; 6
      000611 0F                    1803 	.db #0x0f	; 15
      000612 09                    1804 	.db #0x09	; 9
      000613 06                    1805 	.db #0x06	; 6
      000614 00                    1806 	.db #0x00	; 0
      000615 00                    1807 	.db #0x00	; 0
      000616 00                    1808 	.db #0x00	; 0
      000617 00                    1809 	.db #0x00	; 0
      000618 00                    1810 	.db #0x00	; 0
      000619 00                    1811 	.db #0x00	; 0
      00061A 00                    1812 	.db #0x00	; 0
      00061B 00                    1813 	.db #0x00	; 0
      00061C 00                    1814 	.db #0x00	; 0
      00061D 00                    1815 	.db #0x00	; 0
      00061E 00                    1816 	.db #0x00	; 0
      00061F 00                    1817 	.db #0x00	; 0
      000620 00                    1818 	.db #0x00	; 0
      000621 00                    1819 	.db #0x00	; 0
      000622 00                    1820 	.db #0x00	; 0
      000623 00                    1821 	.db #0x00	; 0
      000624 00                    1822 	.db #0x00	; 0
      000625 00                    1823 	.db #0x00	; 0
      000626 00                    1824 	.db #0x00	; 0
      000627 00                    1825 	.db #0x00	; 0
      000628 09                    1826 	.db #0x09	; 9
      000629 06                    1827 	.db #0x06	; 6
      00062A 06                    1828 	.db #0x06	; 6
      00062B 0F                    1829 	.db #0x0f	; 15
      00062C 06                    1830 	.db #0x06	; 6
      00062D 0F                    1831 	.db #0x0f	; 15
      00062E 09                    1832 	.db #0x09	; 9
      00062F 06                    1833 	.db #0x06	; 6
      000630 00                    1834 	.db #0x00	; 0
      000631 00                    1835 	.db #0x00	; 0
      000632 00                    1836 	.db #0x00	; 0
      000633 00                    1837 	.db #0x00	; 0
      000634 00                    1838 	.db #0x00	; 0
      000635 00                    1839 	.db #0x00	; 0
      000636 00                    1840 	.db #0x00	; 0
      000637 00                    1841 	.db #0x00	; 0
      000638 00                    1842 	.db #0x00	; 0
      000639 00                    1843 	.db #0x00	; 0
      00063A 00                    1844 	.db #0x00	; 0
      00063B 00                    1845 	.db #0x00	; 0
      00063C 00                    1846 	.db #0x00	; 0
      00063D 00                    1847 	.db #0x00	; 0
      00063E 00                    1848 	.db #0x00	; 0
      00063F 00                    1849 	.db #0x00	; 0
      000640 00                    1850 	.db #0x00	; 0
      000641 00                    1851 	.db #0x00	; 0
      000642 00                    1852 	.db #0x00	; 0
      000643 00                    1853 	.db #0x00	; 0
      000644 00                    1854 	.db #0x00	; 0
      000645 00                    1855 	.db #0x00	; 0
      000646 00                    1856 	.db #0x00	; 0
      000647 00                    1857 	.db #0x00	; 0
      000648 99                    1858 	.db #0x99	; 153
      000649 66                    1859 	.db #0x66	; 102	'f'
      00064A 66                    1860 	.db #0x66	; 102	'f'
      00064B FF                    1861 	.db #0xff	; 255
      00064C 66                    1862 	.db #0x66	; 102	'f'
      00064D FF                    1863 	.db #0xff	; 255
      00064E 99                    1864 	.db #0x99	; 153
      00064F 66                    1865 	.db #0x66	; 102	'f'
      000650 00                    1866 	.db #0x00	; 0
      000651 00                    1867 	.db #0x00	; 0
      000652 00                    1868 	.db #0x00	; 0
      000653 00                    1869 	.db #0x00	; 0
      000654 00                    1870 	.db #0x00	; 0
      000655 00                    1871 	.db #0x00	; 0
      000656 00                    1872 	.db #0x00	; 0
      000657 00                    1873 	.db #0x00	; 0
      000658 00                    1874 	.db #0x00	; 0
      000659 00                    1875 	.db #0x00	; 0
      00065A 00                    1876 	.db #0x00	; 0
      00065B 00                    1877 	.db #0x00	; 0
      00065C 00                    1878 	.db #0x00	; 0
      00065D 00                    1879 	.db #0x00	; 0
      00065E 00                    1880 	.db #0x00	; 0
      00065F 00                    1881 	.db #0x00	; 0
      000660 00                    1882 	.db #0x00	; 0
      000661 00                    1883 	.db #0x00	; 0
      000662 00                    1884 	.db #0x00	; 0
      000663 00                    1885 	.db #0x00	; 0
      000664 00                    1886 	.db #0x00	; 0
      000665 00                    1887 	.db #0x00	; 0
      000666 00                    1888 	.db #0x00	; 0
      000667 00                    1889 	.db #0x00	; 0
      000668 09                    1890 	.db #0x09	; 9
      000669 06                    1891 	.db #0x06	; 6
      00066A 06                    1892 	.db #0x06	; 6
      00066B 0F                    1893 	.db #0x0f	; 15
      00066C 06                    1894 	.db #0x06	; 6
      00066D 0F                    1895 	.db #0x0f	; 15
      00066E 09                    1896 	.db #0x09	; 9
      00066F 06                    1897 	.db #0x06	; 6
      000670 09                    1898 	.db #0x09	; 9
      000671 06                    1899 	.db #0x06	; 6
      000672 06                    1900 	.db #0x06	; 6
      000673 0F                    1901 	.db #0x0f	; 15
      000674 06                    1902 	.db #0x06	; 6
      000675 0F                    1903 	.db #0x0f	; 15
      000676 09                    1904 	.db #0x09	; 9
      000677 06                    1905 	.db #0x06	; 6
      000678 00                    1906 	.db #0x00	; 0
      000679 00                    1907 	.db #0x00	; 0
      00067A 00                    1908 	.db #0x00	; 0
      00067B 00                    1909 	.db #0x00	; 0
      00067C 00                    1910 	.db #0x00	; 0
      00067D 00                    1911 	.db #0x00	; 0
      00067E 00                    1912 	.db #0x00	; 0
      00067F 00                    1913 	.db #0x00	; 0
      000680 00                    1914 	.db #0x00	; 0
      000681 00                    1915 	.db #0x00	; 0
      000682 00                    1916 	.db #0x00	; 0
      000683 00                    1917 	.db #0x00	; 0
      000684 00                    1918 	.db #0x00	; 0
      000685 00                    1919 	.db #0x00	; 0
      000686 00                    1920 	.db #0x00	; 0
      000687 00                    1921 	.db #0x00	; 0
      000688 90                    1922 	.db #0x90	; 144
      000689 60                    1923 	.db #0x60	; 96
      00068A 60                    1924 	.db #0x60	; 96
      00068B F0                    1925 	.db #0xf0	; 240
      00068C 60                    1926 	.db #0x60	; 96
      00068D F0                    1927 	.db #0xf0	; 240
      00068E 90                    1928 	.db #0x90	; 144
      00068F 60                    1929 	.db #0x60	; 96
      000690 09                    1930 	.db #0x09	; 9
      000691 06                    1931 	.db #0x06	; 6
      000692 06                    1932 	.db #0x06	; 6
      000693 0F                    1933 	.db #0x0f	; 15
      000694 06                    1934 	.db #0x06	; 6
      000695 0F                    1935 	.db #0x0f	; 15
      000696 09                    1936 	.db #0x09	; 9
      000697 06                    1937 	.db #0x06	; 6
      000698 00                    1938 	.db #0x00	; 0
      000699 00                    1939 	.db #0x00	; 0
      00069A 00                    1940 	.db #0x00	; 0
      00069B 00                    1941 	.db #0x00	; 0
      00069C 00                    1942 	.db #0x00	; 0
      00069D 00                    1943 	.db #0x00	; 0
      00069E 00                    1944 	.db #0x00	; 0
      00069F 00                    1945 	.db #0x00	; 0
      0006A0 00                    1946 	.db #0x00	; 0
      0006A1 00                    1947 	.db #0x00	; 0
      0006A2 00                    1948 	.db #0x00	; 0
      0006A3 00                    1949 	.db #0x00	; 0
      0006A4 00                    1950 	.db #0x00	; 0
      0006A5 00                    1951 	.db #0x00	; 0
      0006A6 00                    1952 	.db #0x00	; 0
      0006A7 00                    1953 	.db #0x00	; 0
      0006A8 18                    1954 	.db #0x18	; 24
      0006A9 00                    1955 	.db #0x00	; 0
      0006AA 18                    1956 	.db #0x18	; 24
      0006AB 18                    1957 	.db #0x18	; 24
      0006AC 18                    1958 	.db #0x18	; 24
      0006AD 18                    1959 	.db #0x18	; 24
      0006AE 3C                    1960 	.db #0x3c	; 60
      0006AF 18                    1961 	.db #0x18	; 24
      0006B0 3C                    1962 	.db #0x3c	; 60
      0006B1 18                    1963 	.db #0x18	; 24
      0006B2 3C                    1964 	.db #0x3c	; 60
      0006B3 3C                    1965 	.db #0x3c	; 60
      0006B4 7E                    1966 	.db #0x7e	; 126
      0006B5 3C                    1967 	.db #0x3c	; 60
      0006B6 7E                    1968 	.db #0x7e	; 126
      0006B7 24                    1969 	.db #0x24	; 36
      0006B8 00                    1970 	.db #0x00	; 0
      0006B9 00                    1971 	.db #0x00	; 0
      0006BA 00                    1972 	.db #0x00	; 0
      0006BB 00                    1973 	.db #0x00	; 0
      0006BC 00                    1974 	.db #0x00	; 0
      0006BD 00                    1975 	.db #0x00	; 0
      0006BE 00                    1976 	.db #0x00	; 0
      0006BF 00                    1977 	.db #0x00	; 0
      0006C0 00                    1978 	.db #0x00	; 0
      0006C1 00                    1979 	.db #0x00	; 0
      0006C2 00                    1980 	.db #0x00	; 0
      0006C3 00                    1981 	.db #0x00	; 0
      0006C4 00                    1982 	.db #0x00	; 0
      0006C5 00                    1983 	.db #0x00	; 0
      0006C6 00                    1984 	.db #0x00	; 0
      0006C7 00                    1985 	.db #0x00	; 0
      0006C8 C0                    1986 	.db #0xc0	; 192
      0006C9 00                    1987 	.db #0x00	; 0
      0006CA F8                    1988 	.db #0xf8	; 248
      0006CB E0                    1989 	.db #0xe0	; 224
      0006CC FF                    1990 	.db #0xff	; 255
      0006CD 7E                    1991 	.db #0x7e	; 126
      0006CE FF                    1992 	.db #0xff	; 255
      0006CF 7E                    1993 	.db #0x7e	; 126
      0006D0 F8                    1994 	.db #0xf8	; 248
      0006D1 E0                    1995 	.db #0xe0	; 224
      0006D2 C0                    1996 	.db #0xc0	; 192
      0006D3 00                    1997 	.db #0x00	; 0
      0006D4 00                    1998 	.db #0x00	; 0
      0006D5 00                    1999 	.db #0x00	; 0
      0006D6 00                    2000 	.db #0x00	; 0
      0006D7 00                    2001 	.db #0x00	; 0
      0006D8 00                    2002 	.db #0x00	; 0
      0006D9 00                    2003 	.db #0x00	; 0
      0006DA 00                    2004 	.db #0x00	; 0
      0006DB 00                    2005 	.db #0x00	; 0
      0006DC 00                    2006 	.db #0x00	; 0
      0006DD 00                    2007 	.db #0x00	; 0
      0006DE 00                    2008 	.db #0x00	; 0
      0006DF 00                    2009 	.db #0x00	; 0
      0006E0 00                    2010 	.db #0x00	; 0
      0006E1 00                    2011 	.db #0x00	; 0
      0006E2 00                    2012 	.db #0x00	; 0
      0006E3 00                    2013 	.db #0x00	; 0
      0006E4 00                    2014 	.db #0x00	; 0
      0006E5 00                    2015 	.db #0x00	; 0
      0006E6 00                    2016 	.db #0x00	; 0
      0006E7 00                    2017 	.db #0x00	; 0
      0006E8 06                    2018 	.db #0x06	; 6
      0006E9 00                    2019 	.db #0x00	; 0
      0006EA 0F                    2020 	.db #0x0f	; 15
      0006EB 06                    2021 	.db #0x06	; 6
      0006EC 1F                    2022 	.db #0x1f	; 31
      0006ED 0E                    2023 	.db #0x0e	; 14
      0006EE 7E                    2024 	.db #0x7e	; 126
      0006EF 1C                    2025 	.db #0x1c	; 28
      0006F0 FC                    2026 	.db #0xfc	; 252
      0006F1 78                    2027 	.db #0x78	; 120	'x'
      0006F2 F8                    2028 	.db #0xf8	; 248
      0006F3 F0                    2029 	.db #0xf0	; 240
      0006F4 F8                    2030 	.db #0xf8	; 248
      0006F5 70                    2031 	.db #0x70	; 112	'p'
      0006F6 70                    2032 	.db #0x70	; 112	'p'
      0006F7 20                    2033 	.db #0x20	; 32
      0006F8 00                    2034 	.db #0x00	; 0
      0006F9 00                    2035 	.db #0x00	; 0
      0006FA 00                    2036 	.db #0x00	; 0
      0006FB 00                    2037 	.db #0x00	; 0
      0006FC 00                    2038 	.db #0x00	; 0
      0006FD 00                    2039 	.db #0x00	; 0
      0006FE 00                    2040 	.db #0x00	; 0
      0006FF 00                    2041 	.db #0x00	; 0
      000700 00                    2042 	.db #0x00	; 0
      000701 00                    2043 	.db #0x00	; 0
      000702 00                    2044 	.db #0x00	; 0
      000703 00                    2045 	.db #0x00	; 0
      000704 00                    2046 	.db #0x00	; 0
      000705 00                    2047 	.db #0x00	; 0
      000706 00                    2048 	.db #0x00	; 0
      000707 00                    2049 	.db #0x00	; 0
      000708                       2050 _upgrade:
      000708 01                    2051 	.db #0x01	; 1
      000709 00 00                 2052 	.dw #0x0000
      00070B 00 00                 2053 	.dw #0x0000
      00070D 00                    2054 	.db #0x00	; 0
      00070E 00                    2055 	.db #0x00	; 0
      00070F 00                    2056 	.db #0x00	; 0
      000710 70                    2057 	.db #0x70	; 112	'p'
      000711                       2058 _ammo:
      000711 01                    2059 	.db #0x01	; 1
      000712 00 00                 2060 	.dw #0x0000
      000714 00 00                 2061 	.dw #0x0000
      000716 00                    2062 	.db #0x00	; 0
      000717 01                    2063 	.db #0x01	; 1
      000718 05                    2064 	.db #0x05	; 5
      000719 72                    2065 	.db #0x72	; 114	'r'
      00071A                       2066 _health:
      00071A 01                    2067 	.db #0x01	; 1
      00071B 00 00                 2068 	.dw #0x0000
      00071D 00 00                 2069 	.dw #0x0000
      00071F 00                    2070 	.db #0x00	; 0
      000720 02                    2071 	.db #0x02	; 2
      000721 32                    2072 	.db #0x32	; 50	'2'
      000722 74                    2073 	.db #0x74	; 116	't'
      000723                       2074 _Pickups:
      000723 7E                    2075 	.db #0x7e	; 126
      000724 00                    2076 	.db #0x00	; 0
      000725 81                    2077 	.db #0x81	; 129
      000726 00                    2078 	.db #0x00	; 0
      000727 D7                    2079 	.db #0xd7	; 215
      000728 56                    2080 	.db #0x56	; 86	'V'
      000729 D7                    2081 	.db #0xd7	; 215
      00072A 56                    2082 	.db #0x56	; 86	'V'
      00072B D5                    2083 	.db #0xd5	; 213
      00072C 54                    2084 	.db #0x54	; 84	'T'
      00072D F5                    2085 	.db #0xf5	; 245
      00072E 74                    2086 	.db #0x74	; 116	't'
      00072F 81                    2087 	.db #0x81	; 129
      000730 00                    2088 	.db #0x00	; 0
      000731 7E                    2089 	.db #0x7e	; 126
      000732 00                    2090 	.db #0x00	; 0
      000733 00                    2091 	.db #0x00	; 0
      000734 00                    2092 	.db #0x00	; 0
      000735 00                    2093 	.db #0x00	; 0
      000736 00                    2094 	.db #0x00	; 0
      000737 00                    2095 	.db #0x00	; 0
      000738 00                    2096 	.db #0x00	; 0
      000739 00                    2097 	.db #0x00	; 0
      00073A 00                    2098 	.db #0x00	; 0
      00073B 00                    2099 	.db #0x00	; 0
      00073C 00                    2100 	.db #0x00	; 0
      00073D 00                    2101 	.db #0x00	; 0
      00073E 00                    2102 	.db #0x00	; 0
      00073F 00                    2103 	.db #0x00	; 0
      000740 00                    2104 	.db #0x00	; 0
      000741 00                    2105 	.db #0x00	; 0
      000742 00                    2106 	.db #0x00	; 0
      000743 7E                    2107 	.db #0x7e	; 126
      000744 00                    2108 	.db #0x00	; 0
      000745 8F                    2109 	.db #0x8f	; 143
      000746 06                    2110 	.db #0x06	; 6
      000747 9F                    2111 	.db #0x9f	; 159
      000748 0E                    2112 	.db #0x0e	; 14
      000749 FF                    2113 	.db #0xff	; 255
      00074A 1C                    2114 	.db #0x1c	; 28
      00074B FD                    2115 	.db #0xfd	; 253
      00074C 78                    2116 	.db #0x78	; 120	'x'
      00074D F9                    2117 	.db #0xf9	; 249
      00074E 70                    2118 	.db #0x70	; 112	'p'
      00074F F9                    2119 	.db #0xf9	; 249
      000750 70                    2120 	.db #0x70	; 112	'p'
      000751 7E                    2121 	.db #0x7e	; 126
      000752 00                    2122 	.db #0x00	; 0
      000753 00                    2123 	.db #0x00	; 0
      000754 00                    2124 	.db #0x00	; 0
      000755 00                    2125 	.db #0x00	; 0
      000756 00                    2126 	.db #0x00	; 0
      000757 00                    2127 	.db #0x00	; 0
      000758 00                    2128 	.db #0x00	; 0
      000759 00                    2129 	.db #0x00	; 0
      00075A 00                    2130 	.db #0x00	; 0
      00075B 00                    2131 	.db #0x00	; 0
      00075C 00                    2132 	.db #0x00	; 0
      00075D 00                    2133 	.db #0x00	; 0
      00075E 00                    2134 	.db #0x00	; 0
      00075F 00                    2135 	.db #0x00	; 0
      000760 00                    2136 	.db #0x00	; 0
      000761 00                    2137 	.db #0x00	; 0
      000762 00                    2138 	.db #0x00	; 0
      000763 7E                    2139 	.db #0x7e	; 126
      000764 00                    2140 	.db #0x00	; 0
      000765 99                    2141 	.db #0x99	; 153
      000766 18                    2142 	.db #0x18	; 24
      000767 99                    2143 	.db #0x99	; 153
      000768 18                    2144 	.db #0x18	; 24
      000769 FF                    2145 	.db #0xff	; 255
      00076A 7E                    2146 	.db #0x7e	; 126
      00076B FF                    2147 	.db #0xff	; 255
      00076C 7E                    2148 	.db #0x7e	; 126
      00076D 99                    2149 	.db #0x99	; 153
      00076E 18                    2150 	.db #0x18	; 24
      00076F 99                    2151 	.db #0x99	; 153
      000770 18                    2152 	.db #0x18	; 24
      000771 7E                    2153 	.db #0x7e	; 126
      000772 00                    2154 	.db #0x00	; 0
      000773 00                    2155 	.db #0x00	; 0
      000774 00                    2156 	.db #0x00	; 0
      000775 00                    2157 	.db #0x00	; 0
      000776 00                    2158 	.db #0x00	; 0
      000777 00                    2159 	.db #0x00	; 0
      000778 00                    2160 	.db #0x00	; 0
      000779 00                    2161 	.db #0x00	; 0
      00077A 00                    2162 	.db #0x00	; 0
      00077B 00                    2163 	.db #0x00	; 0
      00077C 00                    2164 	.db #0x00	; 0
      00077D 00                    2165 	.db #0x00	; 0
      00077E 00                    2166 	.db #0x00	; 0
      00077F 00                    2167 	.db #0x00	; 0
      000780 00                    2168 	.db #0x00	; 0
      000781 00                    2169 	.db #0x00	; 0
      000782 00                    2170 	.db #0x00	; 0
      000783                       2171 _Player1:
      000783 08                    2172 	.db #0x08	; 8
      000784 08                    2173 	.db #0x08	; 8
      000785 1C                    2174 	.db #0x1c	; 28
      000786 14                    2175 	.db #0x14	; 20
      000787 38                    2176 	.db #0x38	; 56	'8'
      000788 28                    2177 	.db #0x28	; 40
      000789 68                    2178 	.db #0x68	; 104	'h'
      00078A 58                    2179 	.db #0x58	; 88	'X'
      00078B 50                    2180 	.db #0x50	; 80	'P'
      00078C 71                    2181 	.db #0x71	; 113	'q'
      00078D D0                    2182 	.db #0xd0	; 208
      00078E B2                    2183 	.db #0xb2	; 178
      00078F D5                    2184 	.db #0xd5	; 213
      000790 B6                    2185 	.db #0xb6	; 182
      000791 D5                    2186 	.db #0xd5	; 213
      000792 B6                    2187 	.db #0xb6	; 182
      000793 D5                    2188 	.db #0xd5	; 213
      000794 B6                    2189 	.db #0xb6	; 182
      000795 CD                    2190 	.db #0xcd	; 205
      000796 BE                    2191 	.db #0xbe	; 190
      000797 C5                    2192 	.db #0xc5	; 197
      000798 BE                    2193 	.db #0xbe	; 190
      000799 65                    2194 	.db #0x65	; 101	'e'
      00079A 5E                    2195 	.db #0x5e	; 94
      00079B 3E                    2196 	.db #0x3e	; 62
      00079C 2F                    2197 	.db #0x2f	; 47
      00079D 13                    2198 	.db #0x13	; 19
      00079E 13                    2199 	.db #0x13	; 19
      00079F 06                    2200 	.db #0x06	; 6
      0007A0 07                    2201 	.db #0x07	; 7
      0007A1 07                    2202 	.db #0x07	; 7
      0007A2 05                    2203 	.db #0x05	; 5
      0007A3 10                    2204 	.db #0x10	; 16
      0007A4 10                    2205 	.db #0x10	; 16
      0007A5 38                    2206 	.db #0x38	; 56	'8'
      0007A6 28                    2207 	.db #0x28	; 40
      0007A7 1C                    2208 	.db #0x1c	; 28
      0007A8 14                    2209 	.db #0x14	; 20
      0007A9 16                    2210 	.db #0x16	; 22
      0007AA 1A                    2211 	.db #0x1a	; 26
      0007AB 0A                    2212 	.db #0x0a	; 10
      0007AC 8E                    2213 	.db #0x8e	; 142
      0007AD 0B                    2214 	.db #0x0b	; 11
      0007AE 4D                    2215 	.db #0x4d	; 77	'M'
      0007AF AB                    2216 	.db #0xab	; 171
      0007B0 6D                    2217 	.db #0x6d	; 109	'm'
      0007B1 AB                    2218 	.db #0xab	; 171
      0007B2 6D                    2219 	.db #0x6d	; 109	'm'
      0007B3 AB                    2220 	.db #0xab	; 171
      0007B4 6D                    2221 	.db #0x6d	; 109	'm'
      0007B5 B3                    2222 	.db #0xb3	; 179
      0007B6 7D                    2223 	.db #0x7d	; 125
      0007B7 A3                    2224 	.db #0xa3	; 163
      0007B8 7D                    2225 	.db #0x7d	; 125
      0007B9 A6                    2226 	.db #0xa6	; 166
      0007BA 7A                    2227 	.db #0x7a	; 122	'z'
      0007BB 7C                    2228 	.db #0x7c	; 124
      0007BC F4                    2229 	.db #0xf4	; 244
      0007BD C8                    2230 	.db #0xc8	; 200
      0007BE C8                    2231 	.db #0xc8	; 200
      0007BF 60                    2232 	.db #0x60	; 96
      0007C0 E0                    2233 	.db #0xe0	; 224
      0007C1 E0                    2234 	.db #0xe0	; 224
      0007C2 A0                    2235 	.db #0xa0	; 160
      0007C3 07                    2236 	.db #0x07	; 7
      0007C4 07                    2237 	.db #0x07	; 7
      0007C5 0F                    2238 	.db #0x0f	; 15
      0007C6 08                    2239 	.db #0x08	; 8
      0007C7 18                    2240 	.db #0x18	; 24
      0007C8 17                    2241 	.db #0x17	; 23
      0007C9 31                    2242 	.db #0x31	; 49	'1'
      0007CA 2F                    2243 	.db #0x2f	; 47
      0007CB 12                    2244 	.db #0x12	; 18
      0007CC 1E                    2245 	.db #0x1e	; 30
      0007CD DF                    2246 	.db #0xdf	; 223
      0007CE DF                    2247 	.db #0xdf	; 223
      0007CF F0                    2248 	.db #0xf0	; 240
      0007D0 7F                    2249 	.db #0x7f	; 127
      0007D1 AF                    2250 	.db #0xaf	; 175
      0007D2 F0                    2251 	.db #0xf0	; 240
      0007D3 AF                    2252 	.db #0xaf	; 175
      0007D4 F0                    2253 	.db #0xf0	; 240
      0007D5 F0                    2254 	.db #0xf0	; 240
      0007D6 7F                    2255 	.db #0x7f	; 127
      0007D7 DF                    2256 	.db #0xdf	; 223
      0007D8 DF                    2257 	.db #0xdf	; 223
      0007D9 12                    2258 	.db #0x12	; 18
      0007DA 1E                    2259 	.db #0x1e	; 30
      0007DB 31                    2260 	.db #0x31	; 49	'1'
      0007DC 2F                    2261 	.db #0x2f	; 47
      0007DD 18                    2262 	.db #0x18	; 24
      0007DE 17                    2263 	.db #0x17	; 23
      0007DF 0F                    2264 	.db #0x0f	; 15
      0007E0 08                    2265 	.db #0x08	; 8
      0007E1 07                    2266 	.db #0x07	; 7
      0007E2 07                    2267 	.db #0x07	; 7
      0007E3 E0                    2268 	.db #0xe0	; 224
      0007E4 E0                    2269 	.db #0xe0	; 224
      0007E5 F8                    2270 	.db #0xf8	; 248
      0007E6 18                    2271 	.db #0x18	; 24
      0007E7 0C                    2272 	.db #0x0c	; 12
      0007E8 F4                    2273 	.db #0xf4	; 244
      0007E9 F6                    2274 	.db #0xf6	; 246
      0007EA FA                    2275 	.db #0xfa	; 250
      0007EB 0F                    2276 	.db #0x0f	; 15
      0007EC 0D                    2277 	.db #0x0d	; 13
      0007ED C2                    2278 	.db #0xc2	; 194
      0007EE C2                    2279 	.db #0xc2	; 194
      0007EF 00                    2280 	.db #0x00	; 0
      0007F0 E0                    2281 	.db #0xe0	; 224
      0007F1 C0                    2282 	.db #0xc0	; 192
      0007F2 10                    2283 	.db #0x10	; 16
      0007F3 C0                    2284 	.db #0xc0	; 192
      0007F4 10                    2285 	.db #0x10	; 16
      0007F5 00                    2286 	.db #0x00	; 0
      0007F6 E0                    2287 	.db #0xe0	; 224
      0007F7 C2                    2288 	.db #0xc2	; 194
      0007F8 C2                    2289 	.db #0xc2	; 194
      0007F9 0F                    2290 	.db #0x0f	; 15
      0007FA 0D                    2291 	.db #0x0d	; 13
      0007FB F6                    2292 	.db #0xf6	; 246
      0007FC FA                    2293 	.db #0xfa	; 250
      0007FD 0C                    2294 	.db #0x0c	; 12
      0007FE F4                    2295 	.db #0xf4	; 244
      0007FF F8                    2296 	.db #0xf8	; 248
      000800 18                    2297 	.db #0x18	; 24
      000801 E0                    2298 	.db #0xe0	; 224
      000802 E0                    2299 	.db #0xe0	; 224
      000803 07                    2300 	.db #0x07	; 7
      000804 07                    2301 	.db #0x07	; 7
      000805 1B                    2302 	.db #0x1b	; 27
      000806 1C                    2303 	.db #0x1c	; 28
      000807 38                    2304 	.db #0x38	; 56	'8'
      000808 27                    2305 	.db #0x27	; 39
      000809 60                    2306 	.db #0x60	; 96
      00080A 5E                    2307 	.db #0x5e	; 94
      00080B 60                    2308 	.db #0x60	; 96
      00080C 5C                    2309 	.db #0x5c	; 92
      00080D 41                    2310 	.db #0x41	; 65	'A'
      00080E 79                    2311 	.db #0x79	; 121	'y'
      00080F C4                    2312 	.db #0xc4	; 196
      000810 B7                    2313 	.db #0xb7	; 183
      000811 99                    2314 	.db #0x99	; 153
      000812 FE                    2315 	.db #0xfe	; 254
      000813 B3                    2316 	.db #0xb3	; 179
      000814 EC                    2317 	.db #0xec	; 236
      000815 67                    2318 	.db #0x67	; 103	'g'
      000816 58                    2319 	.db #0x58	; 88	'X'
      000817 2E                    2320 	.db #0x2e	; 46
      000818 31                    2321 	.db #0x31	; 49	'1'
      000819 5C                    2322 	.db #0x5c	; 92
      00081A 73                    2323 	.db #0x73	; 115	's'
      00081B 69                    2324 	.db #0x69	; 105	'i'
      00081C 5E                    2325 	.db #0x5e	; 94
      00081D 37                    2326 	.db #0x37	; 55	'7'
      00081E 2D                    2327 	.db #0x2d	; 45
      00081F 1A                    2328 	.db #0x1a	; 26
      000820 1B                    2329 	.db #0x1b	; 27
      000821 01                    2330 	.db #0x01	; 1
      000822 01                    2331 	.db #0x01	; 1
      000823 E0                    2332 	.db #0xe0	; 224
      000824 E0                    2333 	.db #0xe0	; 224
      000825 90                    2334 	.db #0x90	; 144
      000826 70                    2335 	.db #0x70	; 112	'p'
      000827 C0                    2336 	.db #0xc0	; 192
      000828 C0                    2337 	.db #0xc0	; 192
      000829 00                    2338 	.db #0x00	; 0
      00082A 00                    2339 	.db #0x00	; 0
      00082B 02                    2340 	.db #0x02	; 2
      00082C 02                    2341 	.db #0x02	; 2
      00082D C1                    2342 	.db #0xc1	; 193
      00082E C3                    2343 	.db #0xc3	; 195
      00082F 65                    2344 	.db #0x65	; 101	'e'
      000830 A7                    2345 	.db #0xa7	; 167
      000831 A7                    2346 	.db #0xa7	; 167
      000832 65                    2347 	.db #0x65	; 101	'e'
      000833 A3                    2348 	.db #0xa3	; 163
      000834 65                    2349 	.db #0x65	; 101	'e'
      000835 03                    2350 	.db #0x03	; 3
      000836 CD                    2351 	.db #0xcd	; 205
      000837 41                    2352 	.db #0x41	; 65	'A'
      000838 DF                    2353 	.db #0xdf	; 223
      000839 86                    2354 	.db #0x86	; 134
      00083A BA                    2355 	.db #0xba	; 186
      00083B 86                    2356 	.db #0x86	; 134
      00083C FA                    2357 	.db #0xfa	; 250
      00083D 1C                    2358 	.db #0x1c	; 28
      00083E E4                    2359 	.db #0xe4	; 228
      00083F 78                    2360 	.db #0x78	; 120	'x'
      000840 B8                    2361 	.db #0xb8	; 184
      000841 C0                    2362 	.db #0xc0	; 192
      000842 C0                    2363 	.db #0xc0	; 192
      000843 00                    2364 	.db #0x00	; 0
      000844 00                    2365 	.db #0x00	; 0
      000845 00                    2366 	.db #0x00	; 0
      000846 00                    2367 	.db #0x00	; 0
      000847 00                    2368 	.db #0x00	; 0
      000848 00                    2369 	.db #0x00	; 0
      000849 00                    2370 	.db #0x00	; 0
      00084A 00                    2371 	.db #0x00	; 0
      00084B 00                    2372 	.db #0x00	; 0
      00084C 00                    2373 	.db #0x00	; 0
      00084D 00                    2374 	.db #0x00	; 0
      00084E 00                    2375 	.db #0x00	; 0
      00084F 00                    2376 	.db #0x00	; 0
      000850 00                    2377 	.db #0x00	; 0
      000851 00                    2378 	.db #0x00	; 0
      000852 00                    2379 	.db #0x00	; 0
      000853 00                    2380 	.db #0x00	; 0
      000854 00                    2381 	.db #0x00	; 0
      000855 00                    2382 	.db #0x00	; 0
      000856 00                    2383 	.db #0x00	; 0
      000857 00                    2384 	.db #0x00	; 0
      000858 00                    2385 	.db #0x00	; 0
      000859 00                    2386 	.db #0x00	; 0
      00085A 00                    2387 	.db #0x00	; 0
      00085B 00                    2388 	.db #0x00	; 0
      00085C 00                    2389 	.db #0x00	; 0
      00085D 00                    2390 	.db #0x00	; 0
      00085E 00                    2391 	.db #0x00	; 0
      00085F 00                    2392 	.db #0x00	; 0
      000860 00                    2393 	.db #0x00	; 0
      000861 00                    2394 	.db #0x00	; 0
      000862 00                    2395 	.db #0x00	; 0
      000863 00                    2396 	.db #0x00	; 0
      000864 00                    2397 	.db #0x00	; 0
      000865 00                    2398 	.db #0x00	; 0
      000866 00                    2399 	.db #0x00	; 0
      000867 00                    2400 	.db #0x00	; 0
      000868 00                    2401 	.db #0x00	; 0
      000869 00                    2402 	.db #0x00	; 0
      00086A 00                    2403 	.db #0x00	; 0
      00086B 00                    2404 	.db #0x00	; 0
      00086C 00                    2405 	.db #0x00	; 0
      00086D 00                    2406 	.db #0x00	; 0
      00086E 00                    2407 	.db #0x00	; 0
      00086F 00                    2408 	.db #0x00	; 0
      000870 00                    2409 	.db #0x00	; 0
      000871 00                    2410 	.db #0x00	; 0
      000872 00                    2411 	.db #0x00	; 0
      000873 00                    2412 	.db #0x00	; 0
      000874 00                    2413 	.db #0x00	; 0
      000875 00                    2414 	.db #0x00	; 0
      000876 00                    2415 	.db #0x00	; 0
      000877 00                    2416 	.db #0x00	; 0
      000878 00                    2417 	.db #0x00	; 0
      000879 00                    2418 	.db #0x00	; 0
      00087A 00                    2419 	.db #0x00	; 0
      00087B 00                    2420 	.db #0x00	; 0
      00087C 00                    2421 	.db #0x00	; 0
      00087D 00                    2422 	.db #0x00	; 0
      00087E 00                    2423 	.db #0x00	; 0
      00087F 00                    2424 	.db #0x00	; 0
      000880 00                    2425 	.db #0x00	; 0
      000881 00                    2426 	.db #0x00	; 0
      000882 00                    2427 	.db #0x00	; 0
      000883                       2428 _BLANKSIZE:
      000883 03                    2429 	.db #0x03	; 3
      000884                       2430 _BLANK:
      000884 26                    2431 	.db #0x26	; 38
      000885 2B                    2432 	.db #0x2b	; 43
      000886 2C                    2433 	.db #0x2c	; 44
      000887                       2434 _EMPTYSPRITE:
      000887 50                    2435 	.db #0x50	; 80	'P'
      000888                       2436 _ENEMYCOUNT:
      000888 05                    2437 	.db #0x05	; 5
      000889                       2438 _xSpawnPositions:
      000889 00                    2439 	.db #0x00	; 0
      00088A 60                    2440 	.db #0x60	; 96
      00088B B0                    2441 	.db #0xb0	; 176
      00088C 00                    2442 	.db #0x00	; 0
      00088D B0                    2443 	.db #0xb0	; 176
      00088E 00                    2444 	.db #0x00	; 0
      00088F 60                    2445 	.db #0x60	; 96
      000890 B0                    2446 	.db #0xb0	; 176
      000891                       2447 _ySpawnPositions:
      000891 00                    2448 	.db #0x00	; 0
      000892 00                    2449 	.db #0x00	; 0
      000893 00                    2450 	.db #0x00	; 0
      000894 5C                    2451 	.db #0x5c	; 92
      000895 5C                    2452 	.db #0x5c	; 92
      000896 A0                    2453 	.db #0xa0	; 160
      000897 A0                    2454 	.db #0xa0	; 160
      000898 A0                    2455 	.db #0xa0	; 160
      000899                       2456 _PROJECTILECOUNT:
      000899 05                    2457 	.db #0x05	; 5
      00089A                       2458 _PLAYERSIZE:
      00089A 10                    2459 	.db #0x10	; 16
      00089B                       2460 _maxHull:
      00089B 64                    2461 	.db #0x64	;  100	'd'
      00089C                       2462 _maxShield:
      00089C 64                    2463 	.db #0x64	;  100	'd'
      00089D                       2464 _MAXGUNLEVEL:
      00089D 01                    2465 	.db #0x01	; 1
      00089E                       2466 _SPLASHDROPOFF:
      00089E 01                    2467 	.db #0x01	; 1
                                   2468 ;src/main.c:143: void setHealthBar(uint8_t row, uint8_t hp) {
                                   2469 ;	---------------------------------
                                   2470 ; Function setHealthBar
                                   2471 ; ---------------------------------
      00089F                       2472 _setHealthBar::
      00089F E8 FB                 2473 	add	sp, #-5
                                   2474 ;src/main.c:145: if (hp >= 80) {
      0008A1 F8 08                 2475 	ldhl	sp,	#8
      0008A3 7E                    2476 	ld	a, (hl)
      0008A4 D6 50                 2477 	sub	a, #0x50
      0008A6 38 31                 2478 	jr	C, 00102$
                                   2479 ;src/main.c:146: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      0008A8 F8 00                 2480 	ldhl	sp,	#0
      0008AA 4D                    2481 	ld	c, l
      0008AB 44                    2482 	ld	b, h
      0008AC 36 50                 2483 	ld	(hl), #0x50
      0008AE 69                    2484 	ld	l, c
                                   2485 ;	spillPairReg hl
                                   2486 ;	spillPairReg hl
      0008AF 60                    2487 	ld	h, b
                                   2488 ;	spillPairReg hl
                                   2489 ;	spillPairReg hl
      0008B0 23                    2490 	inc	hl
      0008B1 36 50                 2491 	ld	(hl), #0x50
      0008B3 69                    2492 	ld	l, c
                                   2493 ;	spillPairReg hl
                                   2494 ;	spillPairReg hl
      0008B4 60                    2495 	ld	h, b
                                   2496 ;	spillPairReg hl
                                   2497 ;	spillPairReg hl
      0008B5 23                    2498 	inc	hl
      0008B6 23                    2499 	inc	hl
      0008B7 36 50                 2500 	ld	(hl), #0x50
      0008B9 69                    2501 	ld	l, c
                                   2502 ;	spillPairReg hl
                                   2503 ;	spillPairReg hl
      0008BA 60                    2504 	ld	h, b
                                   2505 ;	spillPairReg hl
                                   2506 ;	spillPairReg hl
      0008BB 23                    2507 	inc	hl
      0008BC 23                    2508 	inc	hl
      0008BD 23                    2509 	inc	hl
      0008BE 36 50                 2510 	ld	(hl), #0x50
      0008C0 21 04 00              2511 	ld	hl, #0x0004
      0008C3 09                    2512 	add	hl, bc
      0008C4 36 50                 2513 	ld	(hl), #0x50
                                   2514 ;src/main.c:147: set_win_tiles(5,row,5,1,blockmap);
      0008C6 C5                    2515 	push	bc
      0008C7 21 05 01              2516 	ld	hl, #0x105
      0008CA E5                    2517 	push	hl
      0008CB F8 0B                 2518 	ldhl	sp,	#11
      0008CD 66                    2519 	ld	h, (hl)
      0008CE 2E 05                 2520 	ld	l, #0x05
      0008D0 E5                    2521 	push	hl
      0008D1 CDr00r00              2522 	call	_set_win_tiles
      0008D4 E8 06                 2523 	add	sp, #6
                                   2524 ;src/main.c:148: return;
      0008D6 C3rADr09              2525 	jp	00109$
      0008D9                       2526 00102$:
                                   2527 ;src/main.c:150: if (hp >= 60) {
      0008D9 F8 08                 2528 	ldhl	sp,	#8
      0008DB 7E                    2529 	ld	a, (hl)
      0008DC D6 3C                 2530 	sub	a, #0x3c
      0008DE 38 31                 2531 	jr	C, 00104$
                                   2532 ;src/main.c:151: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      0008E0 F8 00                 2533 	ldhl	sp,	#0
      0008E2 4D                    2534 	ld	c, l
      0008E3 44                    2535 	ld	b, h
      0008E4 36 50                 2536 	ld	(hl), #0x50
      0008E6 69                    2537 	ld	l, c
                                   2538 ;	spillPairReg hl
                                   2539 ;	spillPairReg hl
      0008E7 60                    2540 	ld	h, b
                                   2541 ;	spillPairReg hl
                                   2542 ;	spillPairReg hl
      0008E8 23                    2543 	inc	hl
      0008E9 36 50                 2544 	ld	(hl), #0x50
      0008EB 69                    2545 	ld	l, c
                                   2546 ;	spillPairReg hl
                                   2547 ;	spillPairReg hl
      0008EC 60                    2548 	ld	h, b
                                   2549 ;	spillPairReg hl
                                   2550 ;	spillPairReg hl
      0008ED 23                    2551 	inc	hl
      0008EE 23                    2552 	inc	hl
      0008EF 36 50                 2553 	ld	(hl), #0x50
      0008F1 69                    2554 	ld	l, c
                                   2555 ;	spillPairReg hl
                                   2556 ;	spillPairReg hl
      0008F2 60                    2557 	ld	h, b
                                   2558 ;	spillPairReg hl
                                   2559 ;	spillPairReg hl
      0008F3 23                    2560 	inc	hl
      0008F4 23                    2561 	inc	hl
      0008F5 23                    2562 	inc	hl
      0008F6 36 50                 2563 	ld	(hl), #0x50
      0008F8 21 04 00              2564 	ld	hl, #0x0004
      0008FB 09                    2565 	add	hl, bc
      0008FC 36 00                 2566 	ld	(hl), #0x00
                                   2567 ;src/main.c:152: set_win_tiles(5,row,5,1,blockmap);
      0008FE C5                    2568 	push	bc
      0008FF 21 05 01              2569 	ld	hl, #0x105
      000902 E5                    2570 	push	hl
      000903 F8 0B                 2571 	ldhl	sp,	#11
      000905 66                    2572 	ld	h, (hl)
      000906 2E 05                 2573 	ld	l, #0x05
      000908 E5                    2574 	push	hl
      000909 CDr00r00              2575 	call	_set_win_tiles
      00090C E8 06                 2576 	add	sp, #6
                                   2577 ;src/main.c:153: return;
      00090E C3rADr09              2578 	jp	00109$
      000911                       2579 00104$:
                                   2580 ;src/main.c:155: if (hp >= 40) {
      000911 F8 08                 2581 	ldhl	sp,	#8
      000913 7E                    2582 	ld	a, (hl)
      000914 D6 28                 2583 	sub	a, #0x28
      000916 38 30                 2584 	jr	C, 00106$
                                   2585 ;src/main.c:156: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000918 F8 00                 2586 	ldhl	sp,	#0
      00091A 4D                    2587 	ld	c, l
      00091B 44                    2588 	ld	b, h
      00091C 36 50                 2589 	ld	(hl), #0x50
      00091E 69                    2590 	ld	l, c
                                   2591 ;	spillPairReg hl
                                   2592 ;	spillPairReg hl
      00091F 60                    2593 	ld	h, b
                                   2594 ;	spillPairReg hl
                                   2595 ;	spillPairReg hl
      000920 23                    2596 	inc	hl
      000921 36 50                 2597 	ld	(hl), #0x50
      000923 69                    2598 	ld	l, c
                                   2599 ;	spillPairReg hl
                                   2600 ;	spillPairReg hl
      000924 60                    2601 	ld	h, b
                                   2602 ;	spillPairReg hl
                                   2603 ;	spillPairReg hl
      000925 23                    2604 	inc	hl
      000926 23                    2605 	inc	hl
      000927 36 50                 2606 	ld	(hl), #0x50
      000929 59                    2607 	ld	e, c
      00092A 50                    2608 	ld	d, b
      00092B 13                    2609 	inc	de
      00092C 13                    2610 	inc	de
      00092D 13                    2611 	inc	de
      00092E AF                    2612 	xor	a, a
      00092F 12                    2613 	ld	(de), a
      000930 21 04 00              2614 	ld	hl, #0x0004
      000933 09                    2615 	add	hl, bc
      000934 36 00                 2616 	ld	(hl), #0x00
                                   2617 ;src/main.c:157: set_win_tiles(5,row,5,1,blockmap);
      000936 C5                    2618 	push	bc
      000937 21 05 01              2619 	ld	hl, #0x105
      00093A E5                    2620 	push	hl
      00093B F8 0B                 2621 	ldhl	sp,	#11
      00093D 66                    2622 	ld	h, (hl)
      00093E 2E 05                 2623 	ld	l, #0x05
      000940 E5                    2624 	push	hl
      000941 CDr00r00              2625 	call	_set_win_tiles
      000944 E8 06                 2626 	add	sp, #6
                                   2627 ;src/main.c:158: return;
      000946 18 65                 2628 	jr	00109$
      000948                       2629 00106$:
                                   2630 ;src/main.c:160: if (hp >= 20) {
      000948 F8 08                 2631 	ldhl	sp,	#8
      00094A 7E                    2632 	ld	a, (hl)
      00094B D6 14                 2633 	sub	a, #0x14
      00094D 38 30                 2634 	jr	C, 00108$
                                   2635 ;src/main.c:161: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      00094F F8 00                 2636 	ldhl	sp,	#0
      000951 4D                    2637 	ld	c, l
      000952 44                    2638 	ld	b, h
      000953 36 50                 2639 	ld	(hl), #0x50
      000955 69                    2640 	ld	l, c
                                   2641 ;	spillPairReg hl
                                   2642 ;	spillPairReg hl
      000956 60                    2643 	ld	h, b
                                   2644 ;	spillPairReg hl
                                   2645 ;	spillPairReg hl
      000957 23                    2646 	inc	hl
      000958 36 50                 2647 	ld	(hl), #0x50
      00095A 59                    2648 	ld	e, c
      00095B 50                    2649 	ld	d, b
      00095C 13                    2650 	inc	de
      00095D 13                    2651 	inc	de
      00095E AF                    2652 	xor	a, a
      00095F 12                    2653 	ld	(de), a
      000960 59                    2654 	ld	e, c
      000961 50                    2655 	ld	d, b
      000962 13                    2656 	inc	de
      000963 13                    2657 	inc	de
      000964 13                    2658 	inc	de
      000965 AF                    2659 	xor	a, a
      000966 12                    2660 	ld	(de), a
      000967 21 04 00              2661 	ld	hl, #0x0004
      00096A 09                    2662 	add	hl, bc
      00096B 36 00                 2663 	ld	(hl), #0x00
                                   2664 ;src/main.c:162: set_win_tiles(5,row,5,1,blockmap);
      00096D C5                    2665 	push	bc
      00096E 21 05 01              2666 	ld	hl, #0x105
      000971 E5                    2667 	push	hl
      000972 F8 0B                 2668 	ldhl	sp,	#11
      000974 66                    2669 	ld	h, (hl)
      000975 2E 05                 2670 	ld	l, #0x05
      000977 E5                    2671 	push	hl
      000978 CDr00r00              2672 	call	_set_win_tiles
      00097B E8 06                 2673 	add	sp, #6
                                   2674 ;src/main.c:163: return;
      00097D 18 2E                 2675 	jr	00109$
      00097F                       2676 00108$:
                                   2677 ;src/main.c:165: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      00097F F8 00                 2678 	ldhl	sp,	#0
      000981 4D                    2679 	ld	c, l
      000982 44                    2680 	ld	b, h
      000983 36 50                 2681 	ld	(hl), #0x50
      000985 59                    2682 	ld	e, c
      000986 50                    2683 	ld	d, b
      000987 13                    2684 	inc	de
      000988 AF                    2685 	xor	a, a
      000989 12                    2686 	ld	(de), a
      00098A 59                    2687 	ld	e, c
      00098B 50                    2688 	ld	d, b
      00098C 13                    2689 	inc	de
      00098D 13                    2690 	inc	de
      00098E AF                    2691 	xor	a, a
      00098F 12                    2692 	ld	(de), a
      000990 59                    2693 	ld	e, c
      000991 50                    2694 	ld	d, b
      000992 13                    2695 	inc	de
      000993 13                    2696 	inc	de
      000994 13                    2697 	inc	de
      000995 AF                    2698 	xor	a, a
      000996 12                    2699 	ld	(de), a
      000997 21 04 00              2700 	ld	hl, #0x0004
      00099A 09                    2701 	add	hl, bc
      00099B 36 00                 2702 	ld	(hl), #0x00
                                   2703 ;src/main.c:166: set_win_tiles(5,row,5,1,blockmap);
      00099D C5                    2704 	push	bc
      00099E 21 05 01              2705 	ld	hl, #0x105
      0009A1 E5                    2706 	push	hl
      0009A2 F8 0B                 2707 	ldhl	sp,	#11
      0009A4 66                    2708 	ld	h, (hl)
      0009A5 2E 05                 2709 	ld	l, #0x05
      0009A7 E5                    2710 	push	hl
      0009A8 CDr00r00              2711 	call	_set_win_tiles
      0009AB E8 06                 2712 	add	sp, #6
                                   2713 ;src/main.c:167: return;
      0009AD                       2714 00109$:
                                   2715 ;src/main.c:169: }
      0009AD E8 05                 2716 	add	sp, #5
      0009AF C9                    2717 	ret
                                   2718 ;src/main.c:171: void updateScore() {
                                   2719 ;	---------------------------------
                                   2720 ; Function updateScore
                                   2721 ; ---------------------------------
      0009B0                       2722 _updateScore::
      0009B0 E8 F6                 2723 	add	sp, #-10
                                   2724 ;src/main.c:175: len = bcd2text(&SCORE, 0x01, buf);
      0009B2 F8 00                 2725 	ldhl	sp,	#0
      0009B4 4D                    2726 	ld	c, l
      0009B5 44                    2727 	ld	b, h
      0009B6 59                    2728 	ld	e, c
      0009B7 50                    2729 	ld	d, b
      0009B8 C5                    2730 	push	bc
      0009B9 D5                    2731 	push	de
      0009BA 3E 01                 2732 	ld	a, #0x01
      0009BC F5                    2733 	push	af
      0009BD 33                    2734 	inc	sp
      0009BE 11rB3r00              2735 	ld	de, #_SCORE
      0009C1 D5                    2736 	push	de
      0009C2 CDr00r00              2737 	call	_bcd2text
      0009C5 E8 05                 2738 	add	sp, #5
      0009C7 C1                    2739 	pop	bc
                                   2740 ;src/main.c:176: set_win_tiles(15, 1, 5, 1, buf+3);
      0009C8 03                    2741 	inc	bc
      0009C9 03                    2742 	inc	bc
      0009CA 03                    2743 	inc	bc
      0009CB C5                    2744 	push	bc
      0009CC 21 05 01              2745 	ld	hl, #0x105
      0009CF E5                    2746 	push	hl
      0009D0 21 0F 01              2747 	ld	hl, #0x10f
      0009D3 E5                    2748 	push	hl
      0009D4 CDr00r00              2749 	call	_set_win_tiles
                                   2750 ;src/main.c:177: }
      0009D7 E8 10                 2751 	add	sp, #16
      0009D9 C9                    2752 	ret
                                   2753 ;src/main.c:179: void updateMissileCount(int8_t amount) {
                                   2754 ;	---------------------------------
                                   2755 ; Function updateMissileCount
                                   2756 ; ---------------------------------
      0009DA                       2757 _updateMissileCount::
      0009DA E8 F6                 2758 	add	sp, #-10
                                   2759 ;src/main.c:180: if (amount == -1) {
      0009DC F8 0C                 2760 	ldhl	sp,	#12
      0009DE 7E                    2761 	ld	a, (hl)
      0009DF 3C                    2762 	inc	a
      0009E0 20 13                 2763 	jr	NZ, 00112$
                                   2764 ;src/main.c:181: missiles--;
      0009E2 21rA8r00              2765 	ld	hl, #_missiles
      0009E5 35                    2766 	dec	(hl)
                                   2767 ;src/main.c:182: bcd_sub(&MISSILES, &INCREMENT);
      0009E6 11rB7r00              2768 	ld	de, #_INCREMENT
      0009E9 D5                    2769 	push	de
      0009EA 11rA9r00              2770 	ld	de, #_MISSILES
      0009ED D5                    2771 	push	de
      0009EE CDr00r00              2772 	call	_bcd_sub
      0009F1 E8 04                 2773 	add	sp, #4
      0009F3 18 30                 2774 	jr	00104$
                                   2775 ;src/main.c:185: for(int8_t i=0; i<amount;i++) {
      0009F5                       2776 00112$:
      0009F5 0E 00                 2777 	ld	c, #0x00
      0009F7                       2778 00106$:
      0009F7 F8 0C                 2779 	ldhl	sp,	#12
      0009F9 5E                    2780 	ld	e, (hl)
      0009FA 79                    2781 	ld	a,c
      0009FB 57                    2782 	ld	d,a
      0009FC 96                    2783 	sub	a, (hl)
      0009FD CB 7B                 2784 	bit	7, e
      0009FF 28 07                 2785 	jr	Z, 00128$
      000A01 CB 7A                 2786 	bit	7, d
      000A03 20 08                 2787 	jr	NZ, 00129$
      000A05 BF                    2788 	cp	a, a
      000A06 18 05                 2789 	jr	00129$
      000A08                       2790 00128$:
      000A08 CB 7A                 2791 	bit	7, d
      000A0A 28 01                 2792 	jr	Z, 00129$
      000A0C 37                    2793 	scf
      000A0D                       2794 00129$:
      000A0D 30 16                 2795 	jr	NC, 00104$
                                   2796 ;src/main.c:186: ++missiles;
      000A0F 21rA8r00              2797 	ld	hl, #_missiles
      000A12 34                    2798 	inc	(hl)
                                   2799 ;src/main.c:187: bcd_add(&MISSILES, &INCREMENT);
      000A13 C5                    2800 	push	bc
      000A14 11rB7r00              2801 	ld	de, #_INCREMENT
      000A17 D5                    2802 	push	de
      000A18 11rA9r00              2803 	ld	de, #_MISSILES
      000A1B D5                    2804 	push	de
      000A1C CDr00r00              2805 	call	_bcd_add
      000A1F E8 04                 2806 	add	sp, #4
      000A21 C1                    2807 	pop	bc
                                   2808 ;src/main.c:185: for(int8_t i=0; i<amount;i++) {
      000A22 0C                    2809 	inc	c
      000A23 18 D2                 2810 	jr	00106$
      000A25                       2811 00104$:
                                   2812 ;src/main.c:192: len = bcd2text(&MISSILES, 0x01, buf);
      000A25 F8 00                 2813 	ldhl	sp,	#0
      000A27 4D                    2814 	ld	c, l
      000A28 44                    2815 	ld	b, h
      000A29 59                    2816 	ld	e, c
      000A2A 50                    2817 	ld	d, b
      000A2B C5                    2818 	push	bc
      000A2C D5                    2819 	push	de
      000A2D 3E 01                 2820 	ld	a, #0x01
      000A2F F5                    2821 	push	af
      000A30 33                    2822 	inc	sp
      000A31 11rA9r00              2823 	ld	de, #_MISSILES
      000A34 D5                    2824 	push	de
      000A35 CDr00r00              2825 	call	_bcd2text
      000A38 E8 05                 2826 	add	sp, #5
      000A3A C1                    2827 	pop	bc
                                   2828 ;src/main.c:193: set_win_tiles(18, 0, 2, 1, buf+6);
      000A3B 21 06 00              2829 	ld	hl, #0x0006
      000A3E 09                    2830 	add	hl, bc
      000A3F E5                    2831 	push	hl
      000A40 21 02 01              2832 	ld	hl, #0x102
      000A43 E5                    2833 	push	hl
      000A44 21 12 00              2834 	ld	hl, #0x12
      000A47 E5                    2835 	push	hl
      000A48 CDr00r00              2836 	call	_set_win_tiles
                                   2837 ;src/main.c:195: }
      000A4B E8 10                 2838 	add	sp, #16
      000A4D C9                    2839 	ret
                                   2840 ;src/main.c:197: void incrementScore() {
                                   2841 ;	---------------------------------
                                   2842 ; Function incrementScore
                                   2843 ; ---------------------------------
      000A4E                       2844 _incrementScore::
                                   2845 ;src/main.c:198: score += 1;
      000A4E 21rB1r00              2846 	ld	hl, #_score
      000A51 2A                    2847 	ld	a, (hl+)
      000A52 4F                    2848 	ld	c, a
      000A53 3A                    2849 	ld	a, (hl-)
      000A54 47                    2850 	ld	b, a
      000A55 03                    2851 	inc	bc
      000A56 79                    2852 	ld	a, c
      000A57 22                    2853 	ld	(hl+), a
      000A58 70                    2854 	ld	(hl), b
                                   2855 ;src/main.c:199: bcd_add(&SCORE, &INCREMENT);
      000A59 11rB7r00              2856 	ld	de, #_INCREMENT
      000A5C D5                    2857 	push	de
      000A5D 11rB3r00              2858 	ld	de, #_SCORE
      000A60 D5                    2859 	push	de
      000A61 CDr00r00              2860 	call	_bcd_add
      000A64 E8 04                 2861 	add	sp, #4
                                   2862 ;src/main.c:200: }
      000A66 C9                    2863 	ret
                                   2864 ;src/main.c:202: void updateDirection() {
                                   2865 ;	---------------------------------
                                   2866 ; Function updateDirection
                                   2867 ; ---------------------------------
      000A67                       2868 _updateDirection::
      000A67 E8 FC                 2869 	add	sp, #-4
                                   2870 ;src/main.c:206: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000A69 21rF5r00              2871 	ld	hl, #_joydata
      000A6C 5E                    2872 	ld	e, (hl)
      000A6D 7B                    2873 	ld	a, e
      000A6E E6 01                 2874 	and	a, #0x01
      000A70 F8 00                 2875 	ldhl	sp,	#0
      000A72 22                    2876 	ld	(hl+), a
      000A73 AF                    2877 	xor	a, a
      000A74 22                    2878 	ld	(hl+), a
      000A75 7B                    2879 	ld	a, e
      000A76 E6 04                 2880 	and	a, #0x04
      000A78 22                    2881 	ld	(hl+), a
      000A79 AF                    2882 	xor	a, a
      000A7A 32                    2883 	ld	(hl-), a
      000A7B 2B                    2884 	dec	hl
      000A7C 7B                    2885 	ld	a, e
      000A7D E6 08                 2886 	and	a, #0x08
      000A7F 4F                    2887 	ld	c, a
      000A80 06 00                 2888 	ld	b, #0x00
      000A82 3A                    2889 	ld	a, (hl-)
      000A83 B6                    2890 	or	a, (hl)
      000A84 28 14                 2891 	jr	Z, 00102$
      000A86 F8 03                 2892 	ldhl	sp,	#3
      000A88 3A                    2893 	ld	a, (hl-)
      000A89 B6                    2894 	or	a, (hl)
      000A8A 20 0E                 2895 	jr	NZ, 00102$
      000A8C 78                    2896 	ld	a, b
      000A8D B1                    2897 	or	a, c
      000A8E 20 0A                 2898 	jr	NZ, 00102$
                                   2899 ;src/main.c:207: xDir = 1;
      000A90 21r93r00              2900 	ld	hl, #_xDir
      000A93 36 01                 2901 	ld	(hl), #0x01
                                   2902 ;src/main.c:208: yDir = 0;
      000A95 21r94r00              2903 	ld	hl, #_yDir
      000A98 36 00                 2904 	ld	(hl), #0x00
      000A9A                       2905 00102$:
                                   2906 ;src/main.c:210: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000A9A 7B                    2907 	ld	a, e
      000A9B E6 02                 2908 	and	a, #0x02
      000A9D 5F                    2909 	ld	e, a
      000A9E 16 00                 2910 	ld	d, #0x00
      000AA0 7A                    2911 	ld	a, d
      000AA1 B3                    2912 	or	a, e
      000AA2 28 14                 2913 	jr	Z, 00106$
      000AA4 F8 03                 2914 	ldhl	sp,	#3
      000AA6 3A                    2915 	ld	a, (hl-)
      000AA7 B6                    2916 	or	a, (hl)
      000AA8 20 0E                 2917 	jr	NZ, 00106$
      000AAA 78                    2918 	ld	a, b
      000AAB B1                    2919 	or	a, c
      000AAC 20 0A                 2920 	jr	NZ, 00106$
                                   2921 ;src/main.c:211: xDir = -1;
      000AAE 21r93r00              2922 	ld	hl, #_xDir
      000AB1 36 FF                 2923 	ld	(hl), #0xff
                                   2924 ;src/main.c:212: yDir = 0;
      000AB3 21r94r00              2925 	ld	hl, #_yDir
      000AB6 36 00                 2926 	ld	(hl), #0x00
      000AB8                       2927 00106$:
                                   2928 ;src/main.c:214: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000AB8 F8 03                 2929 	ldhl	sp,	#3
      000ABA 3A                    2930 	ld	a, (hl-)
      000ABB B6                    2931 	or	a, (hl)
      000ABC 28 13                 2932 	jr	Z, 00110$
      000ABE 7A                    2933 	ld	a, d
      000ABF B3                    2934 	or	a, e
      000AC0 20 0F                 2935 	jr	NZ, 00110$
      000AC2 2B                    2936 	dec	hl
      000AC3 3A                    2937 	ld	a, (hl-)
      000AC4 B6                    2938 	or	a, (hl)
      000AC5 20 0A                 2939 	jr	NZ, 00110$
                                   2940 ;src/main.c:215: xDir = 0;
      000AC7 21r93r00              2941 	ld	hl, #_xDir
      000ACA 36 00                 2942 	ld	(hl), #0x00
                                   2943 ;src/main.c:216: yDir = -1;
      000ACC 21r94r00              2944 	ld	hl, #_yDir
      000ACF 36 FF                 2945 	ld	(hl), #0xff
      000AD1                       2946 00110$:
                                   2947 ;src/main.c:218: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000AD1 78                    2948 	ld	a, b
      000AD2 B1                    2949 	or	a, c
      000AD3 28 14                 2950 	jr	Z, 00114$
      000AD5 7A                    2951 	ld	a, d
      000AD6 B3                    2952 	or	a, e
      000AD7 20 10                 2953 	jr	NZ, 00114$
      000AD9 F8 01                 2954 	ldhl	sp,	#1
      000ADB 3A                    2955 	ld	a, (hl-)
      000ADC B6                    2956 	or	a, (hl)
      000ADD 20 0A                 2957 	jr	NZ, 00114$
                                   2958 ;src/main.c:219: xDir = 0;
      000ADF 21r93r00              2959 	ld	hl, #_xDir
      000AE2 36 00                 2960 	ld	(hl), #0x00
                                   2961 ;src/main.c:220: yDir = 1;
      000AE4 21r94r00              2962 	ld	hl, #_yDir
      000AE7 36 01                 2963 	ld	(hl), #0x01
      000AE9                       2964 00114$:
                                   2965 ;src/main.c:224: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000AE9 F8 03                 2966 	ldhl	sp,	#3
      000AEB 3A                    2967 	ld	a, (hl-)
      000AEC B6                    2968 	or	a, (hl)
      000AED 28 0F                 2969 	jr	Z, 00118$
      000AEF 2B                    2970 	dec	hl
      000AF0 3A                    2971 	ld	a, (hl-)
      000AF1 B6                    2972 	or	a, (hl)
      000AF2 28 0A                 2973 	jr	Z, 00118$
                                   2974 ;src/main.c:225: xDir = 1;
      000AF4 21r93r00              2975 	ld	hl, #_xDir
      000AF7 36 01                 2976 	ld	(hl), #0x01
                                   2977 ;src/main.c:226: yDir = -1;
      000AF9 21r94r00              2978 	ld	hl, #_yDir
      000AFC 36 FF                 2979 	ld	(hl), #0xff
      000AFE                       2980 00118$:
                                   2981 ;src/main.c:228: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000AFE F8 03                 2982 	ldhl	sp,	#3
      000B00 3A                    2983 	ld	a, (hl-)
      000B01 B6                    2984 	or	a, (hl)
      000B02 28 0E                 2985 	jr	Z, 00121$
      000B04 7A                    2986 	ld	a, d
      000B05 B3                    2987 	or	a, e
      000B06 28 0A                 2988 	jr	Z, 00121$
                                   2989 ;src/main.c:229: xDir = -1;
      000B08 21r93r00              2990 	ld	hl, #_xDir
      000B0B 36 FF                 2991 	ld	(hl), #0xff
                                   2992 ;src/main.c:230: yDir = -1;
      000B0D 21r94r00              2993 	ld	hl, #_yDir
      000B10 36 FF                 2994 	ld	(hl), #0xff
      000B12                       2995 00121$:
                                   2996 ;src/main.c:232: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000B12 78                    2997 	ld	a, b
      000B13 B1                    2998 	or	a, c
      000B14 28 10                 2999 	jr	Z, 00124$
      000B16 F8 01                 3000 	ldhl	sp,	#1
      000B18 3A                    3001 	ld	a, (hl-)
      000B19 B6                    3002 	or	a, (hl)
      000B1A 28 0A                 3003 	jr	Z, 00124$
                                   3004 ;src/main.c:233: xDir = 1;
      000B1C 21r93r00              3005 	ld	hl, #_xDir
      000B1F 36 01                 3006 	ld	(hl), #0x01
                                   3007 ;src/main.c:234: yDir = 1;
      000B21 21r94r00              3008 	ld	hl, #_yDir
      000B24 36 01                 3009 	ld	(hl), #0x01
      000B26                       3010 00124$:
                                   3011 ;src/main.c:236: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000B26 78                    3012 	ld	a, b
      000B27 B1                    3013 	or	a, c
      000B28 28 0E                 3014 	jr	Z, 00127$
      000B2A 7A                    3015 	ld	a, d
      000B2B B3                    3016 	or	a, e
      000B2C 28 0A                 3017 	jr	Z, 00127$
                                   3018 ;src/main.c:237: xDir = -1;
      000B2E 21r93r00              3019 	ld	hl, #_xDir
      000B31 36 FF                 3020 	ld	(hl), #0xff
                                   3021 ;src/main.c:238: yDir = 1;
      000B33 21r94r00              3022 	ld	hl, #_yDir
      000B36 36 01                 3023 	ld	(hl), #0x01
      000B38                       3024 00127$:
                                   3025 ;src/main.c:243: if (xDir == 0 && yDir == 0) {
      000B38 FAr93r00              3026 	ld	a, (#_xDir)
      000B3B B7                    3027 	or	a, a
      000B3C 20 07                 3028 	jr	NZ, 00130$
      000B3E FAr94r00              3029 	ld	a, (#_yDir)
      000B41 B7                    3030 	or	a, a
                                   3031 ;src/main.c:244: return;
      000B42 CAr8Er0C              3032 	jp	Z,00195$
      000B45                       3033 00130$:
                                   3034 ;src/main.c:276: if (xDir == 0 && yDir > 0) {
      000B45 21r94r00              3035 	ld	hl, #_yDir
      000B48 5E                    3036 	ld	e, (hl)
      000B49 AF                    3037 	xor	a, a
      000B4A 57                    3038 	ld	d, a
      000B4B 96                    3039 	sub	a, (hl)
      000B4C CB 7B                 3040 	bit	7, e
      000B4E 28 07                 3041 	jr	Z, 00387$
      000B50 CB 7A                 3042 	bit	7, d
      000B52 20 08                 3043 	jr	NZ, 00388$
      000B54 BF                    3044 	cp	a, a
      000B55 18 05                 3045 	jr	00388$
      000B57                       3046 00387$:
      000B57 CB 7A                 3047 	bit	7, d
      000B59 28 01                 3048 	jr	Z, 00388$
      000B5B 37                    3049 	scf
      000B5C                       3050 00388$:
      000B5C 3E 00                 3051 	ld	a, #0x00
      000B5E 17                    3052 	rla
      000B5F 4F                    3053 	ld	c, a
      000B60 FAr93r00              3054 	ld	a, (#_xDir)
      000B63 B7                    3055 	or	a,a
      000B64 20 1A                 3056 	jr	NZ, 00160$
      000B66 B1                    3057 	or	a,c
      000B67 28 17                 3058 	jr	Z, 00160$
                                   3059 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B69 21r02r00              3060 	ld	hl, #(_shadow_OAM + 2)
      000B6C 36 00                 3061 	ld	(hl), #0x00
      000B6E 21r06r00              3062 	ld	hl, #(_shadow_OAM + 6)
      000B71 36 02                 3063 	ld	(hl), #0x02
                                   3064 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B73 21r03r00              3065 	ld	hl, #(_shadow_OAM + 3)
      000B76 36 40                 3066 	ld	(hl), #0x40
      000B78 21r07r00              3067 	ld	hl, #(_shadow_OAM + 7)
      000B7B 36 40                 3068 	ld	(hl), #0x40
                                   3069 ;src/main.c:280: set_sprite_prop(1, S_FLIPY); 
      000B7D C3r8Er0C              3070 	jp	00195$
      000B80                       3071 00160$:
                                   3072 ;src/main.c:282: else if (xDir == 0 && yDir < 0) {
      000B80 FAr94r00              3073 	ld	a, (#_yDir)
      000B83 07                    3074 	rlca
      000B84 E6 01                 3075 	and	a,#0x01
      000B86 F8 02                 3076 	ldhl	sp,	#2
      000B88 77                    3077 	ld	(hl), a
      000B89 FAr93r00              3078 	ld	a, (#_xDir)
      000B8C B7                    3079 	or	a, a
      000B8D 20 1D                 3080 	jr	NZ, 00156$
      000B8F F8 02                 3081 	ldhl	sp,	#2
      000B91 7E                    3082 	ld	a, (hl)
      000B92 B7                    3083 	or	a, a
      000B93 28 17                 3084 	jr	Z, 00156$
                                   3085 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B95 21r02r00              3086 	ld	hl, #(_shadow_OAM + 2)
      000B98 36 00                 3087 	ld	(hl), #0x00
      000B9A 21r06r00              3088 	ld	hl, #(_shadow_OAM + 6)
      000B9D 36 02                 3089 	ld	(hl), #0x02
                                   3090 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B9F 21r03r00              3091 	ld	hl, #(_shadow_OAM + 3)
      000BA2 36 00                 3092 	ld	(hl), #0x00
      000BA4 21r07r00              3093 	ld	hl, #(_shadow_OAM + 7)
      000BA7 36 00                 3094 	ld	(hl), #0x00
                                   3095 ;src/main.c:286: set_sprite_prop(1, 0); 
      000BA9 C3r8Er0C              3096 	jp	00195$
      000BAC                       3097 00156$:
                                   3098 ;src/main.c:288: else if (xDir > 0 && yDir == 0) {
      000BAC 21r93r00              3099 	ld	hl, #_xDir
      000BAF 5E                    3100 	ld	e, (hl)
      000BB0 AF                    3101 	xor	a, a
      000BB1 57                    3102 	ld	d, a
      000BB2 96                    3103 	sub	a, (hl)
      000BB3 CB 7B                 3104 	bit	7, e
      000BB5 28 07                 3105 	jr	Z, 00389$
      000BB7 CB 7A                 3106 	bit	7, d
      000BB9 20 08                 3107 	jr	NZ, 00390$
      000BBB BF                    3108 	cp	a, a
      000BBC 18 05                 3109 	jr	00390$
      000BBE                       3110 00389$:
      000BBE CB 7A                 3111 	bit	7, d
      000BC0 28 01                 3112 	jr	Z, 00390$
      000BC2 37                    3113 	scf
      000BC3                       3114 00390$:
      000BC3 3E 00                 3115 	ld	a, #0x00
      000BC5 17                    3116 	rla
      000BC6 47                    3117 	ld	b, a
      000BC7 B7                    3118 	or	a, a
      000BC8 28 1D                 3119 	jr	Z, 00152$
      000BCA FAr94r00              3120 	ld	a, (#_yDir)
      000BCD B7                    3121 	or	a, a
      000BCE 20 17                 3122 	jr	NZ, 00152$
                                   3123 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BD0 21r02r00              3124 	ld	hl, #(_shadow_OAM + 2)
      000BD3 36 04                 3125 	ld	(hl), #0x04
      000BD5 21r06r00              3126 	ld	hl, #(_shadow_OAM + 6)
      000BD8 36 06                 3127 	ld	(hl), #0x06
                                   3128 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BDA 21r03r00              3129 	ld	hl, #(_shadow_OAM + 3)
      000BDD 36 00                 3130 	ld	(hl), #0x00
      000BDF 21r07r00              3131 	ld	hl, #(_shadow_OAM + 7)
      000BE2 36 00                 3132 	ld	(hl), #0x00
                                   3133 ;src/main.c:292: set_sprite_prop(1, 0); 
      000BE4 C3r8Er0C              3134 	jp	00195$
      000BE7                       3135 00152$:
                                   3136 ;src/main.c:294: else if (xDir < 0 && yDir == 0) {
      000BE7 FAr93r00              3137 	ld	a, (#_xDir)
      000BEA 07                    3138 	rlca
      000BEB E6 01                 3139 	and	a,#0x01
      000BED F8 03                 3140 	ldhl	sp,	#3
      000BEF 77                    3141 	ld	(hl), a
      000BF0 7E                    3142 	ld	a, (hl)
      000BF1 B7                    3143 	or	a, a
      000BF2 28 1D                 3144 	jr	Z, 00148$
      000BF4 FAr94r00              3145 	ld	a, (#_yDir)
      000BF7 B7                    3146 	or	a, a
      000BF8 20 17                 3147 	jr	NZ, 00148$
                                   3148 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BFA 21r02r00              3149 	ld	hl, #(_shadow_OAM + 2)
      000BFD 36 04                 3150 	ld	(hl), #0x04
      000BFF 21r06r00              3151 	ld	hl, #(_shadow_OAM + 6)
      000C02 36 06                 3152 	ld	(hl), #0x06
                                   3153 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C04 21r03r00              3154 	ld	hl, #(_shadow_OAM + 3)
      000C07 36 20                 3155 	ld	(hl), #0x20
      000C09 21r07r00              3156 	ld	hl, #(_shadow_OAM + 7)
      000C0C 36 20                 3157 	ld	(hl), #0x20
                                   3158 ;src/main.c:298: set_sprite_prop(1, S_FLIPX); 
      000C0E C3r8Er0C              3159 	jp	00195$
      000C11                       3160 00148$:
                                   3161 ;src/main.c:300: else if (xDir > 0 && yDir < 0) {
      000C11 78                    3162 	ld	a, b
      000C12 B7                    3163 	or	a, a
      000C13 28 1C                 3164 	jr	Z, 00144$
      000C15 F8 02                 3165 	ldhl	sp,	#2
      000C17 7E                    3166 	ld	a, (hl)
      000C18 B7                    3167 	or	a, a
      000C19 28 16                 3168 	jr	Z, 00144$
                                   3169 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C1B 21r02r00              3170 	ld	hl, #(_shadow_OAM + 2)
      000C1E 36 08                 3171 	ld	(hl), #0x08
      000C20 21r06r00              3172 	ld	hl, #(_shadow_OAM + 6)
      000C23 36 0A                 3173 	ld	(hl), #0x0a
                                   3174 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C25 21r03r00              3175 	ld	hl, #(_shadow_OAM + 3)
      000C28 36 00                 3176 	ld	(hl), #0x00
      000C2A 21r07r00              3177 	ld	hl, #(_shadow_OAM + 7)
      000C2D 36 00                 3178 	ld	(hl), #0x00
                                   3179 ;src/main.c:304: set_sprite_prop(1, 0); 
      000C2F 18 5D                 3180 	jr	00195$
      000C31                       3181 00144$:
                                   3182 ;src/main.c:306: else if (xDir > 0 && yDir > 0) {
      000C31 78                    3183 	ld	a, b
      000C32 B7                    3184 	or	a, a
      000C33 28 1A                 3185 	jr	Z, 00140$
      000C35 79                    3186 	ld	a, c
      000C36 B7                    3187 	or	a, a
      000C37 28 16                 3188 	jr	Z, 00140$
                                   3189 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C39 21r02r00              3190 	ld	hl, #(_shadow_OAM + 2)
      000C3C 36 08                 3191 	ld	(hl), #0x08
      000C3E 21r06r00              3192 	ld	hl, #(_shadow_OAM + 6)
      000C41 36 0A                 3193 	ld	(hl), #0x0a
                                   3194 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C43 21r03r00              3195 	ld	hl, #(_shadow_OAM + 3)
      000C46 36 40                 3196 	ld	(hl), #0x40
      000C48 21r07r00              3197 	ld	hl, #(_shadow_OAM + 7)
      000C4B 36 40                 3198 	ld	(hl), #0x40
                                   3199 ;src/main.c:310: set_sprite_prop(1, S_FLIPY); 
      000C4D 18 3F                 3200 	jr	00195$
      000C4F                       3201 00140$:
                                   3202 ;src/main.c:312: else if (xDir < 0 && yDir > 0) {
      000C4F F8 03                 3203 	ldhl	sp,	#3
      000C51 7E                    3204 	ld	a, (hl)
      000C52 B7                    3205 	or	a, a
      000C53 28 1A                 3206 	jr	Z, 00136$
      000C55 79                    3207 	ld	a, c
      000C56 B7                    3208 	or	a, a
      000C57 28 16                 3209 	jr	Z, 00136$
                                   3210 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C59 21r02r00              3211 	ld	hl, #(_shadow_OAM + 2)
      000C5C 36 08                 3212 	ld	(hl), #0x08
      000C5E 21r06r00              3213 	ld	hl, #(_shadow_OAM + 6)
      000C61 36 0A                 3214 	ld	(hl), #0x0a
                                   3215 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C63 21r03r00              3216 	ld	hl, #(_shadow_OAM + 3)
      000C66 36 60                 3217 	ld	(hl), #0x60
      000C68 21r07r00              3218 	ld	hl, #(_shadow_OAM + 7)
      000C6B 36 60                 3219 	ld	(hl), #0x60
                                   3220 ;src/main.c:316: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000C6D 18 1F                 3221 	jr	00195$
      000C6F                       3222 00136$:
                                   3223 ;src/main.c:318: else if (xDir < 0 && yDir < 0) {
      000C6F F8 03                 3224 	ldhl	sp,	#3
      000C71 7E                    3225 	ld	a, (hl)
      000C72 B7                    3226 	or	a, a
      000C73 28 19                 3227 	jr	Z, 00195$
      000C75 2B                    3228 	dec	hl
      000C76 7E                    3229 	ld	a, (hl)
      000C77 B7                    3230 	or	a, a
      000C78 28 14                 3231 	jr	Z, 00195$
                                   3232 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C7A 21r02r00              3233 	ld	hl, #(_shadow_OAM + 2)
      000C7D 36 08                 3234 	ld	(hl), #0x08
      000C7F 21r06r00              3235 	ld	hl, #(_shadow_OAM + 6)
      000C82 36 0A                 3236 	ld	(hl), #0x0a
                                   3237 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C84 21r03r00              3238 	ld	hl, #(_shadow_OAM + 3)
      000C87 36 20                 3239 	ld	(hl), #0x20
      000C89 21r07r00              3240 	ld	hl, #(_shadow_OAM + 7)
      000C8C 36 20                 3241 	ld	(hl), #0x20
                                   3242 ;src/main.c:322: set_sprite_prop(1, S_FLIPX); 
      000C8E                       3243 00195$:
                                   3244 ;src/main.c:324: }
      000C8E E8 04                 3245 	add	sp, #4
      000C90 C9                    3246 	ret
                                   3247 ;src/main.c:358: void playSound(uint8_t type) {
                                   3248 ;	---------------------------------
                                   3249 ; Function playSound
                                   3250 ; ---------------------------------
      000C91                       3251 _playSound::
                                   3252 ;src/main.c:359: if (type == 20) { //singlegun
      000C91 F8 02                 3253 	ldhl	sp,	#2
      000C93 7E                    3254 	ld	a, (hl)
      000C94 D6 14                 3255 	sub	a, #0x14
      000C96 20 13                 3256 	jr	NZ, 00102$
                                   3257 ;src/main.c:360: NR10_REG = 0x00;
      000C98 AF                    3258 	xor	a, a
      000C99 E0r00                 3259 	ldh	(_NR10_REG + 0), a
                                   3260 ;src/main.c:361: NR11_REG = 0x81;
      000C9B 3E 81                 3261 	ld	a, #0x81
      000C9D E0r00                 3262 	ldh	(_NR11_REG + 0), a
                                   3263 ;src/main.c:362: NR12_REG = 0x43;
      000C9F 3E 43                 3264 	ld	a, #0x43
      000CA1 E0r00                 3265 	ldh	(_NR12_REG + 0), a
                                   3266 ;src/main.c:363: NR13_REG = 0X00;//0x6D;
      000CA3 AF                    3267 	xor	a, a
      000CA4 E0r00                 3268 	ldh	(_NR13_REG + 0), a
                                   3269 ;src/main.c:364: NR14_REG = 0x86;
      000CA6 3E 86                 3270 	ld	a, #0x86
      000CA8 E0r00                 3271 	ldh	(_NR14_REG + 0), a
                                   3272 ;src/main.c:365: return;
      000CAA C9                    3273 	ret
      000CAB                       3274 00102$:
                                   3275 ;src/main.c:367: if (type == 23) {
      000CAB F8 02                 3276 	ldhl	sp,	#2
      000CAD 7E                    3277 	ld	a, (hl)
      000CAE D6 17                 3278 	sub	a, #0x17
      000CB0 20 12                 3279 	jr	NZ, 00104$
                                   3280 ;src/main.c:368: NR10_REG = 0x00;
      000CB2 AF                    3281 	xor	a, a
      000CB3 E0r00                 3282 	ldh	(_NR10_REG + 0), a
                                   3283 ;src/main.c:369: NR11_REG = 0x81;
      000CB5 3E 81                 3284 	ld	a, #0x81
      000CB7 E0r00                 3285 	ldh	(_NR11_REG + 0), a
                                   3286 ;src/main.c:370: NR12_REG = 0x53;
      000CB9 3E 53                 3287 	ld	a, #0x53
      000CBB E0r00                 3288 	ldh	(_NR12_REG + 0), a
                                   3289 ;src/main.c:371: NR13_REG = 0X00;//0x6D;
      000CBD AF                    3290 	xor	a, a
      000CBE E0r00                 3291 	ldh	(_NR13_REG + 0), a
                                   3292 ;src/main.c:372: NR14_REG = 0x86;
      000CC0 3E 86                 3293 	ld	a, #0x86
      000CC2 E0r00                 3294 	ldh	(_NR14_REG + 0), a
      000CC4                       3295 00104$:
                                   3296 ;src/main.c:374: if (type == 26) {
      000CC4 F8 02                 3297 	ldhl	sp,	#2
      000CC6 7E                    3298 	ld	a, (hl)
      000CC7 D6 1A                 3299 	sub	a, #0x1a
      000CC9 20 13                 3300 	jr	NZ, 00106$
                                   3301 ;src/main.c:375: NR10_REG = 0x00;
      000CCB AF                    3302 	xor	a, a
      000CCC E0r00                 3303 	ldh	(_NR10_REG + 0), a
                                   3304 ;src/main.c:376: NR11_REG = 0x89;
      000CCE 3E 89                 3305 	ld	a, #0x89
      000CD0 E0r00                 3306 	ldh	(_NR11_REG + 0), a
                                   3307 ;src/main.c:377: NR12_REG = 0x55;
      000CD2 3E 55                 3308 	ld	a, #0x55
      000CD4 E0r00                 3309 	ldh	(_NR12_REG + 0), a
                                   3310 ;src/main.c:378: NR13_REG = 0x70;//0Xbe;//0x6D;
      000CD6 3E 70                 3311 	ld	a, #0x70
      000CD8 E0r00                 3312 	ldh	(_NR13_REG + 0), a
                                   3313 ;src/main.c:379: NR14_REG = 0x84;
      000CDA 3E 84                 3314 	ld	a, #0x84
      000CDC E0r00                 3315 	ldh	(_NR14_REG + 0), a
      000CDE                       3316 00106$:
                                   3317 ;src/main.c:381: if (type == 0) {  // explosion
      000CDE F8 02                 3318 	ldhl	sp,	#2
      000CE0 7E                    3319 	ld	a, (hl)
      000CE1 B7                    3320 	or	a, a
      000CE2 C0                    3321 	ret	NZ
                                   3322 ;src/main.c:382: NR41_REG = 0x20;  
      000CE3 3E 20                 3323 	ld	a, #0x20
      000CE5 E0r00                 3324 	ldh	(_NR41_REG + 0), a
                                   3325 ;src/main.c:383: NR42_REG = 0xa2;//0xa3;  
      000CE7 3E A2                 3326 	ld	a, #0xa2
      000CE9 E0r00                 3327 	ldh	(_NR42_REG + 0), a
                                   3328 ;src/main.c:384: NR43_REG = 0x57;  
      000CEB 3E 57                 3329 	ld	a, #0x57
      000CED E0r00                 3330 	ldh	(_NR43_REG + 0), a
                                   3331 ;src/main.c:385: NR44_REG = 0x80;  
      000CEF 3E 80                 3332 	ld	a, #0x80
      000CF1 E0r00                 3333 	ldh	(_NR44_REG + 0), a
                                   3334 ;src/main.c:391: }
      000CF3 C9                    3335 	ret
                                   3336 ;src/main.c:393: void initEnemies(uint8_t loadSprites) {
                                   3337 ;	---------------------------------
                                   3338 ; Function initEnemies
                                   3339 ; ---------------------------------
      000CF4                       3340 _initEnemies::
      000CF4 E8 F9                 3341 	add	sp, #-7
                                   3342 ;src/main.c:395: if (loadSprites) {
      000CF6 F8 09                 3343 	ldhl	sp,	#9
      000CF8 7E                    3344 	ld	a, (hl)
      000CF9 B7                    3345 	or	a, a
      000CFA 28 1A                 3346 	jr	Z, 00102$
                                   3347 ;src/main.c:397: set_sprite_data(0x40, 5, enemy1);
      000CFC 11r18r05              3348 	ld	de, #_enemy1
      000CFF D5                    3349 	push	de
      000D00 21 40 05              3350 	ld	hl, #0x540
      000D03 E5                    3351 	push	hl
      000D04 CDr00r00              3352 	call	_set_sprite_data
      000D07 E8 04                 3353 	add	sp, #4
                                   3354 ;src/main.c:398: set_sprite_data(0x50, 8, largeenemies);
      000D09 11r68r05              3355 	ld	de, #_largeenemies
      000D0C D5                    3356 	push	de
      000D0D 21 50 08              3357 	ld	hl, #0x850
      000D10 E5                    3358 	push	hl
      000D11 CDr00r00              3359 	call	_set_sprite_data
      000D14 E8 04                 3360 	add	sp, #4
      000D16                       3361 00102$:
                                   3362 ;src/main.c:401: struct Enemy *eptr = enemies;
      000D16 01r5Ar00              3363 	ld	bc, #_enemies+0
                                   3364 ;src/main.c:403: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D19 F8 06                 3365 	ldhl	sp,	#6
      000D1B 36 00                 3366 	ld	(hl), #0x00
      000D1D                       3367 00116$:
      000D1D 21r88r08              3368 	ld	hl, #_ENEMYCOUNT
      000D20 5E                    3369 	ld	e, (hl)
      000D21 F8 06                 3370 	ldhl	sp,	#6
      000D23 7E                    3371 	ld	a, (hl)
      000D24 93                    3372 	sub	a, e
      000D25 D2r5Cr0E              3373 	jp	NC, 00118$
                                   3374 ;src/main.c:404: if (eptr->alive == 0) {
      000D28 21 09 00              3375 	ld	hl, #0x0009
      000D2B 09                    3376 	add	hl, bc
      000D2C 7E                    3377 	ld	a, (hl)
      000D2D B7                    3378 	or	a, a
      000D2E C2r50r0E              3379 	jp	NZ, 00107$
                                   3380 ;src/main.c:406: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      000D31 C5                    3381 	push	bc
      000D32 CDr00r00              3382 	call	_rand
      000D35 7B                    3383 	ld	a, e
      000D36 C1                    3384 	pop	bc
      000D37 21r17r05              3385 	ld	hl, #_enemyOptionCount
      000D3A 56                    3386 	ld	d, (hl)
      000D3B C5                    3387 	push	bc
      000D3C D5                    3388 	push	de
      000D3D 33                    3389 	inc	sp
      000D3E F5                    3390 	push	af
      000D3F 33                    3391 	inc	sp
      000D40 CDr00r00              3392 	call	__moduchar
      000D43 E1                    3393 	pop	hl
      000D44 7B                    3394 	ld	a, e
      000D45 C1                    3395 	pop	bc
                                   3396 ;src/main.c:408: (*eptr) = enemyOptions[enemyInd];
      000D46 5F                    3397 	ld	e, a
      000D47 16 00                 3398 	ld	d, #0x00
      000D49 6B                    3399 	ld	l, e
      000D4A 62                    3400 	ld	h, d
      000D4B 29                    3401 	add	hl, hl
      000D4C 29                    3402 	add	hl, hl
      000D4D 29                    3403 	add	hl, hl
      000D4E 19                    3404 	add	hl, de
      000D4F 29                    3405 	add	hl, hl
      000D50 11r00r00              3406 	ld	de, #_enemyOptions
      000D53 19                    3407 	add	hl, de
      000D54 59                    3408 	ld	e, c
      000D55 50                    3409 	ld	d, b
      000D56 C5                    3410 	push	bc
      000D57 01 12 00              3411 	ld	bc, #0x12
      000D5A C5                    3412 	push	bc
      000D5B E5                    3413 	push	hl
      000D5C D5                    3414 	push	de
      000D5D CDr00r00              3415 	call	___memcpy
      000D60 E8 06                 3416 	add	sp, #6
      000D62 CDr00r00              3417 	call	_rand
      000D65 7B                    3418 	ld	a, e
      000D66 C1                    3419 	pop	bc
      000D67 E6 07                 3420 	and	a, #0x07
      000D69 F8 05                 3421 	ldhl	sp,	#5
      000D6B 77                    3422 	ld	(hl), a
                                   3423 ;src/main.c:411: eptr->x = xSpawnPositions[posIndex];
      000D6C 11r89r08              3424 	ld	de, #_xSpawnPositions
      000D6F 6E                    3425 	ld	l, (hl)
      000D70 26 00                 3426 	ld	h, #0x00
      000D72 19                    3427 	add	hl, de
      000D73 5D                    3428 	ld	e, l
      000D74 54                    3429 	ld	d, h
      000D75 1A                    3430 	ld	a, (de)
      000D76 5F                    3431 	ld	e, a
      000D77 16 00                 3432 	ld	d, #0x00
      000D79 69                    3433 	ld	l, c
      000D7A 60                    3434 	ld	h, b
      000D7B 7B                    3435 	ld	a, e
      000D7C 22                    3436 	ld	(hl+), a
      000D7D 72                    3437 	ld	(hl), d
                                   3438 ;src/main.c:412: eptr->y = ySpawnPositions[posIndex];
      000D7E 21 02 00              3439 	ld	hl, #0x0002
      000D81 09                    3440 	add	hl, bc
      000D82 33                    3441 	inc	sp
      000D83 33                    3442 	inc	sp
      000D84 E5                    3443 	push	hl
      000D85 11r91r08              3444 	ld	de, #_ySpawnPositions
      000D88 F8 05                 3445 	ldhl	sp,	#5
      000D8A 6E                    3446 	ld	l, (hl)
      000D8B 26 00                 3447 	ld	h, #0x00
      000D8D 19                    3448 	add	hl, de
      000D8E 5D                    3449 	ld	e, l
      000D8F 54                    3450 	ld	d, h
      000D90 1A                    3451 	ld	a, (de)
      000D91 F8 04                 3452 	ldhl	sp,	#4
      000D93 22                    3453 	ld	(hl+), a
      000D94 AF                    3454 	xor	a, a
      000D95 32                    3455 	ld	(hl-), a
      000D96 D1                    3456 	pop	de
      000D97 D5                    3457 	push	de
      000D98 2A                    3458 	ld	a, (hl+)
      000D99 12                    3459 	ld	(de), a
      000D9A 13                    3460 	inc	de
      000D9B 7E                    3461 	ld	a, (hl)
      000D9C 12                    3462 	ld	(de), a
                                   3463 ;src/main.c:414: if (eptr->spriteCount == 1) {
      000D9D 21 08 00              3464 	ld	hl, #0x0008
      000DA0 09                    3465 	add	hl, bc
      000DA1 7E                    3466 	ld	a, (hl)
      000DA2 F8 05                 3467 	ldhl	sp,	#5
      000DA4 77                    3468 	ld	(hl), a
                                   3469 ;src/main.c:415: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DA5 21 06 00              3470 	ld	hl, #0x0006
      000DA8 09                    3471 	add	hl, bc
      000DA9 5D                    3472 	ld	e, l
      000DAA 54                    3473 	ld	d, h
      000DAB F8 06                 3474 	ldhl	sp,	#6
      000DAD 6E                    3475 	ld	l, (hl)
                                   3476 ;	spillPairReg hl
                                   3477 ;	spillPairReg hl
      000DAE 1A                    3478 	ld	a, (de)
      000DAF 5F                    3479 	ld	e, a
      000DB0 7D                    3480 	ld	a, l
      000DB1 87                    3481 	add	a, a
      000DB2 F8 02                 3482 	ldhl	sp,	#2
      000DB4 77                    3483 	ld	(hl), a
      000DB5 2A                    3484 	ld	a, (hl+)
      000DB6 C6 0A                 3485 	add	a, #0x0a
                                   3486 ;src/main.c:414: if (eptr->spriteCount == 1) {
      000DB8 22                    3487 	ld	(hl+), a
      000DB9 23                    3488 	inc	hl
      000DBA 7E                    3489 	ld	a, (hl)
      000DBB 3D                    3490 	dec	a
      000DBC 20 2D                 3491 	jr	NZ, 00104$
                                   3492 ;src/main.c:415: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DBE F8 03                 3493 	ldhl	sp,	#3
      000DC0 56                    3494 	ld	d, (hl)
                                   3495 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DC1 6A                    3496 	ld	l, d
                                   3497 ;	spillPairReg hl
                                   3498 ;	spillPairReg hl
      000DC2 26 00                 3499 	ld	h, #0x00
                                   3500 ;	spillPairReg hl
                                   3501 ;	spillPairReg hl
      000DC4 29                    3502 	add	hl, hl
      000DC5 29                    3503 	add	hl, hl
      000DC6 D5                    3504 	push	de
      000DC7 11r00r00              3505 	ld	de, #_shadow_OAM
      000DCA 19                    3506 	add	hl, de
      000DCB 23                    3507 	inc	hl
      000DCC 23                    3508 	inc	hl
      000DCD D1                    3509 	pop	de
      000DCE 73                    3510 	ld	(hl), e
                                   3511 ;src/main.c:416: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DCF D1                    3512 	pop	de
      000DD0 D5                    3513 	push	de
      000DD1 1A                    3514 	ld	a, (de)
      000DD2 F8 05                 3515 	ldhl	sp,	#5
      000DD4 32                    3516 	ld	(hl-), a
      000DD5 0A                    3517 	ld	a, (bc)
      000DD6 32                    3518 	ld	(hl-), a
                                   3519 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000DD7 6E                    3520 	ld	l, (hl)
                                   3521 ;	spillPairReg hl
                                   3522 ;	spillPairReg hl
      000DD8 26 00                 3523 	ld	h, #0x00
                                   3524 ;	spillPairReg hl
                                   3525 ;	spillPairReg hl
      000DDA 29                    3526 	add	hl, hl
      000DDB 29                    3527 	add	hl, hl
      000DDC 11r00r00              3528 	ld	de, #_shadow_OAM
      000DDF 19                    3529 	add	hl, de
      000DE0 5D                    3530 	ld	e, l
      000DE1 54                    3531 	ld	d, h
                                   3532 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000DE2 F8 05                 3533 	ldhl	sp,	#5
      000DE4 3A                    3534 	ld	a, (hl-)
      000DE5 12                    3535 	ld	(de), a
      000DE6 13                    3536 	inc	de
      000DE7 7E                    3537 	ld	a, (hl)
      000DE8 12                    3538 	ld	(de), a
                                   3539 ;src/main.c:416: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DE9 18 65                 3540 	jr	00107$
      000DEB                       3541 00104$:
                                   3542 ;src/main.c:419: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DEB F8 03                 3543 	ldhl	sp,	#3
      000DED 56                    3544 	ld	d, (hl)
                                   3545 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DEE 6A                    3546 	ld	l, d
                                   3547 ;	spillPairReg hl
                                   3548 ;	spillPairReg hl
      000DEF 26 00                 3549 	ld	h, #0x00
                                   3550 ;	spillPairReg hl
                                   3551 ;	spillPairReg hl
      000DF1 29                    3552 	add	hl, hl
      000DF2 29                    3553 	add	hl, hl
      000DF3 D5                    3554 	push	de
      000DF4 11r00r00              3555 	ld	de, #_shadow_OAM
      000DF7 19                    3556 	add	hl, de
      000DF8 23                    3557 	inc	hl
      000DF9 23                    3558 	inc	hl
      000DFA D1                    3559 	pop	de
      000DFB 73                    3560 	ld	(hl), e
                                   3561 ;src/main.c:420: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DFC D1                    3562 	pop	de
      000DFD D5                    3563 	push	de
      000DFE 1A                    3564 	ld	a, (de)
      000DFF F8 04                 3565 	ldhl	sp,	#4
      000E01 22                    3566 	ld	(hl+), a
      000E02 0A                    3567 	ld	a, (bc)
      000E03 32                    3568 	ld	(hl-), a
      000E04 2B                    3569 	dec	hl
      000E05 5E                    3570 	ld	e, (hl)
                                   3571 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E06 26 00                 3572 	ld	h, #0x00
                                   3573 ;	spillPairReg hl
                                   3574 ;	spillPairReg hl
      000E08 6B                    3575 	ld	l, e
      000E09 29                    3576 	add	hl, hl
      000E0A 29                    3577 	add	hl, hl
      000E0B 11r00r00              3578 	ld	de, #_shadow_OAM
      000E0E 19                    3579 	add	hl, de
      000E0F 5D                    3580 	ld	e, l
      000E10 54                    3581 	ld	d, h
                                   3582 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E11 F8 04                 3583 	ldhl	sp,	#4
      000E13 2A                    3584 	ld	a, (hl+)
      000E14 12                    3585 	ld	(de), a
      000E15 13                    3586 	inc	de
      000E16 7E                    3587 	ld	a, (hl)
      000E17 12                    3588 	ld	(de), a
                                   3589 ;src/main.c:422: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      000E18 21 07 00              3590 	ld	hl, #0x0007
      000E1B 09                    3591 	add	hl, bc
      000E1C 5E                    3592 	ld	e, (hl)
      000E1D F8 02                 3593 	ldhl	sp,	#2
      000E1F 7E                    3594 	ld	a, (hl)
      000E20 C6 0B                 3595 	add	a, #0x0b
      000E22 F8 05                 3596 	ldhl	sp,	#5
      000E24 77                    3597 	ld	(hl), a
      000E25 56                    3598 	ld	d, (hl)
                                   3599 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E26 6A                    3600 	ld	l, d
                                   3601 ;	spillPairReg hl
                                   3602 ;	spillPairReg hl
      000E27 26 00                 3603 	ld	h, #0x00
                                   3604 ;	spillPairReg hl
                                   3605 ;	spillPairReg hl
      000E29 29                    3606 	add	hl, hl
      000E2A 29                    3607 	add	hl, hl
      000E2B D5                    3608 	push	de
      000E2C 11r00r00              3609 	ld	de, #_shadow_OAM
      000E2F 19                    3610 	add	hl, de
      000E30 23                    3611 	inc	hl
      000E31 23                    3612 	inc	hl
      000E32 D1                    3613 	pop	de
      000E33 73                    3614 	ld	(hl), e
                                   3615 ;src/main.c:423: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000E34 D1                    3616 	pop	de
      000E35 D5                    3617 	push	de
      000E36 1A                    3618 	ld	a, (de)
      000E37 F8 04                 3619 	ldhl	sp,	#4
      000E39 32                    3620 	ld	(hl-), a
      000E3A 0A                    3621 	ld	a, (bc)
      000E3B 22                    3622 	ld	(hl+), a
      000E3C 23                    3623 	inc	hl
      000E3D 5E                    3624 	ld	e, (hl)
                                   3625 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E3E 26 00                 3626 	ld	h, #0x00
                                   3627 ;	spillPairReg hl
                                   3628 ;	spillPairReg hl
      000E40 6B                    3629 	ld	l, e
      000E41 29                    3630 	add	hl, hl
      000E42 29                    3631 	add	hl, hl
      000E43 11r00r00              3632 	ld	de, #_shadow_OAM
      000E46 19                    3633 	add	hl, de
      000E47 5D                    3634 	ld	e, l
      000E48 54                    3635 	ld	d, h
                                   3636 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E49 F8 04                 3637 	ldhl	sp,	#4
      000E4B 3A                    3638 	ld	a, (hl-)
      000E4C 12                    3639 	ld	(de), a
      000E4D 13                    3640 	inc	de
      000E4E 7E                    3641 	ld	a, (hl)
      000E4F 12                    3642 	ld	(de), a
                                   3643 ;src/main.c:423: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000E50                       3644 00107$:
                                   3645 ;src/main.c:428: eptr++;
      000E50 21 12 00              3646 	ld	hl, #0x0012
      000E53 09                    3647 	add	hl, bc
      000E54 4D                    3648 	ld	c, l
      000E55 44                    3649 	ld	b, h
                                   3650 ;src/main.c:403: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E56 F8 06                 3651 	ldhl	sp,	#6
      000E58 34                    3652 	inc	(hl)
      000E59 C3r1Dr0D              3653 	jp	00116$
      000E5C                       3654 00118$:
                                   3655 ;src/main.c:431: }
      000E5C E8 07                 3656 	add	sp, #7
      000E5E C9                    3657 	ret
                                   3658 ;src/main.c:434: void updateEnemyPositions() {
                                   3659 ;	---------------------------------
                                   3660 ; Function updateEnemyPositions
                                   3661 ; ---------------------------------
      000E5F                       3662 _updateEnemyPositions::
      000E5F E8 F0                 3663 	add	sp, #-16
                                   3664 ;src/main.c:437: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E61 F8 0F                 3665 	ldhl	sp,	#15
      000E63 36 00                 3666 	ld	(hl), #0x00
      000E65                       3667 00196$:
      000E65 21r88r08              3668 	ld	hl, #_ENEMYCOUNT
      000E68 4E                    3669 	ld	c, (hl)
      000E69 F8 0F                 3670 	ldhl	sp,	#15
      000E6B 7E                    3671 	ld	a, (hl)
      000E6C 91                    3672 	sub	a, c
      000E6D D2r11r13              3673 	jp	NC, 00134$
                                   3674 ;src/main.c:438: if (!enemies[i].alive) {
      000E70 4E                    3675 	ld	c, (hl)
      000E71 06 00                 3676 	ld	b, #0x00
      000E73 69                    3677 	ld	l, c
      000E74 60                    3678 	ld	h, b
      000E75 29                    3679 	add	hl, hl
      000E76 29                    3680 	add	hl, hl
      000E77 29                    3681 	add	hl, hl
      000E78 09                    3682 	add	hl, bc
      000E79 29                    3683 	add	hl, hl
                                   3684 ;src/main.c:446: if (enemies[i].x < playerDrawX) {
      000E7A 01r5Ar00              3685 	ld	bc,#_enemies
      000E7D 09                    3686 	add	hl,bc
      000E7E E5                    3687 	push	hl
      000E7F 7D                    3688 	ld	a, l
      000E80 F8 04                 3689 	ldhl	sp,	#4
      000E82 77                    3690 	ld	(hl), a
      000E83 E1                    3691 	pop	hl
      000E84 7C                    3692 	ld	a, h
      000E85 F8 03                 3693 	ldhl	sp,	#3
                                   3694 ;src/main.c:438: if (!enemies[i].alive) {
      000E87 32                    3695 	ld	(hl-), a
      000E88 2A                    3696 	ld	a, (hl+)
      000E89 5F                    3697 	ld	e, a
      000E8A 56                    3698 	ld	d, (hl)
      000E8B 21 09 00              3699 	ld	hl, #0x0009
      000E8E 19                    3700 	add	hl, de
      000E8F 4D                    3701 	ld	c, l
      000E90 44                    3702 	ld	b, h
      000E91 0A                    3703 	ld	a, (bc)
      000E92 B7                    3704 	or	a, a
      000E93 CAr0Br13              3705 	jp	Z, 00133$
                                   3706 ;src/main.c:441: enemies[i].x -= xOverflow;
      000E96 F8 02                 3707 	ldhl	sp,#2
      000E98 2A                    3708 	ld	a, (hl+)
      000E99 5F                    3709 	ld	e, a
      000E9A 56                    3710 	ld	d, (hl)
      000E9B 1A                    3711 	ld	a, (de)
      000E9C 4F                    3712 	ld	c, a
      000E9D 13                    3713 	inc	de
      000E9E 1A                    3714 	ld	a, (de)
      000E9F 47                    3715 	ld	b, a
      000EA0 21rA1r00              3716 	ld	hl, #_xOverflow
      000EA3 2A                    3717 	ld	a, (hl+)
      000EA4 5F                    3718 	ld	e, a
      000EA5 56                    3719 	ld	d, (hl)
      000EA6 79                    3720 	ld	a, c
      000EA7 93                    3721 	sub	a, e
      000EA8 5F                    3722 	ld	e, a
      000EA9 78                    3723 	ld	a, b
      000EAA 9A                    3724 	sbc	a, d
      000EAB F8 0E                 3725 	ldhl	sp,	#14
      000EAD 32                    3726 	ld	(hl-), a
      000EAE 73                    3727 	ld	(hl), e
      000EAF F8 02                 3728 	ldhl	sp,#2
      000EB1 2A                    3729 	ld	a, (hl+)
      000EB2 5F                    3730 	ld	e, a
      000EB3 56                    3731 	ld	d, (hl)
      000EB4 F8 0D                 3732 	ldhl	sp,	#13
      000EB6 2A                    3733 	ld	a, (hl+)
      000EB7 12                    3734 	ld	(de), a
      000EB8 13                    3735 	inc	de
      000EB9 7E                    3736 	ld	a, (hl)
      000EBA 12                    3737 	ld	(de), a
                                   3738 ;src/main.c:442: enemies[i].y -= yOverflow;
      000EBB F8 02                 3739 	ldhl	sp,#2
      000EBD 2A                    3740 	ld	a, (hl+)
      000EBE 5F                    3741 	ld	e, a
      000EBF 56                    3742 	ld	d, (hl)
      000EC0 21 02 00              3743 	ld	hl, #0x0002
      000EC3 19                    3744 	add	hl, de
      000EC4 E5                    3745 	push	hl
      000EC5 7D                    3746 	ld	a, l
      000EC6 F8 06                 3747 	ldhl	sp,	#6
      000EC8 77                    3748 	ld	(hl), a
      000EC9 E1                    3749 	pop	hl
      000ECA 7C                    3750 	ld	a, h
      000ECB F8 05                 3751 	ldhl	sp,	#5
      000ECD 32                    3752 	ld	(hl-), a
      000ECE 2A                    3753 	ld	a, (hl+)
      000ECF 5F                    3754 	ld	e, a
      000ED0 56                    3755 	ld	d, (hl)
      000ED1 1A                    3756 	ld	a, (de)
      000ED2 4F                    3757 	ld	c, a
      000ED3 13                    3758 	inc	de
      000ED4 1A                    3759 	ld	a, (de)
      000ED5 47                    3760 	ld	b, a
      000ED6 79                    3761 	ld	a, c
      000ED7 21rA3r00              3762 	ld	hl, #_yOverflow
      000EDA 96                    3763 	sub	a, (hl)
      000EDB 23                    3764 	inc	hl
      000EDC 4F                    3765 	ld	c, a
      000EDD 78                    3766 	ld	a, b
      000EDE 9E                    3767 	sbc	a, (hl)
      000EDF 47                    3768 	ld	b, a
      000EE0 F8 04                 3769 	ldhl	sp,	#4
      000EE2 2A                    3770 	ld	a,	(hl+)
      000EE3 66                    3771 	ld	h, (hl)
      000EE4 6F                    3772 	ld	l, a
      000EE5 79                    3773 	ld	a, c
      000EE6 22                    3774 	ld	(hl+), a
      000EE7 70                    3775 	ld	(hl), b
                                   3776 ;src/main.c:445: if (abs(enemies[i].x - playerDrawX) > 8) {
      000EE8 F8 0D                 3777 	ldhl	sp,	#13
      000EEA 7E                    3778 	ld	a, (hl)
      000EEB 21r9Br00              3779 	ld	hl, #_playerDrawX
      000EEE 4E                    3780 	ld	c, (hl)
      000EEF 91                    3781 	sub	a, c
      000EF0 4F                    3782 	ld	c, a
                                   3783 ;src/main.c:348: if (value >= 0) return value;
      000EF1 CB 79                 3784 	bit	7, c
      000EF3 20 03                 3785 	jr	NZ, 00169$
      000EF5 41                    3786 	ld	b, c
      000EF6 18 03                 3787 	jr	00171$
      000EF8                       3788 00169$:
                                   3789 ;src/main.c:349: else return - value;
      000EF8 AF                    3790 	xor	a, a
      000EF9 91                    3791 	sub	a, c
      000EFA 47                    3792 	ld	b, a
                                   3793 ;src/main.c:445: if (abs(enemies[i].x - playerDrawX) > 8) {
      000EFB                       3794 00171$:
                                   3795 ;src/main.c:460: enemies[i].ySpeed += enemies[i].accel;
      000EFB F8 02                 3796 	ldhl	sp,#2
      000EFD 2A                    3797 	ld	a, (hl+)
      000EFE 5F                    3798 	ld	e, a
      000EFF 56                    3799 	ld	d, (hl)
      000F00 21 0D 00              3800 	ld	hl, #0x000d
      000F03 19                    3801 	add	hl, de
      000F04 33                    3802 	inc	sp
      000F05 33                    3803 	inc	sp
      000F06 E5                    3804 	push	hl
                                   3805 ;src/main.c:447: enemies[i].xSpeed += enemies[i].accel;
      000F07 F8 02                 3806 	ldhl	sp,#2
      000F09 2A                    3807 	ld	a, (hl+)
      000F0A 5F                    3808 	ld	e, a
      000F0B 56                    3809 	ld	d, (hl)
      000F0C 21 0E 00              3810 	ld	hl, #0x000e
      000F0F 19                    3811 	add	hl, de
      000F10 E5                    3812 	push	hl
      000F11 7D                    3813 	ld	a, l
      000F12 F8 08                 3814 	ldhl	sp,	#8
      000F14 77                    3815 	ld	(hl), a
      000F15 E1                    3816 	pop	hl
      000F16 7C                    3817 	ld	a, h
      000F17 F8 07                 3818 	ldhl	sp,	#7
                                   3819 ;src/main.c:454: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000F19 32                    3820 	ld	(hl-), a
      000F1A 2A                    3821 	ld	a, (hl+)
      000F1B 5F                    3822 	ld	e, a
      000F1C 56                    3823 	ld	d, (hl)
      000F1D 1A                    3824 	ld	a, (de)
      000F1E 4F                    3825 	ld	c, a
                                   3826 ;src/main.c:445: if (abs(enemies[i].x - playerDrawX) > 8) {
      000F1F 58                    3827 	ld	e, b
      000F20 3E 08                 3828 	ld	a,#0x08
      000F22 57                    3829 	ld	d,a
      000F23 90                    3830 	sub	a, b
      000F24 CB 7B                 3831 	bit	7, e
      000F26 28 07                 3832 	jr	Z, 00407$
      000F28 CB 7A                 3833 	bit	7, d
      000F2A 20 08                 3834 	jr	NZ, 00408$
      000F2C BF                    3835 	cp	a, a
      000F2D 18 05                 3836 	jr	00408$
      000F2F                       3837 00407$:
      000F2F CB 7A                 3838 	bit	7, d
      000F31 28 01                 3839 	jr	Z, 00408$
      000F33 37                    3840 	scf
      000F34                       3841 00408$:
      000F34 30 4E                 3842 	jr	NC, 00111$
                                   3843 ;src/main.c:446: if (enemies[i].x < playerDrawX) {
      000F36 F8 02                 3844 	ldhl	sp,#2
      000F38 2A                    3845 	ld	a, (hl+)
      000F39 5F                    3846 	ld	e, a
      000F3A 56                    3847 	ld	d, (hl)
      000F3B 1A                    3848 	ld	a, (de)
      000F3C F8 0B                 3849 	ldhl	sp,	#11
      000F3E 22                    3850 	ld	(hl+), a
      000F3F 13                    3851 	inc	de
      000F40 1A                    3852 	ld	a, (de)
      000F41 77                    3853 	ld	(hl), a
      000F42 FAr9Br00              3854 	ld	a, (#_playerDrawX)
      000F45 F8 0D                 3855 	ldhl	sp,	#13
      000F47 22                    3856 	ld	(hl+), a
      000F48 36 00                 3857 	ld	(hl), #0x00
                                   3858 ;src/main.c:447: enemies[i].xSpeed += enemies[i].accel;
      000F4A D1                    3859 	pop	de
      000F4B D5                    3860 	push	de
      000F4C 1A                    3861 	ld	a, (de)
      000F4D 47                    3862 	ld	b, a
                                   3863 ;src/main.c:446: if (enemies[i].x < playerDrawX) {
      000F4E F8 0B                 3864 	ldhl	sp,	#11
      000F50 5D                    3865 	ld	e, l
      000F51 54                    3866 	ld	d, h
      000F52 F8 0D                 3867 	ldhl	sp,	#13
      000F54 1A                    3868 	ld	a, (de)
      000F55 13                    3869 	inc	de
      000F56 96                    3870 	sub	a, (hl)
      000F57 23                    3871 	inc	hl
      000F58 1A                    3872 	ld	a, (de)
      000F59 9E                    3873 	sbc	a, (hl)
      000F5A 1A                    3874 	ld	a, (de)
      000F5B 57                    3875 	ld	d, a
      000F5C CB 7E                 3876 	bit	7, (hl)
      000F5E 28 07                 3877 	jr	Z, 00409$
      000F60 CB 7A                 3878 	bit	7, d
      000F62 20 08                 3879 	jr	NZ, 00410$
      000F64 BF                    3880 	cp	a, a
      000F65 18 05                 3881 	jr	00410$
      000F67                       3882 00409$:
      000F67 CB 7A                 3883 	bit	7, d
      000F69 28 01                 3884 	jr	Z, 00410$
      000F6B 37                    3885 	scf
      000F6C                       3886 00410$:
      000F6C 30 0B                 3887 	jr	NC, 00104$
                                   3888 ;src/main.c:447: enemies[i].xSpeed += enemies[i].accel;
      000F6E 79                    3889 	ld	a, c
      000F6F 80                    3890 	add	a, b
      000F70 4F                    3891 	ld	c, a
      000F71 F8 06                 3892 	ldhl	sp,	#6
      000F73 2A                    3893 	ld	a,	(hl+)
      000F74 66                    3894 	ld	h, (hl)
      000F75 6F                    3895 	ld	l, a
      000F76 71                    3896 	ld	(hl), c
      000F77 18 38                 3897 	jr	00112$
      000F79                       3898 00104$:
                                   3899 ;src/main.c:450: enemies[i].xSpeed -= enemies[i].accel;
      000F79 79                    3900 	ld	a, c
      000F7A 90                    3901 	sub	a, b
      000F7B 4F                    3902 	ld	c, a
      000F7C F8 06                 3903 	ldhl	sp,	#6
      000F7E 2A                    3904 	ld	a,	(hl+)
      000F7F 66                    3905 	ld	h, (hl)
      000F80 6F                    3906 	ld	l, a
      000F81 71                    3907 	ld	(hl), c
      000F82 18 2D                 3908 	jr	00112$
      000F84                       3909 00111$:
                                   3910 ;src/main.c:454: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000F84 59                    3911 	ld	e, c
      000F85 AF                    3912 	xor	a, a
      000F86 57                    3913 	ld	d, a
      000F87 91                    3914 	sub	a, c
      000F88 CB 7B                 3915 	bit	7, e
      000F8A 28 07                 3916 	jr	Z, 00411$
      000F8C CB 7A                 3917 	bit	7, d
      000F8E 20 08                 3918 	jr	NZ, 00412$
      000F90 BF                    3919 	cp	a, a
      000F91 18 05                 3920 	jr	00412$
      000F93                       3921 00411$:
      000F93 CB 7A                 3922 	bit	7, d
      000F95 28 01                 3923 	jr	Z, 00412$
      000F97 37                    3924 	scf
      000F98                       3925 00412$:
      000F98 30 07                 3926 	jr	NC, 00107$
      000F9A 0D                    3927 	dec	c
      000F9B F8 06                 3928 	ldhl	sp,	#6
      000F9D 2A                    3929 	ld	a,	(hl+)
      000F9E 66                    3930 	ld	h, (hl)
      000F9F 6F                    3931 	ld	l, a
      000FA0 71                    3932 	ld	(hl), c
      000FA1                       3933 00107$:
      000FA1 F8 06                 3934 	ldhl	sp,#6
      000FA3 2A                    3935 	ld	a, (hl+)
      000FA4 5F                    3936 	ld	e, a
      000FA5 56                    3937 	ld	d, (hl)
      000FA6 1A                    3938 	ld	a, (de)
      000FA7 4F                    3939 	ld	c, a
                                   3940 ;src/main.c:455: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      000FA8 CB 79                 3941 	bit	7, c
      000FAA 28 05                 3942 	jr	Z, 00112$
      000FAC 0C                    3943 	inc	c
      000FAD 3A                    3944 	ld	a, (hl-)
      000FAE 6E                    3945 	ld	l, (hl)
      000FAF 67                    3946 	ld	h, a
      000FB0 71                    3947 	ld	(hl), c
      000FB1                       3948 00112$:
                                   3949 ;src/main.c:458: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FB1 F8 04                 3950 	ldhl	sp,#4
      000FB3 2A                    3951 	ld	a, (hl+)
      000FB4 5F                    3952 	ld	e, a
      000FB5 56                    3953 	ld	d, (hl)
      000FB6 1A                    3954 	ld	a, (de)
      000FB7 4F                    3955 	ld	c, a
      000FB8 13                    3956 	inc	de
      000FB9 1A                    3957 	ld	a, (de)
      000FBA 47                    3958 	ld	b, a
      000FBB 79                    3959 	ld	a, c
      000FBC 21r9Cr00              3960 	ld	hl, #_playerDrawY
      000FBF 5E                    3961 	ld	e, (hl)
      000FC0 93                    3962 	sub	a, e
      000FC1 6F                    3963 	ld	l, a
                                   3964 ;	spillPairReg hl
                                   3965 ;	spillPairReg hl
                                   3966 ;src/main.c:348: if (value >= 0) return value;
      000FC2 CB 7D                 3967 	bit	7, l
      000FC4 20 06                 3968 	jr	NZ, 00173$
      000FC6 7D                    3969 	ld	a, l
      000FC7 F8 0E                 3970 	ldhl	sp,	#14
      000FC9 77                    3971 	ld	(hl), a
      000FCA 18 06                 3972 	jr	00175$
      000FCC                       3973 00173$:
                                   3974 ;src/main.c:349: else return - value;
      000FCC AF                    3975 	xor	a, a
      000FCD 95                    3976 	sub	a, l
      000FCE 5F                    3977 	ld	e, a
      000FCF F8 0E                 3978 	ldhl	sp,	#14
      000FD1 73                    3979 	ld	(hl), e
                                   3980 ;src/main.c:458: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FD2                       3981 00175$:
                                   3982 ;src/main.c:460: enemies[i].ySpeed += enemies[i].accel;
      000FD2 F8 02                 3983 	ldhl	sp,#2
      000FD4 2A                    3984 	ld	a, (hl+)
      000FD5 5F                    3985 	ld	e, a
      000FD6 56                    3986 	ld	d, (hl)
      000FD7 21 0F 00              3987 	ld	hl, #0x000f
      000FDA 19                    3988 	add	hl, de
      000FDB E5                    3989 	push	hl
      000FDC 7D                    3990 	ld	a, l
      000FDD F8 0A                 3991 	ldhl	sp,	#10
      000FDF 77                    3992 	ld	(hl), a
      000FE0 E1                    3993 	pop	hl
      000FE1 7C                    3994 	ld	a, h
      000FE2 F8 09                 3995 	ldhl	sp,	#9
                                   3996 ;src/main.c:467: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      000FE4 32                    3997 	ld	(hl-), a
      000FE5 2A                    3998 	ld	a, (hl+)
      000FE6 5F                    3999 	ld	e, a
      000FE7 2A                    4000 	ld	a, (hl+)
      000FE8 23                    4001 	inc	hl
      000FE9 57                    4002 	ld	d, a
      000FEA 1A                    4003 	ld	a, (de)
      000FEB 77                    4004 	ld	(hl), a
                                   4005 ;src/main.c:458: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FEC F8 0E                 4006 	ldhl	sp,	#14
      000FEE 5E                    4007 	ld	e, (hl)
      000FEF 3E 08                 4008 	ld	a,#0x08
      000FF1 57                    4009 	ld	d,a
      000FF2 96                    4010 	sub	a, (hl)
      000FF3 CB 7B                 4011 	bit	7, e
      000FF5 28 07                 4012 	jr	Z, 00413$
      000FF7 CB 7A                 4013 	bit	7, d
      000FF9 20 08                 4014 	jr	NZ, 00414$
      000FFB BF                    4015 	cp	a, a
      000FFC 18 05                 4016 	jr	00414$
      000FFE                       4017 00413$:
      000FFE CB 7A                 4018 	bit	7, d
      001000 28 01                 4019 	jr	Z, 00414$
      001002 37                    4020 	scf
      001003                       4021 00414$:
      001003 30 44                 4022 	jr	NC, 00121$
                                   4023 ;src/main.c:459: if (enemies[i].y < playerDrawY) {
      001005 FAr9Cr00              4024 	ld	a, (#_playerDrawY)
      001008 F8 0C                 4025 	ldhl	sp,	#12
      00100A 22                    4026 	ld	(hl+), a
                                   4027 ;src/main.c:447: enemies[i].xSpeed += enemies[i].accel;
      00100B AF                    4028 	xor	a, a
      00100C 22                    4029 	ld	(hl+), a
      00100D D1                    4030 	pop	de
      00100E D5                    4031 	push	de
      00100F 1A                    4032 	ld	a, (de)
                                   4033 ;src/main.c:459: if (enemies[i].y < playerDrawY) {
      001010 32                    4034 	ld	(hl-), a
      001011 2B                    4035 	dec	hl
      001012 79                    4036 	ld	a, c
      001013 96                    4037 	sub	a, (hl)
      001014 23                    4038 	inc	hl
      001015 78                    4039 	ld	a, b
      001016 9E                    4040 	sbc	a, (hl)
      001017 78                    4041 	ld	a, b
      001018 57                    4042 	ld	d, a
      001019 CB 7E                 4043 	bit	7, (hl)
      00101B 28 07                 4044 	jr	Z, 00415$
      00101D CB 7A                 4045 	bit	7, d
      00101F 20 08                 4046 	jr	NZ, 00416$
      001021 BF                    4047 	cp	a, a
      001022 18 05                 4048 	jr	00416$
      001024                       4049 00415$:
      001024 CB 7A                 4050 	bit	7, d
      001026 28 01                 4051 	jr	Z, 00416$
      001028 37                    4052 	scf
      001029                       4053 00416$:
      001029 30 0F                 4054 	jr	NC, 00114$
                                   4055 ;src/main.c:460: enemies[i].ySpeed += enemies[i].accel;
      00102B F8 0B                 4056 	ldhl	sp,	#11
      00102D 7E                    4057 	ld	a, (hl)
      00102E F8 0E                 4058 	ldhl	sp,	#14
      001030 86                    4059 	add	a, (hl)
      001031 4F                    4060 	ld	c, a
      001032 F8 08                 4061 	ldhl	sp,	#8
      001034 2A                    4062 	ld	a,	(hl+)
      001035 66                    4063 	ld	h, (hl)
      001036 6F                    4064 	ld	l, a
      001037 71                    4065 	ld	(hl), c
      001038 18 41                 4066 	jr	00122$
      00103A                       4067 00114$:
                                   4068 ;src/main.c:463: enemies[i].ySpeed -= enemies[i].accel;
      00103A F8 0B                 4069 	ldhl	sp,	#11
      00103C 7E                    4070 	ld	a, (hl)
      00103D F8 0E                 4071 	ldhl	sp,	#14
      00103F 96                    4072 	sub	a, (hl)
      001040 4F                    4073 	ld	c, a
      001041 F8 08                 4074 	ldhl	sp,	#8
      001043 2A                    4075 	ld	a,	(hl+)
      001044 66                    4076 	ld	h, (hl)
      001045 6F                    4077 	ld	l, a
      001046 71                    4078 	ld	(hl), c
      001047 18 32                 4079 	jr	00122$
      001049                       4080 00121$:
                                   4081 ;src/main.c:467: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001049 F8 0B                 4082 	ldhl	sp,	#11
      00104B 5E                    4083 	ld	e, (hl)
      00104C AF                    4084 	xor	a, a
      00104D 57                    4085 	ld	d, a
      00104E 96                    4086 	sub	a, (hl)
      00104F CB 7B                 4087 	bit	7, e
      001051 28 07                 4088 	jr	Z, 00417$
      001053 CB 7A                 4089 	bit	7, d
      001055 20 08                 4090 	jr	NZ, 00418$
      001057 BF                    4091 	cp	a, a
      001058 18 05                 4092 	jr	00418$
      00105A                       4093 00417$:
      00105A CB 7A                 4094 	bit	7, d
      00105C 28 01                 4095 	jr	Z, 00418$
      00105E 37                    4096 	scf
      00105F                       4097 00418$:
      00105F 30 0A                 4098 	jr	NC, 00117$
      001061 F8 0B                 4099 	ldhl	sp,	#11
      001063 4E                    4100 	ld	c, (hl)
      001064 0D                    4101 	dec	c
      001065 F8 08                 4102 	ldhl	sp,	#8
      001067 2A                    4103 	ld	a,	(hl+)
      001068 66                    4104 	ld	h, (hl)
      001069 6F                    4105 	ld	l, a
      00106A 71                    4106 	ld	(hl), c
      00106B                       4107 00117$:
      00106B F8 08                 4108 	ldhl	sp,#8
      00106D 2A                    4109 	ld	a, (hl+)
      00106E 5F                    4110 	ld	e, a
      00106F 56                    4111 	ld	d, (hl)
      001070 1A                    4112 	ld	a, (de)
      001071 4F                    4113 	ld	c, a
                                   4114 ;src/main.c:468: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      001072 CB 79                 4115 	bit	7, c
      001074 28 05                 4116 	jr	Z, 00122$
      001076 0C                    4117 	inc	c
      001077 3A                    4118 	ld	a, (hl-)
      001078 6E                    4119 	ld	l, (hl)
      001079 67                    4120 	ld	h, a
      00107A 71                    4121 	ld	(hl), c
      00107B                       4122 00122$:
                                   4123 ;src/main.c:472: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      00107B F8 02                 4124 	ldhl	sp,#2
      00107D 2A                    4125 	ld	a, (hl+)
      00107E 5F                    4126 	ld	e, a
      00107F 56                    4127 	ld	d, (hl)
      001080 21 0C 00              4128 	ld	hl, #0x000c
      001083 19                    4129 	add	hl, de
      001084 E5                    4130 	push	hl
      001085 7D                    4131 	ld	a, l
      001086 F8 0C                 4132 	ldhl	sp,	#12
      001088 77                    4133 	ld	(hl), a
      001089 E1                    4134 	pop	hl
      00108A 7C                    4135 	ld	a, h
      00108B F8 0B                 4136 	ldhl	sp,	#11
      00108D 32                    4137 	ld	(hl-), a
      00108E 2A                    4138 	ld	a, (hl+)
      00108F 5F                    4139 	ld	e, a
      001090 2A                    4140 	ld	a, (hl+)
      001091 57                    4141 	ld	d, a
      001092 1A                    4142 	ld	a, (de)
      001093 4F                    4143 	ld	c, a
      001094 22                    4144 	ld	(hl+), a
      001095 AF                    4145 	xor	a, a
      001096 91                    4146 	sub	a, c
      001097 77                    4147 	ld	(hl), a
      001098 F8 06                 4148 	ldhl	sp,#6
      00109A 2A                    4149 	ld	a, (hl+)
      00109B 5F                    4150 	ld	e, a
      00109C 56                    4151 	ld	d, (hl)
      00109D 1A                    4152 	ld	a, (de)
      00109E F8 0E                 4153 	ldhl	sp,	#14
                                   4154 ;src/main.c:329: return (value < min) ? min : (value > max) ? max : value;
      0010A0 32                    4155 	ld	(hl-), a
      0010A1 2A                    4156 	ld	a, (hl+)
      0010A2 5F                    4157 	ld	e, a
      0010A3 56                    4158 	ld	d, (hl)
      0010A4 3A                    4159 	ld	a, (hl-)
      0010A5 96                    4160 	sub	a, (hl)
      0010A6 CB 7B                 4161 	bit	7, e
      0010A8 28 07                 4162 	jr	Z, 00419$
      0010AA CB 7A                 4163 	bit	7, d
      0010AC 20 08                 4164 	jr	NZ, 00420$
      0010AE BF                    4165 	cp	a, a
      0010AF 18 05                 4166 	jr	00420$
      0010B1                       4167 00419$:
      0010B1 CB 7A                 4168 	bit	7, d
      0010B3 28 01                 4169 	jr	Z, 00420$
      0010B5 37                    4170 	scf
      0010B6                       4171 00420$:
      0010B6 30 06                 4172 	jr	NC, 00202$
      0010B8 F8 0D                 4173 	ldhl	sp,	#13
      0010BA 2A                    4174 	ld	a, (hl+)
      0010BB 77                    4175 	ld	(hl), a
      0010BC 18 26                 4176 	jr	00203$
      0010BE                       4177 00202$:
      0010BE F8 0E                 4178 	ldhl	sp,	#14
      0010C0 3A                    4179 	ld	a, (hl-)
      0010C1 2B                    4180 	dec	hl
      0010C2 5F                    4181 	ld	e, a
      0010C3 56                    4182 	ld	d, (hl)
      0010C4 2A                    4183 	ld	a, (hl+)
      0010C5 23                    4184 	inc	hl
      0010C6 96                    4185 	sub	a, (hl)
      0010C7 CB 7B                 4186 	bit	7, e
      0010C9 28 07                 4187 	jr	Z, 00421$
      0010CB CB 7A                 4188 	bit	7, d
      0010CD 20 08                 4189 	jr	NZ, 00422$
      0010CF BF                    4190 	cp	a, a
      0010D0 18 05                 4191 	jr	00422$
      0010D2                       4192 00421$:
      0010D2 CB 7A                 4193 	bit	7, d
      0010D4 28 01                 4194 	jr	Z, 00422$
      0010D6 37                    4195 	scf
      0010D7                       4196 00422$:
      0010D7 30 05                 4197 	jr	NC, 00204$
      0010D9 F8 0C                 4198 	ldhl	sp,	#12
      0010DB 5E                    4199 	ld	e, (hl)
      0010DC 18 03                 4200 	jr	00205$
      0010DE                       4201 00204$:
      0010DE F8 0E                 4202 	ldhl	sp,	#14
      0010E0 5E                    4203 	ld	e, (hl)
      0010E1                       4204 00205$:
      0010E1 F8 0E                 4205 	ldhl	sp,	#14
      0010E3 73                    4206 	ld	(hl), e
      0010E4                       4207 00203$:
      0010E4 F8 0E                 4208 	ldhl	sp,	#14
      0010E6 4E                    4209 	ld	c, (hl)
                                   4210 ;src/main.c:472: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0010E7 F8 06                 4211 	ldhl	sp,	#6
      0010E9 2A                    4212 	ld	a,	(hl+)
      0010EA 66                    4213 	ld	h, (hl)
      0010EB 6F                    4214 	ld	l, a
      0010EC 71                    4215 	ld	(hl), c
                                   4216 ;src/main.c:473: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0010ED F8 0A                 4217 	ldhl	sp,#10
      0010EF 2A                    4218 	ld	a, (hl+)
      0010F0 5F                    4219 	ld	e, a
      0010F1 3A                    4220 	ld	a, (hl-)
      0010F2 2B                    4221 	dec	hl
      0010F3 2B                    4222 	dec	hl
      0010F4 57                    4223 	ld	d, a
      0010F5 1A                    4224 	ld	a, (de)
      0010F6 47                    4225 	ld	b, a
      0010F7 48                    4226 	ld	c, b
      0010F8 AF                    4227 	xor	a, a
      0010F9 90                    4228 	sub	a, b
      0010FA 47                    4229 	ld	b, a
      0010FB 2A                    4230 	ld	a, (hl+)
      0010FC 5F                    4231 	ld	e, a
      0010FD 56                    4232 	ld	d, (hl)
      0010FE 1A                    4233 	ld	a, (de)
      0010FF 6F                    4234 	ld	l, a
                                   4235 ;	spillPairReg hl
                                   4236 ;	spillPairReg hl
                                   4237 ;src/main.c:329: return (value < min) ? min : (value > max) ? max : value;
      001100 58                    4238 	ld	e, b
      001101 7D                    4239 	ld	a,l
      001102 57                    4240 	ld	d,a
      001103 90                    4241 	sub	a, b
      001104 CB 7B                 4242 	bit	7, e
      001106 28 07                 4243 	jr	Z, 00423$
      001108 CB 7A                 4244 	bit	7, d
      00110A 20 08                 4245 	jr	NZ, 00424$
      00110C BF                    4246 	cp	a, a
      00110D 18 05                 4247 	jr	00424$
      00110F                       4248 00423$:
      00110F CB 7A                 4249 	bit	7, d
      001111 28 01                 4250 	jr	Z, 00424$
      001113 37                    4251 	scf
      001114                       4252 00424$:
      001114 30 03                 4253 	jr	NC, 00206$
      001116 48                    4254 	ld	c, b
      001117 18 17                 4255 	jr	00207$
      001119                       4256 00206$:
      001119 5D                    4257 	ld	e, l
      00111A 79                    4258 	ld	a,c
      00111B 57                    4259 	ld	d,a
      00111C 95                    4260 	sub	a, l
      00111D CB 7B                 4261 	bit	7, e
      00111F 28 07                 4262 	jr	Z, 00425$
      001121 CB 7A                 4263 	bit	7, d
      001123 20 08                 4264 	jr	NZ, 00426$
      001125 BF                    4265 	cp	a, a
      001126 18 05                 4266 	jr	00426$
      001128                       4267 00425$:
      001128 CB 7A                 4268 	bit	7, d
      00112A 28 01                 4269 	jr	Z, 00426$
      00112C 37                    4270 	scf
      00112D                       4271 00426$:
      00112D 38 01                 4272 	jr	C, 00209$
      00112F 4D                    4273 	ld	c, l
      001130                       4274 00209$:
      001130                       4275 00207$:
                                   4276 ;src/main.c:473: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      001130 F8 08                 4277 	ldhl	sp,	#8
      001132 2A                    4278 	ld	a,	(hl+)
      001133 66                    4279 	ld	h, (hl)
      001134 6F                    4280 	ld	l, a
      001135 71                    4281 	ld	(hl), c
                                   4282 ;src/main.c:476: enemies[i].xReserve += enemies[i].xSpeed;
      001136 F8 02                 4283 	ldhl	sp,#2
      001138 2A                    4284 	ld	a, (hl+)
      001139 5F                    4285 	ld	e, a
      00113A 56                    4286 	ld	d, (hl)
      00113B 21 04 00              4287 	ld	hl, #0x0004
      00113E 19                    4288 	add	hl, de
      00113F E5                    4289 	push	hl
      001140 7D                    4290 	ld	a, l
      001141 F8 0F                 4291 	ldhl	sp,	#15
      001143 77                    4292 	ld	(hl), a
      001144 E1                    4293 	pop	hl
      001145 7C                    4294 	ld	a, h
      001146 F8 0E                 4295 	ldhl	sp,	#14
      001148 32                    4296 	ld	(hl-), a
      001149 2A                    4297 	ld	a, (hl+)
      00114A 5F                    4298 	ld	e, a
      00114B 56                    4299 	ld	d, (hl)
      00114C 1A                    4300 	ld	a, (de)
      00114D 47                    4301 	ld	b, a
      00114E F8 06                 4302 	ldhl	sp,#6
      001150 2A                    4303 	ld	a, (hl+)
      001151 5F                    4304 	ld	e, a
      001152 56                    4305 	ld	d, (hl)
      001153 1A                    4306 	ld	a, (de)
      001154 80                    4307 	add	a, b
      001155 47                    4308 	ld	b, a
      001156 F8 0D                 4309 	ldhl	sp,	#13
      001158 2A                    4310 	ld	a,	(hl+)
      001159 66                    4311 	ld	h, (hl)
      00115A 6F                    4312 	ld	l, a
      00115B 70                    4313 	ld	(hl), b
                                   4314 ;src/main.c:477: enemies[i].yReserve += enemies[i].ySpeed;
      00115C F8 02                 4315 	ldhl	sp,#2
      00115E 2A                    4316 	ld	a, (hl+)
      00115F 5F                    4317 	ld	e, a
      001160 56                    4318 	ld	d, (hl)
      001161 21 05 00              4319 	ld	hl, #0x0005
      001164 19                    4320 	add	hl, de
      001165 E5                    4321 	push	hl
      001166 7D                    4322 	ld	a, l
      001167 F8 0C                 4323 	ldhl	sp,	#12
      001169 77                    4324 	ld	(hl), a
      00116A E1                    4325 	pop	hl
      00116B 7C                    4326 	ld	a, h
      00116C F8 0B                 4327 	ldhl	sp,	#11
      00116E 32                    4328 	ld	(hl-), a
      00116F 2A                    4329 	ld	a, (hl+)
      001170 5F                    4330 	ld	e, a
      001171 56                    4331 	ld	d, (hl)
      001172 1A                    4332 	ld	a, (de)
      001173 81                    4333 	add	a, c
      001174 4F                    4334 	ld	c, a
      001175 3A                    4335 	ld	a, (hl-)
      001176 6E                    4336 	ld	l, (hl)
      001177 67                    4337 	ld	h, a
      001178 71                    4338 	ld	(hl), c
                                   4339 ;src/main.c:481: if (enemies[i].xReserve >> 3 > 0) {
      001179 F8 0D                 4340 	ldhl	sp,#13
      00117B 2A                    4341 	ld	a, (hl+)
      00117C 5F                    4342 	ld	e, a
      00117D 3A                    4343 	ld	a, (hl-)
      00117E 2B                    4344 	dec	hl
      00117F 57                    4345 	ld	d, a
      001180 1A                    4346 	ld	a, (de)
      001181 77                    4347 	ld	(hl), a
      001182 CB 28                 4348 	sra	b
      001184 CB 28                 4349 	sra	b
      001186 CB 28                 4350 	sra	b
      001188 58                    4351 	ld	e, b
      001189 AF                    4352 	xor	a, a
      00118A 57                    4353 	ld	d, a
      00118B 90                    4354 	sub	a, b
      00118C CB 7B                 4355 	bit	7, e
      00118E 28 07                 4356 	jr	Z, 00427$
      001190 CB 7A                 4357 	bit	7, d
      001192 20 08                 4358 	jr	NZ, 00428$
      001194 BF                    4359 	cp	a, a
      001195 18 05                 4360 	jr	00428$
      001197                       4361 00427$:
      001197 CB 7A                 4362 	bit	7, d
      001199 28 01                 4363 	jr	Z, 00428$
      00119B 37                    4364 	scf
      00119C                       4365 00428$:
      00119C 30 3F                 4366 	jr	NC, 00126$
                                   4367 ;src/main.c:482: int8_t xMovement = enemies[i].xReserve >> 3;
      00119E F8 0C                 4368 	ldhl	sp,	#12
      0011A0 7E                    4369 	ld	a, (hl)
      0011A1 CB 2F                 4370 	sra	a
      0011A3 CB 2F                 4371 	sra	a
      0011A5 CB 2F                 4372 	sra	a
      0011A7 77                    4373 	ld	(hl), a
                                   4374 ;src/main.c:483: enemies[i].x += xMovement;
      0011A8 F8 02                 4375 	ldhl	sp,#2
      0011AA 2A                    4376 	ld	a, (hl+)
      0011AB 5F                    4377 	ld	e, a
      0011AC 56                    4378 	ld	d, (hl)
      0011AD 1A                    4379 	ld	a, (de)
      0011AE 4F                    4380 	ld	c, a
      0011AF 13                    4381 	inc	de
      0011B0 1A                    4382 	ld	a, (de)
      0011B1 47                    4383 	ld	b, a
      0011B2 F8 0C                 4384 	ldhl	sp,	#12
      0011B4 7E                    4385 	ld	a, (hl)
      0011B5 5F                    4386 	ld	e, a
      0011B6 07                    4387 	rlca
      0011B7 9F                    4388 	sbc	a, a
      0011B8 57                    4389 	ld	d, a
      0011B9 69                    4390 	ld	l, c
                                   4391 ;	spillPairReg hl
                                   4392 ;	spillPairReg hl
      0011BA 60                    4393 	ld	h, b
                                   4394 ;	spillPairReg hl
                                   4395 ;	spillPairReg hl
      0011BB 19                    4396 	add	hl, de
      0011BC 4D                    4397 	ld	c, l
      0011BD 44                    4398 	ld	b, h
      0011BE F8 02                 4399 	ldhl	sp,	#2
      0011C0 2A                    4400 	ld	a,	(hl+)
      0011C1 66                    4401 	ld	h, (hl)
      0011C2 6F                    4402 	ld	l, a
      0011C3 79                    4403 	ld	a, c
      0011C4 22                    4404 	ld	(hl+), a
      0011C5 70                    4405 	ld	(hl), b
                                   4406 ;src/main.c:484: enemies[i].xReserve -=  xMovement << 3;
      0011C6 F8 0D                 4407 	ldhl	sp,#13
      0011C8 2A                    4408 	ld	a, (hl+)
      0011C9 5F                    4409 	ld	e, a
      0011CA 3A                    4410 	ld	a, (hl-)
      0011CB 2B                    4411 	dec	hl
      0011CC 57                    4412 	ld	d, a
      0011CD 1A                    4413 	ld	a, (de)
      0011CE F5                    4414 	push	af
      0011CF 2A                    4415 	ld	a, (hl+)
      0011D0 87                    4416 	add	a, a
      0011D1 87                    4417 	add	a, a
      0011D2 87                    4418 	add	a, a
      0011D3 4F                    4419 	ld	c, a
      0011D4 F1                    4420 	pop	af
      0011D5 91                    4421 	sub	a, c
      0011D6 4F                    4422 	ld	c, a
      0011D7 2A                    4423 	ld	a,	(hl+)
      0011D8 66                    4424 	ld	h, (hl)
      0011D9 6F                    4425 	ld	l, a
      0011DA 71                    4426 	ld	(hl), c
      0011DB 18 69                 4427 	jr	00127$
      0011DD                       4428 00126$:
                                   4429 ;src/main.c:487: else if ((-enemies[i].xReserve) >> 3 > 0){
      0011DD F8 0C                 4430 	ldhl	sp,	#12
      0011DF 7E                    4431 	ld	a, (hl)
      0011E0 4F                    4432 	ld	c, a
      0011E1 07                    4433 	rlca
      0011E2 9F                    4434 	sbc	a, a
      0011E3 47                    4435 	ld	b, a
      0011E4 AF                    4436 	xor	a, a
      0011E5 91                    4437 	sub	a, c
      0011E6 4F                    4438 	ld	c, a
      0011E7 9F                    4439 	sbc	a, a
      0011E8 90                    4440 	sub	a, b
      0011E9 47                    4441 	ld	b, a
      0011EA CB 28                 4442 	sra	b
      0011EC CB 19                 4443 	rr	c
      0011EE CB 28                 4444 	sra	b
      0011F0 CB 19                 4445 	rr	c
      0011F2 CB 28                 4446 	sra	b
      0011F4 CB 19                 4447 	rr	c
      0011F6 58                    4448 	ld	e, b
      0011F7 AF                    4449 	xor	a, a
      0011F8 57                    4450 	ld	d, a
      0011F9 B9                    4451 	cp	a, c
      0011FA 98                    4452 	sbc	a, b
      0011FB CB 7B                 4453 	bit	7, e
      0011FD 28 07                 4454 	jr	Z, 00429$
      0011FF CB 7A                 4455 	bit	7, d
      001201 20 08                 4456 	jr	NZ, 00430$
      001203 BF                    4457 	cp	a, a
      001204 18 05                 4458 	jr	00430$
      001206                       4459 00429$:
      001206 CB 7A                 4460 	bit	7, d
      001208 28 01                 4461 	jr	Z, 00430$
      00120A 37                    4462 	scf
      00120B                       4463 00430$:
      00120B 30 39                 4464 	jr	NC, 00127$
                                   4465 ;src/main.c:488: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      00120D AF                    4466 	xor	a, a
      00120E 91                    4467 	sub	a, c
      00120F 4F                    4468 	ld	c, a
      001210 F8 0C                 4469 	ldhl	sp,	#12
      001212 71                    4470 	ld	(hl), c
                                   4471 ;src/main.c:489: enemies[i].x += xMovement;
      001213 F8 02                 4472 	ldhl	sp,#2
      001215 2A                    4473 	ld	a, (hl+)
      001216 5F                    4474 	ld	e, a
      001217 56                    4475 	ld	d, (hl)
      001218 1A                    4476 	ld	a, (de)
      001219 4F                    4477 	ld	c, a
      00121A 13                    4478 	inc	de
      00121B 1A                    4479 	ld	a, (de)
      00121C 47                    4480 	ld	b, a
      00121D F8 0C                 4481 	ldhl	sp,	#12
      00121F 7E                    4482 	ld	a, (hl)
      001220 5F                    4483 	ld	e, a
      001221 07                    4484 	rlca
      001222 9F                    4485 	sbc	a, a
      001223 57                    4486 	ld	d, a
      001224 69                    4487 	ld	l, c
                                   4488 ;	spillPairReg hl
                                   4489 ;	spillPairReg hl
      001225 60                    4490 	ld	h, b
                                   4491 ;	spillPairReg hl
                                   4492 ;	spillPairReg hl
      001226 19                    4493 	add	hl, de
      001227 4D                    4494 	ld	c, l
      001228 44                    4495 	ld	b, h
      001229 F8 02                 4496 	ldhl	sp,	#2
      00122B 2A                    4497 	ld	a,	(hl+)
      00122C 66                    4498 	ld	h, (hl)
      00122D 6F                    4499 	ld	l, a
      00122E 79                    4500 	ld	a, c
      00122F 22                    4501 	ld	(hl+), a
      001230 70                    4502 	ld	(hl), b
                                   4503 ;src/main.c:490: enemies[i].xReserve +=  (-xMovement) << 3;
      001231 F8 0D                 4504 	ldhl	sp,#13
      001233 2A                    4505 	ld	a, (hl+)
      001234 5F                    4506 	ld	e, a
      001235 3A                    4507 	ld	a, (hl-)
      001236 2B                    4508 	dec	hl
      001237 57                    4509 	ld	d, a
      001238 1A                    4510 	ld	a, (de)
      001239 4F                    4511 	ld	c, a
      00123A AF                    4512 	xor	a, a
      00123B 96                    4513 	sub	a, (hl)
      00123C 23                    4514 	inc	hl
      00123D 87                    4515 	add	a, a
      00123E 87                    4516 	add	a, a
      00123F 87                    4517 	add	a, a
      001240 81                    4518 	add	a, c
      001241 4F                    4519 	ld	c, a
      001242 2A                    4520 	ld	a,	(hl+)
      001243 66                    4521 	ld	h, (hl)
      001244 6F                    4522 	ld	l, a
      001245 71                    4523 	ld	(hl), c
      001246                       4524 00127$:
                                   4525 ;src/main.c:477: enemies[i].yReserve += enemies[i].ySpeed;
      001246 F8 0A                 4526 	ldhl	sp,#10
      001248 2A                    4527 	ld	a, (hl+)
      001249 5F                    4528 	ld	e, a
      00124A 56                    4529 	ld	d, (hl)
      00124B 1A                    4530 	ld	a, (de)
      00124C 4F                    4531 	ld	c, a
                                   4532 ;src/main.c:493: if (enemies[i].yReserve >> 3 > 0) {
      00124D 41                    4533 	ld	b, c
      00124E CB 28                 4534 	sra	b
      001250 CB 28                 4535 	sra	b
      001252 CB 28                 4536 	sra	b
      001254 58                    4537 	ld	e, b
      001255 AF                    4538 	xor	a, a
      001256 57                    4539 	ld	d, a
      001257 90                    4540 	sub	a, b
      001258 CB 7B                 4541 	bit	7, e
      00125A 28 07                 4542 	jr	Z, 00431$
      00125C CB 7A                 4543 	bit	7, d
      00125E 20 08                 4544 	jr	NZ, 00432$
      001260 BF                    4545 	cp	a, a
      001261 18 05                 4546 	jr	00432$
      001263                       4547 00431$:
      001263 CB 7A                 4548 	bit	7, d
      001265 28 01                 4549 	jr	Z, 00432$
      001267 37                    4550 	scf
      001268                       4551 00432$:
      001268 30 3A                 4552 	jr	NC, 00131$
                                   4553 ;src/main.c:494: int8_t yMovement = enemies[i].yReserve >> 3;
      00126A F8 0E                 4554 	ldhl	sp,	#14
      00126C 70                    4555 	ld	(hl), b
                                   4556 ;src/main.c:495: enemies[i].y += yMovement;
      00126D F8 04                 4557 	ldhl	sp,#4
      00126F 2A                    4558 	ld	a, (hl+)
      001270 5F                    4559 	ld	e, a
      001271 56                    4560 	ld	d, (hl)
      001272 1A                    4561 	ld	a, (de)
      001273 4F                    4562 	ld	c, a
      001274 13                    4563 	inc	de
      001275 1A                    4564 	ld	a, (de)
      001276 47                    4565 	ld	b, a
      001277 F8 0E                 4566 	ldhl	sp,	#14
      001279 7E                    4567 	ld	a, (hl)
      00127A 5F                    4568 	ld	e, a
      00127B 07                    4569 	rlca
      00127C 9F                    4570 	sbc	a, a
      00127D 57                    4571 	ld	d, a
      00127E 69                    4572 	ld	l, c
                                   4573 ;	spillPairReg hl
                                   4574 ;	spillPairReg hl
      00127F 60                    4575 	ld	h, b
                                   4576 ;	spillPairReg hl
                                   4577 ;	spillPairReg hl
      001280 19                    4578 	add	hl, de
      001281 4D                    4579 	ld	c, l
      001282 44                    4580 	ld	b, h
      001283 F8 04                 4581 	ldhl	sp,	#4
      001285 2A                    4582 	ld	a,	(hl+)
      001286 66                    4583 	ld	h, (hl)
      001287 6F                    4584 	ld	l, a
      001288 79                    4585 	ld	a, c
      001289 22                    4586 	ld	(hl+), a
      00128A 70                    4587 	ld	(hl), b
                                   4588 ;src/main.c:496: enemies[i].yReserve -=  yMovement << 3;
      00128B F8 0A                 4589 	ldhl	sp,#10
      00128D 2A                    4590 	ld	a, (hl+)
      00128E 5F                    4591 	ld	e, a
      00128F 56                    4592 	ld	d, (hl)
      001290 1A                    4593 	ld	a, (de)
      001291 F5                    4594 	push	af
      001292 F8 10                 4595 	ldhl	sp,	#16
      001294 7E                    4596 	ld	a, (hl)
      001295 87                    4597 	add	a, a
      001296 87                    4598 	add	a, a
      001297 87                    4599 	add	a, a
      001298 4F                    4600 	ld	c, a
      001299 F1                    4601 	pop	af
      00129A 91                    4602 	sub	a, c
      00129B 4F                    4603 	ld	c, a
      00129C F8 0A                 4604 	ldhl	sp,	#10
      00129E 2A                    4605 	ld	a,	(hl+)
      00129F 66                    4606 	ld	h, (hl)
      0012A0 6F                    4607 	ld	l, a
      0012A1 71                    4608 	ld	(hl), c
      0012A2 18 67                 4609 	jr	00133$
      0012A4                       4610 00131$:
                                   4611 ;src/main.c:498: else if ((-enemies[i].yReserve) >> 3 > 0){
      0012A4 79                    4612 	ld	a, c
      0012A5 07                    4613 	rlca
      0012A6 9F                    4614 	sbc	a, a
      0012A7 47                    4615 	ld	b, a
      0012A8 AF                    4616 	xor	a, a
      0012A9 91                    4617 	sub	a, c
      0012AA 4F                    4618 	ld	c, a
      0012AB 9F                    4619 	sbc	a, a
      0012AC 90                    4620 	sub	a, b
      0012AD 47                    4621 	ld	b, a
      0012AE CB 28                 4622 	sra	b
      0012B0 CB 19                 4623 	rr	c
      0012B2 CB 28                 4624 	sra	b
      0012B4 CB 19                 4625 	rr	c
      0012B6 CB 28                 4626 	sra	b
      0012B8 CB 19                 4627 	rr	c
      0012BA 58                    4628 	ld	e, b
      0012BB AF                    4629 	xor	a, a
      0012BC 57                    4630 	ld	d, a
      0012BD B9                    4631 	cp	a, c
      0012BE 98                    4632 	sbc	a, b
      0012BF CB 7B                 4633 	bit	7, e
      0012C1 28 07                 4634 	jr	Z, 00433$
      0012C3 CB 7A                 4635 	bit	7, d
      0012C5 20 08                 4636 	jr	NZ, 00434$
      0012C7 BF                    4637 	cp	a, a
      0012C8 18 05                 4638 	jr	00434$
      0012CA                       4639 00433$:
      0012CA CB 7A                 4640 	bit	7, d
      0012CC 28 01                 4641 	jr	Z, 00434$
      0012CE 37                    4642 	scf
      0012CF                       4643 00434$:
      0012CF 30 3A                 4644 	jr	NC, 00133$
                                   4645 ;src/main.c:499: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      0012D1 AF                    4646 	xor	a, a
      0012D2 91                    4647 	sub	a, c
      0012D3 4F                    4648 	ld	c, a
      0012D4 F8 0E                 4649 	ldhl	sp,	#14
      0012D6 71                    4650 	ld	(hl), c
                                   4651 ;src/main.c:500: enemies[i].y += yMovement;
      0012D7 F8 04                 4652 	ldhl	sp,#4
      0012D9 2A                    4653 	ld	a, (hl+)
      0012DA 5F                    4654 	ld	e, a
      0012DB 56                    4655 	ld	d, (hl)
      0012DC 1A                    4656 	ld	a, (de)
      0012DD 4F                    4657 	ld	c, a
      0012DE 13                    4658 	inc	de
      0012DF 1A                    4659 	ld	a, (de)
      0012E0 47                    4660 	ld	b, a
      0012E1 F8 0E                 4661 	ldhl	sp,	#14
      0012E3 7E                    4662 	ld	a, (hl)
      0012E4 5F                    4663 	ld	e, a
      0012E5 07                    4664 	rlca
      0012E6 9F                    4665 	sbc	a, a
      0012E7 57                    4666 	ld	d, a
      0012E8 69                    4667 	ld	l, c
      0012E9 60                    4668 	ld	h, b
      0012EA 19                    4669 	add	hl, de
      0012EB 4D                    4670 	ld	c, l
      0012EC 44                    4671 	ld	b, h
      0012ED F8 04                 4672 	ldhl	sp,	#4
      0012EF 2A                    4673 	ld	a,	(hl+)
      0012F0 66                    4674 	ld	h, (hl)
      0012F1 6F                    4675 	ld	l, a
      0012F2 79                    4676 	ld	a, c
      0012F3 22                    4677 	ld	(hl+), a
      0012F4 70                    4678 	ld	(hl), b
                                   4679 ;src/main.c:501: enemies[i].yReserve +=  (-yMovement) << 3;
      0012F5 F8 0A                 4680 	ldhl	sp,#10
      0012F7 2A                    4681 	ld	a, (hl+)
      0012F8 5F                    4682 	ld	e, a
      0012F9 56                    4683 	ld	d, (hl)
      0012FA 1A                    4684 	ld	a, (de)
      0012FB 4F                    4685 	ld	c, a
      0012FC AF                    4686 	xor	a, a
      0012FD F8 0E                 4687 	ldhl	sp,	#14
      0012FF 96                    4688 	sub	a, (hl)
      001300 87                    4689 	add	a, a
      001301 87                    4690 	add	a, a
      001302 87                    4691 	add	a, a
      001303 81                    4692 	add	a, c
      001304 4F                    4693 	ld	c, a
      001305 F8 0A                 4694 	ldhl	sp,	#10
      001307 2A                    4695 	ld	a,	(hl+)
      001308 66                    4696 	ld	h, (hl)
      001309 6F                    4697 	ld	l, a
      00130A 71                    4698 	ld	(hl), c
      00130B                       4699 00133$:
                                   4700 ;src/main.c:437: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00130B F8 0F                 4701 	ldhl	sp,	#15
      00130D 34                    4702 	inc	(hl)
      00130E C3r65r0E              4703 	jp	00196$
      001311                       4704 00134$:
                                   4705 ;src/main.c:508: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001311 F8 0F                 4706 	ldhl	sp,	#15
      001313 36 00                 4707 	ld	(hl), #0x00
      001315                       4708 00198$:
      001315 21r88r08              4709 	ld	hl, #_ENEMYCOUNT
      001318 4E                    4710 	ld	c, (hl)
      001319 F8 0F                 4711 	ldhl	sp,	#15
      00131B 7E                    4712 	ld	a, (hl)
      00131C 91                    4713 	sub	a, c
      00131D D2rBBr16              4714 	jp	NC, 00200$
                                   4715 ;src/main.c:510: if (enemies[i].alive) {
      001320 4E                    4716 	ld	c, (hl)
      001321 06 00                 4717 	ld	b, #0x00
      001323 69                    4718 	ld	l, c
      001324 60                    4719 	ld	h, b
      001325 29                    4720 	add	hl, hl
      001326 29                    4721 	add	hl, hl
      001327 29                    4722 	add	hl, hl
      001328 09                    4723 	add	hl, bc
      001329 29                    4724 	add	hl, hl
                                   4725 ;src/main.c:526: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      00132A 01r5Ar00              4726 	ld	bc,#_enemies
      00132D 09                    4727 	add	hl,bc
      00132E E5                    4728 	push	hl
      00132F 7D                    4729 	ld	a, l
      001330 F8 03                 4730 	ldhl	sp,	#3
      001332 77                    4731 	ld	(hl), a
      001333 E1                    4732 	pop	hl
      001334 7C                    4733 	ld	a, h
      001335 F8 02                 4734 	ldhl	sp,	#2
                                   4735 ;src/main.c:510: if (enemies[i].alive) {
      001337 32                    4736 	ld	(hl-), a
      001338 2A                    4737 	ld	a, (hl+)
      001339 5F                    4738 	ld	e, a
      00133A 56                    4739 	ld	d, (hl)
      00133B 21 09 00              4740 	ld	hl, #0x0009
      00133E 19                    4741 	add	hl, de
      00133F E5                    4742 	push	hl
      001340 7D                    4743 	ld	a, l
      001341 F8 05                 4744 	ldhl	sp,	#5
      001343 77                    4745 	ld	(hl), a
      001344 E1                    4746 	pop	hl
      001345 7C                    4747 	ld	a, h
      001346 F8 04                 4748 	ldhl	sp,	#4
      001348 32                    4749 	ld	(hl-), a
      001349 2A                    4750 	ld	a, (hl+)
      00134A 5F                    4751 	ld	e, a
      00134B 56                    4752 	ld	d, (hl)
      00134C 1A                    4753 	ld	a, (de)
      00134D F8 0E                 4754 	ldhl	sp,	#14
      00134F 77                    4755 	ld	(hl), a
      001350 7E                    4756 	ld	a, (hl)
      001351 B7                    4757 	or	a, a
      001352 CAr48r15              4758 	jp	Z, 00157$
                                   4759 ;src/main.c:511: if (enemies[i].visible == 1) {
      001355 F8 01                 4760 	ldhl	sp,#1
      001357 2A                    4761 	ld	a, (hl+)
      001358 5F                    4762 	ld	e, a
      001359 56                    4763 	ld	d, (hl)
      00135A 21 0A 00              4764 	ld	hl, #0x000a
      00135D 19                    4765 	add	hl, de
      00135E E5                    4766 	push	hl
      00135F 7D                    4767 	ld	a, l
      001360 F8 07                 4768 	ldhl	sp,	#7
      001362 77                    4769 	ld	(hl), a
      001363 E1                    4770 	pop	hl
      001364 7C                    4771 	ld	a, h
      001365 F8 06                 4772 	ldhl	sp,	#6
      001367 32                    4773 	ld	(hl-), a
      001368 2A                    4774 	ld	a, (hl+)
      001369 5F                    4775 	ld	e, a
      00136A 2A                    4776 	ld	a, (hl+)
      00136B 57                    4777 	ld	d, a
      00136C 1A                    4778 	ld	a, (de)
      00136D 77                    4779 	ld	(hl), a
                                   4780 ;src/main.c:512: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      00136E F8 01                 4781 	ldhl	sp,#1
      001370 2A                    4782 	ld	a, (hl+)
      001371 5F                    4783 	ld	e, a
      001372 56                    4784 	ld	d, (hl)
      001373 1A                    4785 	ld	a, (de)
      001374 F8 08                 4786 	ldhl	sp,	#8
      001376 22                    4787 	ld	(hl+), a
      001377 13                    4788 	inc	de
      001378 1A                    4789 	ld	a, (de)
      001379 77                    4790 	ld	(hl), a
      00137A F8 01                 4791 	ldhl	sp,	#1
      00137C 2A                    4792 	ld	a, (hl+)
      00137D 4F                    4793 	ld	c, a
      00137E 46                    4794 	ld	b, (hl)
      00137F 03                    4795 	inc	bc
      001380 03                    4796 	inc	bc
                                   4797 ;src/main.c:514: set_sprite_tile(10+(i<<1), 0x7f);
      001381 F8 0F                 4798 	ldhl	sp,	#15
      001383 5E                    4799 	ld	e, (hl)
                                   4800 ;src/main.c:512: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001384 F8 08                 4801 	ldhl	sp,	#8
      001386 2A                    4802 	ld	a, (hl+)
      001387 23                    4803 	inc	hl
      001388 32                    4804 	ld	(hl-), a
      001389 2A                    4805 	ld	a, (hl+)
      00138A 23                    4806 	inc	hl
                                   4807 ;src/main.c:514: set_sprite_tile(10+(i<<1), 0x7f);
      00138B 22                    4808 	ld	(hl+), a
      00138C 7B                    4809 	ld	a, e
      00138D 87                    4810 	add	a, a
                                   4811 ;src/main.c:512: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      00138E 32                    4812 	ld	(hl-), a
      00138F 2A                    4813 	ld	a, (hl+)
      001390 23                    4814 	inc	hl
      001391 07                    4815 	rlca
      001392 E6 01                 4816 	and	a,#0x01
                                   4817 ;src/main.c:514: set_sprite_tile(10+(i<<1), 0x7f);
      001394 32                    4818 	ld	(hl-), a
      001395 2A                    4819 	ld	a, (hl+)
      001396 23                    4820 	inc	hl
      001397 C6 0A                 4821 	add	a, #0x0a
      001399 77                    4822 	ld	(hl), a
                                   4823 ;src/main.c:511: if (enemies[i].visible == 1) {
      00139A F8 07                 4824 	ldhl	sp,	#7
      00139C 7E                    4825 	ld	a, (hl)
      00139D 3D                    4826 	dec	a
      00139E 20 74                 4827 	jr	NZ, 00154$
                                   4828 ;src/main.c:512: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0013A0 F8 0D                 4829 	ldhl	sp,	#13
      0013A2 7E                    4830 	ld	a, (hl)
      0013A3 B7                    4831 	or	a, a
      0013A4 20 43                 4832 	jr	NZ, 00135$
      0013A6 F8 0A                 4833 	ldhl	sp,	#10
      0013A8 3E AC                 4834 	ld	a, #0xac
      0013AA 96                    4835 	sub	a, (hl)
      0013AB 23                    4836 	inc	hl
      0013AC 3E 00                 4837 	ld	a, #0x00
      0013AE 9E                    4838 	sbc	a, (hl)
      0013AF 3E 00                 4839 	ld	a, #0x00
      0013B1 57                    4840 	ld	d, a
      0013B2 CB 7E                 4841 	bit	7, (hl)
      0013B4 28 07                 4842 	jr	Z, 00437$
      0013B6 CB 7A                 4843 	bit	7, d
      0013B8 20 08                 4844 	jr	NZ, 00438$
      0013BA BF                    4845 	cp	a, a
      0013BB 18 05                 4846 	jr	00438$
      0013BD                       4847 00437$:
      0013BD CB 7A                 4848 	bit	7, d
      0013BF 28 01                 4849 	jr	Z, 00438$
      0013C1 37                    4850 	scf
      0013C2                       4851 00438$:
      0013C2 38 25                 4852 	jr	C, 00135$
      0013C4 69                    4853 	ld	l, c
      0013C5 60                    4854 	ld	h, b
      0013C6 2A                    4855 	ld	a, (hl+)
      0013C7 4F                    4856 	ld	c, a
      0013C8 46                    4857 	ld	b, (hl)
      0013C9 CB 78                 4858 	bit	7, b
      0013CB 20 1C                 4859 	jr	NZ, 00135$
      0013CD 58                    4860 	ld	e, b
      0013CE 16 00                 4861 	ld	d, #0x00
      0013D0 3E 98                 4862 	ld	a, #0x98
      0013D2 B9                    4863 	cp	a, c
      0013D3 3E 00                 4864 	ld	a, #0x00
      0013D5 98                    4865 	sbc	a, b
      0013D6 CB 7B                 4866 	bit	7, e
      0013D8 28 07                 4867 	jr	Z, 00439$
      0013DA CB 7A                 4868 	bit	7, d
      0013DC 20 08                 4869 	jr	NZ, 00440$
      0013DE BF                    4870 	cp	a, a
      0013DF 18 05                 4871 	jr	00440$
      0013E1                       4872 00439$:
      0013E1 CB 7A                 4873 	bit	7, d
      0013E3 28 01                 4874 	jr	Z, 00440$
      0013E5 37                    4875 	scf
      0013E6                       4876 00440$:
      0013E6 D2r48r15              4877 	jp	NC, 00157$
      0013E9                       4878 00135$:
                                   4879 ;src/main.c:513: enemies[i].visible = 0;
      0013E9 F8 05                 4880 	ldhl	sp,	#5
      0013EB 2A                    4881 	ld	a,	(hl+)
      0013EC 66                    4882 	ld	h, (hl)
      0013ED 6F                    4883 	ld	l, a
      0013EE 36 00                 4884 	ld	(hl), #0x00
                                   4885 ;src/main.c:514: set_sprite_tile(10+(i<<1), 0x7f);
      0013F0 F8 0E                 4886 	ldhl	sp,	#14
                                   4887 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0013F2 6E                    4888 	ld	l, (hl)
      0013F3 01r00r00              4889 	ld	bc, #_shadow_OAM+0
                                   4890 ;	spillPairReg hl
                                   4891 ;	spillPairReg hl
      0013F6 26 00                 4892 	ld	h, #0x00
                                   4893 ;	spillPairReg hl
                                   4894 ;	spillPairReg hl
      0013F8 29                    4895 	add	hl, hl
      0013F9 29                    4896 	add	hl, hl
      0013FA 09                    4897 	add	hl, bc
      0013FB 23                    4898 	inc	hl
      0013FC 23                    4899 	inc	hl
      0013FD 36 7F                 4900 	ld	(hl), #0x7f
                                   4901 ;src/main.c:515: set_sprite_tile(10+(i<<1)+1, 0x7f);
      0013FF F8 0C                 4902 	ldhl	sp,	#12
      001401 7E                    4903 	ld	a, (hl)
      001402 C6 0B                 4904 	add	a, #0x0b
                                   4905 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001404 6F                    4906 	ld	l, a
      001405 01r00r00              4907 	ld	bc, #_shadow_OAM+0
                                   4908 ;	spillPairReg hl
                                   4909 ;	spillPairReg hl
      001408 26 00                 4910 	ld	h, #0x00
                                   4911 ;	spillPairReg hl
                                   4912 ;	spillPairReg hl
      00140A 29                    4913 	add	hl, hl
      00140B 29                    4914 	add	hl, hl
      00140C 09                    4915 	add	hl, bc
      00140D 23                    4916 	inc	hl
      00140E 23                    4917 	inc	hl
      00140F 36 7F                 4918 	ld	(hl), #0x7f
                                   4919 ;src/main.c:515: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001411 C3r48r15              4920 	jp	00157$
      001414                       4921 00154$:
                                   4922 ;src/main.c:519: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      001414 F8 0D                 4923 	ldhl	sp,	#13
      001416 CB 46                 4924 	bit	0, (hl)
      001418 C2rB3r14              4925 	jp	NZ, 00148$
      00141B F8 0A                 4926 	ldhl	sp,	#10
      00141D 2A                    4927 	ld	a, (hl+)
      00141E D6 AC                 4928 	sub	a, #0xac
      001420 7E                    4929 	ld	a, (hl)
      001421 DE 00                 4930 	sbc	a, #0x00
      001423 56                    4931 	ld	d, (hl)
      001424 3E 00                 4932 	ld	a, #0x00
      001426 CB 7F                 4933 	bit	7,a
      001428 28 07                 4934 	jr	Z, 00441$
      00142A CB 7A                 4935 	bit	7, d
      00142C 20 08                 4936 	jr	NZ, 00442$
      00142E BF                    4937 	cp	a, a
      00142F 18 05                 4938 	jr	00442$
      001431                       4939 00441$:
      001431 CB 7A                 4940 	bit	7, d
      001433 28 01                 4941 	jr	Z, 00442$
      001435 37                    4942 	scf
      001436                       4943 00442$:
      001436 30 7B                 4944 	jr	NC, 00148$
      001438 69                    4945 	ld	l, c
      001439 60                    4946 	ld	h, b
      00143A 2A                    4947 	ld	a,	(hl+)
      00143B 66                    4948 	ld	h, (hl)
                                   4949 ;	spillPairReg hl
      00143C 6F                    4950 	ld	l, a
                                   4951 ;	spillPairReg hl
                                   4952 ;	spillPairReg hl
      00143D 5C                    4953 	ld	e, h
      00143E AF                    4954 	xor	a, a
      00143F 57                    4955 	ld	d, a
      001440 BD                    4956 	cp	a, l
      001441 9C                    4957 	sbc	a, h
      001442 CB 7B                 4958 	bit	7, e
      001444 28 07                 4959 	jr	Z, 00443$
      001446 CB 7A                 4960 	bit	7, d
      001448 20 08                 4961 	jr	NZ, 00444$
      00144A BF                    4962 	cp	a, a
      00144B 18 05                 4963 	jr	00444$
      00144D                       4964 00443$:
      00144D CB 7A                 4965 	bit	7, d
      00144F 28 01                 4966 	jr	Z, 00444$
      001451 37                    4967 	scf
      001452                       4968 00444$:
      001452 30 5F                 4969 	jr	NC, 00148$
      001454 7D                    4970 	ld	a, l
      001455 D6 98                 4971 	sub	a, #0x98
      001457 7C                    4972 	ld	a, h
      001458 17                    4973 	rla
      001459 3F                    4974 	ccf
      00145A 1F                    4975 	rra
      00145B DE 80                 4976 	sbc	a, #0x80
      00145D 30 54                 4977 	jr	NC, 00148$
                                   4978 ;src/main.c:520: enemies[i].visible = 1;
      00145F F8 05                 4979 	ldhl	sp,	#5
      001461 2A                    4980 	ld	a,	(hl+)
      001462 66                    4981 	ld	h, (hl)
      001463 6F                    4982 	ld	l, a
      001464 36 01                 4983 	ld	(hl), #0x01
                                   4984 ;src/main.c:521: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      001466 F8 01                 4985 	ldhl	sp,#1
      001468 2A                    4986 	ld	a, (hl+)
      001469 5F                    4987 	ld	e, a
      00146A 56                    4988 	ld	d, (hl)
      00146B 21 06 00              4989 	ld	hl, #0x0006
      00146E 19                    4990 	add	hl, de
      00146F 4D                    4991 	ld	c, l
      001470 44                    4992 	ld	b, h
      001471 0A                    4993 	ld	a, (bc)
      001472 4F                    4994 	ld	c, a
      001473 F8 0E                 4995 	ldhl	sp,	#14
                                   4996 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001475 6E                    4997 	ld	l, (hl)
                                   4998 ;	spillPairReg hl
                                   4999 ;	spillPairReg hl
      001476 26 00                 5000 	ld	h, #0x00
                                   5001 ;	spillPairReg hl
                                   5002 ;	spillPairReg hl
      001478 29                    5003 	add	hl, hl
      001479 29                    5004 	add	hl, hl
      00147A 11r00r00              5005 	ld	de, #_shadow_OAM
      00147D 19                    5006 	add	hl, de
      00147E 23                    5007 	inc	hl
      00147F 23                    5008 	inc	hl
      001480 71                    5009 	ld	(hl), c
                                   5010 ;src/main.c:522: if (enemies[i].spriteCount == 2) {
      001481 F8 01                 5011 	ldhl	sp,#1
      001483 2A                    5012 	ld	a, (hl+)
      001484 5F                    5013 	ld	e, a
      001485 56                    5014 	ld	d, (hl)
      001486 21 08 00              5015 	ld	hl, #0x0008
      001489 19                    5016 	add	hl, de
      00148A 4D                    5017 	ld	c, l
      00148B 44                    5018 	ld	b, h
      00148C 0A                    5019 	ld	a, (bc)
      00148D D6 02                 5020 	sub	a, #0x02
      00148F C2r48r15              5021 	jp	NZ,00157$
                                   5022 ;src/main.c:523: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001492 F8 01                 5023 	ldhl	sp,#1
      001494 2A                    5024 	ld	a, (hl+)
      001495 5F                    5025 	ld	e, a
      001496 56                    5026 	ld	d, (hl)
      001497 21 07 00              5027 	ld	hl, #0x0007
      00149A 19                    5028 	add	hl, de
      00149B 4D                    5029 	ld	c, l
      00149C 44                    5030 	ld	b, h
      00149D 0A                    5031 	ld	a, (bc)
      00149E 4F                    5032 	ld	c, a
      00149F F8 0C                 5033 	ldhl	sp,	#12
      0014A1 7E                    5034 	ld	a, (hl)
      0014A2 C6 0B                 5035 	add	a, #0x0b
                                   5036 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0014A4 6F                    5037 	ld	l, a
                                   5038 ;	spillPairReg hl
                                   5039 ;	spillPairReg hl
      0014A5 26 00                 5040 	ld	h, #0x00
                                   5041 ;	spillPairReg hl
                                   5042 ;	spillPairReg hl
      0014A7 29                    5043 	add	hl, hl
      0014A8 29                    5044 	add	hl, hl
      0014A9 11r00r00              5045 	ld	de, #_shadow_OAM
      0014AC 19                    5046 	add	hl, de
      0014AD 23                    5047 	inc	hl
      0014AE 23                    5048 	inc	hl
      0014AF 71                    5049 	ld	(hl), c
                                   5050 ;src/main.c:523: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0014B0 C3r48r15              5051 	jp	00157$
      0014B3                       5052 00148$:
                                   5053 ;src/main.c:526: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      0014B3 F8 08                 5054 	ldhl	sp,	#8
      0014B5 2A                    5055 	ld	a, (hl+)
      0014B6 D6 9C                 5056 	sub	a, #0x9c
      0014B8 7E                    5057 	ld	a, (hl)
      0014B9 DE FF                 5058 	sbc	a, #0xff
      0014BB 56                    5059 	ld	d, (hl)
      0014BC 3E FF                 5060 	ld	a, #0xff
      0014BE CB 7F                 5061 	bit	7,a
      0014C0 28 07                 5062 	jr	Z, 00447$
      0014C2 CB 7A                 5063 	bit	7, d
      0014C4 20 08                 5064 	jr	NZ, 00448$
      0014C6 BF                    5065 	cp	a, a
      0014C7 18 05                 5066 	jr	00448$
      0014C9                       5067 00447$:
      0014C9 CB 7A                 5068 	bit	7, d
      0014CB 28 01                 5069 	jr	Z, 00448$
      0014CD 37                    5070 	scf
      0014CE                       5071 00448$:
      0014CE 38 49                 5072 	jr	C, 00142$
      0014D0 F8 0A                 5073 	ldhl	sp,	#10
      0014D2 3E 10                 5074 	ld	a, #0x10
      0014D4 96                    5075 	sub	a, (hl)
      0014D5 23                    5076 	inc	hl
      0014D6 3E 01                 5077 	ld	a, #0x01
      0014D8 9E                    5078 	sbc	a, (hl)
      0014D9 3E 01                 5079 	ld	a, #0x01
      0014DB 57                    5080 	ld	d, a
      0014DC CB 7E                 5081 	bit	7, (hl)
      0014DE 28 07                 5082 	jr	Z, 00449$
      0014E0 CB 7A                 5083 	bit	7, d
      0014E2 20 08                 5084 	jr	NZ, 00450$
      0014E4 BF                    5085 	cp	a, a
      0014E5 18 05                 5086 	jr	00450$
      0014E7                       5087 00449$:
      0014E7 CB 7A                 5088 	bit	7, d
      0014E9 28 01                 5089 	jr	Z, 00450$
      0014EB 37                    5090 	scf
      0014EC                       5091 00450$:
      0014EC 38 2B                 5092 	jr	C, 00142$
      0014EE 69                    5093 	ld	l, c
      0014EF 60                    5094 	ld	h, b
      0014F0 2A                    5095 	ld	a, (hl+)
      0014F1 4F                    5096 	ld	c, a
      0014F2 46                    5097 	ld	b, (hl)
      0014F3 79                    5098 	ld	a, c
      0014F4 D6 9C                 5099 	sub	a, #0x9c
      0014F6 78                    5100 	ld	a, b
      0014F7 17                    5101 	rla
      0014F8 3F                    5102 	ccf
      0014F9 1F                    5103 	rra
      0014FA DE 7F                 5104 	sbc	a, #0x7f
      0014FC 38 1B                 5105 	jr	C, 00142$
      0014FE 58                    5106 	ld	e, b
      0014FF 16 00                 5107 	ld	d, #0x00
      001501 3E FC                 5108 	ld	a, #0xfc
      001503 B9                    5109 	cp	a, c
      001504 3E 00                 5110 	ld	a, #0x00
      001506 98                    5111 	sbc	a, b
      001507 CB 7B                 5112 	bit	7, e
      001509 28 07                 5113 	jr	Z, 00451$
      00150B CB 7A                 5114 	bit	7, d
      00150D 20 08                 5115 	jr	NZ, 00452$
      00150F BF                    5116 	cp	a, a
      001510 18 05                 5117 	jr	00452$
      001512                       5118 00451$:
      001512 CB 7A                 5119 	bit	7, d
      001514 28 01                 5120 	jr	Z, 00452$
      001516 37                    5121 	scf
      001517                       5122 00452$:
      001517 30 2F                 5123 	jr	NC, 00157$
      001519                       5124 00142$:
                                   5125 ;src/main.c:527: enemies[i].alive = 0;
      001519 F8 03                 5126 	ldhl	sp,	#3
      00151B 2A                    5127 	ld	a,	(hl+)
      00151C 66                    5128 	ld	h, (hl)
      00151D 6F                    5129 	ld	l, a
      00151E 36 00                 5130 	ld	(hl), #0x00
                                   5131 ;src/main.c:528: set_sprite_tile(10+(i<<1), 0x7f);
      001520 F8 0E                 5132 	ldhl	sp,	#14
                                   5133 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001522 6E                    5134 	ld	l, (hl)
      001523 01r00r00              5135 	ld	bc, #_shadow_OAM+0
                                   5136 ;	spillPairReg hl
                                   5137 ;	spillPairReg hl
      001526 26 00                 5138 	ld	h, #0x00
                                   5139 ;	spillPairReg hl
                                   5140 ;	spillPairReg hl
      001528 29                    5141 	add	hl, hl
      001529 29                    5142 	add	hl, hl
      00152A 09                    5143 	add	hl, bc
      00152B 23                    5144 	inc	hl
      00152C 23                    5145 	inc	hl
      00152D 36 7F                 5146 	ld	(hl), #0x7f
                                   5147 ;src/main.c:529: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00152F F8 0C                 5148 	ldhl	sp,	#12
      001531 7E                    5149 	ld	a, (hl)
      001532 C6 0B                 5150 	add	a, #0x0b
                                   5151 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001534 6F                    5152 	ld	l, a
      001535 01r00r00              5153 	ld	bc, #_shadow_OAM+0
                                   5154 ;	spillPairReg hl
                                   5155 ;	spillPairReg hl
      001538 26 00                 5156 	ld	h, #0x00
                                   5157 ;	spillPairReg hl
                                   5158 ;	spillPairReg hl
      00153A 29                    5159 	add	hl, hl
      00153B 29                    5160 	add	hl, hl
      00153C 09                    5161 	add	hl, bc
      00153D 23                    5162 	inc	hl
      00153E 23                    5163 	inc	hl
      00153F 36 7F                 5164 	ld	(hl), #0x7f
                                   5165 ;src/main.c:530: initEnemies(0);
      001541 AF                    5166 	xor	a, a
      001542 F5                    5167 	push	af
      001543 33                    5168 	inc	sp
      001544 CDrF4r0C              5169 	call	_initEnemies
      001547 33                    5170 	inc	sp
      001548                       5171 00157$:
                                   5172 ;src/main.c:534: if (enemies[i].spriteCount == 1) {
      001548 F8 0F                 5173 	ldhl	sp,	#15
      00154A 4E                    5174 	ld	c, (hl)
      00154B 06 00                 5175 	ld	b, #0x00
      00154D 69                    5176 	ld	l, c
      00154E 60                    5177 	ld	h, b
      00154F 29                    5178 	add	hl, hl
      001550 29                    5179 	add	hl, hl
      001551 29                    5180 	add	hl, hl
      001552 09                    5181 	add	hl, bc
      001553 29                    5182 	add	hl, hl
      001554 01r5Ar00              5183 	ld	bc,#_enemies
      001557 09                    5184 	add	hl,bc
      001558 4D                    5185 	ld	c, l
      001559 44                    5186 	ld	b, h
      00155A 21 08 00              5187 	ld	hl, #0x0008
      00155D 09                    5188 	add	hl, bc
      00155E 5E                    5189 	ld	e, (hl)
                                   5190 ;src/main.c:514: set_sprite_tile(10+(i<<1), 0x7f);
      00155F F8 0F                 5191 	ldhl	sp,	#15
      001561 3A                    5192 	ld	a, (hl-)
      001562 87                    5193 	add	a, a
      001563 77                    5194 	ld	(hl), a
      001564 7E                    5195 	ld	a, (hl)
      001565 C6 0A                 5196 	add	a, #0x0a
      001567 F8 0A                 5197 	ldhl	sp,	#10
      001569 77                    5198 	ld	(hl), a
                                   5199 ;src/main.c:534: if (enemies[i].spriteCount == 1) {
      00156A 1D                    5200 	dec	e
      00156B 20 52                 5201 	jr	NZ, 00165$
                                   5202 ;src/main.c:535: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      00156D 59                    5203 	ld	e, c
      00156E 50                    5204 	ld	d, b
      00156F 13                    5205 	inc	de
      001570 13                    5206 	inc	de
      001571 1A                    5207 	ld	a, (de)
      001572 C6 0C                 5208 	add	a, #0x0c
      001574 5F                    5209 	ld	e, a
      001575 0A                    5210 	ld	a, (bc)
      001576 C6 04                 5211 	add	a, #0x04
      001578 F8 0E                 5212 	ldhl	sp,	#14
      00157A 77                    5213 	ld	(hl), a
      00157B F8 0A                 5214 	ldhl	sp,	#10
      00157D 56                    5215 	ld	d, (hl)
                                   5216 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00157E 6A                    5217 	ld	l, d
                                   5218 ;	spillPairReg hl
                                   5219 ;	spillPairReg hl
      00157F 26 00                 5220 	ld	h, #0x00
                                   5221 ;	spillPairReg hl
                                   5222 ;	spillPairReg hl
      001581 29                    5223 	add	hl, hl
      001582 29                    5224 	add	hl, hl
      001583 D5                    5225 	push	de
      001584 11r00r00              5226 	ld	de, #_shadow_OAM
      001587 19                    5227 	add	hl, de
      001588 D1                    5228 	pop	de
                                   5229 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001589 7B                    5230 	ld	a, e
      00158A 22                    5231 	ld	(hl+), a
      00158B 5D                    5232 	ld	e, l
      00158C 54                    5233 	ld	d, h
      00158D F8 0E                 5234 	ldhl	sp,	#14
      00158F 7E                    5235 	ld	a, (hl)
      001590 12                    5236 	ld	(de), a
                                   5237 ;src/main.c:536: if (enemies[i].xSpeed >= 0) {
      001591 21 0E 00              5238 	ld	hl, #0x000e
      001594 09                    5239 	add	hl, bc
      001595 CB 7E                 5240 	bit	7, (hl)
      001597 20 13                 5241 	jr	NZ, 00159$
                                   5242 ;src/main.c:537: set_sprite_prop(10+(i<<1), 0);
      001599 F8 0A                 5243 	ldhl	sp,	#10
                                   5244 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00159B 6E                    5245 	ld	l, (hl)
      00159C 01r00r00              5246 	ld	bc, #_shadow_OAM+0
                                   5247 ;	spillPairReg hl
                                   5248 ;	spillPairReg hl
      00159F 26 00                 5249 	ld	h, #0x00
                                   5250 ;	spillPairReg hl
                                   5251 ;	spillPairReg hl
      0015A1 29                    5252 	add	hl, hl
      0015A2 29                    5253 	add	hl, hl
      0015A3 09                    5254 	add	hl, bc
      0015A4 23                    5255 	inc	hl
      0015A5 23                    5256 	inc	hl
      0015A6 23                    5257 	inc	hl
      0015A7 36 00                 5258 	ld	(hl), #0x00
                                   5259 ;src/main.c:537: set_sprite_prop(10+(i<<1), 0);
      0015A9 C3rB5r16              5260 	jp	00199$
      0015AC                       5261 00159$:
                                   5262 ;src/main.c:540: set_sprite_prop(10+(i<<1), S_FLIPX);
      0015AC F8 0A                 5263 	ldhl	sp,	#10
                                   5264 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015AE 6E                    5265 	ld	l, (hl)
      0015AF 01r00r00              5266 	ld	bc, #_shadow_OAM+0
                                   5267 ;	spillPairReg hl
                                   5268 ;	spillPairReg hl
      0015B2 26 00                 5269 	ld	h, #0x00
                                   5270 ;	spillPairReg hl
                                   5271 ;	spillPairReg hl
      0015B4 29                    5272 	add	hl, hl
      0015B5 29                    5273 	add	hl, hl
      0015B6 09                    5274 	add	hl, bc
      0015B7 23                    5275 	inc	hl
      0015B8 23                    5276 	inc	hl
      0015B9 23                    5277 	inc	hl
      0015BA 36 20                 5278 	ld	(hl), #0x20
                                   5279 ;src/main.c:540: set_sprite_prop(10+(i<<1), S_FLIPX);
      0015BC C3rB5r16              5280 	jp	00199$
      0015BF                       5281 00165$:
                                   5282 ;src/main.c:545: if (enemies[i].xSpeed >= 0) {
      0015BF 21 0E 00              5283 	ld	hl, #0x000e
      0015C2 09                    5284 	add	hl, bc
      0015C3 E5                    5285 	push	hl
      0015C4 7D                    5286 	ld	a, l
      0015C5 F8 0E                 5287 	ldhl	sp,	#14
      0015C7 77                    5288 	ld	(hl), a
      0015C8 E1                    5289 	pop	hl
      0015C9 7C                    5290 	ld	a, h
      0015CA F8 0D                 5291 	ldhl	sp,	#13
      0015CC 32                    5292 	ld	(hl-), a
      0015CD 2A                    5293 	ld	a, (hl+)
      0015CE 5F                    5294 	ld	e, a
      0015CF 56                    5295 	ld	d, (hl)
      0015D0 1A                    5296 	ld	a, (de)
                                   5297 ;	spillPairReg hl
                                   5298 ;	spillPairReg hl
      0015D1 CB 7F                 5299 	bit	7,a
      0015D3 20 70                 5300 	jr	NZ, 00162$
                                   5301 ;src/main.c:546: set_sprite_prop(10+(i<<1), 0);
      0015D5 F8 0A                 5302 	ldhl	sp,	#10
                                   5303 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015D7 6E                    5304 	ld	l, (hl)
                                   5305 ;	spillPairReg hl
                                   5306 ;	spillPairReg hl
      0015D8 26 00                 5307 	ld	h, #0x00
                                   5308 ;	spillPairReg hl
                                   5309 ;	spillPairReg hl
      0015DA 29                    5310 	add	hl, hl
      0015DB 29                    5311 	add	hl, hl
      0015DC 11r00r00              5312 	ld	de, #_shadow_OAM
      0015DF 19                    5313 	add	hl, de
      0015E0 23                    5314 	inc	hl
      0015E1 23                    5315 	inc	hl
      0015E2 23                    5316 	inc	hl
      0015E3 36 00                 5317 	ld	(hl), #0x00
                                   5318 ;src/main.c:547: set_sprite_prop(10+(i<<1)+1, 0);
      0015E5 F8 0E                 5319 	ldhl	sp,	#14
      0015E7 7E                    5320 	ld	a, (hl)
      0015E8 C6 0B                 5321 	add	a, #0x0b
      0015EA F8 0B                 5322 	ldhl	sp,	#11
      0015EC 77                    5323 	ld	(hl), a
                                   5324 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015ED 6E                    5325 	ld	l, (hl)
                                   5326 ;	spillPairReg hl
                                   5327 ;	spillPairReg hl
      0015EE 26 00                 5328 	ld	h, #0x00
                                   5329 ;	spillPairReg hl
                                   5330 ;	spillPairReg hl
      0015F0 29                    5331 	add	hl, hl
      0015F1 29                    5332 	add	hl, hl
      0015F2 11r00r00              5333 	ld	de, #_shadow_OAM
      0015F5 19                    5334 	add	hl, de
      0015F6 23                    5335 	inc	hl
      0015F7 23                    5336 	inc	hl
      0015F8 23                    5337 	inc	hl
      0015F9 36 00                 5338 	ld	(hl), #0x00
                                   5339 ;src/main.c:548: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      0015FB 21 02 00              5340 	ld	hl, #0x0002
      0015FE 09                    5341 	add	hl, bc
      0015FF E5                    5342 	push	hl
      001600 7D                    5343 	ld	a, l
      001601 F8 0E                 5344 	ldhl	sp,	#14
      001603 77                    5345 	ld	(hl), a
      001604 E1                    5346 	pop	hl
      001605 7C                    5347 	ld	a, h
      001606 F8 0D                 5348 	ldhl	sp,	#13
      001608 32                    5349 	ld	(hl-), a
      001609 2A                    5350 	ld	a, (hl+)
      00160A 5F                    5351 	ld	e, a
      00160B 2A                    5352 	ld	a, (hl+)
      00160C 57                    5353 	ld	d, a
      00160D 1A                    5354 	ld	a, (de)
      00160E C6 08                 5355 	add	a, #0x08
      001610 5F                    5356 	ld	e, a
      001611 0A                    5357 	ld	a, (bc)
      001612 77                    5358 	ld	(hl), a
      001613 F8 0A                 5359 	ldhl	sp,	#10
      001615 56                    5360 	ld	d, (hl)
                                   5361 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001616 6A                    5362 	ld	l, d
                                   5363 ;	spillPairReg hl
                                   5364 ;	spillPairReg hl
      001617 26 00                 5365 	ld	h, #0x00
                                   5366 ;	spillPairReg hl
                                   5367 ;	spillPairReg hl
      001619 29                    5368 	add	hl, hl
      00161A 29                    5369 	add	hl, hl
      00161B D5                    5370 	push	de
      00161C 11r00r00              5371 	ld	de, #_shadow_OAM
      00161F 19                    5372 	add	hl, de
      001620 D1                    5373 	pop	de
                                   5374 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001621 7B                    5375 	ld	a, e
      001622 22                    5376 	ld	(hl+), a
      001623 5D                    5377 	ld	e, l
      001624 54                    5378 	ld	d, h
      001625 F8 0E                 5379 	ldhl	sp,	#14
                                   5380 ;src/main.c:549: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001627 3A                    5381 	ld	a, (hl-)
      001628 2B                    5382 	dec	hl
      001629 12                    5383 	ld	(de), a
      00162A 2A                    5384 	ld	a, (hl+)
      00162B 5F                    5385 	ld	e, a
      00162C 3A                    5386 	ld	a, (hl-)
      00162D 2B                    5387 	dec	hl
      00162E 57                    5388 	ld	d, a
      00162F 1A                    5389 	ld	a, (de)
      001630 C6 08                 5390 	add	a, #0x08
      001632 57                    5391 	ld	d, a
      001633 0A                    5392 	ld	a, (bc)
      001634 C6 08                 5393 	add	a, #0x08
      001636 5F                    5394 	ld	e, a
                                   5395 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001637 6E                    5396 	ld	l, (hl)
                                   5397 ;	spillPairReg hl
                                   5398 ;	spillPairReg hl
      001638 26 00                 5399 	ld	h, #0x00
                                   5400 ;	spillPairReg hl
                                   5401 ;	spillPairReg hl
      00163A 29                    5402 	add	hl, hl
      00163B 29                    5403 	add	hl, hl
      00163C 01r00r00              5404 	ld	bc, #_shadow_OAM
      00163F 09                    5405 	add	hl, bc
                                   5406 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001640 7A                    5407 	ld	a, d
      001641 22                    5408 	ld	(hl+), a
      001642 73                    5409 	ld	(hl), e
                                   5410 ;src/main.c:549: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001643 18 70                 5411 	jr	00199$
      001645                       5412 00162$:
                                   5413 ;src/main.c:552: set_sprite_prop(10+(i<<1), S_FLIPX);
      001645 F8 0A                 5414 	ldhl	sp,	#10
      001647 5E                    5415 	ld	e, (hl)
                                   5416 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001648 26 00                 5417 	ld	h, #0x00
                                   5418 ;	spillPairReg hl
                                   5419 ;	spillPairReg hl
      00164A 6B                    5420 	ld	l, e
      00164B 29                    5421 	add	hl, hl
      00164C 29                    5422 	add	hl, hl
      00164D 11r00r00              5423 	ld	de, #_shadow_OAM
      001650 19                    5424 	add	hl, de
      001651 23                    5425 	inc	hl
      001652 23                    5426 	inc	hl
      001653 23                    5427 	inc	hl
      001654 36 20                 5428 	ld	(hl), #0x20
                                   5429 ;src/main.c:553: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      001656 F8 0E                 5430 	ldhl	sp,	#14
      001658 7E                    5431 	ld	a, (hl)
      001659 C6 0B                 5432 	add	a, #0x0b
      00165B F8 0B                 5433 	ldhl	sp,	#11
      00165D 77                    5434 	ld	(hl), a
      00165E 5E                    5435 	ld	e, (hl)
                                   5436 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00165F 26 00                 5437 	ld	h, #0x00
                                   5438 ;	spillPairReg hl
                                   5439 ;	spillPairReg hl
      001661 6B                    5440 	ld	l, e
      001662 29                    5441 	add	hl, hl
      001663 29                    5442 	add	hl, hl
      001664 11r00r00              5443 	ld	de, #_shadow_OAM
      001667 19                    5444 	add	hl, de
      001668 23                    5445 	inc	hl
      001669 23                    5446 	inc	hl
      00166A 23                    5447 	inc	hl
      00166B 36 20                 5448 	ld	(hl), #0x20
                                   5449 ;src/main.c:554: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      00166D 21 02 00              5450 	ld	hl, #0x0002
      001670 09                    5451 	add	hl, bc
      001671 E5                    5452 	push	hl
      001672 7D                    5453 	ld	a, l
      001673 F8 0E                 5454 	ldhl	sp,	#14
      001675 77                    5455 	ld	(hl), a
      001676 E1                    5456 	pop	hl
      001677 7C                    5457 	ld	a, h
      001678 F8 0D                 5458 	ldhl	sp,	#13
      00167A 32                    5459 	ld	(hl-), a
      00167B 2A                    5460 	ld	a, (hl+)
      00167C 5F                    5461 	ld	e, a
      00167D 2A                    5462 	ld	a, (hl+)
      00167E 57                    5463 	ld	d, a
      00167F 1A                    5464 	ld	a, (de)
      001680 C6 08                 5465 	add	a, #0x08
      001682 5F                    5466 	ld	e, a
      001683 0A                    5467 	ld	a, (bc)
      001684 C6 08                 5468 	add	a, #0x08
      001686 77                    5469 	ld	(hl), a
      001687 F8 0A                 5470 	ldhl	sp,	#10
      001689 56                    5471 	ld	d, (hl)
                                   5472 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00168A 6A                    5473 	ld	l, d
                                   5474 ;	spillPairReg hl
                                   5475 ;	spillPairReg hl
      00168B 26 00                 5476 	ld	h, #0x00
                                   5477 ;	spillPairReg hl
                                   5478 ;	spillPairReg hl
      00168D 29                    5479 	add	hl, hl
      00168E 29                    5480 	add	hl, hl
      00168F D5                    5481 	push	de
      001690 11r00r00              5482 	ld	de, #_shadow_OAM
      001693 19                    5483 	add	hl, de
      001694 D1                    5484 	pop	de
                                   5485 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001695 7B                    5486 	ld	a, e
      001696 22                    5487 	ld	(hl+), a
      001697 5D                    5488 	ld	e, l
      001698 54                    5489 	ld	d, h
      001699 F8 0E                 5490 	ldhl	sp,	#14
                                   5491 ;src/main.c:555: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      00169B 3A                    5492 	ld	a, (hl-)
      00169C 2B                    5493 	dec	hl
      00169D 12                    5494 	ld	(de), a
      00169E 2A                    5495 	ld	a, (hl+)
      00169F 5F                    5496 	ld	e, a
      0016A0 3A                    5497 	ld	a, (hl-)
      0016A1 2B                    5498 	dec	hl
      0016A2 57                    5499 	ld	d, a
      0016A3 1A                    5500 	ld	a, (de)
      0016A4 C6 08                 5501 	add	a, #0x08
      0016A6 57                    5502 	ld	d, a
      0016A7 0A                    5503 	ld	a, (bc)
      0016A8 5F                    5504 	ld	e, a
                                   5505 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0016A9 6E                    5506 	ld	l, (hl)
                                   5507 ;	spillPairReg hl
                                   5508 ;	spillPairReg hl
      0016AA 26 00                 5509 	ld	h, #0x00
                                   5510 ;	spillPairReg hl
                                   5511 ;	spillPairReg hl
      0016AC 29                    5512 	add	hl, hl
      0016AD 29                    5513 	add	hl, hl
      0016AE 01r00r00              5514 	ld	bc, #_shadow_OAM
      0016B1 09                    5515 	add	hl, bc
                                   5516 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0016B2 7A                    5517 	ld	a, d
      0016B3 22                    5518 	ld	(hl+), a
      0016B4 73                    5519 	ld	(hl), e
                                   5520 ;src/main.c:555: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0016B5                       5521 00199$:
                                   5522 ;src/main.c:508: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0016B5 F8 0F                 5523 	ldhl	sp,	#15
      0016B7 34                    5524 	inc	(hl)
      0016B8 C3r15r13              5525 	jp	00198$
      0016BB                       5526 00200$:
                                   5527 ;src/main.c:561: }
      0016BB E8 10                 5528 	add	sp, #16
      0016BD C9                    5529 	ret
                                   5530 ;src/main.c:566: void move() {
                                   5531 ;	---------------------------------
                                   5532 ; Function move
                                   5533 ; ---------------------------------
      0016BE                       5534 _move::
      0016BE E8 F8                 5535 	add	sp, #-8
                                   5536 ;src/main.c:570: if (joydata & J_A) {
      0016C0 FArF5r00              5537 	ld	a, (#_joydata)
      0016C3 CB 67                 5538 	bit	4, a
      0016C5 28 16                 5539 	jr	Z, 00102$
                                   5540 ;src/main.c:571: xSpeed += xDir + xDir + xDir;
      0016C7 21r93r00              5541 	ld	hl, #_xDir
      0016CA 7E                    5542 	ld	a, (hl)
      0016CB 87                    5543 	add	a, a
      0016CC 86                    5544 	add	a, (hl)
      0016CD 21r95r00              5545 	ld	hl, #_xSpeed
      0016D0 86                    5546 	add	a, (hl)
      0016D1 77                    5547 	ld	(hl), a
                                   5548 ;src/main.c:572: ySpeed += yDir + yDir + yDir;
      0016D2 21r94r00              5549 	ld	hl, #_yDir
      0016D5 7E                    5550 	ld	a, (hl)
      0016D6 87                    5551 	add	a, a
      0016D7 86                    5552 	add	a, (hl)
      0016D8 21r96r00              5553 	ld	hl, #_ySpeed
      0016DB 86                    5554 	add	a, (hl)
      0016DC 77                    5555 	ld	(hl), a
      0016DD                       5556 00102$:
                                   5557 ;src/main.c:576: xSpeed = clamp(xSpeed, -100, 100);
      0016DD 21r95r00              5558 	ld	hl, #_xSpeed
      0016E0 4E                    5559 	ld	c, (hl)
                                   5560 ;src/main.c:329: return (value < min) ? min : (value > max) ? max : value;
      0016E1 79                    5561 	ld	a, c
      0016E2 EE 80                 5562 	xor	a, #0x80
      0016E4 D6 1C                 5563 	sub	a, #0x1c
      0016E6 30 04                 5564 	jr	NC, 00165$
      0016E8 0E 9C                 5565 	ld	c, #0x9c
      0016EA 18 19                 5566 	jr	00166$
      0016EC                       5567 00165$:
      0016EC 59                    5568 	ld	e, c
      0016ED 3E 64                 5569 	ld	a,#0x64
      0016EF 57                    5570 	ld	d,a
      0016F0 91                    5571 	sub	a, c
      0016F1 CB 7B                 5572 	bit	7, e
      0016F3 28 07                 5573 	jr	Z, 00342$
      0016F5 CB 7A                 5574 	bit	7, d
      0016F7 20 08                 5575 	jr	NZ, 00343$
      0016F9 BF                    5576 	cp	a, a
      0016FA 18 05                 5577 	jr	00343$
      0016FC                       5578 00342$:
      0016FC CB 7A                 5579 	bit	7, d
      0016FE 28 01                 5580 	jr	Z, 00343$
      001700 37                    5581 	scf
      001701                       5582 00343$:
      001701 30 02                 5583 	jr	NC, 00167$
      001703 0E 64                 5584 	ld	c, #0x64
      001705                       5585 00167$:
      001705                       5586 00166$:
      001705 21r95r00              5587 	ld	hl, #_xSpeed
      001708 71                    5588 	ld	(hl), c
                                   5589 ;src/main.c:577: ySpeed = clamp(ySpeed, -100, 100);
      001709 21r96r00              5590 	ld	hl, #_ySpeed
      00170C 4E                    5591 	ld	c, (hl)
                                   5592 ;src/main.c:329: return (value < min) ? min : (value > max) ? max : value;
      00170D 79                    5593 	ld	a, c
      00170E EE 80                 5594 	xor	a, #0x80
      001710 D6 1C                 5595 	sub	a, #0x1c
      001712 30 04                 5596 	jr	NC, 00169$
      001714 0E 9C                 5597 	ld	c, #0x9c
      001716 18 19                 5598 	jr	00170$
      001718                       5599 00169$:
      001718 59                    5600 	ld	e, c
      001719 3E 64                 5601 	ld	a,#0x64
      00171B 57                    5602 	ld	d,a
      00171C 91                    5603 	sub	a, c
      00171D CB 7B                 5604 	bit	7, e
      00171F 28 07                 5605 	jr	Z, 00344$
      001721 CB 7A                 5606 	bit	7, d
      001723 20 08                 5607 	jr	NZ, 00345$
      001725 BF                    5608 	cp	a, a
      001726 18 05                 5609 	jr	00345$
      001728                       5610 00344$:
      001728 CB 7A                 5611 	bit	7, d
      00172A 28 01                 5612 	jr	Z, 00345$
      00172C 37                    5613 	scf
      00172D                       5614 00345$:
      00172D 30 02                 5615 	jr	NC, 00171$
      00172F 0E 64                 5616 	ld	c, #0x64
      001731                       5617 00171$:
      001731                       5618 00170$:
      001731 21r96r00              5619 	ld	hl, #_ySpeed
      001734 71                    5620 	ld	(hl), c
                                   5621 ;src/main.c:579: xOverflow = 0;
      001735 AF                    5622 	xor	a, a
      001736 21rA1r00              5623 	ld	hl, #_xOverflow
      001739 22                    5624 	ld	(hl+), a
      00173A 77                    5625 	ld	(hl), a
                                   5626 ;src/main.c:580: yOverflow = 0;
      00173B AF                    5627 	xor	a, a
      00173C 21rA3r00              5628 	ld	hl, #_yOverflow
      00173F 22                    5629 	ld	(hl+), a
      001740 77                    5630 	ld	(hl), a
                                   5631 ;src/main.c:585: uint8_t xCollisionPoint = playerDrawX; 
      001741 21r9Br00              5632 	ld	hl, #_playerDrawX
      001744 4E                    5633 	ld	c, (hl)
                                   5634 ;src/main.c:588: xCollisionPoint = playerDrawX +8; //right edge
      001745 46                    5635 	ld	b, (hl)
                                   5636 ;src/main.c:587: if (xSpeed > 0) {
      001746 21r95r00              5637 	ld	hl, #_xSpeed
      001749 5E                    5638 	ld	e, (hl)
      00174A AF                    5639 	xor	a, a
      00174B 57                    5640 	ld	d, a
      00174C 96                    5641 	sub	a, (hl)
      00174D CB 7B                 5642 	bit	7, e
      00174F 28 07                 5643 	jr	Z, 00346$
      001751 CB 7A                 5644 	bit	7, d
      001753 20 08                 5645 	jr	NZ, 00347$
      001755 BF                    5646 	cp	a, a
      001756 18 05                 5647 	jr	00347$
      001758                       5648 00346$:
      001758 CB 7A                 5649 	bit	7, d
      00175A 28 01                 5650 	jr	Z, 00347$
      00175C 37                    5651 	scf
      00175D                       5652 00347$:
      00175D 30 04                 5653 	jr	NC, 00104$
                                   5654 ;src/main.c:588: xCollisionPoint = playerDrawX +8; //right edge
      00175F 78                    5655 	ld	a, b
      001760 C6 08                 5656 	add	a, #0x08
      001762 4F                    5657 	ld	c, a
      001763                       5658 00104$:
                                   5659 ;src/main.c:590: if (xSpeed < 0) {
      001763 FAr95r00              5660 	ld	a, (#_xSpeed)
      001766 CB 7F                 5661 	bit	7, a
      001768 28 04                 5662 	jr	Z, 00106$
                                   5663 ;src/main.c:591: xCollisionPoint = playerDrawX -8; //left edge
      00176A 78                    5664 	ld	a, b
      00176B C6 F8                 5665 	add	a, #0xf8
      00176D 4F                    5666 	ld	c, a
      00176E                       5667 00106$:
                                   5668 ;src/main.c:595: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      00176E 06 00                 5669 	ld	b, #0x00
      001770 79                    5670 	ld	a, c
      001771 21r9Dr00              5671 	ld	hl, #_bgX
      001774 86                    5672 	add	a, (hl)
      001775 23                    5673 	inc	hl
      001776 4F                    5674 	ld	c, a
      001777 78                    5675 	ld	a, b
      001778 8E                    5676 	adc	a, (hl)
      001779 47                    5677 	ld	b, a
      00177A CB 28                 5678 	sra	b
      00177C CB 19                 5679 	rr	c
      00177E CB 28                 5680 	sra	b
      001780 CB 19                 5681 	rr	c
      001782 CB 28                 5682 	sra	b
      001784 CB 19                 5683 	rr	c
      001786 11 20 00              5684 	ld	de, #0x0020
      001789 D5                    5685 	push	de
      00178A C5                    5686 	push	bc
      00178B CDr00r00              5687 	call	__modsint
      00178E E8 04                 5688 	add	sp, #4
                                   5689 ;src/main.c:599: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001790 21r9Cr00              5690 	ld	hl, #_playerDrawY
      001793 4E                    5691 	ld	c, (hl)
      001794 06 00                 5692 	ld	b, #0x00
      001796 79                    5693 	ld	a, c
      001797 21r9Fr00              5694 	ld	hl, #_bgY
      00179A 86                    5695 	add	a, (hl)
      00179B 23                    5696 	inc	hl
      00179C 4F                    5697 	ld	c, a
      00179D 78                    5698 	ld	a, b
      00179E 8E                    5699 	adc	a, (hl)
      00179F 47                    5700 	ld	b, a
      0017A0 CB 28                 5701 	sra	b
      0017A2 CB 19                 5702 	rr	c
      0017A4 CB 28                 5703 	sra	b
      0017A6 CB 19                 5704 	rr	c
      0017A8 CB 28                 5705 	sra	b
      0017AA CB 19                 5706 	rr	c
      0017AC D5                    5707 	push	de
      0017AD 21 20 00              5708 	ld	hl, #0x0020
      0017B0 E5                    5709 	push	hl
      0017B1 C5                    5710 	push	bc
      0017B2 CDr00r00              5711 	call	__modsint
      0017B5 E8 04                 5712 	add	sp, #4
      0017B7 6B                    5713 	ld	l, e
                                   5714 ;	spillPairReg hl
                                   5715 ;	spillPairReg hl
                                   5716 ;	spillPairReg hl
                                   5717 ;	spillPairReg hl
      0017B8 D1                    5718 	pop	de
                                   5719 ;src/main.c:602: uint16_t ind = 32*bgindY + bgindX;
      0017B9 26 00                 5720 	ld	h, #0x00
                                   5721 ;	spillPairReg hl
                                   5722 ;	spillPairReg hl
      0017BB 29                    5723 	add	hl, hl
      0017BC 29                    5724 	add	hl, hl
      0017BD 29                    5725 	add	hl, hl
      0017BE 29                    5726 	add	hl, hl
      0017BF 29                    5727 	add	hl, hl
      0017C0 19                    5728 	add	hl, de
      0017C1 5D                    5729 	ld	e, l
      0017C2 54                    5730 	ld	d, h
                                   5731 ;src/main.c:603: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      0017C3 0E 01                 5732 	ld	c, #0x01
                                   5733 ;src/main.c:604: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0017C5 21r87r00              5734 	ld	hl, #_background1
      0017C8 19                    5735 	add	hl, de
      0017C9 46                    5736 	ld	b, (hl)
      0017CA 1E 00                 5737 	ld	e, #0x00
      0017CC                       5738 00158$:
      0017CC FAr83r08              5739 	ld	a, (#_BLANKSIZE)
      0017CF F8 02                 5740 	ldhl	sp,	#2
      0017D1 77                    5741 	ld	(hl), a
      0017D2 7B                    5742 	ld	a, e
      0017D3 96                    5743 	sub	a, (hl)
      0017D4 30 11                 5744 	jr	NC, 00109$
                                   5745 ;src/main.c:605: if (background1[ind] == BLANK[i] ) {
      0017D6 21r84r08              5746 	ld	hl, #_BLANK
      0017D9 16 00                 5747 	ld	d, #0x00
      0017DB 19                    5748 	add	hl, de
      0017DC 56                    5749 	ld	d, (hl)
      0017DD 78                    5750 	ld	a, b
                                   5751 ;src/main.c:606: result = 0;
      0017DE 92                    5752 	sub	a,d
      0017DF 20 03                 5753 	jr	NZ, 00159$
      0017E1 4F                    5754 	ld	c,a
                                   5755 ;src/main.c:607: break;
      0017E2 18 03                 5756 	jr	00109$
      0017E4                       5757 00159$:
                                   5758 ;src/main.c:604: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0017E4 1C                    5759 	inc	e
      0017E5 18 E5                 5760 	jr	00158$
      0017E7                       5761 00109$:
                                   5762 ;src/main.c:611: if (result == 0) {
      0017E7 79                    5763 	ld	a, c
      0017E8 B7                    5764 	or	a, a
      0017E9 C2rB7r18              5765 	jp	NZ, 00114$
                                   5766 ;src/main.c:612: playerX+=xSpeed;
      0017EC FAr95r00              5767 	ld	a, (#_xSpeed)
      0017EF 4F                    5768 	ld	c, a
      0017F0 07                    5769 	rlca
      0017F1 9F                    5770 	sbc	a, a
      0017F2 47                    5771 	ld	b, a
      0017F3 21r97r00              5772 	ld	hl, #_playerX
      0017F6 6E                    5773 	ld	l, (hl)
                                   5774 ;	spillPairReg hl
                                   5775 ;	spillPairReg hl
      0017F7 FAr98r00              5776 	ld	a, (_playerX + 1)
      0017FA 67                    5777 	ld	h, a
                                   5778 ;	spillPairReg hl
                                   5779 ;	spillPairReg hl
      0017FB 09                    5780 	add	hl, bc
      0017FC 4D                    5781 	ld	c, l
      0017FD 44                    5782 	ld	b, h
      0017FE 21r97r00              5783 	ld	hl, #_playerX
      001801 79                    5784 	ld	a, c
      001802 22                    5785 	ld	(hl+), a
                                   5786 ;src/main.c:614: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001803 78                    5787 	ld	a, b
      001804 32                    5788 	ld	(hl-), a
      001805 2A                    5789 	ld	a, (hl+)
      001806 4F                    5790 	ld	c, a
      001807 46                    5791 	ld	b, (hl)
      001808 79                    5792 	ld	a, c
      001809 D6 80                 5793 	sub	a, #0x80
      00180B 78                    5794 	ld	a, b
      00180C DE 08                 5795 	sbc	a, #0x08
      00180E 30 05                 5796 	jr	NC, 00173$
      001810 01 80 08              5797 	ld	bc, #0x0880
      001813 18 0B                 5798 	jr	00174$
      001815                       5799 00173$:
      001815 3E 80                 5800 	ld	a, #0x80
      001817 B9                    5801 	cp	a, c
      001818 3E 0B                 5802 	ld	a, #0x0b
      00181A 98                    5803 	sbc	a, b
      00181B 30 03                 5804 	jr	NC, 00175$
      00181D 01 80 0B              5805 	ld	bc, #0x0b80
      001820                       5806 00175$:
      001820                       5807 00174$:
      001820 59                    5808 	ld	e,c
      001821 50                    5809 	ld	d,b
                                   5810 ;src/main.c:616: xOverflow = (playerX - limitedPlayerX);
      001822 FAr97r00              5811 	ld	a, (#_playerX)
      001825 93                    5812 	sub	a, e
      001826 EArA1r00              5813 	ld	(#_xOverflow),a
      001829 FAr98r00              5814 	ld	a, (#_playerX + 1)
      00182C 9A                    5815 	sbc	a, d
      00182D 21rA2r00              5816 	ld	hl, #_xOverflow + 1
                                   5817 ;src/main.c:617: if (xOverflow >= 0) {
      001830 32                    5818 	ld	(hl-), a
      001831 6E                    5819 	ld	l, (hl)
                                   5820 ;	spillPairReg hl
                                   5821 ;	spillPairReg hl
      001832 FArA2r00              5822 	ld	a, (_xOverflow + 1)
                                   5823 ;	spillPairReg hl
                                   5824 ;	spillPairReg hl
      001835 CB 7F                 5825 	bit	7,a
      001837 20 22                 5826 	jr	NZ, 00111$
                                   5827 ;src/main.c:618: xOverflow = xOverflow >> 5;
      001839 21rA2r00              5828 	ld	hl, #_xOverflow + 1
      00183C CB 2E                 5829 	sra	(hl)
      00183E 2B                    5830 	dec	hl
      00183F CB 1E                 5831 	rr	(hl)
      001841 23                    5832 	inc	hl
      001842 CB 2E                 5833 	sra	(hl)
      001844 2B                    5834 	dec	hl
      001845 CB 1E                 5835 	rr	(hl)
      001847 23                    5836 	inc	hl
      001848 CB 2E                 5837 	sra	(hl)
      00184A 2B                    5838 	dec	hl
      00184B CB 1E                 5839 	rr	(hl)
      00184D 23                    5840 	inc	hl
      00184E CB 2E                 5841 	sra	(hl)
      001850 2B                    5842 	dec	hl
      001851 CB 1E                 5843 	rr	(hl)
      001853 23                    5844 	inc	hl
      001854 CB 2E                 5845 	sra	(hl)
      001856 2B                    5846 	dec	hl
      001857 CB 1E                 5847 	rr	(hl)
      001859 18 25                 5848 	jr	00112$
      00185B                       5849 00111$:
                                   5850 ;src/main.c:621: xOverflow = -((-xOverflow) >> 5);
      00185B AF                    5851 	xor	a, a
      00185C 21rA1r00              5852 	ld	hl, #_xOverflow
      00185F 96                    5853 	sub	a, (hl)
      001860 23                    5854 	inc	hl
      001861 5F                    5855 	ld	e, a
      001862 9F                    5856 	sbc	a, a
      001863 96                    5857 	sub	a, (hl)
      001864 2B                    5858 	dec	hl
      001865 57                    5859 	ld	d, a
      001866 CB 2A                 5860 	sra	d
      001868 CB 1B                 5861 	rr	e
      00186A CB 2A                 5862 	sra	d
      00186C CB 1B                 5863 	rr	e
      00186E CB 2A                 5864 	sra	d
      001870 CB 1B                 5865 	rr	e
      001872 CB 2A                 5866 	sra	d
      001874 CB 1B                 5867 	rr	e
      001876 CB 2A                 5868 	sra	d
      001878 CB 1B                 5869 	rr	e
      00187A AF                    5870 	xor	a, a
      00187B 93                    5871 	sub	a, e
      00187C 22                    5872 	ld	(hl+), a
      00187D 9F                    5873 	sbc	a, a
      00187E 92                    5874 	sub	a, d
      00187F 77                    5875 	ld	(hl), a
      001880                       5876 00112$:
                                   5877 ;src/main.c:623: bgX += xOverflow;
      001880 FAr9Dr00              5878 	ld	a, (#_bgX)
      001883 21rA1r00              5879 	ld	hl, #_xOverflow
      001886 86                    5880 	add	a, (hl)
      001887 21r9Dr00              5881 	ld	hl, #_bgX
      00188A 22                    5882 	ld	(hl+), a
      00188B 7E                    5883 	ld	a, (hl)
      00188C 21rA2r00              5884 	ld	hl, #_xOverflow + 1
      00188F 8E                    5885 	adc	a, (hl)
      001890 EAr9Er00              5886 	ld	(#_bgX + 1),a
                                   5887 ;src/main.c:624: playerX = limitedPlayerX;
      001893 21r97r00              5888 	ld	hl, #_playerX
      001896 79                    5889 	ld	a, c
      001897 22                    5890 	ld	(hl+), a
                                   5891 ;src/main.c:625: playerDrawX=playerX >> 5;
      001898 78                    5892 	ld	a, b
      001899 32                    5893 	ld	(hl-), a
      00189A 2A                    5894 	ld	a, (hl+)
      00189B 4F                    5895 	ld	c, a
      00189C 46                    5896 	ld	b, (hl)
      00189D CB 38                 5897 	srl	b
      00189F CB 19                 5898 	rr	c
      0018A1 CB 38                 5899 	srl	b
      0018A3 CB 19                 5900 	rr	c
      0018A5 CB 38                 5901 	srl	b
      0018A7 CB 19                 5902 	rr	c
      0018A9 CB 38                 5903 	srl	b
      0018AB CB 19                 5904 	rr	c
      0018AD CB 38                 5905 	srl	b
      0018AF CB 19                 5906 	rr	c
      0018B1 21r9Br00              5907 	ld	hl, #_playerDrawX
      0018B4 71                    5908 	ld	(hl), c
      0018B5 18 05                 5909 	jr	00115$
      0018B7                       5910 00114$:
                                   5911 ;src/main.c:633: xSpeed = 0;
      0018B7 21r95r00              5912 	ld	hl, #_xSpeed
      0018BA 36 00                 5913 	ld	(hl), #0x00
      0018BC                       5914 00115$:
                                   5915 ;src/main.c:641: uint8_t yCollisionPoint = playerDrawY; 
      0018BC FAr9Cr00              5916 	ld	a, (#_playerDrawY)
      0018BF F8 07                 5917 	ldhl	sp,	#7
      0018C1 77                    5918 	ld	(hl), a
                                   5919 ;src/main.c:644: yCollisionPoint = playerDrawY +8; //bottom edge
      0018C2 21r9Cr00              5920 	ld	hl, #_playerDrawY
      0018C5 4E                    5921 	ld	c, (hl)
                                   5922 ;src/main.c:643: if (ySpeed > 0) {
      0018C6 21r96r00              5923 	ld	hl, #_ySpeed
      0018C9 5E                    5924 	ld	e, (hl)
      0018CA AF                    5925 	xor	a, a
      0018CB 57                    5926 	ld	d, a
      0018CC 96                    5927 	sub	a, (hl)
      0018CD CB 7B                 5928 	bit	7, e
      0018CF 28 07                 5929 	jr	Z, 00350$
      0018D1 CB 7A                 5930 	bit	7, d
      0018D3 20 08                 5931 	jr	NZ, 00351$
      0018D5 BF                    5932 	cp	a, a
      0018D6 18 05                 5933 	jr	00351$
      0018D8                       5934 00350$:
      0018D8 CB 7A                 5935 	bit	7, d
      0018DA 28 01                 5936 	jr	Z, 00351$
      0018DC 37                    5937 	scf
      0018DD                       5938 00351$:
      0018DD 30 06                 5939 	jr	NC, 00117$
                                   5940 ;src/main.c:644: yCollisionPoint = playerDrawY +8; //bottom edge
      0018DF 79                    5941 	ld	a, c
      0018E0 C6 08                 5942 	add	a, #0x08
      0018E2 F8 07                 5943 	ldhl	sp,	#7
      0018E4 77                    5944 	ld	(hl), a
      0018E5                       5945 00117$:
                                   5946 ;src/main.c:646: if (ySpeed < 0) {
      0018E5 FAr96r00              5947 	ld	a, (#_ySpeed)
      0018E8 CB 7F                 5948 	bit	7, a
      0018EA 28 06                 5949 	jr	Z, 00119$
                                   5950 ;src/main.c:647: yCollisionPoint = playerDrawY -8; //top edge, 
      0018EC 79                    5951 	ld	a, c
      0018ED C6 F8                 5952 	add	a, #0xf8
      0018EF F8 07                 5953 	ldhl	sp,	#7
      0018F1 77                    5954 	ld	(hl), a
      0018F2                       5955 00119$:
                                   5956 ;src/main.c:651: bgindX = ((playerDrawX + bgX) >> 3)%32;
      0018F2 FAr9Br00              5957 	ld	a, (#_playerDrawX)
      0018F5 0E 00                 5958 	ld	c, #0x00
      0018F7 F8 03                 5959 	ldhl	sp,	#3
      0018F9 22                    5960 	ld	(hl+), a
      0018FA 79                    5961 	ld	a, c
      0018FB 32                    5962 	ld	(hl-), a
      0018FC 2A                    5963 	ld	a, (hl+)
      0018FD 5F                    5964 	ld	e, a
      0018FE 56                    5965 	ld	d, (hl)
      0018FF 21r9Dr00              5966 	ld	hl, #_bgX
      001902 2A                    5967 	ld	a,	(hl+)
      001903 66                    5968 	ld	h, (hl)
      001904 6F                    5969 	ld	l, a
      001905 19                    5970 	add	hl, de
      001906 E5                    5971 	push	hl
      001907 7D                    5972 	ld	a, l
      001908 F8 07                 5973 	ldhl	sp,	#7
      00190A 77                    5974 	ld	(hl), a
      00190B E1                    5975 	pop	hl
      00190C 7C                    5976 	ld	a, h
      00190D F8 06                 5977 	ldhl	sp,	#6
      00190F 77                    5978 	ld	(hl), a
      001910 CB 2E                 5979 	sra	(hl)
      001912 2B                    5980 	dec	hl
      001913 CB 1E                 5981 	rr	(hl)
      001915 23                    5982 	inc	hl
      001916 CB 2E                 5983 	sra	(hl)
      001918 2B                    5984 	dec	hl
      001919 CB 1E                 5985 	rr	(hl)
      00191B 23                    5986 	inc	hl
      00191C CB 2E                 5987 	sra	(hl)
      00191E 2B                    5988 	dec	hl
      00191F CB 1E                 5989 	rr	(hl)
      001921 11 20 00              5990 	ld	de, #0x0020
      001924 D5                    5991 	push	de
      001925 2A                    5992 	ld	a, (hl+)
      001926 5F                    5993 	ld	e, a
      001927 56                    5994 	ld	d, (hl)
      001928 D5                    5995 	push	de
      001929 CDr00r00              5996 	call	__modsint
      00192C E8 04                 5997 	add	sp, #4
      00192E F8 05                 5998 	ldhl	sp,	#5
      001930 7B                    5999 	ld	a, e
      001931 22                    6000 	ld	(hl+), a
      001932 72                    6001 	ld	(hl), d
      001933 F8 05                 6002 	ldhl	sp,	#5
      001935 7E                    6003 	ld	a, (hl)
      001936 F8 00                 6004 	ldhl	sp,	#0
      001938 77                    6005 	ld	(hl), a
      001939 F8 06                 6006 	ldhl	sp,	#6
      00193B 7E                    6007 	ld	a, (hl)
      00193C F8 01                 6008 	ldhl	sp,	#1
      00193E 77                    6009 	ld	(hl), a
                                   6010 ;src/main.c:654: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      00193F F8 07                 6011 	ldhl	sp,	#7
      001941 3A                    6012 	ld	a, (hl-)
      001942 22                    6013 	ld	(hl+), a
      001943 AF                    6014 	xor	a, a
      001944 32                    6015 	ld	(hl-), a
      001945 3A                    6016 	ld	a, (hl-)
      001946 2B                    6017 	dec	hl
      001947 77                    6018 	ld	(hl), a
      001948 F8 07                 6019 	ldhl	sp,	#7
      00194A 3A                    6020 	ld	a, (hl-)
      00194B 2B                    6021 	dec	hl
      00194C 32                    6022 	ld	(hl-), a
      00194D 2A                    6023 	ld	a, (hl+)
      00194E 5F                    6024 	ld	e, a
      00194F 56                    6025 	ld	d, (hl)
      001950 21r9Fr00              6026 	ld	hl, #_bgY
      001953 2A                    6027 	ld	a,	(hl+)
      001954 66                    6028 	ld	h, (hl)
      001955 6F                    6029 	ld	l, a
      001956 19                    6030 	add	hl, de
      001957 E5                    6031 	push	hl
      001958 7D                    6032 	ld	a, l
      001959 F8 08                 6033 	ldhl	sp,	#8
      00195B 77                    6034 	ld	(hl), a
      00195C E1                    6035 	pop	hl
      00195D 7C                    6036 	ld	a, h
      00195E F8 07                 6037 	ldhl	sp,	#7
      001960 77                    6038 	ld	(hl), a
      001961 CB 2E                 6039 	sra	(hl)
      001963 2B                    6040 	dec	hl
      001964 CB 1E                 6041 	rr	(hl)
      001966 23                    6042 	inc	hl
      001967 CB 2E                 6043 	sra	(hl)
      001969 2B                    6044 	dec	hl
      00196A CB 1E                 6045 	rr	(hl)
      00196C 23                    6046 	inc	hl
      00196D CB 2E                 6047 	sra	(hl)
      00196F 2B                    6048 	dec	hl
      001970 CB 1E                 6049 	rr	(hl)
      001972 11 20 00              6050 	ld	de, #0x0020
      001975 D5                    6051 	push	de
      001976 2A                    6052 	ld	a, (hl+)
      001977 5F                    6053 	ld	e, a
      001978 56                    6054 	ld	d, (hl)
      001979 D5                    6055 	push	de
      00197A CDr00r00              6056 	call	__modsint
      00197D E8 04                 6057 	add	sp, #4
      00197F F8 06                 6058 	ldhl	sp,	#6
      001981 7B                    6059 	ld	a, e
      001982 22                    6060 	ld	(hl+), a
      001983 72                    6061 	ld	(hl), d
      001984 F8 06                 6062 	ldhl	sp,	#6
      001986 2A                    6063 	ld	a, (hl+)
      001987 77                    6064 	ld	(hl), a
                                   6065 ;src/main.c:657: ind = 32*bgindY + bgindX;
      001988 3A                    6066 	ld	a, (hl-)
      001989 22                    6067 	ld	(hl+), a
      00198A 36 00                 6068 	ld	(hl), #0x00
      00198C 3E 05                 6069 	ld	a, #0x05
      00198E                       6070 00352$:
      00198E F8 06                 6071 	ldhl	sp,	#6
      001990 CB 26                 6072 	sla	(hl)
      001992 23                    6073 	inc	hl
      001993 CB 16                 6074 	rl	(hl)
      001995 3D                    6075 	dec	a
      001996 20 F6                 6076 	jr	NZ, 00352$
      001998 2B                    6077 	dec	hl
      001999 3A                    6078 	ld	a, (hl-)
      00199A 2B                    6079 	dec	hl
      00199B 77                    6080 	ld	(hl), a
      00199C F8 07                 6081 	ldhl	sp,	#7
      00199E 3A                    6082 	ld	a, (hl-)
      00199F 2B                    6083 	dec	hl
      0019A0 77                    6084 	ld	(hl), a
      0019A1 D1                    6085 	pop	de
      0019A2 D5                    6086 	push	de
      0019A3 3A                    6087 	ld	a, (hl-)
      0019A4 6E                    6088 	ld	l, (hl)
      0019A5 67                    6089 	ld	h, a
      0019A6 19                    6090 	add	hl, de
      0019A7 E5                    6091 	push	hl
      0019A8 7D                    6092 	ld	a, l
      0019A9 F8 08                 6093 	ldhl	sp,	#8
      0019AB 77                    6094 	ld	(hl), a
      0019AC E1                    6095 	pop	hl
      0019AD 7C                    6096 	ld	a, h
      0019AE F8 07                 6097 	ldhl	sp,	#7
      0019B0 77                    6098 	ld	(hl), a
                                   6099 ;src/main.c:658: result = 1;
      0019B1 F8 03                 6100 	ldhl	sp,	#3
      0019B3 36 01                 6101 	ld	(hl), #0x01
                                   6102 ;src/main.c:659: for (uint8_t j=0; j<BLANKSIZE; j++) {
      0019B5 F8 06                 6103 	ldhl	sp,#6
      0019B7 2A                    6104 	ld	a, (hl+)
      0019B8 5F                    6105 	ld	e, a
      0019B9 56                    6106 	ld	d, (hl)
      0019BA 21r87r00              6107 	ld	hl, #_background1
      0019BD 19                    6108 	add	hl, de
      0019BE 4D                    6109 	ld	c, l
      0019BF 44                    6110 	ld	b, h
      0019C0 0A                    6111 	ld	a, (bc)
      0019C1 F8 04                 6112 	ldhl	sp,	#4
      0019C3 77                    6113 	ld	(hl), a
      0019C4 F8 07                 6114 	ldhl	sp,	#7
      0019C6 36 00                 6115 	ld	(hl), #0x00
      0019C8                       6116 00161$:
      0019C8 F8 07                 6117 	ldhl	sp,	#7
      0019CA 7E                    6118 	ld	a, (hl)
      0019CB F8 02                 6119 	ldhl	sp,	#2
      0019CD 96                    6120 	sub	a, (hl)
      0019CE 30 29                 6121 	jr	NC, 00122$
                                   6122 ;src/main.c:660: if (background1[ind] == BLANK[j] ) {
      0019D0 11r84r08              6123 	ld	de, #_BLANK
      0019D3 F8 07                 6124 	ldhl	sp,	#7
      0019D5 6E                    6125 	ld	l, (hl)
      0019D6 26 00                 6126 	ld	h, #0x00
      0019D8 19                    6127 	add	hl, de
      0019D9 E5                    6128 	push	hl
      0019DA 7D                    6129 	ld	a, l
      0019DB F8 07                 6130 	ldhl	sp,	#7
      0019DD 77                    6131 	ld	(hl), a
      0019DE E1                    6132 	pop	hl
      0019DF 7C                    6133 	ld	a, h
      0019E0 F8 06                 6134 	ldhl	sp,	#6
      0019E2 32                    6135 	ld	(hl-), a
      0019E3 2A                    6136 	ld	a, (hl+)
      0019E4 5F                    6137 	ld	e, a
      0019E5 3A                    6138 	ld	a, (hl-)
      0019E6 2B                    6139 	dec	hl
      0019E7 57                    6140 	ld	d, a
      0019E8 1A                    6141 	ld	a, (de)
      0019E9 4F                    6142 	ld	c, a
      0019EA 7E                    6143 	ld	a, (hl)
      0019EB 91                    6144 	sub	a, c
      0019EC 20 06                 6145 	jr	NZ, 00162$
                                   6146 ;src/main.c:661: result = 0;
      0019EE F8 03                 6147 	ldhl	sp,	#3
      0019F0 36 00                 6148 	ld	(hl), #0x00
                                   6149 ;src/main.c:662: break;
      0019F2 18 05                 6150 	jr	00122$
      0019F4                       6151 00162$:
                                   6152 ;src/main.c:659: for (uint8_t j=0; j<BLANKSIZE; j++) {
      0019F4 F8 07                 6153 	ldhl	sp,	#7
      0019F6 34                    6154 	inc	(hl)
      0019F7 18 CF                 6155 	jr	00161$
      0019F9                       6156 00122$:
                                   6157 ;src/main.c:666: if (result == 0) {
      0019F9 F8 03                 6158 	ldhl	sp,	#3
      0019FB 7E                    6159 	ld	a, (hl)
      0019FC B7                    6160 	or	a, a
      0019FD C2rC7r1A              6161 	jp	NZ, 00127$
                                   6162 ;src/main.c:667: playerY += ySpeed;
      001A00 FAr96r00              6163 	ld	a, (#_ySpeed)
      001A03 4F                    6164 	ld	c, a
      001A04 07                    6165 	rlca
      001A05 9F                    6166 	sbc	a, a
      001A06 21r99r00              6167 	ld	hl, #_playerY
      001A09 5E                    6168 	ld	e, (hl)
      001A0A 23                    6169 	inc	hl
      001A0B 56                    6170 	ld	d, (hl)
      001A0C 2B                    6171 	dec	hl
      001A0D 47                    6172 	ld	b, a
      001A0E 79                    6173 	ld	a, c
      001A0F 83                    6174 	add	a, e
      001A10 4F                    6175 	ld	c, a
      001A11 78                    6176 	ld	a, b
      001A12 8A                    6177 	adc	a, d
      001A13 47                    6178 	ld	b, a
      001A14 79                    6179 	ld	a, c
      001A15 22                    6180 	ld	(hl+), a
                                   6181 ;src/main.c:669: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001A16 78                    6182 	ld	a, b
      001A17 32                    6183 	ld	(hl-), a
      001A18 2A                    6184 	ld	a, (hl+)
      001A19 5F                    6185 	ld	e, a
      001A1A 56                    6186 	ld	d, (hl)
      001A1B 7A                    6187 	ld	a, d
      001A1C D6 06                 6188 	sub	a, #0x06
      001A1E 30 05                 6189 	jr	NC, 00177$
      001A20 11 00 06              6190 	ld	de, #0x0600
      001A23 18 0B                 6191 	jr	00178$
      001A25                       6192 00177$:
      001A25 3E C0                 6193 	ld	a, #0xc0
      001A27 BB                    6194 	cp	a, e
      001A28 3E 09                 6195 	ld	a, #0x09
      001A2A 9A                    6196 	sbc	a, d
      001A2B 30 03                 6197 	jr	NC, 00179$
      001A2D 11 C0 09              6198 	ld	de, #0x09c0
      001A30                       6199 00179$:
      001A30                       6200 00178$:
      001A30 4B                    6201 	ld	c, e
      001A31 42                    6202 	ld	b, d
                                   6203 ;src/main.c:671: yOverflow = (playerY - limitedPlayerY);
      001A32 FAr99r00              6204 	ld	a, (#_playerY)
      001A35 93                    6205 	sub	a, e
      001A36 EArA3r00              6206 	ld	(#_yOverflow),a
      001A39 FAr9Ar00              6207 	ld	a, (#_playerY + 1)
      001A3C 9A                    6208 	sbc	a, d
      001A3D 21rA4r00              6209 	ld	hl, #_yOverflow + 1
                                   6210 ;src/main.c:672: if (yOverflow >= 0) {
      001A40 32                    6211 	ld	(hl-), a
      001A41 6E                    6212 	ld	l, (hl)
                                   6213 ;	spillPairReg hl
                                   6214 ;	spillPairReg hl
      001A42 FArA4r00              6215 	ld	a, (_yOverflow + 1)
                                   6216 ;	spillPairReg hl
                                   6217 ;	spillPairReg hl
      001A45 CB 7F                 6218 	bit	7,a
      001A47 20 22                 6219 	jr	NZ, 00124$
                                   6220 ;src/main.c:673: yOverflow = yOverflow >> 5;
      001A49 21rA4r00              6221 	ld	hl, #_yOverflow + 1
      001A4C CB 2E                 6222 	sra	(hl)
      001A4E 2B                    6223 	dec	hl
      001A4F CB 1E                 6224 	rr	(hl)
      001A51 23                    6225 	inc	hl
      001A52 CB 2E                 6226 	sra	(hl)
      001A54 2B                    6227 	dec	hl
      001A55 CB 1E                 6228 	rr	(hl)
      001A57 23                    6229 	inc	hl
      001A58 CB 2E                 6230 	sra	(hl)
      001A5A 2B                    6231 	dec	hl
      001A5B CB 1E                 6232 	rr	(hl)
      001A5D 23                    6233 	inc	hl
      001A5E CB 2E                 6234 	sra	(hl)
      001A60 2B                    6235 	dec	hl
      001A61 CB 1E                 6236 	rr	(hl)
      001A63 23                    6237 	inc	hl
      001A64 CB 2E                 6238 	sra	(hl)
      001A66 2B                    6239 	dec	hl
      001A67 CB 1E                 6240 	rr	(hl)
      001A69 18 25                 6241 	jr	00125$
      001A6B                       6242 00124$:
                                   6243 ;src/main.c:676: yOverflow = -((-yOverflow) >> 5);
      001A6B AF                    6244 	xor	a, a
      001A6C 21rA3r00              6245 	ld	hl, #_yOverflow
      001A6F 96                    6246 	sub	a, (hl)
      001A70 23                    6247 	inc	hl
      001A71 5F                    6248 	ld	e, a
      001A72 9F                    6249 	sbc	a, a
      001A73 96                    6250 	sub	a, (hl)
      001A74 2B                    6251 	dec	hl
      001A75 57                    6252 	ld	d, a
      001A76 CB 2A                 6253 	sra	d
      001A78 CB 1B                 6254 	rr	e
      001A7A CB 2A                 6255 	sra	d
      001A7C CB 1B                 6256 	rr	e
      001A7E CB 2A                 6257 	sra	d
      001A80 CB 1B                 6258 	rr	e
      001A82 CB 2A                 6259 	sra	d
      001A84 CB 1B                 6260 	rr	e
      001A86 CB 2A                 6261 	sra	d
      001A88 CB 1B                 6262 	rr	e
      001A8A AF                    6263 	xor	a, a
      001A8B 93                    6264 	sub	a, e
      001A8C 22                    6265 	ld	(hl+), a
      001A8D 9F                    6266 	sbc	a, a
      001A8E 92                    6267 	sub	a, d
      001A8F 77                    6268 	ld	(hl), a
      001A90                       6269 00125$:
                                   6270 ;src/main.c:678: bgY += yOverflow;
      001A90 FAr9Fr00              6271 	ld	a, (#_bgY)
      001A93 21rA3r00              6272 	ld	hl, #_yOverflow
      001A96 86                    6273 	add	a, (hl)
      001A97 21r9Fr00              6274 	ld	hl, #_bgY
      001A9A 22                    6275 	ld	(hl+), a
      001A9B 7E                    6276 	ld	a, (hl)
      001A9C 21rA4r00              6277 	ld	hl, #_yOverflow + 1
      001A9F 8E                    6278 	adc	a, (hl)
      001AA0 EArA0r00              6279 	ld	(#_bgY + 1),a
                                   6280 ;src/main.c:679: playerY = limitedPlayerY;
      001AA3 21r99r00              6281 	ld	hl, #_playerY
      001AA6 79                    6282 	ld	a, c
      001AA7 22                    6283 	ld	(hl+), a
                                   6284 ;src/main.c:680: playerDrawY=playerY >> 5;
      001AA8 78                    6285 	ld	a, b
      001AA9 32                    6286 	ld	(hl-), a
      001AAA 2A                    6287 	ld	a, (hl+)
      001AAB 4F                    6288 	ld	c, a
      001AAC 46                    6289 	ld	b, (hl)
      001AAD CB 38                 6290 	srl	b
      001AAF CB 19                 6291 	rr	c
      001AB1 CB 38                 6292 	srl	b
      001AB3 CB 19                 6293 	rr	c
      001AB5 CB 38                 6294 	srl	b
      001AB7 CB 19                 6295 	rr	c
      001AB9 CB 38                 6296 	srl	b
      001ABB CB 19                 6297 	rr	c
      001ABD CB 38                 6298 	srl	b
      001ABF CB 19                 6299 	rr	c
      001AC1 21r9Cr00              6300 	ld	hl, #_playerDrawY
      001AC4 71                    6301 	ld	(hl), c
      001AC5 18 05                 6302 	jr	00128$
      001AC7                       6303 00127$:
                                   6304 ;src/main.c:685: ySpeed = 0;
      001AC7 21r96r00              6305 	ld	hl, #_ySpeed
      001ACA 36 00                 6306 	ld	(hl), #0x00
      001ACC                       6307 00128$:
                                   6308 ;src/main.c:585: uint8_t xCollisionPoint = playerDrawX; 
      001ACC FAr9Br00              6309 	ld	a, (#_playerDrawX)
      001ACF F8 07                 6310 	ldhl	sp,	#7
      001AD1 77                    6311 	ld	(hl), a
                                   6312 ;src/main.c:644: yCollisionPoint = playerDrawY +8; //bottom edge
      001AD2 FAr9Cr00              6313 	ld	a, (#_playerDrawY)
      001AD5 C6 08                 6314 	add	a, #0x08
      001AD7 F8 06                 6315 	ldhl	sp,	#6
      001AD9 77                    6316 	ld	(hl), a
                                   6317 ;src/main.c:688: if (xDir >= 0) {
      001ADA FAr93r00              6318 	ld	a, (#_xDir)
      001ADD CB 7F                 6319 	bit	7, a
      001ADF 20 2A                 6320 	jr	NZ, 00130$
                                   6321 ;src/main.c:689: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   6322 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6323 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001AE1 11r00r00              6324 	ld	de, #_shadow_OAM
      001AE4 F8 06                 6325 	ldhl	sp,	#6
      001AE6 2A                    6326 	ld	a, (hl+)
      001AE7 12                    6327 	ld	(de), a
      001AE8 11r01r00              6328 	ld	de, #(_shadow_OAM + 1)
      001AEB 7E                    6329 	ld	a, (hl)
      001AEC 12                    6330 	ld	(de), a
                                   6331 ;src/main.c:691: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001AED FAr9Cr00              6332 	ld	a, (#_playerDrawY)
      001AF0 F8 07                 6333 	ldhl	sp,	#7
      001AF2 77                    6334 	ld	(hl), a
      001AF3 3A                    6335 	ld	a, (hl-)
      001AF4 C6 08                 6336 	add	a, #0x08
      001AF6 77                    6337 	ld	(hl), a
      001AF7 FAr9Br00              6338 	ld	a, (#_playerDrawX)
      001AFA C6 08                 6339 	add	a, #0x08
      001AFC F8 07                 6340 	ldhl	sp,	#7
                                   6341 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6342 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001AFE 32                    6343 	ld	(hl-), a
      001AFF 11r04r00              6344 	ld	de, #(_shadow_OAM + 4)
      001B02 2A                    6345 	ld	a, (hl+)
      001B03 12                    6346 	ld	(de), a
      001B04 11r05r00              6347 	ld	de, #(_shadow_OAM + 5)
      001B07 7E                    6348 	ld	a, (hl)
      001B08 12                    6349 	ld	(de), a
                                   6350 ;src/main.c:691: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001B09 18 28                 6351 	jr	00131$
      001B0B                       6352 00130$:
                                   6353 ;src/main.c:694: move_sprite(1, playerDrawX , playerDrawY +8);
                                   6354 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001B0B 01r04r00              6355 	ld	bc, #(_shadow_OAM + 4)
                                   6356 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B0E F8 06                 6357 	ldhl	sp,	#6
      001B10 2A                    6358 	ld	a, (hl+)
      001B11 02                    6359 	ld	(bc), a
      001B12 03                    6360 	inc	bc
      001B13 7E                    6361 	ld	a, (hl)
      001B14 02                    6362 	ld	(bc), a
                                   6363 ;src/main.c:696: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001B15 FAr9Cr00              6364 	ld	a, (#_playerDrawY)
      001B18 F8 07                 6365 	ldhl	sp,	#7
      001B1A 77                    6366 	ld	(hl), a
      001B1B 3A                    6367 	ld	a, (hl-)
      001B1C C6 08                 6368 	add	a, #0x08
      001B1E 77                    6369 	ld	(hl), a
      001B1F FAr9Br00              6370 	ld	a, (#_playerDrawX)
      001B22 F8 07                 6371 	ldhl	sp,	#7
      001B24 77                    6372 	ld	(hl), a
      001B25 7E                    6373 	ld	a, (hl)
      001B26 C6 08                 6374 	add	a, #0x08
                                   6375 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6376 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B28 32                    6377 	ld	(hl-), a
      001B29 11r00r00              6378 	ld	de, #_shadow_OAM
      001B2C 2A                    6379 	ld	a, (hl+)
      001B2D 12                    6380 	ld	(de), a
      001B2E 11r01r00              6381 	ld	de, #(_shadow_OAM + 1)
      001B31 7E                    6382 	ld	a, (hl)
      001B32 12                    6383 	ld	(de), a
                                   6384 ;src/main.c:696: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001B33                       6385 00131$:
                                   6386 ;src/main.c:701: if (bgX >= 256) {
      001B33 21r9Dr00              6387 	ld	hl, #_bgX
      001B36 2A                    6388 	ld	a, (hl+)
      001B37 4F                    6389 	ld	c, a
      001B38 46                    6390 	ld	b, (hl)
      001B39 78                    6391 	ld	a, b
      001B3A EE 80                 6392 	xor	a, #0x80
      001B3C D6 81                 6393 	sub	a, #0x81
      001B3E 38 0F                 6394 	jr	C, 00133$
                                   6395 ;src/main.c:702: bgX = bgX % 256;
      001B40 AF                    6396 	xor	a, a
      001B41 3C                    6397 	inc	a
      001B42 F5                    6398 	push	af
      001B43 C5                    6399 	push	bc
      001B44 CDr00r00              6400 	call	__modsint
      001B47 E8 04                 6401 	add	sp, #4
      001B49 21r9Dr00              6402 	ld	hl, #_bgX
      001B4C 7B                    6403 	ld	a, e
      001B4D 22                    6404 	ld	(hl+), a
      001B4E 72                    6405 	ld	(hl), d
      001B4F                       6406 00133$:
                                   6407 ;src/main.c:704: if (bgX < 0) {
      001B4F 21r9Dr00              6408 	ld	hl, #_bgX
      001B52 2A                    6409 	ld	a, (hl+)
      001B53 4F                    6410 	ld	c, a
      001B54 46                    6411 	ld	b, (hl)
      001B55 CB 78                 6412 	bit	7, b
      001B57 28 15                 6413 	jr	Z, 00135$
                                   6414 ;src/main.c:705: bgX = 255 - (bgX % 256);
      001B59 AF                    6415 	xor	a, a
      001B5A 3C                    6416 	inc	a
      001B5B F5                    6417 	push	af
      001B5C C5                    6418 	push	bc
      001B5D CDr00r00              6419 	call	__modsint
      001B60 E8 04                 6420 	add	sp, #4
      001B62 3E FF                 6421 	ld	a, #0xff
      001B64 93                    6422 	sub	a, e
      001B65 4F                    6423 	ld	c, a
      001B66 9F                    6424 	sbc	a, a
      001B67 92                    6425 	sub	a, d
      001B68 21r9Dr00              6426 	ld	hl, #_bgX
      001B6B 71                    6427 	ld	(hl), c
      001B6C 23                    6428 	inc	hl
      001B6D 77                    6429 	ld	(hl), a
      001B6E                       6430 00135$:
                                   6431 ;src/main.c:707: if (bgY >= 256) {
      001B6E 21r9Fr00              6432 	ld	hl, #_bgY
      001B71 2A                    6433 	ld	a, (hl+)
      001B72 4F                    6434 	ld	c, a
      001B73 46                    6435 	ld	b, (hl)
      001B74 78                    6436 	ld	a, b
      001B75 EE 80                 6437 	xor	a, #0x80
      001B77 D6 81                 6438 	sub	a, #0x81
      001B79 38 0F                 6439 	jr	C, 00137$
                                   6440 ;src/main.c:708: bgY = bgY % 256;
      001B7B AF                    6441 	xor	a, a
      001B7C 3C                    6442 	inc	a
      001B7D F5                    6443 	push	af
      001B7E C5                    6444 	push	bc
      001B7F CDr00r00              6445 	call	__modsint
      001B82 E8 04                 6446 	add	sp, #4
      001B84 21r9Fr00              6447 	ld	hl, #_bgY
      001B87 7B                    6448 	ld	a, e
      001B88 22                    6449 	ld	(hl+), a
      001B89 72                    6450 	ld	(hl), d
      001B8A                       6451 00137$:
                                   6452 ;src/main.c:710: if (bgY < 0) {
      001B8A 21r9Fr00              6453 	ld	hl, #_bgY
      001B8D 2A                    6454 	ld	a, (hl+)
      001B8E 4F                    6455 	ld	c, a
      001B8F 46                    6456 	ld	b, (hl)
      001B90 CB 78                 6457 	bit	7, b
      001B92 28 15                 6458 	jr	Z, 00139$
                                   6459 ;src/main.c:711: bgY = 255 - (bgY % 256);
      001B94 AF                    6460 	xor	a, a
      001B95 3C                    6461 	inc	a
      001B96 F5                    6462 	push	af
      001B97 C5                    6463 	push	bc
      001B98 CDr00r00              6464 	call	__modsint
      001B9B E8 04                 6465 	add	sp, #4
      001B9D 3E FF                 6466 	ld	a, #0xff
      001B9F 93                    6467 	sub	a, e
      001BA0 4F                    6468 	ld	c, a
      001BA1 9F                    6469 	sbc	a, a
      001BA2 92                    6470 	sub	a, d
      001BA3 21r9Fr00              6471 	ld	hl, #_bgY
      001BA6 71                    6472 	ld	(hl), c
      001BA7 23                    6473 	inc	hl
      001BA8 77                    6474 	ld	(hl), a
      001BA9                       6475 00139$:
                                   6476 ;src/main.c:714: move_bkg(bgX, bgY);
      001BA9 21r9Fr00              6477 	ld	hl, #_bgY
      001BAC 4E                    6478 	ld	c, (hl)
      001BAD FAr9Dr00              6479 	ld	a, (#_bgX)
      001BB0 E0r00                 6480 	ldh	(_SCX_REG + 0), a
                                   6481 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001BB2 79                    6482 	ld	a, c
      001BB3 E0r00                 6483 	ldh	(_SCY_REG + 0), a
                                   6484 ;src/main.c:717: if (ySpeed > 0) ySpeed--;
      001BB5 21r96r00              6485 	ld	hl, #_ySpeed
      001BB8 5E                    6486 	ld	e, (hl)
      001BB9 AF                    6487 	xor	a, a
      001BBA 57                    6488 	ld	d, a
      001BBB 96                    6489 	sub	a, (hl)
      001BBC CB 7B                 6490 	bit	7, e
      001BBE 28 07                 6491 	jr	Z, 00355$
      001BC0 CB 7A                 6492 	bit	7, d
      001BC2 20 08                 6493 	jr	NZ, 00356$
      001BC4 BF                    6494 	cp	a, a
      001BC5 18 05                 6495 	jr	00356$
      001BC7                       6496 00355$:
      001BC7 CB 7A                 6497 	bit	7, d
      001BC9 28 01                 6498 	jr	Z, 00356$
      001BCB 37                    6499 	scf
      001BCC                       6500 00356$:
      001BCC 30 04                 6501 	jr	NC, 00141$
      001BCE 21r96r00              6502 	ld	hl, #_ySpeed
      001BD1 35                    6503 	dec	(hl)
      001BD2                       6504 00141$:
                                   6505 ;src/main.c:718: if (ySpeed < 0) ySpeed++;
      001BD2 21r96r00              6506 	ld	hl, #_ySpeed
      001BD5 CB 7E                 6507 	bit	7, (hl)
      001BD7 28 01                 6508 	jr	Z, 00143$
      001BD9 34                    6509 	inc	(hl)
      001BDA                       6510 00143$:
                                   6511 ;src/main.c:719: if (xSpeed > 0) xSpeed--;
      001BDA 21r95r00              6512 	ld	hl, #_xSpeed
      001BDD 5E                    6513 	ld	e, (hl)
      001BDE AF                    6514 	xor	a, a
      001BDF 57                    6515 	ld	d, a
      001BE0 96                    6516 	sub	a, (hl)
      001BE1 CB 7B                 6517 	bit	7, e
      001BE3 28 07                 6518 	jr	Z, 00357$
      001BE5 CB 7A                 6519 	bit	7, d
      001BE7 20 08                 6520 	jr	NZ, 00358$
      001BE9 BF                    6521 	cp	a, a
      001BEA 18 05                 6522 	jr	00358$
      001BEC                       6523 00357$:
      001BEC CB 7A                 6524 	bit	7, d
      001BEE 28 01                 6525 	jr	Z, 00358$
      001BF0 37                    6526 	scf
      001BF1                       6527 00358$:
      001BF1 30 04                 6528 	jr	NC, 00145$
      001BF3 21r95r00              6529 	ld	hl, #_xSpeed
      001BF6 35                    6530 	dec	(hl)
      001BF7                       6531 00145$:
                                   6532 ;src/main.c:720: if (xSpeed < 0) xSpeed++;
      001BF7 21r95r00              6533 	ld	hl, #_xSpeed
      001BFA CB 7E                 6534 	bit	7, (hl)
      001BFC 28 01                 6535 	jr	Z, 00163$
      001BFE 34                    6536 	inc	(hl)
      001BFF                       6537 00163$:
                                   6538 ;src/main.c:724: }
      001BFF E8 08                 6539 	add	sp, #8
      001C01 C9                    6540 	ret
                                   6541 ;src/main.c:726: void takeDamage(int16_t amount) {
                                   6542 ;	---------------------------------
                                   6543 ; Function takeDamage
                                   6544 ; ---------------------------------
      001C02                       6545 _takeDamage::
      001C02 3B                    6546 	dec	sp
                                   6547 ;src/main.c:727: if (amount > shield) {
      001C03 FArF7r00              6548 	ld	a, (#_shield)
      001C06 4F                    6549 	ld	c, a
      001C07 07                    6550 	rlca
      001C08 9F                    6551 	sbc	a, a
      001C09 47                    6552 	ld	b, a
                                   6553 ;src/main.c:729: hull -= (amount - shield);
      001C0A F8 03                 6554 	ldhl	sp,	#3
      001C0C 7E                    6555 	ld	a, (hl)
      001C0D F8 00                 6556 	ldhl	sp,	#0
      001C0F 77                    6557 	ld	(hl), a
                                   6558 ;src/main.c:727: if (amount > shield) {
      001C10 F8 03                 6559 	ldhl	sp,	#3
      001C12 79                    6560 	ld	a, c
      001C13 96                    6561 	sub	a, (hl)
      001C14 23                    6562 	inc	hl
      001C15 78                    6563 	ld	a, b
      001C16 9E                    6564 	sbc	a, (hl)
      001C17 78                    6565 	ld	a, b
      001C18 57                    6566 	ld	d, a
      001C19 CB 7E                 6567 	bit	7, (hl)
      001C1B 28 07                 6568 	jr	Z, 00111$
      001C1D CB 7A                 6569 	bit	7, d
      001C1F 20 08                 6570 	jr	NZ, 00112$
      001C21 BF                    6571 	cp	a, a
      001C22 18 05                 6572 	jr	00112$
      001C24                       6573 00111$:
      001C24 CB 7A                 6574 	bit	7, d
      001C26 28 01                 6575 	jr	Z, 00112$
      001C28 37                    6576 	scf
      001C29                       6577 00112$:
      001C29 30 10                 6578 	jr	NC, 00102$
                                   6579 ;src/main.c:728: shield = 0;
      001C2B 21rF7r00              6580 	ld	hl, #_shield
      001C2E 36 00                 6581 	ld	(hl), #0x00
                                   6582 ;src/main.c:729: hull -= (amount - shield);
      001C30 FArF6r00              6583 	ld	a, (#_hull)
      001C33 F8 00                 6584 	ldhl	sp,	#0
      001C35 96                    6585 	sub	a, (hl)
      001C36 EArF6r00              6586 	ld	(#_hull),a
      001C39 18 09                 6587 	jr	00104$
      001C3B                       6588 00102$:
                                   6589 ;src/main.c:732: shield -= amount;
      001C3B FArF7r00              6590 	ld	a, (#_shield)
      001C3E F8 00                 6591 	ldhl	sp,	#0
      001C40 96                    6592 	sub	a, (hl)
      001C41 EArF7r00              6593 	ld	(#_shield),a
      001C44                       6594 00104$:
                                   6595 ;src/main.c:734: }
      001C44 33                    6596 	inc	sp
      001C45 C9                    6597 	ret
                                   6598 ;src/main.c:736: void spawnPickup(int16_t x, int16_t y) {
                                   6599 ;	---------------------------------
                                   6600 ; Function spawnPickup
                                   6601 ; ---------------------------------
      001C46                       6602 _spawnPickup::
                                   6603 ;src/main.c:737: uint8_t spawn = ((uint8_t)rand()) % (uint8_t) 16;
      001C46 CDr00r00              6604 	call	_rand
      001C49 7B                    6605 	ld	a, e
      001C4A E6 0F                 6606 	and	a, #0x0f
      001C4C C0                    6607 	ret	NZ
                                   6608 ;src/main.c:738: if (spawn == 0) {
                                   6609 ;src/main.c:739: uint8_t type = ((uint8_t)rand()) % (uint8_t) 4;
      001C4D CDr00r00              6610 	call	_rand
      001C50 7B                    6611 	ld	a, e
      001C51 E6 03                 6612 	and	a, #0x03
                                   6613 ;src/main.c:740: if (type == 0) {
      001C53 5F                    6614 	ld	e,a
      001C54 B7                    6615 	or	a, a
      001C55 20 13                 6616 	jr	NZ, 00106$
                                   6617 ;src/main.c:741: pickup = health;
      001C57 11 09 00              6618 	ld	de, #0x0009
      001C5A D5                    6619 	push	de
      001C5B 11r1Ar07              6620 	ld	de, #_health
      001C5E D5                    6621 	push	de
      001C5F 11rFAr00              6622 	ld	de, #_pickup
      001C62 D5                    6623 	push	de
      001C63 CDr00r00              6624 	call	___memcpy
      001C66 E8 06                 6625 	add	sp, #6
      001C68 18 31                 6626 	jr	00107$
      001C6A                       6627 00106$:
                                   6628 ;src/main.c:743: else if (type == 1 && gunLevel < MAXGUNLEVEL) {
      001C6A 1D                    6629 	dec	e
      001C6B 20 1D                 6630 	jr	NZ, 00102$
      001C6D 21r9Dr08              6631 	ld	hl, #_MAXGUNLEVEL
      001C70 4E                    6632 	ld	c, (hl)
      001C71 FArA6r00              6633 	ld	a, (#_gunLevel)
      001C74 91                    6634 	sub	a, c
      001C75 30 13                 6635 	jr	NC, 00102$
                                   6636 ;src/main.c:744: pickup = upgrade;
      001C77 11 09 00              6637 	ld	de, #0x0009
      001C7A D5                    6638 	push	de
      001C7B 11r08r07              6639 	ld	de, #_upgrade
      001C7E D5                    6640 	push	de
      001C7F 11rFAr00              6641 	ld	de, #_pickup
      001C82 D5                    6642 	push	de
      001C83 CDr00r00              6643 	call	___memcpy
      001C86 E8 06                 6644 	add	sp, #6
      001C88 18 11                 6645 	jr	00107$
      001C8A                       6646 00102$:
                                   6647 ;src/main.c:747: pickup = ammo;
      001C8A 01r11r07              6648 	ld	bc, #_ammo
      001C8D 11rFAr00              6649 	ld	de, #_pickup
      001C90 21 09 00              6650 	ld	hl, #0x0009
      001C93 E5                    6651 	push	hl
      001C94 C5                    6652 	push	bc
      001C95 D5                    6653 	push	de
      001C96 CDr00r00              6654 	call	___memcpy
      001C99 E8 06                 6655 	add	sp, #6
      001C9B                       6656 00107$:
                                   6657 ;src/main.c:749: pickup.active = 1;
      001C9B 21rFFr00              6658 	ld	hl, #(_pickup + 5)
      001C9E 36 01                 6659 	ld	(hl), #0x01
                                   6660 ;src/main.c:751: pickup.x = x;
      001CA0 11rFBr00              6661 	ld	de, #(_pickup + 1)
      001CA3 F8 02                 6662 	ldhl	sp,	#2
      001CA5 2A                    6663 	ld	a, (hl+)
      001CA6 12                    6664 	ld	(de), a
      001CA7 13                    6665 	inc	de
                                   6666 ;src/main.c:752: pickup.y = y;
      001CA8 2A                    6667 	ld	a, (hl+)
      001CA9 12                    6668 	ld	(de), a
      001CAA 11rFDr00              6669 	ld	de, #(_pickup + 3)
      001CAD 2A                    6670 	ld	a, (hl+)
      001CAE 12                    6671 	ld	(de), a
      001CAF 13                    6672 	inc	de
      001CB0 7E                    6673 	ld	a, (hl)
      001CB1 12                    6674 	ld	(de), a
                                   6675 ;src/main.c:754: set_sprite_tile(3, pickup.tile); //0x7f
      001CB2 21r02r01              6676 	ld	hl, #(_pickup + 8)
      001CB5 4E                    6677 	ld	c, (hl)
                                   6678 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001CB6 21r0Er00              6679 	ld	hl, #(_shadow_OAM + 14)
      001CB9 71                    6680 	ld	(hl), c
                                   6681 ;src/main.c:754: set_sprite_tile(3, pickup.tile); //0x7f
                                   6682 ;src/main.c:760: }
      001CBA C9                    6683 	ret
                                   6684 ;src/main.c:762: void killEnemy(uint8_t i) {
                                   6685 ;	---------------------------------
                                   6686 ; Function killEnemy
                                   6687 ; ---------------------------------
      001CBB                       6688 _killEnemy::
      001CBB E8 FC                 6689 	add	sp, #-4
                                   6690 ;src/main.c:763: set_sprite_tile(10+(i<<1), 0x7f);
      001CBD F8 06                 6691 	ldhl	sp,	#6
      001CBF 7E                    6692 	ld	a, (hl)
      001CC0 87                    6693 	add	a, a
      001CC1 4F                    6694 	ld	c, a
      001CC2 C6 0A                 6695 	add	a, #0x0a
                                   6696 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001CC4 6F                    6697 	ld	l, a
      001CC5 11r00r00              6698 	ld	de, #_shadow_OAM+0
                                   6699 ;	spillPairReg hl
                                   6700 ;	spillPairReg hl
      001CC8 26 00                 6701 	ld	h, #0x00
                                   6702 ;	spillPairReg hl
                                   6703 ;	spillPairReg hl
      001CCA 29                    6704 	add	hl, hl
      001CCB 29                    6705 	add	hl, hl
      001CCC 19                    6706 	add	hl, de
      001CCD 23                    6707 	inc	hl
      001CCE 23                    6708 	inc	hl
      001CCF 36 7F                 6709 	ld	(hl), #0x7f
                                   6710 ;src/main.c:764: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001CD1 79                    6711 	ld	a, c
      001CD2 C6 0B                 6712 	add	a, #0x0b
                                   6713 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001CD4 6F                    6714 	ld	l, a
      001CD5 01r00r00              6715 	ld	bc, #_shadow_OAM+0
                                   6716 ;	spillPairReg hl
                                   6717 ;	spillPairReg hl
      001CD8 26 00                 6718 	ld	h, #0x00
                                   6719 ;	spillPairReg hl
                                   6720 ;	spillPairReg hl
      001CDA 29                    6721 	add	hl, hl
      001CDB 29                    6722 	add	hl, hl
      001CDC 09                    6723 	add	hl, bc
      001CDD 23                    6724 	inc	hl
      001CDE 23                    6725 	inc	hl
      001CDF 36 7F                 6726 	ld	(hl), #0x7f
                                   6727 ;src/main.c:766: spawnPickup(enemies[i].x, enemies[i].y);
      001CE1 F8 06                 6728 	ldhl	sp,	#6
      001CE3 4E                    6729 	ld	c, (hl)
      001CE4 06 00                 6730 	ld	b, #0x00
      001CE6 69                    6731 	ld	l, c
      001CE7 60                    6732 	ld	h, b
      001CE8 29                    6733 	add	hl, hl
      001CE9 29                    6734 	add	hl, hl
      001CEA 29                    6735 	add	hl, hl
      001CEB 09                    6736 	add	hl, bc
      001CEC 29                    6737 	add	hl, hl
      001CED 01r5Ar00              6738 	ld	bc,#_enemies
      001CF0 09                    6739 	add	hl,bc
                                   6740 ;	spillPairReg hl
                                   6741 ;	spillPairReg hl
      001CF1 4D                    6742 	ld	c,l
      001CF2 44                    6743 	ld	b,h
                                   6744 ;	spillPairReg hl
                                   6745 ;	spillPairReg hl
      001CF3 23                    6746 	inc	hl
      001CF4 23                    6747 	inc	hl
      001CF5 5D                    6748 	ld	e, l
      001CF6 54                    6749 	ld	d, h
      001CF7 1A                    6750 	ld	a, (de)
      001CF8 F8 00                 6751 	ldhl	sp,	#0
      001CFA 22                    6752 	ld	(hl+), a
      001CFB 13                    6753 	inc	de
      001CFC 1A                    6754 	ld	a, (de)
      001CFD 77                    6755 	ld	(hl), a
      001CFE 59                    6756 	ld	e, c
      001CFF 50                    6757 	ld	d, b
      001D00 1A                    6758 	ld	a, (de)
      001D01 F8 02                 6759 	ldhl	sp,	#2
      001D03 22                    6760 	ld	(hl+), a
      001D04 13                    6761 	inc	de
      001D05 1A                    6762 	ld	a, (de)
      001D06 77                    6763 	ld	(hl), a
      001D07 C5                    6764 	push	bc
      001D08 F8 02                 6765 	ldhl	sp,	#2
      001D0A 2A                    6766 	ld	a, (hl+)
      001D0B 5F                    6767 	ld	e, a
      001D0C 2A                    6768 	ld	a, (hl+)
      001D0D 57                    6769 	ld	d, a
      001D0E D5                    6770 	push	de
      001D0F 2A                    6771 	ld	a, (hl+)
      001D10 5F                    6772 	ld	e, a
      001D11 56                    6773 	ld	d, (hl)
      001D12 D5                    6774 	push	de
      001D13 CDr46r1C              6775 	call	_spawnPickup
      001D16 E8 04                 6776 	add	sp, #4
      001D18 C1                    6777 	pop	bc
                                   6778 ;src/main.c:768: enemies[i].alive = 0;
      001D19 21 09 00              6779 	ld	hl, #0x0009
      001D1C 09                    6780 	add	hl, bc
      001D1D 36 00                 6781 	ld	(hl), #0x00
                                   6782 ;src/main.c:769: enemies[i].visible = 0;
      001D1F 21 0A 00              6783 	ld	hl, #0x000a
      001D22 09                    6784 	add	hl, bc
      001D23 36 00                 6785 	ld	(hl), #0x00
                                   6786 ;src/main.c:770: playSound(0);
      001D25 AF                    6787 	xor	a, a
      001D26 F5                    6788 	push	af
      001D27 33                    6789 	inc	sp
      001D28 CDr91r0C              6790 	call	_playSound
      001D2B 33                    6791 	inc	sp
                                   6792 ;src/main.c:771: incrementScore();
      001D2C CDr4Er0A              6793 	call	_incrementScore
                                   6794 ;src/main.c:772: updateScore();
      001D2F CDrB0r09              6795 	call	_updateScore
                                   6796 ;src/main.c:773: }
      001D32 E8 04                 6797 	add	sp, #4
      001D34 C9                    6798 	ret
                                   6799 ;src/main.c:775: void checkCollision() {
                                   6800 ;	---------------------------------
                                   6801 ; Function checkCollision
                                   6802 ; ---------------------------------
      001D35                       6803 _checkCollision::
      001D35 E8 E7                 6804 	add	sp, #-25
                                   6805 ;src/main.c:782: struct Enemy *eptr = enemies + enemyCollisionCount;
      001D37 21rA5r00              6806 	ld	hl, #_enemyCollisionCount
      001D3A 4E                    6807 	ld	c, (hl)
      001D3B 06 00                 6808 	ld	b, #0x00
      001D3D 69                    6809 	ld	l, c
      001D3E 60                    6810 	ld	h, b
      001D3F 29                    6811 	add	hl, hl
      001D40 29                    6812 	add	hl, hl
      001D41 29                    6813 	add	hl, hl
      001D42 09                    6814 	add	hl, bc
      001D43 29                    6815 	add	hl, hl
      001D44 01r5Ar00              6816 	ld	bc,#_enemies
      001D47 09                    6817 	add	hl,bc
      001D48 4D                    6818 	ld	c, l
      001D49 7C                    6819 	ld	a, h
      001D4A F8 00                 6820 	ldhl	sp,	#0
      001D4C 71                    6821 	ld	(hl), c
      001D4D 23                    6822 	inc	hl
      001D4E 77                    6823 	ld	(hl), a
                                   6824 ;src/main.c:783: uint8_t i = enemyCollisionCount;
      001D4F FArA5r00              6825 	ld	a, (#_enemyCollisionCount)
      001D52 F8 02                 6826 	ldhl	sp,	#2
      001D54 77                    6827 	ld	(hl), a
                                   6828 ;src/main.c:785: if (eptr->visible && eptr->alive) {
      001D55 D1                    6829 	pop	de
      001D56 D5                    6830 	push	de
      001D57 21 0A 00              6831 	ld	hl, #0x000a
      001D5A 19                    6832 	add	hl, de
      001D5B 4D                    6833 	ld	c, l
      001D5C 44                    6834 	ld	b, h
      001D5D 0A                    6835 	ld	a, (bc)
      001D5E B7                    6836 	or	a, a
      001D5F CArEFr21              6837 	jp	Z, 00137$
      001D62 D1                    6838 	pop	de
      001D63 D5                    6839 	push	de
      001D64 21 09 00              6840 	ld	hl, #0x0009
      001D67 19                    6841 	add	hl, de
      001D68 4D                    6842 	ld	c, l
      001D69 44                    6843 	ld	b, h
      001D6A 0A                    6844 	ld	a, (bc)
      001D6B B7                    6845 	or	a, a
      001D6C CArEFr21              6846 	jp	Z, 00137$
                                   6847 ;src/main.c:787: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001D6F D1                    6848 	pop	de
      001D70 D5                    6849 	push	de
      001D71 21 08 00              6850 	ld	hl, #0x0008
      001D74 19                    6851 	add	hl, de
      001D75 4D                    6852 	ld	c, l
      001D76 44                    6853 	ld	b, h
      001D77 0A                    6854 	ld	a, (bc)
      001D78 4F                    6855 	ld	c, a
      001D79 3D                    6856 	dec	a
      001D7A 3E 01                 6857 	ld	a, #0x01
      001D7C 28 01                 6858 	jr	Z, 00343$
      001D7E AF                    6859 	xor	a, a
      001D7F                       6860 00343$:
      001D7F F8 15                 6861 	ldhl	sp,	#21
      001D81 77                    6862 	ld	(hl), a
      001D82 FAr9Br00              6863 	ld	a, (#_playerDrawX)
      001D85 F8 16                 6864 	ldhl	sp,	#22
      001D87 77                    6865 	ld	(hl), a
                                   6866 ;src/main.c:788: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001D88 79                    6867 	ld	a, c
      001D89 D6 02                 6868 	sub	a, #0x02
      001D8B 3E 01                 6869 	ld	a, #0x01
      001D8D 28 01                 6870 	jr	Z, 00345$
      001D8F AF                    6871 	xor	a, a
      001D90                       6872 00345$:
      001D90 F8 17                 6873 	ldhl	sp,	#23
                                   6874 ;src/main.c:787: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001D92 32                    6875 	ld	(hl-), a
      001D93 2B                    6876 	dec	hl
      001D94 7E                    6877 	ld	a, (hl)
      001D95 B7                    6878 	or	a, a
      001D96 28 2E                 6879 	jr	Z, 00110$
      001D98 D1                    6880 	pop	de
      001D99 D5                    6881 	push	de
      001D9A 1A                    6882 	ld	a, (de)
      001D9B F8 18                 6883 	ldhl	sp,	#24
      001D9D 77                    6884 	ld	(hl), a
      001D9E 3A                    6885 	ld	a, (hl-)
      001D9F 2B                    6886 	dec	hl
      001DA0 96                    6887 	sub	a, (hl)
      001DA1 23                    6888 	inc	hl
      001DA2 23                    6889 	inc	hl
      001DA3 77                    6890 	ld	(hl), a
                                   6891 ;src/main.c:348: if (value >= 0) return value;
      001DA4 CB 7E                 6892 	bit	7, (hl)
      001DA6 28 05                 6893 	jr	Z, 00145$
                                   6894 ;src/main.c:349: else return - value;
      001DA8 AF                    6895 	xor	a, a
      001DA9 F8 18                 6896 	ldhl	sp,	#24
      001DAB 96                    6897 	sub	a, (hl)
      001DAC 77                    6898 	ld	(hl), a
                                   6899 ;src/main.c:787: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001DAD                       6900 00145$:
      001DAD F8 18                 6901 	ldhl	sp,	#24
      001DAF 5E                    6902 	ld	e, (hl)
      001DB0 3E 08                 6903 	ld	a,#0x08
      001DB2 57                    6904 	ld	d,a
      001DB3 96                    6905 	sub	a, (hl)
      001DB4 CB 7B                 6906 	bit	7, e
      001DB6 28 07                 6907 	jr	Z, 00346$
      001DB8 CB 7A                 6908 	bit	7, d
      001DBA 20 08                 6909 	jr	NZ, 00347$
      001DBC BF                    6910 	cp	a, a
      001DBD 18 05                 6911 	jr	00347$
      001DBF                       6912 00346$:
      001DBF CB 7A                 6913 	bit	7, d
      001DC1 28 01                 6914 	jr	Z, 00347$
      001DC3 37                    6915 	scf
      001DC4                       6916 00347$:
      001DC4 30 33                 6917 	jr	NC, 00106$
      001DC6                       6918 00110$:
                                   6919 ;src/main.c:788: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001DC6 F8 17                 6920 	ldhl	sp,	#23
      001DC8 7E                    6921 	ld	a, (hl)
      001DC9 B7                    6922 	or	a, a
      001DCA CArADr1E              6923 	jp	Z, 00107$
      001DCD 2B                    6924 	dec	hl
      001DCE D1                    6925 	pop	de
      001DCF D5                    6926 	push	de
      001DD0 1A                    6927 	ld	a, (de)
      001DD1 96                    6928 	sub	a, (hl)
      001DD2 23                    6929 	inc	hl
      001DD3 23                    6930 	inc	hl
      001DD4 77                    6931 	ld	(hl), a
                                   6932 ;src/main.c:348: if (value >= 0) return value;
      001DD5 CB 7E                 6933 	bit	7, (hl)
      001DD7 28 06                 6934 	jr	Z, 00149$
                                   6935 ;src/main.c:349: else return - value;
      001DD9 AF                    6936 	xor	a, a
      001DDA F8 18                 6937 	ldhl	sp,	#24
      001DDC 96                    6938 	sub	a, (hl)
      001DDD 4F                    6939 	ld	c, a
      001DDE 71                    6940 	ld	(hl), c
                                   6941 ;src/main.c:788: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001DDF                       6942 00149$:
      001DDF F8 18                 6943 	ldhl	sp,	#24
      001DE1 5E                    6944 	ld	e, (hl)
      001DE2 3E 10                 6945 	ld	a,#0x10
      001DE4 57                    6946 	ld	d,a
      001DE5 96                    6947 	sub	a, (hl)
      001DE6 CB 7B                 6948 	bit	7, e
      001DE8 28 07                 6949 	jr	Z, 00348$
      001DEA CB 7A                 6950 	bit	7, d
      001DEC 20 08                 6951 	jr	NZ, 00349$
      001DEE BF                    6952 	cp	a, a
      001DEF 18 05                 6953 	jr	00349$
      001DF1                       6954 00348$:
      001DF1 CB 7A                 6955 	bit	7, d
      001DF3 28 01                 6956 	jr	Z, 00349$
      001DF5 37                    6957 	scf
      001DF6                       6958 00349$:
      001DF6 DArADr1E              6959 	jp	C, 00107$
      001DF9                       6960 00106$:
                                   6961 ;src/main.c:789: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001DF9 C1                    6962 	pop	bc
      001DFA C5                    6963 	push	bc
      001DFB 03                    6964 	inc	bc
      001DFC 03                    6965 	inc	bc
      001DFD FAr9Cr00              6966 	ld	a, (#_playerDrawY)
      001E00 F8 18                 6967 	ldhl	sp,	#24
      001E02 77                    6968 	ld	(hl), a
      001E03 F8 15                 6969 	ldhl	sp,	#21
      001E05 7E                    6970 	ld	a, (hl)
      001E06 B7                    6971 	or	a, a
      001E07 28 23                 6972 	jr	Z, 00105$
      001E09 0A                    6973 	ld	a, (bc)
      001E0A F8 18                 6974 	ldhl	sp,	#24
      001E0C 96                    6975 	sub	a, (hl)
      001E0D 6F                    6976 	ld	l, a
                                   6977 ;	spillPairReg hl
                                   6978 ;	spillPairReg hl
                                   6979 ;src/main.c:348: if (value >= 0) return value;
      001E0E CB 7D                 6980 	bit	7, l
      001E10 28 03                 6981 	jr	Z, 00153$
                                   6982 ;src/main.c:349: else return - value;
      001E12 AF                    6983 	xor	a, a
      001E13 95                    6984 	sub	a, l
      001E14 6F                    6985 	ld	l, a
                                   6986 ;	spillPairReg hl
                                   6987 ;	spillPairReg hl
                                   6988 ;src/main.c:789: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001E15                       6989 00153$:
      001E15 5D                    6990 	ld	e, l
      001E16 3E 08                 6991 	ld	a,#0x08
      001E18 57                    6992 	ld	d,a
      001E19 95                    6993 	sub	a, l
      001E1A CB 7B                 6994 	bit	7, e
      001E1C 28 07                 6995 	jr	Z, 00350$
      001E1E CB 7A                 6996 	bit	7, d
      001E20 20 08                 6997 	jr	NZ, 00351$
      001E22 BF                    6998 	cp	a, a
      001E23 18 05                 6999 	jr	00351$
      001E25                       7000 00350$:
      001E25 CB 7A                 7001 	bit	7, d
      001E27 28 01                 7002 	jr	Z, 00351$
      001E29 37                    7003 	scf
      001E2A                       7004 00351$:
      001E2A 30 28                 7005 	jr	NC, 00101$
      001E2C                       7006 00105$:
                                   7007 ;src/main.c:790: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001E2C F8 17                 7008 	ldhl	sp,	#23
      001E2E 7E                    7009 	ld	a, (hl)
      001E2F B7                    7010 	or	a, a
      001E30 28 7B                 7011 	jr	Z, 00107$
      001E32 23                    7012 	inc	hl
      001E33 0A                    7013 	ld	a, (bc)
      001E34 96                    7014 	sub	a, (hl)
      001E35 4F                    7015 	ld	c, a
                                   7016 ;src/main.c:348: if (value >= 0) return value;
      001E36 CB 79                 7017 	bit	7, c
      001E38 28 03                 7018 	jr	Z, 00157$
                                   7019 ;src/main.c:349: else return - value;
      001E3A AF                    7020 	xor	a, a
      001E3B 91                    7021 	sub	a, c
      001E3C 4F                    7022 	ld	c, a
                                   7023 ;src/main.c:790: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001E3D                       7024 00157$:
      001E3D 59                    7025 	ld	e, c
      001E3E 3E 10                 7026 	ld	a,#0x10
      001E40 57                    7027 	ld	d,a
      001E41 91                    7028 	sub	a, c
      001E42 CB 7B                 7029 	bit	7, e
      001E44 28 07                 7030 	jr	Z, 00352$
      001E46 CB 7A                 7031 	bit	7, d
      001E48 20 08                 7032 	jr	NZ, 00353$
      001E4A BF                    7033 	cp	a, a
      001E4B 18 05                 7034 	jr	00353$
      001E4D                       7035 00352$:
      001E4D CB 7A                 7036 	bit	7, d
      001E4F 28 01                 7037 	jr	Z, 00353$
      001E51 37                    7038 	scf
      001E52                       7039 00353$:
      001E52 38 59                 7040 	jr	C, 00107$
      001E54                       7041 00101$:
                                   7042 ;src/main.c:792: set_sprite_tile(10+(i<<1), 0x7f);
      001E54 F8 02                 7043 	ldhl	sp,	#2
      001E56 7E                    7044 	ld	a, (hl)
      001E57 87                    7045 	add	a, a
      001E58 C6 0A                 7046 	add	a, #0x0a
                                   7047 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001E5A 6F                    7048 	ld	l, a
      001E5B 01r00r00              7049 	ld	bc, #_shadow_OAM+0
                                   7050 ;	spillPairReg hl
                                   7051 ;	spillPairReg hl
      001E5E 26 00                 7052 	ld	h, #0x00
                                   7053 ;	spillPairReg hl
                                   7054 ;	spillPairReg hl
      001E60 29                    7055 	add	hl, hl
      001E61 29                    7056 	add	hl, hl
      001E62 09                    7057 	add	hl, bc
      001E63 23                    7058 	inc	hl
      001E64 23                    7059 	inc	hl
      001E65 36 7F                 7060 	ld	(hl), #0x7f
                                   7061 ;src/main.c:793: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001E67 F8 02                 7062 	ldhl	sp,	#2
      001E69 7E                    7063 	ld	a, (hl)
      001E6A 87                    7064 	add	a, a
      001E6B C6 0B                 7065 	add	a, #0x0b
                                   7066 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001E6D 6F                    7067 	ld	l, a
      001E6E 01r00r00              7068 	ld	bc, #_shadow_OAM+0
                                   7069 ;	spillPairReg hl
                                   7070 ;	spillPairReg hl
      001E71 26 00                 7071 	ld	h, #0x00
                                   7072 ;	spillPairReg hl
                                   7073 ;	spillPairReg hl
      001E73 29                    7074 	add	hl, hl
      001E74 29                    7075 	add	hl, hl
      001E75 09                    7076 	add	hl, bc
      001E76 23                    7077 	inc	hl
      001E77 23                    7078 	inc	hl
      001E78 36 7F                 7079 	ld	(hl), #0x7f
                                   7080 ;src/main.c:794: eptr->alive = 0;
      001E7A D1                    7081 	pop	de
      001E7B D5                    7082 	push	de
      001E7C 21 09 00              7083 	ld	hl, #0x0009
      001E7F 19                    7084 	add	hl, de
      001E80 4D                    7085 	ld	c, l
      001E81 44                    7086 	ld	b, h
      001E82 AF                    7087 	xor	a, a
      001E83 02                    7088 	ld	(bc), a
                                   7089 ;src/main.c:795: eptr->visible = 0;
      001E84 D1                    7090 	pop	de
      001E85 D5                    7091 	push	de
      001E86 21 0A 00              7092 	ld	hl, #0x000a
      001E89 19                    7093 	add	hl, de
      001E8A 4D                    7094 	ld	c, l
      001E8B 44                    7095 	ld	b, h
      001E8C AF                    7096 	xor	a, a
      001E8D 02                    7097 	ld	(bc), a
                                   7098 ;src/main.c:796: takeDamage(eptr->damage);
      001E8E D1                    7099 	pop	de
      001E8F D5                    7100 	push	de
      001E90 21 0B 00              7101 	ld	hl, #0x000b
      001E93 19                    7102 	add	hl, de
      001E94 4D                    7103 	ld	c, l
      001E95 44                    7104 	ld	b, h
      001E96 0A                    7105 	ld	a, (bc)
      001E97 06 00                 7106 	ld	b, #0x00
      001E99 4F                    7107 	ld	c, a
      001E9A C5                    7108 	push	bc
      001E9B CDr02r1C              7109 	call	_takeDamage
      001E9E E1                    7110 	pop	hl
                                   7111 ;src/main.c:797: initEnemies(0);
      001E9F AF                    7112 	xor	a, a
      001EA0 F5                    7113 	push	af
      001EA1 33                    7114 	inc	sp
      001EA2 CDrF4r0C              7115 	call	_initEnemies
      001EA5 33                    7116 	inc	sp
                                   7117 ;src/main.c:798: playSound(0);
      001EA6 AF                    7118 	xor	a, a
      001EA7 F5                    7119 	push	af
      001EA8 33                    7120 	inc	sp
      001EA9 CDr91r0C              7121 	call	_playSound
      001EAC 33                    7122 	inc	sp
      001EAD                       7123 00107$:
                                   7124 ;src/main.c:804: struct Projectile *pptr = projectiles;
      001EAD F8 15                 7125 	ldhl	sp,	#21
      001EAF 3ErB4                 7126 	ld	a, #<(_projectiles)
      001EB1 22                    7127 	ld	(hl+), a
      001EB2 36s00                 7128 	ld	(hl), #>(_projectiles)
                                   7129 ;src/main.c:806: while (j < PROJECTILECOUNT) {
      001EB4 D1                    7130 	pop	de
      001EB5 D5                    7131 	push	de
      001EB6 21 02 00              7132 	ld	hl, #0x0002
      001EB9 19                    7133 	add	hl, de
      001EBA E5                    7134 	push	hl
      001EBB 7D                    7135 	ld	a, l
      001EBC F8 05                 7136 	ldhl	sp,	#5
      001EBE 77                    7137 	ld	(hl), a
      001EBF E1                    7138 	pop	hl
      001EC0 7C                    7139 	ld	a, h
      001EC1 F8 04                 7140 	ldhl	sp,	#4
      001EC3 32                    7141 	ld	(hl-), a
      001EC4 2A                    7142 	ld	a, (hl+)
      001EC5 23                    7143 	inc	hl
      001EC6 32                    7144 	ld	(hl-), a
      001EC7 2A                    7145 	ld	a, (hl+)
      001EC8 23                    7146 	inc	hl
      001EC9 77                    7147 	ld	(hl), a
      001ECA D1                    7148 	pop	de
      001ECB D5                    7149 	push	de
      001ECC 21 08 00              7150 	ld	hl, #0x0008
      001ECF 19                    7151 	add	hl, de
      001ED0 E5                    7152 	push	hl
      001ED1 7D                    7153 	ld	a, l
      001ED2 F8 09                 7154 	ldhl	sp,	#9
      001ED4 77                    7155 	ld	(hl), a
      001ED5 E1                    7156 	pop	hl
      001ED6 7C                    7157 	ld	a, h
      001ED7 F8 08                 7158 	ldhl	sp,	#8
      001ED9 77                    7159 	ld	(hl), a
      001EDA F8 03                 7160 	ldhl	sp,	#3
      001EDC 7E                    7161 	ld	a, (hl)
      001EDD F8 09                 7162 	ldhl	sp,	#9
      001EDF 77                    7163 	ld	(hl), a
      001EE0 F8 04                 7164 	ldhl	sp,	#4
      001EE2 7E                    7165 	ld	a, (hl)
      001EE3 F8 0A                 7166 	ldhl	sp,	#10
      001EE5 77                    7167 	ld	(hl), a
      001EE6 F8 17                 7168 	ldhl	sp,	#23
      001EE8 36 00                 7169 	ld	(hl), #0x00
      001EEA                       7170 00133$:
      001EEA 21r99r08              7171 	ld	hl, #_PROJECTILECOUNT
      001EED 4E                    7172 	ld	c, (hl)
      001EEE F8 17                 7173 	ldhl	sp,	#23
      001EF0 7E                    7174 	ld	a, (hl)
      001EF1 91                    7175 	sub	a, c
      001EF2 D2rEFr21              7176 	jp	NC, 00137$
                                   7177 ;src/main.c:807: if (pptr->active) {
      001EF5 2B                    7178 	dec	hl
      001EF6 2B                    7179 	dec	hl
      001EF7 2A                    7180 	ld	a, (hl+)
      001EF8 5F                    7181 	ld	e, a
      001EF9 56                    7182 	ld	d, (hl)
      001EFA 21 0A 00              7183 	ld	hl, #0x000a
      001EFD 19                    7184 	add	hl, de
      001EFE 4D                    7185 	ld	c, l
      001EFF 44                    7186 	ld	b, h
      001F00 0A                    7187 	ld	a, (bc)
      001F01 B7                    7188 	or	a, a
      001F02 CArD6r21              7189 	jp	Z, 00132$
                                   7190 ;src/main.c:811: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001F05 F8 07                 7191 	ldhl	sp,#7
      001F07 2A                    7192 	ld	a, (hl+)
      001F08 5F                    7193 	ld	e, a
      001F09 56                    7194 	ld	d, (hl)
      001F0A 1A                    7195 	ld	a, (de)
      001F0B 4F                    7196 	ld	c, a
      001F0C 3D                    7197 	dec	a
      001F0D 3E 01                 7198 	ld	a, #0x01
      001F0F 28 01                 7199 	jr	Z, 00355$
      001F11 AF                    7200 	xor	a, a
      001F12                       7201 00355$:
      001F12 F8 13                 7202 	ldhl	sp,	#19
      001F14 77                    7203 	ld	(hl), a
                                   7204 ;src/main.c:812: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001F15 79                    7205 	ld	a, c
      001F16 D6 02                 7206 	sub	a, #0x02
      001F18 3E 01                 7207 	ld	a, #0x01
      001F1A 28 01                 7208 	jr	Z, 00357$
      001F1C AF                    7209 	xor	a, a
      001F1D                       7210 00357$:
      001F1D F8 14                 7211 	ldhl	sp,	#20
                                   7212 ;src/main.c:811: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001F1F 32                    7213 	ld	(hl-), a
      001F20 7E                    7214 	ld	a, (hl)
      001F21 B7                    7215 	or	a, a
      001F22 28 2C                 7216 	jr	Z, 00130$
      001F24 D1                    7217 	pop	de
      001F25 D5                    7218 	push	de
      001F26 1A                    7219 	ld	a, (de)
      001F27 F8 15                 7220 	ldhl	sp,#21
      001F29 5E                    7221 	ld	e, (hl)
      001F2A 23                    7222 	inc	hl
      001F2B 56                    7223 	ld	d, (hl)
      001F2C F5                    7224 	push	af
      001F2D 1A                    7225 	ld	a, (de)
      001F2E 4F                    7226 	ld	c, a
      001F2F F1                    7227 	pop	af
      001F30 91                    7228 	sub	a, c
      001F31 4F                    7229 	ld	c, a
                                   7230 ;src/main.c:348: if (value >= 0) return value;
      001F32 CB 79                 7231 	bit	7, c
      001F34 28 03                 7232 	jr	Z, 00163$
                                   7233 ;src/main.c:349: else return - value;
      001F36 AF                    7234 	xor	a, a
      001F37 91                    7235 	sub	a, c
      001F38 4F                    7236 	ld	c, a
                                   7237 ;src/main.c:811: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001F39                       7238 00163$:
      001F39 59                    7239 	ld	e, c
      001F3A 3E 08                 7240 	ld	a,#0x08
      001F3C 57                    7241 	ld	d,a
      001F3D 91                    7242 	sub	a, c
      001F3E CB 7B                 7243 	bit	7, e
      001F40 28 07                 7244 	jr	Z, 00358$
      001F42 CB 7A                 7245 	bit	7, d
      001F44 20 08                 7246 	jr	NZ, 00359$
      001F46 BF                    7247 	cp	a, a
      001F47 18 05                 7248 	jr	00359$
      001F49                       7249 00358$:
      001F49 CB 7A                 7250 	bit	7, d
      001F4B 28 01                 7251 	jr	Z, 00359$
      001F4D 37                    7252 	scf
      001F4E                       7253 00359$:
      001F4E 30 3A                 7254 	jr	NC, 00126$
      001F50                       7255 00130$:
                                   7256 ;src/main.c:812: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001F50 F8 14                 7257 	ldhl	sp,	#20
      001F52 7E                    7258 	ld	a, (hl)
      001F53 B7                    7259 	or	a, a
      001F54 CArD6r21              7260 	jp	Z, 00132$
      001F57 23                    7261 	inc	hl
      001F58 D1                    7262 	pop	de
      001F59 D5                    7263 	push	de
      001F5A 1A                    7264 	ld	a, (de)
      001F5B 5E                    7265 	ld	e, (hl)
      001F5C 23                    7266 	inc	hl
      001F5D 56                    7267 	ld	d, (hl)
      001F5E 23                    7268 	inc	hl
      001F5F 23                    7269 	inc	hl
      001F60 F5                    7270 	push	af
      001F61 1A                    7271 	ld	a, (de)
      001F62 4F                    7272 	ld	c, a
      001F63 F1                    7273 	pop	af
      001F64 91                    7274 	sub	a, c
      001F65 77                    7275 	ld	(hl), a
                                   7276 ;src/main.c:348: if (value >= 0) return value;
      001F66 CB 7E                 7277 	bit	7, (hl)
      001F68 20 03                 7278 	jr	NZ, 00165$
      001F6A 4E                    7279 	ld	c, (hl)
      001F6B 18 05                 7280 	jr	00167$
      001F6D                       7281 00165$:
                                   7282 ;src/main.c:349: else return - value;
      001F6D AF                    7283 	xor	a, a
      001F6E F8 18                 7284 	ldhl	sp,	#24
      001F70 96                    7285 	sub	a, (hl)
      001F71 4F                    7286 	ld	c, a
                                   7287 ;src/main.c:812: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001F72                       7288 00167$:
      001F72 59                    7289 	ld	e, c
      001F73 3E 10                 7290 	ld	a,#0x10
      001F75 57                    7291 	ld	d,a
      001F76 91                    7292 	sub	a, c
      001F77 CB 7B                 7293 	bit	7, e
      001F79 28 07                 7294 	jr	Z, 00360$
      001F7B CB 7A                 7295 	bit	7, d
      001F7D 20 08                 7296 	jr	NZ, 00361$
      001F7F BF                    7297 	cp	a, a
      001F80 18 05                 7298 	jr	00361$
      001F82                       7299 00360$:
      001F82 CB 7A                 7300 	bit	7, d
      001F84 28 01                 7301 	jr	Z, 00361$
      001F86 37                    7302 	scf
      001F87                       7303 00361$:
      001F87 DArD6r21              7304 	jp	C, 00132$
      001F8A                       7305 00126$:
                                   7306 ;src/main.c:813: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001F8A F8 15                 7307 	ldhl	sp,	#21
      001F8C 2A                    7308 	ld	a, (hl+)
      001F8D 4F                    7309 	ld	c, a
      001F8E 46                    7310 	ld	b, (hl)
      001F8F 03                    7311 	inc	bc
      001F90 03                    7312 	inc	bc
      001F91 F8 13                 7313 	ldhl	sp,	#19
      001F93 7E                    7314 	ld	a, (hl)
      001F94 B7                    7315 	or	a, a
      001F95 28 2A                 7316 	jr	Z, 00125$
      001F97 F8 09                 7317 	ldhl	sp,#9
      001F99 2A                    7318 	ld	a, (hl+)
      001F9A 5F                    7319 	ld	e, a
      001F9B 56                    7320 	ld	d, (hl)
      001F9C 1A                    7321 	ld	a, (de)
      001F9D F5                    7322 	push	af
      001F9E 0A                    7323 	ld	a, (bc)
      001F9F 5F                    7324 	ld	e, a
      001FA0 F1                    7325 	pop	af
      001FA1 93                    7326 	sub	a, e
      001FA2 6F                    7327 	ld	l, a
                                   7328 ;	spillPairReg hl
                                   7329 ;	spillPairReg hl
                                   7330 ;src/main.c:348: if (value >= 0) return value;
      001FA3 CB 7D                 7331 	bit	7, l
      001FA5 28 03                 7332 	jr	Z, 00171$
                                   7333 ;src/main.c:349: else return - value;
      001FA7 AF                    7334 	xor	a, a
      001FA8 95                    7335 	sub	a, l
      001FA9 6F                    7336 	ld	l, a
                                   7337 ;	spillPairReg hl
                                   7338 ;	spillPairReg hl
                                   7339 ;src/main.c:813: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001FAA                       7340 00171$:
      001FAA 5D                    7341 	ld	e, l
      001FAB 3E 08                 7342 	ld	a,#0x08
      001FAD 57                    7343 	ld	d,a
      001FAE 95                    7344 	sub	a, l
      001FAF CB 7B                 7345 	bit	7, e
      001FB1 28 07                 7346 	jr	Z, 00362$
      001FB3 CB 7A                 7347 	bit	7, d
      001FB5 20 08                 7348 	jr	NZ, 00363$
      001FB7 BF                    7349 	cp	a, a
      001FB8 18 05                 7350 	jr	00363$
      001FBA                       7351 00362$:
      001FBA CB 7A                 7352 	bit	7, d
      001FBC 28 01                 7353 	jr	Z, 00363$
      001FBE 37                    7354 	scf
      001FBF                       7355 00363$:
      001FBF 30 32                 7356 	jr	NC, 00121$
      001FC1                       7357 00125$:
                                   7358 ;src/main.c:814: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001FC1 F8 14                 7359 	ldhl	sp,	#20
      001FC3 7E                    7360 	ld	a, (hl)
      001FC4 B7                    7361 	or	a, a
      001FC5 CArD6r21              7362 	jp	Z, 00132$
      001FC8 F8 03                 7363 	ldhl	sp,#3
      001FCA 2A                    7364 	ld	a, (hl+)
      001FCB 5F                    7365 	ld	e, a
      001FCC 56                    7366 	ld	d, (hl)
      001FCD 1A                    7367 	ld	a, (de)
      001FCE F5                    7368 	push	af
      001FCF 0A                    7369 	ld	a, (bc)
      001FD0 4F                    7370 	ld	c, a
      001FD1 F1                    7371 	pop	af
      001FD2 91                    7372 	sub	a, c
      001FD3 4F                    7373 	ld	c, a
                                   7374 ;src/main.c:348: if (value >= 0) return value;
      001FD4 CB 79                 7375 	bit	7, c
      001FD6 28 03                 7376 	jr	Z, 00175$
                                   7377 ;src/main.c:349: else return - value;
      001FD8 AF                    7378 	xor	a, a
      001FD9 91                    7379 	sub	a, c
      001FDA 4F                    7380 	ld	c, a
                                   7381 ;src/main.c:814: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001FDB                       7382 00175$:
      001FDB 59                    7383 	ld	e, c
      001FDC 3E 10                 7384 	ld	a,#0x10
      001FDE 57                    7385 	ld	d,a
      001FDF 91                    7386 	sub	a, c
      001FE0 CB 7B                 7387 	bit	7, e
      001FE2 28 07                 7388 	jr	Z, 00364$
      001FE4 CB 7A                 7389 	bit	7, d
      001FE6 20 08                 7390 	jr	NZ, 00365$
      001FE8 BF                    7391 	cp	a, a
      001FE9 18 05                 7392 	jr	00365$
      001FEB                       7393 00364$:
      001FEB CB 7A                 7394 	bit	7, d
      001FED 28 01                 7395 	jr	Z, 00365$
      001FEF 37                    7396 	scf
      001FF0                       7397 00365$:
      001FF0 DArD6r21              7398 	jp	C, 00132$
      001FF3                       7399 00121$:
                                   7400 ;src/main.c:816: set_sprite_tile(30+j, 0x7f);
      001FF3 F8 17                 7401 	ldhl	sp,	#23
      001FF5 7E                    7402 	ld	a, (hl)
      001FF6 C6 1E                 7403 	add	a, #0x1e
                                   7404 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FF8 6F                    7405 	ld	l, a
      001FF9 01r00r00              7406 	ld	bc, #_shadow_OAM+0
                                   7407 ;	spillPairReg hl
                                   7408 ;	spillPairReg hl
      001FFC 26 00                 7409 	ld	h, #0x00
                                   7410 ;	spillPairReg hl
                                   7411 ;	spillPairReg hl
      001FFE 29                    7412 	add	hl, hl
      001FFF 29                    7413 	add	hl, hl
      002000 09                    7414 	add	hl, bc
      002001 23                    7415 	inc	hl
      002002 23                    7416 	inc	hl
      002003 36 7F                 7417 	ld	(hl), #0x7f
                                   7418 ;src/main.c:817: pptr->active = 0;
      002005 F8 15                 7419 	ldhl	sp,#21
      002007 2A                    7420 	ld	a, (hl+)
      002008 5F                    7421 	ld	e, a
      002009 56                    7422 	ld	d, (hl)
      00200A 21 0A 00              7423 	ld	hl, #0x000a
      00200D 19                    7424 	add	hl, de
      00200E 4D                    7425 	ld	c, l
      00200F 44                    7426 	ld	b, h
      002010 AF                    7427 	xor	a, a
      002011 02                    7428 	ld	(bc), a
                                   7429 ;src/main.c:819: if (pptr->type == 0x2c) { //missile
      002012 F8 15                 7430 	ldhl	sp,#21
      002014 2A                    7431 	ld	a, (hl+)
      002015 5F                    7432 	ld	e, a
      002016 56                    7433 	ld	d, (hl)
      002017 21 0C 00              7434 	ld	hl, #0x000c
      00201A 19                    7435 	add	hl, de
      00201B 4D                    7436 	ld	c, l
      00201C 44                    7437 	ld	b, h
      00201D 0A                    7438 	ld	a, (bc)
      00201E 4F                    7439 	ld	c, a
                                   7440 ;src/main.c:824: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      00201F F8 15                 7441 	ldhl	sp,#21
      002021 2A                    7442 	ld	a, (hl+)
      002022 5F                    7443 	ld	e, a
      002023 56                    7444 	ld	d, (hl)
      002024 21 08 00              7445 	ld	hl, #0x0008
      002027 19                    7446 	add	hl, de
      002028 E5                    7447 	push	hl
      002029 7D                    7448 	ld	a, l
      00202A F8 15                 7449 	ldhl	sp,	#21
      00202C 77                    7450 	ld	(hl), a
      00202D E1                    7451 	pop	hl
      00202E 7C                    7452 	ld	a, h
      00202F F8 14                 7453 	ldhl	sp,	#20
      002031 77                    7454 	ld	(hl), a
                                   7455 ;src/main.c:819: if (pptr->type == 0x2c) { //missile
      002032 79                    7456 	ld	a, c
      002033 D6 2C                 7457 	sub	a, #0x2c
      002035 C2r80r21              7458 	jp	NZ,00119$
                                   7459 ;src/main.c:824: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002038 2B                    7460 	dec	hl
      002039 7E                    7461 	ld	a, (hl)
      00203A F8 0B                 7462 	ldhl	sp,	#11
      00203C 77                    7463 	ld	(hl), a
      00203D F8 14                 7464 	ldhl	sp,	#20
      00203F 7E                    7465 	ld	a, (hl)
      002040 F8 0C                 7466 	ldhl	sp,	#12
      002042 77                    7467 	ld	(hl), a
      002043 F8 18                 7468 	ldhl	sp,	#24
      002045 36 00                 7469 	ld	(hl), #0x00
      002047                       7470 00186$:
      002047 21r88r08              7471 	ld	hl, #_ENEMYCOUNT
      00204A 4E                    7472 	ld	c, (hl)
      00204B F8 18                 7473 	ldhl	sp,	#24
      00204D 7E                    7474 	ld	a, (hl)
      00204E 91                    7475 	sub	a, c
      00204F D2rCFr21              7476 	jp	NC, 00120$
                                   7477 ;src/main.c:825: int16_t dmgDropOff = ((i16abs(eptr->x - enemies[k].x) + i16abs(eptr->y - enemies[k].y))<<SPLASHDROPOFF);
      002052 D1                    7478 	pop	de
      002053 D5                    7479 	push	de
      002054 1A                    7480 	ld	a, (de)
      002055 F8 13                 7481 	ldhl	sp,	#19
      002057 22                    7482 	ld	(hl+), a
      002058 13                    7483 	inc	de
      002059 1A                    7484 	ld	a, (de)
      00205A 77                    7485 	ld	(hl), a
      00205B F8 18                 7486 	ldhl	sp,	#24
      00205D 4E                    7487 	ld	c, (hl)
      00205E 06 00                 7488 	ld	b, #0x00
      002060 69                    7489 	ld	l, c
      002061 60                    7490 	ld	h, b
      002062 29                    7491 	add	hl, hl
      002063 29                    7492 	add	hl, hl
      002064 29                    7493 	add	hl, hl
      002065 09                    7494 	add	hl, bc
      002066 29                    7495 	add	hl, hl
      002067 01r5Ar00              7496 	ld	bc,#_enemies
      00206A 09                    7497 	add	hl,bc
      00206B E5                    7498 	push	hl
      00206C 7D                    7499 	ld	a, l
      00206D F8 0F                 7500 	ldhl	sp,	#15
      00206F 77                    7501 	ld	(hl), a
      002070 E1                    7502 	pop	hl
      002071 7C                    7503 	ld	a, h
      002072 F8 0E                 7504 	ldhl	sp,	#14
      002074 32                    7505 	ld	(hl-), a
      002075 2A                    7506 	ld	a, (hl+)
      002076 5F                    7507 	ld	e, a
      002077 56                    7508 	ld	d, (hl)
      002078 1A                    7509 	ld	a, (de)
      002079 4F                    7510 	ld	c, a
      00207A 13                    7511 	inc	de
      00207B 1A                    7512 	ld	a, (de)
      00207C 47                    7513 	ld	b, a
      00207D F8 13                 7514 	ldhl	sp,#19
      00207F 2A                    7515 	ld	a, (hl+)
      002080 5F                    7516 	ld	e, a
      002081 56                    7517 	ld	d, (hl)
      002082 7B                    7518 	ld	a, e
      002083 91                    7519 	sub	a, c
      002084 5F                    7520 	ld	e, a
      002085 7A                    7521 	ld	a, d
      002086 98                    7522 	sbc	a, b
      002087 4B                    7523 	ld	c, e
      002088 47                    7524 	ld	b, a
                                   7525 ;	spillPairReg hl
                                   7526 ;	spillPairReg hl
      002089 60                    7527 	ld	h, b
                                   7528 ;	spillPairReg hl
                                   7529 ;	spillPairReg hl
      00208A CB 7C                 7530 	bit	7, h
      00208C 28 06                 7531 	jr	Z, 00180$
      00208E AF                    7532 	xor	a, a
      00208F 91                    7533 	sub	a, c
      002090 4F                    7534 	ld	c, a
      002091 9F                    7535 	sbc	a, a
      002092 90                    7536 	sub	a, b
      002093 47                    7537 	ld	b, a
      002094                       7538 00180$:
      002094 F8 05                 7539 	ldhl	sp,#5
      002096 2A                    7540 	ld	a, (hl+)
      002097 5F                    7541 	ld	e, a
      002098 56                    7542 	ld	d, (hl)
      002099 1A                    7543 	ld	a, (de)
      00209A F8 0F                 7544 	ldhl	sp,	#15
      00209C 22                    7545 	ld	(hl+), a
      00209D 13                    7546 	inc	de
      00209E 1A                    7547 	ld	a, (de)
      00209F 77                    7548 	ld	(hl), a
      0020A0 F8 0D                 7549 	ldhl	sp,	#13
      0020A2 2A                    7550 	ld	a, (hl+)
      0020A3 66                    7551 	ld	h, (hl)
                                   7552 ;	spillPairReg hl
                                   7553 ;	spillPairReg hl
      0020A4 6F                    7554 	ld	l, a
                                   7555 ;	spillPairReg hl
                                   7556 ;	spillPairReg hl
      0020A5 23                    7557 	inc	hl
      0020A6 23                    7558 	inc	hl
      0020A7 5D                    7559 	ld	e, l
      0020A8 54                    7560 	ld	d, h
      0020A9 1A                    7561 	ld	a, (de)
      0020AA F8 11                 7562 	ldhl	sp,	#17
      0020AC 22                    7563 	ld	(hl+), a
      0020AD 13                    7564 	inc	de
      0020AE 1A                    7565 	ld	a, (de)
      0020AF 77                    7566 	ld	(hl), a
      0020B0 F8 0F                 7567 	ldhl	sp,#15
      0020B2 2A                    7568 	ld	a, (hl+)
      0020B3 5F                    7569 	ld	e, a
      0020B4 2A                    7570 	ld	a, (hl+)
      0020B5 57                    7571 	ld	d, a
      0020B6 2A                    7572 	ld	a,	(hl+)
      0020B7 66                    7573 	ld	h, (hl)
      0020B8 6F                    7574 	ld	l, a
      0020B9 7B                    7575 	ld	a, e
      0020BA 95                    7576 	sub	a, l
      0020BB 5F                    7577 	ld	e, a
      0020BC 7A                    7578 	ld	a, d
      0020BD 9C                    7579 	sbc	a, h
      0020BE F8 14                 7580 	ldhl	sp,	#20
      0020C0 32                    7581 	ld	(hl-), a
      0020C1 73                    7582 	ld	(hl), e
      0020C2 3A                    7583 	ld	a, (hl-)
      0020C3 2B                    7584 	dec	hl
      0020C4 77                    7585 	ld	(hl), a
      0020C5 F8 14                 7586 	ldhl	sp,	#20
      0020C7 3A                    7587 	ld	a, (hl-)
      0020C8 2B                    7588 	dec	hl
      0020C9 77                    7589 	ld	(hl), a
      0020CA CB 7E                 7590 	bit	7, (hl)
      0020CC 20 05                 7591 	jr	NZ, 00182$
      0020CE 23                    7592 	inc	hl
      0020CF 2A                    7593 	ld	a, (hl+)
      0020D0 5E                    7594 	ld	e, (hl)
      0020D1 18 13                 7595 	jr	00184$
      0020D3                       7596 00182$:
      0020D3 11 00 00              7597 	ld	de, #0x0000
      0020D6 F8 13                 7598 	ldhl	sp,	#19
      0020D8 2A                    7599 	ld	a,	(hl+)
      0020D9 66                    7600 	ld	h, (hl)
      0020DA 6F                    7601 	ld	l, a
      0020DB 7B                    7602 	ld	a, e
      0020DC 95                    7603 	sub	a, l
      0020DD 5F                    7604 	ld	e, a
      0020DE 7A                    7605 	ld	a, d
      0020DF 9C                    7606 	sbc	a, h
      0020E0 F8 12                 7607 	ldhl	sp,	#18
      0020E2 32                    7608 	ld	(hl-), a
      0020E3 73                    7609 	ld	(hl), e
      0020E4 2A                    7610 	ld	a, (hl+)
      0020E5 5E                    7611 	ld	e, (hl)
      0020E6                       7612 00184$:
      0020E6 81                    7613 	add	a, c
      0020E7 4F                    7614 	ld	c, a
      0020E8 7B                    7615 	ld	a, e
      0020E9 88                    7616 	adc	a, b
      0020EA 47                    7617 	ld	b, a
      0020EB 21r9Er08              7618 	ld	hl, #_SPLASHDROPOFF
      0020EE 5E                    7619 	ld	e, (hl)
      0020EF 1C                    7620 	inc	e
      0020F0 18 04                 7621 	jr	00369$
      0020F2                       7622 00368$:
      0020F2 CB 21                 7623 	sla	c
      0020F4 CB 10                 7624 	rl	b
      0020F6                       7625 00369$:
      0020F6 1D                    7626 	dec	e
      0020F7 20 F9                 7627 	jr	NZ,00368$
                                   7628 ;src/main.c:826: int16_t dmg = pptr->damage - dmgDropOff;
      0020F9 F8 0B                 7629 	ldhl	sp,#11
      0020FB 2A                    7630 	ld	a, (hl+)
      0020FC 5F                    7631 	ld	e, a
      0020FD 56                    7632 	ld	d, (hl)
      0020FE 1A                    7633 	ld	a, (de)
      0020FF 6F                    7634 	ld	l, a
                                   7635 ;	spillPairReg hl
                                   7636 ;	spillPairReg hl
      002100 13                    7637 	inc	de
      002101 1A                    7638 	ld	a, (de)
      002102 67                    7639 	ld	h, a
                                   7640 ;	spillPairReg hl
                                   7641 ;	spillPairReg hl
      002103 7D                    7642 	ld	a, l
      002104 91                    7643 	sub	a, c
      002105 4F                    7644 	ld	c, a
      002106 7C                    7645 	ld	a, h
      002107 98                    7646 	sbc	a, b
      002108 F8 11                 7647 	ldhl	sp,	#17
      00210A 71                    7648 	ld	(hl), c
      00210B 23                    7649 	inc	hl
                                   7650 ;src/main.c:827: if (dmg > 0) {
      00210C 32                    7651 	ld	(hl-), a
      00210D 2A                    7652 	ld	a, (hl+)
      00210E 4F                    7653 	ld	c, a
      00210F 46                    7654 	ld	b, (hl)
      002110 58                    7655 	ld	e, b
      002111 AF                    7656 	xor	a, a
      002112 57                    7657 	ld	d, a
      002113 B9                    7658 	cp	a, c
      002114 98                    7659 	sbc	a, b
      002115 CB 7B                 7660 	bit	7, e
      002117 28 07                 7661 	jr	Z, 00370$
      002119 CB 7A                 7662 	bit	7, d
      00211B 20 08                 7663 	jr	NZ, 00371$
      00211D BF                    7664 	cp	a, a
      00211E 18 05                 7665 	jr	00371$
      002120                       7666 00370$:
      002120 CB 7A                 7667 	bit	7, d
      002122 28 01                 7668 	jr	Z, 00371$
      002124 37                    7669 	scf
      002125                       7670 00371$:
      002125 30 53                 7671 	jr	NC, 00187$
                                   7672 ;src/main.c:828: enemies[k].hp -= dmg;
      002127 F8 0D                 7673 	ldhl	sp,#13
      002129 2A                    7674 	ld	a, (hl+)
      00212A 5F                    7675 	ld	e, a
      00212B 56                    7676 	ld	d, (hl)
      00212C 21 10 00              7677 	ld	hl, #0x0010
      00212F 19                    7678 	add	hl, de
      002130 E5                    7679 	push	hl
      002131 7D                    7680 	ld	a, l
      002132 F8 15                 7681 	ldhl	sp,	#21
      002134 77                    7682 	ld	(hl), a
      002135 E1                    7683 	pop	hl
      002136 7C                    7684 	ld	a, h
      002137 F8 14                 7685 	ldhl	sp,	#20
      002139 32                    7686 	ld	(hl-), a
      00213A 2A                    7687 	ld	a, (hl+)
      00213B 5F                    7688 	ld	e, a
      00213C 56                    7689 	ld	d, (hl)
      00213D 1A                    7690 	ld	a, (de)
      00213E F8 0F                 7691 	ldhl	sp,	#15
      002140 22                    7692 	ld	(hl+), a
      002141 13                    7693 	inc	de
      002142 1A                    7694 	ld	a, (de)
      002143 32                    7695 	ld	(hl-), a
      002144 2A                    7696 	ld	a, (hl+)
      002145 5F                    7697 	ld	e, a
      002146 2A                    7698 	ld	a, (hl+)
      002147 57                    7699 	ld	d, a
      002148 2A                    7700 	ld	a,	(hl+)
      002149 66                    7701 	ld	h, (hl)
      00214A 6F                    7702 	ld	l, a
      00214B 7B                    7703 	ld	a, e
      00214C 95                    7704 	sub	a, l
      00214D 5F                    7705 	ld	e, a
      00214E 7A                    7706 	ld	a, d
      00214F 9C                    7707 	sbc	a, h
      002150 47                    7708 	ld	b, a
      002151 4B                    7709 	ld	c, e
      002152 F8 13                 7710 	ldhl	sp,	#19
      002154 2A                    7711 	ld	a,	(hl+)
      002155 66                    7712 	ld	h, (hl)
      002156 6F                    7713 	ld	l, a
      002157 79                    7714 	ld	a, c
      002158 22                    7715 	ld	(hl+), a
      002159 70                    7716 	ld	(hl), b
                                   7717 ;src/main.c:829: if (enemies[k].hp <= 0) {
      00215A 58                    7718 	ld	e, b
      00215B AF                    7719 	xor	a, a
      00215C 57                    7720 	ld	d, a
      00215D B9                    7721 	cp	a, c
      00215E 98                    7722 	sbc	a, b
      00215F CB 7B                 7723 	bit	7, e
      002161 28 07                 7724 	jr	Z, 00372$
      002163 CB 7A                 7725 	bit	7, d
      002165 20 08                 7726 	jr	NZ, 00373$
      002167 BF                    7727 	cp	a, a
      002168 18 05                 7728 	jr	00373$
      00216A                       7729 00372$:
      00216A CB 7A                 7730 	bit	7, d
      00216C 28 01                 7731 	jr	Z, 00373$
      00216E 37                    7732 	scf
      00216F                       7733 00373$:
      00216F 38 09                 7734 	jr	C, 00187$
                                   7735 ;src/main.c:830: killEnemy(k);
      002171 F8 18                 7736 	ldhl	sp,	#24
      002173 7E                    7737 	ld	a, (hl)
      002174 F5                    7738 	push	af
      002175 33                    7739 	inc	sp
      002176 CDrBBr1C              7740 	call	_killEnemy
      002179 33                    7741 	inc	sp
      00217A                       7742 00187$:
                                   7743 ;src/main.c:824: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      00217A F8 18                 7744 	ldhl	sp,	#24
      00217C 34                    7745 	inc	(hl)
      00217D C3r47r20              7746 	jp	00186$
      002180                       7747 00119$:
                                   7748 ;src/main.c:838: eptr->hp -= pptr->damage;
      002180 D1                    7749 	pop	de
      002181 D5                    7750 	push	de
      002182 21 10 00              7751 	ld	hl, #0x0010
      002185 19                    7752 	add	hl, de
      002186 E5                    7753 	push	hl
      002187 7D                    7754 	ld	a, l
      002188 F8 13                 7755 	ldhl	sp,	#19
      00218A 77                    7756 	ld	(hl), a
      00218B E1                    7757 	pop	hl
      00218C 7C                    7758 	ld	a, h
      00218D F8 12                 7759 	ldhl	sp,	#18
      00218F 32                    7760 	ld	(hl-), a
      002190 2A                    7761 	ld	a, (hl+)
      002191 5F                    7762 	ld	e, a
      002192 2A                    7763 	ld	a, (hl+)
      002193 57                    7764 	ld	d, a
      002194 1A                    7765 	ld	a, (de)
      002195 4F                    7766 	ld	c, a
      002196 13                    7767 	inc	de
      002197 1A                    7768 	ld	a, (de)
      002198 47                    7769 	ld	b, a
      002199 2A                    7770 	ld	a, (hl+)
      00219A 5F                    7771 	ld	e, a
      00219B 56                    7772 	ld	d, (hl)
      00219C 1A                    7773 	ld	a, (de)
      00219D 6F                    7774 	ld	l, a
                                   7775 ;	spillPairReg hl
                                   7776 ;	spillPairReg hl
      00219E 13                    7777 	inc	de
      00219F 1A                    7778 	ld	a, (de)
      0021A0 67                    7779 	ld	h, a
                                   7780 ;	spillPairReg hl
                                   7781 ;	spillPairReg hl
      0021A1 79                    7782 	ld	a, c
      0021A2 95                    7783 	sub	a, l
      0021A3 4F                    7784 	ld	c, a
      0021A4 78                    7785 	ld	a, b
      0021A5 9C                    7786 	sbc	a, h
      0021A6 47                    7787 	ld	b, a
      0021A7 F8 11                 7788 	ldhl	sp,	#17
      0021A9 2A                    7789 	ld	a,	(hl+)
      0021AA 66                    7790 	ld	h, (hl)
      0021AB 6F                    7791 	ld	l, a
      0021AC 79                    7792 	ld	a, c
      0021AD 22                    7793 	ld	(hl+), a
      0021AE 70                    7794 	ld	(hl), b
                                   7795 ;src/main.c:840: if (eptr->hp <= 0) {
      0021AF 58                    7796 	ld	e, b
      0021B0 AF                    7797 	xor	a, a
      0021B1 57                    7798 	ld	d, a
      0021B2 B9                    7799 	cp	a, c
      0021B3 98                    7800 	sbc	a, b
      0021B4 CB 7B                 7801 	bit	7, e
      0021B6 28 07                 7802 	jr	Z, 00374$
      0021B8 CB 7A                 7803 	bit	7, d
      0021BA 20 08                 7804 	jr	NZ, 00375$
      0021BC BF                    7805 	cp	a, a
      0021BD 18 05                 7806 	jr	00375$
      0021BF                       7807 00374$:
      0021BF CB 7A                 7808 	bit	7, d
      0021C1 28 01                 7809 	jr	Z, 00375$
      0021C3 37                    7810 	scf
      0021C4                       7811 00375$:
      0021C4 38 09                 7812 	jr	C, 00120$
                                   7813 ;src/main.c:842: killEnemy(i);
      0021C6 F8 02                 7814 	ldhl	sp,	#2
      0021C8 7E                    7815 	ld	a, (hl)
      0021C9 F5                    7816 	push	af
      0021CA 33                    7817 	inc	sp
      0021CB CDrBBr1C              7818 	call	_killEnemy
      0021CE 33                    7819 	inc	sp
      0021CF                       7820 00120$:
                                   7821 ;src/main.c:847: initEnemies(0);
      0021CF AF                    7822 	xor	a, a
      0021D0 F5                    7823 	push	af
      0021D1 33                    7824 	inc	sp
      0021D2 CDrF4r0C              7825 	call	_initEnemies
      0021D5 33                    7826 	inc	sp
      0021D6                       7827 00132$:
                                   7828 ;src/main.c:854: j++;
      0021D6 F8 17                 7829 	ldhl	sp,	#23
      0021D8 34                    7830 	inc	(hl)
                                   7831 ;src/main.c:855: pptr++;
      0021D9 2B                    7832 	dec	hl
      0021DA 2B                    7833 	dec	hl
      0021DB 2A                    7834 	ld	a, (hl+)
      0021DC 5F                    7835 	ld	e, a
      0021DD 56                    7836 	ld	d, (hl)
      0021DE 21 0D 00              7837 	ld	hl, #0x000d
      0021E1 19                    7838 	add	hl, de
      0021E2 E5                    7839 	push	hl
      0021E3 7D                    7840 	ld	a, l
      0021E4 F8 17                 7841 	ldhl	sp,	#23
      0021E6 77                    7842 	ld	(hl), a
      0021E7 E1                    7843 	pop	hl
      0021E8 7C                    7844 	ld	a, h
      0021E9 F8 16                 7845 	ldhl	sp,	#22
      0021EB 77                    7846 	ld	(hl), a
      0021EC C3rEAr1E              7847 	jp	00133$
      0021EF                       7848 00137$:
                                   7849 ;src/main.c:859: if (enemyCollisionCount == 0) {
      0021EF FArA5r00              7850 	ld	a, (#_enemyCollisionCount)
      0021F2 B7                    7851 	or	a, a
      0021F3 20 09                 7852 	jr	NZ, 00140$
                                   7853 ;src/main.c:860: enemyCollisionCount = ENEMYCOUNT - 1;
      0021F5 FAr88r08              7854 	ld	a, (#_ENEMYCOUNT)
      0021F8 3D                    7855 	dec	a
      0021F9 EArA5r00              7856 	ld	(#_enemyCollisionCount),a
      0021FC 18 04                 7857 	jr	00188$
      0021FE                       7858 00140$:
                                   7859 ;src/main.c:863: enemyCollisionCount--;
      0021FE 21rA5r00              7860 	ld	hl, #_enemyCollisionCount
      002201 35                    7861 	dec	(hl)
      002202                       7862 00188$:
                                   7863 ;src/main.c:868: }
      002202 E8 19                 7864 	add	sp, #25
      002204 C9                    7865 	ret
                                   7866 ;src/main.c:871: void setGunIcon() {
                                   7867 ;	---------------------------------
                                   7868 ; Function setGunIcon
                                   7869 ; ---------------------------------
      002205                       7870 _setGunIcon::
                                   7871 ;src/main.c:873: if (currentGun == 0) {
      002205 FArA7r00              7872 	ld	a, (#_currentGun)
      002208 B7                    7873 	or	a, a
      002209 20 1B                 7874 	jr	NZ, 00102$
                                   7875 ;src/main.c:874: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      00220B 01rAEr00              7876 	ld	bc, #_gunMap+0
      00220E 79                    7877 	ld	a, c
      00220F 21rA6r00              7878 	ld	hl, #_gunLevel
      002212 86                    7879 	add	a, (hl)
      002213 4F                    7880 	ld	c, a
      002214 30 01                 7881 	jr	NC, 00111$
      002216 04                    7882 	inc	b
      002217                       7883 00111$:
      002217 C5                    7884 	push	bc
      002218 21 01 01              7885 	ld	hl, #0x101
      00221B E5                    7886 	push	hl
      00221C 21 0F 00              7887 	ld	hl, #0x0f
      00221F E5                    7888 	push	hl
      002220 CDr00r00              7889 	call	_set_win_tiles
      002223 E8 06                 7890 	add	sp, #6
      002225 C9                    7891 	ret
      002226                       7892 00102$:
                                   7893 ;src/main.c:877: set_win_tiles(15, 0,1,1,gunMap+2);
      002226 11rB0r00              7894 	ld	de, #(_gunMap + 2)
      002229 D5                    7895 	push	de
      00222A 21 01 01              7896 	ld	hl, #0x101
      00222D E5                    7897 	push	hl
      00222E 21 0F 00              7898 	ld	hl, #0x0f
      002231 E5                    7899 	push	hl
      002232 CDr00r00              7900 	call	_set_win_tiles
      002235 E8 06                 7901 	add	sp, #6
                                   7902 ;src/main.c:879: }
      002237 C9                    7903 	ret
                                   7904 ;src/main.c:889: void fire() {
                                   7905 ;	---------------------------------
                                   7906 ; Function fire
                                   7907 ; ---------------------------------
      002238                       7908 _fire::
      002238 E8 FB                 7909 	add	sp, #-5
                                   7910 ;src/main.c:891: oldestProjectile += 1;
      00223A 21r91r00              7911 	ld	hl, #_oldestProjectile
      00223D 34                    7912 	inc	(hl)
      00223E 7E                    7913 	ld	a, (hl)
                                   7914 ;src/main.c:892: if (oldestProjectile >= PROJECTILECOUNT) {
      00223F 21r99r08              7915 	ld	hl, #_PROJECTILECOUNT
      002242 4E                    7916 	ld	c, (hl)
      002243 21r91r00              7917 	ld	hl, #_oldestProjectile
      002246 7E                    7918 	ld	a, (hl)
      002247 91                    7919 	sub	a, c
      002248 38 02                 7920 	jr	C, 00102$
                                   7921 ;src/main.c:893: oldestProjectile = 0;
      00224A 36 00                 7922 	ld	(hl), #0x00
      00224C                       7923 00102$:
                                   7924 ;src/main.c:896: if (currentGun == 0) {
      00224C FArA7r00              7925 	ld	a, (#_currentGun)
      00224F B7                    7926 	or	a, a
      002250 20 3B                 7927 	jr	NZ, 00107$
                                   7928 ;src/main.c:898: projectiles[oldestProjectile] = singleGun;
      002252 21r91r00              7929 	ld	hl, #_oldestProjectile
      002255 4E                    7930 	ld	c, (hl)
      002256 06 00                 7931 	ld	b, #0x00
      002258 69                    7932 	ld	l, c
      002259 60                    7933 	ld	h, b
      00225A 29                    7934 	add	hl, hl
      00225B 09                    7935 	add	hl, bc
      00225C 29                    7936 	add	hl, hl
      00225D 29                    7937 	add	hl, hl
      00225E 09                    7938 	add	hl, bc
      00225F 4D                    7939 	ld	c, l
      002260 44                    7940 	ld	b, h
                                   7941 ;src/main.c:897: if (gunLevel == 0) {
      002261 FArA6r00              7942 	ld	a, (#_gunLevel)
      002264 B7                    7943 	or	a, a
      002265 20 14                 7944 	jr	NZ, 00104$
                                   7945 ;src/main.c:898: projectiles[oldestProjectile] = singleGun;
      002267 11r6Ar00              7946 	ld	de, #_singleGun+0
      00226A 21rB4r00              7947 	ld	hl, #_projectiles
      00226D 09                    7948 	add	hl, bc
      00226E 01 0D 00              7949 	ld	bc, #0x000d
      002271 C5                    7950 	push	bc
      002272 D5                    7951 	push	de
      002273 E5                    7952 	push	hl
      002274 CDr00r00              7953 	call	___memcpy
      002277 E8 06                 7954 	add	sp, #6
      002279 18 12                 7955 	jr	00107$
      00227B                       7956 00104$:
                                   7957 ;src/main.c:901: projectiles[oldestProjectile] = doubleGun;
      00227B 11r77r00              7958 	ld	de, #_doubleGun+0
      00227E 21rB4r00              7959 	ld	hl, #_projectiles
      002281 09                    7960 	add	hl, bc
      002282 01 0D 00              7961 	ld	bc, #0x000d
      002285 C5                    7962 	push	bc
      002286 D5                    7963 	push	de
      002287 E5                    7964 	push	hl
      002288 CDr00r00              7965 	call	___memcpy
      00228B E8 06                 7966 	add	sp, #6
      00228D                       7967 00107$:
                                   7968 ;src/main.c:904: if (currentGun == 1) {
      00228D FArA7r00              7969 	ld	a, (#_currentGun)
      002290 3D                    7970 	dec	a
      002291 20 46                 7971 	jr	NZ, 00113$
                                   7972 ;src/main.c:905: if (missiles == 0) {
      002293 FArA8r00              7973 	ld	a, (#_missiles)
      002296 B7                    7974 	or	a, a
      002297 20 0B                 7975 	jr	NZ, 00109$
                                   7976 ;src/main.c:906: currentGun = 0;
      002299 21rA7r00              7977 	ld	hl, #_currentGun
      00229C 36 00                 7978 	ld	(hl), #0x00
                                   7979 ;src/main.c:907: setGunIcon();
      00229E CDr05r22              7980 	call	_setGunIcon
                                   7981 ;src/main.c:908: return;
      0022A1 C3rDEr27              7982 	jp	00154$
      0022A4                       7983 00109$:
                                   7984 ;src/main.c:911: projectiles[oldestProjectile] = missile;
      0022A4 21r91r00              7985 	ld	hl, #_oldestProjectile
      0022A7 4E                    7986 	ld	c, (hl)
      0022A8 06 00                 7987 	ld	b, #0x00
      0022AA 69                    7988 	ld	l, c
      0022AB 60                    7989 	ld	h, b
      0022AC 29                    7990 	add	hl, hl
      0022AD 09                    7991 	add	hl, bc
      0022AE 29                    7992 	add	hl, hl
      0022AF 29                    7993 	add	hl, hl
      0022B0 09                    7994 	add	hl, bc
      0022B1 01rB4r00              7995 	ld	bc,#_projectiles
      0022B4 09                    7996 	add	hl,bc
      0022B5 11 0D 00              7997 	ld	de, #0x000d
      0022B8 D5                    7998 	push	de
      0022B9 11r84r00              7999 	ld	de, #_missile
      0022BC D5                    8000 	push	de
      0022BD E5                    8001 	push	hl
      0022BE CDr00r00              8002 	call	___memcpy
      0022C1 E8 06                 8003 	add	sp, #6
                                   8004 ;src/main.c:912: updateMissileCount(-1);
      0022C3 3E FF                 8005 	ld	a, #0xff
      0022C5 F5                    8006 	push	af
      0022C6 33                    8007 	inc	sp
      0022C7 CDrDAr09              8008 	call	_updateMissileCount
      0022CA 33                    8009 	inc	sp
                                   8010 ;src/main.c:914: if (missiles == 0) {
      0022CB FArA8r00              8011 	ld	a, (#_missiles)
      0022CE B7                    8012 	or	a, a
      0022CF 20 08                 8013 	jr	NZ, 00113$
                                   8014 ;src/main.c:915: currentGun = 0;
      0022D1 21rA7r00              8015 	ld	hl, #_currentGun
      0022D4 36 00                 8016 	ld	(hl), #0x00
                                   8017 ;src/main.c:916: setGunIcon();
      0022D6 CDr05r22              8018 	call	_setGunIcon
      0022D9                       8019 00113$:
                                   8020 ;src/main.c:919: projectiles[oldestProjectile].x = playerDrawX;
      0022D9 21r91r00              8021 	ld	hl, #_oldestProjectile
      0022DC 4E                    8022 	ld	c, (hl)
      0022DD 06 00                 8023 	ld	b, #0x00
      0022DF 69                    8024 	ld	l, c
      0022E0 60                    8025 	ld	h, b
      0022E1 29                    8026 	add	hl, hl
      0022E2 09                    8027 	add	hl, bc
      0022E3 29                    8028 	add	hl, hl
      0022E4 29                    8029 	add	hl, hl
      0022E5 09                    8030 	add	hl, bc
      0022E6 01rB4r00              8031 	ld	bc,#_projectiles
      0022E9 09                    8032 	add	hl,bc
      0022EA E5                    8033 	push	hl
      0022EB FAr9Br00              8034 	ld	a, (#_playerDrawX)
      0022EE E1                    8035 	pop	hl
      0022EF 0E 00                 8036 	ld	c, #0x00
      0022F1 22                    8037 	ld	(hl+), a
      0022F2 71                    8038 	ld	(hl), c
                                   8039 ;src/main.c:920: projectiles[oldestProjectile].y = playerDrawY;
      0022F3 21r91r00              8040 	ld	hl, #_oldestProjectile
      0022F6 4E                    8041 	ld	c, (hl)
      0022F7 06 00                 8042 	ld	b, #0x00
      0022F9 69                    8043 	ld	l, c
      0022FA 60                    8044 	ld	h, b
      0022FB 29                    8045 	add	hl, hl
      0022FC 09                    8046 	add	hl, bc
      0022FD 29                    8047 	add	hl, hl
      0022FE 29                    8048 	add	hl, hl
      0022FF 09                    8049 	add	hl, bc
      002300 01rB4r00              8050 	ld	bc,#_projectiles
      002303 09                    8051 	add	hl,bc
      002304 23                    8052 	inc	hl
      002305 23                    8053 	inc	hl
      002306 E5                    8054 	push	hl
      002307 FAr9Cr00              8055 	ld	a, (#_playerDrawY)
      00230A E1                    8056 	pop	hl
      00230B 0E 00                 8057 	ld	c, #0x00
      00230D 22                    8058 	ld	(hl+), a
      00230E 71                    8059 	ld	(hl), c
                                   8060 ;src/main.c:921: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      00230F 21r91r00              8061 	ld	hl, #_oldestProjectile
      002312 4E                    8062 	ld	c, (hl)
      002313 06 00                 8063 	ld	b, #0x00
      002315 69                    8064 	ld	l, c
      002316 60                    8065 	ld	h, b
      002317 29                    8066 	add	hl, hl
      002318 09                    8067 	add	hl, bc
      002319 29                    8068 	add	hl, hl
      00231A 29                    8069 	add	hl, hl
      00231B 09                    8070 	add	hl, bc
      00231C 01rB4r00              8071 	ld	bc,#_projectiles
      00231F 09                    8072 	add	hl,bc
      002320 5D                    8073 	ld	e, l
      002321 54                    8074 	ld	d, h
      002322 21 05 00              8075 	ld	hl, #0x0005
      002325 19                    8076 	add	hl, de
      002326 4D                    8077 	ld	c, l
      002327 44                    8078 	ld	b, h
      002328 21 07 00              8079 	ld	hl, #0x0007
      00232B 19                    8080 	add	hl, de
      00232C 7E                    8081 	ld	a, (hl)
      00232D C5                    8082 	push	bc
      00232E F5                    8083 	push	af
      00232F 33                    8084 	inc	sp
      002330 FAr93r00              8085 	ld	a, (#_xDir)
      002333 F5                    8086 	push	af
      002334 33                    8087 	inc	sp
      002335 CDr00r00              8088 	call	__muluschar
      002338 E1                    8089 	pop	hl
      002339 7B                    8090 	ld	a, e
      00233A C1                    8091 	pop	bc
      00233B 02                    8092 	ld	(bc), a
                                   8093 ;src/main.c:922: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      00233C 21r91r00              8094 	ld	hl, #_oldestProjectile
      00233F 4E                    8095 	ld	c, (hl)
      002340 06 00                 8096 	ld	b, #0x00
      002342 69                    8097 	ld	l, c
      002343 60                    8098 	ld	h, b
      002344 29                    8099 	add	hl, hl
      002345 09                    8100 	add	hl, bc
      002346 29                    8101 	add	hl, hl
      002347 29                    8102 	add	hl, hl
      002348 09                    8103 	add	hl, bc
      002349 01rB4r00              8104 	ld	bc,#_projectiles
      00234C 09                    8105 	add	hl,bc
      00234D 5D                    8106 	ld	e, l
      00234E 54                    8107 	ld	d, h
      00234F 21 06 00              8108 	ld	hl, #0x0006
      002352 19                    8109 	add	hl, de
      002353 4D                    8110 	ld	c, l
      002354 44                    8111 	ld	b, h
      002355 21 07 00              8112 	ld	hl, #0x0007
      002358 19                    8113 	add	hl, de
      002359 7E                    8114 	ld	a, (hl)
      00235A C5                    8115 	push	bc
      00235B F5                    8116 	push	af
      00235C 33                    8117 	inc	sp
      00235D FAr94r00              8118 	ld	a, (#_yDir)
      002360 F5                    8119 	push	af
      002361 33                    8120 	inc	sp
      002362 CDr00r00              8121 	call	__muluschar
      002365 E1                    8122 	pop	hl
      002366 7B                    8123 	ld	a, e
      002367 C1                    8124 	pop	bc
      002368 02                    8125 	ld	(bc), a
                                   8126 ;src/main.c:891: oldestProjectile += 1;
      002369 FAr91r00              8127 	ld	a, (#_oldestProjectile)
      00236C F8 04                 8128 	ldhl	sp,	#4
      00236E 77                    8129 	ld	(hl), a
                                   8130 ;src/main.c:898: projectiles[oldestProjectile] = singleGun;
      00236F 21r91r00              8131 	ld	hl, #_oldestProjectile
      002372 4E                    8132 	ld	c, (hl)
      002373 06 00                 8133 	ld	b, #0x00
      002375 69                    8134 	ld	l, c
      002376 60                    8135 	ld	h, b
      002377 29                    8136 	add	hl, hl
      002378 09                    8137 	add	hl, bc
      002379 29                    8138 	add	hl, hl
      00237A 29                    8139 	add	hl, hl
      00237B 09                    8140 	add	hl, bc
                                   8141 ;src/main.c:927: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00237C 01rB4r00              8142 	ld	bc,#_projectiles
      00237F 09                    8143 	add	hl,bc
      002380 4D                    8144 	ld	c, l
      002381 44                    8145 	ld	b, h
      002382 F8 04                 8146 	ldhl	sp,	#4
      002384 3A                    8147 	ld	a, (hl-)
      002385 C6 1E                 8148 	add	a, #0x1e
      002387 77                    8149 	ld	(hl), a
      002388 21 0C 00              8150 	ld	hl, #0x000c
      00238B 09                    8151 	add	hl, bc
      00238C 7E                    8152 	ld	a, (hl)
      00238D F8 04                 8153 	ldhl	sp,	#4
      00238F 77                    8154 	ld	(hl), a
                                   8155 ;src/main.c:926: if (yDir != 0 && xDir == 0) {
      002390 FAr94r00              8156 	ld	a, (#_yDir)
      002393 B7                    8157 	or	a, a
      002394 28 71                 8158 	jr	Z, 00140$
      002396 FAr93r00              8159 	ld	a, (#_xDir)
      002399 B7                    8160 	or	a, a
      00239A 20 6B                 8161 	jr	NZ, 00140$
                                   8162 ;src/main.c:927: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00239C F8 04                 8163 	ldhl	sp,	#4
      00239E 3A                    8164 	ld	a, (hl-)
      00239F 4F                    8165 	ld	c, a
                                   8166 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0023A0 6E                    8167 	ld	l, (hl)
                                   8168 ;	spillPairReg hl
                                   8169 ;	spillPairReg hl
      0023A1 26 00                 8170 	ld	h, #0x00
                                   8171 ;	spillPairReg hl
                                   8172 ;	spillPairReg hl
      0023A3 29                    8173 	add	hl, hl
      0023A4 29                    8174 	add	hl, hl
      0023A5 11r00r00              8175 	ld	de, #_shadow_OAM
      0023A8 19                    8176 	add	hl, de
      0023A9 23                    8177 	inc	hl
      0023AA 23                    8178 	inc	hl
      0023AB 71                    8179 	ld	(hl), c
                                   8180 ;src/main.c:891: oldestProjectile += 1;
      0023AC FAr91r00              8181 	ld	a, (#_oldestProjectile)
                                   8182 ;src/main.c:927: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0023AF C6 1E                 8183 	add	a, #0x1e
      0023B1 4F                    8184 	ld	c, a
                                   8185 ;src/main.c:928: if (yDir == 1) {
      0023B2 FAr94r00              8186 	ld	a, (#_yDir)
                                   8187 ;src/main.c:929: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   8188 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0023B5 3D                    8189 	dec	a
      0023B6 20 27                 8190 	jr	NZ, 00115$
      0023B8 67                    8191 	ld	h,a
                                   8192 ;	spillPairReg hl
                                   8193 ;	spillPairReg hl
      0023B9 69                    8194 	ld	l, c
      0023BA 29                    8195 	add	hl, hl
      0023BB 29                    8196 	add	hl, hl
      0023BC 11r00r00              8197 	ld	de, #_shadow_OAM
      0023BF 19                    8198 	add	hl, de
      0023C0 23                    8199 	inc	hl
      0023C1 23                    8200 	inc	hl
      0023C2 23                    8201 	inc	hl
      0023C3 36 40                 8202 	ld	(hl), #0x40
                                   8203 ;src/main.c:930: projectiles[oldestProjectile].offset = 4;
      0023C5 21r91r00              8204 	ld	hl, #_oldestProjectile
      0023C8 4E                    8205 	ld	c, (hl)
      0023C9 06 00                 8206 	ld	b, #0x00
      0023CB 69                    8207 	ld	l, c
      0023CC 60                    8208 	ld	h, b
      0023CD 29                    8209 	add	hl, hl
      0023CE 09                    8210 	add	hl, bc
      0023CF 29                    8211 	add	hl, hl
      0023D0 29                    8212 	add	hl, hl
      0023D1 09                    8213 	add	hl, bc
      0023D2 01rB4r00              8214 	ld	bc,#_projectiles
      0023D5 09                    8215 	add	hl,bc
      0023D6 01 04 00              8216 	ld	bc, #0x0004
      0023D9 09                    8217 	add	hl, bc
      0023DA 36 04                 8218 	ld	(hl), #0x04
      0023DC C3rB8r27              8219 	jp	00141$
      0023DF                       8220 00115$:
                                   8221 ;src/main.c:933: set_sprite_prop(30+oldestProjectile, 0); 
                                   8222 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0023DF 26 00                 8223 	ld	h, #0x00
                                   8224 ;	spillPairReg hl
                                   8225 ;	spillPairReg hl
      0023E1 69                    8226 	ld	l, c
      0023E2 29                    8227 	add	hl, hl
      0023E3 29                    8228 	add	hl, hl
      0023E4 11r00r00              8229 	ld	de, #_shadow_OAM
      0023E7 19                    8230 	add	hl, de
      0023E8 23                    8231 	inc	hl
      0023E9 23                    8232 	inc	hl
      0023EA 23                    8233 	inc	hl
      0023EB 36 00                 8234 	ld	(hl), #0x00
                                   8235 ;src/main.c:934: projectiles[oldestProjectile].offset = 12;
      0023ED 21r91r00              8236 	ld	hl, #_oldestProjectile
      0023F0 4E                    8237 	ld	c, (hl)
      0023F1 06 00                 8238 	ld	b, #0x00
      0023F3 69                    8239 	ld	l, c
      0023F4 60                    8240 	ld	h, b
      0023F5 29                    8241 	add	hl, hl
      0023F6 09                    8242 	add	hl, bc
      0023F7 29                    8243 	add	hl, hl
      0023F8 29                    8244 	add	hl, hl
      0023F9 09                    8245 	add	hl, bc
      0023FA 01rB4r00              8246 	ld	bc,#_projectiles
      0023FD 09                    8247 	add	hl,bc
      0023FE 01 04 00              8248 	ld	bc, #0x0004
      002401 09                    8249 	add	hl, bc
      002402 36 0C                 8250 	ld	(hl), #0x0c
      002404 C3rB8r27              8251 	jp	00141$
      002407                       8252 00140$:
                                   8253 ;src/main.c:938: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   8254 ;src/main.c:937: else if (xDir != 0 && yDir == 0) {
      002407 FAr93r00              8255 	ld	a, (#_xDir)
      00240A B7                    8256 	or	a, a
      00240B CAr51r25              8257 	jp	Z, 00136$
      00240E FAr94r00              8258 	ld	a, (#_yDir)
      002411 B7                    8259 	or	a, a
      002412 C2r51r25              8260 	jp	NZ, 00136$
                                   8261 ;src/main.c:938: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      002415 F8 04                 8262 	ldhl	sp,	#4
      002417 34                    8263 	inc	(hl)
      002418 34                    8264 	inc	(hl)
      002419 2B                    8265 	dec	hl
                                   8266 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00241A 3A                    8267 	ld	a, (hl-)
      00241B 22                    8268 	ld	(hl+), a
      00241C 36 00                 8269 	ld	(hl), #0x00
      00241E 3E 02                 8270 	ld	a, #0x02
      002420                       8271 00260$:
      002420 F8 02                 8272 	ldhl	sp,	#2
      002422 CB 26                 8273 	sla	(hl)
      002424 23                    8274 	inc	hl
      002425 CB 16                 8275 	rl	(hl)
      002427 3D                    8276 	dec	a
      002428 20 F6                 8277 	jr	NZ, 00260$
      00242A 2B                    8278 	dec	hl
      00242B 2A                    8279 	ld	a, (hl+)
      00242C 5F                    8280 	ld	e, a
      00242D 56                    8281 	ld	d, (hl)
      00242E 21r00r00              8282 	ld	hl, #_shadow_OAM
      002431 19                    8283 	add	hl, de
      002432 33                    8284 	inc	sp
      002433 33                    8285 	inc	sp
      002434 5D                    8286 	ld	e, l
      002435 54                    8287 	ld	d, h
      002436 D5                    8288 	push	de
      002437 21 02 00              8289 	ld	hl, #0x0002
      00243A 19                    8290 	add	hl, de
      00243B E5                    8291 	push	hl
      00243C 7D                    8292 	ld	a, l
      00243D F8 04                 8293 	ldhl	sp,	#4
      00243F 77                    8294 	ld	(hl), a
      002440 E1                    8295 	pop	hl
      002441 7C                    8296 	ld	a, h
      002442 F8 03                 8297 	ldhl	sp,	#3
      002444 32                    8298 	ld	(hl-), a
      002445 2A                    8299 	ld	a, (hl+)
      002446 5F                    8300 	ld	e, a
      002447 2A                    8301 	ld	a, (hl+)
      002448 57                    8302 	ld	d, a
      002449 7E                    8303 	ld	a, (hl)
      00244A 12                    8304 	ld	(de), a
                                   8305 ;src/main.c:891: oldestProjectile += 1;
      00244B FAr91r00              8306 	ld	a, (#_oldestProjectile)
      00244E F8 04                 8307 	ldhl	sp,	#4
      002450 77                    8308 	ld	(hl), a
                                   8309 ;src/main.c:927: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002451 7E                    8310 	ld	a, (hl)
      002452 C6 1E                 8311 	add	a, #0x1e
      002454 77                    8312 	ld	(hl), a
                                   8313 ;src/main.c:939: if (xDir == 1) {
      002455 FAr93r00              8314 	ld	a, (#_xDir)
      002458 3D                    8315 	dec	a
      002459 20 7B                 8316 	jr	NZ, 00118$
                                   8317 ;src/main.c:940: set_sprite_prop(30+oldestProjectile, 0);
      00245B F8 04                 8318 	ldhl	sp,	#4
                                   8319 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00245D 3A                    8320 	ld	a, (hl-)
      00245E 22                    8321 	ld	(hl+), a
      00245F 36 00                 8322 	ld	(hl), #0x00
      002461 3E 02                 8323 	ld	a, #0x02
      002463                       8324 00263$:
      002463 F8 03                 8325 	ldhl	sp,	#3
      002465 CB 26                 8326 	sla	(hl)
      002467 23                    8327 	inc	hl
      002468 CB 16                 8328 	rl	(hl)
      00246A 3D                    8329 	dec	a
      00246B 20 F6                 8330 	jr	NZ, 00263$
      00246D 2B                    8331 	dec	hl
      00246E 2A                    8332 	ld	a, (hl+)
      00246F 5F                    8333 	ld	e, a
      002470 56                    8334 	ld	d, (hl)
      002471 21r00r00              8335 	ld	hl, #_shadow_OAM
      002474 19                    8336 	add	hl, de
      002475 E5                    8337 	push	hl
      002476 7D                    8338 	ld	a, l
      002477 F8 03                 8339 	ldhl	sp,	#3
      002479 77                    8340 	ld	(hl), a
      00247A E1                    8341 	pop	hl
      00247B 7C                    8342 	ld	a, h
      00247C F8 02                 8343 	ldhl	sp,	#2
      00247E 32                    8344 	ld	(hl-), a
      00247F 2A                    8345 	ld	a, (hl+)
      002480 5F                    8346 	ld	e, a
      002481 56                    8347 	ld	d, (hl)
      002482 21 03 00              8348 	ld	hl, #0x0003
      002485 19                    8349 	add	hl, de
      002486 E5                    8350 	push	hl
      002487 7D                    8351 	ld	a, l
      002488 F8 05                 8352 	ldhl	sp,	#5
      00248A 77                    8353 	ld	(hl), a
      00248B E1                    8354 	pop	hl
      00248C 7C                    8355 	ld	a, h
      00248D F8 04                 8356 	ldhl	sp,	#4
      00248F 32                    8357 	ld	(hl-), a
      002490 2A                    8358 	ld	a,	(hl+)
      002491 66                    8359 	ld	h, (hl)
      002492 6F                    8360 	ld	l, a
      002493 36 00                 8361 	ld	(hl), #0x00
                                   8362 ;src/main.c:941: projectiles[oldestProjectile].offset = 12;
      002495 21r91r00              8363 	ld	hl, #_oldestProjectile
      002498 4E                    8364 	ld	c, (hl)
      002499 06 00                 8365 	ld	b, #0x00
      00249B 69                    8366 	ld	l, c
      00249C 60                    8367 	ld	h, b
      00249D 29                    8368 	add	hl, hl
      00249E 09                    8369 	add	hl, bc
      00249F 29                    8370 	add	hl, hl
      0024A0 29                    8371 	add	hl, hl
      0024A1 09                    8372 	add	hl, bc
      0024A2 E5                    8373 	push	hl
      0024A3 7D                    8374 	ld	a, l
      0024A4 F8 05                 8375 	ldhl	sp,	#5
      0024A6 77                    8376 	ld	(hl), a
      0024A7 E1                    8377 	pop	hl
      0024A8 7C                    8378 	ld	a, h
      0024A9 F8 04                 8379 	ldhl	sp,	#4
      0024AB 32                    8380 	ld	(hl-), a
      0024AC 2A                    8381 	ld	a, (hl+)
      0024AD 5F                    8382 	ld	e, a
      0024AE 56                    8383 	ld	d, (hl)
      0024AF 21rB4r00              8384 	ld	hl, #_projectiles
      0024B2 19                    8385 	add	hl, de
      0024B3 E5                    8386 	push	hl
      0024B4 7D                    8387 	ld	a, l
      0024B5 F8 03                 8388 	ldhl	sp,	#3
      0024B7 77                    8389 	ld	(hl), a
      0024B8 E1                    8390 	pop	hl
      0024B9 7C                    8391 	ld	a, h
      0024BA F8 02                 8392 	ldhl	sp,	#2
      0024BC 32                    8393 	ld	(hl-), a
      0024BD 2A                    8394 	ld	a, (hl+)
      0024BE 5F                    8395 	ld	e, a
      0024BF 56                    8396 	ld	d, (hl)
      0024C0 21 04 00              8397 	ld	hl, #0x0004
      0024C3 19                    8398 	add	hl, de
      0024C4 E5                    8399 	push	hl
      0024C5 7D                    8400 	ld	a, l
      0024C6 F8 05                 8401 	ldhl	sp,	#5
      0024C8 77                    8402 	ld	(hl), a
      0024C9 E1                    8403 	pop	hl
      0024CA 7C                    8404 	ld	a, h
      0024CB F8 04                 8405 	ldhl	sp,	#4
      0024CD 32                    8406 	ld	(hl-), a
      0024CE 2A                    8407 	ld	a,	(hl+)
      0024CF 66                    8408 	ld	h, (hl)
      0024D0 6F                    8409 	ld	l, a
      0024D1 36 0C                 8410 	ld	(hl), #0x0c
      0024D3 C3rB8r27              8411 	jp	00141$
      0024D6                       8412 00118$:
                                   8413 ;src/main.c:944: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      0024D6 F8 04                 8414 	ldhl	sp,	#4
                                   8415 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0024D8 3A                    8416 	ld	a, (hl-)
      0024D9 22                    8417 	ld	(hl+), a
      0024DA 36 00                 8418 	ld	(hl), #0x00
      0024DC 3E 02                 8419 	ld	a, #0x02
      0024DE                       8420 00264$:
      0024DE F8 03                 8421 	ldhl	sp,	#3
      0024E0 CB 26                 8422 	sla	(hl)
      0024E2 23                    8423 	inc	hl
      0024E3 CB 16                 8424 	rl	(hl)
      0024E5 3D                    8425 	dec	a
      0024E6 20 F6                 8426 	jr	NZ, 00264$
      0024E8 2B                    8427 	dec	hl
      0024E9 2A                    8428 	ld	a, (hl+)
      0024EA 5F                    8429 	ld	e, a
      0024EB 56                    8430 	ld	d, (hl)
      0024EC 21r00r00              8431 	ld	hl, #_shadow_OAM
      0024EF 19                    8432 	add	hl, de
      0024F0 E5                    8433 	push	hl
      0024F1 7D                    8434 	ld	a, l
      0024F2 F8 03                 8435 	ldhl	sp,	#3
      0024F4 77                    8436 	ld	(hl), a
      0024F5 E1                    8437 	pop	hl
      0024F6 7C                    8438 	ld	a, h
      0024F7 F8 02                 8439 	ldhl	sp,	#2
      0024F9 32                    8440 	ld	(hl-), a
      0024FA 2A                    8441 	ld	a, (hl+)
      0024FB 5F                    8442 	ld	e, a
      0024FC 56                    8443 	ld	d, (hl)
      0024FD 21 03 00              8444 	ld	hl, #0x0003
      002500 19                    8445 	add	hl, de
      002501 E5                    8446 	push	hl
      002502 7D                    8447 	ld	a, l
      002503 F8 05                 8448 	ldhl	sp,	#5
      002505 77                    8449 	ld	(hl), a
      002506 E1                    8450 	pop	hl
      002507 7C                    8451 	ld	a, h
      002508 F8 04                 8452 	ldhl	sp,	#4
      00250A 32                    8453 	ld	(hl-), a
      00250B 2A                    8454 	ld	a,	(hl+)
      00250C 66                    8455 	ld	h, (hl)
      00250D 6F                    8456 	ld	l, a
      00250E 36 20                 8457 	ld	(hl), #0x20
                                   8458 ;src/main.c:945: projectiles[oldestProjectile].offset = 12;
      002510 21r91r00              8459 	ld	hl, #_oldestProjectile
      002513 4E                    8460 	ld	c, (hl)
      002514 06 00                 8461 	ld	b, #0x00
      002516 69                    8462 	ld	l, c
      002517 60                    8463 	ld	h, b
      002518 29                    8464 	add	hl, hl
      002519 09                    8465 	add	hl, bc
      00251A 29                    8466 	add	hl, hl
      00251B 29                    8467 	add	hl, hl
      00251C 09                    8468 	add	hl, bc
      00251D E5                    8469 	push	hl
      00251E 7D                    8470 	ld	a, l
      00251F F8 05                 8471 	ldhl	sp,	#5
      002521 77                    8472 	ld	(hl), a
      002522 E1                    8473 	pop	hl
      002523 7C                    8474 	ld	a, h
      002524 F8 04                 8475 	ldhl	sp,	#4
      002526 32                    8476 	ld	(hl-), a
      002527 2A                    8477 	ld	a, (hl+)
      002528 5F                    8478 	ld	e, a
      002529 56                    8479 	ld	d, (hl)
      00252A 21rB4r00              8480 	ld	hl, #_projectiles
      00252D 19                    8481 	add	hl, de
      00252E E5                    8482 	push	hl
      00252F 7D                    8483 	ld	a, l
      002530 F8 03                 8484 	ldhl	sp,	#3
      002532 77                    8485 	ld	(hl), a
      002533 E1                    8486 	pop	hl
      002534 7C                    8487 	ld	a, h
      002535 F8 02                 8488 	ldhl	sp,	#2
      002537 32                    8489 	ld	(hl-), a
      002538 2A                    8490 	ld	a, (hl+)
      002539 5F                    8491 	ld	e, a
      00253A 56                    8492 	ld	d, (hl)
      00253B 21 04 00              8493 	ld	hl, #0x0004
      00253E 19                    8494 	add	hl, de
      00253F E5                    8495 	push	hl
      002540 7D                    8496 	ld	a, l
      002541 F8 05                 8497 	ldhl	sp,	#5
      002543 77                    8498 	ld	(hl), a
      002544 E1                    8499 	pop	hl
      002545 7C                    8500 	ld	a, h
      002546 F8 04                 8501 	ldhl	sp,	#4
      002548 32                    8502 	ld	(hl-), a
      002549 2A                    8503 	ld	a,	(hl+)
      00254A 66                    8504 	ld	h, (hl)
      00254B 6F                    8505 	ld	l, a
      00254C 36 0C                 8506 	ld	(hl), #0x0c
      00254E C3rB8r27              8507 	jp	00141$
      002551                       8508 00136$:
                                   8509 ;src/main.c:949: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      002551 F8 04                 8510 	ldhl	sp,	#4
      002553 7E                    8511 	ld	a, (hl)
      002554 C6 04                 8512 	add	a, #0x04
      002556 F8 00                 8513 	ldhl	sp,	#0
      002558 77                    8514 	ld	(hl), a
      002559 F8 03                 8515 	ldhl	sp,	#3
                                   8516 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00255B 7E                    8517 	ld	a, (hl)
      00255C 22                    8518 	ld	(hl+), a
      00255D 36 00                 8519 	ld	(hl), #0x00
      00255F 3E 02                 8520 	ld	a, #0x02
      002561                       8521 00265$:
      002561 F8 03                 8522 	ldhl	sp,	#3
      002563 CB 26                 8523 	sla	(hl)
      002565 23                    8524 	inc	hl
      002566 CB 16                 8525 	rl	(hl)
      002568 3D                    8526 	dec	a
      002569 20 F6                 8527 	jr	NZ, 00265$
      00256B 2B                    8528 	dec	hl
      00256C 2A                    8529 	ld	a, (hl+)
      00256D 5F                    8530 	ld	e, a
      00256E 56                    8531 	ld	d, (hl)
      00256F 21r00r00              8532 	ld	hl, #_shadow_OAM
      002572 19                    8533 	add	hl, de
      002573 E5                    8534 	push	hl
      002574 7D                    8535 	ld	a, l
      002575 F8 03                 8536 	ldhl	sp,	#3
      002577 77                    8537 	ld	(hl), a
      002578 E1                    8538 	pop	hl
      002579 7C                    8539 	ld	a, h
      00257A F8 02                 8540 	ldhl	sp,	#2
      00257C 32                    8541 	ld	(hl-), a
      00257D 2A                    8542 	ld	a, (hl+)
      00257E 5F                    8543 	ld	e, a
      00257F 56                    8544 	ld	d, (hl)
      002580 21 02 00              8545 	ld	hl, #0x0002
      002583 19                    8546 	add	hl, de
      002584 E5                    8547 	push	hl
      002585 7D                    8548 	ld	a, l
      002586 F8 05                 8549 	ldhl	sp,	#5
      002588 77                    8550 	ld	(hl), a
      002589 E1                    8551 	pop	hl
      00258A 7C                    8552 	ld	a, h
      00258B F8 04                 8553 	ldhl	sp,	#4
      00258D 32                    8554 	ld	(hl-), a
      00258E 2A                    8555 	ld	a, (hl+)
      00258F 5F                    8556 	ld	e, a
      002590 56                    8557 	ld	d, (hl)
      002591 F8 00                 8558 	ldhl	sp,	#0
      002593 7E                    8559 	ld	a, (hl)
      002594 12                    8560 	ld	(de), a
                                   8561 ;src/main.c:950: if (xDir == 1 && yDir == -1) {
      002595 FAr93r00              8562 	ld	a, (#_xDir)
      002598 3D                    8563 	dec	a
      002599 3E 01                 8564 	ld	a, #0x01
      00259B 28 01                 8565 	jr	Z, 00267$
      00259D AF                    8566 	xor	a, a
      00259E                       8567 00267$:
      00259E F8 04                 8568 	ldhl	sp,	#4
      0025A0 77                    8569 	ld	(hl), a
                                   8570 ;src/main.c:891: oldestProjectile += 1;
      0025A1 21r91r00              8571 	ld	hl, #_oldestProjectile
      0025A4 4E                    8572 	ld	c, (hl)
                                   8573 ;src/main.c:950: if (xDir == 1 && yDir == -1) {
      0025A5 FAr94r00              8574 	ld	a, (#_yDir)
      0025A8 3C                    8575 	inc	a
      0025A9 3E 01                 8576 	ld	a, #0x01
      0025AB 28 01                 8577 	jr	Z, 00269$
      0025AD AF                    8578 	xor	a, a
      0025AE                       8579 00269$:
      0025AE F8 01                 8580 	ldhl	sp,	#1
                                   8581 ;src/main.c:927: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0025B0 22                    8582 	ld	(hl+), a
      0025B1 79                    8583 	ld	a, c
      0025B2 C6 1E                 8584 	add	a, #0x1e
                                   8585 ;src/main.c:950: if (xDir == 1 && yDir == -1) {
      0025B4 22                    8586 	ld	(hl+), a
      0025B5 23                    8587 	inc	hl
      0025B6 7E                    8588 	ld	a, (hl)
      0025B7 B7                    8589 	or	a, a
      0025B8 CAr3Br26              8590 	jp	Z, 00132$
      0025BB F8 01                 8591 	ldhl	sp,	#1
      0025BD 7E                    8592 	ld	a, (hl)
      0025BE B7                    8593 	or	a, a
      0025BF 28 7A                 8594 	jr	Z, 00132$
                                   8595 ;src/main.c:951: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      0025C1 23                    8596 	inc	hl
                                   8597 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0025C2 2A                    8598 	ld	a, (hl+)
      0025C3 22                    8599 	ld	(hl+), a
      0025C4 36 00                 8600 	ld	(hl), #0x00
      0025C6 3E 02                 8601 	ld	a, #0x02
      0025C8                       8602 00270$:
      0025C8 F8 03                 8603 	ldhl	sp,	#3
      0025CA CB 26                 8604 	sla	(hl)
      0025CC 23                    8605 	inc	hl
      0025CD CB 16                 8606 	rl	(hl)
      0025CF 3D                    8607 	dec	a
      0025D0 20 F6                 8608 	jr	NZ, 00270$
      0025D2 2B                    8609 	dec	hl
      0025D3 2A                    8610 	ld	a, (hl+)
      0025D4 5F                    8611 	ld	e, a
      0025D5 56                    8612 	ld	d, (hl)
      0025D6 21r00r00              8613 	ld	hl, #_shadow_OAM
      0025D9 19                    8614 	add	hl, de
      0025DA E5                    8615 	push	hl
      0025DB 7D                    8616 	ld	a, l
      0025DC F8 03                 8617 	ldhl	sp,	#3
      0025DE 77                    8618 	ld	(hl), a
      0025DF E1                    8619 	pop	hl
      0025E0 7C                    8620 	ld	a, h
      0025E1 F8 02                 8621 	ldhl	sp,	#2
      0025E3 32                    8622 	ld	(hl-), a
      0025E4 2A                    8623 	ld	a, (hl+)
      0025E5 5F                    8624 	ld	e, a
      0025E6 56                    8625 	ld	d, (hl)
      0025E7 21 03 00              8626 	ld	hl, #0x0003
      0025EA 19                    8627 	add	hl, de
      0025EB E5                    8628 	push	hl
      0025EC 7D                    8629 	ld	a, l
      0025ED F8 05                 8630 	ldhl	sp,	#5
      0025EF 77                    8631 	ld	(hl), a
      0025F0 E1                    8632 	pop	hl
      0025F1 7C                    8633 	ld	a, h
      0025F2 F8 04                 8634 	ldhl	sp,	#4
      0025F4 32                    8635 	ld	(hl-), a
      0025F5 2A                    8636 	ld	a,	(hl+)
      0025F6 66                    8637 	ld	h, (hl)
      0025F7 6F                    8638 	ld	l, a
      0025F8 36 00                 8639 	ld	(hl), #0x00
                                   8640 ;src/main.c:952: projectiles[oldestProjectile].offset = 12;
      0025FA 21r91r00              8641 	ld	hl, #_oldestProjectile
      0025FD 4E                    8642 	ld	c, (hl)
      0025FE 06 00                 8643 	ld	b, #0x00
      002600 69                    8644 	ld	l, c
      002601 60                    8645 	ld	h, b
      002602 29                    8646 	add	hl, hl
      002603 09                    8647 	add	hl, bc
      002604 29                    8648 	add	hl, hl
      002605 29                    8649 	add	hl, hl
      002606 09                    8650 	add	hl, bc
      002607 E5                    8651 	push	hl
      002608 7D                    8652 	ld	a, l
      002609 F8 05                 8653 	ldhl	sp,	#5
      00260B 77                    8654 	ld	(hl), a
      00260C E1                    8655 	pop	hl
      00260D 7C                    8656 	ld	a, h
      00260E F8 04                 8657 	ldhl	sp,	#4
      002610 32                    8658 	ld	(hl-), a
      002611 2A                    8659 	ld	a, (hl+)
      002612 5F                    8660 	ld	e, a
      002613 56                    8661 	ld	d, (hl)
      002614 21rB4r00              8662 	ld	hl, #_projectiles
      002617 19                    8663 	add	hl, de
      002618 E5                    8664 	push	hl
      002619 7D                    8665 	ld	a, l
      00261A F8 03                 8666 	ldhl	sp,	#3
      00261C 77                    8667 	ld	(hl), a
      00261D E1                    8668 	pop	hl
      00261E 7C                    8669 	ld	a, h
      00261F F8 02                 8670 	ldhl	sp,	#2
      002621 32                    8671 	ld	(hl-), a
      002622 2A                    8672 	ld	a, (hl+)
      002623 5F                    8673 	ld	e, a
      002624 56                    8674 	ld	d, (hl)
      002625 21 04 00              8675 	ld	hl, #0x0004
      002628 19                    8676 	add	hl, de
      002629 E5                    8677 	push	hl
      00262A 7D                    8678 	ld	a, l
      00262B F8 05                 8679 	ldhl	sp,	#5
      00262D 77                    8680 	ld	(hl), a
      00262E E1                    8681 	pop	hl
      00262F 7C                    8682 	ld	a, h
      002630 F8 04                 8683 	ldhl	sp,	#4
      002632 32                    8684 	ld	(hl-), a
      002633 2A                    8685 	ld	a,	(hl+)
      002634 66                    8686 	ld	h, (hl)
      002635 6F                    8687 	ld	l, a
      002636 36 0C                 8688 	ld	(hl), #0x0c
      002638 C3rB8r27              8689 	jp	00141$
      00263B                       8690 00132$:
                                   8691 ;src/main.c:928: if (yDir == 1) {
      00263B FAr94r00              8692 	ld	a, (#_yDir)
      00263E 3D                    8693 	dec	a
      00263F 3E 01                 8694 	ld	a, #0x01
      002641 28 01                 8695 	jr	Z, 00272$
      002643 AF                    8696 	xor	a, a
      002644                       8697 00272$:
      002644 F8 03                 8698 	ldhl	sp,	#3
                                   8699 ;src/main.c:954: else if (xDir == 1 && yDir == 1) {
      002646 22                    8700 	ld	(hl+), a
      002647 7E                    8701 	ld	a, (hl)
      002648 B7                    8702 	or	a, a
      002649 CArCBr26              8703 	jp	Z, 00128$
      00264C 2B                    8704 	dec	hl
      00264D 7E                    8705 	ld	a, (hl)
      00264E B7                    8706 	or	a, a
      00264F 28 7A                 8707 	jr	Z, 00128$
                                   8708 ;src/main.c:955: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      002651 2B                    8709 	dec	hl
                                   8710 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002652 2A                    8711 	ld	a, (hl+)
      002653 22                    8712 	ld	(hl+), a
      002654 36 00                 8713 	ld	(hl), #0x00
      002656 3E 02                 8714 	ld	a, #0x02
      002658                       8715 00273$:
      002658 F8 03                 8716 	ldhl	sp,	#3
      00265A CB 26                 8717 	sla	(hl)
      00265C 23                    8718 	inc	hl
      00265D CB 16                 8719 	rl	(hl)
      00265F 3D                    8720 	dec	a
      002660 20 F6                 8721 	jr	NZ, 00273$
      002662 2B                    8722 	dec	hl
      002663 2A                    8723 	ld	a, (hl+)
      002664 5F                    8724 	ld	e, a
      002665 56                    8725 	ld	d, (hl)
      002666 21r00r00              8726 	ld	hl, #_shadow_OAM
      002669 19                    8727 	add	hl, de
      00266A E5                    8728 	push	hl
      00266B 7D                    8729 	ld	a, l
      00266C F8 03                 8730 	ldhl	sp,	#3
      00266E 77                    8731 	ld	(hl), a
      00266F E1                    8732 	pop	hl
      002670 7C                    8733 	ld	a, h
      002671 F8 02                 8734 	ldhl	sp,	#2
      002673 32                    8735 	ld	(hl-), a
      002674 2A                    8736 	ld	a, (hl+)
      002675 5F                    8737 	ld	e, a
      002676 56                    8738 	ld	d, (hl)
      002677 21 03 00              8739 	ld	hl, #0x0003
      00267A 19                    8740 	add	hl, de
      00267B E5                    8741 	push	hl
      00267C 7D                    8742 	ld	a, l
      00267D F8 05                 8743 	ldhl	sp,	#5
      00267F 77                    8744 	ld	(hl), a
      002680 E1                    8745 	pop	hl
      002681 7C                    8746 	ld	a, h
      002682 F8 04                 8747 	ldhl	sp,	#4
      002684 32                    8748 	ld	(hl-), a
      002685 2A                    8749 	ld	a,	(hl+)
      002686 66                    8750 	ld	h, (hl)
      002687 6F                    8751 	ld	l, a
      002688 36 40                 8752 	ld	(hl), #0x40
                                   8753 ;src/main.c:956: projectiles[oldestProjectile].offset = 4;
      00268A 21r91r00              8754 	ld	hl, #_oldestProjectile
      00268D 4E                    8755 	ld	c, (hl)
      00268E 06 00                 8756 	ld	b, #0x00
      002690 69                    8757 	ld	l, c
      002691 60                    8758 	ld	h, b
      002692 29                    8759 	add	hl, hl
      002693 09                    8760 	add	hl, bc
      002694 29                    8761 	add	hl, hl
      002695 29                    8762 	add	hl, hl
      002696 09                    8763 	add	hl, bc
      002697 E5                    8764 	push	hl
      002698 7D                    8765 	ld	a, l
      002699 F8 05                 8766 	ldhl	sp,	#5
      00269B 77                    8767 	ld	(hl), a
      00269C E1                    8768 	pop	hl
      00269D 7C                    8769 	ld	a, h
      00269E F8 04                 8770 	ldhl	sp,	#4
      0026A0 32                    8771 	ld	(hl-), a
      0026A1 2A                    8772 	ld	a, (hl+)
      0026A2 5F                    8773 	ld	e, a
      0026A3 56                    8774 	ld	d, (hl)
      0026A4 21rB4r00              8775 	ld	hl, #_projectiles
      0026A7 19                    8776 	add	hl, de
      0026A8 E5                    8777 	push	hl
      0026A9 7D                    8778 	ld	a, l
      0026AA F8 03                 8779 	ldhl	sp,	#3
      0026AC 77                    8780 	ld	(hl), a
      0026AD E1                    8781 	pop	hl
      0026AE 7C                    8782 	ld	a, h
      0026AF F8 02                 8783 	ldhl	sp,	#2
      0026B1 32                    8784 	ld	(hl-), a
      0026B2 2A                    8785 	ld	a, (hl+)
      0026B3 5F                    8786 	ld	e, a
      0026B4 56                    8787 	ld	d, (hl)
      0026B5 21 04 00              8788 	ld	hl, #0x0004
      0026B8 19                    8789 	add	hl, de
      0026B9 E5                    8790 	push	hl
      0026BA 7D                    8791 	ld	a, l
      0026BB F8 05                 8792 	ldhl	sp,	#5
      0026BD 77                    8793 	ld	(hl), a
      0026BE E1                    8794 	pop	hl
      0026BF 7C                    8795 	ld	a, h
      0026C0 F8 04                 8796 	ldhl	sp,	#4
      0026C2 32                    8797 	ld	(hl-), a
      0026C3 2A                    8798 	ld	a,	(hl+)
      0026C4 66                    8799 	ld	h, (hl)
      0026C5 6F                    8800 	ld	l, a
      0026C6 36 04                 8801 	ld	(hl), #0x04
      0026C8 C3rB8r27              8802 	jp	00141$
      0026CB                       8803 00128$:
                                   8804 ;src/main.c:958: else if (xDir == -1 && yDir == 1) {
      0026CB FAr93r00              8805 	ld	a, (#_xDir)
      0026CE 3C                    8806 	inc	a
      0026CF 3E 01                 8807 	ld	a, #0x01
      0026D1 28 01                 8808 	jr	Z, 00275$
      0026D3 AF                    8809 	xor	a, a
      0026D4                       8810 00275$:
      0026D4 F8 04                 8811 	ldhl	sp,	#4
      0026D6 77                    8812 	ld	(hl), a
      0026D7 7E                    8813 	ld	a, (hl)
      0026D8 B7                    8814 	or	a, a
      0026D9 CAr5Ar27              8815 	jp	Z, 00124$
      0026DC 2B                    8816 	dec	hl
      0026DD 7E                    8817 	ld	a, (hl)
      0026DE B7                    8818 	or	a, a
      0026DF 28 79                 8819 	jr	Z, 00124$
                                   8820 ;src/main.c:959: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      0026E1 2B                    8821 	dec	hl
                                   8822 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0026E2 2A                    8823 	ld	a, (hl+)
      0026E3 22                    8824 	ld	(hl+), a
      0026E4 36 00                 8825 	ld	(hl), #0x00
      0026E6 3E 02                 8826 	ld	a, #0x02
      0026E8                       8827 00276$:
      0026E8 F8 03                 8828 	ldhl	sp,	#3
      0026EA CB 26                 8829 	sla	(hl)
      0026EC 23                    8830 	inc	hl
      0026ED CB 16                 8831 	rl	(hl)
      0026EF 3D                    8832 	dec	a
      0026F0 20 F6                 8833 	jr	NZ, 00276$
      0026F2 2B                    8834 	dec	hl
      0026F3 2A                    8835 	ld	a, (hl+)
      0026F4 5F                    8836 	ld	e, a
      0026F5 56                    8837 	ld	d, (hl)
      0026F6 21r00r00              8838 	ld	hl, #_shadow_OAM
      0026F9 19                    8839 	add	hl, de
      0026FA E5                    8840 	push	hl
      0026FB 7D                    8841 	ld	a, l
      0026FC F8 03                 8842 	ldhl	sp,	#3
      0026FE 77                    8843 	ld	(hl), a
      0026FF E1                    8844 	pop	hl
      002700 7C                    8845 	ld	a, h
      002701 F8 02                 8846 	ldhl	sp,	#2
      002703 32                    8847 	ld	(hl-), a
      002704 2A                    8848 	ld	a, (hl+)
      002705 5F                    8849 	ld	e, a
      002706 56                    8850 	ld	d, (hl)
      002707 21 03 00              8851 	ld	hl, #0x0003
      00270A 19                    8852 	add	hl, de
      00270B E5                    8853 	push	hl
      00270C 7D                    8854 	ld	a, l
      00270D F8 05                 8855 	ldhl	sp,	#5
      00270F 77                    8856 	ld	(hl), a
      002710 E1                    8857 	pop	hl
      002711 7C                    8858 	ld	a, h
      002712 F8 04                 8859 	ldhl	sp,	#4
      002714 32                    8860 	ld	(hl-), a
      002715 2A                    8861 	ld	a,	(hl+)
      002716 66                    8862 	ld	h, (hl)
      002717 6F                    8863 	ld	l, a
      002718 36 60                 8864 	ld	(hl), #0x60
                                   8865 ;src/main.c:960: projectiles[oldestProjectile].offset = 4;
      00271A 21r91r00              8866 	ld	hl, #_oldestProjectile
      00271D 4E                    8867 	ld	c, (hl)
      00271E 06 00                 8868 	ld	b, #0x00
      002720 69                    8869 	ld	l, c
      002721 60                    8870 	ld	h, b
      002722 29                    8871 	add	hl, hl
      002723 09                    8872 	add	hl, bc
      002724 29                    8873 	add	hl, hl
      002725 29                    8874 	add	hl, hl
      002726 09                    8875 	add	hl, bc
      002727 E5                    8876 	push	hl
      002728 7D                    8877 	ld	a, l
      002729 F8 05                 8878 	ldhl	sp,	#5
      00272B 77                    8879 	ld	(hl), a
      00272C E1                    8880 	pop	hl
      00272D 7C                    8881 	ld	a, h
      00272E F8 04                 8882 	ldhl	sp,	#4
      002730 32                    8883 	ld	(hl-), a
      002731 2A                    8884 	ld	a, (hl+)
      002732 5F                    8885 	ld	e, a
      002733 56                    8886 	ld	d, (hl)
      002734 21rB4r00              8887 	ld	hl, #_projectiles
      002737 19                    8888 	add	hl, de
      002738 E5                    8889 	push	hl
      002739 7D                    8890 	ld	a, l
      00273A F8 03                 8891 	ldhl	sp,	#3
      00273C 77                    8892 	ld	(hl), a
      00273D E1                    8893 	pop	hl
      00273E 7C                    8894 	ld	a, h
      00273F F8 02                 8895 	ldhl	sp,	#2
      002741 32                    8896 	ld	(hl-), a
      002742 2A                    8897 	ld	a, (hl+)
      002743 5F                    8898 	ld	e, a
      002744 56                    8899 	ld	d, (hl)
      002745 21 04 00              8900 	ld	hl, #0x0004
      002748 19                    8901 	add	hl, de
      002749 E5                    8902 	push	hl
      00274A 7D                    8903 	ld	a, l
      00274B F8 05                 8904 	ldhl	sp,	#5
      00274D 77                    8905 	ld	(hl), a
      00274E E1                    8906 	pop	hl
      00274F 7C                    8907 	ld	a, h
      002750 F8 04                 8908 	ldhl	sp,	#4
      002752 32                    8909 	ld	(hl-), a
      002753 2A                    8910 	ld	a,	(hl+)
      002754 66                    8911 	ld	h, (hl)
      002755 6F                    8912 	ld	l, a
      002756 36 04                 8913 	ld	(hl), #0x04
      002758 18 5E                 8914 	jr	00141$
      00275A                       8915 00124$:
                                   8916 ;src/main.c:962: else if (xDir == -1 && yDir == -1) {
      00275A F8 04                 8917 	ldhl	sp,	#4
      00275C 7E                    8918 	ld	a, (hl)
      00275D B7                    8919 	or	a, a
      00275E 28 58                 8920 	jr	Z, 00141$
      002760 F8 01                 8921 	ldhl	sp,	#1
      002762 7E                    8922 	ld	a, (hl)
      002763 B7                    8923 	or	a, a
      002764 28 52                 8924 	jr	Z, 00141$
                                   8925 ;src/main.c:963: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002766 23                    8926 	inc	hl
                                   8927 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002767 2A                    8928 	ld	a, (hl+)
      002768 22                    8929 	ld	(hl+), a
      002769 36 00                 8930 	ld	(hl), #0x00
      00276B 3E 02                 8931 	ld	a, #0x02
      00276D                       8932 00277$:
      00276D F8 03                 8933 	ldhl	sp,	#3
      00276F CB 26                 8934 	sla	(hl)
      002771 23                    8935 	inc	hl
      002772 CB 16                 8936 	rl	(hl)
      002774 3D                    8937 	dec	a
      002775 20 F6                 8938 	jr	NZ, 00277$
      002777 2B                    8939 	dec	hl
      002778 2A                    8940 	ld	a, (hl+)
      002779 5F                    8941 	ld	e, a
      00277A 56                    8942 	ld	d, (hl)
      00277B 21r00r00              8943 	ld	hl, #_shadow_OAM
      00277E 19                    8944 	add	hl, de
      00277F E5                    8945 	push	hl
      002780 7D                    8946 	ld	a, l
      002781 F8 03                 8947 	ldhl	sp,	#3
      002783 77                    8948 	ld	(hl), a
      002784 E1                    8949 	pop	hl
      002785 7C                    8950 	ld	a, h
      002786 F8 02                 8951 	ldhl	sp,	#2
      002788 32                    8952 	ld	(hl-), a
      002789 2A                    8953 	ld	a, (hl+)
      00278A 5F                    8954 	ld	e, a
      00278B 56                    8955 	ld	d, (hl)
      00278C 21 03 00              8956 	ld	hl, #0x0003
      00278F 19                    8957 	add	hl, de
      002790 E5                    8958 	push	hl
      002791 7D                    8959 	ld	a, l
      002792 F8 05                 8960 	ldhl	sp,	#5
      002794 77                    8961 	ld	(hl), a
      002795 E1                    8962 	pop	hl
      002796 7C                    8963 	ld	a, h
      002797 F8 04                 8964 	ldhl	sp,	#4
      002799 32                    8965 	ld	(hl-), a
      00279A 2A                    8966 	ld	a,	(hl+)
      00279B 66                    8967 	ld	h, (hl)
      00279C 6F                    8968 	ld	l, a
      00279D 36 20                 8969 	ld	(hl), #0x20
                                   8970 ;src/main.c:964: projectiles[oldestProjectile].offset = 12;
      00279F 21r91r00              8971 	ld	hl, #_oldestProjectile
      0027A2 4E                    8972 	ld	c, (hl)
      0027A3 06 00                 8973 	ld	b, #0x00
      0027A5 69                    8974 	ld	l, c
      0027A6 60                    8975 	ld	h, b
      0027A7 29                    8976 	add	hl, hl
      0027A8 09                    8977 	add	hl, bc
      0027A9 29                    8978 	add	hl, hl
      0027AA 29                    8979 	add	hl, hl
      0027AB 09                    8980 	add	hl, bc
      0027AC 01rB4r00              8981 	ld	bc,#_projectiles
      0027AF 09                    8982 	add	hl,bc
      0027B0 4D                    8983 	ld	c, l
      0027B1 44                    8984 	ld	b, h
      0027B2 21 04 00              8985 	ld	hl, #0x0004
      0027B5 09                    8986 	add	hl, bc
      0027B6 36 0C                 8987 	ld	(hl), #0x0c
      0027B8                       8988 00141$:
                                   8989 ;src/main.c:968: fireCooldown = projectiles[oldestProjectile].delay;
      0027B8 21r91r00              8990 	ld	hl, #_oldestProjectile
      0027BB 4E                    8991 	ld	c, (hl)
      0027BC 06 00                 8992 	ld	b, #0x00
      0027BE 69                    8993 	ld	l, c
      0027BF 60                    8994 	ld	h, b
      0027C0 29                    8995 	add	hl, hl
      0027C1 09                    8996 	add	hl, bc
      0027C2 29                    8997 	add	hl, hl
      0027C3 29                    8998 	add	hl, hl
      0027C4 09                    8999 	add	hl, bc
      0027C5 01rB4r00              9000 	ld	bc,#_projectiles
      0027C8 09                    9001 	add	hl,bc
      0027C9 4D                    9002 	ld	c, l
      0027CA 44                    9003 	ld	b, h
      0027CB 21 0B 00              9004 	ld	hl, #0x000b
      0027CE 09                    9005 	add	hl, bc
      0027CF 7E                    9006 	ld	a, (hl)
      0027D0 EAr92r00              9007 	ld	(#_fireCooldown),a
                                   9008 ;src/main.c:970: playSound(projectiles[oldestProjectile].type);
      0027D3 21 0C 00              9009 	ld	hl, #0x000c
      0027D6 09                    9010 	add	hl, bc
      0027D7 7E                    9011 	ld	a, (hl)
      0027D8 F5                    9012 	push	af
      0027D9 33                    9013 	inc	sp
      0027DA CDr91r0C              9014 	call	_playSound
      0027DD 33                    9015 	inc	sp
      0027DE                       9016 00154$:
                                   9017 ;src/main.c:974: }
      0027DE E8 05                 9018 	add	sp, #5
      0027E0 C9                    9019 	ret
                                   9020 ;src/main.c:977: void moveProjectiles() {
                                   9021 ;	---------------------------------
                                   9022 ; Function moveProjectiles
                                   9023 ; ---------------------------------
      0027E1                       9024 _moveProjectiles::
      0027E1 E8 F9                 9025 	add	sp, #-7
                                   9026 ;src/main.c:978: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0027E3 F8 06                 9027 	ldhl	sp,	#6
      0027E5 36 00                 9028 	ld	(hl), #0x00
      0027E7                       9029 00112$:
      0027E7 21r99r08              9030 	ld	hl, #_PROJECTILECOUNT
      0027EA 4E                    9031 	ld	c, (hl)
      0027EB F8 06                 9032 	ldhl	sp,	#6
      0027ED 7E                    9033 	ld	a, (hl)
      0027EE 91                    9034 	sub	a, c
      0027EF D2r3Fr29              9035 	jp	NC, 00114$
                                   9036 ;src/main.c:979: projectiles[i].x -= xOverflow;
      0027F2 4E                    9037 	ld	c, (hl)
      0027F3 06 00                 9038 	ld	b, #0x00
      0027F5 69                    9039 	ld	l, c
      0027F6 60                    9040 	ld	h, b
      0027F7 29                    9041 	add	hl, hl
      0027F8 09                    9042 	add	hl, bc
      0027F9 29                    9043 	add	hl, hl
      0027FA 29                    9044 	add	hl, hl
      0027FB 09                    9045 	add	hl, bc
      0027FC 01rB4r00              9046 	ld	bc,#_projectiles
      0027FF 09                    9047 	add	hl,bc
      002800 33                    9048 	inc	sp
      002801 33                    9049 	inc	sp
      002802 5D                    9050 	ld	e, l
      002803 54                    9051 	ld	d, h
      002804 D5                    9052 	push	de
      002805 1A                    9053 	ld	a, (de)
      002806 4F                    9054 	ld	c, a
      002807 13                    9055 	inc	de
      002808 1A                    9056 	ld	a, (de)
      002809 47                    9057 	ld	b, a
      00280A 79                    9058 	ld	a, c
      00280B 21rA1r00              9059 	ld	hl, #_xOverflow
      00280E 96                    9060 	sub	a, (hl)
      00280F 23                    9061 	inc	hl
      002810 4F                    9062 	ld	c, a
      002811 78                    9063 	ld	a, b
      002812 9E                    9064 	sbc	a, (hl)
      002813 47                    9065 	ld	b, a
      002814 E1                    9066 	pop	hl
      002815 E5                    9067 	push	hl
      002816 79                    9068 	ld	a, c
      002817 22                    9069 	ld	(hl+), a
      002818 70                    9070 	ld	(hl), b
                                   9071 ;src/main.c:980: projectiles[i].y -= yOverflow;
      002819 D1                    9072 	pop	de
      00281A D5                    9073 	push	de
      00281B 21 02 00              9074 	ld	hl, #0x0002
      00281E 19                    9075 	add	hl, de
      00281F E5                    9076 	push	hl
      002820 7D                    9077 	ld	a, l
      002821 F8 04                 9078 	ldhl	sp,	#4
      002823 77                    9079 	ld	(hl), a
      002824 E1                    9080 	pop	hl
      002825 7C                    9081 	ld	a, h
      002826 F8 03                 9082 	ldhl	sp,	#3
      002828 32                    9083 	ld	(hl-), a
      002829 2A                    9084 	ld	a, (hl+)
      00282A 5F                    9085 	ld	e, a
      00282B 56                    9086 	ld	d, (hl)
      00282C 1A                    9087 	ld	a, (de)
      00282D 4F                    9088 	ld	c, a
      00282E 13                    9089 	inc	de
      00282F 1A                    9090 	ld	a, (de)
      002830 47                    9091 	ld	b, a
      002831 79                    9092 	ld	a, c
      002832 21rA3r00              9093 	ld	hl, #_yOverflow
      002835 96                    9094 	sub	a, (hl)
      002836 23                    9095 	inc	hl
      002837 4F                    9096 	ld	c, a
      002838 78                    9097 	ld	a, b
      002839 9E                    9098 	sbc	a, (hl)
      00283A 47                    9099 	ld	b, a
      00283B F8 02                 9100 	ldhl	sp,	#2
      00283D 2A                    9101 	ld	a,	(hl+)
      00283E 66                    9102 	ld	h, (hl)
      00283F 6F                    9103 	ld	l, a
      002840 79                    9104 	ld	a, c
      002841 22                    9105 	ld	(hl+), a
      002842 70                    9106 	ld	(hl), b
                                   9107 ;src/main.c:982: if (projectiles[i].active) {
      002843 D1                    9108 	pop	de
      002844 D5                    9109 	push	de
      002845 21 0A 00              9110 	ld	hl, #0x000a
      002848 19                    9111 	add	hl, de
      002849 4D                    9112 	ld	c, l
      00284A 44                    9113 	ld	b, h
      00284B 0A                    9114 	ld	a, (bc)
      00284C B7                    9115 	or	a, a
      00284D CAr39r29              9116 	jp	Z, 00113$
                                   9117 ;src/main.c:983: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      002850 F8 02                 9118 	ldhl	sp,#2
      002852 2A                    9119 	ld	a, (hl+)
      002853 5F                    9120 	ld	e, a
      002854 56                    9121 	ld	d, (hl)
      002855 1A                    9122 	ld	a, (de)
      002856 4F                    9123 	ld	c, a
      002857 13                    9124 	inc	de
      002858 1A                    9125 	ld	a, (de)
      002859 47                    9126 	ld	b, a
      00285A D1                    9127 	pop	de
      00285B D5                    9128 	push	de
      00285C 21 06 00              9129 	ld	hl, #0x0006
      00285F 19                    9130 	add	hl, de
      002860 5D                    9131 	ld	e, l
      002861 54                    9132 	ld	d, h
      002862 1A                    9133 	ld	a, (de)
      002863 6F                    9134 	ld	l, a
                                   9135 ;	spillPairReg hl
                                   9136 ;	spillPairReg hl
      002864 07                    9137 	rlca
      002865 9F                    9138 	sbc	a, a
      002866 67                    9139 	ld	h, a
                                   9140 ;	spillPairReg hl
                                   9141 ;	spillPairReg hl
      002867 09                    9142 	add	hl, bc
      002868 4D                    9143 	ld	c, l
      002869 44                    9144 	ld	b, h
      00286A F8 04                 9145 	ldhl	sp,	#4
      00286C 79                    9146 	ld	a, c
      00286D 22                    9147 	ld	(hl+), a
      00286E 70                    9148 	ld	(hl), b
                                   9149 ;src/main.c:984: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      00286F D1                    9150 	pop	de
      002870 D5                    9151 	push	de
      002871 1A                    9152 	ld	a, (de)
      002872 4F                    9153 	ld	c, a
      002873 13                    9154 	inc	de
      002874 1A                    9155 	ld	a, (de)
      002875 47                    9156 	ld	b, a
      002876 D1                    9157 	pop	de
      002877 D5                    9158 	push	de
      002878 21 05 00              9159 	ld	hl, #0x0005
      00287B 19                    9160 	add	hl, de
      00287C 5D                    9161 	ld	e, l
      00287D 54                    9162 	ld	d, h
      00287E 1A                    9163 	ld	a, (de)
      00287F 6F                    9164 	ld	l, a
                                   9165 ;	spillPairReg hl
                                   9166 ;	spillPairReg hl
      002880 07                    9167 	rlca
      002881 9F                    9168 	sbc	a, a
      002882 67                    9169 	ld	h, a
                                   9170 ;	spillPairReg hl
                                   9171 ;	spillPairReg hl
      002883 09                    9172 	add	hl, bc
      002884 4D                    9173 	ld	c, l
      002885 44                    9174 	ld	b, h
                                   9175 ;src/main.c:987: projectiles[i].y = newY;
      002886 F8 02                 9176 	ldhl	sp,#2
      002888 2A                    9177 	ld	a, (hl+)
      002889 5F                    9178 	ld	e, a
      00288A 2A                    9179 	ld	a, (hl+)
      00288B 57                    9180 	ld	d, a
      00288C 2A                    9181 	ld	a, (hl+)
      00288D 12                    9182 	ld	(de), a
      00288E 13                    9183 	inc	de
      00288F 7E                    9184 	ld	a, (hl)
      002890 12                    9185 	ld	(de), a
                                   9186 ;src/main.c:988: projectiles[i].x = newX;
      002891 E1                    9187 	pop	hl
      002892 E5                    9188 	push	hl
      002893 79                    9189 	ld	a, c
      002894 22                    9190 	ld	(hl+), a
      002895 70                    9191 	ld	(hl), b
                                   9192 ;src/main.c:992: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      002896 F8 04                 9193 	ldhl	sp,	#4
      002898 2A                    9194 	ld	a, (hl+)
      002899 77                    9195 	ld	(hl), a
      00289A D1                    9196 	pop	de
      00289B D5                    9197 	push	de
      00289C 21 04 00              9198 	ld	hl, #0x0004
      00289F 19                    9199 	add	hl, de
      0028A0 5D                    9200 	ld	e, l
      0028A1 54                    9201 	ld	d, h
      0028A2 1A                    9202 	ld	a, (de)
      0028A3 F8 05                 9203 	ldhl	sp,	#5
      0028A5 86                    9204 	add	a, (hl)
      0028A6 2B                    9205 	dec	hl
      0028A7 5F                    9206 	ld	e, a
      0028A8 79                    9207 	ld	a, c
      0028A9 C6 04                 9208 	add	a, #0x04
      0028AB 22                    9209 	ld	(hl+), a
      0028AC 23                    9210 	inc	hl
      0028AD 3A                    9211 	ld	a, (hl-)
      0028AE C6 1E                 9212 	add	a, #0x1e
      0028B0 77                    9213 	ld	(hl), a
      0028B1 56                    9214 	ld	d, (hl)
                                   9215 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0028B2 26 00                 9216 	ld	h, #0x00
                                   9217 ;	spillPairReg hl
                                   9218 ;	spillPairReg hl
      0028B4 6A                    9219 	ld	l, d
      0028B5 29                    9220 	add	hl, hl
      0028B6 29                    9221 	add	hl, hl
      0028B7 D5                    9222 	push	de
      0028B8 11r00r00              9223 	ld	de, #_shadow_OAM
      0028BB 19                    9224 	add	hl, de
      0028BC D1                    9225 	pop	de
                                   9226 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0028BD 7B                    9227 	ld	a, e
      0028BE 22                    9228 	ld	(hl+), a
      0028BF 5D                    9229 	ld	e, l
      0028C0 54                    9230 	ld	d, h
      0028C1 F8 04                 9231 	ldhl	sp,	#4
      0028C3 7E                    9232 	ld	a, (hl)
      0028C4 12                    9233 	ld	(de), a
                                   9234 ;src/main.c:996: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      0028C5 D1                    9235 	pop	de
      0028C6 D5                    9236 	push	de
      0028C7 1A                    9237 	ld	a, (de)
      0028C8 6F                    9238 	ld	l, a
                                   9239 ;	spillPairReg hl
                                   9240 ;	spillPairReg hl
      0028C9 13                    9241 	inc	de
      0028CA 1A                    9242 	ld	a, (de)
      0028CB 67                    9243 	ld	h, a
                                   9244 ;	spillPairReg hl
                                   9245 ;	spillPairReg hl
      0028CC CB 78                 9246 	bit	7, b
      0028CE 20 44                 9247 	jr	NZ, 00101$
      0028D0 5C                    9248 	ld	e, h
      0028D1 16 00                 9249 	ld	d, #0x00
      0028D3 3E AA                 9250 	ld	a, #0xaa
      0028D5 BD                    9251 	cp	a, l
      0028D6 3E 00                 9252 	ld	a, #0x00
      0028D8 9C                    9253 	sbc	a, h
      0028D9 CB 7B                 9254 	bit	7, e
      0028DB 28 07                 9255 	jr	Z, 00147$
      0028DD CB 7A                 9256 	bit	7, d
      0028DF 20 08                 9257 	jr	NZ, 00148$
      0028E1 BF                    9258 	cp	a, a
      0028E2 18 05                 9259 	jr	00148$
      0028E4                       9260 00147$:
      0028E4 CB 7A                 9261 	bit	7, d
      0028E6 28 01                 9262 	jr	Z, 00148$
      0028E8 37                    9263 	scf
      0028E9                       9264 00148$:
      0028E9 38 29                 9265 	jr	C, 00101$
                                   9266 ;src/main.c:980: projectiles[i].y -= yOverflow;
      0028EB F8 02                 9267 	ldhl	sp,#2
      0028ED 2A                    9268 	ld	a, (hl+)
      0028EE 5F                    9269 	ld	e, a
      0028EF 56                    9270 	ld	d, (hl)
      0028F0 1A                    9271 	ld	a, (de)
      0028F1 4F                    9272 	ld	c, a
      0028F2 13                    9273 	inc	de
      0028F3 1A                    9274 	ld	a, (de)
                                   9275 ;src/main.c:996: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      0028F4 47                    9276 	ld	b, a
      0028F5 CB 78                 9277 	bit	7, b
      0028F7 20 1B                 9278 	jr	NZ, 00101$
      0028F9 58                    9279 	ld	e, b
      0028FA 16 00                 9280 	ld	d, #0x00
      0028FC 3E 9A                 9281 	ld	a, #0x9a
      0028FE B9                    9282 	cp	a, c
      0028FF 3E 00                 9283 	ld	a, #0x00
      002901 98                    9284 	sbc	a, b
      002902 CB 7B                 9285 	bit	7, e
      002904 28 07                 9286 	jr	Z, 00149$
      002906 CB 7A                 9287 	bit	7, d
      002908 20 08                 9288 	jr	NZ, 00150$
      00290A BF                    9289 	cp	a, a
      00290B 18 05                 9290 	jr	00150$
      00290D                       9291 00149$:
      00290D CB 7A                 9292 	bit	7, d
      00290F 28 01                 9293 	jr	Z, 00150$
      002911 37                    9294 	scf
      002912                       9295 00150$:
      002912 30 25                 9296 	jr	NC, 00113$
      002914                       9297 00101$:
                                   9298 ;src/main.c:997: projectiles[i].active = 0;
      002914 F8 06                 9299 	ldhl	sp,	#6
      002916 4E                    9300 	ld	c, (hl)
      002917 06 00                 9301 	ld	b, #0x00
      002919 69                    9302 	ld	l, c
      00291A 60                    9303 	ld	h, b
      00291B 29                    9304 	add	hl, hl
      00291C 09                    9305 	add	hl, bc
      00291D 29                    9306 	add	hl, hl
      00291E 29                    9307 	add	hl, hl
      00291F 09                    9308 	add	hl, bc
      002920 11rB4r00              9309 	ld	de, #_projectiles
      002923 19                    9310 	add	hl, de
      002924 01 0A 00              9311 	ld	bc, #0x000a
      002927 09                    9312 	add	hl, bc
      002928 36 00                 9313 	ld	(hl), #0x00
                                   9314 ;src/main.c:998: set_sprite_tile(30+i, 0x7f);
      00292A F8 05                 9315 	ldhl	sp,	#5
                                   9316 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00292C 6E                    9317 	ld	l, (hl)
                                   9318 ;	spillPairReg hl
                                   9319 ;	spillPairReg hl
      00292D 26 00                 9320 	ld	h, #0x00
                                   9321 ;	spillPairReg hl
                                   9322 ;	spillPairReg hl
      00292F 29                    9323 	add	hl, hl
      002930 29                    9324 	add	hl, hl
      002931 11r00r00              9325 	ld	de, #_shadow_OAM
      002934 19                    9326 	add	hl, de
      002935 23                    9327 	inc	hl
      002936 23                    9328 	inc	hl
      002937 36 7F                 9329 	ld	(hl), #0x7f
                                   9330 ;src/main.c:998: set_sprite_tile(30+i, 0x7f);
      002939                       9331 00113$:
                                   9332 ;src/main.c:978: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002939 F8 06                 9333 	ldhl	sp,	#6
      00293B 34                    9334 	inc	(hl)
      00293C C3rE7r27              9335 	jp	00112$
      00293F                       9336 00114$:
                                   9337 ;src/main.c:1002: }
      00293F E8 07                 9338 	add	sp, #7
      002941 C9                    9339 	ret
                                   9340 ;src/main.c:1004: void tickPickups() {
                                   9341 ;	---------------------------------
                                   9342 ; Function tickPickups
                                   9343 ; ---------------------------------
      002942                       9344 _tickPickups::
      002942 3B                    9345 	dec	sp
      002943 3B                    9346 	dec	sp
                                   9347 ;src/main.c:1005: pickup.x -= xOverflow;
      002944 21rFBr00              9348 	ld	hl, #(_pickup + 1)
      002947 2A                    9349 	ld	a, (hl+)
      002948 47                    9350 	ld	b, a
      002949 4E                    9351 	ld	c, (hl)
      00294A 58                    9352 	ld	e, b
      00294B 51                    9353 	ld	d, c
      00294C 21rA1r00              9354 	ld	hl, #_xOverflow
      00294F 2A                    9355 	ld	a,	(hl+)
      002950 66                    9356 	ld	h, (hl)
      002951 6F                    9357 	ld	l, a
      002952 7B                    9358 	ld	a, e
      002953 95                    9359 	sub	a, l
      002954 5F                    9360 	ld	e, a
      002955 7A                    9361 	ld	a, d
      002956 9C                    9362 	sbc	a, h
      002957 F8 01                 9363 	ldhl	sp,	#1
      002959 32                    9364 	ld	(hl-), a
      00295A 73                    9365 	ld	(hl), e
      00295B 11rFBr00              9366 	ld	de, #(_pickup + 1)
      00295E 2A                    9367 	ld	a, (hl+)
      00295F 12                    9368 	ld	(de), a
      002960 13                    9369 	inc	de
      002961 7E                    9370 	ld	a, (hl)
      002962 12                    9371 	ld	(de), a
                                   9372 ;src/main.c:1006: pickup.y -= yOverflow;
      002963 21rFDr00              9373 	ld	hl, #(_pickup + 3)
      002966 2A                    9374 	ld	a, (hl+)
      002967 4F                    9375 	ld	c, a
      002968 46                    9376 	ld	b, (hl)
      002969 79                    9377 	ld	a, c
      00296A 21rA3r00              9378 	ld	hl, #_yOverflow
      00296D 96                    9379 	sub	a, (hl)
      00296E 23                    9380 	inc	hl
      00296F 4F                    9381 	ld	c, a
      002970 78                    9382 	ld	a, b
      002971 9E                    9383 	sbc	a, (hl)
      002972 47                    9384 	ld	b, a
      002973 21rFDr00              9385 	ld	hl, #(_pickup + 3)
      002976 79                    9386 	ld	a, c
      002977 22                    9387 	ld	(hl+), a
      002978 70                    9388 	ld	(hl), b
                                   9389 ;src/main.c:1008: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002979 79                    9390 	ld	a, c
      00297A C6 0C                 9391 	add	a, #0x0c
      00297C 47                    9392 	ld	b, a
      00297D F8 00                 9393 	ldhl	sp,	#0
      00297F 7E                    9394 	ld	a, (hl)
      002980 C6 04                 9395 	add	a, #0x04
      002982 4F                    9396 	ld	c, a
                                   9397 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002983 21r0Cr00              9398 	ld	hl, #(_shadow_OAM + 12)
                                   9399 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002986 78                    9400 	ld	a, b
      002987 22                    9401 	ld	(hl+), a
      002988 71                    9402 	ld	(hl), c
                                   9403 ;src/main.c:1009: if (pickup.active) {
      002989 FArFFr00              9404 	ld	a, (#(_pickup + 5) + 0)
      00298C B7                    9405 	or	a, a
      00298D CAr0Fr2B              9406 	jp	Z, 00143$
                                   9407 ;src/main.c:1010: if (pickup.visible) {
      002990 21rFAr00              9408 	ld	hl, #_pickup
      002993 4E                    9409 	ld	c, (hl)
                                   9410 ;src/main.c:1005: pickup.x -= xOverflow;
      002994 11rFBr00              9411 	ld	de, #(_pickup + 1)
      002997 1A                    9412 	ld	a, (de)
      002998 F8 00                 9413 	ldhl	sp,	#0
      00299A 22                    9414 	ld	(hl+), a
      00299B 13                    9415 	inc	de
      00299C 1A                    9416 	ld	a, (de)
      00299D 77                    9417 	ld	(hl), a
                                   9418 ;src/main.c:1010: if (pickup.visible) {
      00299E 79                    9419 	ld	a, c
      00299F B7                    9420 	or	a, a
      0029A0 CArA3r2A              9421 	jp	Z, 00127$
                                   9422 ;src/main.c:1011: if (abs(pickup.x - playerDrawX) < 10) {
      0029A3 2B                    9423 	dec	hl
      0029A4 7E                    9424 	ld	a, (hl)
      0029A5 21r9Br00              9425 	ld	hl, #_playerDrawX
      0029A8 4E                    9426 	ld	c, (hl)
      0029A9 91                    9427 	sub	a, c
      0029AA 4F                    9428 	ld	c, a
                                   9429 ;src/main.c:348: if (value >= 0) return value;
      0029AB CB 79                 9430 	bit	7, c
      0029AD 28 03                 9431 	jr	Z, 00135$
                                   9432 ;src/main.c:349: else return - value;
      0029AF AF                    9433 	xor	a, a
      0029B0 91                    9434 	sub	a, c
      0029B1 4F                    9435 	ld	c, a
                                   9436 ;src/main.c:1011: if (abs(pickup.x - playerDrawX) < 10) {
      0029B2                       9437 00135$:
      0029B2 79                    9438 	ld	a, c
      0029B3 EE 80                 9439 	xor	a, #0x80
      0029B5 D6 8A                 9440 	sub	a, #0x8a
      0029B7 D2r46r2A              9441 	jp	NC, 00115$
                                   9442 ;src/main.c:1012: if (abs(pickup.y - playerDrawY) < 10) {
      0029BA FArFDr00              9443 	ld	a, (#(_pickup + 3) + 0)
      0029BD F8 01                 9444 	ldhl	sp,	#1
      0029BF 77                    9445 	ld	(hl), a
      0029C0 21r9Cr00              9446 	ld	hl, #_playerDrawY
      0029C3 4E                    9447 	ld	c, (hl)
      0029C4 F8 01                 9448 	ldhl	sp,	#1
      0029C6 7E                    9449 	ld	a, (hl)
      0029C7 91                    9450 	sub	a, c
      0029C8 77                    9451 	ld	(hl), a
                                   9452 ;src/main.c:348: if (value >= 0) return value;
      0029C9 CB 7E                 9453 	bit	7, (hl)
      0029CB 28 05                 9454 	jr	Z, 00139$
                                   9455 ;src/main.c:349: else return - value;
      0029CD AF                    9456 	xor	a, a
      0029CE F8 01                 9457 	ldhl	sp,	#1
      0029D0 96                    9458 	sub	a, (hl)
      0029D1 77                    9459 	ld	(hl), a
                                   9460 ;src/main.c:1012: if (abs(pickup.y - playerDrawY) < 10) {
      0029D2                       9461 00139$:
      0029D2 F8 01                 9462 	ldhl	sp,	#1
      0029D4 7E                    9463 	ld	a, (hl)
      0029D5 EE 80                 9464 	xor	a, #0x80
      0029D7 D6 8A                 9465 	sub	a, #0x8a
      0029D9 30 6B                 9466 	jr	NC, 00115$
                                   9467 ;src/main.c:1013: if (pickup.type == 0) { //upgrade
      0029DB FAr00r01              9468 	ld	a, (#(_pickup + 6) + 0)
      0029DE B7                    9469 	or	a, a
      0029DF 20 0D                 9470 	jr	NZ, 00104$
                                   9471 ;src/main.c:1014: if (gunLevel < 1) {
      0029E1 21rA6r00              9472 	ld	hl, #_gunLevel
      0029E4 7E                    9473 	ld	a, (hl)
      0029E5 D6 01                 9474 	sub	a, #0x01
      0029E7 30 05                 9475 	jr	NC, 00104$
                                   9476 ;src/main.c:1015: gunLevel += 1;
      0029E9 34                    9477 	inc	(hl)
      0029EA 7E                    9478 	ld	a, (hl)
                                   9479 ;src/main.c:1016: setGunIcon();
      0029EB CDr05r22              9480 	call	_setGunIcon
      0029EE                       9481 00104$:
                                   9482 ;src/main.c:1019: if (pickup.type == 1) { //missile ammo
      0029EE 21r00r01              9483 	ld	hl, #(_pickup + 6)
      0029F1 6E                    9484 	ld	l, (hl)
                                   9485 ;	spillPairReg hl
                                   9486 ;src/main.c:1020: updateMissileCount(pickup.amount);
      0029F2 01r01r01              9487 	ld	bc, #_pickup + 7
                                   9488 ;src/main.c:1019: if (pickup.type == 1) { //missile ammo
      0029F5 2D                    9489 	dec	l
      0029F6 20 09                 9490 	jr	NZ, 00106$
                                   9491 ;src/main.c:1020: updateMissileCount(pickup.amount);
      0029F8 0A                    9492 	ld	a, (bc)
      0029F9 C5                    9493 	push	bc
      0029FA F5                    9494 	push	af
      0029FB 33                    9495 	inc	sp
      0029FC CDrDAr09              9496 	call	_updateMissileCount
      0029FF 33                    9497 	inc	sp
      002A00 C1                    9498 	pop	bc
      002A01                       9499 00106$:
                                   9500 ;src/main.c:1022: if (pickup.type == 2) {
      002A01 FAr00r01              9501 	ld	a, (#(_pickup + 6) + 0)
      002A04 D6 02                 9502 	sub	a, #0x02
      002A06 20 34                 9503 	jr	NZ, 00111$
                                   9504 ;src/main.c:1023: if (hull + pickup.amount <= 100) {
      002A08 21rF6r00              9505 	ld	hl, #_hull
      002A0B 5E                    9506 	ld	e, (hl)
      002A0C 16 00                 9507 	ld	d, #0x00
      002A0E 0A                    9508 	ld	a, (bc)
      002A0F 4F                    9509 	ld	c, a
      002A10 69                    9510 	ld	l, c
                                   9511 ;	spillPairReg hl
                                   9512 ;	spillPairReg hl
      002A11 26 00                 9513 	ld	h, #0x00
                                   9514 ;	spillPairReg hl
                                   9515 ;	spillPairReg hl
      002A13 19                    9516 	add	hl, de
      002A14 5C                    9517 	ld	e, h
      002A15 16 00                 9518 	ld	d, #0x00
      002A17 3E 64                 9519 	ld	a, #0x64
      002A19 BD                    9520 	cp	a, l
      002A1A 3E 00                 9521 	ld	a, #0x00
      002A1C 9C                    9522 	sbc	a, h
      002A1D CB 7B                 9523 	bit	7, e
      002A1F 28 07                 9524 	jr	Z, 00239$
      002A21 CB 7A                 9525 	bit	7, d
      002A23 20 08                 9526 	jr	NZ, 00240$
      002A25 BF                    9527 	cp	a, a
      002A26 18 05                 9528 	jr	00240$
      002A28                       9529 00239$:
      002A28 CB 7A                 9530 	bit	7, d
      002A2A 28 01                 9531 	jr	Z, 00240$
      002A2C 37                    9532 	scf
      002A2D                       9533 00240$:
      002A2D 38 08                 9534 	jr	C, 00108$
                                   9535 ;src/main.c:1024: hull += pickup.amount;
      002A2F 79                    9536 	ld	a, c
      002A30 21rF6r00              9537 	ld	hl, #_hull
      002A33 86                    9538 	add	a, (hl)
      002A34 77                    9539 	ld	(hl), a
      002A35 18 05                 9540 	jr	00111$
      002A37                       9541 00108$:
                                   9542 ;src/main.c:1027: hull = 100;
      002A37 21rF6r00              9543 	ld	hl, #_hull
      002A3A 36 64                 9544 	ld	(hl), #0x64
      002A3C                       9545 00111$:
                                   9546 ;src/main.c:1030: pickup.active = 0;
      002A3C 21rFFr00              9547 	ld	hl, #(_pickup + 5)
      002A3F 36 00                 9548 	ld	(hl), #0x00
                                   9549 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002A41 21r0Er00              9550 	ld	hl, #(_shadow_OAM + 14)
      002A44 36 7F                 9551 	ld	(hl), #0x7f
                                   9552 ;src/main.c:1031: set_sprite_tile(3, 0x7f);
      002A46                       9553 00115$:
                                   9554 ;src/main.c:1005: pickup.x -= xOverflow;
      002A46 21rFBr00              9555 	ld	hl, #(_pickup + 1)
      002A49 2A                    9556 	ld	a, (hl+)
      002A4A 4F                    9557 	ld	c, a
      002A4B 46                    9558 	ld	b, (hl)
                                   9559 ;src/main.c:1034: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      002A4C 79                    9560 	ld	a, c
      002A4D D6 F6                 9561 	sub	a, #0xf6
      002A4F 78                    9562 	ld	a, b
      002A50 17                    9563 	rla
      002A51 3F                    9564 	ccf
      002A52 1F                    9565 	rra
      002A53 DE 7F                 9566 	sbc	a, #0x7f
      002A55 38 40                 9567 	jr	C, 00116$
      002A57 58                    9568 	ld	e, b
      002A58 16 00                 9569 	ld	d, #0x00
      002A5A 3E AA                 9570 	ld	a, #0xaa
      002A5C B9                    9571 	cp	a, c
      002A5D 3E 00                 9572 	ld	a, #0x00
      002A5F 98                    9573 	sbc	a, b
      002A60 CB 7B                 9574 	bit	7, e
      002A62 28 07                 9575 	jr	Z, 00241$
      002A64 CB 7A                 9576 	bit	7, d
      002A66 20 08                 9577 	jr	NZ, 00242$
      002A68 BF                    9578 	cp	a, a
      002A69 18 05                 9579 	jr	00242$
      002A6B                       9580 00241$:
      002A6B CB 7A                 9581 	bit	7, d
      002A6D 28 01                 9582 	jr	Z, 00242$
      002A6F 37                    9583 	scf
      002A70                       9584 00242$:
      002A70 38 25                 9585 	jr	C, 00116$
                                   9586 ;src/main.c:1006: pickup.y -= yOverflow;
      002A72 21rFDr00              9587 	ld	hl, #(_pickup + 3)
      002A75 2A                    9588 	ld	a, (hl+)
      002A76 4F                    9589 	ld	c, a
      002A77 46                    9590 	ld	b, (hl)
                                   9591 ;src/main.c:1034: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      002A78 CB 78                 9592 	bit	7, b
      002A7A 20 1B                 9593 	jr	NZ, 00116$
      002A7C 58                    9594 	ld	e, b
      002A7D 16 00                 9595 	ld	d, #0x00
      002A7F 3E 9B                 9596 	ld	a, #0x9b
      002A81 B9                    9597 	cp	a, c
      002A82 3E 00                 9598 	ld	a, #0x00
      002A84 98                    9599 	sbc	a, b
      002A85 CB 7B                 9600 	bit	7, e
      002A87 28 07                 9601 	jr	Z, 00243$
      002A89 CB 7A                 9602 	bit	7, d
      002A8B 20 08                 9603 	jr	NZ, 00244$
      002A8D BF                    9604 	cp	a, a
      002A8E 18 05                 9605 	jr	00244$
      002A90                       9606 00243$:
      002A90 CB 7A                 9607 	bit	7, d
      002A92 28 01                 9608 	jr	Z, 00244$
      002A94 37                    9609 	scf
      002A95                       9610 00244$:
      002A95 30 78                 9611 	jr	NC, 00143$
      002A97                       9612 00116$:
                                   9613 ;src/main.c:1035: pickup.visible = 0;
      002A97 21rFAr00              9614 	ld	hl, #_pickup
      002A9A 36 00                 9615 	ld	(hl), #0x00
                                   9616 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002A9C 21r0Er00              9617 	ld	hl, #(_shadow_OAM + 14)
      002A9F 36 7F                 9618 	ld	(hl), #0x7f
                                   9619 ;src/main.c:1036: set_sprite_tile(3, 0x7f);
      002AA1 18 6C                 9620 	jr	00143$
      002AA3                       9621 00127$:
                                   9622 ;src/main.c:1040: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      002AA3 F8 00                 9623 	ldhl	sp,	#0
      002AA5 2A                    9624 	ld	a, (hl+)
      002AA6 D6 F6                 9625 	sub	a, #0xf6
      002AA8 7E                    9626 	ld	a, (hl)
      002AA9 DE FF                 9627 	sbc	a, #0xff
      002AAB 56                    9628 	ld	d, (hl)
      002AAC 3E FF                 9629 	ld	a, #0xff
      002AAE CB 7F                 9630 	bit	7,a
      002AB0 28 07                 9631 	jr	Z, 00245$
      002AB2 CB 7A                 9632 	bit	7, d
      002AB4 20 08                 9633 	jr	NZ, 00246$
      002AB6 BF                    9634 	cp	a, a
      002AB7 18 05                 9635 	jr	00246$
      002AB9                       9636 00245$:
      002AB9 CB 7A                 9637 	bit	7, d
      002ABB 28 01                 9638 	jr	Z, 00246$
      002ABD 37                    9639 	scf
      002ABE                       9640 00246$:
      002ABE 38 4F                 9641 	jr	C, 00143$
      002AC0 C1                    9642 	pop	bc
      002AC1 C5                    9643 	push	bc
      002AC2 58                    9644 	ld	e, b
      002AC3 16 00                 9645 	ld	d, #0x00
      002AC5 3E AA                 9646 	ld	a, #0xaa
      002AC7 B9                    9647 	cp	a, c
      002AC8 3E 00                 9648 	ld	a, #0x00
      002ACA 98                    9649 	sbc	a, b
      002ACB CB 7B                 9650 	bit	7, e
      002ACD 28 07                 9651 	jr	Z, 00247$
      002ACF CB 7A                 9652 	bit	7, d
      002AD1 20 08                 9653 	jr	NZ, 00248$
      002AD3 BF                    9654 	cp	a, a
      002AD4 18 05                 9655 	jr	00248$
      002AD6                       9656 00247$:
      002AD6 CB 7A                 9657 	bit	7, d
      002AD8 28 01                 9658 	jr	Z, 00248$
      002ADA 37                    9659 	scf
      002ADB                       9660 00248$:
      002ADB 38 32                 9661 	jr	C, 00143$
      002ADD 21rFDr00              9662 	ld	hl, #(_pickup + 3)
      002AE0 2A                    9663 	ld	a, (hl+)
      002AE1 4F                    9664 	ld	c, a
      002AE2 46                    9665 	ld	b, (hl)
      002AE3 CB 78                 9666 	bit	7, b
      002AE5 20 28                 9667 	jr	NZ, 00143$
      002AE7 58                    9668 	ld	e, b
      002AE8 16 00                 9669 	ld	d, #0x00
      002AEA 3E 9B                 9670 	ld	a, #0x9b
      002AEC B9                    9671 	cp	a, c
      002AED 3E 00                 9672 	ld	a, #0x00
      002AEF 98                    9673 	sbc	a, b
      002AF0 CB 7B                 9674 	bit	7, e
      002AF2 28 07                 9675 	jr	Z, 00249$
      002AF4 CB 7A                 9676 	bit	7, d
      002AF6 20 08                 9677 	jr	NZ, 00250$
      002AF8 BF                    9678 	cp	a, a
      002AF9 18 05                 9679 	jr	00250$
      002AFB                       9680 00249$:
      002AFB CB 7A                 9681 	bit	7, d
      002AFD 28 01                 9682 	jr	Z, 00250$
      002AFF 37                    9683 	scf
      002B00                       9684 00250$:
      002B00 38 0D                 9685 	jr	C, 00143$
                                   9686 ;src/main.c:1041: pickup.visible = 1;
      002B02 21rFAr00              9687 	ld	hl, #_pickup
      002B05 36 01                 9688 	ld	(hl), #0x01
                                   9689 ;src/main.c:1042: set_sprite_tile(3, pickup.tile);
      002B07 21r02r01              9690 	ld	hl, #(_pickup + 8)
      002B0A 4E                    9691 	ld	c, (hl)
                                   9692 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002B0B 21r0Er00              9693 	ld	hl, #(_shadow_OAM + 14)
      002B0E 71                    9694 	ld	(hl), c
                                   9695 ;src/main.c:1042: set_sprite_tile(3, pickup.tile);
      002B0F                       9696 00143$:
                                   9697 ;src/main.c:1047: }
      002B0F 33                    9698 	inc	sp
      002B10 33                    9699 	inc	sp
      002B11 C9                    9700 	ret
                                   9701 ;src/main.c:1049: void initEnemyOptions() {
                                   9702 ;	---------------------------------
                                   9703 ; Function initEnemyOptions
                                   9704 ; ---------------------------------
      002B12                       9705 _initEnemyOptions::
                                   9706 ;src/main.c:1050: enemyOptions[0] = blob;
      002B12 11 12 00              9707 	ld	de, #0x0012
      002B15 D5                    9708 	push	de
      002B16 11r10r00              9709 	ld	de, #_blob
      002B19 D5                    9710 	push	de
      002B1A 11r00r00              9711 	ld	de, #_enemyOptions
      002B1D D5                    9712 	push	de
      002B1E CDr00r00              9713 	call	___memcpy
      002B21 E8 06                 9714 	add	sp, #6
                                   9715 ;src/main.c:1051: enemyOptions[1] = bomb;
      002B23 11 12 00              9716 	ld	de, #0x0012
      002B26 D5                    9717 	push	de
      002B27 11r22r00              9718 	ld	de, #_bomb
      002B2A D5                    9719 	push	de
      002B2B 11r12r00              9720 	ld	de, #(_enemyOptions + 18)
      002B2E D5                    9721 	push	de
      002B2F CDr00r00              9722 	call	___memcpy
      002B32 E8 06                 9723 	add	sp, #6
                                   9724 ;src/main.c:1052: enemyOptions[2] = miniship;
      002B34 11 12 00              9725 	ld	de, #0x0012
      002B37 D5                    9726 	push	de
      002B38 11r34r00              9727 	ld	de, #_miniship
      002B3B D5                    9728 	push	de
      002B3C 11r24r00              9729 	ld	de, #(_enemyOptions + 36)
      002B3F D5                    9730 	push	de
      002B40 CDr00r00              9731 	call	___memcpy
      002B43 E8 06                 9732 	add	sp, #6
                                   9733 ;src/main.c:1053: enemyOptions[3] = shieldship;
      002B45 11 12 00              9734 	ld	de, #0x0012
      002B48 D5                    9735 	push	de
      002B49 11r58r00              9736 	ld	de, #_shieldship
      002B4C D5                    9737 	push	de
      002B4D 11r36r00              9738 	ld	de, #(_enemyOptions + 54)
      002B50 D5                    9739 	push	de
      002B51 CDr00r00              9740 	call	___memcpy
      002B54 E8 06                 9741 	add	sp, #6
                                   9742 ;src/main.c:1055: enemyOptions[4] = bigblob;
      002B56 11 12 00              9743 	ld	de, #0x0012
      002B59 D5                    9744 	push	de
      002B5A 11r46r00              9745 	ld	de, #_bigblob
      002B5D D5                    9746 	push	de
      002B5E 11r48r00              9747 	ld	de, #(_enemyOptions + 72)
      002B61 D5                    9748 	push	de
      002B62 CDr00r00              9749 	call	___memcpy
      002B65 E8 06                 9750 	add	sp, #6
                                   9751 ;src/main.c:1056: }
      002B67 C9                    9752 	ret
                                   9753 ;src/main.c:1059: void initProjectiles() {
                                   9754 ;	---------------------------------
                                   9755 ; Function initProjectiles
                                   9756 ; ---------------------------------
      002B68                       9757 _initProjectiles::
                                   9758 ;src/main.c:1060: set_sprite_data(0x20, 17, ProjectileTiles); 
      002B68 11rE8r05              9759 	ld	de, #_ProjectileTiles
      002B6B D5                    9760 	push	de
      002B6C 21 20 11              9761 	ld	hl, #0x1120
      002B6F E5                    9762 	push	hl
      002B70 CDr00r00              9763 	call	_set_sprite_data
      002B73 E8 04                 9764 	add	sp, #4
                                   9765 ;src/main.c:1062: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002B75 AF                    9766 	xor	a, a
      002B76                       9767 00103$:
      002B76 21r99r08              9768 	ld	hl, #_PROJECTILECOUNT
      002B79 4E                    9769 	ld	c, (hl)
      002B7A B9                    9770 	cp	a, c
      002B7B D0                    9771 	ret	NC
      002B7C 3C                    9772 	inc	a
                                   9773 ;src/main.c:1066: }
      002B7D 18 F7                 9774 	jr	00103$
                                   9775 ;src/main.c:1068: void initGame() {
                                   9776 ;	---------------------------------
                                   9777 ; Function initGame
                                   9778 ; ---------------------------------
      002B7F                       9779 _initGame::
                                   9780 ;src/main.c:1071: xDir = 0;
      002B7F 21r93r00              9781 	ld	hl, #_xDir
      002B82 36 00                 9782 	ld	(hl), #0x00
                                   9783 ;src/main.c:1072: yDir = -1;
      002B84 21r94r00              9784 	ld	hl, #_yDir
      002B87 36 FF                 9785 	ld	(hl), #0xff
                                   9786 ;src/main.c:1073: xSpeed = 0;
      002B89 21r95r00              9787 	ld	hl, #_xSpeed
      002B8C 36 00                 9788 	ld	(hl), #0x00
                                   9789 ;src/main.c:1074: ySpeed = 0;
      002B8E 21r96r00              9790 	ld	hl, #_ySpeed
      002B91 36 00                 9791 	ld	(hl), #0x00
                                   9792 ;src/main.c:1077: playerX = 80<<5;
      002B93 21r97r00              9793 	ld	hl, #_playerX
      002B96 36 00                 9794 	ld	(hl), #0x00
      002B98 23                    9795 	inc	hl
      002B99 36 0A                 9796 	ld	(hl), #0x0a
                                   9797 ;src/main.c:1078: playerY = 80<<5;
      002B9B 21r99r00              9798 	ld	hl, #_playerY
      002B9E 36 00                 9799 	ld	(hl), #0x00
      002BA0 23                    9800 	inc	hl
      002BA1 36 0A                 9801 	ld	(hl), #0x0a
                                   9802 ;src/main.c:1080: playerDrawX = 80;
      002BA3 21r9Br00              9803 	ld	hl, #_playerDrawX
      002BA6 36 50                 9804 	ld	(hl), #0x50
                                   9805 ;src/main.c:1081: playerDrawY = 80;
      002BA8 21r9Cr00              9806 	ld	hl, #_playerDrawY
      002BAB 36 50                 9807 	ld	(hl), #0x50
                                   9808 ;src/main.c:1084: bgX = 0;
      002BAD AF                    9809 	xor	a, a
      002BAE 21r9Dr00              9810 	ld	hl, #_bgX
      002BB1 22                    9811 	ld	(hl+), a
      002BB2 77                    9812 	ld	(hl), a
                                   9813 ;src/main.c:1085: bgY = 0;
      002BB3 AF                    9814 	xor	a, a
      002BB4 21r9Fr00              9815 	ld	hl, #_bgY
      002BB7 22                    9816 	ld	(hl+), a
      002BB8 77                    9817 	ld	(hl), a
                                   9818 ;src/main.c:1087: hull = maxHull;
      002BB9 FAr9Br08              9819 	ld	a, (#_maxHull)
      002BBC EArF6r00              9820 	ld	(#_hull),a
                                   9821 ;src/main.c:1088: shield = maxShield;
      002BBF FAr9Cr08              9822 	ld	a, (#_maxShield)
      002BC2 EArF7r00              9823 	ld	(#_shield),a
                                   9824 ;src/main.c:1090: DISPLAY_ON;
      002BC5 F0r00                 9825 	ldh	a, (_LCDC_REG + 0)
      002BC7 F6 80                 9826 	or	a, #0x80
      002BC9 E0r00                 9827 	ldh	(_LCDC_REG + 0), a
                                   9828 ;src/main.c:1091: SPRITES_8x16;
      002BCB F0r00                 9829 	ldh	a, (_LCDC_REG + 0)
      002BCD F6 04                 9830 	or	a, #0x04
      002BCF E0r00                 9831 	ldh	(_LCDC_REG + 0), a
                                   9832 ;src/main.c:1092: set_sprite_data(0, 12, Player1);
      002BD1 11r83r07              9833 	ld	de, #_Player1
      002BD4 D5                    9834 	push	de
      002BD5 21 00 0C              9835 	ld	hl, #0xc00
      002BD8 E5                    9836 	push	hl
      002BD9 CDr00r00              9837 	call	_set_sprite_data
      002BDC E8 04                 9838 	add	sp, #4
                                   9839 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002BDE 21r02r00              9840 	ld	hl, #(_shadow_OAM + 2)
      002BE1 36 00                 9841 	ld	(hl), #0x00
      002BE3 21r06r00              9842 	ld	hl, #(_shadow_OAM + 6)
      002BE6 36 02                 9843 	ld	(hl), #0x02
                                   9844 ;src/main.c:1098: SHOW_SPRITES;
      002BE8 F0r00                 9845 	ldh	a, (_LCDC_REG + 0)
      002BEA F6 02                 9846 	or	a, #0x02
      002BEC E0r00                 9847 	ldh	(_LCDC_REG + 0), a
                                   9848 ;src/main.c:1102: font_init();
      002BEE CDr00r00              9849 	call	_font_init
                                   9850 ;src/main.c:1104: min_font = font_load(font_min); // 36 tiles of characters
      002BF1 11r00r00              9851 	ld	de, #_font_min
      002BF4 D5                    9852 	push	de
      002BF5 CDr00r00              9853 	call	_font_load
      002BF8 E1                    9854 	pop	hl
      002BF9 21rF8r00              9855 	ld	hl, #_min_font
      002BFC 7B                    9856 	ld	a, e
      002BFD 22                    9857 	ld	(hl+), a
                                   9858 ;src/main.c:1105: font_set(min_font);
      002BFE 7A                    9859 	ld	a, d
      002BFF 32                    9860 	ld	(hl-), a
      002C00 2A                    9861 	ld	a, (hl+)
      002C01 5F                    9862 	ld	e, a
      002C02 56                    9863 	ld	d, (hl)
      002C03 D5                    9864 	push	de
      002C04 CDr00r00              9865 	call	_font_set
      002C07 E1                    9866 	pop	hl
                                   9867 ;src/main.c:1106: set_win_tiles(1,0,4,1,hullabel);
      002C08 11r00r00              9868 	ld	de, #_hullabel
      002C0B D5                    9869 	push	de
      002C0C 21 04 01              9870 	ld	hl, #0x104
      002C0F E5                    9871 	push	hl
      002C10 21 01 00              9872 	ld	hl, #0x01
      002C13 E5                    9873 	push	hl
      002C14 CDr00r00              9874 	call	_set_win_tiles
      002C17 E8 06                 9875 	add	sp, #6
                                   9876 ;src/main.c:1107: set_win_tiles(1,1,4,1,shieldlabel);
      002C19 11r04r00              9877 	ld	de, #_shieldlabel
      002C1C D5                    9878 	push	de
      002C1D 21 04 01              9879 	ld	hl, #0x104
      002C20 E5                    9880 	push	hl
      002C21 21 01 01              9881 	ld	hl, #0x101
      002C24 E5                    9882 	push	hl
      002C25 CDr00r00              9883 	call	_set_win_tiles
      002C28 E8 06                 9884 	add	sp, #6
                                   9885 ;src/main.c:1112: set_bkg_data(0x50,1,healthblock);
      002C2A 11r07r05              9886 	ld	de, #_healthblock
      002C2D D5                    9887 	push	de
      002C2E 21 50 01              9888 	ld	hl, #0x150
      002C31 E5                    9889 	push	hl
      002C32 CDr00r00              9890 	call	_set_bkg_data
      002C35 E8 04                 9891 	add	sp, #4
                                   9892 ;src/main.c:1114: setHealthBar(0, hull);
      002C37 FArF6r00              9893 	ld	a, (#_hull)
      002C3A 67                    9894 	ld	h, a
      002C3B 2E 00                 9895 	ld	l, #0x00
      002C3D E5                    9896 	push	hl
      002C3E CDr9Fr08              9897 	call	_setHealthBar
      002C41 E1                    9898 	pop	hl
                                   9899 ;src/main.c:1115: setHealthBar(1, shield);
      002C42 FArF7r00              9900 	ld	a, (#_shield)
      002C45 67                    9901 	ld	h, a
      002C46 2E 01                 9902 	ld	l, #0x01
      002C48 E5                    9903 	push	hl
      002C49 CDr9Fr08              9904 	call	_setHealthBar
      002C4C E1                    9905 	pop	hl
                                   9906 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      002C4D 3E 07                 9907 	ld	a, #0x07
      002C4F E0r00                 9908 	ldh	(_WX_REG + 0), a
      002C51 3E 7E                 9909 	ld	a, #0x7e
      002C53 E0r00                 9910 	ldh	(_WY_REG + 0), a
                                   9911 ;src/main.c:1122: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      002C55 11r87r04              9912 	ld	de, #_backgroundtiles
      002C58 D5                    9913 	push	de
      002C59 21 25 08              9914 	ld	hl, #0x825
      002C5C E5                    9915 	push	hl
      002C5D CDr00r00              9916 	call	_set_bkg_data
      002C60 E8 04                 9917 	add	sp, #4
                                   9918 ;src/main.c:1123: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      002C62 11r87r00              9919 	ld	de, #_background1
      002C65 D5                    9920 	push	de
      002C66 21 20 20              9921 	ld	hl, #0x2020
      002C69 E5                    9922 	push	hl
      002C6A AF                    9923 	xor	a, a
      002C6B 0F                    9924 	rrca
      002C6C F5                    9925 	push	af
      002C6D CDr00r00              9926 	call	_set_bkg_tiles
      002C70 E8 06                 9927 	add	sp, #6
                                   9928 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      002C72 AF                    9929 	xor	a, a
      002C73 E0r00                 9930 	ldh	(_SCX_REG + 0), a
      002C75 AF                    9931 	xor	a, a
      002C76 E0r00                 9932 	ldh	(_SCY_REG + 0), a
                                   9933 ;src/main.c:1129: set_bkg_data(0x51, 18, ProjectileTiles);
      002C78 11rE8r05              9934 	ld	de, #_ProjectileTiles
      002C7B D5                    9935 	push	de
      002C7C 21 51 12              9936 	ld	hl, #0x1251
      002C7F E5                    9937 	push	hl
      002C80 CDr00r00              9938 	call	_set_bkg_data
      002C83 E8 04                 9939 	add	sp, #4
                                   9940 ;src/main.c:1131: set_win_tiles(10, 0,4,1,weaponlabel);
      002C85 11r08r00              9941 	ld	de, #_weaponlabel
      002C88 D5                    9942 	push	de
      002C89 21 04 01              9943 	ld	hl, #0x104
      002C8C E5                    9944 	push	hl
      002C8D 21 0A 00              9945 	ld	hl, #0x0a
      002C90 E5                    9946 	push	hl
      002C91 CDr00r00              9947 	call	_set_win_tiles
      002C94 E8 06                 9948 	add	sp, #6
                                   9949 ;src/main.c:1132: set_win_tiles(10, 1,4,1,scorelabel);
      002C96 11r0Cr00              9950 	ld	de, #_scorelabel
      002C99 D5                    9951 	push	de
      002C9A 21 04 01              9952 	ld	hl, #0x104
      002C9D E5                    9953 	push	hl
      002C9E 21 0A 01              9954 	ld	hl, #0x10a
      002CA1 E5                    9955 	push	hl
      002CA2 CDr00r00              9956 	call	_set_win_tiles
      002CA5 E8 06                 9957 	add	sp, #6
                                   9958 ;src/main.c:1134: setGunIcon();
      002CA7 CDr05r22              9959 	call	_setGunIcon
                                   9960 ;src/main.c:1135: SHOW_BKG;
      002CAA F0r00                 9961 	ldh	a, (_LCDC_REG + 0)
      002CAC F6 01                 9962 	or	a, #0x01
      002CAE E0r00                 9963 	ldh	(_LCDC_REG + 0), a
                                   9964 ;src/main.c:1136: SHOW_WIN;;
      002CB0 F0r00                 9965 	ldh	a, (_LCDC_REG + 0)
      002CB2 F6 20                 9966 	or	a, #0x20
      002CB4 E0r00                 9967 	ldh	(_LCDC_REG + 0), a
                                   9968 ;src/main.c:1138: SCORE = MAKE_BCD(00000);
      002CB6 AF                    9969 	xor	a, a
      002CB7 21rB3r00              9970 	ld	hl, #_SCORE
      002CBA 22                    9971 	ld	(hl+), a
      002CBB 22                    9972 	ld	(hl+), a
      002CBC 22                    9973 	ld	(hl+), a
      002CBD 77                    9974 	ld	(hl), a
                                   9975 ;src/main.c:1139: updateScore();
      002CBE CDrB0r09              9976 	call	_updateScore
                                   9977 ;src/main.c:1140: MISSILES = MAKE_BCD(1);
      002CC1 21rA9r00              9978 	ld	hl, #_MISSILES
      002CC4 3E 01                 9979 	ld	a, #0x01
      002CC6 22                    9980 	ld	(hl+), a
      002CC7 AF                    9981 	xor	a, a
      002CC8 22                    9982 	ld	(hl+), a
      002CC9 22                    9983 	ld	(hl+), a
      002CCA 77                    9984 	ld	(hl), a
                                   9985 ;src/main.c:1141: updateMissileCount(0);
      002CCB AF                    9986 	xor	a, a
      002CCC F5                    9987 	push	af
      002CCD 33                    9988 	inc	sp
      002CCE CDrDAr09              9989 	call	_updateMissileCount
      002CD1 33                    9990 	inc	sp
                                   9991 ;src/main.c:1142: set_win_tiles(17, 0,1,1,gunMap+2);
      002CD2 11rB0r00              9992 	ld	de, #(_gunMap + 2)
      002CD5 D5                    9993 	push	de
      002CD6 21 01 01              9994 	ld	hl, #0x101
      002CD9 E5                    9995 	push	hl
      002CDA 21 11 00              9996 	ld	hl, #0x11
      002CDD E5                    9997 	push	hl
      002CDE CDr00r00              9998 	call	_set_win_tiles
      002CE1 E8 06                 9999 	add	sp, #6
                                  10000 ;src/main.c:1146: pickup = upgrade;//upgrade;
      002CE3 11 09 00             10001 	ld	de, #0x0009
      002CE6 D5                   10002 	push	de
      002CE7 11r08r07             10003 	ld	de, #_upgrade
      002CEA D5                   10004 	push	de
      002CEB 11rFAr00             10005 	ld	de, #_pickup
      002CEE D5                   10006 	push	de
      002CEF CDr00r00             10007 	call	___memcpy
      002CF2 E8 06                10008 	add	sp, #6
                                  10009 ;src/main.c:1148: set_sprite_data(0x70, 6, Pickups);
      002CF4 11r23r07             10010 	ld	de, #_Pickups
      002CF7 D5                   10011 	push	de
      002CF8 21 70 06             10012 	ld	hl, #0x670
      002CFB E5                   10013 	push	hl
      002CFC CDr00r00             10014 	call	_set_sprite_data
      002CFF E8 04                10015 	add	sp, #4
                                  10016 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002D01 21r0Er00             10017 	ld	hl, #(_shadow_OAM + 14)
      002D04 36 7F                10018 	ld	(hl), #0x7f
                                  10019 ;src/main.c:1152: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002D06 FArFDr00             10020 	ld	a, (#(_pickup + 3) + 0)
      002D09 C6 0C                10021 	add	a, #0x0c
      002D0B 47                   10022 	ld	b, a
      002D0C FArFBr00             10023 	ld	a, (#(_pickup + 1) + 0)
      002D0F C6 04                10024 	add	a, #0x04
      002D11 4F                   10025 	ld	c, a
                                  10026 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002D12 21r0Cr00             10027 	ld	hl, #(_shadow_OAM + 12)
                                  10028 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002D15 78                   10029 	ld	a, b
      002D16 22                   10030 	ld	(hl+), a
      002D17 71                   10031 	ld	(hl), c
                                  10032 ;src/main.c:1152: move_sprite(3, pickup.x + 4, pickup.y + 12);
                                  10033 ;src/main.c:1154: }
      002D18 C9                   10034 	ret
                                  10035 ;src/main.c:1156: void main(){
                                  10036 ;	---------------------------------
                                  10037 ; Function main
                                  10038 ; ---------------------------------
      002D19                      10039 _main::
                                  10040 ;src/main.c:1159: initEnemyOptions();
      002D19 CDr12r2B             10041 	call	_initEnemyOptions
                                  10042 ;src/main.c:1162: STAT_REG = 0x45;
      002D1C 3E 45                10043 	ld	a, #0x45
      002D1E E0r00                10044 	ldh	(_STAT_REG + 0), a
                                  10045 ;src/main.c:1163: LYC_REG = 0x7e; //line 126
      002D20 3E 7E                10046 	ld	a, #0x7e
      002D22 E0r00                10047 	ldh	(_LYC_REG + 0), a
                                  10048 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      002D24 F3                   10049 	di
                                  10050 ;src/main.c:1165: add_LCD(interruptLCD);
      002D25 11r00r00             10051 	ld	de, #_interruptLCD
      002D28 D5                   10052 	push	de
      002D29 CDr00r00             10053 	call	_add_LCD
      002D2C 33                   10054 	inc	sp
      002D2D 33                   10055 	inc	sp
                                  10056 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      002D2E FB                   10057 	ei
                                  10058 ;src/main.c:1167: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      002D2F 3E 03                10059 	ld	a, #0x03
      002D31 F5                   10060 	push	af
      002D32 33                   10061 	inc	sp
      002D33 CDr00r00             10062 	call	_set_interrupts
      002D36 33                   10063 	inc	sp
                                  10064 ;src/main.c:1171: NR52_REG = 0x80; // sound on 
      002D37 3E 80                10065 	ld	a, #0x80
      002D39 E0r00                10066 	ldh	(_NR52_REG + 0), a
                                  10067 ;src/main.c:1172: NR50_REG = 0x77; // volume
      002D3B 3E 77                10068 	ld	a, #0x77
      002D3D E0r00                10069 	ldh	(_NR50_REG + 0), a
                                  10070 ;src/main.c:1173: NR51_REG = 0xFF; // all channels
      002D3F 3E FF                10071 	ld	a, #0xff
      002D41 E0r00                10072 	ldh	(_NR51_REG + 0), a
                                  10073 ;src/main.c:1177: waitpad(J_A);
      002D43 3E 10                10074 	ld	a, #0x10
      002D45 F5                   10075 	push	af
      002D46 33                   10076 	inc	sp
      002D47 CDr00r00             10077 	call	_waitpad
      002D4A 33                   10078 	inc	sp
                                  10079 ;src/main.c:1178: uint16_t seed = LY_REG;
      002D4B F0r00                10080 	ldh	a, (_LY_REG + 0)
      002D4D 4F                   10081 	ld	c, a
      002D4E 06 00                10082 	ld	b, #0x00
                                  10083 ;src/main.c:1179: seed |= (uint16_t)DIV_REG << 8;
      002D50 F0r00                10084 	ldh	a, (_DIV_REG + 0)
      002D52 5F                   10085 	ld	e, a
      002D53 AF                   10086 	xor	a, a
      002D54 B1                   10087 	or	a, c
      002D55 4F                   10088 	ld	c, a
      002D56 7B                   10089 	ld	a, e
      002D57 B0                   10090 	or	a, b
      002D58 47                   10091 	ld	b, a
                                  10092 ;src/main.c:1180: initrand(seed);
      002D59 C5                   10093 	push	bc
      002D5A CDr00r00             10094 	call	_initrand
      002D5D E1                   10095 	pop	hl
                                  10096 ;src/main.c:1185: initGame();
      002D5E CDr7Fr2B             10097 	call	_initGame
                                  10098 ;src/main.c:1186: initEnemies(1);
      002D61 3E 01                10099 	ld	a, #0x01
      002D63 F5                   10100 	push	af
      002D64 33                   10101 	inc	sp
      002D65 CDrF4r0C             10102 	call	_initEnemies
      002D68 33                   10103 	inc	sp
                                  10104 ;src/main.c:1187: initProjectiles();
      002D69 CDr68r2B             10105 	call	_initProjectiles
                                  10106 ;src/main.c:1189: while(1) {
      002D6C                      10107 00119$:
                                  10108 ;src/main.c:1190: SHOW_SPRITES;
      002D6C F0r00                10109 	ldh	a, (_LCDC_REG + 0)
      002D6E F6 02                10110 	or	a, #0x02
      002D70 E0r00                10111 	ldh	(_LCDC_REG + 0), a
                                  10112 ;src/main.c:1192: joydata = joypad(); // query for button states
      002D72 CDr00r00             10113 	call	_joypad
      002D75 21rF5r00             10114 	ld	hl, #_joydata
      002D78 73                   10115 	ld	(hl), e
                                  10116 ;src/main.c:1194: updateDirection(); // set player direction
      002D79 CDr67r0A             10117 	call	_updateDirection
                                  10118 ;src/main.c:1197: move(); 
      002D7C CDrBEr16             10119 	call	_move
                                  10120 ;src/main.c:1199: updateEnemyPositions();
      002D7F CDr5Fr0E             10121 	call	_updateEnemyPositions
                                  10122 ;src/main.c:1202: checkCollision(); 
      002D82 CDr35r1D             10123 	call	_checkCollision
                                  10124 ;src/main.c:882: if (shield < maxShield) {
      002D85 21r9Cr08             10125 	ld	hl, #_maxShield
      002D88 4E                   10126 	ld	c, (hl)
      002D89 59                   10127 	ld	e, c
      002D8A 21rF7r00             10128 	ld	hl, #_shield
      002D8D 56                   10129 	ld	d, (hl)
      002D8E 7E                   10130 	ld	a, (hl)
      002D8F 91                   10131 	sub	a, c
      002D90 CB 7B                10132 	bit	7, e
      002D92 28 07                10133 	jr	Z, 00186$
      002D94 CB 7A                10134 	bit	7, d
      002D96 20 08                10135 	jr	NZ, 00187$
      002D98 BF                   10136 	cp	a, a
      002D99 18 05                10137 	jr	00187$
      002D9B                      10138 00186$:
      002D9B CB 7A                10139 	bit	7, d
      002D9D 28 01                10140 	jr	Z, 00187$
      002D9F 37                   10141 	scf
      002DA0                      10142 00187$:
      002DA0 30 04                10143 	jr	NC, 00127$
                                  10144 ;src/main.c:883: shield += 1;
      002DA2 21rF7r00             10145 	ld	hl, #_shield
      002DA5 34                   10146 	inc	(hl)
      002DA6                      10147 00127$:
                                  10148 ;src/main.c:885: setHealthBar(0, hull);
      002DA6 FArF6r00             10149 	ld	a, (#_hull)
      002DA9 67                   10150 	ld	h, a
      002DAA 2E 00                10151 	ld	l, #0x00
      002DAC E5                   10152 	push	hl
      002DAD CDr9Fr08             10153 	call	_setHealthBar
      002DB0 E1                   10154 	pop	hl
                                  10155 ;src/main.c:886: setHealthBar(1, shield);
      002DB1 FArF7r00             10156 	ld	a, (#_shield)
      002DB4 67                   10157 	ld	h, a
      002DB5 2E 01                10158 	ld	l, #0x01
      002DB7 E5                   10159 	push	hl
      002DB8 CDr9Fr08             10160 	call	_setHealthBar
      002DBB E1                   10161 	pop	hl
                                  10162 ;src/main.c:1207: if (joydata & J_B && fireCooldown == 0) {
      002DBC FArF5r00             10163 	ld	a, (#_joydata)
      002DBF CB 6F                10164 	bit	5, a
      002DC1 28 09                10165 	jr	Z, 00102$
      002DC3 FAr92r00             10166 	ld	a, (#_fireCooldown)
      002DC6 B7                   10167 	or	a, a
      002DC7 20 03                10168 	jr	NZ, 00102$
                                  10169 ;src/main.c:1208: fire();
      002DC9 CDr38r22             10170 	call	_fire
      002DCC                      10171 00102$:
                                  10172 ;src/main.c:1210: if (fireCooldown > 0) {
      002DCC 21r92r00             10173 	ld	hl, #_fireCooldown
      002DCF 7E                   10174 	ld	a, (hl)
      002DD0 B7                   10175 	or	a, a
      002DD1 28 01                10176 	jr	Z, 00105$
                                  10177 ;src/main.c:1211: --fireCooldown;
      002DD3 35                   10178 	dec	(hl)
      002DD4                      10179 00105$:
                                  10180 ;src/main.c:1214: if (joydata & J_SELECT && switchDelay == 0) {
      002DD4 FArF5r00             10181 	ld	a, (#_joydata)
      002DD7 CB 77                10182 	bit	6, a
      002DD9 28 24                10183 	jr	Z, 00112$
      002DDB FArADr00             10184 	ld	a, (#_switchDelay)
      002DDE B7                   10185 	or	a, a
      002DDF 20 1E                10186 	jr	NZ, 00112$
                                  10187 ;src/main.c:1215: if (currentGun == 0) {
      002DE1 21rA7r00             10188 	ld	hl, #_currentGun
      002DE4 7E                   10189 	ld	a, (hl)
      002DE5 B7                   10190 	or	a, a
      002DE6 20 04                10191 	jr	NZ, 00109$
                                  10192 ;src/main.c:1216: currentGun = 1;
      002DE8 36 01                10193 	ld	(hl), #0x01
      002DEA 18 0B                10194 	jr	00110$
      002DEC                      10195 00109$:
                                  10196 ;src/main.c:1218: else if (currentGun == 1) {
      002DEC FArA7r00             10197 	ld	a, (#_currentGun)
      002DEF 3D                   10198 	dec	a
      002DF0 20 05                10199 	jr	NZ, 00110$
                                  10200 ;src/main.c:1219: currentGun = 0;
      002DF2 21rA7r00             10201 	ld	hl, #_currentGun
      002DF5 36 00                10202 	ld	(hl), #0x00
      002DF7                      10203 00110$:
                                  10204 ;src/main.c:1221: setGunIcon();
      002DF7 CDr05r22             10205 	call	_setGunIcon
                                  10206 ;src/main.c:1222: switchDelay = 30;
      002DFA 21rADr00             10207 	ld	hl, #_switchDelay
      002DFD 36 1E                10208 	ld	(hl), #0x1e
      002DFF                      10209 00112$:
                                  10210 ;src/main.c:1224: if (switchDelay != 0) {
      002DFF 21rADr00             10211 	ld	hl, #_switchDelay
      002E02 7E                   10212 	ld	a, (hl)
      002E03 B7                   10213 	or	a, a
      002E04 28 01                10214 	jr	Z, 00115$
                                  10215 ;src/main.c:1225: switchDelay--;
      002E06 35                   10216 	dec	(hl)
      002E07                      10217 00115$:
                                  10218 ;src/main.c:1227: moveProjectiles();
      002E07 CDrE1r27             10219 	call	_moveProjectiles
                                  10220 ;src/main.c:1228: tickPickups();
      002E0A CDr42r29             10221 	call	_tickPickups
                                  10222 ;src/main.c:1232: if (hull > 100) {
      002E0D 3E 64                10223 	ld	a, #0x64
      002E0F 21rF6r00             10224 	ld	hl, #_hull
      002E12 96                   10225 	sub	a, (hl)
      002E13 30 02                10226 	jr	NC, 00117$
                                  10227 ;src/main.c:1233: hull = 0;
      002E15 36 00                10228 	ld	(hl), #0x00
      002E17                      10229 00117$:
                                  10230 ;src/main.c:1236: SHOW_WIN;	
      002E17 F0r00                10231 	ldh	a, (_LCDC_REG + 0)
      002E19 F6 20                10232 	or	a, #0x20
      002E1B E0r00                10233 	ldh	(_LCDC_REG + 0), a
                                  10234 ;src/main.c:1237: wait_vbl_done(); // Idle until next frame
      002E1D CDr00r00             10235 	call	_wait_vbl_done
                                  10236 ;src/main.c:1242: }
      002E20 C3r6Cr2D             10237 	jp	00119$
                                  10238 	.area _CODE
                                  10239 	.area _INITIALIZER
      000000                      10240 __xinit__hullabel:
      000000 12                   10241 	.db #0x12	; 18
      000001 1F                   10242 	.db #0x1f	; 31
      000002 16                   10243 	.db #0x16	; 22
      000003 16                   10244 	.db #0x16	; 22
      000004                      10245 __xinit__shieldlabel:
      000004 1D                   10246 	.db #0x1d	; 29
      000005 12                   10247 	.db #0x12	; 18
      000006 16                   10248 	.db #0x16	; 22
      000007 0E                   10249 	.db #0x0e	; 14
      000008                      10250 __xinit__weaponlabel:
      000008 21                   10251 	.db #0x21	; 33
      000009 0F                   10252 	.db #0x0f	; 15
      00000A 1A                   10253 	.db #0x1a	; 26
      00000B 18                   10254 	.db #0x18	; 24
      00000C                      10255 __xinit__scorelabel:
      00000C 1D                   10256 	.db #0x1d	; 29
      00000D 0D                   10257 	.db #0x0d	; 13
      00000E 1C                   10258 	.db #0x1c	; 28
      00000F 0F                   10259 	.db #0x0f	; 15
      000010                      10260 __xinit__blob:
      000010 00 00                10261 	.dw #0x0000
      000012 00 00                10262 	.dw #0x0000
      000014 00                   10263 	.db #0x00	;  0
      000015 00                   10264 	.db #0x00	;  0
      000016 40                   10265 	.db #0x40	; 64
      000017 00                   10266 	.db #0x00	; 0
      000018 01                   10267 	.db #0x01	; 1
      000019 01                   10268 	.db #0x01	; 1
      00001A 01                   10269 	.db #0x01	; 1
      00001B 32                   10270 	.db #0x32	; 50	'2'
      00001C 03                   10271 	.db #0x03	;  3
      00001D 01                   10272 	.db #0x01	; 1
      00001E 00                   10273 	.db #0x00	;  0
      00001F 00                   10274 	.db #0x00	;  0
      000020 32 00                10275 	.dw #0x0032
      000022                      10276 __xinit__bomb:
      000022 00 00                10277 	.dw #0x0000
      000024 00 00                10278 	.dw #0x0000
      000026 00                   10279 	.db #0x00	;  0
      000027 00                   10280 	.db #0x00	;  0
      000028 42                   10281 	.db #0x42	; 66	'B'
      000029 00                   10282 	.db #0x00	; 0
      00002A 01                   10283 	.db #0x01	; 1
      00002B 01                   10284 	.db #0x01	; 1
      00002C 01                   10285 	.db #0x01	; 1
      00002D 32                   10286 	.db #0x32	; 50	'2'
      00002E 05                   10287 	.db #0x05	;  5
      00002F 01                   10288 	.db #0x01	; 1
      000030 00                   10289 	.db #0x00	;  0
      000031 00                   10290 	.db #0x00	;  0
      000032 32 00                10291 	.dw #0x0032
      000034                      10292 __xinit__miniship:
      000034 00 00                10293 	.dw #0x0000
      000036 00 00                10294 	.dw #0x0000
      000038 00                   10295 	.db #0x00	;  0
      000039 00                   10296 	.db #0x00	;  0
      00003A 44                   10297 	.db #0x44	; 68	'D'
      00003B 00                   10298 	.db #0x00	; 0
      00003C 01                   10299 	.db #0x01	; 1
      00003D 01                   10300 	.db #0x01	; 1
      00003E 01                   10301 	.db #0x01	; 1
      00003F 32                   10302 	.db #0x32	; 50	'2'
      000040 05                   10303 	.db #0x05	;  5
      000041 01                   10304 	.db #0x01	; 1
      000042 00                   10305 	.db #0x00	;  0
      000043 00                   10306 	.db #0x00	;  0
      000044 32 00                10307 	.dw #0x0032
      000046                      10308 __xinit__bigblob:
      000046 00 00                10309 	.dw #0x0000
      000048 00 00                10310 	.dw #0x0000
      00004A 00                   10311 	.db #0x00	;  0
      00004B 00                   10312 	.db #0x00	;  0
      00004C 50                   10313 	.db #0x50	; 80	'P'
      00004D 52                   10314 	.db #0x52	; 82	'R'
      00004E 02                   10315 	.db #0x02	; 2
      00004F 01                   10316 	.db #0x01	; 1
      000050 01                   10317 	.db #0x01	; 1
      000051 32                   10318 	.db #0x32	; 50	'2'
      000052 03                   10319 	.db #0x03	;  3
      000053 01                   10320 	.db #0x01	; 1
      000054 00                   10321 	.db #0x00	;  0
      000055 00                   10322 	.db #0x00	;  0
      000056 64 00                10323 	.dw #0x0064
      000058                      10324 __xinit__shieldship:
      000058 00 00                10325 	.dw #0x0000
      00005A 00 00                10326 	.dw #0x0000
      00005C 00                   10327 	.db #0x00	;  0
      00005D 00                   10328 	.db #0x00	;  0
      00005E 54                   10329 	.db #0x54	; 84	'T'
      00005F 56                   10330 	.db #0x56	; 86	'V'
      000060 02                   10331 	.db #0x02	; 2
      000061 01                   10332 	.db #0x01	; 1
      000062 01                   10333 	.db #0x01	; 1
      000063 32                   10334 	.db #0x32	; 50	'2'
      000064 03                   10335 	.db #0x03	;  3
      000065 01                   10336 	.db #0x01	; 1
      000066 00                   10337 	.db #0x00	;  0
      000067 00                   10338 	.db #0x00	;  0
      000068 46 00                10339 	.dw #0x0046
      00006A                      10340 __xinit__singleGun:
      00006A 00 00                10341 	.dw #0x0000
      00006C 00 00                10342 	.dw #0x0000
      00006E 00                   10343 	.db #0x00	;  0
      00006F 00                   10344 	.db #0x00	;  0
      000070 FF                   10345 	.db #0xff	; -1
      000071 02                   10346 	.db #0x02	; 2
      000072 32 00                10347 	.dw #0x0032
      000074 01                   10348 	.db #0x01	; 1
      000075 0F                   10349 	.db #0x0f	; 15
      000076 20                   10350 	.db #0x20	; 32
      000077                      10351 __xinit__doubleGun:
      000077 00 00                10352 	.dw #0x0000
      000079 00 00                10353 	.dw #0x0000
      00007B 00                   10354 	.db #0x00	;  0
      00007C 00                   10355 	.db #0x00	;  0
      00007D FF                   10356 	.db #0xff	; -1
      00007E 02                   10357 	.db #0x02	; 2
      00007F 46 00                10358 	.dw #0x0046
      000081 01                   10359 	.db #0x01	; 1
      000082 0F                   10360 	.db #0x0f	; 15
      000083 26                   10361 	.db #0x26	; 38
      000084                      10362 __xinit__missile:
      000084 00 00                10363 	.dw #0x0000
      000086 00 00                10364 	.dw #0x0000
      000088 00                   10365 	.db #0x00	;  0
      000089 00                   10366 	.db #0x00	;  0
      00008A FF                   10367 	.db #0xff	; -1
      00008B 01                   10368 	.db #0x01	; 1
      00008C 64 00                10369 	.dw #0x0064
      00008E 01                   10370 	.db #0x01	; 1
      00008F 1E                   10371 	.db #0x1e	; 30
      000090 2C                   10372 	.db #0x2c	; 44
      000091                      10373 __xinit__oldestProjectile:
      000091 00                   10374 	.db #0x00	; 0
      000092                      10375 __xinit__fireCooldown:
      000092 00                   10376 	.db #0x00	; 0
      000093                      10377 __xinit__xDir:
      000093 00                   10378 	.db #0x00	;  0
      000094                      10379 __xinit__yDir:
      000094 FF                   10380 	.db #0xff	; -1
      000095                      10381 __xinit__xSpeed:
      000095 00                   10382 	.db #0x00	;  0
      000096                      10383 __xinit__ySpeed:
      000096 00                   10384 	.db #0x00	;  0
      000097                      10385 __xinit__playerX:
      000097 00 0A                10386 	.dw #0x0a00
      000099                      10387 __xinit__playerY:
      000099 00 0A                10388 	.dw #0x0a00
      00009B                      10389 __xinit__playerDrawX:
      00009B 50                   10390 	.db #0x50	; 80	'P'
      00009C                      10391 __xinit__playerDrawY:
      00009C 50                   10392 	.db #0x50	; 80	'P'
      00009D                      10393 __xinit__bgX:
      00009D 00 00                10394 	.dw #0x0000
      00009F                      10395 __xinit__bgY:
      00009F 00 00                10396 	.dw #0x0000
      0000A1                      10397 __xinit__xOverflow:
      0000A1 00 00                10398 	.dw #0x0000
      0000A3                      10399 __xinit__yOverflow:
      0000A3 00 00                10400 	.dw #0x0000
      0000A5                      10401 __xinit__enemyCollisionCount:
      0000A5 00                   10402 	.db #0x00	; 0
      0000A6                      10403 __xinit__gunLevel:
      0000A6 00                   10404 	.db #0x00	; 0
      0000A7                      10405 __xinit__currentGun:
      0000A7 00                   10406 	.db #0x00	; 0
      0000A8                      10407 __xinit__missiles:
      0000A8 01                   10408 	.db #0x01	; 1
      0000A9                      10409 __xinit__MISSILES:
      0000A9 00 00 00 00          10410 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000AD                      10411 __xinit__switchDelay:
      0000AD 00                   10412 	.db #0x00	; 0
      0000AE                      10413 __xinit__gunMap:
      0000AE 53                   10414 	.db #0x53	; 83	'S'
      0000AF 5B                   10415 	.db #0x5b	; 91
      0000B0 61                   10416 	.db #0x61	; 97	'a'
      0000B1                      10417 __xinit__score:
      0000B1 00 00                10418 	.dw #0x0000
      0000B3                      10419 __xinit__SCORE:
      0000B3 00 00 00 00          10420 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000B7                      10421 __xinit__INCREMENT:
      0000B7 01 00 00 00          10422 	.byte #0x01, #0x00, #0x00, #0x00	; 1
                                  10423 	.area _CABS (ABS)
