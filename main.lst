                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _moveProjectiles
                                     15 	.globl _fire
                                     16 	.globl _setGunIcon
                                     17 	.globl _checkCollision
                                     18 	.globl _takeDamage
                                     19 	.globl _move
                                     20 	.globl _initEnemies
                                     21 	.globl _updateEnemyPositions
                                     22 	.globl _playSound
                                     23 	.globl _updateDirection
                                     24 	.globl _incrementScore
                                     25 	.globl _updateScore
                                     26 	.globl _setHealthBar
                                     27 	.globl _interruptLCD
                                     28 	.globl _bcd2text
                                     29 	.globl _bcd_add
                                     30 	.globl _rand
                                     31 	.globl _initrand
                                     32 	.globl _font_set
                                     33 	.globl _font_load
                                     34 	.globl _font_init
                                     35 	.globl _set_sprite_data
                                     36 	.globl _set_win_tiles
                                     37 	.globl _set_bkg_tiles
                                     38 	.globl _set_bkg_data
                                     39 	.globl _wait_vbl_done
                                     40 	.globl _set_interrupts
                                     41 	.globl _waitpad
                                     42 	.globl _joypad
                                     43 	.globl _add_LCD
                                     44 	.globl _INCREMENT
                                     45 	.globl _bcd
                                     46 	.globl _score
                                     47 	.globl _gunMap
                                     48 	.globl _switchDelay
                                     49 	.globl _currentGun
                                     50 	.globl _enemyCollisionCount
                                     51 	.globl _yOverflow
                                     52 	.globl _xOverflow
                                     53 	.globl _bgY
                                     54 	.globl _bgX
                                     55 	.globl _playerDrawY
                                     56 	.globl _playerDrawX
                                     57 	.globl _playerY
                                     58 	.globl _playerX
                                     59 	.globl _ySpeed
                                     60 	.globl _xSpeed
                                     61 	.globl _yDir
                                     62 	.globl _xDir
                                     63 	.globl _fireCooldown
                                     64 	.globl _oldestProjectile
                                     65 	.globl _missile
                                     66 	.globl _doubleGun
                                     67 	.globl _singleGun
                                     68 	.globl _blob
                                     69 	.globl _scorelabel
                                     70 	.globl _weaponlabel
                                     71 	.globl _shieldlabel
                                     72 	.globl _hullabel
                                     73 	.globl _min_font
                                     74 	.globl _shield
                                     75 	.globl _hull
                                     76 	.globl _joydata
                                     77 	.globl _projectiles
                                     78 	.globl _enemies
                                     79 	.globl _GUNCOUNT
                                     80 	.globl _maxShield
                                     81 	.globl _maxHull
                                     82 	.globl _PLAYERSIZE
                                     83 	.globl _PROJECTILECOUNT
                                     84 	.globl _ySpawnPositions
                                     85 	.globl _xSpawnPositions
                                     86 	.globl _ENEMYCOUNT
                                     87 	.globl _EMPTYSPRITE
                                     88 	.globl _BLANK
                                     89 	.globl _BLANKSIZE
                                     90 	.globl _ProjectileTiles
                                     91 	.globl _projectile1
                                     92 	.globl _enemy1
                                     93 	.globl _healthblock
                                     94 	.globl _backgroundtiles
                                     95 	.globl _background1
                                     96 	.globl _cross
                                     97 ;--------------------------------------------------------
                                     98 ; special function registers
                                     99 ;--------------------------------------------------------
                                    100 ;--------------------------------------------------------
                                    101 ; ram data
                                    102 ;--------------------------------------------------------
                                    103 	.area _DATA
      000000                        104 _enemies::
      000000                        105 	.ds 80
      000050                        106 _projectiles::
      000050                        107 	.ds 55
      000087                        108 _joydata::
      000087                        109 	.ds 1
      000088                        110 _hull::
      000088                        111 	.ds 1
      000089                        112 _shield::
      000089                        113 	.ds 1
      00008A                        114 _min_font::
      00008A                        115 	.ds 2
                                    116 ;--------------------------------------------------------
                                    117 ; ram data
                                    118 ;--------------------------------------------------------
                                    119 	.area _INITIALIZED
      000000                        120 _hullabel::
      000000                        121 	.ds 4
      000004                        122 _shieldlabel::
      000004                        123 	.ds 4
      000008                        124 _weaponlabel::
      000008                        125 	.ds 4
      00000C                        126 _scorelabel::
      00000C                        127 	.ds 4
      000010                        128 _blob::
      000010                        129 	.ds 16
      000020                        130 _singleGun::
      000020                        131 	.ds 11
      00002B                        132 _doubleGun::
      00002B                        133 	.ds 11
      000036                        134 _missile::
      000036                        135 	.ds 11
      000041                        136 _oldestProjectile::
      000041                        137 	.ds 1
      000042                        138 _fireCooldown::
      000042                        139 	.ds 1
      000043                        140 _xDir::
      000043                        141 	.ds 1
      000044                        142 _yDir::
      000044                        143 	.ds 1
      000045                        144 _xSpeed::
      000045                        145 	.ds 1
      000046                        146 _ySpeed::
      000046                        147 	.ds 1
      000047                        148 _playerX::
      000047                        149 	.ds 2
      000049                        150 _playerY::
      000049                        151 	.ds 2
      00004B                        152 _playerDrawX::
      00004B                        153 	.ds 1
      00004C                        154 _playerDrawY::
      00004C                        155 	.ds 1
      00004D                        156 _bgX::
      00004D                        157 	.ds 2
      00004F                        158 _bgY::
      00004F                        159 	.ds 2
      000051                        160 _xOverflow::
      000051                        161 	.ds 2
      000053                        162 _yOverflow::
      000053                        163 	.ds 2
      000055                        164 _enemyCollisionCount::
      000055                        165 	.ds 1
      000056                        166 _currentGun::
      000056                        167 	.ds 1
      000057                        168 _switchDelay::
      000057                        169 	.ds 1
      000058                        170 _gunMap::
      000058                        171 	.ds 3
      00005B                        172 _score::
      00005B                        173 	.ds 2
      00005D                        174 _bcd::
      00005D                        175 	.ds 4
      000061                        176 _INCREMENT::
      000061                        177 	.ds 4
                                    178 ;--------------------------------------------------------
                                    179 ; absolute external ram data
                                    180 ;--------------------------------------------------------
                                    181 	.area _DABS (ABS)
                                    182 ;--------------------------------------------------------
                                    183 ; global & static initialisations
                                    184 ;--------------------------------------------------------
                                    185 	.area _HOME
                                    186 	.area _GSINIT
                                    187 	.area _GSFINAL
                                    188 	.area _GSINIT
                                    189 ;--------------------------------------------------------
                                    190 ; Home
                                    191 ;--------------------------------------------------------
                                    192 	.area _HOME
                                    193 	.area _HOME
                                    194 ;--------------------------------------------------------
                                    195 ; code
                                    196 ;--------------------------------------------------------
                                    197 	.area _CODE
                                    198 ;main.c:97: void interruptLCD()
                                    199 ;	---------------------------------
                                    200 ; Function interruptLCD
                                    201 ; ---------------------------------
      000000                        202 _interruptLCD::
                                    203 ;main.c:99: HIDE_SPRITES;
      000000 F0r00                  204 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  205 	and	a, #0xfd
      000004 E0r00                  206 	ldh	(_LCDC_REG + 0), a
                                    207 ;main.c:100: }
      000006 C9                     208 	ret
      000007                        209 _cross:
      000007 18                     210 	.db #0x18	; 24
      000008 18                     211 	.db #0x18	; 24
      000009 18                     212 	.db #0x18	; 24
      00000A 18                     213 	.db #0x18	; 24
      00000B 3C                     214 	.db #0x3c	; 60
      00000C 3C                     215 	.db #0x3c	; 60
      00000D 3C                     216 	.db #0x3c	; 60
      00000E 3C                     217 	.db #0x3c	; 60
      00000F 7E                     218 	.db #0x7e	; 126
      000010 7E                     219 	.db #0x7e	; 126
      000011 7E                     220 	.db #0x7e	; 126
      000012 7E                     221 	.db #0x7e	; 126
      000013 FF                     222 	.db #0xff	; 255
      000014 FF                     223 	.db #0xff	; 255
      000015 FF                     224 	.db #0xff	; 255
      000016 FF                     225 	.db #0xff	; 255
      000017 0F                     226 	.db #0x0f	; 15
      000018 0F                     227 	.db #0x0f	; 15
      000019 3F                     228 	.db #0x3f	; 63
      00001A 3F                     229 	.db #0x3f	; 63
      00001B FF                     230 	.db #0xff	; 255
      00001C FF                     231 	.db #0xff	; 255
      00001D FF                     232 	.db #0xff	; 255
      00001E FF                     233 	.db #0xff	; 255
      00001F 7E                     234 	.db #0x7e	; 126
      000020 7E                     235 	.db #0x7e	; 126
      000021 3E                     236 	.db #0x3e	; 62
      000022 3E                     237 	.db #0x3e	; 62
      000023 1C                     238 	.db #0x1c	; 28
      000024 1C                     239 	.db #0x1c	; 28
      000025 0C                     240 	.db #0x0c	; 12
      000026 0C                     241 	.db #0x0c	; 12
      000027 C0                     242 	.db #0xc0	; 192
      000028 C0                     243 	.db #0xc0	; 192
      000029 F0                     244 	.db #0xf0	; 240
      00002A F0                     245 	.db #0xf0	; 240
      00002B FC                     246 	.db #0xfc	; 252
      00002C FC                     247 	.db #0xfc	; 252
      00002D FF                     248 	.db #0xff	; 255
      00002E FF                     249 	.db #0xff	; 255
      00002F FF                     250 	.db #0xff	; 255
      000030 FF                     251 	.db #0xff	; 255
      000031 FC                     252 	.db #0xfc	; 252
      000032 FC                     253 	.db #0xfc	; 252
      000033 F0                     254 	.db #0xf0	; 240
      000034 F0                     255 	.db #0xf0	; 240
      000035 C0                     256 	.db #0xc0	; 192
      000036 C0                     257 	.db #0xc0	; 192
      000037 0C                     258 	.db #0x0c	; 12
      000038 0C                     259 	.db #0x0c	; 12
      000039 1C                     260 	.db #0x1c	; 28
      00003A 1C                     261 	.db #0x1c	; 28
      00003B 3E                     262 	.db #0x3e	; 62
      00003C 3E                     263 	.db #0x3e	; 62
      00003D 7E                     264 	.db #0x7e	; 126
      00003E 7E                     265 	.db #0x7e	; 126
      00003F FF                     266 	.db #0xff	; 255
      000040 FF                     267 	.db #0xff	; 255
      000041 FF                     268 	.db #0xff	; 255
      000042 FF                     269 	.db #0xff	; 255
      000043 3F                     270 	.db #0x3f	; 63
      000044 3F                     271 	.db #0x3f	; 63
      000045 0F                     272 	.db #0x0f	; 15
      000046 0F                     273 	.db #0x0f	; 15
      000047 FF                     274 	.db #0xff	; 255
      000048 FF                     275 	.db #0xff	; 255
      000049 FF                     276 	.db #0xff	; 255
      00004A FF                     277 	.db #0xff	; 255
      00004B 7E                     278 	.db #0x7e	; 126
      00004C 7E                     279 	.db #0x7e	; 126
      00004D 7E                     280 	.db #0x7e	; 126
      00004E 7E                     281 	.db #0x7e	; 126
      00004F 3C                     282 	.db #0x3c	; 60
      000050 3C                     283 	.db #0x3c	; 60
      000051 3C                     284 	.db #0x3c	; 60
      000052 3C                     285 	.db #0x3c	; 60
      000053 18                     286 	.db #0x18	; 24
      000054 18                     287 	.db #0x18	; 24
      000055 18                     288 	.db #0x18	; 24
      000056 18                     289 	.db #0x18	; 24
      000057 30                     290 	.db #0x30	; 48	'0'
      000058 30                     291 	.db #0x30	; 48	'0'
      000059 38                     292 	.db #0x38	; 56	'8'
      00005A 38                     293 	.db #0x38	; 56	'8'
      00005B 7C                     294 	.db #0x7c	; 124
      00005C 7C                     295 	.db #0x7c	; 124
      00005D 7E                     296 	.db #0x7e	; 126
      00005E 7E                     297 	.db #0x7e	; 126
      00005F FF                     298 	.db #0xff	; 255
      000060 FF                     299 	.db #0xff	; 255
      000061 FF                     300 	.db #0xff	; 255
      000062 FF                     301 	.db #0xff	; 255
      000063 FC                     302 	.db #0xfc	; 252
      000064 FC                     303 	.db #0xfc	; 252
      000065 F0                     304 	.db #0xf0	; 240
      000066 F0                     305 	.db #0xf0	; 240
      000067 03                     306 	.db #0x03	; 3
      000068 03                     307 	.db #0x03	; 3
      000069 0F                     308 	.db #0x0f	; 15
      00006A 0F                     309 	.db #0x0f	; 15
      00006B 3F                     310 	.db #0x3f	; 63
      00006C 3F                     311 	.db #0x3f	; 63
      00006D FF                     312 	.db #0xff	; 255
      00006E FF                     313 	.db #0xff	; 255
      00006F FF                     314 	.db #0xff	; 255
      000070 FF                     315 	.db #0xff	; 255
      000071 3F                     316 	.db #0x3f	; 63
      000072 3F                     317 	.db #0x3f	; 63
      000073 0F                     318 	.db #0x0f	; 15
      000074 0F                     319 	.db #0x0f	; 15
      000075 03                     320 	.db #0x03	; 3
      000076 03                     321 	.db #0x03	; 3
      000077 F0                     322 	.db #0xf0	; 240
      000078 F0                     323 	.db #0xf0	; 240
      000079 FC                     324 	.db #0xfc	; 252
      00007A FC                     325 	.db #0xfc	; 252
      00007B FF                     326 	.db #0xff	; 255
      00007C FF                     327 	.db #0xff	; 255
      00007D FF                     328 	.db #0xff	; 255
      00007E FF                     329 	.db #0xff	; 255
      00007F 7E                     330 	.db #0x7e	; 126
      000080 7E                     331 	.db #0x7e	; 126
      000081 7C                     332 	.db #0x7c	; 124
      000082 7C                     333 	.db #0x7c	; 124
      000083 38                     334 	.db #0x38	; 56	'8'
      000084 38                     335 	.db #0x38	; 56	'8'
      000085 30                     336 	.db #0x30	; 48	'0'
      000086 30                     337 	.db #0x30	; 48	'0'
      000087                        338 _background1:
      000087 26                     339 	.db #0x26	; 38
      000088 26                     340 	.db #0x26	; 38
      000089 26                     341 	.db #0x26	; 38
      00008A 26                     342 	.db #0x26	; 38
      00008B 26                     343 	.db #0x26	; 38
      00008C 26                     344 	.db #0x26	; 38
      00008D 26                     345 	.db #0x26	; 38
      00008E 26                     346 	.db #0x26	; 38
      00008F 26                     347 	.db #0x26	; 38
      000090 26                     348 	.db #0x26	; 38
      000091 26                     349 	.db #0x26	; 38
      000092 2A                     350 	.db #0x2a	; 42
      000093 29                     351 	.db #0x29	; 41
      000094 26                     352 	.db #0x26	; 38
      000095 26                     353 	.db #0x26	; 38
      000096 26                     354 	.db #0x26	; 38
      000097 26                     355 	.db #0x26	; 38
      000098 26                     356 	.db #0x26	; 38
      000099 26                     357 	.db #0x26	; 38
      00009A 26                     358 	.db #0x26	; 38
      00009B 2C                     359 	.db #0x2c	; 44
      00009C 26                     360 	.db #0x26	; 38
      00009D 26                     361 	.db #0x26	; 38
      00009E 26                     362 	.db #0x26	; 38
      00009F 26                     363 	.db #0x26	; 38
      0000A0 26                     364 	.db #0x26	; 38
      0000A1 26                     365 	.db #0x26	; 38
      0000A2 26                     366 	.db #0x26	; 38
      0000A3 26                     367 	.db #0x26	; 38
      0000A4 26                     368 	.db #0x26	; 38
      0000A5 26                     369 	.db #0x26	; 38
      0000A6 26                     370 	.db #0x26	; 38
      0000A7 26                     371 	.db #0x26	; 38
      0000A8 2B                     372 	.db #0x2b	; 43
      0000A9 26                     373 	.db #0x26	; 38
      0000AA 26                     374 	.db #0x26	; 38
      0000AB 26                     375 	.db #0x26	; 38
      0000AC 26                     376 	.db #0x26	; 38
      0000AD 26                     377 	.db #0x26	; 38
      0000AE 26                     378 	.db #0x26	; 38
      0000AF 26                     379 	.db #0x26	; 38
      0000B0 26                     380 	.db #0x26	; 38
      0000B1 26                     381 	.db #0x26	; 38
      0000B2 26                     382 	.db #0x26	; 38
      0000B3 26                     383 	.db #0x26	; 38
      0000B4 26                     384 	.db #0x26	; 38
      0000B5 26                     385 	.db #0x26	; 38
      0000B6 26                     386 	.db #0x26	; 38
      0000B7 26                     387 	.db #0x26	; 38
      0000B8 26                     388 	.db #0x26	; 38
      0000B9 26                     389 	.db #0x26	; 38
      0000BA 26                     390 	.db #0x26	; 38
      0000BB 26                     391 	.db #0x26	; 38
      0000BC 26                     392 	.db #0x26	; 38
      0000BD 26                     393 	.db #0x26	; 38
      0000BE 26                     394 	.db #0x26	; 38
      0000BF 26                     395 	.db #0x26	; 38
      0000C0 26                     396 	.db #0x26	; 38
      0000C1 26                     397 	.db #0x26	; 38
      0000C2 26                     398 	.db #0x26	; 38
      0000C3 26                     399 	.db #0x26	; 38
      0000C4 26                     400 	.db #0x26	; 38
      0000C5 26                     401 	.db #0x26	; 38
      0000C6 26                     402 	.db #0x26	; 38
      0000C7 26                     403 	.db #0x26	; 38
      0000C8 26                     404 	.db #0x26	; 38
      0000C9 26                     405 	.db #0x26	; 38
      0000CA 26                     406 	.db #0x26	; 38
      0000CB 26                     407 	.db #0x26	; 38
      0000CC 26                     408 	.db #0x26	; 38
      0000CD 26                     409 	.db #0x26	; 38
      0000CE 26                     410 	.db #0x26	; 38
      0000CF 26                     411 	.db #0x26	; 38
      0000D0 26                     412 	.db #0x26	; 38
      0000D1 26                     413 	.db #0x26	; 38
      0000D2 26                     414 	.db #0x26	; 38
      0000D3 26                     415 	.db #0x26	; 38
      0000D4 26                     416 	.db #0x26	; 38
      0000D5 26                     417 	.db #0x26	; 38
      0000D6 26                     418 	.db #0x26	; 38
      0000D7 26                     419 	.db #0x26	; 38
      0000D8 26                     420 	.db #0x26	; 38
      0000D9 26                     421 	.db #0x26	; 38
      0000DA 26                     422 	.db #0x26	; 38
      0000DB 26                     423 	.db #0x26	; 38
      0000DC 26                     424 	.db #0x26	; 38
      0000DD 26                     425 	.db #0x26	; 38
      0000DE 26                     426 	.db #0x26	; 38
      0000DF 26                     427 	.db #0x26	; 38
      0000E0 26                     428 	.db #0x26	; 38
      0000E1 26                     429 	.db #0x26	; 38
      0000E2 26                     430 	.db #0x26	; 38
      0000E3 26                     431 	.db #0x26	; 38
      0000E4 26                     432 	.db #0x26	; 38
      0000E5 26                     433 	.db #0x26	; 38
      0000E6 26                     434 	.db #0x26	; 38
      0000E7 26                     435 	.db #0x26	; 38
      0000E8 26                     436 	.db #0x26	; 38
      0000E9 26                     437 	.db #0x26	; 38
      0000EA 26                     438 	.db #0x26	; 38
      0000EB 26                     439 	.db #0x26	; 38
      0000EC 26                     440 	.db #0x26	; 38
      0000ED 26                     441 	.db #0x26	; 38
      0000EE 26                     442 	.db #0x26	; 38
      0000EF 26                     443 	.db #0x26	; 38
      0000F0 26                     444 	.db #0x26	; 38
      0000F1 26                     445 	.db #0x26	; 38
      0000F2 26                     446 	.db #0x26	; 38
      0000F3 26                     447 	.db #0x26	; 38
      0000F4 26                     448 	.db #0x26	; 38
      0000F5 26                     449 	.db #0x26	; 38
      0000F6 26                     450 	.db #0x26	; 38
      0000F7 26                     451 	.db #0x26	; 38
      0000F8 2B                     452 	.db #0x2b	; 43
      0000F9 26                     453 	.db #0x26	; 38
      0000FA 26                     454 	.db #0x26	; 38
      0000FB 26                     455 	.db #0x26	; 38
      0000FC 26                     456 	.db #0x26	; 38
      0000FD 26                     457 	.db #0x26	; 38
      0000FE 26                     458 	.db #0x26	; 38
      0000FF 2B                     459 	.db #0x2b	; 43
      000100 26                     460 	.db #0x26	; 38
      000101 26                     461 	.db #0x26	; 38
      000102 26                     462 	.db #0x26	; 38
      000103 26                     463 	.db #0x26	; 38
      000104 26                     464 	.db #0x26	; 38
      000105 26                     465 	.db #0x26	; 38
      000106 26                     466 	.db #0x26	; 38
      000107 26                     467 	.db #0x26	; 38
      000108 26                     468 	.db #0x26	; 38
      000109 26                     469 	.db #0x26	; 38
      00010A 26                     470 	.db #0x26	; 38
      00010B 26                     471 	.db #0x26	; 38
      00010C 2B                     472 	.db #0x2b	; 43
      00010D 26                     473 	.db #0x26	; 38
      00010E 26                     474 	.db #0x26	; 38
      00010F 26                     475 	.db #0x26	; 38
      000110 26                     476 	.db #0x26	; 38
      000111 26                     477 	.db #0x26	; 38
      000112 26                     478 	.db #0x26	; 38
      000113 26                     479 	.db #0x26	; 38
      000114 2C                     480 	.db #0x2c	; 44
      000115 26                     481 	.db #0x26	; 38
      000116 26                     482 	.db #0x26	; 38
      000117 26                     483 	.db #0x26	; 38
      000118 26                     484 	.db #0x26	; 38
      000119 26                     485 	.db #0x26	; 38
      00011A 26                     486 	.db #0x26	; 38
      00011B 26                     487 	.db #0x26	; 38
      00011C 26                     488 	.db #0x26	; 38
      00011D 26                     489 	.db #0x26	; 38
      00011E 26                     490 	.db #0x26	; 38
      00011F 26                     491 	.db #0x26	; 38
      000120 26                     492 	.db #0x26	; 38
      000121 26                     493 	.db #0x26	; 38
      000122 26                     494 	.db #0x26	; 38
      000123 26                     495 	.db #0x26	; 38
      000124 26                     496 	.db #0x26	; 38
      000125 26                     497 	.db #0x26	; 38
      000126 26                     498 	.db #0x26	; 38
      000127 26                     499 	.db #0x26	; 38
      000128 26                     500 	.db #0x26	; 38
      000129 2C                     501 	.db #0x2c	; 44
      00012A 26                     502 	.db #0x26	; 38
      00012B 26                     503 	.db #0x26	; 38
      00012C 26                     504 	.db #0x26	; 38
      00012D 26                     505 	.db #0x26	; 38
      00012E 25                     506 	.db #0x25	; 37
      00012F 26                     507 	.db #0x26	; 38
      000130 26                     508 	.db #0x26	; 38
      000131 26                     509 	.db #0x26	; 38
      000132 26                     510 	.db #0x26	; 38
      000133 26                     511 	.db #0x26	; 38
      000134 26                     512 	.db #0x26	; 38
      000135 26                     513 	.db #0x26	; 38
      000136 26                     514 	.db #0x26	; 38
      000137 26                     515 	.db #0x26	; 38
      000138 26                     516 	.db #0x26	; 38
      000139 26                     517 	.db #0x26	; 38
      00013A 26                     518 	.db #0x26	; 38
      00013B 26                     519 	.db #0x26	; 38
      00013C 2C                     520 	.db #0x2c	; 44
      00013D 26                     521 	.db #0x26	; 38
      00013E 26                     522 	.db #0x26	; 38
      00013F 26                     523 	.db #0x26	; 38
      000140 26                     524 	.db #0x26	; 38
      000141 26                     525 	.db #0x26	; 38
      000142 26                     526 	.db #0x26	; 38
      000143 26                     527 	.db #0x26	; 38
      000144 2B                     528 	.db #0x2b	; 43
      000145 26                     529 	.db #0x26	; 38
      000146 26                     530 	.db #0x26	; 38
      000147 26                     531 	.db #0x26	; 38
      000148 26                     532 	.db #0x26	; 38
      000149 26                     533 	.db #0x26	; 38
      00014A 26                     534 	.db #0x26	; 38
      00014B 26                     535 	.db #0x26	; 38
      00014C 26                     536 	.db #0x26	; 38
      00014D 26                     537 	.db #0x26	; 38
      00014E 26                     538 	.db #0x26	; 38
      00014F 26                     539 	.db #0x26	; 38
      000150 26                     540 	.db #0x26	; 38
      000151 26                     541 	.db #0x26	; 38
      000152 26                     542 	.db #0x26	; 38
      000153 26                     543 	.db #0x26	; 38
      000154 26                     544 	.db #0x26	; 38
      000155 26                     545 	.db #0x26	; 38
      000156 26                     546 	.db #0x26	; 38
      000157 26                     547 	.db #0x26	; 38
      000158 26                     548 	.db #0x26	; 38
      000159 26                     549 	.db #0x26	; 38
      00015A 26                     550 	.db #0x26	; 38
      00015B 26                     551 	.db #0x26	; 38
      00015C 26                     552 	.db #0x26	; 38
      00015D 26                     553 	.db #0x26	; 38
      00015E 26                     554 	.db #0x26	; 38
      00015F 26                     555 	.db #0x26	; 38
      000160 2C                     556 	.db #0x2c	; 44
      000161 26                     557 	.db #0x26	; 38
      000162 26                     558 	.db #0x26	; 38
      000163 26                     559 	.db #0x26	; 38
      000164 26                     560 	.db #0x26	; 38
      000165 26                     561 	.db #0x26	; 38
      000166 26                     562 	.db #0x26	; 38
      000167 26                     563 	.db #0x26	; 38
      000168 26                     564 	.db #0x26	; 38
      000169 26                     565 	.db #0x26	; 38
      00016A 26                     566 	.db #0x26	; 38
      00016B 26                     567 	.db #0x26	; 38
      00016C 26                     568 	.db #0x26	; 38
      00016D 26                     569 	.db #0x26	; 38
      00016E 26                     570 	.db #0x26	; 38
      00016F 26                     571 	.db #0x26	; 38
      000170 26                     572 	.db #0x26	; 38
      000171 26                     573 	.db #0x26	; 38
      000172 26                     574 	.db #0x26	; 38
      000173 26                     575 	.db #0x26	; 38
      000174 26                     576 	.db #0x26	; 38
      000175 26                     577 	.db #0x26	; 38
      000176 26                     578 	.db #0x26	; 38
      000177 26                     579 	.db #0x26	; 38
      000178 26                     580 	.db #0x26	; 38
      000179 26                     581 	.db #0x26	; 38
      00017A 26                     582 	.db #0x26	; 38
      00017B 26                     583 	.db #0x26	; 38
      00017C 26                     584 	.db #0x26	; 38
      00017D 26                     585 	.db #0x26	; 38
      00017E 26                     586 	.db #0x26	; 38
      00017F 26                     587 	.db #0x26	; 38
      000180 26                     588 	.db #0x26	; 38
      000181 26                     589 	.db #0x26	; 38
      000182 26                     590 	.db #0x26	; 38
      000183 26                     591 	.db #0x26	; 38
      000184 26                     592 	.db #0x26	; 38
      000185 26                     593 	.db #0x26	; 38
      000186 26                     594 	.db #0x26	; 38
      000187 26                     595 	.db #0x26	; 38
      000188 26                     596 	.db #0x26	; 38
      000189 26                     597 	.db #0x26	; 38
      00018A 26                     598 	.db #0x26	; 38
      00018B 26                     599 	.db #0x26	; 38
      00018C 26                     600 	.db #0x26	; 38
      00018D 26                     601 	.db #0x26	; 38
      00018E 26                     602 	.db #0x26	; 38
      00018F 26                     603 	.db #0x26	; 38
      000190 26                     604 	.db #0x26	; 38
      000191 26                     605 	.db #0x26	; 38
      000192 26                     606 	.db #0x26	; 38
      000193 26                     607 	.db #0x26	; 38
      000194 26                     608 	.db #0x26	; 38
      000195 2B                     609 	.db #0x2b	; 43
      000196 26                     610 	.db #0x26	; 38
      000197 26                     611 	.db #0x26	; 38
      000198 26                     612 	.db #0x26	; 38
      000199 26                     613 	.db #0x26	; 38
      00019A 26                     614 	.db #0x26	; 38
      00019B 26                     615 	.db #0x26	; 38
      00019C 26                     616 	.db #0x26	; 38
      00019D 26                     617 	.db #0x26	; 38
      00019E 26                     618 	.db #0x26	; 38
      00019F 26                     619 	.db #0x26	; 38
      0001A0 26                     620 	.db #0x26	; 38
      0001A1 26                     621 	.db #0x26	; 38
      0001A2 26                     622 	.db #0x26	; 38
      0001A3 26                     623 	.db #0x26	; 38
      0001A4 26                     624 	.db #0x26	; 38
      0001A5 26                     625 	.db #0x26	; 38
      0001A6 25                     626 	.db #0x25	; 37
      0001A7 26                     627 	.db #0x26	; 38
      0001A8 26                     628 	.db #0x26	; 38
      0001A9 26                     629 	.db #0x26	; 38
      0001AA 2B                     630 	.db #0x2b	; 43
      0001AB 26                     631 	.db #0x26	; 38
      0001AC 26                     632 	.db #0x26	; 38
      0001AD 26                     633 	.db #0x26	; 38
      0001AE 26                     634 	.db #0x26	; 38
      0001AF 26                     635 	.db #0x26	; 38
      0001B0 26                     636 	.db #0x26	; 38
      0001B1 26                     637 	.db #0x26	; 38
      0001B2 26                     638 	.db #0x26	; 38
      0001B3 26                     639 	.db #0x26	; 38
      0001B4 26                     640 	.db #0x26	; 38
      0001B5 26                     641 	.db #0x26	; 38
      0001B6 26                     642 	.db #0x26	; 38
      0001B7 26                     643 	.db #0x26	; 38
      0001B8 26                     644 	.db #0x26	; 38
      0001B9 26                     645 	.db #0x26	; 38
      0001BA 26                     646 	.db #0x26	; 38
      0001BB 26                     647 	.db #0x26	; 38
      0001BC 26                     648 	.db #0x26	; 38
      0001BD 26                     649 	.db #0x26	; 38
      0001BE 26                     650 	.db #0x26	; 38
      0001BF 26                     651 	.db #0x26	; 38
      0001C0 26                     652 	.db #0x26	; 38
      0001C1 26                     653 	.db #0x26	; 38
      0001C2 26                     654 	.db #0x26	; 38
      0001C3 26                     655 	.db #0x26	; 38
      0001C4 2B                     656 	.db #0x2b	; 43
      0001C5 26                     657 	.db #0x26	; 38
      0001C6 26                     658 	.db #0x26	; 38
      0001C7 26                     659 	.db #0x26	; 38
      0001C8 26                     660 	.db #0x26	; 38
      0001C9 26                     661 	.db #0x26	; 38
      0001CA 26                     662 	.db #0x26	; 38
      0001CB 26                     663 	.db #0x26	; 38
      0001CC 26                     664 	.db #0x26	; 38
      0001CD 26                     665 	.db #0x26	; 38
      0001CE 26                     666 	.db #0x26	; 38
      0001CF 26                     667 	.db #0x26	; 38
      0001D0 26                     668 	.db #0x26	; 38
      0001D1 26                     669 	.db #0x26	; 38
      0001D2 26                     670 	.db #0x26	; 38
      0001D3 26                     671 	.db #0x26	; 38
      0001D4 26                     672 	.db #0x26	; 38
      0001D5 26                     673 	.db #0x26	; 38
      0001D6 26                     674 	.db #0x26	; 38
      0001D7 26                     675 	.db #0x26	; 38
      0001D8 26                     676 	.db #0x26	; 38
      0001D9 26                     677 	.db #0x26	; 38
      0001DA 27                     678 	.db #0x27	; 39
      0001DB 28                     679 	.db #0x28	; 40
      0001DC 26                     680 	.db #0x26	; 38
      0001DD 26                     681 	.db #0x26	; 38
      0001DE 26                     682 	.db #0x26	; 38
      0001DF 26                     683 	.db #0x26	; 38
      0001E0 26                     684 	.db #0x26	; 38
      0001E1 26                     685 	.db #0x26	; 38
      0001E2 26                     686 	.db #0x26	; 38
      0001E3 26                     687 	.db #0x26	; 38
      0001E4 26                     688 	.db #0x26	; 38
      0001E5 26                     689 	.db #0x26	; 38
      0001E6 26                     690 	.db #0x26	; 38
      0001E7 26                     691 	.db #0x26	; 38
      0001E8 26                     692 	.db #0x26	; 38
      0001E9 26                     693 	.db #0x26	; 38
      0001EA 26                     694 	.db #0x26	; 38
      0001EB 26                     695 	.db #0x26	; 38
      0001EC 26                     696 	.db #0x26	; 38
      0001ED 26                     697 	.db #0x26	; 38
      0001EE 26                     698 	.db #0x26	; 38
      0001EF 26                     699 	.db #0x26	; 38
      0001F0 26                     700 	.db #0x26	; 38
      0001F1 26                     701 	.db #0x26	; 38
      0001F2 26                     702 	.db #0x26	; 38
      0001F3 26                     703 	.db #0x26	; 38
      0001F4 26                     704 	.db #0x26	; 38
      0001F5 26                     705 	.db #0x26	; 38
      0001F6 26                     706 	.db #0x26	; 38
      0001F7 26                     707 	.db #0x26	; 38
      0001F8 26                     708 	.db #0x26	; 38
      0001F9 26                     709 	.db #0x26	; 38
      0001FA 2A                     710 	.db #0x2a	; 42
      0001FB 29                     711 	.db #0x29	; 41
      0001FC 26                     712 	.db #0x26	; 38
      0001FD 26                     713 	.db #0x26	; 38
      0001FE 26                     714 	.db #0x26	; 38
      0001FF 26                     715 	.db #0x26	; 38
      000200 26                     716 	.db #0x26	; 38
      000201 26                     717 	.db #0x26	; 38
      000202 26                     718 	.db #0x26	; 38
      000203 26                     719 	.db #0x26	; 38
      000204 26                     720 	.db #0x26	; 38
      000205 26                     721 	.db #0x26	; 38
      000206 26                     722 	.db #0x26	; 38
      000207 26                     723 	.db #0x26	; 38
      000208 26                     724 	.db #0x26	; 38
      000209 26                     725 	.db #0x26	; 38
      00020A 26                     726 	.db #0x26	; 38
      00020B 26                     727 	.db #0x26	; 38
      00020C 26                     728 	.db #0x26	; 38
      00020D 26                     729 	.db #0x26	; 38
      00020E 27                     730 	.db #0x27	; 39
      00020F 28                     731 	.db #0x28	; 40
      000210 26                     732 	.db #0x26	; 38
      000211 26                     733 	.db #0x26	; 38
      000212 26                     734 	.db #0x26	; 38
      000213 26                     735 	.db #0x26	; 38
      000214 26                     736 	.db #0x26	; 38
      000215 26                     737 	.db #0x26	; 38
      000216 26                     738 	.db #0x26	; 38
      000217 26                     739 	.db #0x26	; 38
      000218 26                     740 	.db #0x26	; 38
      000219 26                     741 	.db #0x26	; 38
      00021A 26                     742 	.db #0x26	; 38
      00021B 26                     743 	.db #0x26	; 38
      00021C 26                     744 	.db #0x26	; 38
      00021D 26                     745 	.db #0x26	; 38
      00021E 26                     746 	.db #0x26	; 38
      00021F 2C                     747 	.db #0x2c	; 44
      000220 26                     748 	.db #0x26	; 38
      000221 26                     749 	.db #0x26	; 38
      000222 26                     750 	.db #0x26	; 38
      000223 26                     751 	.db #0x26	; 38
      000224 26                     752 	.db #0x26	; 38
      000225 26                     753 	.db #0x26	; 38
      000226 26                     754 	.db #0x26	; 38
      000227 26                     755 	.db #0x26	; 38
      000228 26                     756 	.db #0x26	; 38
      000229 26                     757 	.db #0x26	; 38
      00022A 26                     758 	.db #0x26	; 38
      00022B 26                     759 	.db #0x26	; 38
      00022C 26                     760 	.db #0x26	; 38
      00022D 26                     761 	.db #0x26	; 38
      00022E 2A                     762 	.db #0x2a	; 42
      00022F 29                     763 	.db #0x29	; 41
      000230 26                     764 	.db #0x26	; 38
      000231 26                     765 	.db #0x26	; 38
      000232 26                     766 	.db #0x26	; 38
      000233 26                     767 	.db #0x26	; 38
      000234 26                     768 	.db #0x26	; 38
      000235 26                     769 	.db #0x26	; 38
      000236 26                     770 	.db #0x26	; 38
      000237 26                     771 	.db #0x26	; 38
      000238 26                     772 	.db #0x26	; 38
      000239 26                     773 	.db #0x26	; 38
      00023A 26                     774 	.db #0x26	; 38
      00023B 26                     775 	.db #0x26	; 38
      00023C 26                     776 	.db #0x26	; 38
      00023D 25                     777 	.db #0x25	; 37
      00023E 26                     778 	.db #0x26	; 38
      00023F 26                     779 	.db #0x26	; 38
      000240 26                     780 	.db #0x26	; 38
      000241 26                     781 	.db #0x26	; 38
      000242 26                     782 	.db #0x26	; 38
      000243 26                     783 	.db #0x26	; 38
      000244 2C                     784 	.db #0x2c	; 44
      000245 26                     785 	.db #0x26	; 38
      000246 26                     786 	.db #0x26	; 38
      000247 26                     787 	.db #0x26	; 38
      000248 26                     788 	.db #0x26	; 38
      000249 26                     789 	.db #0x26	; 38
      00024A 26                     790 	.db #0x26	; 38
      00024B 26                     791 	.db #0x26	; 38
      00024C 26                     792 	.db #0x26	; 38
      00024D 26                     793 	.db #0x26	; 38
      00024E 26                     794 	.db #0x26	; 38
      00024F 26                     795 	.db #0x26	; 38
      000250 26                     796 	.db #0x26	; 38
      000251 26                     797 	.db #0x26	; 38
      000252 26                     798 	.db #0x26	; 38
      000253 26                     799 	.db #0x26	; 38
      000254 26                     800 	.db #0x26	; 38
      000255 26                     801 	.db #0x26	; 38
      000256 26                     802 	.db #0x26	; 38
      000257 26                     803 	.db #0x26	; 38
      000258 26                     804 	.db #0x26	; 38
      000259 26                     805 	.db #0x26	; 38
      00025A 26                     806 	.db #0x26	; 38
      00025B 26                     807 	.db #0x26	; 38
      00025C 26                     808 	.db #0x26	; 38
      00025D 26                     809 	.db #0x26	; 38
      00025E 26                     810 	.db #0x26	; 38
      00025F 26                     811 	.db #0x26	; 38
      000260 26                     812 	.db #0x26	; 38
      000261 26                     813 	.db #0x26	; 38
      000262 26                     814 	.db #0x26	; 38
      000263 26                     815 	.db #0x26	; 38
      000264 26                     816 	.db #0x26	; 38
      000265 26                     817 	.db #0x26	; 38
      000266 26                     818 	.db #0x26	; 38
      000267 26                     819 	.db #0x26	; 38
      000268 26                     820 	.db #0x26	; 38
      000269 26                     821 	.db #0x26	; 38
      00026A 2C                     822 	.db #0x2c	; 44
      00026B 26                     823 	.db #0x26	; 38
      00026C 26                     824 	.db #0x26	; 38
      00026D 26                     825 	.db #0x26	; 38
      00026E 26                     826 	.db #0x26	; 38
      00026F 26                     827 	.db #0x26	; 38
      000270 26                     828 	.db #0x26	; 38
      000271 26                     829 	.db #0x26	; 38
      000272 26                     830 	.db #0x26	; 38
      000273 26                     831 	.db #0x26	; 38
      000274 26                     832 	.db #0x26	; 38
      000275 26                     833 	.db #0x26	; 38
      000276 26                     834 	.db #0x26	; 38
      000277 26                     835 	.db #0x26	; 38
      000278 26                     836 	.db #0x26	; 38
      000279 2C                     837 	.db #0x2c	; 44
      00027A 26                     838 	.db #0x26	; 38
      00027B 26                     839 	.db #0x26	; 38
      00027C 26                     840 	.db #0x26	; 38
      00027D 26                     841 	.db #0x26	; 38
      00027E 26                     842 	.db #0x26	; 38
      00027F 26                     843 	.db #0x26	; 38
      000280 26                     844 	.db #0x26	; 38
      000281 26                     845 	.db #0x26	; 38
      000282 26                     846 	.db #0x26	; 38
      000283 26                     847 	.db #0x26	; 38
      000284 26                     848 	.db #0x26	; 38
      000285 26                     849 	.db #0x26	; 38
      000286 26                     850 	.db #0x26	; 38
      000287 26                     851 	.db #0x26	; 38
      000288 26                     852 	.db #0x26	; 38
      000289 26                     853 	.db #0x26	; 38
      00028A 26                     854 	.db #0x26	; 38
      00028B 26                     855 	.db #0x26	; 38
      00028C 26                     856 	.db #0x26	; 38
      00028D 26                     857 	.db #0x26	; 38
      00028E 26                     858 	.db #0x26	; 38
      00028F 26                     859 	.db #0x26	; 38
      000290 26                     860 	.db #0x26	; 38
      000291 26                     861 	.db #0x26	; 38
      000292 26                     862 	.db #0x26	; 38
      000293 26                     863 	.db #0x26	; 38
      000294 26                     864 	.db #0x26	; 38
      000295 2B                     865 	.db #0x2b	; 43
      000296 26                     866 	.db #0x26	; 38
      000297 26                     867 	.db #0x26	; 38
      000298 26                     868 	.db #0x26	; 38
      000299 26                     869 	.db #0x26	; 38
      00029A 26                     870 	.db #0x26	; 38
      00029B 26                     871 	.db #0x26	; 38
      00029C 26                     872 	.db #0x26	; 38
      00029D 26                     873 	.db #0x26	; 38
      00029E 26                     874 	.db #0x26	; 38
      00029F 26                     875 	.db #0x26	; 38
      0002A0 26                     876 	.db #0x26	; 38
      0002A1 26                     877 	.db #0x26	; 38
      0002A2 26                     878 	.db #0x26	; 38
      0002A3 26                     879 	.db #0x26	; 38
      0002A4 26                     880 	.db #0x26	; 38
      0002A5 26                     881 	.db #0x26	; 38
      0002A6 26                     882 	.db #0x26	; 38
      0002A7 28                     883 	.db #0x28	; 40
      0002A8 26                     884 	.db #0x26	; 38
      0002A9 26                     885 	.db #0x26	; 38
      0002AA 26                     886 	.db #0x26	; 38
      0002AB 26                     887 	.db #0x26	; 38
      0002AC 26                     888 	.db #0x26	; 38
      0002AD 26                     889 	.db #0x26	; 38
      0002AE 26                     890 	.db #0x26	; 38
      0002AF 26                     891 	.db #0x26	; 38
      0002B0 26                     892 	.db #0x26	; 38
      0002B1 26                     893 	.db #0x26	; 38
      0002B2 26                     894 	.db #0x26	; 38
      0002B3 26                     895 	.db #0x26	; 38
      0002B4 26                     896 	.db #0x26	; 38
      0002B5 26                     897 	.db #0x26	; 38
      0002B6 26                     898 	.db #0x26	; 38
      0002B7 26                     899 	.db #0x26	; 38
      0002B8 26                     900 	.db #0x26	; 38
      0002B9 26                     901 	.db #0x26	; 38
      0002BA 26                     902 	.db #0x26	; 38
      0002BB 26                     903 	.db #0x26	; 38
      0002BC 26                     904 	.db #0x26	; 38
      0002BD 26                     905 	.db #0x26	; 38
      0002BE 26                     906 	.db #0x26	; 38
      0002BF 26                     907 	.db #0x26	; 38
      0002C0 2B                     908 	.db #0x2b	; 43
      0002C1 26                     909 	.db #0x26	; 38
      0002C2 26                     910 	.db #0x26	; 38
      0002C3 26                     911 	.db #0x26	; 38
      0002C4 26                     912 	.db #0x26	; 38
      0002C5 26                     913 	.db #0x26	; 38
      0002C6 27                     914 	.db #0x27	; 39
      0002C7 29                     915 	.db #0x29	; 41
      0002C8 26                     916 	.db #0x26	; 38
      0002C9 26                     917 	.db #0x26	; 38
      0002CA 26                     918 	.db #0x26	; 38
      0002CB 26                     919 	.db #0x26	; 38
      0002CC 26                     920 	.db #0x26	; 38
      0002CD 26                     921 	.db #0x26	; 38
      0002CE 2B                     922 	.db #0x2b	; 43
      0002CF 26                     923 	.db #0x26	; 38
      0002D0 26                     924 	.db #0x26	; 38
      0002D1 26                     925 	.db #0x26	; 38
      0002D2 26                     926 	.db #0x26	; 38
      0002D3 26                     927 	.db #0x26	; 38
      0002D4 26                     928 	.db #0x26	; 38
      0002D5 26                     929 	.db #0x26	; 38
      0002D6 26                     930 	.db #0x26	; 38
      0002D7 26                     931 	.db #0x26	; 38
      0002D8 26                     932 	.db #0x26	; 38
      0002D9 26                     933 	.db #0x26	; 38
      0002DA 26                     934 	.db #0x26	; 38
      0002DB 26                     935 	.db #0x26	; 38
      0002DC 26                     936 	.db #0x26	; 38
      0002DD 26                     937 	.db #0x26	; 38
      0002DE 26                     938 	.db #0x26	; 38
      0002DF 26                     939 	.db #0x26	; 38
      0002E0 26                     940 	.db #0x26	; 38
      0002E1 26                     941 	.db #0x26	; 38
      0002E2 26                     942 	.db #0x26	; 38
      0002E3 26                     943 	.db #0x26	; 38
      0002E4 26                     944 	.db #0x26	; 38
      0002E5 26                     945 	.db #0x26	; 38
      0002E6 2A                     946 	.db #0x2a	; 42
      0002E7 26                     947 	.db #0x26	; 38
      0002E8 26                     948 	.db #0x26	; 38
      0002E9 26                     949 	.db #0x26	; 38
      0002EA 26                     950 	.db #0x26	; 38
      0002EB 26                     951 	.db #0x26	; 38
      0002EC 26                     952 	.db #0x26	; 38
      0002ED 26                     953 	.db #0x26	; 38
      0002EE 26                     954 	.db #0x26	; 38
      0002EF 26                     955 	.db #0x26	; 38
      0002F0 26                     956 	.db #0x26	; 38
      0002F1 26                     957 	.db #0x26	; 38
      0002F2 2C                     958 	.db #0x2c	; 44
      0002F3 26                     959 	.db #0x26	; 38
      0002F4 26                     960 	.db #0x26	; 38
      0002F5 26                     961 	.db #0x26	; 38
      0002F6 26                     962 	.db #0x26	; 38
      0002F7 26                     963 	.db #0x26	; 38
      0002F8 26                     964 	.db #0x26	; 38
      0002F9 26                     965 	.db #0x26	; 38
      0002FA 26                     966 	.db #0x26	; 38
      0002FB 26                     967 	.db #0x26	; 38
      0002FC 26                     968 	.db #0x26	; 38
      0002FD 26                     969 	.db #0x26	; 38
      0002FE 26                     970 	.db #0x26	; 38
      0002FF 26                     971 	.db #0x26	; 38
      000300 26                     972 	.db #0x26	; 38
      000301 26                     973 	.db #0x26	; 38
      000302 26                     974 	.db #0x26	; 38
      000303 26                     975 	.db #0x26	; 38
      000304 26                     976 	.db #0x26	; 38
      000305 26                     977 	.db #0x26	; 38
      000306 26                     978 	.db #0x26	; 38
      000307 26                     979 	.db #0x26	; 38
      000308 26                     980 	.db #0x26	; 38
      000309 26                     981 	.db #0x26	; 38
      00030A 26                     982 	.db #0x26	; 38
      00030B 26                     983 	.db #0x26	; 38
      00030C 26                     984 	.db #0x26	; 38
      00030D 26                     985 	.db #0x26	; 38
      00030E 26                     986 	.db #0x26	; 38
      00030F 26                     987 	.db #0x26	; 38
      000310 26                     988 	.db #0x26	; 38
      000311 26                     989 	.db #0x26	; 38
      000312 26                     990 	.db #0x26	; 38
      000313 26                     991 	.db #0x26	; 38
      000314 26                     992 	.db #0x26	; 38
      000315 26                     993 	.db #0x26	; 38
      000316 26                     994 	.db #0x26	; 38
      000317 2B                     995 	.db #0x2b	; 43
      000318 26                     996 	.db #0x26	; 38
      000319 26                     997 	.db #0x26	; 38
      00031A 26                     998 	.db #0x26	; 38
      00031B 26                     999 	.db #0x26	; 38
      00031C 26                    1000 	.db #0x26	; 38
      00031D 26                    1001 	.db #0x26	; 38
      00031E 26                    1002 	.db #0x26	; 38
      00031F 26                    1003 	.db #0x26	; 38
      000320 26                    1004 	.db #0x26	; 38
      000321 26                    1005 	.db #0x26	; 38
      000322 26                    1006 	.db #0x26	; 38
      000323 26                    1007 	.db #0x26	; 38
      000324 26                    1008 	.db #0x26	; 38
      000325 26                    1009 	.db #0x26	; 38
      000326 26                    1010 	.db #0x26	; 38
      000327 26                    1011 	.db #0x26	; 38
      000328 26                    1012 	.db #0x26	; 38
      000329 26                    1013 	.db #0x26	; 38
      00032A 26                    1014 	.db #0x26	; 38
      00032B 26                    1015 	.db #0x26	; 38
      00032C 26                    1016 	.db #0x26	; 38
      00032D 26                    1017 	.db #0x26	; 38
      00032E 26                    1018 	.db #0x26	; 38
      00032F 26                    1019 	.db #0x26	; 38
      000330 26                    1020 	.db #0x26	; 38
      000331 26                    1021 	.db #0x26	; 38
      000332 26                    1022 	.db #0x26	; 38
      000333 26                    1023 	.db #0x26	; 38
      000334 26                    1024 	.db #0x26	; 38
      000335 26                    1025 	.db #0x26	; 38
      000336 26                    1026 	.db #0x26	; 38
      000337 26                    1027 	.db #0x26	; 38
      000338 26                    1028 	.db #0x26	; 38
      000339 26                    1029 	.db #0x26	; 38
      00033A 26                    1030 	.db #0x26	; 38
      00033B 26                    1031 	.db #0x26	; 38
      00033C 26                    1032 	.db #0x26	; 38
      00033D 26                    1033 	.db #0x26	; 38
      00033E 2B                    1034 	.db #0x2b	; 43
      00033F 26                    1035 	.db #0x26	; 38
      000340 26                    1036 	.db #0x26	; 38
      000341 26                    1037 	.db #0x26	; 38
      000342 26                    1038 	.db #0x26	; 38
      000343 26                    1039 	.db #0x26	; 38
      000344 26                    1040 	.db #0x26	; 38
      000345 26                    1041 	.db #0x26	; 38
      000346 26                    1042 	.db #0x26	; 38
      000347 26                    1043 	.db #0x26	; 38
      000348 26                    1044 	.db #0x26	; 38
      000349 26                    1045 	.db #0x26	; 38
      00034A 2B                    1046 	.db #0x2b	; 43
      00034B 26                    1047 	.db #0x26	; 38
      00034C 26                    1048 	.db #0x26	; 38
      00034D 26                    1049 	.db #0x26	; 38
      00034E 26                    1050 	.db #0x26	; 38
      00034F 26                    1051 	.db #0x26	; 38
      000350 26                    1052 	.db #0x26	; 38
      000351 26                    1053 	.db #0x26	; 38
      000352 26                    1054 	.db #0x26	; 38
      000353 26                    1055 	.db #0x26	; 38
      000354 26                    1056 	.db #0x26	; 38
      000355 26                    1057 	.db #0x26	; 38
      000356 26                    1058 	.db #0x26	; 38
      000357 26                    1059 	.db #0x26	; 38
      000358 26                    1060 	.db #0x26	; 38
      000359 26                    1061 	.db #0x26	; 38
      00035A 26                    1062 	.db #0x26	; 38
      00035B 26                    1063 	.db #0x26	; 38
      00035C 26                    1064 	.db #0x26	; 38
      00035D 26                    1065 	.db #0x26	; 38
      00035E 26                    1066 	.db #0x26	; 38
      00035F 26                    1067 	.db #0x26	; 38
      000360 26                    1068 	.db #0x26	; 38
      000361 26                    1069 	.db #0x26	; 38
      000362 26                    1070 	.db #0x26	; 38
      000363 26                    1071 	.db #0x26	; 38
      000364 26                    1072 	.db #0x26	; 38
      000365 26                    1073 	.db #0x26	; 38
      000366 2C                    1074 	.db #0x2c	; 44
      000367 26                    1075 	.db #0x26	; 38
      000368 26                    1076 	.db #0x26	; 38
      000369 26                    1077 	.db #0x26	; 38
      00036A 26                    1078 	.db #0x26	; 38
      00036B 26                    1079 	.db #0x26	; 38
      00036C 26                    1080 	.db #0x26	; 38
      00036D 26                    1081 	.db #0x26	; 38
      00036E 26                    1082 	.db #0x26	; 38
      00036F 26                    1083 	.db #0x26	; 38
      000370 2B                    1084 	.db #0x2b	; 43
      000371 26                    1085 	.db #0x26	; 38
      000372 26                    1086 	.db #0x26	; 38
      000373 26                    1087 	.db #0x26	; 38
      000374 26                    1088 	.db #0x26	; 38
      000375 26                    1089 	.db #0x26	; 38
      000376 26                    1090 	.db #0x26	; 38
      000377 26                    1091 	.db #0x26	; 38
      000378 26                    1092 	.db #0x26	; 38
      000379 26                    1093 	.db #0x26	; 38
      00037A 26                    1094 	.db #0x26	; 38
      00037B 26                    1095 	.db #0x26	; 38
      00037C 26                    1096 	.db #0x26	; 38
      00037D 26                    1097 	.db #0x26	; 38
      00037E 26                    1098 	.db #0x26	; 38
      00037F 26                    1099 	.db #0x26	; 38
      000380 26                    1100 	.db #0x26	; 38
      000381 26                    1101 	.db #0x26	; 38
      000382 26                    1102 	.db #0x26	; 38
      000383 26                    1103 	.db #0x26	; 38
      000384 26                    1104 	.db #0x26	; 38
      000385 26                    1105 	.db #0x26	; 38
      000386 26                    1106 	.db #0x26	; 38
      000387 26                    1107 	.db #0x26	; 38
      000388 26                    1108 	.db #0x26	; 38
      000389 26                    1109 	.db #0x26	; 38
      00038A 26                    1110 	.db #0x26	; 38
      00038B 26                    1111 	.db #0x26	; 38
      00038C 26                    1112 	.db #0x26	; 38
      00038D 26                    1113 	.db #0x26	; 38
      00038E 26                    1114 	.db #0x26	; 38
      00038F 26                    1115 	.db #0x26	; 38
      000390 26                    1116 	.db #0x26	; 38
      000391 26                    1117 	.db #0x26	; 38
      000392 26                    1118 	.db #0x26	; 38
      000393 26                    1119 	.db #0x26	; 38
      000394 26                    1120 	.db #0x26	; 38
      000395 26                    1121 	.db #0x26	; 38
      000396 26                    1122 	.db #0x26	; 38
      000397 26                    1123 	.db #0x26	; 38
      000398 27                    1124 	.db #0x27	; 39
      000399 28                    1125 	.db #0x28	; 40
      00039A 26                    1126 	.db #0x26	; 38
      00039B 26                    1127 	.db #0x26	; 38
      00039C 26                    1128 	.db #0x26	; 38
      00039D 26                    1129 	.db #0x26	; 38
      00039E 26                    1130 	.db #0x26	; 38
      00039F 26                    1131 	.db #0x26	; 38
      0003A0 26                    1132 	.db #0x26	; 38
      0003A1 26                    1133 	.db #0x26	; 38
      0003A2 26                    1134 	.db #0x26	; 38
      0003A3 26                    1135 	.db #0x26	; 38
      0003A4 26                    1136 	.db #0x26	; 38
      0003A5 26                    1137 	.db #0x26	; 38
      0003A6 26                    1138 	.db #0x26	; 38
      0003A7 26                    1139 	.db #0x26	; 38
      0003A8 26                    1140 	.db #0x26	; 38
      0003A9 26                    1141 	.db #0x26	; 38
      0003AA 26                    1142 	.db #0x26	; 38
      0003AB 26                    1143 	.db #0x26	; 38
      0003AC 26                    1144 	.db #0x26	; 38
      0003AD 2B                    1145 	.db #0x2b	; 43
      0003AE 26                    1146 	.db #0x26	; 38
      0003AF 26                    1147 	.db #0x26	; 38
      0003B0 26                    1148 	.db #0x26	; 38
      0003B1 26                    1149 	.db #0x26	; 38
      0003B2 26                    1150 	.db #0x26	; 38
      0003B3 26                    1151 	.db #0x26	; 38
      0003B4 26                    1152 	.db #0x26	; 38
      0003B5 25                    1153 	.db #0x25	; 37
      0003B6 26                    1154 	.db #0x26	; 38
      0003B7 26                    1155 	.db #0x26	; 38
      0003B8 2A                    1156 	.db #0x2a	; 42
      0003B9 29                    1157 	.db #0x29	; 41
      0003BA 26                    1158 	.db #0x26	; 38
      0003BB 26                    1159 	.db #0x26	; 38
      0003BC 26                    1160 	.db #0x26	; 38
      0003BD 26                    1161 	.db #0x26	; 38
      0003BE 26                    1162 	.db #0x26	; 38
      0003BF 26                    1163 	.db #0x26	; 38
      0003C0 26                    1164 	.db #0x26	; 38
      0003C1 26                    1165 	.db #0x26	; 38
      0003C2 2B                    1166 	.db #0x2b	; 43
      0003C3 26                    1167 	.db #0x26	; 38
      0003C4 26                    1168 	.db #0x26	; 38
      0003C5 26                    1169 	.db #0x26	; 38
      0003C6 26                    1170 	.db #0x26	; 38
      0003C7 26                    1171 	.db #0x26	; 38
      0003C8 26                    1172 	.db #0x26	; 38
      0003C9 2C                    1173 	.db #0x2c	; 44
      0003CA 26                    1174 	.db #0x26	; 38
      0003CB 26                    1175 	.db #0x26	; 38
      0003CC 26                    1176 	.db #0x26	; 38
      0003CD 26                    1177 	.db #0x26	; 38
      0003CE 26                    1178 	.db #0x26	; 38
      0003CF 26                    1179 	.db #0x26	; 38
      0003D0 26                    1180 	.db #0x26	; 38
      0003D1 26                    1181 	.db #0x26	; 38
      0003D2 26                    1182 	.db #0x26	; 38
      0003D3 26                    1183 	.db #0x26	; 38
      0003D4 26                    1184 	.db #0x26	; 38
      0003D5 2C                    1185 	.db #0x2c	; 44
      0003D6 26                    1186 	.db #0x26	; 38
      0003D7 26                    1187 	.db #0x26	; 38
      0003D8 26                    1188 	.db #0x26	; 38
      0003D9 26                    1189 	.db #0x26	; 38
      0003DA 26                    1190 	.db #0x26	; 38
      0003DB 26                    1191 	.db #0x26	; 38
      0003DC 26                    1192 	.db #0x26	; 38
      0003DD 26                    1193 	.db #0x26	; 38
      0003DE 26                    1194 	.db #0x26	; 38
      0003DF 26                    1195 	.db #0x26	; 38
      0003E0 26                    1196 	.db #0x26	; 38
      0003E1 26                    1197 	.db #0x26	; 38
      0003E2 26                    1198 	.db #0x26	; 38
      0003E3 26                    1199 	.db #0x26	; 38
      0003E4 26                    1200 	.db #0x26	; 38
      0003E5 26                    1201 	.db #0x26	; 38
      0003E6 26                    1202 	.db #0x26	; 38
      0003E7 26                    1203 	.db #0x26	; 38
      0003E8 26                    1204 	.db #0x26	; 38
      0003E9 26                    1205 	.db #0x26	; 38
      0003EA 26                    1206 	.db #0x26	; 38
      0003EB 26                    1207 	.db #0x26	; 38
      0003EC 26                    1208 	.db #0x26	; 38
      0003ED 26                    1209 	.db #0x26	; 38
      0003EE 26                    1210 	.db #0x26	; 38
      0003EF 26                    1211 	.db #0x26	; 38
      0003F0 26                    1212 	.db #0x26	; 38
      0003F1 26                    1213 	.db #0x26	; 38
      0003F2 26                    1214 	.db #0x26	; 38
      0003F3 26                    1215 	.db #0x26	; 38
      0003F4 26                    1216 	.db #0x26	; 38
      0003F5 26                    1217 	.db #0x26	; 38
      0003F6 26                    1218 	.db #0x26	; 38
      0003F7 26                    1219 	.db #0x26	; 38
      0003F8 26                    1220 	.db #0x26	; 38
      0003F9 26                    1221 	.db #0x26	; 38
      0003FA 26                    1222 	.db #0x26	; 38
      0003FB 26                    1223 	.db #0x26	; 38
      0003FC 26                    1224 	.db #0x26	; 38
      0003FD 26                    1225 	.db #0x26	; 38
      0003FE 26                    1226 	.db #0x26	; 38
      0003FF 26                    1227 	.db #0x26	; 38
      000400 26                    1228 	.db #0x26	; 38
      000401 26                    1229 	.db #0x26	; 38
      000402 26                    1230 	.db #0x26	; 38
      000403 26                    1231 	.db #0x26	; 38
      000404 26                    1232 	.db #0x26	; 38
      000405 26                    1233 	.db #0x26	; 38
      000406 26                    1234 	.db #0x26	; 38
      000407 26                    1235 	.db #0x26	; 38
      000408 26                    1236 	.db #0x26	; 38
      000409 26                    1237 	.db #0x26	; 38
      00040A 26                    1238 	.db #0x26	; 38
      00040B 26                    1239 	.db #0x26	; 38
      00040C 26                    1240 	.db #0x26	; 38
      00040D 2B                    1241 	.db #0x2b	; 43
      00040E 26                    1242 	.db #0x26	; 38
      00040F 26                    1243 	.db #0x26	; 38
      000410 26                    1244 	.db #0x26	; 38
      000411 26                    1245 	.db #0x26	; 38
      000412 26                    1246 	.db #0x26	; 38
      000413 26                    1247 	.db #0x26	; 38
      000414 26                    1248 	.db #0x26	; 38
      000415 26                    1249 	.db #0x26	; 38
      000416 26                    1250 	.db #0x26	; 38
      000417 26                    1251 	.db #0x26	; 38
      000418 26                    1252 	.db #0x26	; 38
      000419 26                    1253 	.db #0x26	; 38
      00041A 26                    1254 	.db #0x26	; 38
      00041B 26                    1255 	.db #0x26	; 38
      00041C 26                    1256 	.db #0x26	; 38
      00041D 26                    1257 	.db #0x26	; 38
      00041E 26                    1258 	.db #0x26	; 38
      00041F 26                    1259 	.db #0x26	; 38
      000420 2B                    1260 	.db #0x2b	; 43
      000421 26                    1261 	.db #0x26	; 38
      000422 26                    1262 	.db #0x26	; 38
      000423 26                    1263 	.db #0x26	; 38
      000424 26                    1264 	.db #0x26	; 38
      000425 26                    1265 	.db #0x26	; 38
      000426 26                    1266 	.db #0x26	; 38
      000427 26                    1267 	.db #0x26	; 38
      000428 26                    1268 	.db #0x26	; 38
      000429 26                    1269 	.db #0x26	; 38
      00042A 26                    1270 	.db #0x26	; 38
      00042B 26                    1271 	.db #0x26	; 38
      00042C 26                    1272 	.db #0x26	; 38
      00042D 26                    1273 	.db #0x26	; 38
      00042E 26                    1274 	.db #0x26	; 38
      00042F 26                    1275 	.db #0x26	; 38
      000430 26                    1276 	.db #0x26	; 38
      000431 26                    1277 	.db #0x26	; 38
      000432 26                    1278 	.db #0x26	; 38
      000433 26                    1279 	.db #0x26	; 38
      000434 26                    1280 	.db #0x26	; 38
      000435 26                    1281 	.db #0x26	; 38
      000436 26                    1282 	.db #0x26	; 38
      000437 2C                    1283 	.db #0x2c	; 44
      000438 26                    1284 	.db #0x26	; 38
      000439 26                    1285 	.db #0x26	; 38
      00043A 26                    1286 	.db #0x26	; 38
      00043B 26                    1287 	.db #0x26	; 38
      00043C 26                    1288 	.db #0x26	; 38
      00043D 26                    1289 	.db #0x26	; 38
      00043E 26                    1290 	.db #0x26	; 38
      00043F 26                    1291 	.db #0x26	; 38
      000440 26                    1292 	.db #0x26	; 38
      000441 26                    1293 	.db #0x26	; 38
      000442 26                    1294 	.db #0x26	; 38
      000443 26                    1295 	.db #0x26	; 38
      000444 26                    1296 	.db #0x26	; 38
      000445 26                    1297 	.db #0x26	; 38
      000446 26                    1298 	.db #0x26	; 38
      000447 26                    1299 	.db #0x26	; 38
      000448 25                    1300 	.db #0x25	; 37
      000449 2C                    1301 	.db #0x2c	; 44
      00044A 26                    1302 	.db #0x26	; 38
      00044B 26                    1303 	.db #0x26	; 38
      00044C 26                    1304 	.db #0x26	; 38
      00044D 26                    1305 	.db #0x26	; 38
      00044E 26                    1306 	.db #0x26	; 38
      00044F 26                    1307 	.db #0x26	; 38
      000450 26                    1308 	.db #0x26	; 38
      000451 26                    1309 	.db #0x26	; 38
      000452 26                    1310 	.db #0x26	; 38
      000453 26                    1311 	.db #0x26	; 38
      000454 26                    1312 	.db #0x26	; 38
      000455 26                    1313 	.db #0x26	; 38
      000456 26                    1314 	.db #0x26	; 38
      000457 26                    1315 	.db #0x26	; 38
      000458 26                    1316 	.db #0x26	; 38
      000459 26                    1317 	.db #0x26	; 38
      00045A 2B                    1318 	.db #0x2b	; 43
      00045B 26                    1319 	.db #0x26	; 38
      00045C 26                    1320 	.db #0x26	; 38
      00045D 26                    1321 	.db #0x26	; 38
      00045E 26                    1322 	.db #0x26	; 38
      00045F 26                    1323 	.db #0x26	; 38
      000460 26                    1324 	.db #0x26	; 38
      000461 26                    1325 	.db #0x26	; 38
      000462 26                    1326 	.db #0x26	; 38
      000463 26                    1327 	.db #0x26	; 38
      000464 26                    1328 	.db #0x26	; 38
      000465 26                    1329 	.db #0x26	; 38
      000466 26                    1330 	.db #0x26	; 38
      000467 26                    1331 	.db #0x26	; 38
      000468 26                    1332 	.db #0x26	; 38
      000469 26                    1333 	.db #0x26	; 38
      00046A 26                    1334 	.db #0x26	; 38
      00046B 26                    1335 	.db #0x26	; 38
      00046C 26                    1336 	.db #0x26	; 38
      00046D 26                    1337 	.db #0x26	; 38
      00046E 26                    1338 	.db #0x26	; 38
      00046F 26                    1339 	.db #0x26	; 38
      000470 26                    1340 	.db #0x26	; 38
      000471 26                    1341 	.db #0x26	; 38
      000472 27                    1342 	.db #0x27	; 39
      000473 28                    1343 	.db #0x28	; 40
      000474 26                    1344 	.db #0x26	; 38
      000475 26                    1345 	.db #0x26	; 38
      000476 26                    1346 	.db #0x26	; 38
      000477 26                    1347 	.db #0x26	; 38
      000478 26                    1348 	.db #0x26	; 38
      000479 26                    1349 	.db #0x26	; 38
      00047A 26                    1350 	.db #0x26	; 38
      00047B 26                    1351 	.db #0x26	; 38
      00047C 26                    1352 	.db #0x26	; 38
      00047D 26                    1353 	.db #0x26	; 38
      00047E 26                    1354 	.db #0x26	; 38
      00047F 26                    1355 	.db #0x26	; 38
      000480 26                    1356 	.db #0x26	; 38
      000481 26                    1357 	.db #0x26	; 38
      000482 26                    1358 	.db #0x26	; 38
      000483 26                    1359 	.db #0x26	; 38
      000484 26                    1360 	.db #0x26	; 38
      000485 26                    1361 	.db #0x26	; 38
      000486 2B                    1362 	.db #0x2b	; 43
      000487                       1363 _backgroundtiles:
      000487 40                    1364 	.db #0x40	; 64
      000488 38                    1365 	.db #0x38	; 56	'8'
      000489 3A                    1366 	.db #0x3a	; 58
      00048A 44                    1367 	.db #0x44	; 68	'D'
      00048B 7C                    1368 	.db #0x7c	; 124
      00048C 9A                    1369 	.db #0x9a	; 154
      00048D 5E                    1370 	.db #0x5e	; 94
      00048E E9                    1371 	.db #0xe9	; 233
      00048F 7A                    1372 	.db #0x7a	; 122	'z'
      000490 87                    1373 	.db #0x87	; 135
      000491 76                    1374 	.db #0x76	; 118	'v'
      000492 B9                    1375 	.db #0xb9	; 185
      000493 3C                    1376 	.db #0x3c	; 60
      000494 72                    1377 	.db #0x72	; 114	'r'
      000495 00                    1378 	.db #0x00	; 0
      000496 3C                    1379 	.db #0x3c	; 60
      000497 00                    1380 	.db #0x00	; 0
      000498 00                    1381 	.db #0x00	; 0
      000499 00                    1382 	.db #0x00	; 0
      00049A 00                    1383 	.db #0x00	; 0
      00049B 00                    1384 	.db #0x00	; 0
      00049C 00                    1385 	.db #0x00	; 0
      00049D 00                    1386 	.db #0x00	; 0
      00049E 00                    1387 	.db #0x00	; 0
      00049F 00                    1388 	.db #0x00	; 0
      0004A0 00                    1389 	.db #0x00	; 0
      0004A1 00                    1390 	.db #0x00	; 0
      0004A2 00                    1391 	.db #0x00	; 0
      0004A3 00                    1392 	.db #0x00	; 0
      0004A4 00                    1393 	.db #0x00	; 0
      0004A5 00                    1394 	.db #0x00	; 0
      0004A6 00                    1395 	.db #0x00	; 0
      0004A7 00                    1396 	.db #0x00	; 0
      0004A8 0F                    1397 	.db #0x0f	; 15
      0004A9 08                    1398 	.db #0x08	; 8
      0004AA 17                    1399 	.db #0x17	; 23
      0004AB 1C                    1400 	.db #0x1c	; 28
      0004AC 23                    1401 	.db #0x23	; 35
      0004AD 3E                    1402 	.db #0x3e	; 62
      0004AE 41                    1403 	.db #0x41	; 65	'A'
      0004AF 1B                    1404 	.db #0x1b	; 27
      0004B0 64                    1405 	.db #0x64	; 100	'd'
      0004B1 31                    1406 	.db #0x31	; 49	'1'
      0004B2 4E                    1407 	.db #0x4e	; 78	'N'
      0004B3 B1                    1408 	.db #0xb1	; 177
      0004B4 CE                    1409 	.db #0xce	; 206
      0004B5 BB                    1410 	.db #0xbb	; 187
      0004B6 C4                    1411 	.db #0xc4	; 196
      0004B7 00                    1412 	.db #0x00	; 0
      0004B8 F8                    1413 	.db #0xf8	; 248
      0004B9 00                    1414 	.db #0x00	; 0
      0004BA FC                    1415 	.db #0xfc	; 252
      0004BB E0                    1416 	.db #0xe0	; 224
      0004BC 1E                    1417 	.db #0x1e	; 30
      0004BD F0                    1418 	.db #0xf0	; 240
      0004BE 0F                    1419 	.db #0x0f	; 15
      0004BF BE                    1420 	.db #0xbe	; 190
      0004C0 01                    1421 	.db #0x01	; 1
      0004C1 BC                    1422 	.db #0xbc	; 188
      0004C2 02                    1423 	.db #0x02	; 2
      0004C3 CE                    1424 	.db #0xce	; 206
      0004C4 01                    1425 	.db #0x01	; 1
      0004C5 F6                    1426 	.db #0xf6	; 246
      0004C6 61                    1427 	.db #0x61	; 97	'a'
      0004C7 F4                    1428 	.db #0xf4	; 244
      0004C8 02                    1429 	.db #0x02	; 2
      0004C9 94                    1430 	.db #0x94	; 148
      0004CA 62                    1431 	.db #0x62	; 98	'b'
      0004CB E4                    1432 	.db #0xe4	; 228
      0004CC 02                    1433 	.db #0x02	; 2
      0004CD 6C                    1434 	.db #0x6c	; 108	'l'
      0004CE 82                    1435 	.db #0x82	; 130
      0004CF 70                    1436 	.db #0x70	; 112	'p'
      0004D0 8C                    1437 	.db #0x8c	; 140
      0004D1 60                    1438 	.db #0x60	; 96
      0004D2 90                    1439 	.db #0x90	; 144
      0004D3 00                    1440 	.db #0x00	; 0
      0004D4 E0                    1441 	.db #0xe0	; 224
      0004D5 80                    1442 	.db #0x80	; 128
      0004D6 80                    1443 	.db #0x80	; 128
      0004D7 8E                    1444 	.db #0x8e	; 142
      0004D8 F7                    1445 	.db #0xf7	; 247
      0004D9 8F                    1446 	.db #0x8f	; 143
      0004DA F3                    1447 	.db #0xf3	; 243
      0004DB 86                    1448 	.db #0x86	; 134
      0004DC F9                    1449 	.db #0xf9	; 249
      0004DD 42                    1450 	.db #0x42	; 66	'B'
      0004DE 7D                    1451 	.db #0x7d	; 125
      0004DF 80                    1452 	.db #0x80	; 128
      0004E0 FF                    1453 	.db #0xff	; 255
      0004E1 44                    1454 	.db #0x44	; 68	'D'
      0004E2 7F                    1455 	.db #0x7f	; 127
      0004E3 28                    1456 	.db #0x28	; 40
      0004E4 3F                    1457 	.db #0x3f	; 63
      0004E5 07                    1458 	.db #0x07	; 7
      0004E6 07                    1459 	.db #0x07	; 7
      0004E7 00                    1460 	.db #0x00	; 0
      0004E8 00                    1461 	.db #0x00	; 0
      0004E9 08                    1462 	.db #0x08	; 8
      0004EA 00                    1463 	.db #0x00	; 0
      0004EB 08                    1464 	.db #0x08	; 8
      0004EC 00                    1465 	.db #0x00	; 0
      0004ED 1C                    1466 	.db #0x1c	; 28
      0004EE 00                    1467 	.db #0x00	; 0
      0004EF 7F                    1468 	.db #0x7f	; 127
      0004F0 00                    1469 	.db #0x00	; 0
      0004F1 1C                    1470 	.db #0x1c	; 28
      0004F2 00                    1471 	.db #0x00	; 0
      0004F3 08                    1472 	.db #0x08	; 8
      0004F4 00                    1473 	.db #0x00	; 0
      0004F5 08                    1474 	.db #0x08	; 8
      0004F6 00                    1475 	.db #0x00	; 0
      0004F7 00                    1476 	.db #0x00	; 0
      0004F8 00                    1477 	.db #0x00	; 0
      0004F9 00                    1478 	.db #0x00	; 0
      0004FA 00                    1479 	.db #0x00	; 0
      0004FB 00                    1480 	.db #0x00	; 0
      0004FC 00                    1481 	.db #0x00	; 0
      0004FD 10                    1482 	.db #0x10	; 16
      0004FE 00                    1483 	.db #0x00	; 0
      0004FF 00                    1484 	.db #0x00	; 0
      000500 00                    1485 	.db #0x00	; 0
      000501 00                    1486 	.db #0x00	; 0
      000502 00                    1487 	.db #0x00	; 0
      000503 00                    1488 	.db #0x00	; 0
      000504 00                    1489 	.db #0x00	; 0
      000505 00                    1490 	.db #0x00	; 0
      000506 00                    1491 	.db #0x00	; 0
      000507                       1492 _healthblock:
      000507 FE                    1493 	.db #0xfe	; 254
      000508 FE                    1494 	.db #0xfe	; 254
      000509 FE                    1495 	.db #0xfe	; 254
      00050A FE                    1496 	.db #0xfe	; 254
      00050B FE                    1497 	.db #0xfe	; 254
      00050C FE                    1498 	.db #0xfe	; 254
      00050D FE                    1499 	.db #0xfe	; 254
      00050E FE                    1500 	.db #0xfe	; 254
      00050F FE                    1501 	.db #0xfe	; 254
      000510 FE                    1502 	.db #0xfe	; 254
      000511 FE                    1503 	.db #0xfe	; 254
      000512 FE                    1504 	.db #0xfe	; 254
      000513 FE                    1505 	.db #0xfe	; 254
      000514 FE                    1506 	.db #0xfe	; 254
      000515 00                    1507 	.db #0x00	; 0
      000516 00                    1508 	.db #0x00	; 0
      000517                       1509 _enemy1:
      000517 3C                    1510 	.db #0x3c	; 60
      000518 3C                    1511 	.db #0x3c	; 60
      000519 7E                    1512 	.db #0x7e	; 126
      00051A 7E                    1513 	.db #0x7e	; 126
      00051B FF                    1514 	.db #0xff	; 255
      00051C FF                    1515 	.db #0xff	; 255
      00051D FF                    1516 	.db #0xff	; 255
      00051E FF                    1517 	.db #0xff	; 255
      00051F FF                    1518 	.db #0xff	; 255
      000520 FF                    1519 	.db #0xff	; 255
      000521 FF                    1520 	.db #0xff	; 255
      000522 FF                    1521 	.db #0xff	; 255
      000523 7E                    1522 	.db #0x7e	; 126
      000524 7E                    1523 	.db #0x7e	; 126
      000525 3C                    1524 	.db #0x3c	; 60
      000526 3C                    1525 	.db #0x3c	; 60
      000527                       1526 _projectile1:
      000527 3C                    1527 	.db #0x3c	; 60
      000528 3C                    1528 	.db #0x3c	; 60
      000529 7E                    1529 	.db #0x7e	; 126
      00052A 7E                    1530 	.db #0x7e	; 126
      00052B FF                    1531 	.db #0xff	; 255
      00052C FF                    1532 	.db #0xff	; 255
      00052D FF                    1533 	.db #0xff	; 255
      00052E FF                    1534 	.db #0xff	; 255
      00052F FF                    1535 	.db #0xff	; 255
      000530 FF                    1536 	.db #0xff	; 255
      000531 FF                    1537 	.db #0xff	; 255
      000532 FF                    1538 	.db #0xff	; 255
      000533 7E                    1539 	.db #0x7e	; 126
      000534 7E                    1540 	.db #0x7e	; 126
      000535 3C                    1541 	.db #0x3c	; 60
      000536 3C                    1542 	.db #0x3c	; 60
      000537                       1543 _ProjectileTiles:
      000537 24                    1544 	.db #0x24	; 36
      000538 18                    1545 	.db #0x18	; 24
      000539 18                    1546 	.db #0x18	; 24
      00053A 3C                    1547 	.db #0x3c	; 60
      00053B 18                    1548 	.db #0x18	; 24
      00053C 3C                    1549 	.db #0x3c	; 60
      00053D 24                    1550 	.db #0x24	; 36
      00053E 18                    1551 	.db #0x18	; 24
      00053F 00                    1552 	.db #0x00	; 0
      000540 00                    1553 	.db #0x00	; 0
      000541 00                    1554 	.db #0x00	; 0
      000542 00                    1555 	.db #0x00	; 0
      000543 00                    1556 	.db #0x00	; 0
      000544 00                    1557 	.db #0x00	; 0
      000545 00                    1558 	.db #0x00	; 0
      000546 00                    1559 	.db #0x00	; 0
      000547 00                    1560 	.db #0x00	; 0
      000548 00                    1561 	.db #0x00	; 0
      000549 00                    1562 	.db #0x00	; 0
      00054A 00                    1563 	.db #0x00	; 0
      00054B 09                    1564 	.db #0x09	; 9
      00054C 06                    1565 	.db #0x06	; 6
      00054D 06                    1566 	.db #0x06	; 6
      00054E 0F                    1567 	.db #0x0f	; 15
      00054F 06                    1568 	.db #0x06	; 6
      000550 0F                    1569 	.db #0x0f	; 15
      000551 09                    1570 	.db #0x09	; 9
      000552 06                    1571 	.db #0x06	; 6
      000553 00                    1572 	.db #0x00	; 0
      000554 00                    1573 	.db #0x00	; 0
      000555 00                    1574 	.db #0x00	; 0
      000556 00                    1575 	.db #0x00	; 0
      000557 09                    1576 	.db #0x09	; 9
      000558 06                    1577 	.db #0x06	; 6
      000559 06                    1578 	.db #0x06	; 6
      00055A 0F                    1579 	.db #0x0f	; 15
      00055B 06                    1580 	.db #0x06	; 6
      00055C 0F                    1581 	.db #0x0f	; 15
      00055D 09                    1582 	.db #0x09	; 9
      00055E 06                    1583 	.db #0x06	; 6
      00055F 00                    1584 	.db #0x00	; 0
      000560 00                    1585 	.db #0x00	; 0
      000561 00                    1586 	.db #0x00	; 0
      000562 00                    1587 	.db #0x00	; 0
      000563 00                    1588 	.db #0x00	; 0
      000564 00                    1589 	.db #0x00	; 0
      000565 00                    1590 	.db #0x00	; 0
      000566 00                    1591 	.db #0x00	; 0
      000567 99                    1592 	.db #0x99	; 153
      000568 66                    1593 	.db #0x66	; 102	'f'
      000569 66                    1594 	.db #0x66	; 102	'f'
      00056A FF                    1595 	.db #0xff	; 255
      00056B 66                    1596 	.db #0x66	; 102	'f'
      00056C FF                    1597 	.db #0xff	; 255
      00056D 99                    1598 	.db #0x99	; 153
      00056E 66                    1599 	.db #0x66	; 102	'f'
      00056F 00                    1600 	.db #0x00	; 0
      000570 00                    1601 	.db #0x00	; 0
      000571 00                    1602 	.db #0x00	; 0
      000572 00                    1603 	.db #0x00	; 0
      000573 00                    1604 	.db #0x00	; 0
      000574 00                    1605 	.db #0x00	; 0
      000575 00                    1606 	.db #0x00	; 0
      000576 00                    1607 	.db #0x00	; 0
      000577 09                    1608 	.db #0x09	; 9
      000578 06                    1609 	.db #0x06	; 6
      000579 06                    1610 	.db #0x06	; 6
      00057A 0F                    1611 	.db #0x0f	; 15
      00057B 06                    1612 	.db #0x06	; 6
      00057C 0F                    1613 	.db #0x0f	; 15
      00057D 09                    1614 	.db #0x09	; 9
      00057E 06                    1615 	.db #0x06	; 6
      00057F 09                    1616 	.db #0x09	; 9
      000580 06                    1617 	.db #0x06	; 6
      000581 06                    1618 	.db #0x06	; 6
      000582 0F                    1619 	.db #0x0f	; 15
      000583 06                    1620 	.db #0x06	; 6
      000584 0F                    1621 	.db #0x0f	; 15
      000585 09                    1622 	.db #0x09	; 9
      000586 06                    1623 	.db #0x06	; 6
      000587 90                    1624 	.db #0x90	; 144
      000588 60                    1625 	.db #0x60	; 96
      000589 60                    1626 	.db #0x60	; 96
      00058A F0                    1627 	.db #0xf0	; 240
      00058B 60                    1628 	.db #0x60	; 96
      00058C F0                    1629 	.db #0xf0	; 240
      00058D 90                    1630 	.db #0x90	; 144
      00058E 60                    1631 	.db #0x60	; 96
      00058F 09                    1632 	.db #0x09	; 9
      000590 06                    1633 	.db #0x06	; 6
      000591 06                    1634 	.db #0x06	; 6
      000592 0F                    1635 	.db #0x0f	; 15
      000593 06                    1636 	.db #0x06	; 6
      000594 0F                    1637 	.db #0x0f	; 15
      000595 09                    1638 	.db #0x09	; 9
      000596 06                    1639 	.db #0x06	; 6
      000597 18                    1640 	.db #0x18	; 24
      000598 00                    1641 	.db #0x00	; 0
      000599 18                    1642 	.db #0x18	; 24
      00059A 18                    1643 	.db #0x18	; 24
      00059B 18                    1644 	.db #0x18	; 24
      00059C 18                    1645 	.db #0x18	; 24
      00059D 3C                    1646 	.db #0x3c	; 60
      00059E 18                    1647 	.db #0x18	; 24
      00059F 3C                    1648 	.db #0x3c	; 60
      0005A0 18                    1649 	.db #0x18	; 24
      0005A1 3C                    1650 	.db #0x3c	; 60
      0005A2 3C                    1651 	.db #0x3c	; 60
      0005A3 7E                    1652 	.db #0x7e	; 126
      0005A4 3C                    1653 	.db #0x3c	; 60
      0005A5 7E                    1654 	.db #0x7e	; 126
      0005A6 24                    1655 	.db #0x24	; 36
      0005A7 00                    1656 	.db #0x00	; 0
      0005A8 00                    1657 	.db #0x00	; 0
      0005A9 C0                    1658 	.db #0xc0	; 192
      0005AA 00                    1659 	.db #0x00	; 0
      0005AB F8                    1660 	.db #0xf8	; 248
      0005AC E0                    1661 	.db #0xe0	; 224
      0005AD FF                    1662 	.db #0xff	; 255
      0005AE 7E                    1663 	.db #0x7e	; 126
      0005AF FF                    1664 	.db #0xff	; 255
      0005B0 7E                    1665 	.db #0x7e	; 126
      0005B1 F8                    1666 	.db #0xf8	; 248
      0005B2 E0                    1667 	.db #0xe0	; 224
      0005B3 C0                    1668 	.db #0xc0	; 192
      0005B4 00                    1669 	.db #0x00	; 0
      0005B5 00                    1670 	.db #0x00	; 0
      0005B6 00                    1671 	.db #0x00	; 0
      0005B7 06                    1672 	.db #0x06	; 6
      0005B8 00                    1673 	.db #0x00	; 0
      0005B9 0F                    1674 	.db #0x0f	; 15
      0005BA 06                    1675 	.db #0x06	; 6
      0005BB 1F                    1676 	.db #0x1f	; 31
      0005BC 0E                    1677 	.db #0x0e	; 14
      0005BD 7E                    1678 	.db #0x7e	; 126
      0005BE 1C                    1679 	.db #0x1c	; 28
      0005BF FC                    1680 	.db #0xfc	; 252
      0005C0 78                    1681 	.db #0x78	; 120	'x'
      0005C1 F8                    1682 	.db #0xf8	; 248
      0005C2 F0                    1683 	.db #0xf0	; 240
      0005C3 F8                    1684 	.db #0xf8	; 248
      0005C4 70                    1685 	.db #0x70	; 112	'p'
      0005C5 70                    1686 	.db #0x70	; 112	'p'
      0005C6 20                    1687 	.db #0x20	; 32
      0005C7                       1688 _BLANKSIZE:
      0005C7 03                    1689 	.db #0x03	; 3
      0005C8                       1690 _BLANK:
      0005C8 26                    1691 	.db #0x26	; 38
      0005C9 2B                    1692 	.db #0x2b	; 43
      0005CA 2C                    1693 	.db #0x2c	; 44
      0005CB                       1694 _EMPTYSPRITE:
      0005CB 50                    1695 	.db #0x50	; 80	'P'
      0005CC                       1696 _ENEMYCOUNT:
      0005CC 05                    1697 	.db #0x05	; 5
      0005CD                       1698 _xSpawnPositions:
      0005CD 00                    1699 	.db #0x00	; 0
      0005CE 60                    1700 	.db #0x60	; 96
      0005CF B0                    1701 	.db #0xb0	; 176
      0005D0 00                    1702 	.db #0x00	; 0
      0005D1 B0                    1703 	.db #0xb0	; 176
      0005D2 00                    1704 	.db #0x00	; 0
      0005D3 60                    1705 	.db #0x60	; 96
      0005D4 B0                    1706 	.db #0xb0	; 176
      0005D5                       1707 _ySpawnPositions:
      0005D5 00                    1708 	.db #0x00	; 0
      0005D6 00                    1709 	.db #0x00	; 0
      0005D7 00                    1710 	.db #0x00	; 0
      0005D8 5C                    1711 	.db #0x5c	; 92
      0005D9 5C                    1712 	.db #0x5c	; 92
      0005DA A0                    1713 	.db #0xa0	; 160
      0005DB A0                    1714 	.db #0xa0	; 160
      0005DC A0                    1715 	.db #0xa0	; 160
      0005DD                       1716 _PROJECTILECOUNT:
      0005DD 05                    1717 	.db #0x05	; 5
      0005DE                       1718 _PLAYERSIZE:
      0005DE 08                    1719 	.db #0x08	; 8
      0005DF                       1720 _maxHull:
      0005DF 64                    1721 	.db #0x64	;  100	'd'
      0005E0                       1722 _maxShield:
      0005E0 64                    1723 	.db #0x64	;  100	'd'
      0005E1                       1724 _GUNCOUNT:
      0005E1 03                    1725 	.db #0x03	; 3
                                   1726 ;main.c:103: void setHealthBar(uint8_t row, uint8_t hp) {
                                   1727 ;	---------------------------------
                                   1728 ; Function setHealthBar
                                   1729 ; ---------------------------------
      0005E2                       1730 _setHealthBar::
      0005E2 E8 FB                 1731 	add	sp, #-5
                                   1732 ;main.c:105: if (hp >= 80) {
      0005E4 F8 08                 1733 	ldhl	sp,	#8
      0005E6 7E                    1734 	ld	a, (hl)
      0005E7 D6 50                 1735 	sub	a, #0x50
      0005E9 38 31                 1736 	jr	C, 00102$
                                   1737 ;main.c:106: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      0005EB F8 00                 1738 	ldhl	sp,	#0
      0005ED 4D                    1739 	ld	c, l
      0005EE 44                    1740 	ld	b, h
      0005EF 36 50                 1741 	ld	(hl), #0x50
      0005F1 69                    1742 	ld	l, c
                                   1743 ;	spillPairReg hl
                                   1744 ;	spillPairReg hl
      0005F2 60                    1745 	ld	h, b
                                   1746 ;	spillPairReg hl
                                   1747 ;	spillPairReg hl
      0005F3 23                    1748 	inc	hl
      0005F4 36 50                 1749 	ld	(hl), #0x50
      0005F6 69                    1750 	ld	l, c
                                   1751 ;	spillPairReg hl
                                   1752 ;	spillPairReg hl
      0005F7 60                    1753 	ld	h, b
                                   1754 ;	spillPairReg hl
                                   1755 ;	spillPairReg hl
      0005F8 23                    1756 	inc	hl
      0005F9 23                    1757 	inc	hl
      0005FA 36 50                 1758 	ld	(hl), #0x50
      0005FC 69                    1759 	ld	l, c
                                   1760 ;	spillPairReg hl
                                   1761 ;	spillPairReg hl
      0005FD 60                    1762 	ld	h, b
                                   1763 ;	spillPairReg hl
                                   1764 ;	spillPairReg hl
      0005FE 23                    1765 	inc	hl
      0005FF 23                    1766 	inc	hl
      000600 23                    1767 	inc	hl
      000601 36 50                 1768 	ld	(hl), #0x50
      000603 21 04 00              1769 	ld	hl, #0x0004
      000606 09                    1770 	add	hl, bc
      000607 36 50                 1771 	ld	(hl), #0x50
                                   1772 ;main.c:107: set_win_tiles(5,row,5,1,blockmap);
      000609 C5                    1773 	push	bc
      00060A 21 05 01              1774 	ld	hl, #0x105
      00060D E5                    1775 	push	hl
      00060E F8 0B                 1776 	ldhl	sp,	#11
      000610 66                    1777 	ld	h, (hl)
      000611 2E 05                 1778 	ld	l, #0x05
      000613 E5                    1779 	push	hl
      000614 CDr00r00              1780 	call	_set_win_tiles
      000617 E8 06                 1781 	add	sp, #6
                                   1782 ;main.c:108: return;
      000619 C3rF0r06              1783 	jp	00109$
      00061C                       1784 00102$:
                                   1785 ;main.c:110: if (hp >= 60) {
      00061C F8 08                 1786 	ldhl	sp,	#8
      00061E 7E                    1787 	ld	a, (hl)
      00061F D6 3C                 1788 	sub	a, #0x3c
      000621 38 31                 1789 	jr	C, 00104$
                                   1790 ;main.c:111: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      000623 F8 00                 1791 	ldhl	sp,	#0
      000625 4D                    1792 	ld	c, l
      000626 44                    1793 	ld	b, h
      000627 36 50                 1794 	ld	(hl), #0x50
      000629 69                    1795 	ld	l, c
                                   1796 ;	spillPairReg hl
                                   1797 ;	spillPairReg hl
      00062A 60                    1798 	ld	h, b
                                   1799 ;	spillPairReg hl
                                   1800 ;	spillPairReg hl
      00062B 23                    1801 	inc	hl
      00062C 36 50                 1802 	ld	(hl), #0x50
      00062E 69                    1803 	ld	l, c
                                   1804 ;	spillPairReg hl
                                   1805 ;	spillPairReg hl
      00062F 60                    1806 	ld	h, b
                                   1807 ;	spillPairReg hl
                                   1808 ;	spillPairReg hl
      000630 23                    1809 	inc	hl
      000631 23                    1810 	inc	hl
      000632 36 50                 1811 	ld	(hl), #0x50
      000634 69                    1812 	ld	l, c
                                   1813 ;	spillPairReg hl
                                   1814 ;	spillPairReg hl
      000635 60                    1815 	ld	h, b
                                   1816 ;	spillPairReg hl
                                   1817 ;	spillPairReg hl
      000636 23                    1818 	inc	hl
      000637 23                    1819 	inc	hl
      000638 23                    1820 	inc	hl
      000639 36 50                 1821 	ld	(hl), #0x50
      00063B 21 04 00              1822 	ld	hl, #0x0004
      00063E 09                    1823 	add	hl, bc
      00063F 36 00                 1824 	ld	(hl), #0x00
                                   1825 ;main.c:112: set_win_tiles(5,row,5,1,blockmap);
      000641 C5                    1826 	push	bc
      000642 21 05 01              1827 	ld	hl, #0x105
      000645 E5                    1828 	push	hl
      000646 F8 0B                 1829 	ldhl	sp,	#11
      000648 66                    1830 	ld	h, (hl)
      000649 2E 05                 1831 	ld	l, #0x05
      00064B E5                    1832 	push	hl
      00064C CDr00r00              1833 	call	_set_win_tiles
      00064F E8 06                 1834 	add	sp, #6
                                   1835 ;main.c:113: return;
      000651 C3rF0r06              1836 	jp	00109$
      000654                       1837 00104$:
                                   1838 ;main.c:115: if (hp >= 40) {
      000654 F8 08                 1839 	ldhl	sp,	#8
      000656 7E                    1840 	ld	a, (hl)
      000657 D6 28                 1841 	sub	a, #0x28
      000659 38 30                 1842 	jr	C, 00106$
                                   1843 ;main.c:116: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      00065B F8 00                 1844 	ldhl	sp,	#0
      00065D 4D                    1845 	ld	c, l
      00065E 44                    1846 	ld	b, h
      00065F 36 50                 1847 	ld	(hl), #0x50
      000661 69                    1848 	ld	l, c
                                   1849 ;	spillPairReg hl
                                   1850 ;	spillPairReg hl
      000662 60                    1851 	ld	h, b
                                   1852 ;	spillPairReg hl
                                   1853 ;	spillPairReg hl
      000663 23                    1854 	inc	hl
      000664 36 50                 1855 	ld	(hl), #0x50
      000666 69                    1856 	ld	l, c
                                   1857 ;	spillPairReg hl
                                   1858 ;	spillPairReg hl
      000667 60                    1859 	ld	h, b
                                   1860 ;	spillPairReg hl
                                   1861 ;	spillPairReg hl
      000668 23                    1862 	inc	hl
      000669 23                    1863 	inc	hl
      00066A 36 50                 1864 	ld	(hl), #0x50
      00066C 59                    1865 	ld	e, c
      00066D 50                    1866 	ld	d, b
      00066E 13                    1867 	inc	de
      00066F 13                    1868 	inc	de
      000670 13                    1869 	inc	de
      000671 AF                    1870 	xor	a, a
      000672 12                    1871 	ld	(de), a
      000673 21 04 00              1872 	ld	hl, #0x0004
      000676 09                    1873 	add	hl, bc
      000677 36 00                 1874 	ld	(hl), #0x00
                                   1875 ;main.c:117: set_win_tiles(5,row,5,1,blockmap);
      000679 C5                    1876 	push	bc
      00067A 21 05 01              1877 	ld	hl, #0x105
      00067D E5                    1878 	push	hl
      00067E F8 0B                 1879 	ldhl	sp,	#11
      000680 66                    1880 	ld	h, (hl)
      000681 2E 05                 1881 	ld	l, #0x05
      000683 E5                    1882 	push	hl
      000684 CDr00r00              1883 	call	_set_win_tiles
      000687 E8 06                 1884 	add	sp, #6
                                   1885 ;main.c:118: return;
      000689 18 65                 1886 	jr	00109$
      00068B                       1887 00106$:
                                   1888 ;main.c:120: if (hp >= 20) {
      00068B F8 08                 1889 	ldhl	sp,	#8
      00068D 7E                    1890 	ld	a, (hl)
      00068E D6 14                 1891 	sub	a, #0x14
      000690 38 30                 1892 	jr	C, 00108$
                                   1893 ;main.c:121: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000692 F8 00                 1894 	ldhl	sp,	#0
      000694 4D                    1895 	ld	c, l
      000695 44                    1896 	ld	b, h
      000696 36 50                 1897 	ld	(hl), #0x50
      000698 69                    1898 	ld	l, c
                                   1899 ;	spillPairReg hl
                                   1900 ;	spillPairReg hl
      000699 60                    1901 	ld	h, b
                                   1902 ;	spillPairReg hl
                                   1903 ;	spillPairReg hl
      00069A 23                    1904 	inc	hl
      00069B 36 50                 1905 	ld	(hl), #0x50
      00069D 59                    1906 	ld	e, c
      00069E 50                    1907 	ld	d, b
      00069F 13                    1908 	inc	de
      0006A0 13                    1909 	inc	de
      0006A1 AF                    1910 	xor	a, a
      0006A2 12                    1911 	ld	(de), a
      0006A3 59                    1912 	ld	e, c
      0006A4 50                    1913 	ld	d, b
      0006A5 13                    1914 	inc	de
      0006A6 13                    1915 	inc	de
      0006A7 13                    1916 	inc	de
      0006A8 AF                    1917 	xor	a, a
      0006A9 12                    1918 	ld	(de), a
      0006AA 21 04 00              1919 	ld	hl, #0x0004
      0006AD 09                    1920 	add	hl, bc
      0006AE 36 00                 1921 	ld	(hl), #0x00
                                   1922 ;main.c:122: set_win_tiles(5,row,5,1,blockmap);
      0006B0 C5                    1923 	push	bc
      0006B1 21 05 01              1924 	ld	hl, #0x105
      0006B4 E5                    1925 	push	hl
      0006B5 F8 0B                 1926 	ldhl	sp,	#11
      0006B7 66                    1927 	ld	h, (hl)
      0006B8 2E 05                 1928 	ld	l, #0x05
      0006BA E5                    1929 	push	hl
      0006BB CDr00r00              1930 	call	_set_win_tiles
      0006BE E8 06                 1931 	add	sp, #6
                                   1932 ;main.c:123: return;
      0006C0 18 2E                 1933 	jr	00109$
      0006C2                       1934 00108$:
                                   1935 ;main.c:125: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      0006C2 F8 00                 1936 	ldhl	sp,	#0
      0006C4 4D                    1937 	ld	c, l
      0006C5 44                    1938 	ld	b, h
      0006C6 36 50                 1939 	ld	(hl), #0x50
      0006C8 59                    1940 	ld	e, c
      0006C9 50                    1941 	ld	d, b
      0006CA 13                    1942 	inc	de
      0006CB AF                    1943 	xor	a, a
      0006CC 12                    1944 	ld	(de), a
      0006CD 59                    1945 	ld	e, c
      0006CE 50                    1946 	ld	d, b
      0006CF 13                    1947 	inc	de
      0006D0 13                    1948 	inc	de
      0006D1 AF                    1949 	xor	a, a
      0006D2 12                    1950 	ld	(de), a
      0006D3 59                    1951 	ld	e, c
      0006D4 50                    1952 	ld	d, b
      0006D5 13                    1953 	inc	de
      0006D6 13                    1954 	inc	de
      0006D7 13                    1955 	inc	de
      0006D8 AF                    1956 	xor	a, a
      0006D9 12                    1957 	ld	(de), a
      0006DA 21 04 00              1958 	ld	hl, #0x0004
      0006DD 09                    1959 	add	hl, bc
      0006DE 36 00                 1960 	ld	(hl), #0x00
                                   1961 ;main.c:126: set_win_tiles(5,row,5,1,blockmap);
      0006E0 C5                    1962 	push	bc
      0006E1 21 05 01              1963 	ld	hl, #0x105
      0006E4 E5                    1964 	push	hl
      0006E5 F8 0B                 1965 	ldhl	sp,	#11
      0006E7 66                    1966 	ld	h, (hl)
      0006E8 2E 05                 1967 	ld	l, #0x05
      0006EA E5                    1968 	push	hl
      0006EB CDr00r00              1969 	call	_set_win_tiles
      0006EE E8 06                 1970 	add	sp, #6
                                   1971 ;main.c:127: return;
      0006F0                       1972 00109$:
                                   1973 ;main.c:129: }
      0006F0 E8 05                 1974 	add	sp, #5
      0006F2 C9                    1975 	ret
                                   1976 ;main.c:131: void updateScore() {
                                   1977 ;	---------------------------------
                                   1978 ; Function updateScore
                                   1979 ; ---------------------------------
      0006F3                       1980 _updateScore::
      0006F3 E8 F6                 1981 	add	sp, #-10
                                   1982 ;main.c:135: len = bcd2text(&bcd, 0x01, buf);
      0006F5 F8 00                 1983 	ldhl	sp,	#0
      0006F7 4D                    1984 	ld	c, l
      0006F8 44                    1985 	ld	b, h
      0006F9 59                    1986 	ld	e, c
      0006FA 50                    1987 	ld	d, b
      0006FB C5                    1988 	push	bc
      0006FC D5                    1989 	push	de
      0006FD 3E 01                 1990 	ld	a, #0x01
      0006FF F5                    1991 	push	af
      000700 33                    1992 	inc	sp
      000701 11r5Dr00              1993 	ld	de, #_bcd
      000704 D5                    1994 	push	de
      000705 CDr00r00              1995 	call	_bcd2text
      000708 E8 05                 1996 	add	sp, #5
      00070A C1                    1997 	pop	bc
                                   1998 ;main.c:136: set_win_tiles(15, 1, 5, 1, buf+3);
      00070B 03                    1999 	inc	bc
      00070C 03                    2000 	inc	bc
      00070D 03                    2001 	inc	bc
      00070E C5                    2002 	push	bc
      00070F 21 05 01              2003 	ld	hl, #0x105
      000712 E5                    2004 	push	hl
      000713 21 0F 01              2005 	ld	hl, #0x10f
      000716 E5                    2006 	push	hl
      000717 CDr00r00              2007 	call	_set_win_tiles
                                   2008 ;main.c:137: }
      00071A E8 10                 2009 	add	sp, #16
      00071C C9                    2010 	ret
                                   2011 ;main.c:139: void incrementScore() {
                                   2012 ;	---------------------------------
                                   2013 ; Function incrementScore
                                   2014 ; ---------------------------------
      00071D                       2015 _incrementScore::
                                   2016 ;main.c:140: score += 1;
      00071D 21r5Br00              2017 	ld	hl, #_score
      000720 2A                    2018 	ld	a, (hl+)
      000721 4F                    2019 	ld	c, a
      000722 3A                    2020 	ld	a, (hl-)
      000723 47                    2021 	ld	b, a
      000724 03                    2022 	inc	bc
      000725 79                    2023 	ld	a, c
      000726 22                    2024 	ld	(hl+), a
      000727 70                    2025 	ld	(hl), b
                                   2026 ;main.c:141: bcd_add(&bcd, &INCREMENT);
      000728 11r61r00              2027 	ld	de, #_INCREMENT
      00072B D5                    2028 	push	de
      00072C 11r5Dr00              2029 	ld	de, #_bcd
      00072F D5                    2030 	push	de
      000730 CDr00r00              2031 	call	_bcd_add
      000733 E8 04                 2032 	add	sp, #4
                                   2033 ;main.c:142: }
      000735 C9                    2034 	ret
                                   2035 ;main.c:144: void updateDirection() {
                                   2036 ;	---------------------------------
                                   2037 ; Function updateDirection
                                   2038 ; ---------------------------------
      000736                       2039 _updateDirection::
      000736 E8 FC                 2040 	add	sp, #-4
                                   2041 ;main.c:148: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000738 21r87r00              2042 	ld	hl, #_joydata
      00073B 5E                    2043 	ld	e, (hl)
      00073C 7B                    2044 	ld	a, e
      00073D E6 01                 2045 	and	a, #0x01
      00073F F8 00                 2046 	ldhl	sp,	#0
      000741 22                    2047 	ld	(hl+), a
      000742 AF                    2048 	xor	a, a
      000743 22                    2049 	ld	(hl+), a
      000744 7B                    2050 	ld	a, e
      000745 E6 04                 2051 	and	a, #0x04
      000747 22                    2052 	ld	(hl+), a
      000748 AF                    2053 	xor	a, a
      000749 32                    2054 	ld	(hl-), a
      00074A 2B                    2055 	dec	hl
      00074B 7B                    2056 	ld	a, e
      00074C E6 08                 2057 	and	a, #0x08
      00074E 4F                    2058 	ld	c, a
      00074F 06 00                 2059 	ld	b, #0x00
      000751 3A                    2060 	ld	a, (hl-)
      000752 B6                    2061 	or	a, (hl)
      000753 28 14                 2062 	jr	Z, 00102$
      000755 F8 03                 2063 	ldhl	sp,	#3
      000757 3A                    2064 	ld	a, (hl-)
      000758 B6                    2065 	or	a, (hl)
      000759 20 0E                 2066 	jr	NZ, 00102$
      00075B 78                    2067 	ld	a, b
      00075C B1                    2068 	or	a, c
      00075D 20 0A                 2069 	jr	NZ, 00102$
                                   2070 ;main.c:149: xDir = 1;
      00075F 21r43r00              2071 	ld	hl, #_xDir
      000762 36 01                 2072 	ld	(hl), #0x01
                                   2073 ;main.c:150: yDir = 0;
      000764 21r44r00              2074 	ld	hl, #_yDir
      000767 36 00                 2075 	ld	(hl), #0x00
      000769                       2076 00102$:
                                   2077 ;main.c:152: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000769 7B                    2078 	ld	a, e
      00076A E6 02                 2079 	and	a, #0x02
      00076C 5F                    2080 	ld	e, a
      00076D 16 00                 2081 	ld	d, #0x00
      00076F 7A                    2082 	ld	a, d
      000770 B3                    2083 	or	a, e
      000771 28 14                 2084 	jr	Z, 00106$
      000773 F8 03                 2085 	ldhl	sp,	#3
      000775 3A                    2086 	ld	a, (hl-)
      000776 B6                    2087 	or	a, (hl)
      000777 20 0E                 2088 	jr	NZ, 00106$
      000779 78                    2089 	ld	a, b
      00077A B1                    2090 	or	a, c
      00077B 20 0A                 2091 	jr	NZ, 00106$
                                   2092 ;main.c:153: xDir = -1;
      00077D 21r43r00              2093 	ld	hl, #_xDir
      000780 36 FF                 2094 	ld	(hl), #0xff
                                   2095 ;main.c:154: yDir = 0;
      000782 21r44r00              2096 	ld	hl, #_yDir
      000785 36 00                 2097 	ld	(hl), #0x00
      000787                       2098 00106$:
                                   2099 ;main.c:156: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000787 F8 03                 2100 	ldhl	sp,	#3
      000789 3A                    2101 	ld	a, (hl-)
      00078A B6                    2102 	or	a, (hl)
      00078B 28 13                 2103 	jr	Z, 00110$
      00078D 7A                    2104 	ld	a, d
      00078E B3                    2105 	or	a, e
      00078F 20 0F                 2106 	jr	NZ, 00110$
      000791 2B                    2107 	dec	hl
      000792 3A                    2108 	ld	a, (hl-)
      000793 B6                    2109 	or	a, (hl)
      000794 20 0A                 2110 	jr	NZ, 00110$
                                   2111 ;main.c:157: xDir = 0;
      000796 21r43r00              2112 	ld	hl, #_xDir
      000799 36 00                 2113 	ld	(hl), #0x00
                                   2114 ;main.c:158: yDir = -1;
      00079B 21r44r00              2115 	ld	hl, #_yDir
      00079E 36 FF                 2116 	ld	(hl), #0xff
      0007A0                       2117 00110$:
                                   2118 ;main.c:160: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      0007A0 78                    2119 	ld	a, b
      0007A1 B1                    2120 	or	a, c
      0007A2 28 14                 2121 	jr	Z, 00114$
      0007A4 7A                    2122 	ld	a, d
      0007A5 B3                    2123 	or	a, e
      0007A6 20 10                 2124 	jr	NZ, 00114$
      0007A8 F8 01                 2125 	ldhl	sp,	#1
      0007AA 3A                    2126 	ld	a, (hl-)
      0007AB B6                    2127 	or	a, (hl)
      0007AC 20 0A                 2128 	jr	NZ, 00114$
                                   2129 ;main.c:161: xDir = 0;
      0007AE 21r43r00              2130 	ld	hl, #_xDir
      0007B1 36 00                 2131 	ld	(hl), #0x00
                                   2132 ;main.c:162: yDir = 1;
      0007B3 21r44r00              2133 	ld	hl, #_yDir
      0007B6 36 01                 2134 	ld	(hl), #0x01
      0007B8                       2135 00114$:
                                   2136 ;main.c:166: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      0007B8 F8 03                 2137 	ldhl	sp,	#3
      0007BA 3A                    2138 	ld	a, (hl-)
      0007BB B6                    2139 	or	a, (hl)
      0007BC 28 0F                 2140 	jr	Z, 00118$
      0007BE 2B                    2141 	dec	hl
      0007BF 3A                    2142 	ld	a, (hl-)
      0007C0 B6                    2143 	or	a, (hl)
      0007C1 28 0A                 2144 	jr	Z, 00118$
                                   2145 ;main.c:167: xDir = 1;
      0007C3 21r43r00              2146 	ld	hl, #_xDir
      0007C6 36 01                 2147 	ld	(hl), #0x01
                                   2148 ;main.c:168: yDir = -1;
      0007C8 21r44r00              2149 	ld	hl, #_yDir
      0007CB 36 FF                 2150 	ld	(hl), #0xff
      0007CD                       2151 00118$:
                                   2152 ;main.c:170: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      0007CD F8 03                 2153 	ldhl	sp,	#3
      0007CF 3A                    2154 	ld	a, (hl-)
      0007D0 B6                    2155 	or	a, (hl)
      0007D1 28 0E                 2156 	jr	Z, 00121$
      0007D3 7A                    2157 	ld	a, d
      0007D4 B3                    2158 	or	a, e
      0007D5 28 0A                 2159 	jr	Z, 00121$
                                   2160 ;main.c:171: xDir = -1;
      0007D7 21r43r00              2161 	ld	hl, #_xDir
      0007DA 36 FF                 2162 	ld	(hl), #0xff
                                   2163 ;main.c:172: yDir = -1;
      0007DC 21r44r00              2164 	ld	hl, #_yDir
      0007DF 36 FF                 2165 	ld	(hl), #0xff
      0007E1                       2166 00121$:
                                   2167 ;main.c:174: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      0007E1 78                    2168 	ld	a, b
      0007E2 B1                    2169 	or	a, c
      0007E3 28 10                 2170 	jr	Z, 00124$
      0007E5 F8 01                 2171 	ldhl	sp,	#1
      0007E7 3A                    2172 	ld	a, (hl-)
      0007E8 B6                    2173 	or	a, (hl)
      0007E9 28 0A                 2174 	jr	Z, 00124$
                                   2175 ;main.c:175: xDir = 1;
      0007EB 21r43r00              2176 	ld	hl, #_xDir
      0007EE 36 01                 2177 	ld	(hl), #0x01
                                   2178 ;main.c:176: yDir = 1;
      0007F0 21r44r00              2179 	ld	hl, #_yDir
      0007F3 36 01                 2180 	ld	(hl), #0x01
      0007F5                       2181 00124$:
                                   2182 ;main.c:178: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      0007F5 78                    2183 	ld	a, b
      0007F6 B1                    2184 	or	a, c
      0007F7 28 0E                 2185 	jr	Z, 00127$
      0007F9 7A                    2186 	ld	a, d
      0007FA B3                    2187 	or	a, e
      0007FB 28 0A                 2188 	jr	Z, 00127$
                                   2189 ;main.c:179: xDir = -1;
      0007FD 21r43r00              2190 	ld	hl, #_xDir
      000800 36 FF                 2191 	ld	(hl), #0xff
                                   2192 ;main.c:180: yDir = 1;
      000802 21r44r00              2193 	ld	hl, #_yDir
      000805 36 01                 2194 	ld	(hl), #0x01
      000807                       2195 00127$:
                                   2196 ;main.c:185: if (xDir == 0 && yDir == 0) {
      000807 FAr43r00              2197 	ld	a, (#_xDir)
      00080A B7                    2198 	or	a, a
      00080B 20 07                 2199 	jr	NZ, 00130$
      00080D FAr44r00              2200 	ld	a, (#_yDir)
      000810 B7                    2201 	or	a, a
                                   2202 ;main.c:186: return;
      000811 CArC2r08              2203 	jp	Z,00157$
      000814                       2204 00130$:
                                   2205 ;main.c:189: uint8_t direction = 0;
      000814 0E 00                 2206 	ld	c, #0x00
                                   2207 ;main.c:191: if (xDir == 0 && yDir < 0) {
      000816 FAr44r00              2208 	ld	a, (#_yDir)
      000819 07                    2209 	rlca
      00081A E6 01                 2210 	and	a,#0x01
      00081C F8 02                 2211 	ldhl	sp,	#2
      00081E 77                    2212 	ld	(hl), a
      00081F FAr43r00              2213 	ld	a, (#_xDir)
      000822 B7                    2214 	or	a, a
      000823 20 08                 2215 	jr	NZ, 00133$
      000825 F8 02                 2216 	ldhl	sp,	#2
      000827 7E                    2217 	ld	a, (hl)
      000828 B7                    2218 	or	a, a
      000829 28 02                 2219 	jr	Z, 00133$
                                   2220 ;main.c:192: direction = 0;
      00082B 0E 00                 2221 	ld	c, #0x00
      00082D                       2222 00133$:
                                   2223 ;main.c:194: if (xDir > 0 && yDir < 0) {
      00082D 21r43r00              2224 	ld	hl, #_xDir
      000830 5E                    2225 	ld	e, (hl)
      000831 AF                    2226 	xor	a, a
      000832 57                    2227 	ld	d, a
      000833 96                    2228 	sub	a, (hl)
      000834 CB 7B                 2229 	bit	7, e
      000836 28 07                 2230 	jr	Z, 00349$
      000838 CB 7A                 2231 	bit	7, d
      00083A 20 08                 2232 	jr	NZ, 00350$
      00083C BF                    2233 	cp	a, a
      00083D 18 05                 2234 	jr	00350$
      00083F                       2235 00349$:
      00083F CB 7A                 2236 	bit	7, d
      000841 28 01                 2237 	jr	Z, 00350$
      000843 37                    2238 	scf
      000844                       2239 00350$:
      000844 3E 00                 2240 	ld	a, #0x00
      000846 17                    2241 	rla
      000847 47                    2242 	ld	b, a
      000848 B7                    2243 	or	a, a
      000849 28 08                 2244 	jr	Z, 00136$
      00084B F8 02                 2245 	ldhl	sp,	#2
      00084D 7E                    2246 	ld	a, (hl)
      00084E B7                    2247 	or	a, a
      00084F 28 02                 2248 	jr	Z, 00136$
                                   2249 ;main.c:195: direction = 1;
      000851 0E 01                 2250 	ld	c, #0x01
      000853                       2251 00136$:
                                   2252 ;main.c:197: if (xDir > 0 && yDir == 0) {
      000853 78                    2253 	ld	a, b
      000854 B7                    2254 	or	a, a
      000855 28 08                 2255 	jr	Z, 00139$
      000857 FAr44r00              2256 	ld	a, (#_yDir)
      00085A B7                    2257 	or	a, a
      00085B 20 02                 2258 	jr	NZ, 00139$
                                   2259 ;main.c:198: direction = 2;
      00085D 0E 02                 2260 	ld	c, #0x02
      00085F                       2261 00139$:
                                   2262 ;main.c:200: if (xDir > 0 && yDir > 0) {
      00085F 21r44r00              2263 	ld	hl, #_yDir
      000862 5E                    2264 	ld	e, (hl)
      000863 AF                    2265 	xor	a, a
      000864 57                    2266 	ld	d, a
      000865 96                    2267 	sub	a, (hl)
      000866 CB 7B                 2268 	bit	7, e
      000868 28 07                 2269 	jr	Z, 00351$
      00086A CB 7A                 2270 	bit	7, d
      00086C 20 08                 2271 	jr	NZ, 00352$
      00086E BF                    2272 	cp	a, a
      00086F 18 05                 2273 	jr	00352$
      000871                       2274 00351$:
      000871 CB 7A                 2275 	bit	7, d
      000873 28 01                 2276 	jr	Z, 00352$
      000875 37                    2277 	scf
      000876                       2278 00352$:
      000876 3E 00                 2279 	ld	a, #0x00
      000878 17                    2280 	rla
      000879 F8 03                 2281 	ldhl	sp,	#3
      00087B 77                    2282 	ld	(hl), a
      00087C 78                    2283 	ld	a, b
      00087D B7                    2284 	or	a, a
      00087E 28 06                 2285 	jr	Z, 00142$
      000880 7E                    2286 	ld	a, (hl)
      000881 B7                    2287 	or	a, a
      000882 28 02                 2288 	jr	Z, 00142$
                                   2289 ;main.c:201: direction = 3;
      000884 0E 03                 2290 	ld	c, #0x03
      000886                       2291 00142$:
                                   2292 ;main.c:203: if (xDir == 0 && yDir > 0) {
      000886 FAr43r00              2293 	ld	a, (#_xDir)
      000889 B7                    2294 	or	a, a
      00088A 20 08                 2295 	jr	NZ, 00145$
      00088C F8 03                 2296 	ldhl	sp,	#3
      00088E 7E                    2297 	ld	a, (hl)
      00088F B7                    2298 	or	a, a
      000890 28 02                 2299 	jr	Z, 00145$
                                   2300 ;main.c:204: direction = 4;
      000892 0E 04                 2301 	ld	c, #0x04
      000894                       2302 00145$:
                                   2303 ;main.c:206: if (xDir < 0 && yDir > 0) {
      000894 FAr43r00              2304 	ld	a, (#_xDir)
      000897 07                    2305 	rlca
      000898 E6 01                 2306 	and	a,#0x01
      00089A 47                    2307 	ld	b, a
      00089B B7                    2308 	or	a, a
      00089C 28 08                 2309 	jr	Z, 00148$
      00089E F8 03                 2310 	ldhl	sp,	#3
      0008A0 7E                    2311 	ld	a, (hl)
      0008A1 B7                    2312 	or	a, a
      0008A2 28 02                 2313 	jr	Z, 00148$
                                   2314 ;main.c:207: direction = 5;
      0008A4 0E 05                 2315 	ld	c, #0x05
      0008A6                       2316 00148$:
                                   2317 ;main.c:209: if (xDir < 0 && yDir == 0) {
      0008A6 78                    2318 	ld	a, b
      0008A7 B7                    2319 	or	a, a
      0008A8 28 08                 2320 	jr	Z, 00151$
      0008AA FAr44r00              2321 	ld	a, (#_yDir)
      0008AD B7                    2322 	or	a, a
      0008AE 20 02                 2323 	jr	NZ, 00151$
                                   2324 ;main.c:210: direction = 6;
      0008B0 0E 06                 2325 	ld	c, #0x06
      0008B2                       2326 00151$:
                                   2327 ;main.c:212: if (xDir < 0 && yDir < 0) {
      0008B2 78                    2328 	ld	a, b
      0008B3 B7                    2329 	or	a, a
      0008B4 28 08                 2330 	jr	Z, 00154$
      0008B6 F8 02                 2331 	ldhl	sp,	#2
      0008B8 7E                    2332 	ld	a, (hl)
      0008B9 B7                    2333 	or	a, a
      0008BA 28 02                 2334 	jr	Z, 00154$
                                   2335 ;main.c:213: direction = 7;
      0008BC 0E 07                 2336 	ld	c, #0x07
      0008BE                       2337 00154$:
                                   2338 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0008BE 21r02r00              2339 	ld	hl, #(_shadow_OAM + 2)
      0008C1 71                    2340 	ld	(hl), c
                                   2341 ;main.c:216: set_sprite_tile(0, direction);
      0008C2                       2342 00157$:
                                   2343 ;main.c:217: }
      0008C2 E8 04                 2344 	add	sp, #4
      0008C4 C9                    2345 	ret
                                   2346 ;main.c:246: void playSound(uint8_t type) {
                                   2347 ;	---------------------------------
                                   2348 ; Function playSound
                                   2349 ; ---------------------------------
      0008C5                       2350 _playSound::
                                   2351 ;main.c:247: if (type == 20) { //singlegun
      0008C5 F8 02                 2352 	ldhl	sp,	#2
      0008C7 7E                    2353 	ld	a, (hl)
      0008C8 D6 14                 2354 	sub	a, #0x14
      0008CA 20 13                 2355 	jr	NZ, 00102$
                                   2356 ;main.c:248: NR10_REG = 0x00;
      0008CC AF                    2357 	xor	a, a
      0008CD E0r00                 2358 	ldh	(_NR10_REG + 0), a
                                   2359 ;main.c:249: NR11_REG = 0x81;
      0008CF 3E 81                 2360 	ld	a, #0x81
      0008D1 E0r00                 2361 	ldh	(_NR11_REG + 0), a
                                   2362 ;main.c:250: NR12_REG = 0x43;
      0008D3 3E 43                 2363 	ld	a, #0x43
      0008D5 E0r00                 2364 	ldh	(_NR12_REG + 0), a
                                   2365 ;main.c:251: NR13_REG = 0X00;//0x6D;
      0008D7 AF                    2366 	xor	a, a
      0008D8 E0r00                 2367 	ldh	(_NR13_REG + 0), a
                                   2368 ;main.c:252: NR14_REG = 0x86;
      0008DA 3E 86                 2369 	ld	a, #0x86
      0008DC E0r00                 2370 	ldh	(_NR14_REG + 0), a
                                   2371 ;main.c:253: return;
      0008DE C9                    2372 	ret
      0008DF                       2373 00102$:
                                   2374 ;main.c:255: if (type == 23) {
      0008DF F8 02                 2375 	ldhl	sp,	#2
      0008E1 7E                    2376 	ld	a, (hl)
      0008E2 D6 17                 2377 	sub	a, #0x17
      0008E4 20 12                 2378 	jr	NZ, 00104$
                                   2379 ;main.c:256: NR10_REG = 0x00;
      0008E6 AF                    2380 	xor	a, a
      0008E7 E0r00                 2381 	ldh	(_NR10_REG + 0), a
                                   2382 ;main.c:257: NR11_REG = 0x81;
      0008E9 3E 81                 2383 	ld	a, #0x81
      0008EB E0r00                 2384 	ldh	(_NR11_REG + 0), a
                                   2385 ;main.c:258: NR12_REG = 0x53;
      0008ED 3E 53                 2386 	ld	a, #0x53
      0008EF E0r00                 2387 	ldh	(_NR12_REG + 0), a
                                   2388 ;main.c:259: NR13_REG = 0X00;//0x6D;
      0008F1 AF                    2389 	xor	a, a
      0008F2 E0r00                 2390 	ldh	(_NR13_REG + 0), a
                                   2391 ;main.c:260: NR14_REG = 0x86;
      0008F4 3E 86                 2392 	ld	a, #0x86
      0008F6 E0r00                 2393 	ldh	(_NR14_REG + 0), a
      0008F8                       2394 00104$:
                                   2395 ;main.c:262: if (type == 26) {
      0008F8 F8 02                 2396 	ldhl	sp,	#2
      0008FA 7E                    2397 	ld	a, (hl)
      0008FB D6 1A                 2398 	sub	a, #0x1a
      0008FD 20 13                 2399 	jr	NZ, 00106$
                                   2400 ;main.c:263: NR10_REG = 0x00;
      0008FF AF                    2401 	xor	a, a
      000900 E0r00                 2402 	ldh	(_NR10_REG + 0), a
                                   2403 ;main.c:264: NR11_REG = 0x89;
      000902 3E 89                 2404 	ld	a, #0x89
      000904 E0r00                 2405 	ldh	(_NR11_REG + 0), a
                                   2406 ;main.c:265: NR12_REG = 0x55;
      000906 3E 55                 2407 	ld	a, #0x55
      000908 E0r00                 2408 	ldh	(_NR12_REG + 0), a
                                   2409 ;main.c:266: NR13_REG = 0x70;//0Xbe;//0x6D;
      00090A 3E 70                 2410 	ld	a, #0x70
      00090C E0r00                 2411 	ldh	(_NR13_REG + 0), a
                                   2412 ;main.c:267: NR14_REG = 0x84;
      00090E 3E 84                 2413 	ld	a, #0x84
      000910 E0r00                 2414 	ldh	(_NR14_REG + 0), a
      000912                       2415 00106$:
                                   2416 ;main.c:269: if (type == 0) {  // explosion
      000912 F8 02                 2417 	ldhl	sp,	#2
      000914 7E                    2418 	ld	a, (hl)
      000915 B7                    2419 	or	a, a
      000916 C0                    2420 	ret	NZ
                                   2421 ;main.c:270: NR41_REG = 0x20;  
      000917 3E 20                 2422 	ld	a, #0x20
      000919 E0r00                 2423 	ldh	(_NR41_REG + 0), a
                                   2424 ;main.c:271: NR42_REG = 0xa2;//0xa3;  
      00091B 3E A2                 2425 	ld	a, #0xa2
      00091D E0r00                 2426 	ldh	(_NR42_REG + 0), a
                                   2427 ;main.c:272: NR43_REG = 0x57;  
      00091F 3E 57                 2428 	ld	a, #0x57
      000921 E0r00                 2429 	ldh	(_NR43_REG + 0), a
                                   2430 ;main.c:273: NR44_REG = 0x80;  
      000923 3E 80                 2431 	ld	a, #0x80
      000925 E0r00                 2432 	ldh	(_NR44_REG + 0), a
                                   2433 ;main.c:279: }
      000927 C9                    2434 	ret
                                   2435 ;main.c:282: void updateEnemyPositions() {
                                   2436 ;	---------------------------------
                                   2437 ; Function updateEnemyPositions
                                   2438 ; ---------------------------------
      000928                       2439 _updateEnemyPositions::
      000928 E8 F0                 2440 	add	sp, #-16
                                   2441 ;main.c:284: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00092A F8 0F                 2442 	ldhl	sp,	#15
      00092C 36 00                 2443 	ld	(hl), #0x00
      00092E                       2444 00140$:
      00092E 21rCCr05              2445 	ld	hl, #_ENEMYCOUNT
      000931 4E                    2446 	ld	c, (hl)
      000932 F8 0F                 2447 	ldhl	sp,	#15
      000934 7E                    2448 	ld	a, (hl)
      000935 91                    2449 	sub	a, c
      000936 D2r4Fr0D              2450 	jp	NC, 00117$
                                   2451 ;main.c:286: enemies[i].x -= xOverflow;
      000939 7E                    2452 	ld	a, (hl)
      00093A 16 00                 2453 	ld	d, #0x00
      00093C 87                    2454 	add	a, a
      00093D CB 12                 2455 	rl	d
      00093F 87                    2456 	add	a, a
      000940 CB 12                 2457 	rl	d
      000942 87                    2458 	add	a, a
      000943 CB 12                 2459 	rl	d
      000945 87                    2460 	add	a, a
      000946 CB 12                 2461 	rl	d
                                   2462 ;main.c:296: if (enemies[i].y < playerDrawY) {
      000948 5F                    2463 	ld	e, a
      000949 21r00r00              2464 	ld	hl, #_enemies
      00094C 19                    2465 	add	hl, de
      00094D E5                    2466 	push	hl
      00094E 7D                    2467 	ld	a, l
      00094F F8 06                 2468 	ldhl	sp,	#6
      000951 77                    2469 	ld	(hl), a
      000952 E1                    2470 	pop	hl
      000953 7C                    2471 	ld	a, h
      000954 F8 05                 2472 	ldhl	sp,	#5
                                   2473 ;main.c:286: enemies[i].x -= xOverflow;
      000956 32                    2474 	ld	(hl-), a
      000957 2A                    2475 	ld	a, (hl+)
      000958 5F                    2476 	ld	e, a
      000959 56                    2477 	ld	d, (hl)
      00095A 1A                    2478 	ld	a, (de)
      00095B 47                    2479 	ld	b, a
      00095C 13                    2480 	inc	de
      00095D 1A                    2481 	ld	a, (de)
      00095E 4F                    2482 	ld	c, a
      00095F 58                    2483 	ld	e, b
      000960 51                    2484 	ld	d, c
      000961 21r51r00              2485 	ld	hl, #_xOverflow
      000964 2A                    2486 	ld	a,	(hl+)
      000965 66                    2487 	ld	h, (hl)
      000966 6F                    2488 	ld	l, a
      000967 7B                    2489 	ld	a, e
      000968 95                    2490 	sub	a, l
      000969 5F                    2491 	ld	e, a
      00096A 7A                    2492 	ld	a, d
      00096B 9C                    2493 	sbc	a, h
      00096C F8 0C                 2494 	ldhl	sp,	#12
      00096E 32                    2495 	ld	(hl-), a
      00096F 73                    2496 	ld	(hl), e
      000970 F8 04                 2497 	ldhl	sp,#4
      000972 2A                    2498 	ld	a, (hl+)
      000973 5F                    2499 	ld	e, a
      000974 56                    2500 	ld	d, (hl)
      000975 F8 0B                 2501 	ldhl	sp,	#11
      000977 2A                    2502 	ld	a, (hl+)
      000978 12                    2503 	ld	(de), a
      000979 13                    2504 	inc	de
      00097A 7E                    2505 	ld	a, (hl)
      00097B 12                    2506 	ld	(de), a
                                   2507 ;main.c:287: enemies[i].y -= yOverflow;
      00097C F8 04                 2508 	ldhl	sp,#4
      00097E 2A                    2509 	ld	a, (hl+)
      00097F 5F                    2510 	ld	e, a
      000980 56                    2511 	ld	d, (hl)
      000981 21 02 00              2512 	ld	hl, #0x0002
      000984 19                    2513 	add	hl, de
      000985 E5                    2514 	push	hl
      000986 7D                    2515 	ld	a, l
      000987 F8 08                 2516 	ldhl	sp,	#8
      000989 77                    2517 	ld	(hl), a
      00098A E1                    2518 	pop	hl
      00098B 7C                    2519 	ld	a, h
      00098C F8 07                 2520 	ldhl	sp,	#7
      00098E 32                    2521 	ld	(hl-), a
      00098F 2A                    2522 	ld	a, (hl+)
      000990 5F                    2523 	ld	e, a
      000991 56                    2524 	ld	d, (hl)
      000992 1A                    2525 	ld	a, (de)
      000993 4F                    2526 	ld	c, a
      000994 13                    2527 	inc	de
      000995 1A                    2528 	ld	a, (de)
      000996 47                    2529 	ld	b, a
      000997 79                    2530 	ld	a, c
      000998 21r53r00              2531 	ld	hl, #_yOverflow
      00099B 96                    2532 	sub	a, (hl)
      00099C 23                    2533 	inc	hl
      00099D 4F                    2534 	ld	c, a
      00099E 78                    2535 	ld	a, b
      00099F 9E                    2536 	sbc	a, (hl)
      0009A0 47                    2537 	ld	b, a
      0009A1 F8 06                 2538 	ldhl	sp,	#6
      0009A3 2A                    2539 	ld	a,	(hl+)
      0009A4 66                    2540 	ld	h, (hl)
      0009A5 6F                    2541 	ld	l, a
      0009A6 79                    2542 	ld	a, c
      0009A7 22                    2543 	ld	(hl+), a
      0009A8 70                    2544 	ld	(hl), b
                                   2545 ;main.c:290: if (enemies[i].x < playerDrawX) {
      0009A9 21r4Br00              2546 	ld	hl, #_playerDrawX
      0009AC 4E                    2547 	ld	c, (hl)
      0009AD 06 00                 2548 	ld	b, #0x00
                                   2549 ;main.c:303: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0009AF F8 04                 2550 	ldhl	sp,#4
      0009B1 2A                    2551 	ld	a, (hl+)
      0009B2 5F                    2552 	ld	e, a
      0009B3 56                    2553 	ld	d, (hl)
      0009B4 21 0E 00              2554 	ld	hl, #0x000e
      0009B7 19                    2555 	add	hl, de
      0009B8 E5                    2556 	push	hl
      0009B9 7D                    2557 	ld	a, l
      0009BA F8 0A                 2558 	ldhl	sp,	#10
      0009BC 77                    2559 	ld	(hl), a
      0009BD E1                    2560 	pop	hl
      0009BE 7C                    2561 	ld	a, h
      0009BF F8 09                 2562 	ldhl	sp,	#9
      0009C1 77                    2563 	ld	(hl), a
                                   2564 ;main.c:291: enemies[i].xSpeed += enemies[i].accel;
      0009C2 F8 04                 2565 	ldhl	sp,#4
      0009C4 2A                    2566 	ld	a, (hl+)
      0009C5 5F                    2567 	ld	e, a
      0009C6 56                    2568 	ld	d, (hl)
      0009C7 21 0D 00              2569 	ld	hl, #0x000d
      0009CA 19                    2570 	add	hl, de
      0009CB 33                    2571 	inc	sp
      0009CC 33                    2572 	inc	sp
      0009CD E5                    2573 	push	hl
      0009CE F8 08                 2574 	ldhl	sp,#8
      0009D0 2A                    2575 	ld	a, (hl+)
      0009D1 5F                    2576 	ld	e, a
      0009D2 56                    2577 	ld	d, (hl)
      0009D3 1A                    2578 	ld	a, (de)
      0009D4 F8 0D                 2579 	ldhl	sp,	#13
      0009D6 22                    2580 	ld	(hl+), a
      0009D7 D1                    2581 	pop	de
      0009D8 D5                    2582 	push	de
      0009D9 1A                    2583 	ld	a, (de)
      0009DA 77                    2584 	ld	(hl), a
                                   2585 ;main.c:290: if (enemies[i].x < playerDrawX) {
      0009DB F8 0B                 2586 	ldhl	sp,	#11
      0009DD 2A                    2587 	ld	a, (hl+)
      0009DE 91                    2588 	sub	a, c
      0009DF 7E                    2589 	ld	a, (hl)
      0009E0 98                    2590 	sbc	a, b
      0009E1 56                    2591 	ld	d, (hl)
      0009E2 78                    2592 	ld	a, b
      0009E3 CB 7F                 2593 	bit	7,a
      0009E5 28 07                 2594 	jr	Z, 00273$
      0009E7 CB 7A                 2595 	bit	7, d
      0009E9 20 08                 2596 	jr	NZ, 00274$
      0009EB BF                    2597 	cp	a, a
      0009EC 18 05                 2598 	jr	00274$
      0009EE                       2599 00273$:
      0009EE CB 7A                 2600 	bit	7, d
      0009F0 28 01                 2601 	jr	Z, 00274$
      0009F2 37                    2602 	scf
      0009F3                       2603 00274$:
      0009F3 30 0D                 2604 	jr	NC, 00102$
                                   2605 ;main.c:291: enemies[i].xSpeed += enemies[i].accel;
      0009F5 F8 0E                 2606 	ldhl	sp,	#14
      0009F7 3A                    2607 	ld	a, (hl-)
      0009F8 86                    2608 	add	a, (hl)
      0009F9 4F                    2609 	ld	c, a
      0009FA F8 08                 2610 	ldhl	sp,	#8
      0009FC 2A                    2611 	ld	a,	(hl+)
      0009FD 66                    2612 	ld	h, (hl)
      0009FE 6F                    2613 	ld	l, a
      0009FF 71                    2614 	ld	(hl), c
      000A00 18 0B                 2615 	jr	00103$
      000A02                       2616 00102$:
                                   2617 ;main.c:294: enemies[i].xSpeed -= enemies[i].accel;
      000A02 F8 0D                 2618 	ldhl	sp,	#13
      000A04 2A                    2619 	ld	a, (hl+)
      000A05 96                    2620 	sub	a, (hl)
      000A06 4F                    2621 	ld	c, a
      000A07 F8 08                 2622 	ldhl	sp,	#8
      000A09 2A                    2623 	ld	a,	(hl+)
      000A0A 66                    2624 	ld	h, (hl)
      000A0B 6F                    2625 	ld	l, a
      000A0C 71                    2626 	ld	(hl), c
      000A0D                       2627 00103$:
                                   2628 ;main.c:296: if (enemies[i].y < playerDrawY) {
      000A0D F8 06                 2629 	ldhl	sp,#6
      000A0F 2A                    2630 	ld	a, (hl+)
      000A10 5F                    2631 	ld	e, a
      000A11 56                    2632 	ld	d, (hl)
      000A12 1A                    2633 	ld	a, (de)
      000A13 F8 02                 2634 	ldhl	sp,	#2
      000A15 22                    2635 	ld	(hl+), a
      000A16 13                    2636 	inc	de
      000A17 1A                    2637 	ld	a, (de)
      000A18 77                    2638 	ld	(hl), a
      000A19 21r4Cr00              2639 	ld	hl, #_playerDrawY
      000A1C 4E                    2640 	ld	c, (hl)
      000A1D 06 00                 2641 	ld	b, #0x00
                                   2642 ;main.c:304: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000A1F F8 04                 2643 	ldhl	sp,#4
      000A21 2A                    2644 	ld	a, (hl+)
      000A22 5F                    2645 	ld	e, a
      000A23 56                    2646 	ld	d, (hl)
      000A24 21 0F 00              2647 	ld	hl, #0x000f
      000A27 19                    2648 	add	hl, de
      000A28 E5                    2649 	push	hl
      000A29 7D                    2650 	ld	a, l
      000A2A F8 0C                 2651 	ldhl	sp,	#12
      000A2C 77                    2652 	ld	(hl), a
      000A2D E1                    2653 	pop	hl
      000A2E 7C                    2654 	ld	a, h
      000A2F F8 0B                 2655 	ldhl	sp,	#11
                                   2656 ;main.c:297: enemies[i].ySpeed += enemies[i].accel;
      000A31 32                    2657 	ld	(hl-), a
      000A32 2A                    2658 	ld	a, (hl+)
      000A33 5F                    2659 	ld	e, a
      000A34 2A                    2660 	ld	a, (hl+)
      000A35 23                    2661 	inc	hl
      000A36 57                    2662 	ld	d, a
      000A37 1A                    2663 	ld	a, (de)
      000A38 22                    2664 	ld	(hl+), a
      000A39 D1                    2665 	pop	de
      000A3A D5                    2666 	push	de
      000A3B 1A                    2667 	ld	a, (de)
      000A3C 77                    2668 	ld	(hl), a
                                   2669 ;main.c:296: if (enemies[i].y < playerDrawY) {
      000A3D F8 02                 2670 	ldhl	sp,	#2
      000A3F 2A                    2671 	ld	a, (hl+)
      000A40 91                    2672 	sub	a, c
      000A41 7E                    2673 	ld	a, (hl)
      000A42 98                    2674 	sbc	a, b
      000A43 56                    2675 	ld	d, (hl)
      000A44 78                    2676 	ld	a, b
      000A45 CB 7F                 2677 	bit	7,a
      000A47 28 07                 2678 	jr	Z, 00275$
      000A49 CB 7A                 2679 	bit	7, d
      000A4B 20 08                 2680 	jr	NZ, 00276$
      000A4D BF                    2681 	cp	a, a
      000A4E 18 05                 2682 	jr	00276$
      000A50                       2683 00275$:
      000A50 CB 7A                 2684 	bit	7, d
      000A52 28 01                 2685 	jr	Z, 00276$
      000A54 37                    2686 	scf
      000A55                       2687 00276$:
      000A55 30 0D                 2688 	jr	NC, 00105$
                                   2689 ;main.c:297: enemies[i].ySpeed += enemies[i].accel;
      000A57 F8 0E                 2690 	ldhl	sp,	#14
      000A59 3A                    2691 	ld	a, (hl-)
      000A5A 86                    2692 	add	a, (hl)
      000A5B 4F                    2693 	ld	c, a
      000A5C F8 0A                 2694 	ldhl	sp,	#10
      000A5E 2A                    2695 	ld	a,	(hl+)
      000A5F 66                    2696 	ld	h, (hl)
      000A60 6F                    2697 	ld	l, a
      000A61 71                    2698 	ld	(hl), c
      000A62 18 0B                 2699 	jr	00106$
      000A64                       2700 00105$:
                                   2701 ;main.c:300: enemies[i].ySpeed -= enemies[i].accel;
      000A64 F8 0D                 2702 	ldhl	sp,	#13
      000A66 2A                    2703 	ld	a, (hl+)
      000A67 96                    2704 	sub	a, (hl)
      000A68 4F                    2705 	ld	c, a
      000A69 F8 0A                 2706 	ldhl	sp,	#10
      000A6B 2A                    2707 	ld	a,	(hl+)
      000A6C 66                    2708 	ld	h, (hl)
      000A6D 6F                    2709 	ld	l, a
      000A6E 71                    2710 	ld	(hl), c
      000A6F                       2711 00106$:
                                   2712 ;main.c:303: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000A6F F8 04                 2713 	ldhl	sp,#4
      000A71 2A                    2714 	ld	a, (hl+)
      000A72 5F                    2715 	ld	e, a
      000A73 56                    2716 	ld	d, (hl)
      000A74 21 0C 00              2717 	ld	hl, #0x000c
      000A77 19                    2718 	add	hl, de
      000A78 4D                    2719 	ld	c, l
      000A79 44                    2720 	ld	b, h
      000A7A 0A                    2721 	ld	a, (bc)
      000A7B 5F                    2722 	ld	e, a
      000A7C F8 0C                 2723 	ldhl	sp,	#12
      000A7E 7B                    2724 	ld	a, e
      000A7F 22                    2725 	ld	(hl+), a
      000A80 AF                    2726 	xor	a, a
      000A81 93                    2727 	sub	a, e
      000A82 77                    2728 	ld	(hl), a
      000A83 F8 08                 2729 	ldhl	sp,#8
      000A85 2A                    2730 	ld	a, (hl+)
      000A86 5F                    2731 	ld	e, a
      000A87 56                    2732 	ld	d, (hl)
      000A88 1A                    2733 	ld	a, (de)
      000A89 F8 0E                 2734 	ldhl	sp,	#14
                                   2735 ;main.c:222: return (value < min) ? min : (value > max) ? max : value;
      000A8B 32                    2736 	ld	(hl-), a
      000A8C 2A                    2737 	ld	a, (hl+)
      000A8D 5F                    2738 	ld	e, a
      000A8E 56                    2739 	ld	d, (hl)
      000A8F 3A                    2740 	ld	a, (hl-)
      000A90 96                    2741 	sub	a, (hl)
      000A91 CB 7B                 2742 	bit	7, e
      000A93 28 07                 2743 	jr	Z, 00277$
      000A95 CB 7A                 2744 	bit	7, d
      000A97 20 08                 2745 	jr	NZ, 00278$
      000A99 BF                    2746 	cp	a, a
      000A9A 18 05                 2747 	jr	00278$
      000A9C                       2748 00277$:
      000A9C CB 7A                 2749 	bit	7, d
      000A9E 28 01                 2750 	jr	Z, 00278$
      000AA0 37                    2751 	scf
      000AA1                       2752 00278$:
      000AA1 30 05                 2753 	jr	NC, 00147$
      000AA3 F8 0D                 2754 	ldhl	sp,	#13
      000AA5 7E                    2755 	ld	a, (hl)
      000AA6 18 23                 2756 	jr	00148$
      000AA8                       2757 00147$:
      000AA8 F8 0E                 2758 	ldhl	sp,	#14
      000AAA 3A                    2759 	ld	a, (hl-)
      000AAB 2B                    2760 	dec	hl
      000AAC 5F                    2761 	ld	e, a
      000AAD 56                    2762 	ld	d, (hl)
      000AAE 2A                    2763 	ld	a, (hl+)
      000AAF 23                    2764 	inc	hl
      000AB0 96                    2765 	sub	a, (hl)
      000AB1 CB 7B                 2766 	bit	7, e
      000AB3 28 07                 2767 	jr	Z, 00279$
      000AB5 CB 7A                 2768 	bit	7, d
      000AB7 20 08                 2769 	jr	NZ, 00280$
      000AB9 BF                    2770 	cp	a, a
      000ABA 18 05                 2771 	jr	00280$
      000ABC                       2772 00279$:
      000ABC CB 7A                 2773 	bit	7, d
      000ABE 28 01                 2774 	jr	Z, 00280$
      000AC0 37                    2775 	scf
      000AC1                       2776 00280$:
      000AC1 30 05                 2777 	jr	NC, 00149$
      000AC3 F8 0C                 2778 	ldhl	sp,	#12
      000AC5 7E                    2779 	ld	a, (hl)
      000AC6 18 03                 2780 	jr	00150$
      000AC8                       2781 00149$:
      000AC8 F8 0E                 2782 	ldhl	sp,	#14
      000ACA 7E                    2783 	ld	a, (hl)
      000ACB                       2784 00150$:
      000ACB                       2785 00148$:
                                   2786 ;main.c:303: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000ACB F8 08                 2787 	ldhl	sp,	#8
      000ACD F5                    2788 	push	af
      000ACE 2A                    2789 	ld	a,	(hl+)
      000ACF 66                    2790 	ld	h, (hl)
      000AD0 6F                    2791 	ld	l, a
      000AD1 F1                    2792 	pop	af
      000AD2 77                    2793 	ld	(hl), a
                                   2794 ;main.c:304: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000AD3 0A                    2795 	ld	a, (bc)
      000AD4 47                    2796 	ld	b, a
      000AD5 48                    2797 	ld	c, b
      000AD6 AF                    2798 	xor	a, a
      000AD7 90                    2799 	sub	a, b
      000AD8 47                    2800 	ld	b, a
      000AD9 F8 0A                 2801 	ldhl	sp,#10
      000ADB 2A                    2802 	ld	a, (hl+)
      000ADC 5F                    2803 	ld	e, a
      000ADD 56                    2804 	ld	d, (hl)
      000ADE 1A                    2805 	ld	a, (de)
      000ADF 6F                    2806 	ld	l, a
                                   2807 ;	spillPairReg hl
                                   2808 ;	spillPairReg hl
                                   2809 ;main.c:222: return (value < min) ? min : (value > max) ? max : value;
      000AE0 58                    2810 	ld	e, b
      000AE1 7D                    2811 	ld	a,l
      000AE2 57                    2812 	ld	d,a
      000AE3 90                    2813 	sub	a, b
      000AE4 CB 7B                 2814 	bit	7, e
      000AE6 28 07                 2815 	jr	Z, 00281$
      000AE8 CB 7A                 2816 	bit	7, d
      000AEA 20 08                 2817 	jr	NZ, 00282$
      000AEC BF                    2818 	cp	a, a
      000AED 18 05                 2819 	jr	00282$
      000AEF                       2820 00281$:
      000AEF CB 7A                 2821 	bit	7, d
      000AF1 28 01                 2822 	jr	Z, 00282$
      000AF3 37                    2823 	scf
      000AF4                       2824 00282$:
      000AF4 30 03                 2825 	jr	NC, 00151$
      000AF6 48                    2826 	ld	c, b
      000AF7 18 17                 2827 	jr	00152$
      000AF9                       2828 00151$:
      000AF9 5D                    2829 	ld	e, l
      000AFA 79                    2830 	ld	a,c
      000AFB 57                    2831 	ld	d,a
      000AFC 95                    2832 	sub	a, l
      000AFD CB 7B                 2833 	bit	7, e
      000AFF 28 07                 2834 	jr	Z, 00283$
      000B01 CB 7A                 2835 	bit	7, d
      000B03 20 08                 2836 	jr	NZ, 00284$
      000B05 BF                    2837 	cp	a, a
      000B06 18 05                 2838 	jr	00284$
      000B08                       2839 00283$:
      000B08 CB 7A                 2840 	bit	7, d
      000B0A 28 01                 2841 	jr	Z, 00284$
      000B0C 37                    2842 	scf
      000B0D                       2843 00284$:
      000B0D 38 01                 2844 	jr	C, 00154$
      000B0F 4D                    2845 	ld	c, l
      000B10                       2846 00154$:
      000B10                       2847 00152$:
                                   2848 ;main.c:304: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000B10 F8 0A                 2849 	ldhl	sp,	#10
      000B12 2A                    2850 	ld	a,	(hl+)
      000B13 66                    2851 	ld	h, (hl)
      000B14 6F                    2852 	ld	l, a
      000B15 71                    2853 	ld	(hl), c
                                   2854 ;main.c:307: enemies[i].xReserve += enemies[i].xSpeed;
      000B16 F8 04                 2855 	ldhl	sp,#4
      000B18 2A                    2856 	ld	a, (hl+)
      000B19 5F                    2857 	ld	e, a
      000B1A 56                    2858 	ld	d, (hl)
      000B1B 21 04 00              2859 	ld	hl, #0x0004
      000B1E 19                    2860 	add	hl, de
      000B1F E5                    2861 	push	hl
      000B20 7D                    2862 	ld	a, l
      000B21 F8 0D                 2863 	ldhl	sp,	#13
      000B23 77                    2864 	ld	(hl), a
      000B24 E1                    2865 	pop	hl
      000B25 7C                    2866 	ld	a, h
      000B26 F8 0C                 2867 	ldhl	sp,	#12
      000B28 32                    2868 	ld	(hl-), a
      000B29 2A                    2869 	ld	a, (hl+)
      000B2A 5F                    2870 	ld	e, a
      000B2B 56                    2871 	ld	d, (hl)
      000B2C 1A                    2872 	ld	a, (de)
      000B2D 47                    2873 	ld	b, a
      000B2E F8 08                 2874 	ldhl	sp,#8
      000B30 2A                    2875 	ld	a, (hl+)
      000B31 5F                    2876 	ld	e, a
      000B32 2A                    2877 	ld	a, (hl+)
      000B33 23                    2878 	inc	hl
      000B34 57                    2879 	ld	d, a
      000B35 1A                    2880 	ld	a, (de)
      000B36 80                    2881 	add	a, b
      000B37 47                    2882 	ld	b, a
      000B38 2A                    2883 	ld	a,	(hl+)
      000B39 66                    2884 	ld	h, (hl)
      000B3A 6F                    2885 	ld	l, a
      000B3B 70                    2886 	ld	(hl), b
                                   2887 ;main.c:308: enemies[i].yReserve += enemies[i].ySpeed;
      000B3C F8 04                 2888 	ldhl	sp,#4
      000B3E 2A                    2889 	ld	a, (hl+)
      000B3F 5F                    2890 	ld	e, a
      000B40 56                    2891 	ld	d, (hl)
      000B41 21 05 00              2892 	ld	hl, #0x0005
      000B44 19                    2893 	add	hl, de
      000B45 E5                    2894 	push	hl
      000B46 7D                    2895 	ld	a, l
      000B47 F8 0F                 2896 	ldhl	sp,	#15
      000B49 77                    2897 	ld	(hl), a
      000B4A E1                    2898 	pop	hl
      000B4B 7C                    2899 	ld	a, h
      000B4C F8 0E                 2900 	ldhl	sp,	#14
      000B4E 32                    2901 	ld	(hl-), a
      000B4F 2A                    2902 	ld	a, (hl+)
      000B50 5F                    2903 	ld	e, a
      000B51 56                    2904 	ld	d, (hl)
      000B52 1A                    2905 	ld	a, (de)
      000B53 81                    2906 	add	a, c
      000B54 4F                    2907 	ld	c, a
      000B55 3A                    2908 	ld	a, (hl-)
      000B56 6E                    2909 	ld	l, (hl)
      000B57 67                    2910 	ld	h, a
      000B58 71                    2911 	ld	(hl), c
                                   2912 ;main.c:312: if (enemies[i].xReserve >> 3 > 0) {
      000B59 CB 28                 2913 	sra	b
      000B5B CB 28                 2914 	sra	b
      000B5D CB 28                 2915 	sra	b
                                   2916 ;main.c:307: enemies[i].xReserve += enemies[i].xSpeed;
      000B5F F8 0B                 2917 	ldhl	sp,#11
      000B61 2A                    2918 	ld	a, (hl+)
      000B62 5F                    2919 	ld	e, a
      000B63 3A                    2920 	ld	a, (hl-)
      000B64 2B                    2921 	dec	hl
      000B65 57                    2922 	ld	d, a
      000B66 1A                    2923 	ld	a, (de)
      000B67 77                    2924 	ld	(hl), a
                                   2925 ;main.c:312: if (enemies[i].xReserve >> 3 > 0) {
      000B68 58                    2926 	ld	e, b
      000B69 AF                    2927 	xor	a, a
      000B6A 57                    2928 	ld	d, a
      000B6B 90                    2929 	sub	a, b
      000B6C CB 7B                 2930 	bit	7, e
      000B6E 28 07                 2931 	jr	Z, 00285$
      000B70 CB 7A                 2932 	bit	7, d
      000B72 20 08                 2933 	jr	NZ, 00286$
      000B74 BF                    2934 	cp	a, a
      000B75 18 05                 2935 	jr	00286$
      000B77                       2936 00285$:
      000B77 CB 7A                 2937 	bit	7, d
      000B79 28 01                 2938 	jr	Z, 00286$
      000B7B 37                    2939 	scf
      000B7C                       2940 00286$:
      000B7C 30 3F                 2941 	jr	NC, 00110$
                                   2942 ;main.c:313: int8_t xMovement = enemies[i].xReserve >> 3;
      000B7E F8 0A                 2943 	ldhl	sp,	#10
      000B80 7E                    2944 	ld	a, (hl)
      000B81 CB 2F                 2945 	sra	a
      000B83 CB 2F                 2946 	sra	a
      000B85 CB 2F                 2947 	sra	a
      000B87 77                    2948 	ld	(hl), a
                                   2949 ;main.c:314: enemies[i].x += xMovement;
      000B88 F8 04                 2950 	ldhl	sp,#4
      000B8A 2A                    2951 	ld	a, (hl+)
      000B8B 5F                    2952 	ld	e, a
      000B8C 56                    2953 	ld	d, (hl)
      000B8D 1A                    2954 	ld	a, (de)
      000B8E 4F                    2955 	ld	c, a
      000B8F 13                    2956 	inc	de
      000B90 1A                    2957 	ld	a, (de)
      000B91 47                    2958 	ld	b, a
      000B92 F8 0A                 2959 	ldhl	sp,	#10
      000B94 7E                    2960 	ld	a, (hl)
      000B95 5F                    2961 	ld	e, a
      000B96 07                    2962 	rlca
      000B97 9F                    2963 	sbc	a, a
      000B98 57                    2964 	ld	d, a
      000B99 69                    2965 	ld	l, c
                                   2966 ;	spillPairReg hl
                                   2967 ;	spillPairReg hl
      000B9A 60                    2968 	ld	h, b
                                   2969 ;	spillPairReg hl
                                   2970 ;	spillPairReg hl
      000B9B 19                    2971 	add	hl, de
      000B9C 4D                    2972 	ld	c, l
      000B9D 44                    2973 	ld	b, h
      000B9E F8 04                 2974 	ldhl	sp,	#4
      000BA0 2A                    2975 	ld	a,	(hl+)
      000BA1 66                    2976 	ld	h, (hl)
      000BA2 6F                    2977 	ld	l, a
      000BA3 79                    2978 	ld	a, c
      000BA4 22                    2979 	ld	(hl+), a
      000BA5 70                    2980 	ld	(hl), b
                                   2981 ;main.c:315: enemies[i].xReserve -=  xMovement << 3;
      000BA6 F8 0B                 2982 	ldhl	sp,#11
      000BA8 2A                    2983 	ld	a, (hl+)
      000BA9 5F                    2984 	ld	e, a
      000BAA 3A                    2985 	ld	a, (hl-)
      000BAB 2B                    2986 	dec	hl
      000BAC 57                    2987 	ld	d, a
      000BAD 1A                    2988 	ld	a, (de)
      000BAE F5                    2989 	push	af
      000BAF 2A                    2990 	ld	a, (hl+)
      000BB0 87                    2991 	add	a, a
      000BB1 87                    2992 	add	a, a
      000BB2 87                    2993 	add	a, a
      000BB3 4F                    2994 	ld	c, a
      000BB4 F1                    2995 	pop	af
      000BB5 91                    2996 	sub	a, c
      000BB6 4F                    2997 	ld	c, a
      000BB7 2A                    2998 	ld	a,	(hl+)
      000BB8 66                    2999 	ld	h, (hl)
      000BB9 6F                    3000 	ld	l, a
      000BBA 71                    3001 	ld	(hl), c
      000BBB 18 69                 3002 	jr	00111$
      000BBD                       3003 00110$:
                                   3004 ;main.c:318: else if ((-enemies[i].xReserve) >> 3 > 0){
      000BBD F8 0A                 3005 	ldhl	sp,	#10
      000BBF 7E                    3006 	ld	a, (hl)
      000BC0 4F                    3007 	ld	c, a
      000BC1 07                    3008 	rlca
      000BC2 9F                    3009 	sbc	a, a
      000BC3 47                    3010 	ld	b, a
      000BC4 AF                    3011 	xor	a, a
      000BC5 91                    3012 	sub	a, c
      000BC6 4F                    3013 	ld	c, a
      000BC7 9F                    3014 	sbc	a, a
      000BC8 90                    3015 	sub	a, b
      000BC9 47                    3016 	ld	b, a
      000BCA CB 28                 3017 	sra	b
      000BCC CB 19                 3018 	rr	c
      000BCE CB 28                 3019 	sra	b
      000BD0 CB 19                 3020 	rr	c
      000BD2 CB 28                 3021 	sra	b
      000BD4 CB 19                 3022 	rr	c
      000BD6 58                    3023 	ld	e, b
      000BD7 AF                    3024 	xor	a, a
      000BD8 57                    3025 	ld	d, a
      000BD9 B9                    3026 	cp	a, c
      000BDA 98                    3027 	sbc	a, b
      000BDB CB 7B                 3028 	bit	7, e
      000BDD 28 07                 3029 	jr	Z, 00287$
      000BDF CB 7A                 3030 	bit	7, d
      000BE1 20 08                 3031 	jr	NZ, 00288$
      000BE3 BF                    3032 	cp	a, a
      000BE4 18 05                 3033 	jr	00288$
      000BE6                       3034 00287$:
      000BE6 CB 7A                 3035 	bit	7, d
      000BE8 28 01                 3036 	jr	Z, 00288$
      000BEA 37                    3037 	scf
      000BEB                       3038 00288$:
      000BEB 30 39                 3039 	jr	NC, 00111$
                                   3040 ;main.c:319: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      000BED AF                    3041 	xor	a, a
      000BEE 91                    3042 	sub	a, c
      000BEF 4F                    3043 	ld	c, a
      000BF0 F8 0A                 3044 	ldhl	sp,	#10
      000BF2 71                    3045 	ld	(hl), c
                                   3046 ;main.c:320: enemies[i].x += xMovement;
      000BF3 F8 04                 3047 	ldhl	sp,#4
      000BF5 2A                    3048 	ld	a, (hl+)
      000BF6 5F                    3049 	ld	e, a
      000BF7 56                    3050 	ld	d, (hl)
      000BF8 1A                    3051 	ld	a, (de)
      000BF9 4F                    3052 	ld	c, a
      000BFA 13                    3053 	inc	de
      000BFB 1A                    3054 	ld	a, (de)
      000BFC 47                    3055 	ld	b, a
      000BFD F8 0A                 3056 	ldhl	sp,	#10
      000BFF 7E                    3057 	ld	a, (hl)
      000C00 5F                    3058 	ld	e, a
      000C01 07                    3059 	rlca
      000C02 9F                    3060 	sbc	a, a
      000C03 57                    3061 	ld	d, a
      000C04 69                    3062 	ld	l, c
                                   3063 ;	spillPairReg hl
                                   3064 ;	spillPairReg hl
      000C05 60                    3065 	ld	h, b
                                   3066 ;	spillPairReg hl
                                   3067 ;	spillPairReg hl
      000C06 19                    3068 	add	hl, de
      000C07 4D                    3069 	ld	c, l
      000C08 44                    3070 	ld	b, h
      000C09 F8 04                 3071 	ldhl	sp,	#4
      000C0B 2A                    3072 	ld	a,	(hl+)
      000C0C 66                    3073 	ld	h, (hl)
      000C0D 6F                    3074 	ld	l, a
      000C0E 79                    3075 	ld	a, c
      000C0F 22                    3076 	ld	(hl+), a
      000C10 70                    3077 	ld	(hl), b
                                   3078 ;main.c:321: enemies[i].xReserve +=  (-xMovement) << 3;
      000C11 F8 0B                 3079 	ldhl	sp,#11
      000C13 2A                    3080 	ld	a, (hl+)
      000C14 5F                    3081 	ld	e, a
      000C15 3A                    3082 	ld	a, (hl-)
      000C16 2B                    3083 	dec	hl
      000C17 57                    3084 	ld	d, a
      000C18 1A                    3085 	ld	a, (de)
      000C19 4F                    3086 	ld	c, a
      000C1A AF                    3087 	xor	a, a
      000C1B 96                    3088 	sub	a, (hl)
      000C1C 23                    3089 	inc	hl
      000C1D 87                    3090 	add	a, a
      000C1E 87                    3091 	add	a, a
      000C1F 87                    3092 	add	a, a
      000C20 81                    3093 	add	a, c
      000C21 4F                    3094 	ld	c, a
      000C22 2A                    3095 	ld	a,	(hl+)
      000C23 66                    3096 	ld	h, (hl)
      000C24 6F                    3097 	ld	l, a
      000C25 71                    3098 	ld	(hl), c
      000C26                       3099 00111$:
                                   3100 ;main.c:324: if (enemies[i].yReserve >> 3 > 0) {
      000C26 F8 0D                 3101 	ldhl	sp,#13
      000C28 2A                    3102 	ld	a, (hl+)
      000C29 5F                    3103 	ld	e, a
      000C2A 56                    3104 	ld	d, (hl)
      000C2B 1A                    3105 	ld	a, (de)
      000C2C F8 0B                 3106 	ldhl	sp,	#11
      000C2E 77                    3107 	ld	(hl), a
      000C2F 2A                    3108 	ld	a, (hl+)
      000C30 CB 2F                 3109 	sra	a
      000C32 CB 2F                 3110 	sra	a
      000C34 CB 2F                 3111 	sra	a
      000C36 77                    3112 	ld	(hl), a
      000C37 5E                    3113 	ld	e, (hl)
      000C38 AF                    3114 	xor	a, a
      000C39 57                    3115 	ld	d, a
      000C3A 96                    3116 	sub	a, (hl)
      000C3B CB 7B                 3117 	bit	7, e
      000C3D 28 07                 3118 	jr	Z, 00289$
      000C3F CB 7A                 3119 	bit	7, d
      000C41 20 08                 3120 	jr	NZ, 00290$
      000C43 BF                    3121 	cp	a, a
      000C44 18 05                 3122 	jr	00290$
      000C46                       3123 00289$:
      000C46 CB 7A                 3124 	bit	7, d
      000C48 28 01                 3125 	jr	Z, 00290$
      000C4A 37                    3126 	scf
      000C4B                       3127 00290$:
      000C4B 30 5B                 3128 	jr	NC, 00115$
                                   3129 ;main.c:325: int8_t yMovement = enemies[i].yReserve >> 3;
      000C4D F8 0C                 3130 	ldhl	sp,	#12
      000C4F 7E                    3131 	ld	a, (hl)
      000C50 F8 08                 3132 	ldhl	sp,	#8
                                   3133 ;main.c:326: enemies[i].y += yMovement;
      000C52 32                    3134 	ld	(hl-), a
      000C53 2B                    3135 	dec	hl
      000C54 2A                    3136 	ld	a, (hl+)
      000C55 5F                    3137 	ld	e, a
      000C56 56                    3138 	ld	d, (hl)
      000C57 1A                    3139 	ld	a, (de)
      000C58 F8 0B                 3140 	ldhl	sp,	#11
      000C5A 22                    3141 	ld	(hl+), a
      000C5B 13                    3142 	inc	de
      000C5C 1A                    3143 	ld	a, (de)
      000C5D 77                    3144 	ld	(hl), a
      000C5E F8 08                 3145 	ldhl	sp,	#8
      000C60 7E                    3146 	ld	a, (hl)
      000C61 F8 04                 3147 	ldhl	sp,	#4
      000C63 22                    3148 	ld	(hl+), a
      000C64 07                    3149 	rlca
      000C65 9F                    3150 	sbc	a, a
      000C66 77                    3151 	ld	(hl), a
      000C67 F8 0B                 3152 	ldhl	sp,	#11
      000C69 3A                    3153 	ld	a, (hl-)
      000C6A 2B                    3154 	dec	hl
      000C6B 77                    3155 	ld	(hl), a
      000C6C F8 0C                 3156 	ldhl	sp,	#12
      000C6E 3A                    3157 	ld	a, (hl-)
      000C6F 2B                    3158 	dec	hl
      000C70 32                    3159 	ld	(hl-), a
      000C71 2A                    3160 	ld	a, (hl+)
      000C72 5F                    3161 	ld	e, a
      000C73 56                    3162 	ld	d, (hl)
      000C74 F8 04                 3163 	ldhl	sp,	#4
      000C76 2A                    3164 	ld	a,	(hl+)
      000C77 66                    3165 	ld	h, (hl)
      000C78 6F                    3166 	ld	l, a
      000C79 19                    3167 	add	hl, de
      000C7A E5                    3168 	push	hl
      000C7B 7D                    3169 	ld	a, l
      000C7C F8 0D                 3170 	ldhl	sp,	#13
      000C7E 77                    3171 	ld	(hl), a
      000C7F E1                    3172 	pop	hl
      000C80 7C                    3173 	ld	a, h
      000C81 F8 0C                 3174 	ldhl	sp,	#12
      000C83 77                    3175 	ld	(hl), a
      000C84 F8 06                 3176 	ldhl	sp,#6
      000C86 2A                    3177 	ld	a, (hl+)
      000C87 5F                    3178 	ld	e, a
      000C88 56                    3179 	ld	d, (hl)
      000C89 F8 0B                 3180 	ldhl	sp,	#11
      000C8B 2A                    3181 	ld	a, (hl+)
      000C8C 12                    3182 	ld	(de), a
      000C8D 13                    3183 	inc	de
                                   3184 ;main.c:327: enemies[i].yReserve -=  yMovement << 3;
      000C8E 2A                    3185 	ld	a, (hl+)
      000C8F 12                    3186 	ld	(de), a
      000C90 2A                    3187 	ld	a, (hl+)
      000C91 5F                    3188 	ld	e, a
      000C92 56                    3189 	ld	d, (hl)
      000C93 1A                    3190 	ld	a, (de)
      000C94 F5                    3191 	push	af
      000C95 F8 0A                 3192 	ldhl	sp,	#10
      000C97 7E                    3193 	ld	a, (hl)
      000C98 87                    3194 	add	a, a
      000C99 87                    3195 	add	a, a
      000C9A 87                    3196 	add	a, a
      000C9B 4F                    3197 	ld	c, a
      000C9C F1                    3198 	pop	af
      000C9D 91                    3199 	sub	a, c
      000C9E 4F                    3200 	ld	c, a
      000C9F F8 0D                 3201 	ldhl	sp,	#13
      000CA1 2A                    3202 	ld	a,	(hl+)
      000CA2 66                    3203 	ld	h, (hl)
      000CA3 6F                    3204 	ld	l, a
      000CA4 71                    3205 	ld	(hl), c
      000CA5 C3r49r0D              3206 	jp	00141$
      000CA8                       3207 00115$:
                                   3208 ;main.c:329: else if ((-enemies[i].yReserve) >> 3 > 0){
      000CA8 F8 0B                 3209 	ldhl	sp,	#11
      000CAA 7E                    3210 	ld	a, (hl)
      000CAB F8 08                 3211 	ldhl	sp,	#8
      000CAD 22                    3212 	ld	(hl+), a
      000CAE 07                    3213 	rlca
      000CAF 9F                    3214 	sbc	a, a
      000CB0 77                    3215 	ld	(hl), a
      000CB1 11 00 00              3216 	ld	de, #0x0000
      000CB4 3A                    3217 	ld	a, (hl-)
      000CB5 6E                    3218 	ld	l, (hl)
      000CB6 67                    3219 	ld	h, a
      000CB7 7B                    3220 	ld	a, e
      000CB8 95                    3221 	sub	a, l
      000CB9 5F                    3222 	ld	e, a
      000CBA 7A                    3223 	ld	a, d
      000CBB 9C                    3224 	sbc	a, h
      000CBC F8 0C                 3225 	ldhl	sp,	#12
      000CBE 32                    3226 	ld	(hl-), a
      000CBF 7B                    3227 	ld	a, e
      000CC0 22                    3228 	ld	(hl+), a
      000CC1 CB 2E                 3229 	sra	(hl)
      000CC3 2B                    3230 	dec	hl
      000CC4 CB 1E                 3231 	rr	(hl)
      000CC6 23                    3232 	inc	hl
      000CC7 CB 2E                 3233 	sra	(hl)
      000CC9 2B                    3234 	dec	hl
      000CCA CB 1E                 3235 	rr	(hl)
      000CCC 23                    3236 	inc	hl
      000CCD CB 2E                 3237 	sra	(hl)
      000CCF 2B                    3238 	dec	hl
      000CD0 CB 1E                 3239 	rr	(hl)
      000CD2 AF                    3240 	xor	a, a
      000CD3 96                    3241 	sub	a, (hl)
      000CD4 23                    3242 	inc	hl
      000CD5 3E 00                 3243 	ld	a, #0x00
      000CD7 9E                    3244 	sbc	a, (hl)
      000CD8 3E 00                 3245 	ld	a, #0x00
      000CDA 57                    3246 	ld	d, a
      000CDB CB 7E                 3247 	bit	7, (hl)
      000CDD 28 07                 3248 	jr	Z, 00291$
      000CDF CB 7A                 3249 	bit	7, d
      000CE1 20 08                 3250 	jr	NZ, 00292$
      000CE3 BF                    3251 	cp	a, a
      000CE4 18 05                 3252 	jr	00292$
      000CE6                       3253 00291$:
      000CE6 CB 7A                 3254 	bit	7, d
      000CE8 28 01                 3255 	jr	Z, 00292$
      000CEA 37                    3256 	scf
      000CEB                       3257 00292$:
      000CEB 30 5C                 3258 	jr	NC, 00141$
                                   3259 ;main.c:330: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      000CED F8 0B                 3260 	ldhl	sp,	#11
      000CEF 2A                    3261 	ld	a, (hl+)
      000CF0 4F                    3262 	ld	c, a
      000CF1 AF                    3263 	xor	a, a
      000CF2 91                    3264 	sub	a, c
      000CF3 77                    3265 	ld	(hl), a
      000CF4 7E                    3266 	ld	a, (hl)
      000CF5 F8 08                 3267 	ldhl	sp,	#8
                                   3268 ;main.c:331: enemies[i].y += yMovement;
      000CF7 32                    3269 	ld	(hl-), a
      000CF8 2B                    3270 	dec	hl
      000CF9 2A                    3271 	ld	a, (hl+)
      000CFA 5F                    3272 	ld	e, a
      000CFB 56                    3273 	ld	d, (hl)
      000CFC 1A                    3274 	ld	a, (de)
      000CFD F8 0B                 3275 	ldhl	sp,	#11
      000CFF 22                    3276 	ld	(hl+), a
      000D00 13                    3277 	inc	de
      000D01 1A                    3278 	ld	a, (de)
      000D02 77                    3279 	ld	(hl), a
      000D03 F8 08                 3280 	ldhl	sp,	#8
      000D05 7E                    3281 	ld	a, (hl)
      000D06 F8 04                 3282 	ldhl	sp,	#4
      000D08 22                    3283 	ld	(hl+), a
      000D09 07                    3284 	rlca
      000D0A 9F                    3285 	sbc	a, a
      000D0B 77                    3286 	ld	(hl), a
      000D0C F8 0B                 3287 	ldhl	sp,	#11
      000D0E 3A                    3288 	ld	a, (hl-)
      000D0F 2B                    3289 	dec	hl
      000D10 77                    3290 	ld	(hl), a
      000D11 F8 0C                 3291 	ldhl	sp,	#12
      000D13 3A                    3292 	ld	a, (hl-)
      000D14 2B                    3293 	dec	hl
      000D15 32                    3294 	ld	(hl-), a
      000D16 2A                    3295 	ld	a, (hl+)
      000D17 5F                    3296 	ld	e, a
      000D18 56                    3297 	ld	d, (hl)
      000D19 F8 04                 3298 	ldhl	sp,	#4
      000D1B 2A                    3299 	ld	a,	(hl+)
      000D1C 66                    3300 	ld	h, (hl)
      000D1D 6F                    3301 	ld	l, a
      000D1E 19                    3302 	add	hl, de
      000D1F E5                    3303 	push	hl
      000D20 7D                    3304 	ld	a, l
      000D21 F8 0D                 3305 	ldhl	sp,	#13
      000D23 77                    3306 	ld	(hl), a
      000D24 E1                    3307 	pop	hl
      000D25 7C                    3308 	ld	a, h
      000D26 F8 0C                 3309 	ldhl	sp,	#12
      000D28 77                    3310 	ld	(hl), a
      000D29 F8 06                 3311 	ldhl	sp,#6
      000D2B 2A                    3312 	ld	a, (hl+)
      000D2C 5F                    3313 	ld	e, a
      000D2D 56                    3314 	ld	d, (hl)
      000D2E F8 0B                 3315 	ldhl	sp,	#11
      000D30 2A                    3316 	ld	a, (hl+)
      000D31 12                    3317 	ld	(de), a
      000D32 13                    3318 	inc	de
                                   3319 ;main.c:332: enemies[i].yReserve +=  (-yMovement) << 3;
      000D33 2A                    3320 	ld	a, (hl+)
      000D34 12                    3321 	ld	(de), a
      000D35 2A                    3322 	ld	a, (hl+)
      000D36 5F                    3323 	ld	e, a
      000D37 56                    3324 	ld	d, (hl)
      000D38 1A                    3325 	ld	a, (de)
      000D39 4F                    3326 	ld	c, a
      000D3A AF                    3327 	xor	a, a
      000D3B F8 08                 3328 	ldhl	sp,	#8
      000D3D 96                    3329 	sub	a, (hl)
      000D3E 87                    3330 	add	a, a
      000D3F 87                    3331 	add	a, a
      000D40 87                    3332 	add	a, a
      000D41 81                    3333 	add	a, c
      000D42 4F                    3334 	ld	c, a
      000D43 F8 0D                 3335 	ldhl	sp,	#13
      000D45 2A                    3336 	ld	a,	(hl+)
      000D46 66                    3337 	ld	h, (hl)
      000D47 6F                    3338 	ld	l, a
      000D48 71                    3339 	ld	(hl), c
      000D49                       3340 00141$:
                                   3341 ;main.c:284: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D49 F8 0F                 3342 	ldhl	sp,	#15
      000D4B 34                    3343 	inc	(hl)
      000D4C C3r2Er09              3344 	jp	00140$
      000D4F                       3345 00117$:
                                   3346 ;main.c:343: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D4F F8 0F                 3347 	ldhl	sp,	#15
      000D51 36 00                 3348 	ld	(hl), #0x00
      000D53                       3349 00143$:
      000D53 21rCCr05              3350 	ld	hl, #_ENEMYCOUNT
      000D56 4E                    3351 	ld	c, (hl)
      000D57 F8 0F                 3352 	ldhl	sp,	#15
      000D59 7E                    3353 	ld	a, (hl)
      000D5A 91                    3354 	sub	a, c
      000D5B D2rC5r0E              3355 	jp	NC, 00145$
                                   3356 ;main.c:345: if (enemies[i].alive) {
      000D5E 7E                    3357 	ld	a, (hl)
      000D5F 16 00                 3358 	ld	d, #0x00
      000D61 87                    3359 	add	a, a
      000D62 CB 12                 3360 	rl	d
      000D64 87                    3361 	add	a, a
      000D65 CB 12                 3362 	rl	d
      000D67 87                    3363 	add	a, a
      000D68 CB 12                 3364 	rl	d
      000D6A 87                    3365 	add	a, a
      000D6B CB 12                 3366 	rl	d
      000D6D 5F                    3367 	ld	e, a
      000D6E 21r00r00              3368 	ld	hl, #_enemies
      000D71 19                    3369 	add	hl, de
      000D72 E5                    3370 	push	hl
      000D73 7D                    3371 	ld	a, l
      000D74 F8 09                 3372 	ldhl	sp,	#9
      000D76 77                    3373 	ld	(hl), a
      000D77 E1                    3374 	pop	hl
      000D78 7C                    3375 	ld	a, h
      000D79 F8 08                 3376 	ldhl	sp,	#8
      000D7B 32                    3377 	ld	(hl-), a
      000D7C 2A                    3378 	ld	a, (hl+)
      000D7D 5F                    3379 	ld	e, a
      000D7E 56                    3380 	ld	d, (hl)
      000D7F 21 09 00              3381 	ld	hl, #0x0009
      000D82 19                    3382 	add	hl, de
      000D83 4D                    3383 	ld	c, l
      000D84 44                    3384 	ld	b, h
      000D85 0A                    3385 	ld	a, (bc)
      000D86 F8 0E                 3386 	ldhl	sp,	#14
      000D88 77                    3387 	ld	(hl), a
      000D89 7E                    3388 	ld	a, (hl)
      000D8A B7                    3389 	or	a, a
      000D8B CAr9Ar0E              3390 	jp	Z, 00132$
                                   3391 ;main.c:346: if (enemies[i].visible == 1) {
      000D8E F8 07                 3392 	ldhl	sp,#7
      000D90 2A                    3393 	ld	a, (hl+)
      000D91 5F                    3394 	ld	e, a
      000D92 56                    3395 	ld	d, (hl)
      000D93 21 0A 00              3396 	ld	hl, #0x000a
      000D96 19                    3397 	add	hl, de
      000D97 E5                    3398 	push	hl
      000D98 7D                    3399 	ld	a, l
      000D99 F8 0B                 3400 	ldhl	sp,	#11
      000D9B 77                    3401 	ld	(hl), a
      000D9C E1                    3402 	pop	hl
      000D9D 7C                    3403 	ld	a, h
      000D9E F8 0A                 3404 	ldhl	sp,	#10
      000DA0 32                    3405 	ld	(hl-), a
      000DA1 2A                    3406 	ld	a, (hl+)
      000DA2 5F                    3407 	ld	e, a
      000DA3 2A                    3408 	ld	a, (hl+)
      000DA4 57                    3409 	ld	d, a
      000DA5 1A                    3410 	ld	a, (de)
      000DA6 77                    3411 	ld	(hl), a
                                   3412 ;main.c:347: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000DA7 F8 07                 3413 	ldhl	sp,#7
      000DA9 2A                    3414 	ld	a, (hl+)
      000DAA 5F                    3415 	ld	e, a
      000DAB 56                    3416 	ld	d, (hl)
      000DAC 1A                    3417 	ld	a, (de)
      000DAD F8 05                 3418 	ldhl	sp,	#5
      000DAF 22                    3419 	ld	(hl+), a
      000DB0 13                    3420 	inc	de
      000DB1 1A                    3421 	ld	a, (de)
      000DB2 22                    3422 	ld	(hl+), a
      000DB3 2A                    3423 	ld	a, (hl+)
      000DB4 5F                    3424 	ld	e, a
      000DB5 56                    3425 	ld	d, (hl)
      000DB6 21 02 00              3426 	ld	hl, #0x0002
      000DB9 19                    3427 	add	hl, de
      000DBA E5                    3428 	push	hl
      000DBB 7D                    3429 	ld	a, l
      000DBC F8 0E                 3430 	ldhl	sp,	#14
      000DBE 77                    3431 	ld	(hl), a
      000DBF E1                    3432 	pop	hl
      000DC0 7C                    3433 	ld	a, h
      000DC1 F8 0D                 3434 	ldhl	sp,	#13
                                   3435 ;main.c:349: set_sprite_tile(10+i, 0x7f);
      000DC3 22                    3436 	ld	(hl+), a
      000DC4 23                    3437 	inc	hl
      000DC5 7E                    3438 	ld	a, (hl)
                                   3439 ;main.c:347: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000DC6 F8 05                 3440 	ldhl	sp,	#5
      000DC8 4E                    3441 	ld	c, (hl)
      000DC9 23                    3442 	inc	hl
      000DCA 46                    3443 	ld	b, (hl)
                                   3444 ;main.c:349: set_sprite_tile(10+i, 0x7f);
      000DCB C6 0A                 3445 	add	a, #0x0a
      000DCD F8 0E                 3446 	ldhl	sp,	#14
      000DCF 77                    3447 	ld	(hl), a
                                   3448 ;main.c:347: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000DD0 78                    3449 	ld	a, b
      000DD1 07                    3450 	rlca
      000DD2 E6 01                 3451 	and	a,#0x01
      000DD4 6F                    3452 	ld	l, a
                                   3453 ;	spillPairReg hl
                                   3454 ;	spillPairReg hl
                                   3455 ;main.c:346: if (enemies[i].visible == 1) {
      000DD5 E5                    3456 	push	hl
      000DD6 F8 0D                 3457 	ldhl	sp,	#13
      000DD8 7E                    3458 	ld	a, (hl)
      000DD9 3D                    3459 	dec	a
      000DDA E1                    3460 	pop	hl
      000DDB 20 60                 3461 	jr	NZ, 00129$
                                   3462 ;main.c:347: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000DDD 7D                    3463 	ld	a, l
      000DDE B7                    3464 	or	a, a
      000DDF 20 44                 3465 	jr	NZ, 00118$
      000DE1 58                    3466 	ld	e, b
      000DE2 16 00                 3467 	ld	d, #0x00
      000DE4 3E AC                 3468 	ld	a, #0xac
      000DE6 B9                    3469 	cp	a, c
      000DE7 3E 00                 3470 	ld	a, #0x00
      000DE9 98                    3471 	sbc	a, b
      000DEA CB 7B                 3472 	bit	7, e
      000DEC 28 07                 3473 	jr	Z, 00296$
      000DEE CB 7A                 3474 	bit	7, d
      000DF0 20 08                 3475 	jr	NZ, 00297$
      000DF2 BF                    3476 	cp	a, a
      000DF3 18 05                 3477 	jr	00297$
      000DF5                       3478 00296$:
      000DF5 CB 7A                 3479 	bit	7, d
      000DF7 28 01                 3480 	jr	Z, 00297$
      000DF9 37                    3481 	scf
      000DFA                       3482 00297$:
      000DFA 38 29                 3483 	jr	C, 00118$
      000DFC F8 0C                 3484 	ldhl	sp,#12
      000DFE 2A                    3485 	ld	a, (hl+)
      000DFF 5F                    3486 	ld	e, a
      000E00 56                    3487 	ld	d, (hl)
      000E01 1A                    3488 	ld	a, (de)
      000E02 4F                    3489 	ld	c, a
      000E03 13                    3490 	inc	de
      000E04 1A                    3491 	ld	a, (de)
      000E05 47                    3492 	ld	b, a
      000E06 CB 78                 3493 	bit	7, b
      000E08 20 1B                 3494 	jr	NZ, 00118$
      000E0A 58                    3495 	ld	e, b
      000E0B 16 00                 3496 	ld	d, #0x00
      000E0D 3E 98                 3497 	ld	a, #0x98
      000E0F B9                    3498 	cp	a, c
      000E10 3E 00                 3499 	ld	a, #0x00
      000E12 98                    3500 	sbc	a, b
      000E13 CB 7B                 3501 	bit	7, e
      000E15 28 07                 3502 	jr	Z, 00298$
      000E17 CB 7A                 3503 	bit	7, d
      000E19 20 08                 3504 	jr	NZ, 00299$
      000E1B BF                    3505 	cp	a, a
      000E1C 18 05                 3506 	jr	00299$
      000E1E                       3507 00298$:
      000E1E CB 7A                 3508 	bit	7, d
      000E20 28 01                 3509 	jr	Z, 00299$
      000E22 37                    3510 	scf
      000E23                       3511 00299$:
      000E23 30 75                 3512 	jr	NC, 00132$
      000E25                       3513 00118$:
                                   3514 ;main.c:348: enemies[i].visible = 0;
      000E25 F8 09                 3515 	ldhl	sp,	#9
      000E27 2A                    3516 	ld	a,	(hl+)
      000E28 66                    3517 	ld	h, (hl)
      000E29 6F                    3518 	ld	l, a
      000E2A 36 00                 3519 	ld	(hl), #0x00
                                   3520 ;main.c:349: set_sprite_tile(10+i, 0x7f);
      000E2C F8 0E                 3521 	ldhl	sp,	#14
                                   3522 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E2E 6E                    3523 	ld	l, (hl)
      000E2F 01r00r00              3524 	ld	bc, #_shadow_OAM+0
                                   3525 ;	spillPairReg hl
                                   3526 ;	spillPairReg hl
      000E32 26 00                 3527 	ld	h, #0x00
                                   3528 ;	spillPairReg hl
                                   3529 ;	spillPairReg hl
      000E34 29                    3530 	add	hl, hl
      000E35 29                    3531 	add	hl, hl
      000E36 09                    3532 	add	hl, bc
      000E37 23                    3533 	inc	hl
      000E38 23                    3534 	inc	hl
      000E39 36 7F                 3535 	ld	(hl), #0x7f
                                   3536 ;main.c:349: set_sprite_tile(10+i, 0x7f);
      000E3B 18 5D                 3537 	jr	00132$
      000E3D                       3538 00129$:
                                   3539 ;main.c:353: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      000E3D CB 45                 3540 	bit	0, l
      000E3F 20 59                 3541 	jr	NZ, 00132$
      000E41 79                    3542 	ld	a, c
      000E42 D6 AC                 3543 	sub	a, #0xac
      000E44 78                    3544 	ld	a, b
      000E45 17                    3545 	rla
      000E46 3F                    3546 	ccf
      000E47 1F                    3547 	rra
      000E48 DE 80                 3548 	sbc	a, #0x80
      000E4A 30 4E                 3549 	jr	NC, 00132$
      000E4C F8 0C                 3550 	ldhl	sp,#12
      000E4E 2A                    3551 	ld	a, (hl+)
      000E4F 5F                    3552 	ld	e, a
      000E50 56                    3553 	ld	d, (hl)
      000E51 1A                    3554 	ld	a, (de)
      000E52 4F                    3555 	ld	c, a
      000E53 13                    3556 	inc	de
      000E54 1A                    3557 	ld	a, (de)
      000E55 47                    3558 	ld	b, a
      000E56 58                    3559 	ld	e, b
      000E57 AF                    3560 	xor	a, a
      000E58 57                    3561 	ld	d, a
      000E59 B9                    3562 	cp	a, c
      000E5A 98                    3563 	sbc	a, b
      000E5B CB 7B                 3564 	bit	7, e
      000E5D 28 07                 3565 	jr	Z, 00300$
      000E5F CB 7A                 3566 	bit	7, d
      000E61 20 08                 3567 	jr	NZ, 00301$
      000E63 BF                    3568 	cp	a, a
      000E64 18 05                 3569 	jr	00301$
      000E66                       3570 00300$:
      000E66 CB 7A                 3571 	bit	7, d
      000E68 28 01                 3572 	jr	Z, 00301$
      000E6A 37                    3573 	scf
      000E6B                       3574 00301$:
      000E6B 30 2D                 3575 	jr	NC, 00132$
      000E6D 79                    3576 	ld	a, c
      000E6E D6 98                 3577 	sub	a, #0x98
      000E70 78                    3578 	ld	a, b
      000E71 17                    3579 	rla
      000E72 3F                    3580 	ccf
      000E73 1F                    3581 	rra
      000E74 DE 80                 3582 	sbc	a, #0x80
      000E76 30 22                 3583 	jr	NC, 00132$
                                   3584 ;main.c:354: enemies[i].visible = 1;
      000E78 F8 09                 3585 	ldhl	sp,	#9
      000E7A 2A                    3586 	ld	a,	(hl+)
      000E7B 66                    3587 	ld	h, (hl)
      000E7C 6F                    3588 	ld	l, a
      000E7D 36 01                 3589 	ld	(hl), #0x01
                                   3590 ;main.c:355: set_sprite_tile(10+i, enemies[i].sprite0);
      000E7F F8 07                 3591 	ldhl	sp,#7
      000E81 2A                    3592 	ld	a, (hl+)
      000E82 5F                    3593 	ld	e, a
      000E83 56                    3594 	ld	d, (hl)
      000E84 21 06 00              3595 	ld	hl, #0x0006
      000E87 19                    3596 	add	hl, de
      000E88 4D                    3597 	ld	c, l
      000E89 44                    3598 	ld	b, h
      000E8A 0A                    3599 	ld	a, (bc)
      000E8B 4F                    3600 	ld	c, a
      000E8C F8 0E                 3601 	ldhl	sp,	#14
                                   3602 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E8E 6E                    3603 	ld	l, (hl)
      000E8F 11r00r00              3604 	ld	de, #_shadow_OAM+0
                                   3605 ;	spillPairReg hl
                                   3606 ;	spillPairReg hl
      000E92 26 00                 3607 	ld	h, #0x00
                                   3608 ;	spillPairReg hl
                                   3609 ;	spillPairReg hl
      000E94 29                    3610 	add	hl, hl
      000E95 29                    3611 	add	hl, hl
      000E96 19                    3612 	add	hl, de
      000E97 23                    3613 	inc	hl
      000E98 23                    3614 	inc	hl
      000E99 71                    3615 	ld	(hl), c
                                   3616 ;main.c:355: set_sprite_tile(10+i, enemies[i].sprite0);
      000E9A                       3617 00132$:
                                   3618 ;main.c:360: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000E9A F8 0F                 3619 	ldhl	sp,	#15
      000E9C 6E                    3620 	ld	l, (hl)
      000E9D 26 00                 3621 	ld	h, #0x00
      000E9F 29                    3622 	add	hl, hl
      000EA0 29                    3623 	add	hl, hl
      000EA1 29                    3624 	add	hl, hl
      000EA2 29                    3625 	add	hl, hl
      000EA3 11r00r00              3626 	ld	de, #_enemies
      000EA6 19                    3627 	add	hl, de
      000EA7 4D                    3628 	ld	c, l
      000EA8 44                    3629 	ld	b, h
      000EA9 03                    3630 	inc	bc
      000EAA 03                    3631 	inc	bc
      000EAB 0A                    3632 	ld	a, (bc)
      000EAC 47                    3633 	ld	b, a
      000EAD 4E                    3634 	ld	c, (hl)
      000EAE F8 0F                 3635 	ldhl	sp,	#15
      000EB0 7E                    3636 	ld	a, (hl)
      000EB1 C6 0A                 3637 	add	a, #0x0a
                                   3638 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000EB3 6F                    3639 	ld	l, a
                                   3640 ;	spillPairReg hl
                                   3641 ;	spillPairReg hl
      000EB4 26 00                 3642 	ld	h, #0x00
                                   3643 ;	spillPairReg hl
                                   3644 ;	spillPairReg hl
      000EB6 29                    3645 	add	hl, hl
      000EB7 29                    3646 	add	hl, hl
      000EB8 11r00r00              3647 	ld	de, #_shadow_OAM
      000EBB 19                    3648 	add	hl, de
                                   3649 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000EBC 78                    3650 	ld	a, b
      000EBD 22                    3651 	ld	(hl+), a
      000EBE 71                    3652 	ld	(hl), c
                                   3653 ;main.c:343: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000EBF F8 0F                 3654 	ldhl	sp,	#15
      000EC1 34                    3655 	inc	(hl)
      000EC2 C3r53r0D              3656 	jp	00143$
      000EC5                       3657 00145$:
                                   3658 ;main.c:362: }
      000EC5 E8 10                 3659 	add	sp, #16
      000EC7 C9                    3660 	ret
                                   3661 ;main.c:364: void initEnemies(uint8_t loadSprites) {
                                   3662 ;	---------------------------------
                                   3663 ; Function initEnemies
                                   3664 ; ---------------------------------
      000EC8                       3665 _initEnemies::
      000EC8 E8 F9                 3666 	add	sp, #-7
                                   3667 ;main.c:366: if (loadSprites) {
      000ECA F8 09                 3668 	ldhl	sp,	#9
      000ECC 7E                    3669 	ld	a, (hl)
      000ECD B7                    3670 	or	a, a
      000ECE 28 0D                 3671 	jr	Z, 00116$
                                   3672 ;main.c:368: set_sprite_data(9, 2, enemy1);
      000ED0 11r17r05              3673 	ld	de, #_enemy1
      000ED3 D5                    3674 	push	de
      000ED4 21 09 02              3675 	ld	hl, #0x209
      000ED7 E5                    3676 	push	hl
      000ED8 CDr00r00              3677 	call	_set_sprite_data
      000EDB E8 04                 3678 	add	sp, #4
                                   3679 ;main.c:373: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000EDD                       3680 00116$:
      000EDD 0E 00                 3681 	ld	c, #0x00
      000EDF                       3682 00109$:
      000EDF 21rCCr05              3683 	ld	hl, #_ENEMYCOUNT
      000EE2 46                    3684 	ld	b, (hl)
      000EE3 79                    3685 	ld	a, c
      000EE4 90                    3686 	sub	a, b
      000EE5 D2r82r0F              3687 	jp	NC, 00111$
                                   3688 ;main.c:374: if (enemies[i].alive == 0) {
      000EE8 69                    3689 	ld	l, c
                                   3690 ;	spillPairReg hl
                                   3691 ;	spillPairReg hl
      000EE9 26 00                 3692 	ld	h, #0x00
                                   3693 ;	spillPairReg hl
                                   3694 ;	spillPairReg hl
      000EEB 29                    3695 	add	hl, hl
      000EEC 29                    3696 	add	hl, hl
      000EED 29                    3697 	add	hl, hl
      000EEE 29                    3698 	add	hl, hl
      000EEF 5D                    3699 	ld	e, l
      000EF0 54                    3700 	ld	d, h
      000EF1 21r00r00              3701 	ld	hl, #_enemies
      000EF4 19                    3702 	add	hl, de
      000EF5 33                    3703 	inc	sp
      000EF6 33                    3704 	inc	sp
      000EF7 5D                    3705 	ld	e, l
      000EF8 54                    3706 	ld	d, h
      000EF9 D5                    3707 	push	de
      000EFA 21 09 00              3708 	ld	hl, #0x0009
      000EFD 19                    3709 	add	hl, de
      000EFE 5D                    3710 	ld	e, l
      000EFF 54                    3711 	ld	d, h
      000F00 1A                    3712 	ld	a, (de)
      000F01 B7                    3713 	or	a, a
      000F02 20 7A                 3714 	jr	NZ, 00110$
                                   3715 ;main.c:376: enemies[i] = blob;
      000F04 D1                    3716 	pop	de
      000F05 D5                    3717 	push	de
      000F06 C5                    3718 	push	bc
      000F07 21 10 00              3719 	ld	hl, #0x0010
      000F0A E5                    3720 	push	hl
      000F0B 21r10r00              3721 	ld	hl, #_blob
      000F0E E5                    3722 	push	hl
      000F0F D5                    3723 	push	de
      000F10 CDr00r00              3724 	call	___memcpy
      000F13 E8 06                 3725 	add	sp, #6
      000F15 CDr00r00              3726 	call	_rand
      000F18 7B                    3727 	ld	a, e
      000F19 C1                    3728 	pop	bc
      000F1A E6 07                 3729 	and	a, #0x07
                                   3730 ;main.c:380: enemies[i].x = xSpawnPositions[posIndex];
      000F1C 47                    3731 	ld	b, a
      000F1D C6rCD                 3732 	add	a,#<(_xSpawnPositions)
      000F1F 5F                    3733 	ld	e, a
      000F20 3Es05                 3734 	ld	a, #>(_xSpawnPositions)
      000F22 CE 00                 3735 	adc	a, #0x00
      000F24 57                    3736 	ld	d, a
      000F25 1A                    3737 	ld	a, (de)
      000F26 F8 02                 3738 	ldhl	sp,	#2
      000F28 22                    3739 	ld	(hl+), a
      000F29 AF                    3740 	xor	a, a
      000F2A 32                    3741 	ld	(hl-), a
      000F2B D1                    3742 	pop	de
      000F2C D5                    3743 	push	de
      000F2D 2A                    3744 	ld	a, (hl+)
      000F2E 12                    3745 	ld	(de), a
      000F2F 13                    3746 	inc	de
      000F30 7E                    3747 	ld	a, (hl)
      000F31 12                    3748 	ld	(de), a
                                   3749 ;main.c:381: enemies[i].y = ySpawnPositions[posIndex];
      000F32 D1                    3750 	pop	de
      000F33 D5                    3751 	push	de
      000F34 13                    3752 	inc	de
      000F35 13                    3753 	inc	de
      000F36 78                    3754 	ld	a, b
      000F37 C6rD5                 3755 	add	a, #<(_ySpawnPositions)
      000F39 6F                    3756 	ld	l, a
                                   3757 ;	spillPairReg hl
                                   3758 ;	spillPairReg hl
      000F3A 3E 00                 3759 	ld	a, #0x00
      000F3C CEs05                 3760 	adc	a, #>(_ySpawnPositions)
      000F3E 67                    3761 	ld	h, a
                                   3762 ;	spillPairReg hl
                                   3763 ;	spillPairReg hl
      000F3F 7E                    3764 	ld	a, (hl)
      000F40 F8 04                 3765 	ldhl	sp,	#4
      000F42 22                    3766 	ld	(hl+), a
      000F43 AF                    3767 	xor	a, a
      000F44 32                    3768 	ld	(hl-), a
      000F45 2A                    3769 	ld	a, (hl+)
      000F46 12                    3770 	ld	(de), a
      000F47 13                    3771 	inc	de
      000F48 7E                    3772 	ld	a, (hl)
      000F49 12                    3773 	ld	(de), a
                                   3774 ;main.c:383: set_sprite_tile(10+i, enemies[i].sprite0);
      000F4A D1                    3775 	pop	de
      000F4B D5                    3776 	push	de
      000F4C 21 06 00              3777 	ld	hl, #0x0006
      000F4F 19                    3778 	add	hl, de
      000F50 5D                    3779 	ld	e, l
      000F51 54                    3780 	ld	d, h
      000F52 1A                    3781 	ld	a, (de)
      000F53 47                    3782 	ld	b, a
      000F54 79                    3783 	ld	a, c
      000F55 C6 0A                 3784 	add	a, #0x0a
      000F57 F8 06                 3785 	ldhl	sp,	#6
      000F59 77                    3786 	ld	(hl), a
      000F5A 5E                    3787 	ld	e, (hl)
                                   3788 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F5B 26 00                 3789 	ld	h, #0x00
                                   3790 ;	spillPairReg hl
                                   3791 ;	spillPairReg hl
      000F5D 6B                    3792 	ld	l, e
      000F5E 29                    3793 	add	hl, hl
      000F5F 29                    3794 	add	hl, hl
      000F60 11r00r00              3795 	ld	de, #_shadow_OAM
      000F63 19                    3796 	add	hl, de
      000F64 23                    3797 	inc	hl
      000F65 23                    3798 	inc	hl
      000F66 70                    3799 	ld	(hl), b
                                   3800 ;main.c:386: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000F67 F8 04                 3801 	ldhl	sp,	#4
      000F69 3A                    3802 	ld	a, (hl-)
      000F6A 2B                    3803 	dec	hl
      000F6B 5F                    3804 	ld	e, a
      000F6C 46                    3805 	ld	b, (hl)
      000F6D F8 06                 3806 	ldhl	sp,	#6
      000F6F 56                    3807 	ld	d, (hl)
                                   3808 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000F70 26 00                 3809 	ld	h, #0x00
                                   3810 ;	spillPairReg hl
                                   3811 ;	spillPairReg hl
      000F72 6A                    3812 	ld	l, d
      000F73 29                    3813 	add	hl, hl
      000F74 29                    3814 	add	hl, hl
      000F75 D5                    3815 	push	de
      000F76 11r00r00              3816 	ld	de, #_shadow_OAM
      000F79 19                    3817 	add	hl, de
      000F7A D1                    3818 	pop	de
                                   3819 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000F7B 7B                    3820 	ld	a, e
      000F7C 22                    3821 	ld	(hl+), a
      000F7D 70                    3822 	ld	(hl), b
                                   3823 ;main.c:386: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000F7E                       3824 00110$:
                                   3825 ;main.c:373: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000F7E 0C                    3826 	inc	c
      000F7F C3rDFr0E              3827 	jp	00109$
      000F82                       3828 00111$:
                                   3829 ;main.c:389: }
      000F82 E8 07                 3830 	add	sp, #7
      000F84 C9                    3831 	ret
                                   3832 ;main.c:392: void move() {
                                   3833 ;	---------------------------------
                                   3834 ; Function move
                                   3835 ; ---------------------------------
      000F85                       3836 _move::
      000F85 E8 F8                 3837 	add	sp, #-8
                                   3838 ;main.c:396: if (joydata & J_A) {
      000F87 FAr87r00              3839 	ld	a, (#_joydata)
      000F8A CB 67                 3840 	bit	4, a
      000F8C 28 16                 3841 	jr	Z, 00102$
                                   3842 ;main.c:397: xSpeed += xDir + xDir + xDir;
      000F8E 21r43r00              3843 	ld	hl, #_xDir
      000F91 7E                    3844 	ld	a, (hl)
      000F92 87                    3845 	add	a, a
      000F93 86                    3846 	add	a, (hl)
      000F94 21r45r00              3847 	ld	hl, #_xSpeed
      000F97 86                    3848 	add	a, (hl)
      000F98 77                    3849 	ld	(hl), a
                                   3850 ;main.c:398: ySpeed += yDir + yDir + yDir;
      000F99 21r44r00              3851 	ld	hl, #_yDir
      000F9C 7E                    3852 	ld	a, (hl)
      000F9D 87                    3853 	add	a, a
      000F9E 86                    3854 	add	a, (hl)
      000F9F 21r46r00              3855 	ld	hl, #_ySpeed
      000FA2 86                    3856 	add	a, (hl)
      000FA3 77                    3857 	ld	(hl), a
      000FA4                       3858 00102$:
                                   3859 ;main.c:402: xSpeed = clamp(xSpeed, -100, 100);
      000FA4 21r45r00              3860 	ld	hl, #_xSpeed
      000FA7 4E                    3861 	ld	c, (hl)
                                   3862 ;main.c:222: return (value < min) ? min : (value > max) ? max : value;
      000FA8 79                    3863 	ld	a, c
      000FA9 EE 80                 3864 	xor	a, #0x80
      000FAB D6 1C                 3865 	sub	a, #0x1c
      000FAD 30 04                 3866 	jr	NC, 00159$
      000FAF 0E 9C                 3867 	ld	c, #0x9c
      000FB1 18 19                 3868 	jr	00160$
      000FB3                       3869 00159$:
      000FB3 59                    3870 	ld	e, c
      000FB4 3E 64                 3871 	ld	a,#0x64
      000FB6 57                    3872 	ld	d,a
      000FB7 91                    3873 	sub	a, c
      000FB8 CB 7B                 3874 	bit	7, e
      000FBA 28 07                 3875 	jr	Z, 00331$
      000FBC CB 7A                 3876 	bit	7, d
      000FBE 20 08                 3877 	jr	NZ, 00332$
      000FC0 BF                    3878 	cp	a, a
      000FC1 18 05                 3879 	jr	00332$
      000FC3                       3880 00331$:
      000FC3 CB 7A                 3881 	bit	7, d
      000FC5 28 01                 3882 	jr	Z, 00332$
      000FC7 37                    3883 	scf
      000FC8                       3884 00332$:
      000FC8 30 02                 3885 	jr	NC, 00161$
      000FCA 0E 64                 3886 	ld	c, #0x64
      000FCC                       3887 00161$:
      000FCC                       3888 00160$:
      000FCC 21r45r00              3889 	ld	hl, #_xSpeed
      000FCF 71                    3890 	ld	(hl), c
                                   3891 ;main.c:403: ySpeed = clamp(ySpeed, -100, 100);
      000FD0 21r46r00              3892 	ld	hl, #_ySpeed
      000FD3 4E                    3893 	ld	c, (hl)
                                   3894 ;main.c:222: return (value < min) ? min : (value > max) ? max : value;
      000FD4 79                    3895 	ld	a, c
      000FD5 EE 80                 3896 	xor	a, #0x80
      000FD7 D6 1C                 3897 	sub	a, #0x1c
      000FD9 30 04                 3898 	jr	NC, 00163$
      000FDB 0E 9C                 3899 	ld	c, #0x9c
      000FDD 18 19                 3900 	jr	00164$
      000FDF                       3901 00163$:
      000FDF 59                    3902 	ld	e, c
      000FE0 3E 64                 3903 	ld	a,#0x64
      000FE2 57                    3904 	ld	d,a
      000FE3 91                    3905 	sub	a, c
      000FE4 CB 7B                 3906 	bit	7, e
      000FE6 28 07                 3907 	jr	Z, 00333$
      000FE8 CB 7A                 3908 	bit	7, d
      000FEA 20 08                 3909 	jr	NZ, 00334$
      000FEC BF                    3910 	cp	a, a
      000FED 18 05                 3911 	jr	00334$
      000FEF                       3912 00333$:
      000FEF CB 7A                 3913 	bit	7, d
      000FF1 28 01                 3914 	jr	Z, 00334$
      000FF3 37                    3915 	scf
      000FF4                       3916 00334$:
      000FF4 30 02                 3917 	jr	NC, 00165$
      000FF6 0E 64                 3918 	ld	c, #0x64
      000FF8                       3919 00165$:
      000FF8                       3920 00164$:
      000FF8 21r46r00              3921 	ld	hl, #_ySpeed
      000FFB 71                    3922 	ld	(hl), c
                                   3923 ;main.c:405: xOverflow = 0;
      000FFC AF                    3924 	xor	a, a
      000FFD 21r51r00              3925 	ld	hl, #_xOverflow
      001000 22                    3926 	ld	(hl+), a
      001001 77                    3927 	ld	(hl), a
                                   3928 ;main.c:406: yOverflow = 0;
      001002 AF                    3929 	xor	a, a
      001003 21r53r00              3930 	ld	hl, #_yOverflow
      001006 22                    3931 	ld	(hl+), a
      001007 77                    3932 	ld	(hl), a
                                   3933 ;main.c:411: uint8_t xCollisionPoint = playerDrawX -4; 
      001008 21r4Br00              3934 	ld	hl, #_playerDrawX
      00100B 46                    3935 	ld	b, (hl)
      00100C 78                    3936 	ld	a, b
      00100D C6 FC                 3937 	add	a, #0xfc
      00100F 4F                    3938 	ld	c, a
                                   3939 ;main.c:413: if (xSpeed > 0) {
      001010 21r45r00              3940 	ld	hl, #_xSpeed
      001013 5E                    3941 	ld	e, (hl)
      001014 AF                    3942 	xor	a, a
      001015 57                    3943 	ld	d, a
      001016 96                    3944 	sub	a, (hl)
      001017 CB 7B                 3945 	bit	7, e
      001019 28 07                 3946 	jr	Z, 00335$
      00101B CB 7A                 3947 	bit	7, d
      00101D 20 08                 3948 	jr	NZ, 00336$
      00101F BF                    3949 	cp	a, a
      001020 18 05                 3950 	jr	00336$
      001022                       3951 00335$:
      001022 CB 7A                 3952 	bit	7, d
      001024 28 01                 3953 	jr	Z, 00336$
      001026 37                    3954 	scf
      001027                       3955 00336$:
      001027 30 04                 3956 	jr	NC, 00104$
                                   3957 ;main.c:414: xCollisionPoint = playerDrawX; //right edge
      001029 21r4Br00              3958 	ld	hl, #_playerDrawX
      00102C 4E                    3959 	ld	c, (hl)
      00102D                       3960 00104$:
                                   3961 ;main.c:416: if (xSpeed < 0) {
      00102D FAr45r00              3962 	ld	a, (#_xSpeed)
      001030 CB 7F                 3963 	bit	7, a
      001032 28 04                 3964 	jr	Z, 00106$
                                   3965 ;main.c:417: xCollisionPoint = playerDrawX -8; //left edge
      001034 78                    3966 	ld	a, b
      001035 C6 F8                 3967 	add	a, #0xf8
      001037 4F                    3968 	ld	c, a
      001038                       3969 00106$:
                                   3970 ;main.c:421: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      001038 06 00                 3971 	ld	b, #0x00
      00103A 79                    3972 	ld	a, c
      00103B 21r4Dr00              3973 	ld	hl, #_bgX
      00103E 86                    3974 	add	a, (hl)
      00103F 23                    3975 	inc	hl
      001040 4F                    3976 	ld	c, a
      001041 78                    3977 	ld	a, b
      001042 8E                    3978 	adc	a, (hl)
      001043 47                    3979 	ld	b, a
      001044 CB 28                 3980 	sra	b
      001046 CB 19                 3981 	rr	c
      001048 CB 28                 3982 	sra	b
      00104A CB 19                 3983 	rr	c
      00104C CB 28                 3984 	sra	b
      00104E CB 19                 3985 	rr	c
      001050 11 20 00              3986 	ld	de, #0x0020
      001053 D5                    3987 	push	de
      001054 C5                    3988 	push	bc
      001055 CDr00r00              3989 	call	__modsint
      001058 E8 04                 3990 	add	sp, #4
                                   3991 ;main.c:425: uint8_t bgindY = ((playerDrawY-12 + bgY) >> 3)%32; 
      00105A FAr4Cr00              3992 	ld	a, (#_playerDrawY)
      00105D 06 00                 3993 	ld	b, #0x00
      00105F C6 F4                 3994 	add	a, #0xf4
      001061 4F                    3995 	ld	c, a
      001062 78                    3996 	ld	a, b
      001063 CE FF                 3997 	adc	a, #0xff
      001065 47                    3998 	ld	b, a
      001066 79                    3999 	ld	a, c
      001067 21r4Fr00              4000 	ld	hl, #_bgY
      00106A 86                    4001 	add	a, (hl)
      00106B 23                    4002 	inc	hl
      00106C 4F                    4003 	ld	c, a
      00106D 78                    4004 	ld	a, b
      00106E 8E                    4005 	adc	a, (hl)
      00106F 47                    4006 	ld	b, a
      001070 CB 28                 4007 	sra	b
      001072 CB 19                 4008 	rr	c
      001074 CB 28                 4009 	sra	b
      001076 CB 19                 4010 	rr	c
      001078 CB 28                 4011 	sra	b
      00107A CB 19                 4012 	rr	c
      00107C D5                    4013 	push	de
      00107D 21 20 00              4014 	ld	hl, #0x0020
      001080 E5                    4015 	push	hl
      001081 C5                    4016 	push	bc
      001082 CDr00r00              4017 	call	__modsint
      001085 E8 04                 4018 	add	sp, #4
      001087 6B                    4019 	ld	l, e
                                   4020 ;	spillPairReg hl
                                   4021 ;	spillPairReg hl
                                   4022 ;	spillPairReg hl
                                   4023 ;	spillPairReg hl
      001088 D1                    4024 	pop	de
                                   4025 ;main.c:428: uint16_t ind = 32*bgindY + bgindX;
      001089 26 00                 4026 	ld	h, #0x00
                                   4027 ;	spillPairReg hl
                                   4028 ;	spillPairReg hl
      00108B 29                    4029 	add	hl, hl
      00108C 29                    4030 	add	hl, hl
      00108D 29                    4031 	add	hl, hl
      00108E 29                    4032 	add	hl, hl
      00108F 29                    4033 	add	hl, hl
      001090 19                    4034 	add	hl, de
      001091 5D                    4035 	ld	e, l
      001092 54                    4036 	ld	d, h
                                   4037 ;main.c:429: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001093 0E 01                 4038 	ld	c, #0x01
                                   4039 ;main.c:430: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001095 21r87r00              4040 	ld	hl, #_background1
      001098 19                    4041 	add	hl, de
      001099 46                    4042 	ld	b, (hl)
      00109A 1E 00                 4043 	ld	e, #0x00
      00109C                       4044 00152$:
      00109C FArC7r05              4045 	ld	a, (#_BLANKSIZE)
      00109F F8 02                 4046 	ldhl	sp,	#2
      0010A1 77                    4047 	ld	(hl), a
      0010A2 7B                    4048 	ld	a, e
      0010A3 96                    4049 	sub	a, (hl)
      0010A4 30 11                 4050 	jr	NC, 00109$
                                   4051 ;main.c:431: if (background1[ind] == BLANK[i] ) {
      0010A6 21rC8r05              4052 	ld	hl, #_BLANK
      0010A9 16 00                 4053 	ld	d, #0x00
      0010AB 19                    4054 	add	hl, de
      0010AC 56                    4055 	ld	d, (hl)
      0010AD 78                    4056 	ld	a, b
                                   4057 ;main.c:432: result = 0;
      0010AE 92                    4058 	sub	a,d
      0010AF 20 03                 4059 	jr	NZ, 00153$
      0010B1 4F                    4060 	ld	c,a
                                   4061 ;main.c:433: break;
      0010B2 18 03                 4062 	jr	00109$
      0010B4                       4063 00153$:
                                   4064 ;main.c:430: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0010B4 1C                    4065 	inc	e
      0010B5 18 E5                 4066 	jr	00152$
      0010B7                       4067 00109$:
                                   4068 ;main.c:437: if (result == 0) {
      0010B7 79                    4069 	ld	a, c
      0010B8 B7                    4070 	or	a, a
      0010B9 C2r87r11              4071 	jp	NZ, 00114$
                                   4072 ;main.c:438: playerX+=xSpeed;
      0010BC FAr45r00              4073 	ld	a, (#_xSpeed)
      0010BF 4F                    4074 	ld	c, a
      0010C0 07                    4075 	rlca
      0010C1 9F                    4076 	sbc	a, a
      0010C2 47                    4077 	ld	b, a
      0010C3 21r47r00              4078 	ld	hl, #_playerX
      0010C6 6E                    4079 	ld	l, (hl)
                                   4080 ;	spillPairReg hl
                                   4081 ;	spillPairReg hl
      0010C7 FAr48r00              4082 	ld	a, (_playerX + 1)
      0010CA 67                    4083 	ld	h, a
                                   4084 ;	spillPairReg hl
                                   4085 ;	spillPairReg hl
      0010CB 09                    4086 	add	hl, bc
      0010CC 4D                    4087 	ld	c, l
      0010CD 44                    4088 	ld	b, h
      0010CE 21r47r00              4089 	ld	hl, #_playerX
      0010D1 79                    4090 	ld	a, c
      0010D2 22                    4091 	ld	(hl+), a
                                   4092 ;main.c:440: uint16_t limitedPlayerX = u16Clamp(playerX, 58<<5, 110<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      0010D3 78                    4093 	ld	a, b
      0010D4 32                    4094 	ld	(hl-), a
      0010D5 2A                    4095 	ld	a, (hl+)
      0010D6 4F                    4096 	ld	c, a
      0010D7 46                    4097 	ld	b, (hl)
      0010D8 79                    4098 	ld	a, c
      0010D9 D6 40                 4099 	sub	a, #0x40
      0010DB 78                    4100 	ld	a, b
      0010DC DE 07                 4101 	sbc	a, #0x07
      0010DE 30 05                 4102 	jr	NC, 00167$
      0010E0 01 40 07              4103 	ld	bc, #0x0740
      0010E3 18 0B                 4104 	jr	00168$
      0010E5                       4105 00167$:
      0010E5 3E C0                 4106 	ld	a, #0xc0
      0010E7 B9                    4107 	cp	a, c
      0010E8 3E 0D                 4108 	ld	a, #0x0d
      0010EA 98                    4109 	sbc	a, b
      0010EB 30 03                 4110 	jr	NC, 00169$
      0010ED 01 C0 0D              4111 	ld	bc, #0x0dc0
      0010F0                       4112 00169$:
      0010F0                       4113 00168$:
      0010F0 59                    4114 	ld	e,c
      0010F1 50                    4115 	ld	d,b
                                   4116 ;main.c:442: xOverflow = (playerX - limitedPlayerX);
      0010F2 FAr47r00              4117 	ld	a, (#_playerX)
      0010F5 93                    4118 	sub	a, e
      0010F6 EAr51r00              4119 	ld	(#_xOverflow),a
      0010F9 FAr48r00              4120 	ld	a, (#_playerX + 1)
      0010FC 9A                    4121 	sbc	a, d
      0010FD 21r52r00              4122 	ld	hl, #_xOverflow + 1
                                   4123 ;main.c:443: if (xOverflow >= 0) {
      001100 32                    4124 	ld	(hl-), a
      001101 6E                    4125 	ld	l, (hl)
                                   4126 ;	spillPairReg hl
                                   4127 ;	spillPairReg hl
      001102 FAr52r00              4128 	ld	a, (_xOverflow + 1)
                                   4129 ;	spillPairReg hl
                                   4130 ;	spillPairReg hl
      001105 CB 7F                 4131 	bit	7,a
      001107 20 22                 4132 	jr	NZ, 00111$
                                   4133 ;main.c:444: xOverflow = xOverflow >> 5;
      001109 21r52r00              4134 	ld	hl, #_xOverflow + 1
      00110C CB 2E                 4135 	sra	(hl)
      00110E 2B                    4136 	dec	hl
      00110F CB 1E                 4137 	rr	(hl)
      001111 23                    4138 	inc	hl
      001112 CB 2E                 4139 	sra	(hl)
      001114 2B                    4140 	dec	hl
      001115 CB 1E                 4141 	rr	(hl)
      001117 23                    4142 	inc	hl
      001118 CB 2E                 4143 	sra	(hl)
      00111A 2B                    4144 	dec	hl
      00111B CB 1E                 4145 	rr	(hl)
      00111D 23                    4146 	inc	hl
      00111E CB 2E                 4147 	sra	(hl)
      001120 2B                    4148 	dec	hl
      001121 CB 1E                 4149 	rr	(hl)
      001123 23                    4150 	inc	hl
      001124 CB 2E                 4151 	sra	(hl)
      001126 2B                    4152 	dec	hl
      001127 CB 1E                 4153 	rr	(hl)
      001129 18 25                 4154 	jr	00112$
      00112B                       4155 00111$:
                                   4156 ;main.c:447: xOverflow = -((-xOverflow) >> 5);
      00112B AF                    4157 	xor	a, a
      00112C 21r51r00              4158 	ld	hl, #_xOverflow
      00112F 96                    4159 	sub	a, (hl)
      001130 23                    4160 	inc	hl
      001131 5F                    4161 	ld	e, a
      001132 9F                    4162 	sbc	a, a
      001133 96                    4163 	sub	a, (hl)
      001134 2B                    4164 	dec	hl
      001135 57                    4165 	ld	d, a
      001136 CB 2A                 4166 	sra	d
      001138 CB 1B                 4167 	rr	e
      00113A CB 2A                 4168 	sra	d
      00113C CB 1B                 4169 	rr	e
      00113E CB 2A                 4170 	sra	d
      001140 CB 1B                 4171 	rr	e
      001142 CB 2A                 4172 	sra	d
      001144 CB 1B                 4173 	rr	e
      001146 CB 2A                 4174 	sra	d
      001148 CB 1B                 4175 	rr	e
      00114A AF                    4176 	xor	a, a
      00114B 93                    4177 	sub	a, e
      00114C 22                    4178 	ld	(hl+), a
      00114D 9F                    4179 	sbc	a, a
      00114E 92                    4180 	sub	a, d
      00114F 77                    4181 	ld	(hl), a
      001150                       4182 00112$:
                                   4183 ;main.c:449: bgX += xOverflow;
      001150 FAr4Dr00              4184 	ld	a, (#_bgX)
      001153 21r51r00              4185 	ld	hl, #_xOverflow
      001156 86                    4186 	add	a, (hl)
      001157 21r4Dr00              4187 	ld	hl, #_bgX
      00115A 22                    4188 	ld	(hl+), a
      00115B 7E                    4189 	ld	a, (hl)
      00115C 21r52r00              4190 	ld	hl, #_xOverflow + 1
      00115F 8E                    4191 	adc	a, (hl)
      001160 EAr4Er00              4192 	ld	(#_bgX + 1),a
                                   4193 ;main.c:450: playerX = limitedPlayerX;
      001163 21r47r00              4194 	ld	hl, #_playerX
      001166 79                    4195 	ld	a, c
      001167 22                    4196 	ld	(hl+), a
                                   4197 ;main.c:451: playerDrawX=playerX >> 5;
      001168 78                    4198 	ld	a, b
      001169 32                    4199 	ld	(hl-), a
      00116A 2A                    4200 	ld	a, (hl+)
      00116B 4F                    4201 	ld	c, a
      00116C 46                    4202 	ld	b, (hl)
      00116D CB 38                 4203 	srl	b
      00116F CB 19                 4204 	rr	c
      001171 CB 38                 4205 	srl	b
      001173 CB 19                 4206 	rr	c
      001175 CB 38                 4207 	srl	b
      001177 CB 19                 4208 	rr	c
      001179 CB 38                 4209 	srl	b
      00117B CB 19                 4210 	rr	c
      00117D CB 38                 4211 	srl	b
      00117F CB 19                 4212 	rr	c
      001181 21r4Br00              4213 	ld	hl, #_playerDrawX
      001184 71                    4214 	ld	(hl), c
      001185 18 05                 4215 	jr	00115$
      001187                       4216 00114$:
                                   4217 ;main.c:459: xSpeed = 0;
      001187 21r45r00              4218 	ld	hl, #_xSpeed
      00118A 36 00                 4219 	ld	(hl), #0x00
      00118C                       4220 00115$:
                                   4221 ;main.c:467: uint8_t yCollisionPoint = playerDrawY -12; 
      00118C 21r4Cr00              4222 	ld	hl, #_playerDrawY
      00118F 4E                    4223 	ld	c, (hl)
      001190 79                    4224 	ld	a, c
      001191 C6 F4                 4225 	add	a, #0xf4
      001193 F8 07                 4226 	ldhl	sp,	#7
      001195 77                    4227 	ld	(hl), a
                                   4228 ;main.c:469: if (ySpeed > 0) {
      001196 21r46r00              4229 	ld	hl, #_ySpeed
      001199 5E                    4230 	ld	e, (hl)
      00119A AF                    4231 	xor	a, a
      00119B 57                    4232 	ld	d, a
      00119C 96                    4233 	sub	a, (hl)
      00119D CB 7B                 4234 	bit	7, e
      00119F 28 07                 4235 	jr	Z, 00339$
      0011A1 CB 7A                 4236 	bit	7, d
      0011A3 20 08                 4237 	jr	NZ, 00340$
      0011A5 BF                    4238 	cp	a, a
      0011A6 18 05                 4239 	jr	00340$
      0011A8                       4240 00339$:
      0011A8 CB 7A                 4241 	bit	7, d
      0011AA 28 01                 4242 	jr	Z, 00340$
      0011AC 37                    4243 	scf
      0011AD                       4244 00340$:
      0011AD 30 06                 4245 	jr	NC, 00117$
                                   4246 ;main.c:470: yCollisionPoint = playerDrawY - 8; //bottom edge, only half the height, so -8
      0011AF 79                    4247 	ld	a, c
      0011B0 C6 F8                 4248 	add	a, #0xf8
      0011B2 F8 07                 4249 	ldhl	sp,	#7
      0011B4 77                    4250 	ld	(hl), a
      0011B5                       4251 00117$:
                                   4252 ;main.c:472: if (ySpeed < 0) {
      0011B5 FAr46r00              4253 	ld	a, (#_ySpeed)
      0011B8 CB 7F                 4254 	bit	7, a
      0011BA 28 06                 4255 	jr	Z, 00119$
                                   4256 ;main.c:473: yCollisionPoint = playerDrawY -16; //top edge, 
      0011BC 79                    4257 	ld	a, c
      0011BD C6 F0                 4258 	add	a, #0xf0
      0011BF F8 07                 4259 	ldhl	sp,	#7
      0011C1 77                    4260 	ld	(hl), a
      0011C2                       4261 00119$:
                                   4262 ;main.c:477: bgindX = ((playerDrawX -4 + bgX) >> 3)%32;
      0011C2 FAr4Br00              4263 	ld	a, (#_playerDrawX)
      0011C5 F8 03                 4264 	ldhl	sp,	#3
      0011C7 22                    4265 	ld	(hl+), a
      0011C8 AF                    4266 	xor	a, a
      0011C9 32                    4267 	ld	(hl-), a
      0011CA 2A                    4268 	ld	a, (hl+)
      0011CB 5F                    4269 	ld	e, a
      0011CC 56                    4270 	ld	d, (hl)
      0011CD 21 04 00              4271 	ld	hl, #0x0004
      0011D0 7B                    4272 	ld	a, e
      0011D1 95                    4273 	sub	a, l
      0011D2 5F                    4274 	ld	e, a
      0011D3 7A                    4275 	ld	a, d
      0011D4 9C                    4276 	sbc	a, h
      0011D5 F8 06                 4277 	ldhl	sp,	#6
      0011D7 32                    4278 	ld	(hl-), a
      0011D8 73                    4279 	ld	(hl), e
      0011D9 3A                    4280 	ld	a, (hl-)
      0011DA 2B                    4281 	dec	hl
      0011DB 77                    4282 	ld	(hl), a
      0011DC F8 06                 4283 	ldhl	sp,	#6
      0011DE 3A                    4284 	ld	a, (hl-)
      0011DF 2B                    4285 	dec	hl
      0011E0 32                    4286 	ld	(hl-), a
      0011E1 2A                    4287 	ld	a, (hl+)
      0011E2 5F                    4288 	ld	e, a
      0011E3 56                    4289 	ld	d, (hl)
      0011E4 21r4Dr00              4290 	ld	hl, #_bgX
      0011E7 2A                    4291 	ld	a,	(hl+)
      0011E8 66                    4292 	ld	h, (hl)
      0011E9 6F                    4293 	ld	l, a
      0011EA 19                    4294 	add	hl, de
      0011EB E5                    4295 	push	hl
      0011EC 7D                    4296 	ld	a, l
      0011ED F8 07                 4297 	ldhl	sp,	#7
      0011EF 77                    4298 	ld	(hl), a
      0011F0 E1                    4299 	pop	hl
      0011F1 7C                    4300 	ld	a, h
      0011F2 F8 06                 4301 	ldhl	sp,	#6
      0011F4 77                    4302 	ld	(hl), a
      0011F5 CB 2E                 4303 	sra	(hl)
      0011F7 2B                    4304 	dec	hl
      0011F8 CB 1E                 4305 	rr	(hl)
      0011FA 23                    4306 	inc	hl
      0011FB CB 2E                 4307 	sra	(hl)
      0011FD 2B                    4308 	dec	hl
      0011FE CB 1E                 4309 	rr	(hl)
      001200 23                    4310 	inc	hl
      001201 CB 2E                 4311 	sra	(hl)
      001203 2B                    4312 	dec	hl
      001204 CB 1E                 4313 	rr	(hl)
      001206 11 20 00              4314 	ld	de, #0x0020
      001209 D5                    4315 	push	de
      00120A 2A                    4316 	ld	a, (hl+)
      00120B 5F                    4317 	ld	e, a
      00120C 56                    4318 	ld	d, (hl)
      00120D D5                    4319 	push	de
      00120E CDr00r00              4320 	call	__modsint
      001211 E8 04                 4321 	add	sp, #4
      001213 F8 05                 4322 	ldhl	sp,	#5
      001215 7B                    4323 	ld	a, e
      001216 22                    4324 	ld	(hl+), a
      001217 72                    4325 	ld	(hl), d
      001218 F8 05                 4326 	ldhl	sp,	#5
      00121A 7E                    4327 	ld	a, (hl)
      00121B F8 00                 4328 	ldhl	sp,	#0
      00121D 77                    4329 	ld	(hl), a
      00121E F8 06                 4330 	ldhl	sp,	#6
      001220 7E                    4331 	ld	a, (hl)
      001221 F8 01                 4332 	ldhl	sp,	#1
      001223 77                    4333 	ld	(hl), a
                                   4334 ;main.c:480: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001224 F8 07                 4335 	ldhl	sp,	#7
      001226 3A                    4336 	ld	a, (hl-)
      001227 22                    4337 	ld	(hl+), a
      001228 AF                    4338 	xor	a, a
      001229 32                    4339 	ld	(hl-), a
      00122A 3A                    4340 	ld	a, (hl-)
      00122B 2B                    4341 	dec	hl
      00122C 77                    4342 	ld	(hl), a
      00122D F8 07                 4343 	ldhl	sp,	#7
      00122F 3A                    4344 	ld	a, (hl-)
      001230 2B                    4345 	dec	hl
      001231 32                    4346 	ld	(hl-), a
      001232 2A                    4347 	ld	a, (hl+)
      001233 5F                    4348 	ld	e, a
      001234 56                    4349 	ld	d, (hl)
      001235 21r4Fr00              4350 	ld	hl, #_bgY
      001238 2A                    4351 	ld	a,	(hl+)
      001239 66                    4352 	ld	h, (hl)
      00123A 6F                    4353 	ld	l, a
      00123B 19                    4354 	add	hl, de
      00123C E5                    4355 	push	hl
      00123D 7D                    4356 	ld	a, l
      00123E F8 08                 4357 	ldhl	sp,	#8
      001240 77                    4358 	ld	(hl), a
      001241 E1                    4359 	pop	hl
      001242 7C                    4360 	ld	a, h
      001243 F8 07                 4361 	ldhl	sp,	#7
      001245 77                    4362 	ld	(hl), a
      001246 CB 2E                 4363 	sra	(hl)
      001248 2B                    4364 	dec	hl
      001249 CB 1E                 4365 	rr	(hl)
      00124B 23                    4366 	inc	hl
      00124C CB 2E                 4367 	sra	(hl)
      00124E 2B                    4368 	dec	hl
      00124F CB 1E                 4369 	rr	(hl)
      001251 23                    4370 	inc	hl
      001252 CB 2E                 4371 	sra	(hl)
      001254 2B                    4372 	dec	hl
      001255 CB 1E                 4373 	rr	(hl)
      001257 11 20 00              4374 	ld	de, #0x0020
      00125A D5                    4375 	push	de
      00125B 2A                    4376 	ld	a, (hl+)
      00125C 5F                    4377 	ld	e, a
      00125D 56                    4378 	ld	d, (hl)
      00125E D5                    4379 	push	de
      00125F CDr00r00              4380 	call	__modsint
      001262 E8 04                 4381 	add	sp, #4
      001264 F8 06                 4382 	ldhl	sp,	#6
      001266 7B                    4383 	ld	a, e
      001267 22                    4384 	ld	(hl+), a
      001268 72                    4385 	ld	(hl), d
      001269 F8 06                 4386 	ldhl	sp,	#6
      00126B 2A                    4387 	ld	a, (hl+)
      00126C 77                    4388 	ld	(hl), a
                                   4389 ;main.c:483: ind = 32*bgindY + bgindX;
      00126D 3A                    4390 	ld	a, (hl-)
      00126E 22                    4391 	ld	(hl+), a
      00126F 36 00                 4392 	ld	(hl), #0x00
      001271 3E 05                 4393 	ld	a, #0x05
      001273                       4394 00341$:
      001273 F8 06                 4395 	ldhl	sp,	#6
      001275 CB 26                 4396 	sla	(hl)
      001277 23                    4397 	inc	hl
      001278 CB 16                 4398 	rl	(hl)
      00127A 3D                    4399 	dec	a
      00127B 20 F6                 4400 	jr	NZ, 00341$
      00127D 2B                    4401 	dec	hl
      00127E 3A                    4402 	ld	a, (hl-)
      00127F 2B                    4403 	dec	hl
      001280 77                    4404 	ld	(hl), a
      001281 F8 07                 4405 	ldhl	sp,	#7
      001283 3A                    4406 	ld	a, (hl-)
      001284 2B                    4407 	dec	hl
      001285 77                    4408 	ld	(hl), a
      001286 D1                    4409 	pop	de
      001287 D5                    4410 	push	de
      001288 3A                    4411 	ld	a, (hl-)
      001289 6E                    4412 	ld	l, (hl)
      00128A 67                    4413 	ld	h, a
      00128B 19                    4414 	add	hl, de
      00128C E5                    4415 	push	hl
      00128D 7D                    4416 	ld	a, l
      00128E F8 08                 4417 	ldhl	sp,	#8
      001290 77                    4418 	ld	(hl), a
      001291 E1                    4419 	pop	hl
      001292 7C                    4420 	ld	a, h
      001293 F8 07                 4421 	ldhl	sp,	#7
      001295 77                    4422 	ld	(hl), a
                                   4423 ;main.c:484: result = 1;
      001296 F8 03                 4424 	ldhl	sp,	#3
      001298 36 01                 4425 	ld	(hl), #0x01
                                   4426 ;main.c:485: for (uint8_t j=0; j<BLANKSIZE; j++) {
      00129A F8 06                 4427 	ldhl	sp,#6
      00129C 2A                    4428 	ld	a, (hl+)
      00129D 5F                    4429 	ld	e, a
      00129E 56                    4430 	ld	d, (hl)
      00129F 21r87r00              4431 	ld	hl, #_background1
      0012A2 19                    4432 	add	hl, de
      0012A3 4D                    4433 	ld	c, l
      0012A4 44                    4434 	ld	b, h
      0012A5 0A                    4435 	ld	a, (bc)
      0012A6 F8 04                 4436 	ldhl	sp,	#4
      0012A8 77                    4437 	ld	(hl), a
      0012A9 F8 07                 4438 	ldhl	sp,	#7
      0012AB 36 00                 4439 	ld	(hl), #0x00
      0012AD                       4440 00155$:
      0012AD F8 07                 4441 	ldhl	sp,	#7
      0012AF 7E                    4442 	ld	a, (hl)
      0012B0 F8 02                 4443 	ldhl	sp,	#2
      0012B2 96                    4444 	sub	a, (hl)
      0012B3 30 29                 4445 	jr	NC, 00122$
                                   4446 ;main.c:486: if (background1[ind] == BLANK[j] ) {
      0012B5 11rC8r05              4447 	ld	de, #_BLANK
      0012B8 F8 07                 4448 	ldhl	sp,	#7
      0012BA 6E                    4449 	ld	l, (hl)
      0012BB 26 00                 4450 	ld	h, #0x00
      0012BD 19                    4451 	add	hl, de
      0012BE E5                    4452 	push	hl
      0012BF 7D                    4453 	ld	a, l
      0012C0 F8 07                 4454 	ldhl	sp,	#7
      0012C2 77                    4455 	ld	(hl), a
      0012C3 E1                    4456 	pop	hl
      0012C4 7C                    4457 	ld	a, h
      0012C5 F8 06                 4458 	ldhl	sp,	#6
      0012C7 32                    4459 	ld	(hl-), a
      0012C8 2A                    4460 	ld	a, (hl+)
      0012C9 5F                    4461 	ld	e, a
      0012CA 3A                    4462 	ld	a, (hl-)
      0012CB 2B                    4463 	dec	hl
      0012CC 57                    4464 	ld	d, a
      0012CD 1A                    4465 	ld	a, (de)
      0012CE 4F                    4466 	ld	c, a
      0012CF 7E                    4467 	ld	a, (hl)
      0012D0 91                    4468 	sub	a, c
      0012D1 20 06                 4469 	jr	NZ, 00156$
                                   4470 ;main.c:487: result = 0;
      0012D3 F8 03                 4471 	ldhl	sp,	#3
      0012D5 36 00                 4472 	ld	(hl), #0x00
                                   4473 ;main.c:488: break;
      0012D7 18 05                 4474 	jr	00122$
      0012D9                       4475 00156$:
                                   4476 ;main.c:485: for (uint8_t j=0; j<BLANKSIZE; j++) {
      0012D9 F8 07                 4477 	ldhl	sp,	#7
      0012DB 34                    4478 	inc	(hl)
      0012DC 18 CF                 4479 	jr	00155$
      0012DE                       4480 00122$:
                                   4481 ;main.c:491: if (result == 0) {
      0012DE F8 03                 4482 	ldhl	sp,	#3
      0012E0 7E                    4483 	ld	a, (hl)
      0012E1 B7                    4484 	or	a, a
      0012E2 C2rAFr13              4485 	jp	NZ, 00127$
                                   4486 ;main.c:492: playerY += ySpeed;
      0012E5 FAr46r00              4487 	ld	a, (#_ySpeed)
      0012E8 4F                    4488 	ld	c, a
      0012E9 07                    4489 	rlca
      0012EA 9F                    4490 	sbc	a, a
      0012EB 21r49r00              4491 	ld	hl, #_playerY
      0012EE 5E                    4492 	ld	e, (hl)
      0012EF 23                    4493 	inc	hl
      0012F0 56                    4494 	ld	d, (hl)
      0012F1 2B                    4495 	dec	hl
      0012F2 47                    4496 	ld	b, a
      0012F3 79                    4497 	ld	a, c
      0012F4 83                    4498 	add	a, e
      0012F5 4F                    4499 	ld	c, a
      0012F6 78                    4500 	ld	a, b
      0012F7 8A                    4501 	adc	a, d
      0012F8 47                    4502 	ld	b, a
      0012F9 79                    4503 	ld	a, c
      0012FA 22                    4504 	ld	(hl+), a
                                   4505 ;main.c:494: uint16_t limitedPlayerY = u16Clamp(playerY, 61<<5, 107<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      0012FB 78                    4506 	ld	a, b
      0012FC 32                    4507 	ld	(hl-), a
      0012FD 2A                    4508 	ld	a, (hl+)
      0012FE 5F                    4509 	ld	e, a
      0012FF 56                    4510 	ld	d, (hl)
      001300 7B                    4511 	ld	a, e
      001301 D6 A0                 4512 	sub	a, #0xa0
      001303 7A                    4513 	ld	a, d
      001304 DE 07                 4514 	sbc	a, #0x07
      001306 30 05                 4515 	jr	NC, 00171$
      001308 11 A0 07              4516 	ld	de, #0x07a0
      00130B 18 0B                 4517 	jr	00172$
      00130D                       4518 00171$:
      00130D 3E 60                 4519 	ld	a, #0x60
      00130F BB                    4520 	cp	a, e
      001310 3E 0D                 4521 	ld	a, #0x0d
      001312 9A                    4522 	sbc	a, d
      001313 30 03                 4523 	jr	NC, 00173$
      001315 11 60 0D              4524 	ld	de, #0x0d60
      001318                       4525 00173$:
      001318                       4526 00172$:
      001318 4B                    4527 	ld	c, e
      001319 42                    4528 	ld	b, d
                                   4529 ;main.c:496: yOverflow = (playerY - limitedPlayerY);
      00131A FAr49r00              4530 	ld	a, (#_playerY)
      00131D 93                    4531 	sub	a, e
      00131E EAr53r00              4532 	ld	(#_yOverflow),a
      001321 FAr4Ar00              4533 	ld	a, (#_playerY + 1)
      001324 9A                    4534 	sbc	a, d
      001325 21r54r00              4535 	ld	hl, #_yOverflow + 1
                                   4536 ;main.c:497: if (yOverflow >= 0) {
      001328 32                    4537 	ld	(hl-), a
      001329 6E                    4538 	ld	l, (hl)
                                   4539 ;	spillPairReg hl
                                   4540 ;	spillPairReg hl
      00132A FAr54r00              4541 	ld	a, (_yOverflow + 1)
                                   4542 ;	spillPairReg hl
                                   4543 ;	spillPairReg hl
      00132D CB 7F                 4544 	bit	7,a
      00132F 20 22                 4545 	jr	NZ, 00124$
                                   4546 ;main.c:498: yOverflow = yOverflow >> 5;
      001331 21r54r00              4547 	ld	hl, #_yOverflow + 1
      001334 CB 2E                 4548 	sra	(hl)
      001336 2B                    4549 	dec	hl
      001337 CB 1E                 4550 	rr	(hl)
      001339 23                    4551 	inc	hl
      00133A CB 2E                 4552 	sra	(hl)
      00133C 2B                    4553 	dec	hl
      00133D CB 1E                 4554 	rr	(hl)
      00133F 23                    4555 	inc	hl
      001340 CB 2E                 4556 	sra	(hl)
      001342 2B                    4557 	dec	hl
      001343 CB 1E                 4558 	rr	(hl)
      001345 23                    4559 	inc	hl
      001346 CB 2E                 4560 	sra	(hl)
      001348 2B                    4561 	dec	hl
      001349 CB 1E                 4562 	rr	(hl)
      00134B 23                    4563 	inc	hl
      00134C CB 2E                 4564 	sra	(hl)
      00134E 2B                    4565 	dec	hl
      00134F CB 1E                 4566 	rr	(hl)
      001351 18 25                 4567 	jr	00125$
      001353                       4568 00124$:
                                   4569 ;main.c:501: yOverflow = -((-yOverflow) >> 5);
      001353 AF                    4570 	xor	a, a
      001354 21r53r00              4571 	ld	hl, #_yOverflow
      001357 96                    4572 	sub	a, (hl)
      001358 23                    4573 	inc	hl
      001359 5F                    4574 	ld	e, a
      00135A 9F                    4575 	sbc	a, a
      00135B 96                    4576 	sub	a, (hl)
      00135C 2B                    4577 	dec	hl
      00135D 57                    4578 	ld	d, a
      00135E CB 2A                 4579 	sra	d
      001360 CB 1B                 4580 	rr	e
      001362 CB 2A                 4581 	sra	d
      001364 CB 1B                 4582 	rr	e
      001366 CB 2A                 4583 	sra	d
      001368 CB 1B                 4584 	rr	e
      00136A CB 2A                 4585 	sra	d
      00136C CB 1B                 4586 	rr	e
      00136E CB 2A                 4587 	sra	d
      001370 CB 1B                 4588 	rr	e
      001372 AF                    4589 	xor	a, a
      001373 93                    4590 	sub	a, e
      001374 22                    4591 	ld	(hl+), a
      001375 9F                    4592 	sbc	a, a
      001376 92                    4593 	sub	a, d
      001377 77                    4594 	ld	(hl), a
      001378                       4595 00125$:
                                   4596 ;main.c:503: bgY += yOverflow;
      001378 FAr4Fr00              4597 	ld	a, (#_bgY)
      00137B 21r53r00              4598 	ld	hl, #_yOverflow
      00137E 86                    4599 	add	a, (hl)
      00137F 21r4Fr00              4600 	ld	hl, #_bgY
      001382 22                    4601 	ld	(hl+), a
      001383 7E                    4602 	ld	a, (hl)
      001384 21r54r00              4603 	ld	hl, #_yOverflow + 1
      001387 8E                    4604 	adc	a, (hl)
      001388 EAr50r00              4605 	ld	(#_bgY + 1),a
                                   4606 ;main.c:504: playerY = limitedPlayerY;
      00138B 21r49r00              4607 	ld	hl, #_playerY
      00138E 79                    4608 	ld	a, c
      00138F 22                    4609 	ld	(hl+), a
                                   4610 ;main.c:505: playerDrawY=playerY >> 5;
      001390 78                    4611 	ld	a, b
      001391 32                    4612 	ld	(hl-), a
      001392 2A                    4613 	ld	a, (hl+)
      001393 4F                    4614 	ld	c, a
      001394 46                    4615 	ld	b, (hl)
      001395 CB 38                 4616 	srl	b
      001397 CB 19                 4617 	rr	c
      001399 CB 38                 4618 	srl	b
      00139B CB 19                 4619 	rr	c
      00139D CB 38                 4620 	srl	b
      00139F CB 19                 4621 	rr	c
      0013A1 CB 38                 4622 	srl	b
      0013A3 CB 19                 4623 	rr	c
      0013A5 CB 38                 4624 	srl	b
      0013A7 CB 19                 4625 	rr	c
      0013A9 21r4Cr00              4626 	ld	hl, #_playerDrawY
      0013AC 71                    4627 	ld	(hl), c
      0013AD 18 05                 4628 	jr	00128$
      0013AF                       4629 00127$:
                                   4630 ;main.c:510: ySpeed = 0;
      0013AF 21r46r00              4631 	ld	hl, #_ySpeed
      0013B2 36 00                 4632 	ld	(hl), #0x00
      0013B4                       4633 00128$:
                                   4634 ;main.c:514: move_sprite(0, playerDrawX, playerDrawY);
      0013B4 21r4Cr00              4635 	ld	hl, #_playerDrawY
      0013B7 4E                    4636 	ld	c, (hl)
      0013B8 21r4Br00              4637 	ld	hl, #_playerDrawX
      0013BB 46                    4638 	ld	b, (hl)
                                   4639 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0013BC 21r00r00              4640 	ld	hl, #_shadow_OAM
                                   4641 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0013BF 79                    4642 	ld	a, c
      0013C0 22                    4643 	ld	(hl+), a
      0013C1 70                    4644 	ld	(hl), b
                                   4645 ;main.c:517: if (bgX >= 256) {
      0013C2 21r4Dr00              4646 	ld	hl, #_bgX
      0013C5 2A                    4647 	ld	a, (hl+)
      0013C6 4F                    4648 	ld	c, a
      0013C7 46                    4649 	ld	b, (hl)
      0013C8 78                    4650 	ld	a, b
      0013C9 EE 80                 4651 	xor	a, #0x80
      0013CB D6 81                 4652 	sub	a, #0x81
      0013CD 38 0F                 4653 	jr	C, 00130$
                                   4654 ;main.c:518: bgX = bgX % 256;
      0013CF AF                    4655 	xor	a, a
      0013D0 3C                    4656 	inc	a
      0013D1 F5                    4657 	push	af
      0013D2 C5                    4658 	push	bc
      0013D3 CDr00r00              4659 	call	__modsint
      0013D6 E8 04                 4660 	add	sp, #4
      0013D8 21r4Dr00              4661 	ld	hl, #_bgX
      0013DB 7B                    4662 	ld	a, e
      0013DC 22                    4663 	ld	(hl+), a
      0013DD 72                    4664 	ld	(hl), d
      0013DE                       4665 00130$:
                                   4666 ;main.c:520: if (bgX < 0) {
      0013DE 21r4Dr00              4667 	ld	hl, #_bgX
      0013E1 2A                    4668 	ld	a, (hl+)
      0013E2 4F                    4669 	ld	c, a
      0013E3 46                    4670 	ld	b, (hl)
      0013E4 CB 78                 4671 	bit	7, b
      0013E6 28 15                 4672 	jr	Z, 00132$
                                   4673 ;main.c:521: bgX = 255 - (bgX % 256);
      0013E8 AF                    4674 	xor	a, a
      0013E9 3C                    4675 	inc	a
      0013EA F5                    4676 	push	af
      0013EB C5                    4677 	push	bc
      0013EC CDr00r00              4678 	call	__modsint
      0013EF E8 04                 4679 	add	sp, #4
      0013F1 3E FF                 4680 	ld	a, #0xff
      0013F3 93                    4681 	sub	a, e
      0013F4 4F                    4682 	ld	c, a
      0013F5 9F                    4683 	sbc	a, a
      0013F6 92                    4684 	sub	a, d
      0013F7 21r4Dr00              4685 	ld	hl, #_bgX
      0013FA 71                    4686 	ld	(hl), c
      0013FB 23                    4687 	inc	hl
      0013FC 77                    4688 	ld	(hl), a
      0013FD                       4689 00132$:
                                   4690 ;main.c:523: if (bgY >= 256) {
      0013FD 21r4Fr00              4691 	ld	hl, #_bgY
      001400 2A                    4692 	ld	a, (hl+)
      001401 4F                    4693 	ld	c, a
      001402 46                    4694 	ld	b, (hl)
      001403 78                    4695 	ld	a, b
      001404 EE 80                 4696 	xor	a, #0x80
      001406 D6 81                 4697 	sub	a, #0x81
      001408 38 0F                 4698 	jr	C, 00134$
                                   4699 ;main.c:524: bgY = bgY % 256;
      00140A AF                    4700 	xor	a, a
      00140B 3C                    4701 	inc	a
      00140C F5                    4702 	push	af
      00140D C5                    4703 	push	bc
      00140E CDr00r00              4704 	call	__modsint
      001411 E8 04                 4705 	add	sp, #4
      001413 21r4Fr00              4706 	ld	hl, #_bgY
      001416 7B                    4707 	ld	a, e
      001417 22                    4708 	ld	(hl+), a
      001418 72                    4709 	ld	(hl), d
      001419                       4710 00134$:
                                   4711 ;main.c:526: if (bgY < 0) {
      001419 21r4Fr00              4712 	ld	hl, #_bgY
      00141C 2A                    4713 	ld	a, (hl+)
      00141D 4F                    4714 	ld	c, a
      00141E 46                    4715 	ld	b, (hl)
      00141F CB 78                 4716 	bit	7, b
      001421 28 15                 4717 	jr	Z, 00136$
                                   4718 ;main.c:527: bgY = 255 - (bgY % 256);
      001423 AF                    4719 	xor	a, a
      001424 3C                    4720 	inc	a
      001425 F5                    4721 	push	af
      001426 C5                    4722 	push	bc
      001427 CDr00r00              4723 	call	__modsint
      00142A E8 04                 4724 	add	sp, #4
      00142C 3E FF                 4725 	ld	a, #0xff
      00142E 93                    4726 	sub	a, e
      00142F 4F                    4727 	ld	c, a
      001430 9F                    4728 	sbc	a, a
      001431 92                    4729 	sub	a, d
      001432 21r4Fr00              4730 	ld	hl, #_bgY
      001435 71                    4731 	ld	(hl), c
      001436 23                    4732 	inc	hl
      001437 77                    4733 	ld	(hl), a
      001438                       4734 00136$:
                                   4735 ;main.c:530: move_bkg(bgX, bgY);
      001438 21r4Fr00              4736 	ld	hl, #_bgY
      00143B 4E                    4737 	ld	c, (hl)
      00143C FAr4Dr00              4738 	ld	a, (#_bgX)
      00143F E0r00                 4739 	ldh	(_SCX_REG + 0), a
                                   4740 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001441 79                    4741 	ld	a, c
      001442 E0r00                 4742 	ldh	(_SCY_REG + 0), a
                                   4743 ;main.c:533: if (ySpeed > 0) ySpeed--;
      001444 21r46r00              4744 	ld	hl, #_ySpeed
      001447 5E                    4745 	ld	e, (hl)
      001448 AF                    4746 	xor	a, a
      001449 57                    4747 	ld	d, a
      00144A 96                    4748 	sub	a, (hl)
      00144B CB 7B                 4749 	bit	7, e
      00144D 28 07                 4750 	jr	Z, 00344$
      00144F CB 7A                 4751 	bit	7, d
      001451 20 08                 4752 	jr	NZ, 00345$
      001453 BF                    4753 	cp	a, a
      001454 18 05                 4754 	jr	00345$
      001456                       4755 00344$:
      001456 CB 7A                 4756 	bit	7, d
      001458 28 01                 4757 	jr	Z, 00345$
      00145A 37                    4758 	scf
      00145B                       4759 00345$:
      00145B 30 04                 4760 	jr	NC, 00138$
      00145D 21r46r00              4761 	ld	hl, #_ySpeed
      001460 35                    4762 	dec	(hl)
      001461                       4763 00138$:
                                   4764 ;main.c:534: if (ySpeed < 0) ySpeed++;
      001461 21r46r00              4765 	ld	hl, #_ySpeed
      001464 CB 7E                 4766 	bit	7, (hl)
      001466 28 01                 4767 	jr	Z, 00140$
      001468 34                    4768 	inc	(hl)
      001469                       4769 00140$:
                                   4770 ;main.c:535: if (xSpeed > 0) xSpeed--;
      001469 21r45r00              4771 	ld	hl, #_xSpeed
      00146C 5E                    4772 	ld	e, (hl)
      00146D AF                    4773 	xor	a, a
      00146E 57                    4774 	ld	d, a
      00146F 96                    4775 	sub	a, (hl)
      001470 CB 7B                 4776 	bit	7, e
      001472 28 07                 4777 	jr	Z, 00346$
      001474 CB 7A                 4778 	bit	7, d
      001476 20 08                 4779 	jr	NZ, 00347$
      001478 BF                    4780 	cp	a, a
      001479 18 05                 4781 	jr	00347$
      00147B                       4782 00346$:
      00147B CB 7A                 4783 	bit	7, d
      00147D 28 01                 4784 	jr	Z, 00347$
      00147F 37                    4785 	scf
      001480                       4786 00347$:
      001480 30 04                 4787 	jr	NC, 00142$
      001482 21r45r00              4788 	ld	hl, #_xSpeed
      001485 35                    4789 	dec	(hl)
      001486                       4790 00142$:
                                   4791 ;main.c:536: if (xSpeed < 0) xSpeed++;
      001486 21r45r00              4792 	ld	hl, #_xSpeed
      001489 CB 7E                 4793 	bit	7, (hl)
      00148B 28 01                 4794 	jr	Z, 00157$
      00148D 34                    4795 	inc	(hl)
      00148E                       4796 00157$:
                                   4797 ;main.c:540: }
      00148E E8 08                 4798 	add	sp, #8
      001490 C9                    4799 	ret
                                   4800 ;main.c:542: void takeDamage(int16_t amount) {
                                   4801 ;	---------------------------------
                                   4802 ; Function takeDamage
                                   4803 ; ---------------------------------
      001491                       4804 _takeDamage::
      001491 3B                    4805 	dec	sp
                                   4806 ;main.c:543: if (amount > shield) {
      001492 FAr89r00              4807 	ld	a, (#_shield)
      001495 4F                    4808 	ld	c, a
      001496 07                    4809 	rlca
      001497 9F                    4810 	sbc	a, a
      001498 47                    4811 	ld	b, a
                                   4812 ;main.c:545: hull -= (amount - shield);
      001499 F8 03                 4813 	ldhl	sp,	#3
      00149B 7E                    4814 	ld	a, (hl)
      00149C F8 00                 4815 	ldhl	sp,	#0
      00149E 77                    4816 	ld	(hl), a
                                   4817 ;main.c:543: if (amount > shield) {
      00149F F8 03                 4818 	ldhl	sp,	#3
      0014A1 79                    4819 	ld	a, c
      0014A2 96                    4820 	sub	a, (hl)
      0014A3 23                    4821 	inc	hl
      0014A4 78                    4822 	ld	a, b
      0014A5 9E                    4823 	sbc	a, (hl)
      0014A6 78                    4824 	ld	a, b
      0014A7 57                    4825 	ld	d, a
      0014A8 CB 7E                 4826 	bit	7, (hl)
      0014AA 28 07                 4827 	jr	Z, 00111$
      0014AC CB 7A                 4828 	bit	7, d
      0014AE 20 08                 4829 	jr	NZ, 00112$
      0014B0 BF                    4830 	cp	a, a
      0014B1 18 05                 4831 	jr	00112$
      0014B3                       4832 00111$:
      0014B3 CB 7A                 4833 	bit	7, d
      0014B5 28 01                 4834 	jr	Z, 00112$
      0014B7 37                    4835 	scf
      0014B8                       4836 00112$:
      0014B8 30 10                 4837 	jr	NC, 00102$
                                   4838 ;main.c:544: shield = 0;
      0014BA 21r89r00              4839 	ld	hl, #_shield
      0014BD 36 00                 4840 	ld	(hl), #0x00
                                   4841 ;main.c:545: hull -= (amount - shield);
      0014BF FAr88r00              4842 	ld	a, (#_hull)
      0014C2 F8 00                 4843 	ldhl	sp,	#0
      0014C4 96                    4844 	sub	a, (hl)
      0014C5 EAr88r00              4845 	ld	(#_hull),a
      0014C8 18 09                 4846 	jr	00104$
      0014CA                       4847 00102$:
                                   4848 ;main.c:548: shield -= amount;
      0014CA FAr89r00              4849 	ld	a, (#_shield)
      0014CD F8 00                 4850 	ldhl	sp,	#0
      0014CF 96                    4851 	sub	a, (hl)
      0014D0 EAr89r00              4852 	ld	(#_shield),a
      0014D3                       4853 00104$:
                                   4854 ;main.c:550: }
      0014D3 33                    4855 	inc	sp
      0014D4 C9                    4856 	ret
                                   4857 ;main.c:552: void checkCollision() {
                                   4858 ;	---------------------------------
                                   4859 ; Function checkCollision
                                   4860 ; ---------------------------------
      0014D5                       4861 _checkCollision::
      0014D5 E8 ED                 4862 	add	sp, #-19
                                   4863 ;main.c:559: struct Enemy *eptr = enemies;
                                   4864 ;main.c:562: while (i < ENEMYCOUNT) {
      0014D7 21rCCr05              4865 	ld	hl, #_ENEMYCOUNT
      0014DA 4E                    4866 	ld	c, (hl)
      0014DB AF                    4867 	xor	a, a
      0014DC 91                    4868 	sub	a, c
      0014DD D2r20r18              4869 	jp	NC, 00123$
                                   4870 ;main.c:563: eptr += enemyCollisionCount;
      0014E0 21r55r00              4871 	ld	hl, #_enemyCollisionCount
      0014E3 6E                    4872 	ld	l, (hl)
                                   4873 ;	spillPairReg hl
                                   4874 ;	spillPairReg hl
      0014E4 26 00                 4875 	ld	h, #0x00
                                   4876 ;	spillPairReg hl
                                   4877 ;	spillPairReg hl
      0014E6 29                    4878 	add	hl, hl
      0014E7 29                    4879 	add	hl, hl
      0014E8 29                    4880 	add	hl, hl
      0014E9 29                    4881 	add	hl, hl
      0014EA 11r00r00              4882 	ld	de, #_enemies
      0014ED 19                    4883 	add	hl, de
      0014EE 4D                    4884 	ld	c, l
      0014EF 44                    4885 	ld	b, h
                                   4886 ;main.c:564: if (eptr->visible && eptr->alive) {
      0014F0 21 0A 00              4887 	ld	hl, #0x000a
      0014F3 09                    4888 	add	hl, bc
      0014F4 7E                    4889 	ld	a, (hl)
      0014F5 B7                    4890 	or	a, a
      0014F6 CAr4Fr16              4891 	jp	Z, 00108$
      0014F9 21 09 00              4892 	ld	hl, #0x0009
      0014FC 09                    4893 	add	hl, bc
      0014FD E5                    4894 	push	hl
      0014FE 7D                    4895 	ld	a, l
      0014FF F8 0B                 4896 	ldhl	sp,	#11
      001501 77                    4897 	ld	(hl), a
      001502 E1                    4898 	pop	hl
      001503 7C                    4899 	ld	a, h
      001504 F8 0A                 4900 	ldhl	sp,	#10
      001506 32                    4901 	ld	(hl-), a
      001507 2A                    4902 	ld	a, (hl+)
      001508 5F                    4903 	ld	e, a
      001509 56                    4904 	ld	d, (hl)
      00150A 1A                    4905 	ld	a, (de)
      00150B B7                    4906 	or	a, a
      00150C CAr4Fr16              4907 	jp	Z, 00108$
                                   4908 ;main.c:566: if (eptr->x > playerDrawX - PLAYERSIZE && eptr->x - (8>>(eptr->spriteCount-1)) < playerDrawX) 
      00150F 59                    4909 	ld	e, c
      001510 50                    4910 	ld	d, b
      001511 1A                    4911 	ld	a, (de)
      001512 F8 0F                 4912 	ldhl	sp,	#15
      001514 22                    4913 	ld	(hl+), a
      001515 13                    4914 	inc	de
      001516 1A                    4915 	ld	a, (de)
      001517 77                    4916 	ld	(hl), a
      001518 FAr4Br00              4917 	ld	a, (#_playerDrawX)
      00151B F8 0D                 4918 	ldhl	sp,	#13
      00151D 22                    4919 	ld	(hl+), a
      00151E 36 00                 4920 	ld	(hl), #0x00
      001520 FArDEr05              4921 	ld	a, (#_PLAYERSIZE)
      001523 F8 07                 4922 	ldhl	sp,	#7
      001525 22                    4923 	ld	(hl+), a
      001526 36 00                 4924 	ld	(hl), #0x00
      001528 F8 0D                 4925 	ldhl	sp,#13
      00152A 2A                    4926 	ld	a, (hl+)
      00152B 5F                    4927 	ld	e, a
      00152C 56                    4928 	ld	d, (hl)
      00152D F8 07                 4929 	ldhl	sp,	#7
      00152F 2A                    4930 	ld	a,	(hl+)
      001530 66                    4931 	ld	h, (hl)
      001531 6F                    4932 	ld	l, a
      001532 7B                    4933 	ld	a, e
      001533 95                    4934 	sub	a, l
      001534 5F                    4935 	ld	e, a
      001535 7A                    4936 	ld	a, d
      001536 9C                    4937 	sbc	a, h
      001537 F8 12                 4938 	ldhl	sp,	#18
      001539 32                    4939 	ld	(hl-), a
      00153A 73                    4940 	ld	(hl), e
      00153B F8 11                 4941 	ldhl	sp,	#17
      00153D 5D                    4942 	ld	e, l
      00153E 54                    4943 	ld	d, h
      00153F F8 0F                 4944 	ldhl	sp,	#15
      001541 1A                    4945 	ld	a, (de)
      001542 13                    4946 	inc	de
      001543 96                    4947 	sub	a, (hl)
      001544 23                    4948 	inc	hl
      001545 1A                    4949 	ld	a, (de)
      001546 9E                    4950 	sbc	a, (hl)
      001547 1A                    4951 	ld	a, (de)
      001548 57                    4952 	ld	d, a
      001549 5E                    4953 	ld	e, (hl)
      00154A CB 7B                 4954 	bit	7, e
      00154C 28 07                 4955 	jr	Z, 00208$
      00154E CB 7A                 4956 	bit	7, d
      001550 20 08                 4957 	jr	NZ, 00209$
      001552 BF                    4958 	cp	a, a
      001553 18 05                 4959 	jr	00209$
      001555                       4960 00208$:
      001555 CB 7A                 4961 	bit	7, d
      001557 28 01                 4962 	jr	Z, 00209$
      001559 37                    4963 	scf
      00155A                       4964 00209$:
      00155A D2r4Fr16              4965 	jp	NC, 00108$
      00155D 21 08 00              4966 	ld	hl, #0x0008
      001560 09                    4967 	add	hl, bc
      001561 5E                    4968 	ld	e, (hl)
      001562 1D                    4969 	dec	e
      001563 F8 0B                 4970 	ldhl	sp,	#11
      001565 3E 08                 4971 	ld	a, #0x08
      001567 22                    4972 	ld	(hl+), a
      001568 AF                    4973 	xor	a, a
      001569 77                    4974 	ld	(hl), a
      00156A 1C                    4975 	inc	e
      00156B 18 07                 4976 	jr	00211$
      00156D                       4977 00210$:
      00156D F8 0C                 4978 	ldhl	sp,	#12
      00156F CB 2E                 4979 	sra	(hl)
      001571 2B                    4980 	dec	hl
      001572 CB 1E                 4981 	rr	(hl)
      001574                       4982 00211$:
      001574 1D                    4983 	dec	e
      001575 20 F6                 4984 	jr	NZ, 00210$
      001577 F8 0F                 4985 	ldhl	sp,#15
      001579 2A                    4986 	ld	a, (hl+)
      00157A 5F                    4987 	ld	e, a
      00157B 56                    4988 	ld	d, (hl)
      00157C F8 0B                 4989 	ldhl	sp,	#11
      00157E 2A                    4990 	ld	a,	(hl+)
      00157F 66                    4991 	ld	h, (hl)
      001580 6F                    4992 	ld	l, a
      001581 7B                    4993 	ld	a, e
      001582 95                    4994 	sub	a, l
      001583 5F                    4995 	ld	e, a
      001584 7A                    4996 	ld	a, d
      001585 9C                    4997 	sbc	a, h
      001586 F8 12                 4998 	ldhl	sp,	#18
      001588 32                    4999 	ld	(hl-), a
      001589 73                    5000 	ld	(hl), e
      00158A F8 11                 5001 	ldhl	sp,	#17
      00158C 5D                    5002 	ld	e, l
      00158D 54                    5003 	ld	d, h
      00158E F8 0D                 5004 	ldhl	sp,	#13
      001590 1A                    5005 	ld	a, (de)
      001591 13                    5006 	inc	de
      001592 96                    5007 	sub	a, (hl)
      001593 23                    5008 	inc	hl
      001594 1A                    5009 	ld	a, (de)
      001595 9E                    5010 	sbc	a, (hl)
      001596 1A                    5011 	ld	a, (de)
      001597 57                    5012 	ld	d, a
      001598 5E                    5013 	ld	e, (hl)
      001599 CB 7B                 5014 	bit	7, e
      00159B 28 07                 5015 	jr	Z, 00212$
      00159D CB 7A                 5016 	bit	7, d
      00159F 20 08                 5017 	jr	NZ, 00213$
      0015A1 BF                    5018 	cp	a, a
      0015A2 18 05                 5019 	jr	00213$
      0015A4                       5020 00212$:
      0015A4 CB 7A                 5021 	bit	7, d
      0015A6 28 01                 5022 	jr	Z, 00213$
      0015A8 37                    5023 	scf
      0015A9                       5024 00213$:
      0015A9 D2r4Fr16              5025 	jp	NC, 00108$
                                   5026 ;main.c:568: if (eptr->y > playerDrawY - PLAYERSIZE && eptr->y -(8>>(eptr->spriteCount-1)) < playerDrawY) {
      0015AC 69                    5027 	ld	l, c
                                   5028 ;	spillPairReg hl
                                   5029 ;	spillPairReg hl
      0015AD 60                    5030 	ld	h, b
                                   5031 ;	spillPairReg hl
                                   5032 ;	spillPairReg hl
      0015AE 23                    5033 	inc	hl
      0015AF 23                    5034 	inc	hl
      0015B0 5D                    5035 	ld	e, l
      0015B1 54                    5036 	ld	d, h
      0015B2 1A                    5037 	ld	a, (de)
      0015B3 F8 11                 5038 	ldhl	sp,	#17
      0015B5 22                    5039 	ld	(hl+), a
      0015B6 13                    5040 	inc	de
      0015B7 1A                    5041 	ld	a, (de)
      0015B8 77                    5042 	ld	(hl), a
      0015B9 FAr4Cr00              5043 	ld	a, (#_playerDrawY)
      0015BC F8 0D                 5044 	ldhl	sp,	#13
      0015BE 22                    5045 	ld	(hl+), a
      0015BF AF                    5046 	xor	a, a
      0015C0 32                    5047 	ld	(hl-), a
      0015C1 2A                    5048 	ld	a, (hl+)
      0015C2 5F                    5049 	ld	e, a
      0015C3 56                    5050 	ld	d, (hl)
      0015C4 F8 07                 5051 	ldhl	sp,	#7
      0015C6 2A                    5052 	ld	a,	(hl+)
      0015C7 66                    5053 	ld	h, (hl)
      0015C8 6F                    5054 	ld	l, a
      0015C9 7B                    5055 	ld	a, e
      0015CA 95                    5056 	sub	a, l
      0015CB 5F                    5057 	ld	e, a
      0015CC 7A                    5058 	ld	a, d
      0015CD 9C                    5059 	sbc	a, h
      0015CE F8 10                 5060 	ldhl	sp,	#16
      0015D0 32                    5061 	ld	(hl-), a
      0015D1 73                    5062 	ld	(hl), e
      0015D2 F8 0F                 5063 	ldhl	sp,	#15
      0015D4 5D                    5064 	ld	e, l
      0015D5 54                    5065 	ld	d, h
      0015D6 F8 11                 5066 	ldhl	sp,	#17
      0015D8 1A                    5067 	ld	a, (de)
      0015D9 13                    5068 	inc	de
      0015DA 96                    5069 	sub	a, (hl)
      0015DB 23                    5070 	inc	hl
      0015DC 1A                    5071 	ld	a, (de)
      0015DD 9E                    5072 	sbc	a, (hl)
      0015DE 1A                    5073 	ld	a, (de)
      0015DF 57                    5074 	ld	d, a
      0015E0 5E                    5075 	ld	e, (hl)
      0015E1 CB 7B                 5076 	bit	7, e
      0015E3 28 07                 5077 	jr	Z, 00214$
      0015E5 CB 7A                 5078 	bit	7, d
      0015E7 20 08                 5079 	jr	NZ, 00215$
      0015E9 BF                    5080 	cp	a, a
      0015EA 18 05                 5081 	jr	00215$
      0015EC                       5082 00214$:
      0015EC CB 7A                 5083 	bit	7, d
      0015EE 28 01                 5084 	jr	Z, 00215$
      0015F0 37                    5085 	scf
      0015F1                       5086 00215$:
      0015F1 30 5C                 5087 	jr	NC, 00108$
      0015F3 F8 11                 5088 	ldhl	sp,#17
      0015F5 2A                    5089 	ld	a, (hl+)
      0015F6 5F                    5090 	ld	e, a
      0015F7 56                    5091 	ld	d, (hl)
      0015F8 F8 0B                 5092 	ldhl	sp,	#11
      0015FA 2A                    5093 	ld	a,	(hl+)
      0015FB 66                    5094 	ld	h, (hl)
      0015FC 6F                    5095 	ld	l, a
      0015FD 7B                    5096 	ld	a, e
      0015FE 95                    5097 	sub	a, l
      0015FF 5F                    5098 	ld	e, a
      001600 7A                    5099 	ld	a, d
      001601 9C                    5100 	sbc	a, h
      001602 F8 10                 5101 	ldhl	sp,	#16
      001604 32                    5102 	ld	(hl-), a
      001605 73                    5103 	ld	(hl), e
      001606 F8 0F                 5104 	ldhl	sp,	#15
      001608 5D                    5105 	ld	e, l
      001609 54                    5106 	ld	d, h
      00160A F8 0D                 5107 	ldhl	sp,	#13
      00160C 1A                    5108 	ld	a, (de)
      00160D 13                    5109 	inc	de
      00160E 96                    5110 	sub	a, (hl)
      00160F 23                    5111 	inc	hl
      001610 1A                    5112 	ld	a, (de)
      001611 9E                    5113 	sbc	a, (hl)
      001612 1A                    5114 	ld	a, (de)
      001613 57                    5115 	ld	d, a
      001614 5E                    5116 	ld	e, (hl)
      001615 CB 7B                 5117 	bit	7, e
      001617 28 07                 5118 	jr	Z, 00216$
      001619 CB 7A                 5119 	bit	7, d
      00161B 20 08                 5120 	jr	NZ, 00217$
      00161D BF                    5121 	cp	a, a
      00161E 18 05                 5122 	jr	00217$
      001620                       5123 00216$:
      001620 CB 7A                 5124 	bit	7, d
      001622 28 01                 5125 	jr	Z, 00217$
      001624 37                    5126 	scf
      001625                       5127 00217$:
      001625 30 28                 5128 	jr	NC, 00108$
                                   5129 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001627 21r2Ar00              5130 	ld	hl, #(_shadow_OAM + 42)
      00162A 36 7F                 5131 	ld	(hl), #0x7f
                                   5132 ;main.c:570: eptr->alive = 0;
      00162C F8 09                 5133 	ldhl	sp,	#9
      00162E 2A                    5134 	ld	a,	(hl+)
      00162F 66                    5135 	ld	h, (hl)
      001630 6F                    5136 	ld	l, a
      001631 36 00                 5137 	ld	(hl), #0x00
                                   5138 ;main.c:571: takeDamage(eptr->damage);
      001633 21 0B 00              5139 	ld	hl, #0x000b
      001636 09                    5140 	add	hl, bc
      001637 5E                    5141 	ld	e, (hl)
      001638 16 00                 5142 	ld	d, #0x00
      00163A C5                    5143 	push	bc
      00163B D5                    5144 	push	de
      00163C CDr91r14              5145 	call	_takeDamage
      00163F E1                    5146 	pop	hl
      001640 AF                    5147 	xor	a, a
      001641 F5                    5148 	push	af
      001642 33                    5149 	inc	sp
      001643 CDrC8r0E              5150 	call	_initEnemies
      001646 33                    5151 	inc	sp
      001647 AF                    5152 	xor	a, a
      001648 F5                    5153 	push	af
      001649 33                    5154 	inc	sp
      00164A CDrC5r08              5155 	call	_playSound
      00164D 33                    5156 	inc	sp
      00164E C1                    5157 	pop	bc
      00164F                       5158 00108$:
                                   5159 ;main.c:584: struct Projectile *pptr = projectiles;
      00164F F8 10                 5160 	ldhl	sp,	#16
      001651 3Er50                 5161 	ld	a, #<(_projectiles)
      001653 22                    5162 	ld	(hl+), a
      001654 36s00                 5163 	ld	(hl), #>(_projectiles)
                                   5164 ;main.c:586: while (j < PROJECTILECOUNT) {
      001656 21 02 00              5165 	ld	hl, #0x0002
      001659 09                    5166 	add	hl, bc
      00165A E5                    5167 	push	hl
      00165B 7D                    5168 	ld	a, l
      00165C F8 04                 5169 	ldhl	sp,	#4
      00165E 77                    5170 	ld	(hl), a
      00165F E1                    5171 	pop	hl
      001660 7C                    5172 	ld	a, h
      001661 F8 03                 5173 	ldhl	sp,	#3
      001663 77                    5174 	ld	(hl), a
      001664 21 08 00              5175 	ld	hl, #0x0008
      001667 09                    5176 	add	hl, bc
      001668 E5                    5177 	push	hl
      001669 7D                    5178 	ld	a, l
      00166A F8 06                 5179 	ldhl	sp,	#6
      00166C 77                    5180 	ld	(hl), a
      00166D E1                    5181 	pop	hl
      00166E 7C                    5182 	ld	a, h
      00166F F8 05                 5183 	ldhl	sp,	#5
      001671 77                    5184 	ld	(hl), a
      001672 F8 12                 5185 	ldhl	sp,	#18
      001674 36 00                 5186 	ld	(hl), #0x00
      001676                       5187 00118$:
      001676 21rDDr05              5188 	ld	hl, #_PROJECTILECOUNT
      001679 5E                    5189 	ld	e, (hl)
      00167A F8 12                 5190 	ldhl	sp,	#18
      00167C 7E                    5191 	ld	a, (hl)
      00167D 93                    5192 	sub	a, e
      00167E D2r20r18              5193 	jp	NC, 00123$
                                   5194 ;main.c:587: if (pptr->active) {
      001681 2B                    5195 	dec	hl
      001682 2B                    5196 	dec	hl
      001683 2A                    5197 	ld	a, (hl+)
      001684 5F                    5198 	ld	e, a
      001685 56                    5199 	ld	d, (hl)
      001686 21 08 00              5200 	ld	hl, #0x0008
      001689 19                    5201 	add	hl, de
      00168A E5                    5202 	push	hl
      00168B 7D                    5203 	ld	a, l
      00168C F8 08                 5204 	ldhl	sp,	#8
      00168E 77                    5205 	ld	(hl), a
      00168F E1                    5206 	pop	hl
      001690 7C                    5207 	ld	a, h
      001691 F8 07                 5208 	ldhl	sp,	#7
      001693 32                    5209 	ld	(hl-), a
      001694 2A                    5210 	ld	a, (hl+)
      001695 5F                    5211 	ld	e, a
      001696 56                    5212 	ld	d, (hl)
      001697 1A                    5213 	ld	a, (de)
      001698 B7                    5214 	or	a, a
      001699 CAr07r18              5215 	jp	Z, 00117$
                                   5216 ;main.c:588: if (eptr->x > pptr->x - 8 && eptr->x - (8>>(eptr->spriteCount-1)) < pptr->x) {
      00169C 59                    5217 	ld	e, c
      00169D 50                    5218 	ld	d, b
      00169E 1A                    5219 	ld	a, (de)
      00169F F8 0A                 5220 	ldhl	sp,	#10
      0016A1 22                    5221 	ld	(hl+), a
      0016A2 13                    5222 	inc	de
      0016A3 1A                    5223 	ld	a, (de)
      0016A4 77                    5224 	ld	(hl), a
      0016A5 F8 10                 5225 	ldhl	sp,#16
      0016A7 2A                    5226 	ld	a, (hl+)
      0016A8 5F                    5227 	ld	e, a
      0016A9 56                    5228 	ld	d, (hl)
      0016AA 1A                    5229 	ld	a, (de)
      0016AB F8 0C                 5230 	ldhl	sp,	#12
      0016AD 22                    5231 	ld	(hl+), a
      0016AE 13                    5232 	inc	de
      0016AF 1A                    5233 	ld	a, (de)
      0016B0 32                    5234 	ld	(hl-), a
      0016B1 7E                    5235 	ld	a, (hl)
      0016B2 F8 08                 5236 	ldhl	sp,	#8
      0016B4 77                    5237 	ld	(hl), a
      0016B5 F8 0D                 5238 	ldhl	sp,	#13
      0016B7 7E                    5239 	ld	a, (hl)
      0016B8 F8 09                 5240 	ldhl	sp,	#9
      0016BA 32                    5241 	ld	(hl-), a
      0016BB 2A                    5242 	ld	a, (hl+)
      0016BC 5F                    5243 	ld	e, a
      0016BD 56                    5244 	ld	d, (hl)
      0016BE 21 08 00              5245 	ld	hl, #0x0008
      0016C1 7B                    5246 	ld	a, e
      0016C2 95                    5247 	sub	a, l
      0016C3 5F                    5248 	ld	e, a
      0016C4 7A                    5249 	ld	a, d
      0016C5 9C                    5250 	sbc	a, h
      0016C6 F8 0F                 5251 	ldhl	sp,	#15
      0016C8 32                    5252 	ld	(hl-), a
      0016C9 73                    5253 	ld	(hl), e
      0016CA F8 0E                 5254 	ldhl	sp,	#14
      0016CC 5D                    5255 	ld	e, l
      0016CD 54                    5256 	ld	d, h
      0016CE F8 0A                 5257 	ldhl	sp,	#10
      0016D0 1A                    5258 	ld	a, (de)
      0016D1 13                    5259 	inc	de
      0016D2 96                    5260 	sub	a, (hl)
      0016D3 23                    5261 	inc	hl
      0016D4 1A                    5262 	ld	a, (de)
      0016D5 9E                    5263 	sbc	a, (hl)
      0016D6 1A                    5264 	ld	a, (de)
      0016D7 57                    5265 	ld	d, a
      0016D8 CB 7E                 5266 	bit	7, (hl)
      0016DA 28 07                 5267 	jr	Z, 00218$
      0016DC CB 7A                 5268 	bit	7, d
      0016DE 20 08                 5269 	jr	NZ, 00219$
      0016E0 BF                    5270 	cp	a, a
      0016E1 18 05                 5271 	jr	00219$
      0016E3                       5272 00218$:
      0016E3 CB 7A                 5273 	bit	7, d
      0016E5 28 01                 5274 	jr	Z, 00219$
      0016E7 37                    5275 	scf
      0016E8                       5276 00219$:
      0016E8 D2r07r18              5277 	jp	NC, 00117$
      0016EB F8 04                 5278 	ldhl	sp,#4
      0016ED 2A                    5279 	ld	a, (hl+)
      0016EE 5F                    5280 	ld	e, a
      0016EF 56                    5281 	ld	d, (hl)
      0016F0 1A                    5282 	ld	a, (de)
      0016F1 5F                    5283 	ld	e, a
      0016F2 1D                    5284 	dec	e
      0016F3 F8 08                 5285 	ldhl	sp,	#8
      0016F5 3E 08                 5286 	ld	a, #0x08
      0016F7 22                    5287 	ld	(hl+), a
      0016F8 AF                    5288 	xor	a, a
      0016F9 77                    5289 	ld	(hl), a
      0016FA 1C                    5290 	inc	e
      0016FB 18 07                 5291 	jr	00221$
      0016FD                       5292 00220$:
      0016FD F8 09                 5293 	ldhl	sp,	#9
      0016FF CB 2E                 5294 	sra	(hl)
      001701 2B                    5295 	dec	hl
      001702 CB 1E                 5296 	rr	(hl)
      001704                       5297 00221$:
      001704 1D                    5298 	dec	e
      001705 20 F6                 5299 	jr	NZ, 00220$
      001707 F8 0A                 5300 	ldhl	sp,#10
      001709 2A                    5301 	ld	a, (hl+)
      00170A 5F                    5302 	ld	e, a
      00170B 56                    5303 	ld	d, (hl)
      00170C F8 08                 5304 	ldhl	sp,	#8
      00170E 2A                    5305 	ld	a,	(hl+)
      00170F 66                    5306 	ld	h, (hl)
      001710 6F                    5307 	ld	l, a
      001711 7B                    5308 	ld	a, e
      001712 95                    5309 	sub	a, l
      001713 5F                    5310 	ld	e, a
      001714 7A                    5311 	ld	a, d
      001715 9C                    5312 	sbc	a, h
      001716 F8 0F                 5313 	ldhl	sp,	#15
      001718 32                    5314 	ld	(hl-), a
      001719 73                    5315 	ld	(hl), e
      00171A F8 0E                 5316 	ldhl	sp,	#14
      00171C 5D                    5317 	ld	e, l
      00171D 54                    5318 	ld	d, h
      00171E F8 0C                 5319 	ldhl	sp,	#12
      001720 1A                    5320 	ld	a, (de)
      001721 13                    5321 	inc	de
      001722 96                    5322 	sub	a, (hl)
      001723 23                    5323 	inc	hl
      001724 1A                    5324 	ld	a, (de)
      001725 9E                    5325 	sbc	a, (hl)
      001726 1A                    5326 	ld	a, (de)
      001727 57                    5327 	ld	d, a
      001728 CB 7E                 5328 	bit	7, (hl)
      00172A 28 07                 5329 	jr	Z, 00222$
      00172C CB 7A                 5330 	bit	7, d
      00172E 20 08                 5331 	jr	NZ, 00223$
      001730 BF                    5332 	cp	a, a
      001731 18 05                 5333 	jr	00223$
      001733                       5334 00222$:
      001733 CB 7A                 5335 	bit	7, d
      001735 28 01                 5336 	jr	Z, 00223$
      001737 37                    5337 	scf
      001738                       5338 00223$:
      001738 D2r07r18              5339 	jp	NC, 00117$
                                   5340 ;main.c:589: if (eptr->y > pptr->y - 8 && eptr->y -(8>>(eptr->spriteCount-1)) < pptr->y ) {
      00173B F8 02                 5341 	ldhl	sp,#2
      00173D 2A                    5342 	ld	a, (hl+)
      00173E 5F                    5343 	ld	e, a
      00173F 56                    5344 	ld	d, (hl)
      001740 1A                    5345 	ld	a, (de)
      001741 F8 0E                 5346 	ldhl	sp,	#14
      001743 22                    5347 	ld	(hl+), a
      001744 13                    5348 	inc	de
      001745 1A                    5349 	ld	a, (de)
      001746 22                    5350 	ld	(hl+), a
      001747 2A                    5351 	ld	a, (hl+)
      001748 66                    5352 	ld	h, (hl)
                                   5353 ;	spillPairReg hl
                                   5354 ;	spillPairReg hl
      001749 6F                    5355 	ld	l, a
                                   5356 ;	spillPairReg hl
                                   5357 ;	spillPairReg hl
      00174A 23                    5358 	inc	hl
      00174B 23                    5359 	inc	hl
      00174C 5D                    5360 	ld	e, l
      00174D 54                    5361 	ld	d, h
      00174E 1A                    5362 	ld	a, (de)
      00174F F8 0A                 5363 	ldhl	sp,	#10
      001751 22                    5364 	ld	(hl+), a
      001752 13                    5365 	inc	de
      001753 1A                    5366 	ld	a, (de)
      001754 77                    5367 	ld	(hl), a
      001755 F8 0A                 5368 	ldhl	sp,	#10
      001757 7E                    5369 	ld	a, (hl)
      001758 F8 00                 5370 	ldhl	sp,	#0
      00175A 77                    5371 	ld	(hl), a
      00175B F8 0B                 5372 	ldhl	sp,	#11
      00175D 7E                    5373 	ld	a, (hl)
      00175E F8 01                 5374 	ldhl	sp,	#1
      001760 77                    5375 	ld	(hl), a
      001761 D1                    5376 	pop	de
      001762 D5                    5377 	push	de
      001763 21 08 00              5378 	ld	hl, #0x0008
      001766 7B                    5379 	ld	a, e
      001767 95                    5380 	sub	a, l
      001768 5F                    5381 	ld	e, a
      001769 7A                    5382 	ld	a, d
      00176A 9C                    5383 	sbc	a, h
      00176B F8 0D                 5384 	ldhl	sp,	#13
      00176D 32                    5385 	ld	(hl-), a
      00176E 73                    5386 	ld	(hl), e
      00176F F8 0C                 5387 	ldhl	sp,	#12
      001771 5D                    5388 	ld	e, l
      001772 54                    5389 	ld	d, h
      001773 F8 0E                 5390 	ldhl	sp,	#14
      001775 1A                    5391 	ld	a, (de)
      001776 13                    5392 	inc	de
      001777 96                    5393 	sub	a, (hl)
      001778 23                    5394 	inc	hl
      001779 1A                    5395 	ld	a, (de)
      00177A 9E                    5396 	sbc	a, (hl)
      00177B 1A                    5397 	ld	a, (de)
      00177C 57                    5398 	ld	d, a
      00177D CB 7E                 5399 	bit	7, (hl)
      00177F 28 07                 5400 	jr	Z, 00224$
      001781 CB 7A                 5401 	bit	7, d
      001783 20 08                 5402 	jr	NZ, 00225$
      001785 BF                    5403 	cp	a, a
      001786 18 05                 5404 	jr	00225$
      001788                       5405 00224$:
      001788 CB 7A                 5406 	bit	7, d
      00178A 28 01                 5407 	jr	Z, 00225$
      00178C 37                    5408 	scf
      00178D                       5409 00225$:
      00178D 30 78                 5410 	jr	NC, 00117$
      00178F F8 0E                 5411 	ldhl	sp,#14
      001791 2A                    5412 	ld	a, (hl+)
      001792 5F                    5413 	ld	e, a
      001793 56                    5414 	ld	d, (hl)
      001794 F8 08                 5415 	ldhl	sp,	#8
      001796 2A                    5416 	ld	a,	(hl+)
      001797 66                    5417 	ld	h, (hl)
      001798 6F                    5418 	ld	l, a
      001799 7B                    5419 	ld	a, e
      00179A 95                    5420 	sub	a, l
      00179B 5F                    5421 	ld	e, a
      00179C 7A                    5422 	ld	a, d
      00179D 9C                    5423 	sbc	a, h
      00179E F8 0D                 5424 	ldhl	sp,	#13
      0017A0 32                    5425 	ld	(hl-), a
      0017A1 73                    5426 	ld	(hl), e
      0017A2 2A                    5427 	ld	a, (hl+)
      0017A3 23                    5428 	inc	hl
      0017A4 32                    5429 	ld	(hl-), a
      0017A5 2A                    5430 	ld	a, (hl+)
      0017A6 23                    5431 	inc	hl
      0017A7 77                    5432 	ld	(hl), a
      0017A8 F8 0E                 5433 	ldhl	sp,	#14
      0017AA 5D                    5434 	ld	e, l
      0017AB 54                    5435 	ld	d, h
      0017AC F8 0A                 5436 	ldhl	sp,	#10
      0017AE 1A                    5437 	ld	a, (de)
      0017AF 13                    5438 	inc	de
      0017B0 96                    5439 	sub	a, (hl)
      0017B1 23                    5440 	inc	hl
      0017B2 1A                    5441 	ld	a, (de)
      0017B3 9E                    5442 	sbc	a, (hl)
      0017B4 1A                    5443 	ld	a, (de)
      0017B5 57                    5444 	ld	d, a
      0017B6 CB 7E                 5445 	bit	7, (hl)
      0017B8 28 07                 5446 	jr	Z, 00226$
      0017BA CB 7A                 5447 	bit	7, d
      0017BC 20 08                 5448 	jr	NZ, 00227$
      0017BE BF                    5449 	cp	a, a
      0017BF 18 05                 5450 	jr	00227$
      0017C1                       5451 00226$:
      0017C1 CB 7A                 5452 	bit	7, d
      0017C3 28 01                 5453 	jr	Z, 00227$
      0017C5 37                    5454 	scf
      0017C6                       5455 00227$:
      0017C6 30 3F                 5456 	jr	NC, 00117$
                                   5457 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0017C8 21r2Ar00              5458 	ld	hl, #(_shadow_OAM + 42)
      0017CB 36 7F                 5459 	ld	(hl), #0x7f
                                   5460 ;main.c:591: eptr->alive = 0;
      0017CD 21 09 00              5461 	ld	hl, #0x0009
      0017D0 09                    5462 	add	hl, bc
      0017D1 36 00                 5463 	ld	(hl), #0x00
                                   5464 ;main.c:592: initEnemies(0);
      0017D3 C5                    5465 	push	bc
      0017D4 AF                    5466 	xor	a, a
      0017D5 F5                    5467 	push	af
      0017D6 33                    5468 	inc	sp
      0017D7 CDrC8r0E              5469 	call	_initEnemies
      0017DA 33                    5470 	inc	sp
      0017DB C1                    5471 	pop	bc
                                   5472 ;main.c:593: set_sprite_tile(20+j, 0x7f);
      0017DC F8 12                 5473 	ldhl	sp,	#18
      0017DE 7E                    5474 	ld	a, (hl)
      0017DF C6 14                 5475 	add	a, #0x14
      0017E1 5F                    5476 	ld	e, a
                                   5477 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0017E2 26 00                 5478 	ld	h, #0x00
                                   5479 ;	spillPairReg hl
                                   5480 ;	spillPairReg hl
      0017E4 6B                    5481 	ld	l, e
      0017E5 29                    5482 	add	hl, hl
      0017E6 29                    5483 	add	hl, hl
      0017E7 11r00r00              5484 	ld	de, #_shadow_OAM
      0017EA 19                    5485 	add	hl, de
      0017EB 23                    5486 	inc	hl
      0017EC 23                    5487 	inc	hl
      0017ED 36 7F                 5488 	ld	(hl), #0x7f
                                   5489 ;main.c:594: playSound(0);
      0017EF C5                    5490 	push	bc
      0017F0 AF                    5491 	xor	a, a
      0017F1 F5                    5492 	push	af
      0017F2 33                    5493 	inc	sp
      0017F3 CDrC5r08              5494 	call	_playSound
      0017F6 33                    5495 	inc	sp
      0017F7 C1                    5496 	pop	bc
                                   5497 ;main.c:595: pptr->active = 0;
      0017F8 F8 06                 5498 	ldhl	sp,	#6
      0017FA 2A                    5499 	ld	a,	(hl+)
      0017FB 66                    5500 	ld	h, (hl)
      0017FC 6F                    5501 	ld	l, a
      0017FD 36 00                 5502 	ld	(hl), #0x00
                                   5503 ;main.c:596: incrementScore();
      0017FF C5                    5504 	push	bc
      001800 CDr1Dr07              5505 	call	_incrementScore
      001803 CDrF3r06              5506 	call	_updateScore
      001806 C1                    5507 	pop	bc
      001807                       5508 00117$:
                                   5509 ;main.c:601: j++;
      001807 F8 12                 5510 	ldhl	sp,	#18
      001809 34                    5511 	inc	(hl)
                                   5512 ;main.c:602: pptr++;
      00180A 2B                    5513 	dec	hl
      00180B 2B                    5514 	dec	hl
      00180C 2A                    5515 	ld	a, (hl+)
      00180D 5F                    5516 	ld	e, a
      00180E 56                    5517 	ld	d, (hl)
      00180F 21 0B 00              5518 	ld	hl, #0x000b
      001812 19                    5519 	add	hl, de
      001813 E5                    5520 	push	hl
      001814 7D                    5521 	ld	a, l
      001815 F8 12                 5522 	ldhl	sp,	#18
      001817 77                    5523 	ld	(hl), a
      001818 E1                    5524 	pop	hl
      001819 7C                    5525 	ld	a, h
      00181A F8 11                 5526 	ldhl	sp,	#17
      00181C 77                    5527 	ld	(hl), a
      00181D C3r76r16              5528 	jp	00118$
                                   5529 ;main.c:609: break;
      001820                       5530 00123$:
                                   5531 ;main.c:612: if (enemyCollisionCount == 0) {
      001820 FAr55r00              5532 	ld	a, (#_enemyCollisionCount)
      001823 B7                    5533 	or	a, a
      001824 20 09                 5534 	jr	NZ, 00125$
                                   5535 ;main.c:613: enemyCollisionCount = ENEMYCOUNT - 1;
      001826 FArCCr05              5536 	ld	a, (#_ENEMYCOUNT)
      001829 3D                    5537 	dec	a
      00182A EAr55r00              5538 	ld	(#_enemyCollisionCount),a
      00182D 18 04                 5539 	jr	00130$
      00182F                       5540 00125$:
                                   5541 ;main.c:616: enemyCollisionCount--;
      00182F 21r55r00              5542 	ld	hl, #_enemyCollisionCount
      001832 35                    5543 	dec	(hl)
      001833                       5544 00130$:
                                   5545 ;main.c:665: }
      001833 E8 13                 5546 	add	sp, #19
      001835 C9                    5547 	ret
                                   5548 ;main.c:668: void setGunIcon() {
                                   5549 ;	---------------------------------
                                   5550 ; Function setGunIcon
                                   5551 ; ---------------------------------
      001836                       5552 _setGunIcon::
                                   5553 ;main.c:671: set_win_tiles(15, 0,1,1,gunMap+currentGun);
      001836 01r58r00              5554 	ld	bc, #_gunMap+0
      001839 79                    5555 	ld	a, c
      00183A 21r56r00              5556 	ld	hl, #_currentGun
      00183D 86                    5557 	add	a, (hl)
      00183E 4F                    5558 	ld	c, a
      00183F 30 01                 5559 	jr	NC, 00103$
      001841 04                    5560 	inc	b
      001842                       5561 00103$:
      001842 C5                    5562 	push	bc
      001843 21 01 01              5563 	ld	hl, #0x101
      001846 E5                    5564 	push	hl
      001847 21 0F 00              5565 	ld	hl, #0x0f
      00184A E5                    5566 	push	hl
      00184B CDr00r00              5567 	call	_set_win_tiles
      00184E E8 06                 5568 	add	sp, #6
                                   5569 ;main.c:673: }
      001850 C9                    5570 	ret
                                   5571 ;main.c:683: void fire() {
                                   5572 ;	---------------------------------
                                   5573 ; Function fire
                                   5574 ; ---------------------------------
      001851                       5575 _fire::
      001851 E8 FA                 5576 	add	sp, #-6
                                   5577 ;main.c:685: oldestProjectile += 1;
      001853 21r41r00              5578 	ld	hl, #_oldestProjectile
      001856 34                    5579 	inc	(hl)
      001857 7E                    5580 	ld	a, (hl)
                                   5581 ;main.c:686: if (oldestProjectile >= PROJECTILECOUNT) {
      001858 21rDDr05              5582 	ld	hl, #_PROJECTILECOUNT
      00185B 4E                    5583 	ld	c, (hl)
      00185C 21r41r00              5584 	ld	hl, #_oldestProjectile
      00185F 7E                    5585 	ld	a, (hl)
      001860 91                    5586 	sub	a, c
      001861 38 02                 5587 	jr	C, 00102$
                                   5588 ;main.c:687: oldestProjectile = 0;
      001863 36 00                 5589 	ld	(hl), #0x00
      001865                       5590 00102$:
                                   5591 ;main.c:690: if (currentGun == 0) {
      001865 FAr56r00              5592 	ld	a, (#_currentGun)
      001868 B7                    5593 	or	a, a
      001869 20 1F                 5594 	jr	NZ, 00104$
                                   5595 ;main.c:691: projectiles[oldestProjectile] = singleGun;
      00186B 21r41r00              5596 	ld	hl, #_oldestProjectile
      00186E 4E                    5597 	ld	c, (hl)
      00186F 06 00                 5598 	ld	b, #0x00
      001871 69                    5599 	ld	l, c
      001872 60                    5600 	ld	h, b
      001873 29                    5601 	add	hl, hl
      001874 29                    5602 	add	hl, hl
      001875 09                    5603 	add	hl, bc
      001876 29                    5604 	add	hl, hl
      001877 09                    5605 	add	hl, bc
      001878 01r50r00              5606 	ld	bc,#_projectiles
      00187B 09                    5607 	add	hl,bc
      00187C 11 0B 00              5608 	ld	de, #0x000b
      00187F D5                    5609 	push	de
      001880 11r20r00              5610 	ld	de, #_singleGun
      001883 D5                    5611 	push	de
      001884 E5                    5612 	push	hl
      001885 CDr00r00              5613 	call	___memcpy
      001888 E8 06                 5614 	add	sp, #6
      00188A                       5615 00104$:
                                   5616 ;main.c:693: if (currentGun == 1) {
      00188A FAr56r00              5617 	ld	a, (#_currentGun)
      00188D 3D                    5618 	dec	a
      00188E 20 1F                 5619 	jr	NZ, 00106$
                                   5620 ;main.c:694: projectiles[oldestProjectile] = doubleGun;
      001890 21r41r00              5621 	ld	hl, #_oldestProjectile
      001893 4E                    5622 	ld	c, (hl)
      001894 06 00                 5623 	ld	b, #0x00
      001896 69                    5624 	ld	l, c
      001897 60                    5625 	ld	h, b
      001898 29                    5626 	add	hl, hl
      001899 29                    5627 	add	hl, hl
      00189A 09                    5628 	add	hl, bc
      00189B 29                    5629 	add	hl, hl
      00189C 09                    5630 	add	hl, bc
      00189D 01r50r00              5631 	ld	bc,#_projectiles
      0018A0 09                    5632 	add	hl,bc
      0018A1 11 0B 00              5633 	ld	de, #0x000b
      0018A4 D5                    5634 	push	de
      0018A5 11r2Br00              5635 	ld	de, #_doubleGun
      0018A8 D5                    5636 	push	de
      0018A9 E5                    5637 	push	hl
      0018AA CDr00r00              5638 	call	___memcpy
      0018AD E8 06                 5639 	add	sp, #6
      0018AF                       5640 00106$:
                                   5641 ;main.c:696: if (currentGun == 2) {
      0018AF FAr56r00              5642 	ld	a, (#_currentGun)
      0018B2 D6 02                 5643 	sub	a, #0x02
      0018B4 20 1F                 5644 	jr	NZ, 00108$
                                   5645 ;main.c:697: projectiles[oldestProjectile] = missile;
      0018B6 21r41r00              5646 	ld	hl, #_oldestProjectile
      0018B9 4E                    5647 	ld	c, (hl)
      0018BA 06 00                 5648 	ld	b, #0x00
      0018BC 69                    5649 	ld	l, c
      0018BD 60                    5650 	ld	h, b
      0018BE 29                    5651 	add	hl, hl
      0018BF 29                    5652 	add	hl, hl
      0018C0 09                    5653 	add	hl, bc
      0018C1 29                    5654 	add	hl, hl
      0018C2 09                    5655 	add	hl, bc
      0018C3 01r50r00              5656 	ld	bc,#_projectiles
      0018C6 09                    5657 	add	hl,bc
      0018C7 11 0B 00              5658 	ld	de, #0x000b
      0018CA D5                    5659 	push	de
      0018CB 11r36r00              5660 	ld	de, #_missile
      0018CE D5                    5661 	push	de
      0018CF E5                    5662 	push	hl
      0018D0 CDr00r00              5663 	call	___memcpy
      0018D3 E8 06                 5664 	add	sp, #6
      0018D5                       5665 00108$:
                                   5666 ;main.c:699: projectiles[oldestProjectile].x = playerDrawX;
      0018D5 21r41r00              5667 	ld	hl, #_oldestProjectile
      0018D8 4E                    5668 	ld	c, (hl)
      0018D9 06 00                 5669 	ld	b, #0x00
      0018DB 69                    5670 	ld	l, c
      0018DC 60                    5671 	ld	h, b
      0018DD 29                    5672 	add	hl, hl
      0018DE 29                    5673 	add	hl, hl
      0018DF 09                    5674 	add	hl, bc
      0018E0 29                    5675 	add	hl, hl
      0018E1 09                    5676 	add	hl, bc
      0018E2 01r50r00              5677 	ld	bc,#_projectiles
      0018E5 09                    5678 	add	hl,bc
      0018E6 E5                    5679 	push	hl
      0018E7 FAr4Br00              5680 	ld	a, (#_playerDrawX)
      0018EA E1                    5681 	pop	hl
      0018EB 0E 00                 5682 	ld	c, #0x00
      0018ED 22                    5683 	ld	(hl+), a
      0018EE 71                    5684 	ld	(hl), c
                                   5685 ;main.c:700: projectiles[oldestProjectile].y = playerDrawY;
      0018EF 21r41r00              5686 	ld	hl, #_oldestProjectile
      0018F2 4E                    5687 	ld	c, (hl)
      0018F3 06 00                 5688 	ld	b, #0x00
      0018F5 69                    5689 	ld	l, c
      0018F6 60                    5690 	ld	h, b
      0018F7 29                    5691 	add	hl, hl
      0018F8 29                    5692 	add	hl, hl
      0018F9 09                    5693 	add	hl, bc
      0018FA 29                    5694 	add	hl, hl
      0018FB 09                    5695 	add	hl, bc
      0018FC 01r50r00              5696 	ld	bc,#_projectiles
      0018FF 09                    5697 	add	hl,bc
      001900 23                    5698 	inc	hl
      001901 23                    5699 	inc	hl
      001902 E5                    5700 	push	hl
      001903 FAr4Cr00              5701 	ld	a, (#_playerDrawY)
      001906 E1                    5702 	pop	hl
      001907 0E 00                 5703 	ld	c, #0x00
      001909 22                    5704 	ld	(hl+), a
      00190A 71                    5705 	ld	(hl), c
                                   5706 ;main.c:701: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      00190B 21r41r00              5707 	ld	hl, #_oldestProjectile
      00190E 4E                    5708 	ld	c, (hl)
      00190F 06 00                 5709 	ld	b, #0x00
      001911 69                    5710 	ld	l, c
      001912 60                    5711 	ld	h, b
      001913 29                    5712 	add	hl, hl
      001914 29                    5713 	add	hl, hl
      001915 09                    5714 	add	hl, bc
      001916 29                    5715 	add	hl, hl
      001917 09                    5716 	add	hl, bc
      001918 01r50r00              5717 	ld	bc,#_projectiles
      00191B 09                    5718 	add	hl,bc
      00191C 5D                    5719 	ld	e, l
      00191D 54                    5720 	ld	d, h
      00191E 21 04 00              5721 	ld	hl, #0x0004
      001921 19                    5722 	add	hl, de
      001922 4D                    5723 	ld	c, l
      001923 44                    5724 	ld	b, h
      001924 21 06 00              5725 	ld	hl, #0x0006
      001927 19                    5726 	add	hl, de
      001928 7E                    5727 	ld	a, (hl)
      001929 C5                    5728 	push	bc
      00192A F5                    5729 	push	af
      00192B 33                    5730 	inc	sp
      00192C FAr43r00              5731 	ld	a, (#_xDir)
      00192F F5                    5732 	push	af
      001930 33                    5733 	inc	sp
      001931 CDr00r00              5734 	call	__muluschar
      001934 E1                    5735 	pop	hl
      001935 7B                    5736 	ld	a, e
      001936 C1                    5737 	pop	bc
      001937 02                    5738 	ld	(bc), a
                                   5739 ;main.c:702: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      001938 21r41r00              5740 	ld	hl, #_oldestProjectile
      00193B 4E                    5741 	ld	c, (hl)
      00193C 06 00                 5742 	ld	b, #0x00
      00193E 69                    5743 	ld	l, c
      00193F 60                    5744 	ld	h, b
      001940 29                    5745 	add	hl, hl
      001941 29                    5746 	add	hl, hl
      001942 09                    5747 	add	hl, bc
      001943 29                    5748 	add	hl, hl
      001944 09                    5749 	add	hl, bc
      001945 01r50r00              5750 	ld	bc,#_projectiles
      001948 09                    5751 	add	hl,bc
      001949 5D                    5752 	ld	e, l
      00194A 54                    5753 	ld	d, h
      00194B 21 05 00              5754 	ld	hl, #0x0005
      00194E 19                    5755 	add	hl, de
      00194F 4D                    5756 	ld	c, l
      001950 44                    5757 	ld	b, h
      001951 21 06 00              5758 	ld	hl, #0x0006
      001954 19                    5759 	add	hl, de
      001955 7E                    5760 	ld	a, (hl)
      001956 C5                    5761 	push	bc
      001957 F5                    5762 	push	af
      001958 33                    5763 	inc	sp
      001959 FAr44r00              5764 	ld	a, (#_yDir)
      00195C F5                    5765 	push	af
      00195D 33                    5766 	inc	sp
      00195E CDr00r00              5767 	call	__muluschar
      001961 E1                    5768 	pop	hl
      001962 7B                    5769 	ld	a, e
      001963 C1                    5770 	pop	bc
      001964 02                    5771 	ld	(bc), a
                                   5772 ;main.c:685: oldestProjectile += 1;
      001965 FAr41r00              5773 	ld	a, (#_oldestProjectile)
      001968 F8 05                 5774 	ldhl	sp,	#5
      00196A 77                    5775 	ld	(hl), a
                                   5776 ;main.c:691: projectiles[oldestProjectile] = singleGun;
      00196B 21r41r00              5777 	ld	hl, #_oldestProjectile
      00196E 4E                    5778 	ld	c, (hl)
      00196F 06 00                 5779 	ld	b, #0x00
      001971 69                    5780 	ld	l, c
      001972 60                    5781 	ld	h, b
      001973 29                    5782 	add	hl, hl
      001974 29                    5783 	add	hl, hl
      001975 09                    5784 	add	hl, bc
      001976 29                    5785 	add	hl, hl
      001977 09                    5786 	add	hl, bc
                                   5787 ;main.c:705: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      001978 01r50r00              5788 	ld	bc,#_projectiles
      00197B 09                    5789 	add	hl,bc
      00197C 4D                    5790 	ld	c, l
      00197D 44                    5791 	ld	b, h
      00197E F8 05                 5792 	ldhl	sp,	#5
      001980 7E                    5793 	ld	a, (hl)
      001981 C6 14                 5794 	add	a, #0x14
      001983 77                    5795 	ld	(hl), a
      001984 21 0A 00              5796 	ld	hl, #0x000a
      001987 09                    5797 	add	hl, bc
      001988 7E                    5798 	ld	a, (hl)
      001989 F8 04                 5799 	ldhl	sp,	#4
      00198B 77                    5800 	ld	(hl), a
                                   5801 ;main.c:704: if (yDir != 0 && xDir == 0) {
      00198C FAr44r00              5802 	ld	a, (#_yDir)
      00198F B7                    5803 	or	a, a
      001990 CAr56r1A              5804 	jp	Z, 00135$
      001993 FAr43r00              5805 	ld	a, (#_xDir)
      001996 B7                    5806 	or	a, a
      001997 C2r56r1A              5807 	jp	NZ, 00135$
                                   5808 ;main.c:705: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
                                   5809 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00199A F8 05                 5810 	ldhl	sp,	#5
      00199C 7E                    5811 	ld	a, (hl)
      00199D F8 02                 5812 	ldhl	sp,	#2
      00199F 22                    5813 	ld	(hl+), a
      0019A0 36 00                 5814 	ld	(hl), #0x00
      0019A2 3E 02                 5815 	ld	a, #0x02
      0019A4                       5816 00246$:
      0019A4 F8 02                 5817 	ldhl	sp,	#2
      0019A6 CB 26                 5818 	sla	(hl)
      0019A8 23                    5819 	inc	hl
      0019A9 CB 16                 5820 	rl	(hl)
      0019AB 3D                    5821 	dec	a
      0019AC 20 F6                 5822 	jr	NZ, 00246$
      0019AE 2B                    5823 	dec	hl
      0019AF 2A                    5824 	ld	a, (hl+)
      0019B0 5F                    5825 	ld	e, a
      0019B1 56                    5826 	ld	d, (hl)
      0019B2 21r00r00              5827 	ld	hl, #_shadow_OAM
      0019B5 19                    5828 	add	hl, de
      0019B6 33                    5829 	inc	sp
      0019B7 33                    5830 	inc	sp
      0019B8 5D                    5831 	ld	e, l
      0019B9 54                    5832 	ld	d, h
      0019BA D5                    5833 	push	de
      0019BB 21 02 00              5834 	ld	hl, #0x0002
      0019BE 19                    5835 	add	hl, de
      0019BF E5                    5836 	push	hl
      0019C0 7D                    5837 	ld	a, l
      0019C1 F8 04                 5838 	ldhl	sp,	#4
      0019C3 77                    5839 	ld	(hl), a
      0019C4 E1                    5840 	pop	hl
      0019C5 7C                    5841 	ld	a, h
      0019C6 F8 03                 5842 	ldhl	sp,	#3
      0019C8 32                    5843 	ld	(hl-), a
      0019C9 2A                    5844 	ld	a, (hl+)
      0019CA 5F                    5845 	ld	e, a
      0019CB 2A                    5846 	ld	a, (hl+)
      0019CC 57                    5847 	ld	d, a
      0019CD 7E                    5848 	ld	a, (hl)
      0019CE 12                    5849 	ld	(de), a
                                   5850 ;main.c:685: oldestProjectile += 1;
      0019CF FAr41r00              5851 	ld	a, (#_oldestProjectile)
                                   5852 ;main.c:705: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      0019D2 C6 14                 5853 	add	a, #0x14
      0019D4 F8 05                 5854 	ldhl	sp,	#5
      0019D6 77                    5855 	ld	(hl), a
                                   5856 ;main.c:706: if (yDir == 1) {
      0019D7 FAr44r00              5857 	ld	a, (#_yDir)
      0019DA 3D                    5858 	dec	a
      0019DB 20 3D                 5859 	jr	NZ, 00110$
                                   5860 ;main.c:707: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
                                   5861 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0019DD F8 05                 5862 	ldhl	sp,	#5
      0019DF 3A                    5863 	ld	a, (hl-)
      0019E0 22                    5864 	ld	(hl+), a
      0019E1 36 00                 5865 	ld	(hl), #0x00
      0019E3 3E 02                 5866 	ld	a, #0x02
      0019E5                       5867 00249$:
      0019E5 F8 04                 5868 	ldhl	sp,	#4
      0019E7 CB 26                 5869 	sla	(hl)
      0019E9 23                    5870 	inc	hl
      0019EA CB 16                 5871 	rl	(hl)
      0019EC 3D                    5872 	dec	a
      0019ED 20 F6                 5873 	jr	NZ, 00249$
      0019EF 2B                    5874 	dec	hl
      0019F0 2A                    5875 	ld	a, (hl+)
      0019F1 5F                    5876 	ld	e, a
      0019F2 56                    5877 	ld	d, (hl)
      0019F3 21r00r00              5878 	ld	hl, #_shadow_OAM
      0019F6 19                    5879 	add	hl, de
      0019F7 E5                    5880 	push	hl
      0019F8 7D                    5881 	ld	a, l
      0019F9 F8 04                 5882 	ldhl	sp,	#4
      0019FB 77                    5883 	ld	(hl), a
      0019FC E1                    5884 	pop	hl
      0019FD 7C                    5885 	ld	a, h
      0019FE F8 03                 5886 	ldhl	sp,	#3
      001A00 32                    5887 	ld	(hl-), a
      001A01 2A                    5888 	ld	a, (hl+)
      001A02 5F                    5889 	ld	e, a
      001A03 56                    5890 	ld	d, (hl)
      001A04 21 03 00              5891 	ld	hl, #0x0003
      001A07 19                    5892 	add	hl, de
      001A08 E5                    5893 	push	hl
      001A09 7D                    5894 	ld	a, l
      001A0A F8 06                 5895 	ldhl	sp,	#6
      001A0C 77                    5896 	ld	(hl), a
      001A0D E1                    5897 	pop	hl
      001A0E 7C                    5898 	ld	a, h
      001A0F F8 05                 5899 	ldhl	sp,	#5
      001A11 32                    5900 	ld	(hl-), a
      001A12 2A                    5901 	ld	a,	(hl+)
      001A13 66                    5902 	ld	h, (hl)
      001A14 6F                    5903 	ld	l, a
      001A15 36 40                 5904 	ld	(hl), #0x40
                                   5905 ;main.c:707: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
      001A17 C3r63r1C              5906 	jp	00136$
      001A1A                       5907 00110$:
                                   5908 ;main.c:712: set_sprite_prop(20+oldestProjectile, 0); 
                                   5909 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001A1A F8 05                 5910 	ldhl	sp,	#5
      001A1C 3A                    5911 	ld	a, (hl-)
      001A1D 22                    5912 	ld	(hl+), a
      001A1E 36 00                 5913 	ld	(hl), #0x00
      001A20 3E 02                 5914 	ld	a, #0x02
      001A22                       5915 00250$:
      001A22 F8 04                 5916 	ldhl	sp,	#4
      001A24 CB 26                 5917 	sla	(hl)
      001A26 23                    5918 	inc	hl
      001A27 CB 16                 5919 	rl	(hl)
      001A29 3D                    5920 	dec	a
      001A2A 20 F6                 5921 	jr	NZ, 00250$
      001A2C 11r00r00              5922 	ld	de, #_shadow_OAM
      001A2F 3A                    5923 	ld	a, (hl-)
      001A30 6E                    5924 	ld	l, (hl)
      001A31 67                    5925 	ld	h, a
      001A32 19                    5926 	add	hl, de
      001A33 E5                    5927 	push	hl
      001A34 7D                    5928 	ld	a, l
      001A35 F8 04                 5929 	ldhl	sp,	#4
      001A37 77                    5930 	ld	(hl), a
      001A38 E1                    5931 	pop	hl
      001A39 7C                    5932 	ld	a, h
      001A3A F8 03                 5933 	ldhl	sp,	#3
      001A3C 32                    5934 	ld	(hl-), a
      001A3D 2A                    5935 	ld	a, (hl+)
      001A3E 5F                    5936 	ld	e, a
      001A3F 56                    5937 	ld	d, (hl)
      001A40 21 03 00              5938 	ld	hl, #0x0003
      001A43 19                    5939 	add	hl, de
      001A44 E5                    5940 	push	hl
      001A45 7D                    5941 	ld	a, l
      001A46 F8 06                 5942 	ldhl	sp,	#6
      001A48 77                    5943 	ld	(hl), a
      001A49 E1                    5944 	pop	hl
      001A4A 7C                    5945 	ld	a, h
      001A4B F8 05                 5946 	ldhl	sp,	#5
      001A4D 32                    5947 	ld	(hl-), a
      001A4E 2A                    5948 	ld	a,	(hl+)
      001A4F 66                    5949 	ld	h, (hl)
      001A50 6F                    5950 	ld	l, a
      001A51 36 00                 5951 	ld	(hl), #0x00
                                   5952 ;main.c:712: set_sprite_prop(20+oldestProjectile, 0); 
      001A53 C3r63r1C              5953 	jp	00136$
      001A56                       5954 00135$:
                                   5955 ;main.c:717: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type+1);
                                   5956 ;main.c:716: else if (xDir != 0 && yDir == 0) {
      001A56 FAr43r00              5957 	ld	a, (#_xDir)
      001A59 B7                    5958 	or	a, a
      001A5A CAr23r1B              5959 	jp	Z, 00131$
      001A5D FAr44r00              5960 	ld	a, (#_yDir)
      001A60 B7                    5961 	or	a, a
      001A61 C2r23r1B              5962 	jp	NZ, 00131$
                                   5963 ;main.c:717: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type+1);
      001A64 F8 04                 5964 	ldhl	sp,	#4
      001A66 34                    5965 	inc	(hl)
                                   5966 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001A67 23                    5967 	inc	hl
      001A68 7E                    5968 	ld	a, (hl)
      001A69 F8 02                 5969 	ldhl	sp,	#2
      001A6B 22                    5970 	ld	(hl+), a
      001A6C 36 00                 5971 	ld	(hl), #0x00
      001A6E 3E 02                 5972 	ld	a, #0x02
      001A70                       5973 00251$:
      001A70 F8 02                 5974 	ldhl	sp,	#2
      001A72 CB 26                 5975 	sla	(hl)
      001A74 23                    5976 	inc	hl
      001A75 CB 16                 5977 	rl	(hl)
      001A77 3D                    5978 	dec	a
      001A78 20 F6                 5979 	jr	NZ, 00251$
      001A7A 2B                    5980 	dec	hl
      001A7B 2A                    5981 	ld	a, (hl+)
      001A7C 5F                    5982 	ld	e, a
      001A7D 56                    5983 	ld	d, (hl)
      001A7E 21r00r00              5984 	ld	hl, #_shadow_OAM
      001A81 19                    5985 	add	hl, de
      001A82 33                    5986 	inc	sp
      001A83 33                    5987 	inc	sp
      001A84 5D                    5988 	ld	e, l
      001A85 54                    5989 	ld	d, h
      001A86 D5                    5990 	push	de
      001A87 21 02 00              5991 	ld	hl, #0x0002
      001A8A 19                    5992 	add	hl, de
      001A8B E5                    5993 	push	hl
      001A8C 7D                    5994 	ld	a, l
      001A8D F8 04                 5995 	ldhl	sp,	#4
      001A8F 77                    5996 	ld	(hl), a
      001A90 E1                    5997 	pop	hl
      001A91 7C                    5998 	ld	a, h
      001A92 F8 03                 5999 	ldhl	sp,	#3
      001A94 32                    6000 	ld	(hl-), a
      001A95 2A                    6001 	ld	a, (hl+)
      001A96 5F                    6002 	ld	e, a
      001A97 2A                    6003 	ld	a, (hl+)
      001A98 57                    6004 	ld	d, a
      001A99 7E                    6005 	ld	a, (hl)
      001A9A 12                    6006 	ld	(de), a
                                   6007 ;main.c:685: oldestProjectile += 1;
      001A9B FAr41r00              6008 	ld	a, (#_oldestProjectile)
                                   6009 ;main.c:705: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      001A9E C6 14                 6010 	add	a, #0x14
      001AA0 F8 05                 6011 	ldhl	sp,	#5
      001AA2 77                    6012 	ld	(hl), a
                                   6013 ;main.c:718: if (xDir == 1) {
      001AA3 FAr43r00              6014 	ld	a, (#_xDir)
      001AA6 3D                    6015 	dec	a
      001AA7 20 3D                 6016 	jr	NZ, 00113$
                                   6017 ;main.c:719: set_sprite_prop(20+oldestProjectile, 0); 
                                   6018 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001AA9 F8 05                 6019 	ldhl	sp,	#5
      001AAB 3A                    6020 	ld	a, (hl-)
      001AAC 22                    6021 	ld	(hl+), a
      001AAD 36 00                 6022 	ld	(hl), #0x00
      001AAF 3E 02                 6023 	ld	a, #0x02
      001AB1                       6024 00254$:
      001AB1 F8 04                 6025 	ldhl	sp,	#4
      001AB3 CB 26                 6026 	sla	(hl)
      001AB5 23                    6027 	inc	hl
      001AB6 CB 16                 6028 	rl	(hl)
      001AB8 3D                    6029 	dec	a
      001AB9 20 F6                 6030 	jr	NZ, 00254$
      001ABB 2B                    6031 	dec	hl
      001ABC 2A                    6032 	ld	a, (hl+)
      001ABD 5F                    6033 	ld	e, a
      001ABE 56                    6034 	ld	d, (hl)
      001ABF 21r00r00              6035 	ld	hl, #_shadow_OAM
      001AC2 19                    6036 	add	hl, de
      001AC3 E5                    6037 	push	hl
      001AC4 7D                    6038 	ld	a, l
      001AC5 F8 04                 6039 	ldhl	sp,	#4
      001AC7 77                    6040 	ld	(hl), a
      001AC8 E1                    6041 	pop	hl
      001AC9 7C                    6042 	ld	a, h
      001ACA F8 03                 6043 	ldhl	sp,	#3
      001ACC 32                    6044 	ld	(hl-), a
      001ACD 2A                    6045 	ld	a, (hl+)
      001ACE 5F                    6046 	ld	e, a
      001ACF 56                    6047 	ld	d, (hl)
      001AD0 21 03 00              6048 	ld	hl, #0x0003
      001AD3 19                    6049 	add	hl, de
      001AD4 E5                    6050 	push	hl
      001AD5 7D                    6051 	ld	a, l
      001AD6 F8 06                 6052 	ldhl	sp,	#6
      001AD8 77                    6053 	ld	(hl), a
      001AD9 E1                    6054 	pop	hl
      001ADA 7C                    6055 	ld	a, h
      001ADB F8 05                 6056 	ldhl	sp,	#5
      001ADD 32                    6057 	ld	(hl-), a
      001ADE 2A                    6058 	ld	a,	(hl+)
      001ADF 66                    6059 	ld	h, (hl)
      001AE0 6F                    6060 	ld	l, a
      001AE1 36 00                 6061 	ld	(hl), #0x00
                                   6062 ;main.c:719: set_sprite_prop(20+oldestProjectile, 0); 
      001AE3 C3r63r1C              6063 	jp	00136$
      001AE6                       6064 00113$:
                                   6065 ;main.c:722: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
                                   6066 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001AE6 F8 05                 6067 	ldhl	sp,	#5
      001AE8 3A                    6068 	ld	a, (hl-)
      001AE9 22                    6069 	ld	(hl+), a
      001AEA 36 00                 6070 	ld	(hl), #0x00
      001AEC 3E 02                 6071 	ld	a, #0x02
      001AEE                       6072 00255$:
      001AEE F8 04                 6073 	ldhl	sp,	#4
      001AF0 CB 26                 6074 	sla	(hl)
      001AF2 23                    6075 	inc	hl
      001AF3 CB 16                 6076 	rl	(hl)
      001AF5 3D                    6077 	dec	a
      001AF6 20 F6                 6078 	jr	NZ, 00255$
      001AF8 2B                    6079 	dec	hl
      001AF9 2A                    6080 	ld	a, (hl+)
      001AFA 5F                    6081 	ld	e, a
      001AFB 56                    6082 	ld	d, (hl)
      001AFC 21r00r00              6083 	ld	hl, #_shadow_OAM
      001AFF 19                    6084 	add	hl, de
      001B00 E5                    6085 	push	hl
      001B01 7D                    6086 	ld	a, l
      001B02 F8 04                 6087 	ldhl	sp,	#4
      001B04 77                    6088 	ld	(hl), a
      001B05 E1                    6089 	pop	hl
      001B06 7C                    6090 	ld	a, h
      001B07 F8 03                 6091 	ldhl	sp,	#3
      001B09 32                    6092 	ld	(hl-), a
      001B0A 2A                    6093 	ld	a, (hl+)
      001B0B 5F                    6094 	ld	e, a
      001B0C 56                    6095 	ld	d, (hl)
      001B0D 21 03 00              6096 	ld	hl, #0x0003
      001B10 19                    6097 	add	hl, de
      001B11 E5                    6098 	push	hl
      001B12 7D                    6099 	ld	a, l
      001B13 F8 06                 6100 	ldhl	sp,	#6
      001B15 77                    6101 	ld	(hl), a
      001B16 E1                    6102 	pop	hl
      001B17 7C                    6103 	ld	a, h
      001B18 F8 05                 6104 	ldhl	sp,	#5
      001B1A 32                    6105 	ld	(hl-), a
      001B1B 2A                    6106 	ld	a,	(hl+)
      001B1C 66                    6107 	ld	h, (hl)
      001B1D 6F                    6108 	ld	l, a
      001B1E 36 20                 6109 	ld	(hl), #0x20
                                   6110 ;main.c:722: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
      001B20 C3r63r1C              6111 	jp	00136$
      001B23                       6112 00131$:
                                   6113 ;main.c:726: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type+2);
      001B23 F8 04                 6114 	ldhl	sp,	#4
      001B25 7E                    6115 	ld	a, (hl)
      001B26 C6 02                 6116 	add	a, #0x02
      001B28 F8 01                 6117 	ldhl	sp,	#1
      001B2A 77                    6118 	ld	(hl), a
                                   6119 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001B2B F8 05                 6120 	ldhl	sp,	#5
      001B2D 3A                    6121 	ld	a, (hl-)
      001B2E 22                    6122 	ld	(hl+), a
      001B2F 36 00                 6123 	ld	(hl), #0x00
      001B31 3E 02                 6124 	ld	a, #0x02
      001B33                       6125 00256$:
      001B33 F8 04                 6126 	ldhl	sp,	#4
      001B35 CB 26                 6127 	sla	(hl)
      001B37 23                    6128 	inc	hl
      001B38 CB 16                 6129 	rl	(hl)
      001B3A 3D                    6130 	dec	a
      001B3B 20 F6                 6131 	jr	NZ, 00256$
      001B3D 11r00r00              6132 	ld	de, #_shadow_OAM
      001B40 3A                    6133 	ld	a, (hl-)
      001B41 6E                    6134 	ld	l, (hl)
      001B42 67                    6135 	ld	h, a
      001B43 19                    6136 	add	hl, de
      001B44 E5                    6137 	push	hl
      001B45 7D                    6138 	ld	a, l
      001B46 F8 04                 6139 	ldhl	sp,	#4
      001B48 77                    6140 	ld	(hl), a
      001B49 E1                    6141 	pop	hl
      001B4A 7C                    6142 	ld	a, h
      001B4B F8 03                 6143 	ldhl	sp,	#3
      001B4D 32                    6144 	ld	(hl-), a
      001B4E 2A                    6145 	ld	a, (hl+)
      001B4F 5F                    6146 	ld	e, a
      001B50 56                    6147 	ld	d, (hl)
      001B51 21 02 00              6148 	ld	hl, #0x0002
      001B54 19                    6149 	add	hl, de
      001B55 E5                    6150 	push	hl
      001B56 7D                    6151 	ld	a, l
      001B57 F8 06                 6152 	ldhl	sp,	#6
      001B59 77                    6153 	ld	(hl), a
      001B5A E1                    6154 	pop	hl
      001B5B 7C                    6155 	ld	a, h
      001B5C F8 05                 6156 	ldhl	sp,	#5
      001B5E 32                    6157 	ld	(hl-), a
      001B5F 2A                    6158 	ld	a, (hl+)
      001B60 5F                    6159 	ld	e, a
      001B61 56                    6160 	ld	d, (hl)
      001B62 F8 01                 6161 	ldhl	sp,	#1
      001B64 7E                    6162 	ld	a, (hl)
      001B65 12                    6163 	ld	(de), a
                                   6164 ;main.c:727: if (xDir == 1 && yDir == -1) {
      001B66 FAr43r00              6165 	ld	a, (#_xDir)
      001B69 3D                    6166 	dec	a
      001B6A 3E 01                 6167 	ld	a, #0x01
      001B6C 28 01                 6168 	jr	Z, 00258$
      001B6E AF                    6169 	xor	a, a
      001B6F                       6170 00258$:
      001B6F F8 02                 6171 	ldhl	sp,	#2
      001B71 77                    6172 	ld	(hl), a
                                   6173 ;main.c:685: oldestProjectile += 1;
      001B72 FAr41r00              6174 	ld	a, (#_oldestProjectile)
      001B75 F8 05                 6175 	ldhl	sp,	#5
      001B77 77                    6176 	ld	(hl), a
                                   6177 ;main.c:727: if (xDir == 1 && yDir == -1) {
      001B78 FAr44r00              6178 	ld	a, (#_yDir)
      001B7B 3C                    6179 	inc	a
      001B7C 3E 01                 6180 	ld	a, #0x01
      001B7E 28 01                 6181 	jr	Z, 00260$
      001B80 AF                    6182 	xor	a, a
      001B81                       6183 00260$:
      001B81 F8 03                 6184 	ldhl	sp,	#3
                                   6185 ;main.c:705: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      001B83 22                    6186 	ld	(hl+), a
      001B84 23                    6187 	inc	hl
      001B85 3A                    6188 	ld	a, (hl-)
      001B86 C6 14                 6189 	add	a, #0x14
                                   6190 ;main.c:727: if (xDir == 1 && yDir == -1) {
      001B88 32                    6191 	ld	(hl-), a
      001B89 2B                    6192 	dec	hl
      001B8A 7E                    6193 	ld	a, (hl)
      001B8B B7                    6194 	or	a, a
      001B8C 28 43                 6195 	jr	Z, 00127$
      001B8E 23                    6196 	inc	hl
      001B8F 7E                    6197 	ld	a, (hl)
      001B90 B7                    6198 	or	a, a
      001B91 28 3E                 6199 	jr	Z, 00127$
                                   6200 ;main.c:728: set_sprite_prop(20+oldestProjectile, 0); //default is right & up
      001B93 23                    6201 	inc	hl
      001B94 2A                    6202 	ld	a, (hl+)
      001B95 77                    6203 	ld	(hl), a
                                   6204 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001B96 3A                    6205 	ld	a, (hl-)
      001B97 22                    6206 	ld	(hl+), a
      001B98 36 00                 6207 	ld	(hl), #0x00
      001B9A 3E 02                 6208 	ld	a, #0x02
      001B9C                       6209 00261$:
      001B9C F8 04                 6210 	ldhl	sp,	#4
      001B9E CB 26                 6211 	sla	(hl)
      001BA0 23                    6212 	inc	hl
      001BA1 CB 16                 6213 	rl	(hl)
      001BA3 3D                    6214 	dec	a
      001BA4 20 F6                 6215 	jr	NZ, 00261$
      001BA6 2B                    6216 	dec	hl
      001BA7 2A                    6217 	ld	a, (hl+)
      001BA8 5F                    6218 	ld	e, a
      001BA9 56                    6219 	ld	d, (hl)
      001BAA 21r00r00              6220 	ld	hl, #_shadow_OAM
      001BAD 19                    6221 	add	hl, de
      001BAE E5                    6222 	push	hl
      001BAF 7D                    6223 	ld	a, l
      001BB0 F8 04                 6224 	ldhl	sp,	#4
      001BB2 77                    6225 	ld	(hl), a
      001BB3 E1                    6226 	pop	hl
      001BB4 7C                    6227 	ld	a, h
      001BB5 F8 03                 6228 	ldhl	sp,	#3
      001BB7 32                    6229 	ld	(hl-), a
      001BB8 2A                    6230 	ld	a, (hl+)
      001BB9 5F                    6231 	ld	e, a
      001BBA 56                    6232 	ld	d, (hl)
      001BBB 21 03 00              6233 	ld	hl, #0x0003
      001BBE 19                    6234 	add	hl, de
      001BBF E5                    6235 	push	hl
      001BC0 7D                    6236 	ld	a, l
      001BC1 F8 06                 6237 	ldhl	sp,	#6
      001BC3 77                    6238 	ld	(hl), a
      001BC4 E1                    6239 	pop	hl
      001BC5 7C                    6240 	ld	a, h
      001BC6 F8 05                 6241 	ldhl	sp,	#5
      001BC8 32                    6242 	ld	(hl-), a
      001BC9 2A                    6243 	ld	a,	(hl+)
      001BCA 66                    6244 	ld	h, (hl)
      001BCB 6F                    6245 	ld	l, a
      001BCC 36 00                 6246 	ld	(hl), #0x00
                                   6247 ;main.c:728: set_sprite_prop(20+oldestProjectile, 0); //default is right & up
      001BCE C3r63r1C              6248 	jp	00136$
      001BD1                       6249 00127$:
                                   6250 ;main.c:706: if (yDir == 1) {
      001BD1 FAr44r00              6251 	ld	a, (#_yDir)
      001BD4 3D                    6252 	dec	a
      001BD5 3E 01                 6253 	ld	a, #0x01
      001BD7 28 01                 6254 	jr	Z, 00263$
      001BD9 AF                    6255 	xor	a, a
      001BDA                       6256 00263$:
      001BDA F8 05                 6257 	ldhl	sp,	#5
      001BDC 77                    6258 	ld	(hl), a
                                   6259 ;main.c:730: else if (xDir == 1 && yDir == 1) {
      001BDD F8 02                 6260 	ldhl	sp,	#2
      001BDF 7E                    6261 	ld	a, (hl)
      001BE0 B7                    6262 	or	a, a
      001BE1 28 43                 6263 	jr	Z, 00123$
      001BE3 F8 05                 6264 	ldhl	sp,	#5
      001BE5 7E                    6265 	ld	a, (hl)
      001BE6 B7                    6266 	or	a, a
      001BE7 28 3D                 6267 	jr	Z, 00123$
                                   6268 ;main.c:731: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
      001BE9 2B                    6269 	dec	hl
      001BEA 2A                    6270 	ld	a, (hl+)
      001BEB 77                    6271 	ld	(hl), a
                                   6272 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001BEC 3A                    6273 	ld	a, (hl-)
      001BED 22                    6274 	ld	(hl+), a
      001BEE 36 00                 6275 	ld	(hl), #0x00
      001BF0 3E 02                 6276 	ld	a, #0x02
      001BF2                       6277 00264$:
      001BF2 F8 04                 6278 	ldhl	sp,	#4
      001BF4 CB 26                 6279 	sla	(hl)
      001BF6 23                    6280 	inc	hl
      001BF7 CB 16                 6281 	rl	(hl)
      001BF9 3D                    6282 	dec	a
      001BFA 20 F6                 6283 	jr	NZ, 00264$
      001BFC 2B                    6284 	dec	hl
      001BFD 2A                    6285 	ld	a, (hl+)
      001BFE 5F                    6286 	ld	e, a
      001BFF 56                    6287 	ld	d, (hl)
      001C00 21r00r00              6288 	ld	hl, #_shadow_OAM
      001C03 19                    6289 	add	hl, de
      001C04 E5                    6290 	push	hl
      001C05 7D                    6291 	ld	a, l
      001C06 F8 04                 6292 	ldhl	sp,	#4
      001C08 77                    6293 	ld	(hl), a
      001C09 E1                    6294 	pop	hl
      001C0A 7C                    6295 	ld	a, h
      001C0B F8 03                 6296 	ldhl	sp,	#3
      001C0D 32                    6297 	ld	(hl-), a
      001C0E 2A                    6298 	ld	a, (hl+)
      001C0F 5F                    6299 	ld	e, a
      001C10 56                    6300 	ld	d, (hl)
      001C11 21 03 00              6301 	ld	hl, #0x0003
      001C14 19                    6302 	add	hl, de
      001C15 E5                    6303 	push	hl
      001C16 7D                    6304 	ld	a, l
      001C17 F8 06                 6305 	ldhl	sp,	#6
      001C19 77                    6306 	ld	(hl), a
      001C1A E1                    6307 	pop	hl
      001C1B 7C                    6308 	ld	a, h
      001C1C F8 05                 6309 	ldhl	sp,	#5
      001C1E 32                    6310 	ld	(hl-), a
      001C1F 2A                    6311 	ld	a,	(hl+)
      001C20 66                    6312 	ld	h, (hl)
      001C21 6F                    6313 	ld	l, a
      001C22 36 40                 6314 	ld	(hl), #0x40
                                   6315 ;main.c:731: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
      001C24 18 3D                 6316 	jr	00136$
      001C26                       6317 00123$:
                                   6318 ;main.c:733: else if (xDir == -1 && yDir == 1) {
      001C26 FAr43r00              6319 	ld	a, (#_xDir)
      001C29 3C                    6320 	inc	a
      001C2A 3E 01                 6321 	ld	a, #0x01
      001C2C 28 01                 6322 	jr	Z, 00266$
      001C2E AF                    6323 	xor	a, a
      001C2F                       6324 00266$:
      001C2F 4F                    6325 	ld	c, a
      001C30 B7                    6326 	or	a, a
      001C31 28 17                 6327 	jr	Z, 00119$
      001C33 F8 05                 6328 	ldhl	sp,	#5
      001C35 7E                    6329 	ld	a, (hl)
      001C36 B7                    6330 	or	a, a
      001C37 28 11                 6331 	jr	Z, 00119$
                                   6332 ;main.c:734: set_sprite_prop(20+oldestProjectile, S_FLIPY | S_FLIPX); 
      001C39 2B                    6333 	dec	hl
                                   6334 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001C3A 6E                    6335 	ld	l, (hl)
      001C3B 01r00r00              6336 	ld	bc, #_shadow_OAM+0
                                   6337 ;	spillPairReg hl
                                   6338 ;	spillPairReg hl
      001C3E 26 00                 6339 	ld	h, #0x00
                                   6340 ;	spillPairReg hl
                                   6341 ;	spillPairReg hl
      001C40 29                    6342 	add	hl, hl
      001C41 29                    6343 	add	hl, hl
      001C42 09                    6344 	add	hl, bc
      001C43 23                    6345 	inc	hl
      001C44 23                    6346 	inc	hl
      001C45 23                    6347 	inc	hl
      001C46 36 60                 6348 	ld	(hl), #0x60
                                   6349 ;main.c:734: set_sprite_prop(20+oldestProjectile, S_FLIPY | S_FLIPX); 
      001C48 18 19                 6350 	jr	00136$
      001C4A                       6351 00119$:
                                   6352 ;main.c:736: else if (xDir == -1 && yDir == -1) {
      001C4A 79                    6353 	ld	a, c
      001C4B B7                    6354 	or	a, a
      001C4C 28 15                 6355 	jr	Z, 00136$
      001C4E F8 03                 6356 	ldhl	sp,	#3
      001C50 7E                    6357 	ld	a, (hl)
      001C51 B7                    6358 	or	a, a
      001C52 28 0F                 6359 	jr	Z, 00136$
                                   6360 ;main.c:737: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
      001C54 23                    6361 	inc	hl
                                   6362 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001C55 6E                    6363 	ld	l, (hl)
      001C56 01r00r00              6364 	ld	bc, #_shadow_OAM+0
                                   6365 ;	spillPairReg hl
                                   6366 ;	spillPairReg hl
      001C59 26 00                 6367 	ld	h, #0x00
                                   6368 ;	spillPairReg hl
                                   6369 ;	spillPairReg hl
      001C5B 29                    6370 	add	hl, hl
      001C5C 29                    6371 	add	hl, hl
      001C5D 09                    6372 	add	hl, bc
      001C5E 23                    6373 	inc	hl
      001C5F 23                    6374 	inc	hl
      001C60 23                    6375 	inc	hl
      001C61 36 20                 6376 	ld	(hl), #0x20
                                   6377 ;main.c:737: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
      001C63                       6378 00136$:
                                   6379 ;main.c:741: move_sprite(20+oldestProjectile, playerDrawX, playerDrawY);
      001C63 21r4Cr00              6380 	ld	hl, #_playerDrawY
      001C66 46                    6381 	ld	b, (hl)
      001C67 21r4Br00              6382 	ld	hl, #_playerDrawX
      001C6A 4E                    6383 	ld	c, (hl)
      001C6B FAr41r00              6384 	ld	a, (#_oldestProjectile)
      001C6E C6 14                 6385 	add	a, #0x14
                                   6386 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001C70 6F                    6387 	ld	l, a
                                   6388 ;	spillPairReg hl
                                   6389 ;	spillPairReg hl
      001C71 26 00                 6390 	ld	h, #0x00
                                   6391 ;	spillPairReg hl
                                   6392 ;	spillPairReg hl
      001C73 29                    6393 	add	hl, hl
      001C74 29                    6394 	add	hl, hl
      001C75 11r00r00              6395 	ld	de, #_shadow_OAM
      001C78 19                    6396 	add	hl, de
                                   6397 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001C79 78                    6398 	ld	a, b
      001C7A 22                    6399 	ld	(hl+), a
      001C7B 71                    6400 	ld	(hl), c
                                   6401 ;main.c:742: fireCooldown = projectiles[oldestProjectile].delay;
      001C7C 21r41r00              6402 	ld	hl, #_oldestProjectile
      001C7F 4E                    6403 	ld	c, (hl)
      001C80 06 00                 6404 	ld	b, #0x00
      001C82 69                    6405 	ld	l, c
      001C83 60                    6406 	ld	h, b
      001C84 29                    6407 	add	hl, hl
      001C85 29                    6408 	add	hl, hl
      001C86 09                    6409 	add	hl, bc
      001C87 29                    6410 	add	hl, hl
      001C88 09                    6411 	add	hl, bc
      001C89 01r50r00              6412 	ld	bc,#_projectiles
      001C8C 09                    6413 	add	hl,bc
      001C8D 4D                    6414 	ld	c, l
      001C8E 44                    6415 	ld	b, h
      001C8F 21 09 00              6416 	ld	hl, #0x0009
      001C92 09                    6417 	add	hl, bc
      001C93 7E                    6418 	ld	a, (hl)
      001C94 EAr42r00              6419 	ld	(#_fireCooldown),a
                                   6420 ;main.c:744: playSound(projectiles[oldestProjectile].type);
      001C97 21 0A 00              6421 	ld	hl, #0x000a
      001C9A 09                    6422 	add	hl, bc
      001C9B 7E                    6423 	ld	a, (hl)
      001C9C F5                    6424 	push	af
      001C9D 33                    6425 	inc	sp
      001C9E CDrC5r08              6426 	call	_playSound
                                   6427 ;main.c:748: }
      001CA1 E8 07                 6428 	add	sp, #7
      001CA3 C9                    6429 	ret
                                   6430 ;main.c:751: void moveProjectiles() {
                                   6431 ;	---------------------------------
                                   6432 ; Function moveProjectiles
                                   6433 ; ---------------------------------
      001CA4                       6434 _moveProjectiles::
      001CA4 E8 F7                 6435 	add	sp, #-9
                                   6436 ;main.c:752: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001CA6 F8 08                 6437 	ldhl	sp,	#8
      001CA8 36 00                 6438 	ld	(hl), #0x00
      001CAA                       6439 00112$:
      001CAA 21rDDr05              6440 	ld	hl, #_PROJECTILECOUNT
      001CAD 4E                    6441 	ld	c, (hl)
      001CAE F8 08                 6442 	ldhl	sp,	#8
      001CB0 7E                    6443 	ld	a, (hl)
      001CB1 91                    6444 	sub	a, c
      001CB2 D2rF3r1D              6445 	jp	NC, 00114$
                                   6446 ;main.c:753: projectiles[i].x -= xOverflow;
      001CB5 4E                    6447 	ld	c, (hl)
      001CB6 06 00                 6448 	ld	b, #0x00
      001CB8 69                    6449 	ld	l, c
      001CB9 60                    6450 	ld	h, b
      001CBA 29                    6451 	add	hl, hl
      001CBB 29                    6452 	add	hl, hl
      001CBC 09                    6453 	add	hl, bc
      001CBD 29                    6454 	add	hl, hl
      001CBE 09                    6455 	add	hl, bc
      001CBF 01r50r00              6456 	ld	bc,#_projectiles
      001CC2 09                    6457 	add	hl,bc
      001CC3 33                    6458 	inc	sp
      001CC4 33                    6459 	inc	sp
      001CC5 5D                    6460 	ld	e, l
      001CC6 54                    6461 	ld	d, h
      001CC7 D5                    6462 	push	de
      001CC8 1A                    6463 	ld	a, (de)
      001CC9 4F                    6464 	ld	c, a
      001CCA 13                    6465 	inc	de
      001CCB 1A                    6466 	ld	a, (de)
      001CCC 47                    6467 	ld	b, a
      001CCD 79                    6468 	ld	a, c
      001CCE 21r51r00              6469 	ld	hl, #_xOverflow
      001CD1 96                    6470 	sub	a, (hl)
      001CD2 23                    6471 	inc	hl
      001CD3 4F                    6472 	ld	c, a
      001CD4 78                    6473 	ld	a, b
      001CD5 9E                    6474 	sbc	a, (hl)
      001CD6 47                    6475 	ld	b, a
      001CD7 E1                    6476 	pop	hl
      001CD8 E5                    6477 	push	hl
      001CD9 79                    6478 	ld	a, c
      001CDA 22                    6479 	ld	(hl+), a
      001CDB 70                    6480 	ld	(hl), b
                                   6481 ;main.c:754: projectiles[i].y -= yOverflow;
      001CDC D1                    6482 	pop	de
      001CDD D5                    6483 	push	de
      001CDE 21 02 00              6484 	ld	hl, #0x0002
      001CE1 19                    6485 	add	hl, de
      001CE2 E5                    6486 	push	hl
      001CE3 7D                    6487 	ld	a, l
      001CE4 F8 04                 6488 	ldhl	sp,	#4
      001CE6 77                    6489 	ld	(hl), a
      001CE7 E1                    6490 	pop	hl
      001CE8 7C                    6491 	ld	a, h
      001CE9 F8 03                 6492 	ldhl	sp,	#3
      001CEB 32                    6493 	ld	(hl-), a
      001CEC 2A                    6494 	ld	a, (hl+)
      001CED 5F                    6495 	ld	e, a
      001CEE 56                    6496 	ld	d, (hl)
      001CEF 1A                    6497 	ld	a, (de)
      001CF0 4F                    6498 	ld	c, a
      001CF1 13                    6499 	inc	de
      001CF2 1A                    6500 	ld	a, (de)
      001CF3 47                    6501 	ld	b, a
      001CF4 79                    6502 	ld	a, c
      001CF5 21r53r00              6503 	ld	hl, #_yOverflow
      001CF8 96                    6504 	sub	a, (hl)
      001CF9 23                    6505 	inc	hl
      001CFA 4F                    6506 	ld	c, a
      001CFB 78                    6507 	ld	a, b
      001CFC 9E                    6508 	sbc	a, (hl)
      001CFD 47                    6509 	ld	b, a
      001CFE F8 02                 6510 	ldhl	sp,	#2
      001D00 2A                    6511 	ld	a,	(hl+)
      001D01 66                    6512 	ld	h, (hl)
      001D02 6F                    6513 	ld	l, a
      001D03 79                    6514 	ld	a, c
      001D04 22                    6515 	ld	(hl+), a
      001D05 70                    6516 	ld	(hl), b
                                   6517 ;main.c:756: if (projectiles[i].active) {
      001D06 D1                    6518 	pop	de
      001D07 D5                    6519 	push	de
      001D08 21 08 00              6520 	ld	hl, #0x0008
      001D0B 19                    6521 	add	hl, de
      001D0C 4D                    6522 	ld	c, l
      001D0D 44                    6523 	ld	b, h
      001D0E 0A                    6524 	ld	a, (bc)
      001D0F B7                    6525 	or	a, a
      001D10 CArEDr1D              6526 	jp	Z, 00113$
                                   6527 ;main.c:757: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      001D13 F8 02                 6528 	ldhl	sp,#2
      001D15 2A                    6529 	ld	a, (hl+)
      001D16 5F                    6530 	ld	e, a
      001D17 56                    6531 	ld	d, (hl)
      001D18 1A                    6532 	ld	a, (de)
      001D19 4F                    6533 	ld	c, a
      001D1A 13                    6534 	inc	de
      001D1B 1A                    6535 	ld	a, (de)
      001D1C 47                    6536 	ld	b, a
      001D1D D1                    6537 	pop	de
      001D1E D5                    6538 	push	de
      001D1F 21 05 00              6539 	ld	hl, #0x0005
      001D22 19                    6540 	add	hl, de
      001D23 5D                    6541 	ld	e, l
      001D24 54                    6542 	ld	d, h
      001D25 1A                    6543 	ld	a, (de)
      001D26 6F                    6544 	ld	l, a
                                   6545 ;	spillPairReg hl
                                   6546 ;	spillPairReg hl
      001D27 07                    6547 	rlca
      001D28 9F                    6548 	sbc	a, a
      001D29 67                    6549 	ld	h, a
                                   6550 ;	spillPairReg hl
                                   6551 ;	spillPairReg hl
      001D2A 09                    6552 	add	hl, bc
      001D2B 4D                    6553 	ld	c, l
      001D2C 44                    6554 	ld	b, h
      001D2D F8 04                 6555 	ldhl	sp,	#4
      001D2F 79                    6556 	ld	a, c
      001D30 22                    6557 	ld	(hl+), a
      001D31 70                    6558 	ld	(hl), b
                                   6559 ;main.c:758: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      001D32 D1                    6560 	pop	de
      001D33 D5                    6561 	push	de
      001D34 1A                    6562 	ld	a, (de)
      001D35 4F                    6563 	ld	c, a
      001D36 13                    6564 	inc	de
      001D37 1A                    6565 	ld	a, (de)
      001D38 47                    6566 	ld	b, a
      001D39 D1                    6567 	pop	de
      001D3A D5                    6568 	push	de
      001D3B 21 04 00              6569 	ld	hl, #0x0004
      001D3E 19                    6570 	add	hl, de
      001D3F 5D                    6571 	ld	e, l
      001D40 54                    6572 	ld	d, h
      001D41 1A                    6573 	ld	a, (de)
      001D42 6F                    6574 	ld	l, a
                                   6575 ;	spillPairReg hl
                                   6576 ;	spillPairReg hl
      001D43 07                    6577 	rlca
      001D44 9F                    6578 	sbc	a, a
      001D45 67                    6579 	ld	h, a
                                   6580 ;	spillPairReg hl
                                   6581 ;	spillPairReg hl
      001D46 09                    6582 	add	hl, bc
      001D47 4D                    6583 	ld	c, l
      001D48 44                    6584 	ld	b, h
                                   6585 ;main.c:760: move_sprite(20+i, newX, newY);
      001D49 F8 04                 6586 	ldhl	sp,	#4
      001D4B 2A                    6587 	ld	a, (hl+)
      001D4C 23                    6588 	inc	hl
      001D4D 5F                    6589 	ld	e, a
      001D4E 79                    6590 	ld	a, c
      001D4F 22                    6591 	ld	(hl+), a
      001D50 23                    6592 	inc	hl
      001D51 3A                    6593 	ld	a, (hl-)
      001D52 C6 14                 6594 	add	a, #0x14
      001D54 77                    6595 	ld	(hl), a
      001D55 56                    6596 	ld	d, (hl)
                                   6597 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001D56 26 00                 6598 	ld	h, #0x00
                                   6599 ;	spillPairReg hl
                                   6600 ;	spillPairReg hl
      001D58 6A                    6601 	ld	l, d
      001D59 29                    6602 	add	hl, hl
      001D5A 29                    6603 	add	hl, hl
      001D5B D5                    6604 	push	de
      001D5C 11r00r00              6605 	ld	de, #_shadow_OAM
      001D5F 19                    6606 	add	hl, de
      001D60 D1                    6607 	pop	de
                                   6608 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001D61 7B                    6609 	ld	a, e
      001D62 22                    6610 	ld	(hl+), a
      001D63 5D                    6611 	ld	e, l
      001D64 54                    6612 	ld	d, h
      001D65 F8 06                 6613 	ldhl	sp,	#6
      001D67 7E                    6614 	ld	a, (hl)
      001D68 12                    6615 	ld	(de), a
                                   6616 ;main.c:761: projectiles[i].y = newY;
      001D69 F8 02                 6617 	ldhl	sp,#2
      001D6B 2A                    6618 	ld	a, (hl+)
      001D6C 5F                    6619 	ld	e, a
      001D6D 2A                    6620 	ld	a, (hl+)
      001D6E 57                    6621 	ld	d, a
      001D6F 2A                    6622 	ld	a, (hl+)
      001D70 12                    6623 	ld	(de), a
      001D71 13                    6624 	inc	de
      001D72 7E                    6625 	ld	a, (hl)
      001D73 12                    6626 	ld	(de), a
                                   6627 ;main.c:762: projectiles[i].x = newX;
      001D74 E1                    6628 	pop	hl
      001D75 E5                    6629 	push	hl
      001D76 79                    6630 	ld	a, c
      001D77 22                    6631 	ld	(hl+), a
      001D78 70                    6632 	ld	(hl), b
                                   6633 ;main.c:767: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      001D79 D1                    6634 	pop	de
      001D7A D5                    6635 	push	de
      001D7B 1A                    6636 	ld	a, (de)
      001D7C 6F                    6637 	ld	l, a
                                   6638 ;	spillPairReg hl
                                   6639 ;	spillPairReg hl
      001D7D 13                    6640 	inc	de
      001D7E 1A                    6641 	ld	a, (de)
      001D7F 67                    6642 	ld	h, a
                                   6643 ;	spillPairReg hl
                                   6644 ;	spillPairReg hl
      001D80 CB 78                 6645 	bit	7, b
      001D82 20 44                 6646 	jr	NZ, 00101$
      001D84 5C                    6647 	ld	e, h
      001D85 16 00                 6648 	ld	d, #0x00
      001D87 3E AA                 6649 	ld	a, #0xaa
      001D89 BD                    6650 	cp	a, l
      001D8A 3E 00                 6651 	ld	a, #0x00
      001D8C 9C                    6652 	sbc	a, h
      001D8D CB 7B                 6653 	bit	7, e
      001D8F 28 07                 6654 	jr	Z, 00147$
      001D91 CB 7A                 6655 	bit	7, d
      001D93 20 08                 6656 	jr	NZ, 00148$
      001D95 BF                    6657 	cp	a, a
      001D96 18 05                 6658 	jr	00148$
      001D98                       6659 00147$:
      001D98 CB 7A                 6660 	bit	7, d
      001D9A 28 01                 6661 	jr	Z, 00148$
      001D9C 37                    6662 	scf
      001D9D                       6663 00148$:
      001D9D 38 29                 6664 	jr	C, 00101$
                                   6665 ;main.c:754: projectiles[i].y -= yOverflow;
      001D9F F8 02                 6666 	ldhl	sp,#2
      001DA1 2A                    6667 	ld	a, (hl+)
      001DA2 5F                    6668 	ld	e, a
      001DA3 56                    6669 	ld	d, (hl)
      001DA4 1A                    6670 	ld	a, (de)
      001DA5 4F                    6671 	ld	c, a
      001DA6 13                    6672 	inc	de
      001DA7 1A                    6673 	ld	a, (de)
                                   6674 ;main.c:767: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      001DA8 47                    6675 	ld	b, a
      001DA9 CB 78                 6676 	bit	7, b
      001DAB 20 1B                 6677 	jr	NZ, 00101$
      001DAD 58                    6678 	ld	e, b
      001DAE 16 00                 6679 	ld	d, #0x00
      001DB0 3E 9A                 6680 	ld	a, #0x9a
      001DB2 B9                    6681 	cp	a, c
      001DB3 3E 00                 6682 	ld	a, #0x00
      001DB5 98                    6683 	sbc	a, b
      001DB6 CB 7B                 6684 	bit	7, e
      001DB8 28 07                 6685 	jr	Z, 00149$
      001DBA CB 7A                 6686 	bit	7, d
      001DBC 20 08                 6687 	jr	NZ, 00150$
      001DBE BF                    6688 	cp	a, a
      001DBF 18 05                 6689 	jr	00150$
      001DC1                       6690 00149$:
      001DC1 CB 7A                 6691 	bit	7, d
      001DC3 28 01                 6692 	jr	Z, 00150$
      001DC5 37                    6693 	scf
      001DC6                       6694 00150$:
      001DC6 30 25                 6695 	jr	NC, 00113$
      001DC8                       6696 00101$:
                                   6697 ;main.c:769: projectiles[i].active = 0;
      001DC8 F8 08                 6698 	ldhl	sp,	#8
      001DCA 4E                    6699 	ld	c, (hl)
      001DCB 06 00                 6700 	ld	b, #0x00
      001DCD 69                    6701 	ld	l, c
      001DCE 60                    6702 	ld	h, b
      001DCF 29                    6703 	add	hl, hl
      001DD0 29                    6704 	add	hl, hl
      001DD1 09                    6705 	add	hl, bc
      001DD2 29                    6706 	add	hl, hl
      001DD3 09                    6707 	add	hl, bc
      001DD4 11r50r00              6708 	ld	de, #_projectiles
      001DD7 19                    6709 	add	hl, de
      001DD8 01 08 00              6710 	ld	bc, #0x0008
      001DDB 09                    6711 	add	hl, bc
      001DDC 36 00                 6712 	ld	(hl), #0x00
                                   6713 ;main.c:770: set_sprite_tile(20+i, 0x7f);
      001DDE F8 07                 6714 	ldhl	sp,	#7
                                   6715 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001DE0 6E                    6716 	ld	l, (hl)
                                   6717 ;	spillPairReg hl
                                   6718 ;	spillPairReg hl
      001DE1 26 00                 6719 	ld	h, #0x00
                                   6720 ;	spillPairReg hl
                                   6721 ;	spillPairReg hl
      001DE3 29                    6722 	add	hl, hl
      001DE4 29                    6723 	add	hl, hl
      001DE5 11r00r00              6724 	ld	de, #_shadow_OAM
      001DE8 19                    6725 	add	hl, de
      001DE9 23                    6726 	inc	hl
      001DEA 23                    6727 	inc	hl
      001DEB 36 7F                 6728 	ld	(hl), #0x7f
                                   6729 ;main.c:770: set_sprite_tile(20+i, 0x7f);
      001DED                       6730 00113$:
                                   6731 ;main.c:752: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001DED F8 08                 6732 	ldhl	sp,	#8
      001DEF 34                    6733 	inc	(hl)
      001DF0 C3rAAr1C              6734 	jp	00112$
      001DF3                       6735 00114$:
                                   6736 ;main.c:775: }
      001DF3 E8 09                 6737 	add	sp, #9
      001DF5 C9                    6738 	ret
                                   6739 ;main.c:778: void initProjectiles() {
                                   6740 ;	---------------------------------
                                   6741 ; Function initProjectiles
                                   6742 ; ---------------------------------
      001DF6                       6743 _initProjectiles::
                                   6744 ;main.c:779: set_sprite_data(20, 9, ProjectileTiles);
      001DF6 11r37r05              6745 	ld	de, #_ProjectileTiles
      001DF9 D5                    6746 	push	de
      001DFA 21 14 09              6747 	ld	hl, #0x914
      001DFD E5                    6748 	push	hl
      001DFE CDr00r00              6749 	call	_set_sprite_data
      001E01 E8 04                 6750 	add	sp, #4
                                   6751 ;main.c:781: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001E03 AF                    6752 	xor	a, a
      001E04                       6753 00103$:
      001E04 21rDDr05              6754 	ld	hl, #_PROJECTILECOUNT
      001E07 4E                    6755 	ld	c, (hl)
      001E08 B9                    6756 	cp	a, c
      001E09 D0                    6757 	ret	NC
      001E0A 3C                    6758 	inc	a
                                   6759 ;main.c:785: }
      001E0B 18 F7                 6760 	jr	00103$
                                   6761 ;main.c:787: void initGame() {
                                   6762 ;	---------------------------------
                                   6763 ; Function initGame
                                   6764 ; ---------------------------------
      001E0D                       6765 _initGame::
                                   6766 ;main.c:790: xDir = 0;
      001E0D 21r43r00              6767 	ld	hl, #_xDir
      001E10 36 00                 6768 	ld	(hl), #0x00
                                   6769 ;main.c:791: yDir = -1;
      001E12 21r44r00              6770 	ld	hl, #_yDir
      001E15 36 FF                 6771 	ld	(hl), #0xff
                                   6772 ;main.c:792: xSpeed = 0;
      001E17 21r45r00              6773 	ld	hl, #_xSpeed
      001E1A 36 00                 6774 	ld	(hl), #0x00
                                   6775 ;main.c:793: ySpeed = 0;
      001E1C 21r46r00              6776 	ld	hl, #_ySpeed
      001E1F 36 00                 6777 	ld	(hl), #0x00
                                   6778 ;main.c:796: playerX = 80<<5;
      001E21 21r47r00              6779 	ld	hl, #_playerX
      001E24 36 00                 6780 	ld	(hl), #0x00
      001E26 23                    6781 	inc	hl
      001E27 36 0A                 6782 	ld	(hl), #0x0a
                                   6783 ;main.c:797: playerY = 80<<5;
      001E29 21r49r00              6784 	ld	hl, #_playerY
      001E2C 36 00                 6785 	ld	(hl), #0x00
      001E2E 23                    6786 	inc	hl
      001E2F 36 0A                 6787 	ld	(hl), #0x0a
                                   6788 ;main.c:799: playerDrawX = 80;
      001E31 21r4Br00              6789 	ld	hl, #_playerDrawX
      001E34 36 50                 6790 	ld	(hl), #0x50
                                   6791 ;main.c:800: playerDrawY = 80;
      001E36 21r4Cr00              6792 	ld	hl, #_playerDrawY
      001E39 36 50                 6793 	ld	(hl), #0x50
                                   6794 ;main.c:803: bgX = 0;
      001E3B AF                    6795 	xor	a, a
      001E3C 21r4Dr00              6796 	ld	hl, #_bgX
      001E3F 22                    6797 	ld	(hl+), a
      001E40 77                    6798 	ld	(hl), a
                                   6799 ;main.c:804: bgY = 0;
      001E41 AF                    6800 	xor	a, a
      001E42 21r4Fr00              6801 	ld	hl, #_bgY
      001E45 22                    6802 	ld	(hl+), a
      001E46 77                    6803 	ld	(hl), a
                                   6804 ;main.c:806: hull = maxHull;
      001E47 FArDFr05              6805 	ld	a, (#_maxHull)
      001E4A EAr88r00              6806 	ld	(#_hull),a
                                   6807 ;main.c:807: shield = maxShield;
      001E4D FArE0r05              6808 	ld	a, (#_maxShield)
      001E50 EAr89r00              6809 	ld	(#_shield),a
                                   6810 ;main.c:809: DISPLAY_ON;
      001E53 F0r00                 6811 	ldh	a, (_LCDC_REG + 0)
      001E55 F6 80                 6812 	or	a, #0x80
      001E57 E0r00                 6813 	ldh	(_LCDC_REG + 0), a
                                   6814 ;main.c:810: SPRITES_8x8;
      001E59 F0r00                 6815 	ldh	a, (_LCDC_REG + 0)
      001E5B E6 FB                 6816 	and	a, #0xfb
      001E5D E0r00                 6817 	ldh	(_LCDC_REG + 0), a
                                   6818 ;main.c:811: set_sprite_data(0, 8, cross);
      001E5F 11r07r00              6819 	ld	de, #_cross
      001E62 D5                    6820 	push	de
      001E63 21 00 08              6821 	ld	hl, #0x800
      001E66 E5                    6822 	push	hl
      001E67 CDr00r00              6823 	call	_set_sprite_data
      001E6A E8 04                 6824 	add	sp, #4
                                   6825 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001E6C 21r02r00              6826 	ld	hl, #(_shadow_OAM + 2)
      001E6F 36 00                 6827 	ld	(hl), #0x00
                                   6828 ;main.c:814: SHOW_SPRITES;
      001E71 F0r00                 6829 	ldh	a, (_LCDC_REG + 0)
      001E73 F6 02                 6830 	or	a, #0x02
      001E75 E0r00                 6831 	ldh	(_LCDC_REG + 0), a
                                   6832 ;main.c:818: font_init();
      001E77 CDr00r00              6833 	call	_font_init
                                   6834 ;main.c:820: min_font = font_load(font_min); // 36 tiles of characters
      001E7A 11r00r00              6835 	ld	de, #_font_min
      001E7D D5                    6836 	push	de
      001E7E CDr00r00              6837 	call	_font_load
      001E81 E1                    6838 	pop	hl
      001E82 21r8Ar00              6839 	ld	hl, #_min_font
      001E85 7B                    6840 	ld	a, e
      001E86 22                    6841 	ld	(hl+), a
                                   6842 ;main.c:821: font_set(min_font);
      001E87 7A                    6843 	ld	a, d
      001E88 32                    6844 	ld	(hl-), a
      001E89 2A                    6845 	ld	a, (hl+)
      001E8A 5F                    6846 	ld	e, a
      001E8B 56                    6847 	ld	d, (hl)
      001E8C D5                    6848 	push	de
      001E8D CDr00r00              6849 	call	_font_set
      001E90 E1                    6850 	pop	hl
                                   6851 ;main.c:822: set_win_tiles(1,0,4,1,hullabel);
      001E91 11r00r00              6852 	ld	de, #_hullabel
      001E94 D5                    6853 	push	de
      001E95 21 04 01              6854 	ld	hl, #0x104
      001E98 E5                    6855 	push	hl
      001E99 21 01 00              6856 	ld	hl, #0x01
      001E9C E5                    6857 	push	hl
      001E9D CDr00r00              6858 	call	_set_win_tiles
      001EA0 E8 06                 6859 	add	sp, #6
                                   6860 ;main.c:823: set_win_tiles(1,1,4,1,shieldlabel);
      001EA2 11r04r00              6861 	ld	de, #_shieldlabel
      001EA5 D5                    6862 	push	de
      001EA6 21 04 01              6863 	ld	hl, #0x104
      001EA9 E5                    6864 	push	hl
      001EAA 21 01 01              6865 	ld	hl, #0x101
      001EAD E5                    6866 	push	hl
      001EAE CDr00r00              6867 	call	_set_win_tiles
      001EB1 E8 06                 6868 	add	sp, #6
                                   6869 ;main.c:828: set_bkg_data(0x50,1,healthblock);
      001EB3 11r07r05              6870 	ld	de, #_healthblock
      001EB6 D5                    6871 	push	de
      001EB7 21 50 01              6872 	ld	hl, #0x150
      001EBA E5                    6873 	push	hl
      001EBB CDr00r00              6874 	call	_set_bkg_data
      001EBE E8 04                 6875 	add	sp, #4
                                   6876 ;main.c:830: setHealthBar(0, hull);
      001EC0 FAr88r00              6877 	ld	a, (#_hull)
      001EC3 67                    6878 	ld	h, a
      001EC4 2E 00                 6879 	ld	l, #0x00
      001EC6 E5                    6880 	push	hl
      001EC7 CDrE2r05              6881 	call	_setHealthBar
      001ECA E1                    6882 	pop	hl
                                   6883 ;main.c:831: setHealthBar(1, shield);
      001ECB FAr89r00              6884 	ld	a, (#_shield)
      001ECE 67                    6885 	ld	h, a
      001ECF 2E 01                 6886 	ld	l, #0x01
      001ED1 E5                    6887 	push	hl
      001ED2 CDrE2r05              6888 	call	_setHealthBar
      001ED5 E1                    6889 	pop	hl
                                   6890 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      001ED6 3E 07                 6891 	ld	a, #0x07
      001ED8 E0r00                 6892 	ldh	(_WX_REG + 0), a
      001EDA 3E 7E                 6893 	ld	a, #0x7e
      001EDC E0r00                 6894 	ldh	(_WY_REG + 0), a
                                   6895 ;main.c:838: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      001EDE 11r87r04              6896 	ld	de, #_backgroundtiles
      001EE1 D5                    6897 	push	de
      001EE2 21 25 08              6898 	ld	hl, #0x825
      001EE5 E5                    6899 	push	hl
      001EE6 CDr00r00              6900 	call	_set_bkg_data
      001EE9 E8 04                 6901 	add	sp, #4
                                   6902 ;main.c:839: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      001EEB 11r87r00              6903 	ld	de, #_background1
      001EEE D5                    6904 	push	de
      001EEF 21 20 20              6905 	ld	hl, #0x2020
      001EF2 E5                    6906 	push	hl
      001EF3 AF                    6907 	xor	a, a
      001EF4 0F                    6908 	rrca
      001EF5 F5                    6909 	push	af
      001EF6 CDr00r00              6910 	call	_set_bkg_tiles
      001EF9 E8 06                 6911 	add	sp, #6
                                   6912 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001EFB AF                    6913 	xor	a, a
      001EFC E0r00                 6914 	ldh	(_SCX_REG + 0), a
      001EFE AF                    6915 	xor	a, a
      001EFF E0r00                 6916 	ldh	(_SCY_REG + 0), a
                                   6917 ;main.c:842: set_bkg_data(0x51, 9, ProjectileTiles);
      001F01 11r37r05              6918 	ld	de, #_ProjectileTiles
      001F04 D5                    6919 	push	de
      001F05 21 51 09              6920 	ld	hl, #0x951
      001F08 E5                    6921 	push	hl
      001F09 CDr00r00              6922 	call	_set_bkg_data
      001F0C E8 04                 6923 	add	sp, #4
                                   6924 ;main.c:844: set_win_tiles(10, 0,4,1,weaponlabel);
      001F0E 11r08r00              6925 	ld	de, #_weaponlabel
      001F11 D5                    6926 	push	de
      001F12 21 04 01              6927 	ld	hl, #0x104
      001F15 E5                    6928 	push	hl
      001F16 21 0A 00              6929 	ld	hl, #0x0a
      001F19 E5                    6930 	push	hl
      001F1A CDr00r00              6931 	call	_set_win_tiles
      001F1D E8 06                 6932 	add	sp, #6
                                   6933 ;main.c:845: set_win_tiles(10, 1,4,1,scorelabel);
      001F1F 11r0Cr00              6934 	ld	de, #_scorelabel
      001F22 D5                    6935 	push	de
      001F23 21 04 01              6936 	ld	hl, #0x104
      001F26 E5                    6937 	push	hl
      001F27 21 0A 01              6938 	ld	hl, #0x10a
      001F2A E5                    6939 	push	hl
      001F2B CDr00r00              6940 	call	_set_win_tiles
      001F2E E8 06                 6941 	add	sp, #6
                                   6942 ;main.c:847: setGunIcon();
      001F30 CDr36r18              6943 	call	_setGunIcon
                                   6944 ;main.c:848: SHOW_BKG;
      001F33 F0r00                 6945 	ldh	a, (_LCDC_REG + 0)
      001F35 F6 01                 6946 	or	a, #0x01
      001F37 E0r00                 6947 	ldh	(_LCDC_REG + 0), a
                                   6948 ;main.c:849: SHOW_WIN;;
      001F39 F0r00                 6949 	ldh	a, (_LCDC_REG + 0)
      001F3B F6 20                 6950 	or	a, #0x20
      001F3D E0r00                 6951 	ldh	(_LCDC_REG + 0), a
                                   6952 ;main.c:851: bcd = MAKE_BCD(00000);
      001F3F AF                    6953 	xor	a, a
      001F40 21r5Dr00              6954 	ld	hl, #_bcd
      001F43 22                    6955 	ld	(hl+), a
      001F44 22                    6956 	ld	(hl+), a
      001F45 22                    6957 	ld	(hl+), a
      001F46 77                    6958 	ld	(hl), a
                                   6959 ;main.c:852: updateScore();
                                   6960 ;main.c:855: }
      001F47 C3rF3r06              6961 	jp	_updateScore
                                   6962 ;main.c:857: void main(){
                                   6963 ;	---------------------------------
                                   6964 ; Function main
                                   6965 ; ---------------------------------
      001F4A                       6966 _main::
                                   6967 ;main.c:860: STAT_REG = 0x45;
      001F4A 3E 45                 6968 	ld	a, #0x45
      001F4C E0r00                 6969 	ldh	(_STAT_REG + 0), a
                                   6970 ;main.c:861: LYC_REG = 0x7e; //line 126
      001F4E 3E 7E                 6971 	ld	a, #0x7e
      001F50 E0r00                 6972 	ldh	(_LYC_REG + 0), a
                                   6973 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      001F52 F3                    6974 	di
                                   6975 ;main.c:863: add_LCD(interruptLCD);
      001F53 11r00r00              6976 	ld	de, #_interruptLCD
      001F56 D5                    6977 	push	de
      001F57 CDr00r00              6978 	call	_add_LCD
      001F5A 33                    6979 	inc	sp
      001F5B 33                    6980 	inc	sp
                                   6981 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      001F5C FB                    6982 	ei
                                   6983 ;main.c:865: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      001F5D 3E 03                 6984 	ld	a, #0x03
      001F5F F5                    6985 	push	af
      001F60 33                    6986 	inc	sp
      001F61 CDr00r00              6987 	call	_set_interrupts
      001F64 33                    6988 	inc	sp
                                   6989 ;main.c:869: NR52_REG = 0x80; // sound on 
      001F65 3E 80                 6990 	ld	a, #0x80
      001F67 E0r00                 6991 	ldh	(_NR52_REG + 0), a
                                   6992 ;main.c:870: NR50_REG = 0x77; // volume
      001F69 3E 77                 6993 	ld	a, #0x77
      001F6B E0r00                 6994 	ldh	(_NR50_REG + 0), a
                                   6995 ;main.c:871: NR51_REG = 0xFF; // all channels
      001F6D 3E FF                 6996 	ld	a, #0xff
      001F6F E0r00                 6997 	ldh	(_NR51_REG + 0), a
                                   6998 ;main.c:875: waitpad(J_A);
      001F71 3E 10                 6999 	ld	a, #0x10
      001F73 F5                    7000 	push	af
      001F74 33                    7001 	inc	sp
      001F75 CDr00r00              7002 	call	_waitpad
      001F78 33                    7003 	inc	sp
                                   7004 ;main.c:876: uint16_t seed = LY_REG;
      001F79 F0r00                 7005 	ldh	a, (_LY_REG + 0)
      001F7B 4F                    7006 	ld	c, a
      001F7C 06 00                 7007 	ld	b, #0x00
                                   7008 ;main.c:877: seed |= (uint16_t)DIV_REG << 8;
      001F7E F0r00                 7009 	ldh	a, (_DIV_REG + 0)
      001F80 5F                    7010 	ld	e, a
      001F81 AF                    7011 	xor	a, a
      001F82 B1                    7012 	or	a, c
      001F83 4F                    7013 	ld	c, a
      001F84 7B                    7014 	ld	a, e
      001F85 B0                    7015 	or	a, b
      001F86 47                    7016 	ld	b, a
                                   7017 ;main.c:878: initrand(seed);
      001F87 C5                    7018 	push	bc
      001F88 CDr00r00              7019 	call	_initrand
      001F8B E1                    7020 	pop	hl
                                   7021 ;main.c:883: initGame();
      001F8C CDr0Dr1E              7022 	call	_initGame
                                   7023 ;main.c:884: initEnemies(1);
      001F8F 3E 01                 7024 	ld	a, #0x01
      001F91 F5                    7025 	push	af
      001F92 33                    7026 	inc	sp
      001F93 CDrC8r0E              7027 	call	_initEnemies
      001F96 33                    7028 	inc	sp
                                   7029 ;main.c:885: initProjectiles();
      001F97 CDrF6r1D              7030 	call	_initProjectiles
                                   7031 ;main.c:887: while(1) {
      001F9A                       7032 00114$:
                                   7033 ;main.c:888: SHOW_SPRITES;
      001F9A F0r00                 7034 	ldh	a, (_LCDC_REG + 0)
      001F9C F6 02                 7035 	or	a, #0x02
      001F9E E0r00                 7036 	ldh	(_LCDC_REG + 0), a
                                   7037 ;main.c:890: joydata = joypad(); // query for button states
      001FA0 CDr00r00              7038 	call	_joypad
      001FA3 21r87r00              7039 	ld	hl, #_joydata
      001FA6 73                    7040 	ld	(hl), e
                                   7041 ;main.c:892: updateDirection(); // set player direction
      001FA7 CDr36r07              7042 	call	_updateDirection
                                   7043 ;main.c:895: move(); 
      001FAA CDr85r0F              7044 	call	_move
                                   7045 ;main.c:897: updateEnemyPositions();
      001FAD CDr28r09              7046 	call	_updateEnemyPositions
                                   7047 ;main.c:900: checkCollision(); 
      001FB0 CDrD5r14              7048 	call	_checkCollision
                                   7049 ;main.c:676: if (shield < maxShield) {
      001FB3 21rE0r05              7050 	ld	hl, #_maxShield
      001FB6 4E                    7051 	ld	c, (hl)
      001FB7 59                    7052 	ld	e, c
      001FB8 21r89r00              7053 	ld	hl, #_shield
      001FBB 56                    7054 	ld	d, (hl)
      001FBC 7E                    7055 	ld	a, (hl)
      001FBD 91                    7056 	sub	a, c
      001FBE CB 7B                 7057 	bit	7, e
      001FC0 28 07                 7058 	jr	Z, 00171$
      001FC2 CB 7A                 7059 	bit	7, d
      001FC4 20 08                 7060 	jr	NZ, 00172$
      001FC6 BF                    7061 	cp	a, a
      001FC7 18 05                 7062 	jr	00172$
      001FC9                       7063 00171$:
      001FC9 CB 7A                 7064 	bit	7, d
      001FCB 28 01                 7065 	jr	Z, 00172$
      001FCD 37                    7066 	scf
      001FCE                       7067 00172$:
      001FCE 30 04                 7068 	jr	NC, 00122$
                                   7069 ;main.c:677: shield += 1;
      001FD0 21r89r00              7070 	ld	hl, #_shield
      001FD3 34                    7071 	inc	(hl)
      001FD4                       7072 00122$:
                                   7073 ;main.c:679: setHealthBar(0, hull);
      001FD4 FAr88r00              7074 	ld	a, (#_hull)
      001FD7 67                    7075 	ld	h, a
      001FD8 2E 00                 7076 	ld	l, #0x00
      001FDA E5                    7077 	push	hl
      001FDB CDrE2r05              7078 	call	_setHealthBar
      001FDE E1                    7079 	pop	hl
                                   7080 ;main.c:680: setHealthBar(1, shield);
      001FDF FAr89r00              7081 	ld	a, (#_shield)
      001FE2 67                    7082 	ld	h, a
      001FE3 2E 01                 7083 	ld	l, #0x01
      001FE5 E5                    7084 	push	hl
      001FE6 CDrE2r05              7085 	call	_setHealthBar
      001FE9 E1                    7086 	pop	hl
                                   7087 ;main.c:905: if (joydata & J_B && fireCooldown == 0) {
      001FEA FAr87r00              7088 	ld	a, (#_joydata)
      001FED CB 6F                 7089 	bit	5, a
      001FEF 28 09                 7090 	jr	Z, 00102$
      001FF1 FAr42r00              7091 	ld	a, (#_fireCooldown)
      001FF4 B7                    7092 	or	a, a
      001FF5 20 03                 7093 	jr	NZ, 00102$
                                   7094 ;main.c:906: fire();
      001FF7 CDr51r18              7095 	call	_fire
      001FFA                       7096 00102$:
                                   7097 ;main.c:908: if (fireCooldown > 0) {
      001FFA 21r42r00              7098 	ld	hl, #_fireCooldown
      001FFD 7E                    7099 	ld	a, (hl)
      001FFE B7                    7100 	or	a, a
      001FFF 28 01                 7101 	jr	Z, 00105$
                                   7102 ;main.c:909: --fireCooldown;
      002001 35                    7103 	dec	(hl)
      002002                       7104 00105$:
                                   7105 ;main.c:912: if (joydata & J_SELECT && switchDelay == 0) {
      002002 FAr87r00              7106 	ld	a, (#_joydata)
      002005 CB 77                 7107 	bit	6, a
      002007 28 1F                 7108 	jr	Z, 00109$
      002009 FAr57r00              7109 	ld	a, (#_switchDelay)
      00200C B7                    7110 	or	a, a
      00200D 20 19                 7111 	jr	NZ, 00109$
                                   7112 ;main.c:913: currentGun++;
      00200F 21r56r00              7113 	ld	hl, #_currentGun
      002012 34                    7114 	inc	(hl)
                                   7115 ;main.c:914: if (currentGun >= GUNCOUNT) {
      002013 21rE1r05              7116 	ld	hl, #_GUNCOUNT
      002016 4E                    7117 	ld	c, (hl)
      002017 21r56r00              7118 	ld	hl, #_currentGun
      00201A 7E                    7119 	ld	a, (hl)
      00201B 91                    7120 	sub	a, c
      00201C 38 02                 7121 	jr	C, 00107$
                                   7122 ;main.c:915: currentGun = 0;
      00201E 36 00                 7123 	ld	(hl), #0x00
      002020                       7124 00107$:
                                   7125 ;main.c:917: setGunIcon();
      002020 CDr36r18              7126 	call	_setGunIcon
                                   7127 ;main.c:918: switchDelay = 30;
      002023 21r57r00              7128 	ld	hl, #_switchDelay
      002026 36 1E                 7129 	ld	(hl), #0x1e
      002028                       7130 00109$:
                                   7131 ;main.c:920: if (switchDelay != 0) {
      002028 21r57r00              7132 	ld	hl, #_switchDelay
      00202B 7E                    7133 	ld	a, (hl)
      00202C B7                    7134 	or	a, a
      00202D 28 01                 7135 	jr	Z, 00112$
                                   7136 ;main.c:921: switchDelay--;
      00202F 35                    7137 	dec	(hl)
      002030                       7138 00112$:
                                   7139 ;main.c:923: moveProjectiles();
      002030 CDrA4r1C              7140 	call	_moveProjectiles
                                   7141 ;main.c:935: SHOW_WIN;	
      002033 F0r00                 7142 	ldh	a, (_LCDC_REG + 0)
      002035 F6 20                 7143 	or	a, #0x20
      002037 E0r00                 7144 	ldh	(_LCDC_REG + 0), a
                                   7145 ;main.c:936: wait_vbl_done(); // Idle until next frame
      002039 CDr00r00              7146 	call	_wait_vbl_done
                                   7147 ;main.c:941: }
      00203C C3r9Ar1F              7148 	jp	00114$
                                   7149 	.area _CODE
                                   7150 	.area _INITIALIZER
      000000                       7151 __xinit__hullabel:
      000000 12                    7152 	.db #0x12	; 18
      000001 1F                    7153 	.db #0x1f	; 31
      000002 16                    7154 	.db #0x16	; 22
      000003 16                    7155 	.db #0x16	; 22
      000004                       7156 __xinit__shieldlabel:
      000004 1D                    7157 	.db #0x1d	; 29
      000005 12                    7158 	.db #0x12	; 18
      000006 16                    7159 	.db #0x16	; 22
      000007 0E                    7160 	.db #0x0e	; 14
      000008                       7161 __xinit__weaponlabel:
      000008 21                    7162 	.db #0x21	; 33
      000009 0F                    7163 	.db #0x0f	; 15
      00000A 1A                    7164 	.db #0x1a	; 26
      00000B 18                    7165 	.db #0x18	; 24
      00000C                       7166 __xinit__scorelabel:
      00000C 1D                    7167 	.db #0x1d	; 29
      00000D 0D                    7168 	.db #0x0d	; 13
      00000E 1C                    7169 	.db #0x1c	; 28
      00000F 0F                    7170 	.db #0x0f	; 15
      000010                       7171 __xinit__blob:
      000010 00 00                 7172 	.dw #0x0000
      000012 00 00                 7173 	.dw #0x0000
      000014 00                    7174 	.db #0x00	;  0
      000015 00                    7175 	.db #0x00	;  0
      000016 09                    7176 	.db #0x09	; 9
      000017 00                    7177 	.db #0x00	; 0
      000018 01                    7178 	.db #0x01	; 1
      000019 01                    7179 	.db #0x01	; 1
      00001A 01                    7180 	.db #0x01	; 1
      00001B 32                    7181 	.db #0x32	; 50	'2'
      00001C 03                    7182 	.db #0x03	;  3
      00001D 01                    7183 	.db #0x01	; 1
      00001E 00                    7184 	.db #0x00	;  0
      00001F 00                    7185 	.db #0x00	;  0
      000020                       7186 __xinit__singleGun:
      000020 00 00                 7187 	.dw #0x0000
      000022 00 00                 7188 	.dw #0x0000
      000024 00                    7189 	.db #0x00	;  0
      000025 FF                    7190 	.db #0xff	; -1
      000026 02                    7191 	.db #0x02	; 2
      000027 00                    7192 	.db #0x00	; 0
      000028 01                    7193 	.db #0x01	; 1
      000029 0F                    7194 	.db #0x0f	; 15
      00002A 14                    7195 	.db #0x14	; 20
      00002B                       7196 __xinit__doubleGun:
      00002B 00 00                 7197 	.dw #0x0000
      00002D 00 00                 7198 	.dw #0x0000
      00002F 00                    7199 	.db #0x00	;  0
      000030 FF                    7200 	.db #0xff	; -1
      000031 02                    7201 	.db #0x02	; 2
      000032 00                    7202 	.db #0x00	; 0
      000033 01                    7203 	.db #0x01	; 1
      000034 0F                    7204 	.db #0x0f	; 15
      000035 17                    7205 	.db #0x17	; 23
      000036                       7206 __xinit__missile:
      000036 00 00                 7207 	.dw #0x0000
      000038 00 00                 7208 	.dw #0x0000
      00003A 00                    7209 	.db #0x00	;  0
      00003B FF                    7210 	.db #0xff	; -1
      00003C 01                    7211 	.db #0x01	; 1
      00003D 00                    7212 	.db #0x00	; 0
      00003E 01                    7213 	.db #0x01	; 1
      00003F 1E                    7214 	.db #0x1e	; 30
      000040 1A                    7215 	.db #0x1a	; 26
      000041                       7216 __xinit__oldestProjectile:
      000041 00                    7217 	.db #0x00	; 0
      000042                       7218 __xinit__fireCooldown:
      000042 00                    7219 	.db #0x00	; 0
      000043                       7220 __xinit__xDir:
      000043 00                    7221 	.db #0x00	;  0
      000044                       7222 __xinit__yDir:
      000044 FF                    7223 	.db #0xff	; -1
      000045                       7224 __xinit__xSpeed:
      000045 00                    7225 	.db #0x00	;  0
      000046                       7226 __xinit__ySpeed:
      000046 00                    7227 	.db #0x00	;  0
      000047                       7228 __xinit__playerX:
      000047 00 0A                 7229 	.dw #0x0a00
      000049                       7230 __xinit__playerY:
      000049 00 0A                 7231 	.dw #0x0a00
      00004B                       7232 __xinit__playerDrawX:
      00004B 50                    7233 	.db #0x50	; 80	'P'
      00004C                       7234 __xinit__playerDrawY:
      00004C 50                    7235 	.db #0x50	; 80	'P'
      00004D                       7236 __xinit__bgX:
      00004D 00 00                 7237 	.dw #0x0000
      00004F                       7238 __xinit__bgY:
      00004F 00 00                 7239 	.dw #0x0000
      000051                       7240 __xinit__xOverflow:
      000051 00 00                 7241 	.dw #0x0000
      000053                       7242 __xinit__yOverflow:
      000053 00 00                 7243 	.dw #0x0000
      000055                       7244 __xinit__enemyCollisionCount:
      000055 00                    7245 	.db #0x00	; 0
      000056                       7246 __xinit__currentGun:
      000056 00                    7247 	.db #0x00	; 0
      000057                       7248 __xinit__switchDelay:
      000057 00                    7249 	.db #0x00	; 0
      000058                       7250 __xinit__gunMap:
      000058 51                    7251 	.db #0x51	; 81	'Q'
      000059 56                    7252 	.db #0x56	; 86	'V'
      00005A 58                    7253 	.db #0x58	; 88	'X'
      00005B                       7254 __xinit__score:
      00005B 00 00                 7255 	.dw #0x0000
      00005D                       7256 __xinit__bcd:
      00005D 00 00 00 00           7257 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      000061                       7258 __xinit__INCREMENT:
      000061 01 00 00 00           7259 	.byte #0x01, #0x00, #0x00, #0x00	; 1
                                   7260 	.area _CABS (ABS)
