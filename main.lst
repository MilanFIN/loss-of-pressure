                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _updateShieldsAndHull
                                     14 	.globl _checkCollision
                                     15 	.globl _takeDamage
                                     16 	.globl _move
                                     17 	.globl _initEnemies
                                     18 	.globl _updateEnemyPositions
                                     19 	.globl _moveEnemiesWithBackground
                                     20 	.globl _abs
                                     21 	.globl _i16Clamp
                                     22 	.globl _u16Clamp
                                     23 	.globl _uClamp
                                     24 	.globl _clamp
                                     25 	.globl _updateDirection
                                     26 	.globl _setHealthBar
                                     27 	.globl _interruptLCD
                                     28 	.globl _rand
                                     29 	.globl _initrand
                                     30 	.globl _font_set
                                     31 	.globl _font_load
                                     32 	.globl _font_init
                                     33 	.globl _set_sprite_data
                                     34 	.globl _set_win_tiles
                                     35 	.globl _set_bkg_tiles
                                     36 	.globl _set_bkg_data
                                     37 	.globl _wait_vbl_done
                                     38 	.globl _waitpad
                                     39 	.globl _joypad
                                     40 	.globl _maxShield
                                     41 	.globl _maxHull
                                     42 	.globl _bgY
                                     43 	.globl _bgX
                                     44 	.globl _playerDrawY
                                     45 	.globl _playerDrawX
                                     46 	.globl _playerY
                                     47 	.globl _playerX
                                     48 	.globl _ySpeed
                                     49 	.globl _xSpeed
                                     50 	.globl _yDir
                                     51 	.globl _xDir
                                     52 	.globl _PLAYERSIZE
                                     53 	.globl _blob
                                     54 	.globl _shieldlabel
                                     55 	.globl _hullabel
                                     56 	.globl _min_font
                                     57 	.globl _shield
                                     58 	.globl _hull
                                     59 	.globl _joydata
                                     60 	.globl _enemies
                                     61 	.globl _ySpawnPositions
                                     62 	.globl _xSpawnPositions
                                     63 	.globl _ENEMYCOUNT
                                     64 	.globl _EMPTYSPRITE
                                     65 	.globl _BLANK
                                     66 	.globl _enemy1
                                     67 	.globl _healthblock
                                     68 	.globl _backgroundtiles
                                     69 	.globl _background1
                                     70 	.globl _cross
                                     71 ;--------------------------------------------------------
                                     72 ; special function registers
                                     73 ;--------------------------------------------------------
                                     74 ;--------------------------------------------------------
                                     75 ; ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area _DATA
      000000                         78 _enemies::
      000000                         79 	.ds 90
      00005A                         80 _joydata::
      00005A                         81 	.ds 1
      00005B                         82 _hull::
      00005B                         83 	.ds 1
      00005C                         84 _shield::
      00005C                         85 	.ds 1
      00005D                         86 _min_font::
      00005D                         87 	.ds 2
                                     88 ;--------------------------------------------------------
                                     89 ; ram data
                                     90 ;--------------------------------------------------------
                                     91 	.area _INITIALIZED
      000000                         92 _hullabel::
      000000                         93 	.ds 4
      000004                         94 _shieldlabel::
      000004                         95 	.ds 4
      000008                         96 _blob::
      000008                         97 	.ds 18
      00001A                         98 _PLAYERSIZE::
      00001A                         99 	.ds 1
      00001B                        100 _xDir::
      00001B                        101 	.ds 1
      00001C                        102 _yDir::
      00001C                        103 	.ds 1
      00001D                        104 _xSpeed::
      00001D                        105 	.ds 1
      00001E                        106 _ySpeed::
      00001E                        107 	.ds 1
      00001F                        108 _playerX::
      00001F                        109 	.ds 2
      000021                        110 _playerY::
      000021                        111 	.ds 2
      000023                        112 _playerDrawX::
      000023                        113 	.ds 1
      000024                        114 _playerDrawY::
      000024                        115 	.ds 1
      000025                        116 _bgX::
      000025                        117 	.ds 2
      000027                        118 _bgY::
      000027                        119 	.ds 2
      000029                        120 _maxHull::
      000029                        121 	.ds 1
      00002A                        122 _maxShield::
      00002A                        123 	.ds 1
                                    124 ;--------------------------------------------------------
                                    125 ; absolute external ram data
                                    126 ;--------------------------------------------------------
                                    127 	.area _DABS (ABS)
                                    128 ;--------------------------------------------------------
                                    129 ; global & static initialisations
                                    130 ;--------------------------------------------------------
                                    131 	.area _HOME
                                    132 	.area _GSINIT
                                    133 	.area _GSFINAL
                                    134 	.area _GSINIT
                                    135 ;--------------------------------------------------------
                                    136 ; Home
                                    137 ;--------------------------------------------------------
                                    138 	.area _HOME
                                    139 	.area _HOME
                                    140 ;--------------------------------------------------------
                                    141 ; code
                                    142 ;--------------------------------------------------------
                                    143 	.area _CODE
                                    144 ;main.c:65: void interruptLCD(){
                                    145 ;	---------------------------------
                                    146 ; Function interruptLCD
                                    147 ; ---------------------------------
      000000                        148 _interruptLCD::
                                    149 ;main.c:66: HIDE_WIN;
      000000 F0r00                  150 	ldh	a, (_LCDC_REG + 0)
      000002 E6 DF                  151 	and	a, #0xdf
      000004 E0r00                  152 	ldh	(_LCDC_REG + 0), a
                                    153 ;main.c:67: }
      000006 C9                     154 	ret
      000007                        155 _cross:
      000007 18                     156 	.db #0x18	; 24
      000008 18                     157 	.db #0x18	; 24
      000009 18                     158 	.db #0x18	; 24
      00000A 18                     159 	.db #0x18	; 24
      00000B 3C                     160 	.db #0x3c	; 60
      00000C 3C                     161 	.db #0x3c	; 60
      00000D 3C                     162 	.db #0x3c	; 60
      00000E 3C                     163 	.db #0x3c	; 60
      00000F 7E                     164 	.db #0x7e	; 126
      000010 7E                     165 	.db #0x7e	; 126
      000011 7E                     166 	.db #0x7e	; 126
      000012 7E                     167 	.db #0x7e	; 126
      000013 FF                     168 	.db #0xff	; 255
      000014 FF                     169 	.db #0xff	; 255
      000015 FF                     170 	.db #0xff	; 255
      000016 FF                     171 	.db #0xff	; 255
      000017 0F                     172 	.db #0x0f	; 15
      000018 0F                     173 	.db #0x0f	; 15
      000019 3F                     174 	.db #0x3f	; 63
      00001A 3F                     175 	.db #0x3f	; 63
      00001B FF                     176 	.db #0xff	; 255
      00001C FF                     177 	.db #0xff	; 255
      00001D FF                     178 	.db #0xff	; 255
      00001E FF                     179 	.db #0xff	; 255
      00001F 7E                     180 	.db #0x7e	; 126
      000020 7E                     181 	.db #0x7e	; 126
      000021 3E                     182 	.db #0x3e	; 62
      000022 3E                     183 	.db #0x3e	; 62
      000023 1C                     184 	.db #0x1c	; 28
      000024 1C                     185 	.db #0x1c	; 28
      000025 0C                     186 	.db #0x0c	; 12
      000026 0C                     187 	.db #0x0c	; 12
      000027 C0                     188 	.db #0xc0	; 192
      000028 C0                     189 	.db #0xc0	; 192
      000029 F0                     190 	.db #0xf0	; 240
      00002A F0                     191 	.db #0xf0	; 240
      00002B FC                     192 	.db #0xfc	; 252
      00002C FC                     193 	.db #0xfc	; 252
      00002D FF                     194 	.db #0xff	; 255
      00002E FF                     195 	.db #0xff	; 255
      00002F FF                     196 	.db #0xff	; 255
      000030 FF                     197 	.db #0xff	; 255
      000031 FC                     198 	.db #0xfc	; 252
      000032 FC                     199 	.db #0xfc	; 252
      000033 F0                     200 	.db #0xf0	; 240
      000034 F0                     201 	.db #0xf0	; 240
      000035 C0                     202 	.db #0xc0	; 192
      000036 C0                     203 	.db #0xc0	; 192
      000037 0C                     204 	.db #0x0c	; 12
      000038 0C                     205 	.db #0x0c	; 12
      000039 1C                     206 	.db #0x1c	; 28
      00003A 1C                     207 	.db #0x1c	; 28
      00003B 3E                     208 	.db #0x3e	; 62
      00003C 3E                     209 	.db #0x3e	; 62
      00003D 7E                     210 	.db #0x7e	; 126
      00003E 7E                     211 	.db #0x7e	; 126
      00003F FF                     212 	.db #0xff	; 255
      000040 FF                     213 	.db #0xff	; 255
      000041 FF                     214 	.db #0xff	; 255
      000042 FF                     215 	.db #0xff	; 255
      000043 3F                     216 	.db #0x3f	; 63
      000044 3F                     217 	.db #0x3f	; 63
      000045 0F                     218 	.db #0x0f	; 15
      000046 0F                     219 	.db #0x0f	; 15
      000047 FF                     220 	.db #0xff	; 255
      000048 FF                     221 	.db #0xff	; 255
      000049 FF                     222 	.db #0xff	; 255
      00004A FF                     223 	.db #0xff	; 255
      00004B 7E                     224 	.db #0x7e	; 126
      00004C 7E                     225 	.db #0x7e	; 126
      00004D 7E                     226 	.db #0x7e	; 126
      00004E 7E                     227 	.db #0x7e	; 126
      00004F 3C                     228 	.db #0x3c	; 60
      000050 3C                     229 	.db #0x3c	; 60
      000051 3C                     230 	.db #0x3c	; 60
      000052 3C                     231 	.db #0x3c	; 60
      000053 18                     232 	.db #0x18	; 24
      000054 18                     233 	.db #0x18	; 24
      000055 18                     234 	.db #0x18	; 24
      000056 18                     235 	.db #0x18	; 24
      000057 30                     236 	.db #0x30	; 48	'0'
      000058 30                     237 	.db #0x30	; 48	'0'
      000059 38                     238 	.db #0x38	; 56	'8'
      00005A 38                     239 	.db #0x38	; 56	'8'
      00005B 7C                     240 	.db #0x7c	; 124
      00005C 7C                     241 	.db #0x7c	; 124
      00005D 7E                     242 	.db #0x7e	; 126
      00005E 7E                     243 	.db #0x7e	; 126
      00005F FF                     244 	.db #0xff	; 255
      000060 FF                     245 	.db #0xff	; 255
      000061 FF                     246 	.db #0xff	; 255
      000062 FF                     247 	.db #0xff	; 255
      000063 FC                     248 	.db #0xfc	; 252
      000064 FC                     249 	.db #0xfc	; 252
      000065 F0                     250 	.db #0xf0	; 240
      000066 F0                     251 	.db #0xf0	; 240
      000067 03                     252 	.db #0x03	; 3
      000068 03                     253 	.db #0x03	; 3
      000069 0F                     254 	.db #0x0f	; 15
      00006A 0F                     255 	.db #0x0f	; 15
      00006B 3F                     256 	.db #0x3f	; 63
      00006C 3F                     257 	.db #0x3f	; 63
      00006D FF                     258 	.db #0xff	; 255
      00006E FF                     259 	.db #0xff	; 255
      00006F FF                     260 	.db #0xff	; 255
      000070 FF                     261 	.db #0xff	; 255
      000071 3F                     262 	.db #0x3f	; 63
      000072 3F                     263 	.db #0x3f	; 63
      000073 0F                     264 	.db #0x0f	; 15
      000074 0F                     265 	.db #0x0f	; 15
      000075 03                     266 	.db #0x03	; 3
      000076 03                     267 	.db #0x03	; 3
      000077 F0                     268 	.db #0xf0	; 240
      000078 F0                     269 	.db #0xf0	; 240
      000079 FC                     270 	.db #0xfc	; 252
      00007A FC                     271 	.db #0xfc	; 252
      00007B FF                     272 	.db #0xff	; 255
      00007C FF                     273 	.db #0xff	; 255
      00007D FF                     274 	.db #0xff	; 255
      00007E FF                     275 	.db #0xff	; 255
      00007F 7E                     276 	.db #0x7e	; 126
      000080 7E                     277 	.db #0x7e	; 126
      000081 7C                     278 	.db #0x7c	; 124
      000082 7C                     279 	.db #0x7c	; 124
      000083 38                     280 	.db #0x38	; 56	'8'
      000084 38                     281 	.db #0x38	; 56	'8'
      000085 30                     282 	.db #0x30	; 48	'0'
      000086 30                     283 	.db #0x30	; 48	'0'
      000087                        284 _background1:
      000087 26                     285 	.db #0x26	; 38
      000088 26                     286 	.db #0x26	; 38
      000089 26                     287 	.db #0x26	; 38
      00008A 26                     288 	.db #0x26	; 38
      00008B 26                     289 	.db #0x26	; 38
      00008C 26                     290 	.db #0x26	; 38
      00008D 26                     291 	.db #0x26	; 38
      00008E 26                     292 	.db #0x26	; 38
      00008F 26                     293 	.db #0x26	; 38
      000090 26                     294 	.db #0x26	; 38
      000091 26                     295 	.db #0x26	; 38
      000092 2A                     296 	.db #0x2a	; 42
      000093 29                     297 	.db #0x29	; 41
      000094 26                     298 	.db #0x26	; 38
      000095 26                     299 	.db #0x26	; 38
      000096 26                     300 	.db #0x26	; 38
      000097 26                     301 	.db #0x26	; 38
      000098 26                     302 	.db #0x26	; 38
      000099 26                     303 	.db #0x26	; 38
      00009A 26                     304 	.db #0x26	; 38
      00009B 26                     305 	.db #0x26	; 38
      00009C 26                     306 	.db #0x26	; 38
      00009D 26                     307 	.db #0x26	; 38
      00009E 26                     308 	.db #0x26	; 38
      00009F 26                     309 	.db #0x26	; 38
      0000A0 26                     310 	.db #0x26	; 38
      0000A1 26                     311 	.db #0x26	; 38
      0000A2 26                     312 	.db #0x26	; 38
      0000A3 26                     313 	.db #0x26	; 38
      0000A4 26                     314 	.db #0x26	; 38
      0000A5 26                     315 	.db #0x26	; 38
      0000A6 26                     316 	.db #0x26	; 38
      0000A7 26                     317 	.db #0x26	; 38
      0000A8 26                     318 	.db #0x26	; 38
      0000A9 26                     319 	.db #0x26	; 38
      0000AA 26                     320 	.db #0x26	; 38
      0000AB 26                     321 	.db #0x26	; 38
      0000AC 26                     322 	.db #0x26	; 38
      0000AD 26                     323 	.db #0x26	; 38
      0000AE 26                     324 	.db #0x26	; 38
      0000AF 26                     325 	.db #0x26	; 38
      0000B0 26                     326 	.db #0x26	; 38
      0000B1 26                     327 	.db #0x26	; 38
      0000B2 25                     328 	.db #0x25	; 37
      0000B3 26                     329 	.db #0x26	; 38
      0000B4 26                     330 	.db #0x26	; 38
      0000B5 26                     331 	.db #0x26	; 38
      0000B6 26                     332 	.db #0x26	; 38
      0000B7 26                     333 	.db #0x26	; 38
      0000B8 26                     334 	.db #0x26	; 38
      0000B9 26                     335 	.db #0x26	; 38
      0000BA 26                     336 	.db #0x26	; 38
      0000BB 26                     337 	.db #0x26	; 38
      0000BC 26                     338 	.db #0x26	; 38
      0000BD 26                     339 	.db #0x26	; 38
      0000BE 26                     340 	.db #0x26	; 38
      0000BF 26                     341 	.db #0x26	; 38
      0000C0 26                     342 	.db #0x26	; 38
      0000C1 26                     343 	.db #0x26	; 38
      0000C2 26                     344 	.db #0x26	; 38
      0000C3 26                     345 	.db #0x26	; 38
      0000C4 26                     346 	.db #0x26	; 38
      0000C5 26                     347 	.db #0x26	; 38
      0000C6 26                     348 	.db #0x26	; 38
      0000C7 26                     349 	.db #0x26	; 38
      0000C8 26                     350 	.db #0x26	; 38
      0000C9 26                     351 	.db #0x26	; 38
      0000CA 26                     352 	.db #0x26	; 38
      0000CB 26                     353 	.db #0x26	; 38
      0000CC 26                     354 	.db #0x26	; 38
      0000CD 26                     355 	.db #0x26	; 38
      0000CE 26                     356 	.db #0x26	; 38
      0000CF 26                     357 	.db #0x26	; 38
      0000D0 26                     358 	.db #0x26	; 38
      0000D1 26                     359 	.db #0x26	; 38
      0000D2 26                     360 	.db #0x26	; 38
      0000D3 26                     361 	.db #0x26	; 38
      0000D4 26                     362 	.db #0x26	; 38
      0000D5 26                     363 	.db #0x26	; 38
      0000D6 26                     364 	.db #0x26	; 38
      0000D7 26                     365 	.db #0x26	; 38
      0000D8 26                     366 	.db #0x26	; 38
      0000D9 26                     367 	.db #0x26	; 38
      0000DA 26                     368 	.db #0x26	; 38
      0000DB 26                     369 	.db #0x26	; 38
      0000DC 26                     370 	.db #0x26	; 38
      0000DD 26                     371 	.db #0x26	; 38
      0000DE 26                     372 	.db #0x26	; 38
      0000DF 26                     373 	.db #0x26	; 38
      0000E0 26                     374 	.db #0x26	; 38
      0000E1 26                     375 	.db #0x26	; 38
      0000E2 26                     376 	.db #0x26	; 38
      0000E3 26                     377 	.db #0x26	; 38
      0000E4 26                     378 	.db #0x26	; 38
      0000E5 26                     379 	.db #0x26	; 38
      0000E6 26                     380 	.db #0x26	; 38
      0000E7 26                     381 	.db #0x26	; 38
      0000E8 26                     382 	.db #0x26	; 38
      0000E9 26                     383 	.db #0x26	; 38
      0000EA 26                     384 	.db #0x26	; 38
      0000EB 26                     385 	.db #0x26	; 38
      0000EC 26                     386 	.db #0x26	; 38
      0000ED 26                     387 	.db #0x26	; 38
      0000EE 26                     388 	.db #0x26	; 38
      0000EF 26                     389 	.db #0x26	; 38
      0000F0 26                     390 	.db #0x26	; 38
      0000F1 26                     391 	.db #0x26	; 38
      0000F2 26                     392 	.db #0x26	; 38
      0000F3 26                     393 	.db #0x26	; 38
      0000F4 26                     394 	.db #0x26	; 38
      0000F5 26                     395 	.db #0x26	; 38
      0000F6 26                     396 	.db #0x26	; 38
      0000F7 26                     397 	.db #0x26	; 38
      0000F8 26                     398 	.db #0x26	; 38
      0000F9 26                     399 	.db #0x26	; 38
      0000FA 26                     400 	.db #0x26	; 38
      0000FB 26                     401 	.db #0x26	; 38
      0000FC 26                     402 	.db #0x26	; 38
      0000FD 26                     403 	.db #0x26	; 38
      0000FE 26                     404 	.db #0x26	; 38
      0000FF 26                     405 	.db #0x26	; 38
      000100 26                     406 	.db #0x26	; 38
      000101 26                     407 	.db #0x26	; 38
      000102 26                     408 	.db #0x26	; 38
      000103 26                     409 	.db #0x26	; 38
      000104 26                     410 	.db #0x26	; 38
      000105 26                     411 	.db #0x26	; 38
      000106 26                     412 	.db #0x26	; 38
      000107 26                     413 	.db #0x26	; 38
      000108 26                     414 	.db #0x26	; 38
      000109 26                     415 	.db #0x26	; 38
      00010A 26                     416 	.db #0x26	; 38
      00010B 26                     417 	.db #0x26	; 38
      00010C 26                     418 	.db #0x26	; 38
      00010D 26                     419 	.db #0x26	; 38
      00010E 26                     420 	.db #0x26	; 38
      00010F 26                     421 	.db #0x26	; 38
      000110 26                     422 	.db #0x26	; 38
      000111 26                     423 	.db #0x26	; 38
      000112 26                     424 	.db #0x26	; 38
      000113 26                     425 	.db #0x26	; 38
      000114 26                     426 	.db #0x26	; 38
      000115 26                     427 	.db #0x26	; 38
      000116 26                     428 	.db #0x26	; 38
      000117 26                     429 	.db #0x26	; 38
      000118 26                     430 	.db #0x26	; 38
      000119 26                     431 	.db #0x26	; 38
      00011A 26                     432 	.db #0x26	; 38
      00011B 26                     433 	.db #0x26	; 38
      00011C 26                     434 	.db #0x26	; 38
      00011D 26                     435 	.db #0x26	; 38
      00011E 26                     436 	.db #0x26	; 38
      00011F 26                     437 	.db #0x26	; 38
      000120 26                     438 	.db #0x26	; 38
      000121 26                     439 	.db #0x26	; 38
      000122 26                     440 	.db #0x26	; 38
      000123 26                     441 	.db #0x26	; 38
      000124 26                     442 	.db #0x26	; 38
      000125 26                     443 	.db #0x26	; 38
      000126 26                     444 	.db #0x26	; 38
      000127 26                     445 	.db #0x26	; 38
      000128 26                     446 	.db #0x26	; 38
      000129 26                     447 	.db #0x26	; 38
      00012A 26                     448 	.db #0x26	; 38
      00012B 26                     449 	.db #0x26	; 38
      00012C 26                     450 	.db #0x26	; 38
      00012D 26                     451 	.db #0x26	; 38
      00012E 26                     452 	.db #0x26	; 38
      00012F 26                     453 	.db #0x26	; 38
      000130 26                     454 	.db #0x26	; 38
      000131 26                     455 	.db #0x26	; 38
      000132 26                     456 	.db #0x26	; 38
      000133 26                     457 	.db #0x26	; 38
      000134 26                     458 	.db #0x26	; 38
      000135 26                     459 	.db #0x26	; 38
      000136 26                     460 	.db #0x26	; 38
      000137 26                     461 	.db #0x26	; 38
      000138 26                     462 	.db #0x26	; 38
      000139 26                     463 	.db #0x26	; 38
      00013A 26                     464 	.db #0x26	; 38
      00013B 26                     465 	.db #0x26	; 38
      00013C 26                     466 	.db #0x26	; 38
      00013D 26                     467 	.db #0x26	; 38
      00013E 26                     468 	.db #0x26	; 38
      00013F 26                     469 	.db #0x26	; 38
      000140 26                     470 	.db #0x26	; 38
      000141 26                     471 	.db #0x26	; 38
      000142 26                     472 	.db #0x26	; 38
      000143 26                     473 	.db #0x26	; 38
      000144 26                     474 	.db #0x26	; 38
      000145 26                     475 	.db #0x26	; 38
      000146 26                     476 	.db #0x26	; 38
      000147 26                     477 	.db #0x26	; 38
      000148 26                     478 	.db #0x26	; 38
      000149 26                     479 	.db #0x26	; 38
      00014A 26                     480 	.db #0x26	; 38
      00014B 26                     481 	.db #0x26	; 38
      00014C 26                     482 	.db #0x26	; 38
      00014D 26                     483 	.db #0x26	; 38
      00014E 26                     484 	.db #0x26	; 38
      00014F 26                     485 	.db #0x26	; 38
      000150 26                     486 	.db #0x26	; 38
      000151 26                     487 	.db #0x26	; 38
      000152 26                     488 	.db #0x26	; 38
      000153 26                     489 	.db #0x26	; 38
      000154 26                     490 	.db #0x26	; 38
      000155 26                     491 	.db #0x26	; 38
      000156 26                     492 	.db #0x26	; 38
      000157 26                     493 	.db #0x26	; 38
      000158 26                     494 	.db #0x26	; 38
      000159 26                     495 	.db #0x26	; 38
      00015A 26                     496 	.db #0x26	; 38
      00015B 26                     497 	.db #0x26	; 38
      00015C 26                     498 	.db #0x26	; 38
      00015D 26                     499 	.db #0x26	; 38
      00015E 26                     500 	.db #0x26	; 38
      00015F 26                     501 	.db #0x26	; 38
      000160 26                     502 	.db #0x26	; 38
      000161 26                     503 	.db #0x26	; 38
      000162 26                     504 	.db #0x26	; 38
      000163 26                     505 	.db #0x26	; 38
      000164 26                     506 	.db #0x26	; 38
      000165 26                     507 	.db #0x26	; 38
      000166 26                     508 	.db #0x26	; 38
      000167 26                     509 	.db #0x26	; 38
      000168 26                     510 	.db #0x26	; 38
      000169 26                     511 	.db #0x26	; 38
      00016A 26                     512 	.db #0x26	; 38
      00016B 26                     513 	.db #0x26	; 38
      00016C 26                     514 	.db #0x26	; 38
      00016D 26                     515 	.db #0x26	; 38
      00016E 26                     516 	.db #0x26	; 38
      00016F 26                     517 	.db #0x26	; 38
      000170 26                     518 	.db #0x26	; 38
      000171 26                     519 	.db #0x26	; 38
      000172 26                     520 	.db #0x26	; 38
      000173 26                     521 	.db #0x26	; 38
      000174 26                     522 	.db #0x26	; 38
      000175 26                     523 	.db #0x26	; 38
      000176 26                     524 	.db #0x26	; 38
      000177 26                     525 	.db #0x26	; 38
      000178 26                     526 	.db #0x26	; 38
      000179 26                     527 	.db #0x26	; 38
      00017A 26                     528 	.db #0x26	; 38
      00017B 26                     529 	.db #0x26	; 38
      00017C 26                     530 	.db #0x26	; 38
      00017D 26                     531 	.db #0x26	; 38
      00017E 26                     532 	.db #0x26	; 38
      00017F 26                     533 	.db #0x26	; 38
      000180 26                     534 	.db #0x26	; 38
      000181 26                     535 	.db #0x26	; 38
      000182 26                     536 	.db #0x26	; 38
      000183 26                     537 	.db #0x26	; 38
      000184 26                     538 	.db #0x26	; 38
      000185 26                     539 	.db #0x26	; 38
      000186 26                     540 	.db #0x26	; 38
      000187 26                     541 	.db #0x26	; 38
      000188 26                     542 	.db #0x26	; 38
      000189 26                     543 	.db #0x26	; 38
      00018A 26                     544 	.db #0x26	; 38
      00018B 26                     545 	.db #0x26	; 38
      00018C 26                     546 	.db #0x26	; 38
      00018D 26                     547 	.db #0x26	; 38
      00018E 26                     548 	.db #0x26	; 38
      00018F 26                     549 	.db #0x26	; 38
      000190 26                     550 	.db #0x26	; 38
      000191 26                     551 	.db #0x26	; 38
      000192 26                     552 	.db #0x26	; 38
      000193 26                     553 	.db #0x26	; 38
      000194 26                     554 	.db #0x26	; 38
      000195 26                     555 	.db #0x26	; 38
      000196 26                     556 	.db #0x26	; 38
      000197 26                     557 	.db #0x26	; 38
      000198 26                     558 	.db #0x26	; 38
      000199 26                     559 	.db #0x26	; 38
      00019A 26                     560 	.db #0x26	; 38
      00019B 26                     561 	.db #0x26	; 38
      00019C 26                     562 	.db #0x26	; 38
      00019D 26                     563 	.db #0x26	; 38
      00019E 26                     564 	.db #0x26	; 38
      00019F 26                     565 	.db #0x26	; 38
      0001A0 26                     566 	.db #0x26	; 38
      0001A1 26                     567 	.db #0x26	; 38
      0001A2 26                     568 	.db #0x26	; 38
      0001A3 26                     569 	.db #0x26	; 38
      0001A4 26                     570 	.db #0x26	; 38
      0001A5 26                     571 	.db #0x26	; 38
      0001A6 26                     572 	.db #0x26	; 38
      0001A7 26                     573 	.db #0x26	; 38
      0001A8 26                     574 	.db #0x26	; 38
      0001A9 26                     575 	.db #0x26	; 38
      0001AA 26                     576 	.db #0x26	; 38
      0001AB 26                     577 	.db #0x26	; 38
      0001AC 26                     578 	.db #0x26	; 38
      0001AD 26                     579 	.db #0x26	; 38
      0001AE 26                     580 	.db #0x26	; 38
      0001AF 26                     581 	.db #0x26	; 38
      0001B0 26                     582 	.db #0x26	; 38
      0001B1 26                     583 	.db #0x26	; 38
      0001B2 26                     584 	.db #0x26	; 38
      0001B3 26                     585 	.db #0x26	; 38
      0001B4 26                     586 	.db #0x26	; 38
      0001B5 26                     587 	.db #0x26	; 38
      0001B6 26                     588 	.db #0x26	; 38
      0001B7 26                     589 	.db #0x26	; 38
      0001B8 26                     590 	.db #0x26	; 38
      0001B9 26                     591 	.db #0x26	; 38
      0001BA 25                     592 	.db #0x25	; 37
      0001BB 26                     593 	.db #0x26	; 38
      0001BC 26                     594 	.db #0x26	; 38
      0001BD 26                     595 	.db #0x26	; 38
      0001BE 26                     596 	.db #0x26	; 38
      0001BF 26                     597 	.db #0x26	; 38
      0001C0 26                     598 	.db #0x26	; 38
      0001C1 26                     599 	.db #0x26	; 38
      0001C2 26                     600 	.db #0x26	; 38
      0001C3 26                     601 	.db #0x26	; 38
      0001C4 26                     602 	.db #0x26	; 38
      0001C5 26                     603 	.db #0x26	; 38
      0001C6 26                     604 	.db #0x26	; 38
      0001C7 26                     605 	.db #0x26	; 38
      0001C8 26                     606 	.db #0x26	; 38
      0001C9 26                     607 	.db #0x26	; 38
      0001CA 26                     608 	.db #0x26	; 38
      0001CB 26                     609 	.db #0x26	; 38
      0001CC 26                     610 	.db #0x26	; 38
      0001CD 26                     611 	.db #0x26	; 38
      0001CE 26                     612 	.db #0x26	; 38
      0001CF 26                     613 	.db #0x26	; 38
      0001D0 26                     614 	.db #0x26	; 38
      0001D1 26                     615 	.db #0x26	; 38
      0001D2 26                     616 	.db #0x26	; 38
      0001D3 26                     617 	.db #0x26	; 38
      0001D4 26                     618 	.db #0x26	; 38
      0001D5 26                     619 	.db #0x26	; 38
      0001D6 26                     620 	.db #0x26	; 38
      0001D7 26                     621 	.db #0x26	; 38
      0001D8 26                     622 	.db #0x26	; 38
      0001D9 26                     623 	.db #0x26	; 38
      0001DA 27                     624 	.db #0x27	; 39
      0001DB 28                     625 	.db #0x28	; 40
      0001DC 26                     626 	.db #0x26	; 38
      0001DD 26                     627 	.db #0x26	; 38
      0001DE 26                     628 	.db #0x26	; 38
      0001DF 26                     629 	.db #0x26	; 38
      0001E0 26                     630 	.db #0x26	; 38
      0001E1 26                     631 	.db #0x26	; 38
      0001E2 26                     632 	.db #0x26	; 38
      0001E3 26                     633 	.db #0x26	; 38
      0001E4 26                     634 	.db #0x26	; 38
      0001E5 26                     635 	.db #0x26	; 38
      0001E6 26                     636 	.db #0x26	; 38
      0001E7 26                     637 	.db #0x26	; 38
      0001E8 26                     638 	.db #0x26	; 38
      0001E9 26                     639 	.db #0x26	; 38
      0001EA 26                     640 	.db #0x26	; 38
      0001EB 26                     641 	.db #0x26	; 38
      0001EC 26                     642 	.db #0x26	; 38
      0001ED 26                     643 	.db #0x26	; 38
      0001EE 25                     644 	.db #0x25	; 37
      0001EF 26                     645 	.db #0x26	; 38
      0001F0 26                     646 	.db #0x26	; 38
      0001F1 26                     647 	.db #0x26	; 38
      0001F2 26                     648 	.db #0x26	; 38
      0001F3 26                     649 	.db #0x26	; 38
      0001F4 26                     650 	.db #0x26	; 38
      0001F5 26                     651 	.db #0x26	; 38
      0001F6 26                     652 	.db #0x26	; 38
      0001F7 26                     653 	.db #0x26	; 38
      0001F8 26                     654 	.db #0x26	; 38
      0001F9 26                     655 	.db #0x26	; 38
      0001FA 2A                     656 	.db #0x2a	; 42
      0001FB 29                     657 	.db #0x29	; 41
      0001FC 26                     658 	.db #0x26	; 38
      0001FD 26                     659 	.db #0x26	; 38
      0001FE 26                     660 	.db #0x26	; 38
      0001FF 26                     661 	.db #0x26	; 38
      000200 26                     662 	.db #0x26	; 38
      000201 26                     663 	.db #0x26	; 38
      000202 26                     664 	.db #0x26	; 38
      000203 26                     665 	.db #0x26	; 38
      000204 26                     666 	.db #0x26	; 38
      000205 26                     667 	.db #0x26	; 38
      000206 26                     668 	.db #0x26	; 38
      000207 26                     669 	.db #0x26	; 38
      000208 26                     670 	.db #0x26	; 38
      000209 26                     671 	.db #0x26	; 38
      00020A 26                     672 	.db #0x26	; 38
      00020B 26                     673 	.db #0x26	; 38
      00020C 26                     674 	.db #0x26	; 38
      00020D 26                     675 	.db #0x26	; 38
      00020E 27                     676 	.db #0x27	; 39
      00020F 28                     677 	.db #0x28	; 40
      000210 26                     678 	.db #0x26	; 38
      000211 26                     679 	.db #0x26	; 38
      000212 26                     680 	.db #0x26	; 38
      000213 26                     681 	.db #0x26	; 38
      000214 26                     682 	.db #0x26	; 38
      000215 26                     683 	.db #0x26	; 38
      000216 26                     684 	.db #0x26	; 38
      000217 26                     685 	.db #0x26	; 38
      000218 26                     686 	.db #0x26	; 38
      000219 26                     687 	.db #0x26	; 38
      00021A 26                     688 	.db #0x26	; 38
      00021B 26                     689 	.db #0x26	; 38
      00021C 26                     690 	.db #0x26	; 38
      00021D 26                     691 	.db #0x26	; 38
      00021E 26                     692 	.db #0x26	; 38
      00021F 26                     693 	.db #0x26	; 38
      000220 26                     694 	.db #0x26	; 38
      000221 26                     695 	.db #0x26	; 38
      000222 26                     696 	.db #0x26	; 38
      000223 26                     697 	.db #0x26	; 38
      000224 26                     698 	.db #0x26	; 38
      000225 26                     699 	.db #0x26	; 38
      000226 26                     700 	.db #0x26	; 38
      000227 26                     701 	.db #0x26	; 38
      000228 26                     702 	.db #0x26	; 38
      000229 26                     703 	.db #0x26	; 38
      00022A 26                     704 	.db #0x26	; 38
      00022B 26                     705 	.db #0x26	; 38
      00022C 26                     706 	.db #0x26	; 38
      00022D 26                     707 	.db #0x26	; 38
      00022E 2A                     708 	.db #0x2a	; 42
      00022F 29                     709 	.db #0x29	; 41
      000230 26                     710 	.db #0x26	; 38
      000231 26                     711 	.db #0x26	; 38
      000232 26                     712 	.db #0x26	; 38
      000233 26                     713 	.db #0x26	; 38
      000234 26                     714 	.db #0x26	; 38
      000235 26                     715 	.db #0x26	; 38
      000236 26                     716 	.db #0x26	; 38
      000237 26                     717 	.db #0x26	; 38
      000238 26                     718 	.db #0x26	; 38
      000239 26                     719 	.db #0x26	; 38
      00023A 26                     720 	.db #0x26	; 38
      00023B 26                     721 	.db #0x26	; 38
      00023C 26                     722 	.db #0x26	; 38
      00023D 26                     723 	.db #0x26	; 38
      00023E 26                     724 	.db #0x26	; 38
      00023F 26                     725 	.db #0x26	; 38
      000240 26                     726 	.db #0x26	; 38
      000241 26                     727 	.db #0x26	; 38
      000242 26                     728 	.db #0x26	; 38
      000243 26                     729 	.db #0x26	; 38
      000244 26                     730 	.db #0x26	; 38
      000245 26                     731 	.db #0x26	; 38
      000246 26                     732 	.db #0x26	; 38
      000247 26                     733 	.db #0x26	; 38
      000248 26                     734 	.db #0x26	; 38
      000249 26                     735 	.db #0x26	; 38
      00024A 26                     736 	.db #0x26	; 38
      00024B 26                     737 	.db #0x26	; 38
      00024C 26                     738 	.db #0x26	; 38
      00024D 26                     739 	.db #0x26	; 38
      00024E 26                     740 	.db #0x26	; 38
      00024F 26                     741 	.db #0x26	; 38
      000250 26                     742 	.db #0x26	; 38
      000251 26                     743 	.db #0x26	; 38
      000252 26                     744 	.db #0x26	; 38
      000253 26                     745 	.db #0x26	; 38
      000254 26                     746 	.db #0x26	; 38
      000255 26                     747 	.db #0x26	; 38
      000256 26                     748 	.db #0x26	; 38
      000257 26                     749 	.db #0x26	; 38
      000258 26                     750 	.db #0x26	; 38
      000259 26                     751 	.db #0x26	; 38
      00025A 26                     752 	.db #0x26	; 38
      00025B 26                     753 	.db #0x26	; 38
      00025C 26                     754 	.db #0x26	; 38
      00025D 26                     755 	.db #0x26	; 38
      00025E 26                     756 	.db #0x26	; 38
      00025F 26                     757 	.db #0x26	; 38
      000260 26                     758 	.db #0x26	; 38
      000261 26                     759 	.db #0x26	; 38
      000262 26                     760 	.db #0x26	; 38
      000263 26                     761 	.db #0x26	; 38
      000264 26                     762 	.db #0x26	; 38
      000265 26                     763 	.db #0x26	; 38
      000266 26                     764 	.db #0x26	; 38
      000267 26                     765 	.db #0x26	; 38
      000268 26                     766 	.db #0x26	; 38
      000269 26                     767 	.db #0x26	; 38
      00026A 26                     768 	.db #0x26	; 38
      00026B 26                     769 	.db #0x26	; 38
      00026C 26                     770 	.db #0x26	; 38
      00026D 26                     771 	.db #0x26	; 38
      00026E 26                     772 	.db #0x26	; 38
      00026F 26                     773 	.db #0x26	; 38
      000270 26                     774 	.db #0x26	; 38
      000271 26                     775 	.db #0x26	; 38
      000272 26                     776 	.db #0x26	; 38
      000273 26                     777 	.db #0x26	; 38
      000274 26                     778 	.db #0x26	; 38
      000275 26                     779 	.db #0x26	; 38
      000276 26                     780 	.db #0x26	; 38
      000277 26                     781 	.db #0x26	; 38
      000278 26                     782 	.db #0x26	; 38
      000279 26                     783 	.db #0x26	; 38
      00027A 26                     784 	.db #0x26	; 38
      00027B 26                     785 	.db #0x26	; 38
      00027C 26                     786 	.db #0x26	; 38
      00027D 26                     787 	.db #0x26	; 38
      00027E 26                     788 	.db #0x26	; 38
      00027F 26                     789 	.db #0x26	; 38
      000280 26                     790 	.db #0x26	; 38
      000281 26                     791 	.db #0x26	; 38
      000282 26                     792 	.db #0x26	; 38
      000283 26                     793 	.db #0x26	; 38
      000284 26                     794 	.db #0x26	; 38
      000285 26                     795 	.db #0x26	; 38
      000286 26                     796 	.db #0x26	; 38
      000287 25                     797 	.db #0x25	; 37
      000288 26                     798 	.db #0x26	; 38
      000289 26                     799 	.db #0x26	; 38
      00028A 26                     800 	.db #0x26	; 38
      00028B 26                     801 	.db #0x26	; 38
      00028C 26                     802 	.db #0x26	; 38
      00028D 26                     803 	.db #0x26	; 38
      00028E 26                     804 	.db #0x26	; 38
      00028F 26                     805 	.db #0x26	; 38
      000290 26                     806 	.db #0x26	; 38
      000291 26                     807 	.db #0x26	; 38
      000292 26                     808 	.db #0x26	; 38
      000293 26                     809 	.db #0x26	; 38
      000294 26                     810 	.db #0x26	; 38
      000295 26                     811 	.db #0x26	; 38
      000296 26                     812 	.db #0x26	; 38
      000297 26                     813 	.db #0x26	; 38
      000298 26                     814 	.db #0x26	; 38
      000299 26                     815 	.db #0x26	; 38
      00029A 26                     816 	.db #0x26	; 38
      00029B 26                     817 	.db #0x26	; 38
      00029C 26                     818 	.db #0x26	; 38
      00029D 26                     819 	.db #0x26	; 38
      00029E 26                     820 	.db #0x26	; 38
      00029F 26                     821 	.db #0x26	; 38
      0002A0 26                     822 	.db #0x26	; 38
      0002A1 26                     823 	.db #0x26	; 38
      0002A2 26                     824 	.db #0x26	; 38
      0002A3 26                     825 	.db #0x26	; 38
      0002A4 26                     826 	.db #0x26	; 38
      0002A5 26                     827 	.db #0x26	; 38
      0002A6 26                     828 	.db #0x26	; 38
      0002A7 28                     829 	.db #0x28	; 40
      0002A8 26                     830 	.db #0x26	; 38
      0002A9 26                     831 	.db #0x26	; 38
      0002AA 26                     832 	.db #0x26	; 38
      0002AB 26                     833 	.db #0x26	; 38
      0002AC 26                     834 	.db #0x26	; 38
      0002AD 26                     835 	.db #0x26	; 38
      0002AE 26                     836 	.db #0x26	; 38
      0002AF 26                     837 	.db #0x26	; 38
      0002B0 26                     838 	.db #0x26	; 38
      0002B1 26                     839 	.db #0x26	; 38
      0002B2 26                     840 	.db #0x26	; 38
      0002B3 26                     841 	.db #0x26	; 38
      0002B4 26                     842 	.db #0x26	; 38
      0002B5 26                     843 	.db #0x26	; 38
      0002B6 26                     844 	.db #0x26	; 38
      0002B7 26                     845 	.db #0x26	; 38
      0002B8 26                     846 	.db #0x26	; 38
      0002B9 26                     847 	.db #0x26	; 38
      0002BA 26                     848 	.db #0x26	; 38
      0002BB 26                     849 	.db #0x26	; 38
      0002BC 26                     850 	.db #0x26	; 38
      0002BD 26                     851 	.db #0x26	; 38
      0002BE 26                     852 	.db #0x26	; 38
      0002BF 26                     853 	.db #0x26	; 38
      0002C0 26                     854 	.db #0x26	; 38
      0002C1 26                     855 	.db #0x26	; 38
      0002C2 26                     856 	.db #0x26	; 38
      0002C3 26                     857 	.db #0x26	; 38
      0002C4 26                     858 	.db #0x26	; 38
      0002C5 26                     859 	.db #0x26	; 38
      0002C6 27                     860 	.db #0x27	; 39
      0002C7 29                     861 	.db #0x29	; 41
      0002C8 26                     862 	.db #0x26	; 38
      0002C9 26                     863 	.db #0x26	; 38
      0002CA 26                     864 	.db #0x26	; 38
      0002CB 26                     865 	.db #0x26	; 38
      0002CC 26                     866 	.db #0x26	; 38
      0002CD 26                     867 	.db #0x26	; 38
      0002CE 26                     868 	.db #0x26	; 38
      0002CF 26                     869 	.db #0x26	; 38
      0002D0 26                     870 	.db #0x26	; 38
      0002D1 26                     871 	.db #0x26	; 38
      0002D2 26                     872 	.db #0x26	; 38
      0002D3 26                     873 	.db #0x26	; 38
      0002D4 26                     874 	.db #0x26	; 38
      0002D5 26                     875 	.db #0x26	; 38
      0002D6 26                     876 	.db #0x26	; 38
      0002D7 26                     877 	.db #0x26	; 38
      0002D8 26                     878 	.db #0x26	; 38
      0002D9 26                     879 	.db #0x26	; 38
      0002DA 26                     880 	.db #0x26	; 38
      0002DB 26                     881 	.db #0x26	; 38
      0002DC 26                     882 	.db #0x26	; 38
      0002DD 26                     883 	.db #0x26	; 38
      0002DE 26                     884 	.db #0x26	; 38
      0002DF 26                     885 	.db #0x26	; 38
      0002E0 26                     886 	.db #0x26	; 38
      0002E1 26                     887 	.db #0x26	; 38
      0002E2 26                     888 	.db #0x26	; 38
      0002E3 26                     889 	.db #0x26	; 38
      0002E4 26                     890 	.db #0x26	; 38
      0002E5 26                     891 	.db #0x26	; 38
      0002E6 2A                     892 	.db #0x2a	; 42
      0002E7 26                     893 	.db #0x26	; 38
      0002E8 26                     894 	.db #0x26	; 38
      0002E9 26                     895 	.db #0x26	; 38
      0002EA 26                     896 	.db #0x26	; 38
      0002EB 26                     897 	.db #0x26	; 38
      0002EC 26                     898 	.db #0x26	; 38
      0002ED 26                     899 	.db #0x26	; 38
      0002EE 26                     900 	.db #0x26	; 38
      0002EF 26                     901 	.db #0x26	; 38
      0002F0 26                     902 	.db #0x26	; 38
      0002F1 26                     903 	.db #0x26	; 38
      0002F2 26                     904 	.db #0x26	; 38
      0002F3 26                     905 	.db #0x26	; 38
      0002F4 26                     906 	.db #0x26	; 38
      0002F5 26                     907 	.db #0x26	; 38
      0002F6 26                     908 	.db #0x26	; 38
      0002F7 26                     909 	.db #0x26	; 38
      0002F8 26                     910 	.db #0x26	; 38
      0002F9 26                     911 	.db #0x26	; 38
      0002FA 26                     912 	.db #0x26	; 38
      0002FB 26                     913 	.db #0x26	; 38
      0002FC 26                     914 	.db #0x26	; 38
      0002FD 26                     915 	.db #0x26	; 38
      0002FE 26                     916 	.db #0x26	; 38
      0002FF 26                     917 	.db #0x26	; 38
      000300 26                     918 	.db #0x26	; 38
      000301 26                     919 	.db #0x26	; 38
      000302 26                     920 	.db #0x26	; 38
      000303 26                     921 	.db #0x26	; 38
      000304 26                     922 	.db #0x26	; 38
      000305 26                     923 	.db #0x26	; 38
      000306 26                     924 	.db #0x26	; 38
      000307 26                     925 	.db #0x26	; 38
      000308 26                     926 	.db #0x26	; 38
      000309 26                     927 	.db #0x26	; 38
      00030A 26                     928 	.db #0x26	; 38
      00030B 26                     929 	.db #0x26	; 38
      00030C 26                     930 	.db #0x26	; 38
      00030D 26                     931 	.db #0x26	; 38
      00030E 26                     932 	.db #0x26	; 38
      00030F 26                     933 	.db #0x26	; 38
      000310 26                     934 	.db #0x26	; 38
      000311 26                     935 	.db #0x26	; 38
      000312 26                     936 	.db #0x26	; 38
      000313 26                     937 	.db #0x26	; 38
      000314 26                     938 	.db #0x26	; 38
      000315 26                     939 	.db #0x26	; 38
      000316 26                     940 	.db #0x26	; 38
      000317 26                     941 	.db #0x26	; 38
      000318 26                     942 	.db #0x26	; 38
      000319 26                     943 	.db #0x26	; 38
      00031A 26                     944 	.db #0x26	; 38
      00031B 26                     945 	.db #0x26	; 38
      00031C 26                     946 	.db #0x26	; 38
      00031D 26                     947 	.db #0x26	; 38
      00031E 26                     948 	.db #0x26	; 38
      00031F 26                     949 	.db #0x26	; 38
      000320 26                     950 	.db #0x26	; 38
      000321 26                     951 	.db #0x26	; 38
      000322 26                     952 	.db #0x26	; 38
      000323 26                     953 	.db #0x26	; 38
      000324 26                     954 	.db #0x26	; 38
      000325 26                     955 	.db #0x26	; 38
      000326 26                     956 	.db #0x26	; 38
      000327 26                     957 	.db #0x26	; 38
      000328 26                     958 	.db #0x26	; 38
      000329 26                     959 	.db #0x26	; 38
      00032A 26                     960 	.db #0x26	; 38
      00032B 26                     961 	.db #0x26	; 38
      00032C 26                     962 	.db #0x26	; 38
      00032D 26                     963 	.db #0x26	; 38
      00032E 26                     964 	.db #0x26	; 38
      00032F 26                     965 	.db #0x26	; 38
      000330 26                     966 	.db #0x26	; 38
      000331 26                     967 	.db #0x26	; 38
      000332 26                     968 	.db #0x26	; 38
      000333 26                     969 	.db #0x26	; 38
      000334 26                     970 	.db #0x26	; 38
      000335 26                     971 	.db #0x26	; 38
      000336 26                     972 	.db #0x26	; 38
      000337 26                     973 	.db #0x26	; 38
      000338 26                     974 	.db #0x26	; 38
      000339 26                     975 	.db #0x26	; 38
      00033A 26                     976 	.db #0x26	; 38
      00033B 26                     977 	.db #0x26	; 38
      00033C 26                     978 	.db #0x26	; 38
      00033D 26                     979 	.db #0x26	; 38
      00033E 26                     980 	.db #0x26	; 38
      00033F 26                     981 	.db #0x26	; 38
      000340 26                     982 	.db #0x26	; 38
      000341 26                     983 	.db #0x26	; 38
      000342 26                     984 	.db #0x26	; 38
      000343 26                     985 	.db #0x26	; 38
      000344 26                     986 	.db #0x26	; 38
      000345 26                     987 	.db #0x26	; 38
      000346 26                     988 	.db #0x26	; 38
      000347 26                     989 	.db #0x26	; 38
      000348 26                     990 	.db #0x26	; 38
      000349 26                     991 	.db #0x26	; 38
      00034A 26                     992 	.db #0x26	; 38
      00034B 26                     993 	.db #0x26	; 38
      00034C 26                     994 	.db #0x26	; 38
      00034D 26                     995 	.db #0x26	; 38
      00034E 26                     996 	.db #0x26	; 38
      00034F 26                     997 	.db #0x26	; 38
      000350 26                     998 	.db #0x26	; 38
      000351 26                     999 	.db #0x26	; 38
      000352 26                    1000 	.db #0x26	; 38
      000353 26                    1001 	.db #0x26	; 38
      000354 26                    1002 	.db #0x26	; 38
      000355 26                    1003 	.db #0x26	; 38
      000356 26                    1004 	.db #0x26	; 38
      000357 26                    1005 	.db #0x26	; 38
      000358 26                    1006 	.db #0x26	; 38
      000359 26                    1007 	.db #0x26	; 38
      00035A 26                    1008 	.db #0x26	; 38
      00035B 26                    1009 	.db #0x26	; 38
      00035C 26                    1010 	.db #0x26	; 38
      00035D 26                    1011 	.db #0x26	; 38
      00035E 26                    1012 	.db #0x26	; 38
      00035F 26                    1013 	.db #0x26	; 38
      000360 26                    1014 	.db #0x26	; 38
      000361 26                    1015 	.db #0x26	; 38
      000362 26                    1016 	.db #0x26	; 38
      000363 26                    1017 	.db #0x26	; 38
      000364 26                    1018 	.db #0x26	; 38
      000365 26                    1019 	.db #0x26	; 38
      000366 26                    1020 	.db #0x26	; 38
      000367 26                    1021 	.db #0x26	; 38
      000368 26                    1022 	.db #0x26	; 38
      000369 26                    1023 	.db #0x26	; 38
      00036A 26                    1024 	.db #0x26	; 38
      00036B 26                    1025 	.db #0x26	; 38
      00036C 26                    1026 	.db #0x26	; 38
      00036D 26                    1027 	.db #0x26	; 38
      00036E 26                    1028 	.db #0x26	; 38
      00036F 26                    1029 	.db #0x26	; 38
      000370 26                    1030 	.db #0x26	; 38
      000371 26                    1031 	.db #0x26	; 38
      000372 26                    1032 	.db #0x26	; 38
      000373 26                    1033 	.db #0x26	; 38
      000374 26                    1034 	.db #0x26	; 38
      000375 26                    1035 	.db #0x26	; 38
      000376 26                    1036 	.db #0x26	; 38
      000377 26                    1037 	.db #0x26	; 38
      000378 25                    1038 	.db #0x25	; 37
      000379 26                    1039 	.db #0x26	; 38
      00037A 26                    1040 	.db #0x26	; 38
      00037B 26                    1041 	.db #0x26	; 38
      00037C 26                    1042 	.db #0x26	; 38
      00037D 26                    1043 	.db #0x26	; 38
      00037E 26                    1044 	.db #0x26	; 38
      00037F 26                    1045 	.db #0x26	; 38
      000380 26                    1046 	.db #0x26	; 38
      000381 26                    1047 	.db #0x26	; 38
      000382 26                    1048 	.db #0x26	; 38
      000383 26                    1049 	.db #0x26	; 38
      000384 26                    1050 	.db #0x26	; 38
      000385 26                    1051 	.db #0x26	; 38
      000386 26                    1052 	.db #0x26	; 38
      000387 26                    1053 	.db #0x26	; 38
      000388 26                    1054 	.db #0x26	; 38
      000389 26                    1055 	.db #0x26	; 38
      00038A 26                    1056 	.db #0x26	; 38
      00038B 26                    1057 	.db #0x26	; 38
      00038C 26                    1058 	.db #0x26	; 38
      00038D 26                    1059 	.db #0x26	; 38
      00038E 26                    1060 	.db #0x26	; 38
      00038F 26                    1061 	.db #0x26	; 38
      000390 26                    1062 	.db #0x26	; 38
      000391 26                    1063 	.db #0x26	; 38
      000392 26                    1064 	.db #0x26	; 38
      000393 26                    1065 	.db #0x26	; 38
      000394 26                    1066 	.db #0x26	; 38
      000395 26                    1067 	.db #0x26	; 38
      000396 26                    1068 	.db #0x26	; 38
      000397 26                    1069 	.db #0x26	; 38
      000398 27                    1070 	.db #0x27	; 39
      000399 28                    1071 	.db #0x28	; 40
      00039A 26                    1072 	.db #0x26	; 38
      00039B 26                    1073 	.db #0x26	; 38
      00039C 26                    1074 	.db #0x26	; 38
      00039D 26                    1075 	.db #0x26	; 38
      00039E 26                    1076 	.db #0x26	; 38
      00039F 26                    1077 	.db #0x26	; 38
      0003A0 26                    1078 	.db #0x26	; 38
      0003A1 26                    1079 	.db #0x26	; 38
      0003A2 26                    1080 	.db #0x26	; 38
      0003A3 26                    1081 	.db #0x26	; 38
      0003A4 26                    1082 	.db #0x26	; 38
      0003A5 26                    1083 	.db #0x26	; 38
      0003A6 26                    1084 	.db #0x26	; 38
      0003A7 26                    1085 	.db #0x26	; 38
      0003A8 26                    1086 	.db #0x26	; 38
      0003A9 26                    1087 	.db #0x26	; 38
      0003AA 26                    1088 	.db #0x26	; 38
      0003AB 26                    1089 	.db #0x26	; 38
      0003AC 26                    1090 	.db #0x26	; 38
      0003AD 26                    1091 	.db #0x26	; 38
      0003AE 26                    1092 	.db #0x26	; 38
      0003AF 26                    1093 	.db #0x26	; 38
      0003B0 26                    1094 	.db #0x26	; 38
      0003B1 26                    1095 	.db #0x26	; 38
      0003B2 26                    1096 	.db #0x26	; 38
      0003B3 26                    1097 	.db #0x26	; 38
      0003B4 26                    1098 	.db #0x26	; 38
      0003B5 26                    1099 	.db #0x26	; 38
      0003B6 26                    1100 	.db #0x26	; 38
      0003B7 26                    1101 	.db #0x26	; 38
      0003B8 2A                    1102 	.db #0x2a	; 42
      0003B9 29                    1103 	.db #0x29	; 41
      0003BA 26                    1104 	.db #0x26	; 38
      0003BB 26                    1105 	.db #0x26	; 38
      0003BC 26                    1106 	.db #0x26	; 38
      0003BD 26                    1107 	.db #0x26	; 38
      0003BE 26                    1108 	.db #0x26	; 38
      0003BF 26                    1109 	.db #0x26	; 38
      0003C0 26                    1110 	.db #0x26	; 38
      0003C1 26                    1111 	.db #0x26	; 38
      0003C2 26                    1112 	.db #0x26	; 38
      0003C3 26                    1113 	.db #0x26	; 38
      0003C4 26                    1114 	.db #0x26	; 38
      0003C5 26                    1115 	.db #0x26	; 38
      0003C6 26                    1116 	.db #0x26	; 38
      0003C7 26                    1117 	.db #0x26	; 38
      0003C8 26                    1118 	.db #0x26	; 38
      0003C9 26                    1119 	.db #0x26	; 38
      0003CA 26                    1120 	.db #0x26	; 38
      0003CB 26                    1121 	.db #0x26	; 38
      0003CC 26                    1122 	.db #0x26	; 38
      0003CD 26                    1123 	.db #0x26	; 38
      0003CE 26                    1124 	.db #0x26	; 38
      0003CF 26                    1125 	.db #0x26	; 38
      0003D0 26                    1126 	.db #0x26	; 38
      0003D1 26                    1127 	.db #0x26	; 38
      0003D2 26                    1128 	.db #0x26	; 38
      0003D3 26                    1129 	.db #0x26	; 38
      0003D4 26                    1130 	.db #0x26	; 38
      0003D5 26                    1131 	.db #0x26	; 38
      0003D6 26                    1132 	.db #0x26	; 38
      0003D7 26                    1133 	.db #0x26	; 38
      0003D8 26                    1134 	.db #0x26	; 38
      0003D9 26                    1135 	.db #0x26	; 38
      0003DA 26                    1136 	.db #0x26	; 38
      0003DB 26                    1137 	.db #0x26	; 38
      0003DC 26                    1138 	.db #0x26	; 38
      0003DD 26                    1139 	.db #0x26	; 38
      0003DE 26                    1140 	.db #0x26	; 38
      0003DF 26                    1141 	.db #0x26	; 38
      0003E0 26                    1142 	.db #0x26	; 38
      0003E1 26                    1143 	.db #0x26	; 38
      0003E2 26                    1144 	.db #0x26	; 38
      0003E3 26                    1145 	.db #0x26	; 38
      0003E4 26                    1146 	.db #0x26	; 38
      0003E5 26                    1147 	.db #0x26	; 38
      0003E6 26                    1148 	.db #0x26	; 38
      0003E7 26                    1149 	.db #0x26	; 38
      0003E8 26                    1150 	.db #0x26	; 38
      0003E9 26                    1151 	.db #0x26	; 38
      0003EA 26                    1152 	.db #0x26	; 38
      0003EB 26                    1153 	.db #0x26	; 38
      0003EC 26                    1154 	.db #0x26	; 38
      0003ED 26                    1155 	.db #0x26	; 38
      0003EE 26                    1156 	.db #0x26	; 38
      0003EF 26                    1157 	.db #0x26	; 38
      0003F0 26                    1158 	.db #0x26	; 38
      0003F1 26                    1159 	.db #0x26	; 38
      0003F2 26                    1160 	.db #0x26	; 38
      0003F3 26                    1161 	.db #0x26	; 38
      0003F4 26                    1162 	.db #0x26	; 38
      0003F5 26                    1163 	.db #0x26	; 38
      0003F6 26                    1164 	.db #0x26	; 38
      0003F7 26                    1165 	.db #0x26	; 38
      0003F8 26                    1166 	.db #0x26	; 38
      0003F9 26                    1167 	.db #0x26	; 38
      0003FA 26                    1168 	.db #0x26	; 38
      0003FB 26                    1169 	.db #0x26	; 38
      0003FC 26                    1170 	.db #0x26	; 38
      0003FD 26                    1171 	.db #0x26	; 38
      0003FE 26                    1172 	.db #0x26	; 38
      0003FF 26                    1173 	.db #0x26	; 38
      000400 26                    1174 	.db #0x26	; 38
      000401 26                    1175 	.db #0x26	; 38
      000402 26                    1176 	.db #0x26	; 38
      000403 26                    1177 	.db #0x26	; 38
      000404 26                    1178 	.db #0x26	; 38
      000405 26                    1179 	.db #0x26	; 38
      000406 26                    1180 	.db #0x26	; 38
      000407 26                    1181 	.db #0x26	; 38
      000408 26                    1182 	.db #0x26	; 38
      000409 26                    1183 	.db #0x26	; 38
      00040A 26                    1184 	.db #0x26	; 38
      00040B 26                    1185 	.db #0x26	; 38
      00040C 26                    1186 	.db #0x26	; 38
      00040D 26                    1187 	.db #0x26	; 38
      00040E 26                    1188 	.db #0x26	; 38
      00040F 26                    1189 	.db #0x26	; 38
      000410 26                    1190 	.db #0x26	; 38
      000411 26                    1191 	.db #0x26	; 38
      000412 26                    1192 	.db #0x26	; 38
      000413 26                    1193 	.db #0x26	; 38
      000414 26                    1194 	.db #0x26	; 38
      000415 26                    1195 	.db #0x26	; 38
      000416 26                    1196 	.db #0x26	; 38
      000417 26                    1197 	.db #0x26	; 38
      000418 26                    1198 	.db #0x26	; 38
      000419 26                    1199 	.db #0x26	; 38
      00041A 26                    1200 	.db #0x26	; 38
      00041B 26                    1201 	.db #0x26	; 38
      00041C 26                    1202 	.db #0x26	; 38
      00041D 26                    1203 	.db #0x26	; 38
      00041E 26                    1204 	.db #0x26	; 38
      00041F 26                    1205 	.db #0x26	; 38
      000420 26                    1206 	.db #0x26	; 38
      000421 26                    1207 	.db #0x26	; 38
      000422 26                    1208 	.db #0x26	; 38
      000423 26                    1209 	.db #0x26	; 38
      000424 26                    1210 	.db #0x26	; 38
      000425 26                    1211 	.db #0x26	; 38
      000426 26                    1212 	.db #0x26	; 38
      000427 26                    1213 	.db #0x26	; 38
      000428 26                    1214 	.db #0x26	; 38
      000429 26                    1215 	.db #0x26	; 38
      00042A 26                    1216 	.db #0x26	; 38
      00042B 26                    1217 	.db #0x26	; 38
      00042C 26                    1218 	.db #0x26	; 38
      00042D 26                    1219 	.db #0x26	; 38
      00042E 26                    1220 	.db #0x26	; 38
      00042F 26                    1221 	.db #0x26	; 38
      000430 26                    1222 	.db #0x26	; 38
      000431 26                    1223 	.db #0x26	; 38
      000432 26                    1224 	.db #0x26	; 38
      000433 26                    1225 	.db #0x26	; 38
      000434 26                    1226 	.db #0x26	; 38
      000435 26                    1227 	.db #0x26	; 38
      000436 26                    1228 	.db #0x26	; 38
      000437 26                    1229 	.db #0x26	; 38
      000438 26                    1230 	.db #0x26	; 38
      000439 26                    1231 	.db #0x26	; 38
      00043A 26                    1232 	.db #0x26	; 38
      00043B 26                    1233 	.db #0x26	; 38
      00043C 26                    1234 	.db #0x26	; 38
      00043D 26                    1235 	.db #0x26	; 38
      00043E 26                    1236 	.db #0x26	; 38
      00043F 26                    1237 	.db #0x26	; 38
      000440 26                    1238 	.db #0x26	; 38
      000441 26                    1239 	.db #0x26	; 38
      000442 26                    1240 	.db #0x26	; 38
      000443 26                    1241 	.db #0x26	; 38
      000444 26                    1242 	.db #0x26	; 38
      000445 26                    1243 	.db #0x26	; 38
      000446 26                    1244 	.db #0x26	; 38
      000447 26                    1245 	.db #0x26	; 38
      000448 26                    1246 	.db #0x26	; 38
      000449 26                    1247 	.db #0x26	; 38
      00044A 26                    1248 	.db #0x26	; 38
      00044B 26                    1249 	.db #0x26	; 38
      00044C 26                    1250 	.db #0x26	; 38
      00044D 26                    1251 	.db #0x26	; 38
      00044E 26                    1252 	.db #0x26	; 38
      00044F 26                    1253 	.db #0x26	; 38
      000450 26                    1254 	.db #0x26	; 38
      000451 26                    1255 	.db #0x26	; 38
      000452 26                    1256 	.db #0x26	; 38
      000453 26                    1257 	.db #0x26	; 38
      000454 26                    1258 	.db #0x26	; 38
      000455 26                    1259 	.db #0x26	; 38
      000456 26                    1260 	.db #0x26	; 38
      000457 26                    1261 	.db #0x26	; 38
      000458 26                    1262 	.db #0x26	; 38
      000459 26                    1263 	.db #0x26	; 38
      00045A 26                    1264 	.db #0x26	; 38
      00045B 26                    1265 	.db #0x26	; 38
      00045C 26                    1266 	.db #0x26	; 38
      00045D 26                    1267 	.db #0x26	; 38
      00045E 26                    1268 	.db #0x26	; 38
      00045F 26                    1269 	.db #0x26	; 38
      000460 26                    1270 	.db #0x26	; 38
      000461 26                    1271 	.db #0x26	; 38
      000462 26                    1272 	.db #0x26	; 38
      000463 26                    1273 	.db #0x26	; 38
      000464 26                    1274 	.db #0x26	; 38
      000465 26                    1275 	.db #0x26	; 38
      000466 26                    1276 	.db #0x26	; 38
      000467 26                    1277 	.db #0x26	; 38
      000468 26                    1278 	.db #0x26	; 38
      000469 26                    1279 	.db #0x26	; 38
      00046A 26                    1280 	.db #0x26	; 38
      00046B 26                    1281 	.db #0x26	; 38
      00046C 26                    1282 	.db #0x26	; 38
      00046D 26                    1283 	.db #0x26	; 38
      00046E 26                    1284 	.db #0x26	; 38
      00046F 26                    1285 	.db #0x26	; 38
      000470 26                    1286 	.db #0x26	; 38
      000471 26                    1287 	.db #0x26	; 38
      000472 27                    1288 	.db #0x27	; 39
      000473 28                    1289 	.db #0x28	; 40
      000474 26                    1290 	.db #0x26	; 38
      000475 26                    1291 	.db #0x26	; 38
      000476 26                    1292 	.db #0x26	; 38
      000477 26                    1293 	.db #0x26	; 38
      000478 26                    1294 	.db #0x26	; 38
      000479 26                    1295 	.db #0x26	; 38
      00047A 26                    1296 	.db #0x26	; 38
      00047B 26                    1297 	.db #0x26	; 38
      00047C 26                    1298 	.db #0x26	; 38
      00047D 26                    1299 	.db #0x26	; 38
      00047E 26                    1300 	.db #0x26	; 38
      00047F 26                    1301 	.db #0x26	; 38
      000480 26                    1302 	.db #0x26	; 38
      000481 26                    1303 	.db #0x26	; 38
      000482 26                    1304 	.db #0x26	; 38
      000483 26                    1305 	.db #0x26	; 38
      000484 26                    1306 	.db #0x26	; 38
      000485 26                    1307 	.db #0x26	; 38
      000486 26                    1308 	.db #0x26	; 38
      000487                       1309 _backgroundtiles:
      000487 00                    1310 	.db #0x00	; 0
      000488 00                    1311 	.db #0x00	; 0
      000489 00                    1312 	.db #0x00	; 0
      00048A 00                    1313 	.db #0x00	; 0
      00048B 00                    1314 	.db #0x00	; 0
      00048C 00                    1315 	.db #0x00	; 0
      00048D 18                    1316 	.db #0x18	; 24
      00048E 18                    1317 	.db #0x18	; 24
      00048F 18                    1318 	.db #0x18	; 24
      000490 18                    1319 	.db #0x18	; 24
      000491 00                    1320 	.db #0x00	; 0
      000492 00                    1321 	.db #0x00	; 0
      000493 00                    1322 	.db #0x00	; 0
      000494 00                    1323 	.db #0x00	; 0
      000495 00                    1324 	.db #0x00	; 0
      000496 00                    1325 	.db #0x00	; 0
      000497 00                    1326 	.db #0x00	; 0
      000498 00                    1327 	.db #0x00	; 0
      000499 00                    1328 	.db #0x00	; 0
      00049A 00                    1329 	.db #0x00	; 0
      00049B 00                    1330 	.db #0x00	; 0
      00049C 00                    1331 	.db #0x00	; 0
      00049D 00                    1332 	.db #0x00	; 0
      00049E 00                    1333 	.db #0x00	; 0
      00049F 00                    1334 	.db #0x00	; 0
      0004A0 00                    1335 	.db #0x00	; 0
      0004A1 00                    1336 	.db #0x00	; 0
      0004A2 00                    1337 	.db #0x00	; 0
      0004A3 00                    1338 	.db #0x00	; 0
      0004A4 00                    1339 	.db #0x00	; 0
      0004A5 00                    1340 	.db #0x00	; 0
      0004A6 00                    1341 	.db #0x00	; 0
      0004A7 1F                    1342 	.db #0x1f	; 31
      0004A8 1F                    1343 	.db #0x1f	; 31
      0004A9 3F                    1344 	.db #0x3f	; 63
      0004AA 3F                    1345 	.db #0x3f	; 63
      0004AB 7F                    1346 	.db #0x7f	; 127
      0004AC 7F                    1347 	.db #0x7f	; 127
      0004AD FF                    1348 	.db #0xff	; 255
      0004AE FF                    1349 	.db #0xff	; 255
      0004AF FF                    1350 	.db #0xff	; 255
      0004B0 FF                    1351 	.db #0xff	; 255
      0004B1 FF                    1352 	.db #0xff	; 255
      0004B2 FF                    1353 	.db #0xff	; 255
      0004B3 FF                    1354 	.db #0xff	; 255
      0004B4 FF                    1355 	.db #0xff	; 255
      0004B5 FF                    1356 	.db #0xff	; 255
      0004B6 FF                    1357 	.db #0xff	; 255
      0004B7 F8                    1358 	.db #0xf8	; 248
      0004B8 F8                    1359 	.db #0xf8	; 248
      0004B9 FC                    1360 	.db #0xfc	; 252
      0004BA FC                    1361 	.db #0xfc	; 252
      0004BB FE                    1362 	.db #0xfe	; 254
      0004BC FE                    1363 	.db #0xfe	; 254
      0004BD FF                    1364 	.db #0xff	; 255
      0004BE FF                    1365 	.db #0xff	; 255
      0004BF FF                    1366 	.db #0xff	; 255
      0004C0 FF                    1367 	.db #0xff	; 255
      0004C1 FF                    1368 	.db #0xff	; 255
      0004C2 FF                    1369 	.db #0xff	; 255
      0004C3 FF                    1370 	.db #0xff	; 255
      0004C4 FF                    1371 	.db #0xff	; 255
      0004C5 FF                    1372 	.db #0xff	; 255
      0004C6 FF                    1373 	.db #0xff	; 255
      0004C7 FF                    1374 	.db #0xff	; 255
      0004C8 FF                    1375 	.db #0xff	; 255
      0004C9 FF                    1376 	.db #0xff	; 255
      0004CA FF                    1377 	.db #0xff	; 255
      0004CB FF                    1378 	.db #0xff	; 255
      0004CC FF                    1379 	.db #0xff	; 255
      0004CD FF                    1380 	.db #0xff	; 255
      0004CE FF                    1381 	.db #0xff	; 255
      0004CF FF                    1382 	.db #0xff	; 255
      0004D0 FF                    1383 	.db #0xff	; 255
      0004D1 FE                    1384 	.db #0xfe	; 254
      0004D2 FE                    1385 	.db #0xfe	; 254
      0004D3 FC                    1386 	.db #0xfc	; 252
      0004D4 FC                    1387 	.db #0xfc	; 252
      0004D5 F8                    1388 	.db #0xf8	; 248
      0004D6 F8                    1389 	.db #0xf8	; 248
      0004D7 FF                    1390 	.db #0xff	; 255
      0004D8 FF                    1391 	.db #0xff	; 255
      0004D9 FF                    1392 	.db #0xff	; 255
      0004DA FF                    1393 	.db #0xff	; 255
      0004DB FF                    1394 	.db #0xff	; 255
      0004DC FF                    1395 	.db #0xff	; 255
      0004DD FF                    1396 	.db #0xff	; 255
      0004DE FF                    1397 	.db #0xff	; 255
      0004DF FF                    1398 	.db #0xff	; 255
      0004E0 FF                    1399 	.db #0xff	; 255
      0004E1 7F                    1400 	.db #0x7f	; 127
      0004E2 7F                    1401 	.db #0x7f	; 127
      0004E3 3F                    1402 	.db #0x3f	; 63
      0004E4 3F                    1403 	.db #0x3f	; 63
      0004E5 1F                    1404 	.db #0x1f	; 31
      0004E6 1F                    1405 	.db #0x1f	; 31
      0004E7                       1406 _healthblock:
      0004E7 FE                    1407 	.db #0xfe	; 254
      0004E8 FE                    1408 	.db #0xfe	; 254
      0004E9 FE                    1409 	.db #0xfe	; 254
      0004EA FE                    1410 	.db #0xfe	; 254
      0004EB FE                    1411 	.db #0xfe	; 254
      0004EC FE                    1412 	.db #0xfe	; 254
      0004ED FE                    1413 	.db #0xfe	; 254
      0004EE FE                    1414 	.db #0xfe	; 254
      0004EF FE                    1415 	.db #0xfe	; 254
      0004F0 FE                    1416 	.db #0xfe	; 254
      0004F1 FE                    1417 	.db #0xfe	; 254
      0004F2 FE                    1418 	.db #0xfe	; 254
      0004F3 FE                    1419 	.db #0xfe	; 254
      0004F4 FE                    1420 	.db #0xfe	; 254
      0004F5 00                    1421 	.db #0x00	; 0
      0004F6 00                    1422 	.db #0x00	; 0
      0004F7                       1423 _enemy1:
      0004F7 3C                    1424 	.db #0x3c	; 60
      0004F8 3C                    1425 	.db #0x3c	; 60
      0004F9 7E                    1426 	.db #0x7e	; 126
      0004FA 7E                    1427 	.db #0x7e	; 126
      0004FB FF                    1428 	.db #0xff	; 255
      0004FC FF                    1429 	.db #0xff	; 255
      0004FD FF                    1430 	.db #0xff	; 255
      0004FE FF                    1431 	.db #0xff	; 255
      0004FF FF                    1432 	.db #0xff	; 255
      000500 FF                    1433 	.db #0xff	; 255
      000501 FF                    1434 	.db #0xff	; 255
      000502 FF                    1435 	.db #0xff	; 255
      000503 7E                    1436 	.db #0x7e	; 126
      000504 7E                    1437 	.db #0x7e	; 126
      000505 3C                    1438 	.db #0x3c	; 60
      000506 3C                    1439 	.db #0x3c	; 60
      000507                       1440 _BLANK:
      000507 26                    1441 	.db #0x26	; 38
      000508                       1442 _EMPTYSPRITE:
      000508 50                    1443 	.db #0x50	; 80	'P'
      000509                       1444 _ENEMYCOUNT:
      000509 05                    1445 	.db #0x05	; 5
      00050A                       1446 _xSpawnPositions:
      00050A 00                    1447 	.db #0x00	; 0
      00050B 60                    1448 	.db #0x60	; 96
      00050C B0                    1449 	.db #0xb0	; 176
      00050D 00                    1450 	.db #0x00	; 0
      00050E B0                    1451 	.db #0xb0	; 176
      00050F 00                    1452 	.db #0x00	; 0
      000510 60                    1453 	.db #0x60	; 96
      000511 B0                    1454 	.db #0xb0	; 176
      000512                       1455 _ySpawnPositions:
      000512 00                    1456 	.db #0x00	; 0
      000513 00                    1457 	.db #0x00	; 0
      000514 00                    1458 	.db #0x00	; 0
      000515 5C                    1459 	.db #0x5c	; 92
      000516 5C                    1460 	.db #0x5c	; 92
      000517 A0                    1461 	.db #0xa0	; 160
      000518 A0                    1462 	.db #0xa0	; 160
      000519 A0                    1463 	.db #0xa0	; 160
                                   1464 ;main.c:69: void setHealthBar(uint8_t row, uint8_t hp) {
                                   1465 ;	---------------------------------
                                   1466 ; Function setHealthBar
                                   1467 ; ---------------------------------
      00051A                       1468 _setHealthBar::
      00051A E8 FB                 1469 	add	sp, #-5
                                   1470 ;main.c:70: if (hp >= 80) {
      00051C F8 08                 1471 	ldhl	sp,	#8
      00051E 7E                    1472 	ld	a, (hl)
      00051F D6 50                 1473 	sub	a, #0x50
      000521 38 31                 1474 	jr	C, 00102$
                                   1475 ;main.c:71: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      000523 F8 00                 1476 	ldhl	sp,	#0
      000525 4D                    1477 	ld	c, l
      000526 44                    1478 	ld	b, h
      000527 36 50                 1479 	ld	(hl), #0x50
      000529 69                    1480 	ld	l, c
                                   1481 ;	spillPairReg hl
                                   1482 ;	spillPairReg hl
      00052A 60                    1483 	ld	h, b
                                   1484 ;	spillPairReg hl
                                   1485 ;	spillPairReg hl
      00052B 23                    1486 	inc	hl
      00052C 36 50                 1487 	ld	(hl), #0x50
      00052E 69                    1488 	ld	l, c
                                   1489 ;	spillPairReg hl
                                   1490 ;	spillPairReg hl
      00052F 60                    1491 	ld	h, b
                                   1492 ;	spillPairReg hl
                                   1493 ;	spillPairReg hl
      000530 23                    1494 	inc	hl
      000531 23                    1495 	inc	hl
      000532 36 50                 1496 	ld	(hl), #0x50
      000534 69                    1497 	ld	l, c
                                   1498 ;	spillPairReg hl
                                   1499 ;	spillPairReg hl
      000535 60                    1500 	ld	h, b
                                   1501 ;	spillPairReg hl
                                   1502 ;	spillPairReg hl
      000536 23                    1503 	inc	hl
      000537 23                    1504 	inc	hl
      000538 23                    1505 	inc	hl
      000539 36 50                 1506 	ld	(hl), #0x50
      00053B 21 04 00              1507 	ld	hl, #0x0004
      00053E 09                    1508 	add	hl, bc
      00053F 36 50                 1509 	ld	(hl), #0x50
                                   1510 ;main.c:72: set_win_tiles(5,row,5,1,blockmap);
      000541 C5                    1511 	push	bc
      000542 21 05 01              1512 	ld	hl, #0x105
      000545 E5                    1513 	push	hl
      000546 F8 0B                 1514 	ldhl	sp,	#11
      000548 66                    1515 	ld	h, (hl)
      000549 2E 05                 1516 	ld	l, #0x05
      00054B E5                    1517 	push	hl
      00054C CDr00r00              1518 	call	_set_win_tiles
      00054F E8 06                 1519 	add	sp, #6
                                   1520 ;main.c:73: return;
      000551 C3r28r06              1521 	jp	00109$
      000554                       1522 00102$:
                                   1523 ;main.c:75: if (hp >= 60) {
      000554 F8 08                 1524 	ldhl	sp,	#8
      000556 7E                    1525 	ld	a, (hl)
      000557 D6 3C                 1526 	sub	a, #0x3c
      000559 38 31                 1527 	jr	C, 00104$
                                   1528 ;main.c:76: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      00055B F8 00                 1529 	ldhl	sp,	#0
      00055D 4D                    1530 	ld	c, l
      00055E 44                    1531 	ld	b, h
      00055F 36 50                 1532 	ld	(hl), #0x50
      000561 69                    1533 	ld	l, c
                                   1534 ;	spillPairReg hl
                                   1535 ;	spillPairReg hl
      000562 60                    1536 	ld	h, b
                                   1537 ;	spillPairReg hl
                                   1538 ;	spillPairReg hl
      000563 23                    1539 	inc	hl
      000564 36 50                 1540 	ld	(hl), #0x50
      000566 69                    1541 	ld	l, c
                                   1542 ;	spillPairReg hl
                                   1543 ;	spillPairReg hl
      000567 60                    1544 	ld	h, b
                                   1545 ;	spillPairReg hl
                                   1546 ;	spillPairReg hl
      000568 23                    1547 	inc	hl
      000569 23                    1548 	inc	hl
      00056A 36 50                 1549 	ld	(hl), #0x50
      00056C 69                    1550 	ld	l, c
                                   1551 ;	spillPairReg hl
                                   1552 ;	spillPairReg hl
      00056D 60                    1553 	ld	h, b
                                   1554 ;	spillPairReg hl
                                   1555 ;	spillPairReg hl
      00056E 23                    1556 	inc	hl
      00056F 23                    1557 	inc	hl
      000570 23                    1558 	inc	hl
      000571 36 50                 1559 	ld	(hl), #0x50
      000573 21 04 00              1560 	ld	hl, #0x0004
      000576 09                    1561 	add	hl, bc
      000577 36 00                 1562 	ld	(hl), #0x00
                                   1563 ;main.c:77: set_win_tiles(5,row,5,1,blockmap);
      000579 C5                    1564 	push	bc
      00057A 21 05 01              1565 	ld	hl, #0x105
      00057D E5                    1566 	push	hl
      00057E F8 0B                 1567 	ldhl	sp,	#11
      000580 66                    1568 	ld	h, (hl)
      000581 2E 05                 1569 	ld	l, #0x05
      000583 E5                    1570 	push	hl
      000584 CDr00r00              1571 	call	_set_win_tiles
      000587 E8 06                 1572 	add	sp, #6
                                   1573 ;main.c:78: return;
      000589 C3r28r06              1574 	jp	00109$
      00058C                       1575 00104$:
                                   1576 ;main.c:80: if (hp >= 40) {
      00058C F8 08                 1577 	ldhl	sp,	#8
      00058E 7E                    1578 	ld	a, (hl)
      00058F D6 28                 1579 	sub	a, #0x28
      000591 38 30                 1580 	jr	C, 00106$
                                   1581 ;main.c:81: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000593 F8 00                 1582 	ldhl	sp,	#0
      000595 4D                    1583 	ld	c, l
      000596 44                    1584 	ld	b, h
      000597 36 50                 1585 	ld	(hl), #0x50
      000599 69                    1586 	ld	l, c
                                   1587 ;	spillPairReg hl
                                   1588 ;	spillPairReg hl
      00059A 60                    1589 	ld	h, b
                                   1590 ;	spillPairReg hl
                                   1591 ;	spillPairReg hl
      00059B 23                    1592 	inc	hl
      00059C 36 50                 1593 	ld	(hl), #0x50
      00059E 69                    1594 	ld	l, c
                                   1595 ;	spillPairReg hl
                                   1596 ;	spillPairReg hl
      00059F 60                    1597 	ld	h, b
                                   1598 ;	spillPairReg hl
                                   1599 ;	spillPairReg hl
      0005A0 23                    1600 	inc	hl
      0005A1 23                    1601 	inc	hl
      0005A2 36 50                 1602 	ld	(hl), #0x50
      0005A4 59                    1603 	ld	e, c
      0005A5 50                    1604 	ld	d, b
      0005A6 13                    1605 	inc	de
      0005A7 13                    1606 	inc	de
      0005A8 13                    1607 	inc	de
      0005A9 AF                    1608 	xor	a, a
      0005AA 12                    1609 	ld	(de), a
      0005AB 21 04 00              1610 	ld	hl, #0x0004
      0005AE 09                    1611 	add	hl, bc
      0005AF 36 00                 1612 	ld	(hl), #0x00
                                   1613 ;main.c:82: set_win_tiles(5,row,5,1,blockmap);
      0005B1 C5                    1614 	push	bc
      0005B2 21 05 01              1615 	ld	hl, #0x105
      0005B5 E5                    1616 	push	hl
      0005B6 F8 0B                 1617 	ldhl	sp,	#11
      0005B8 66                    1618 	ld	h, (hl)
      0005B9 2E 05                 1619 	ld	l, #0x05
      0005BB E5                    1620 	push	hl
      0005BC CDr00r00              1621 	call	_set_win_tiles
      0005BF E8 06                 1622 	add	sp, #6
                                   1623 ;main.c:83: return;
      0005C1 18 65                 1624 	jr	00109$
      0005C3                       1625 00106$:
                                   1626 ;main.c:85: if (hp >= 20) {
      0005C3 F8 08                 1627 	ldhl	sp,	#8
      0005C5 7E                    1628 	ld	a, (hl)
      0005C6 D6 14                 1629 	sub	a, #0x14
      0005C8 38 30                 1630 	jr	C, 00108$
                                   1631 ;main.c:86: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      0005CA F8 00                 1632 	ldhl	sp,	#0
      0005CC 4D                    1633 	ld	c, l
      0005CD 44                    1634 	ld	b, h
      0005CE 36 50                 1635 	ld	(hl), #0x50
      0005D0 69                    1636 	ld	l, c
                                   1637 ;	spillPairReg hl
                                   1638 ;	spillPairReg hl
      0005D1 60                    1639 	ld	h, b
                                   1640 ;	spillPairReg hl
                                   1641 ;	spillPairReg hl
      0005D2 23                    1642 	inc	hl
      0005D3 36 50                 1643 	ld	(hl), #0x50
      0005D5 59                    1644 	ld	e, c
      0005D6 50                    1645 	ld	d, b
      0005D7 13                    1646 	inc	de
      0005D8 13                    1647 	inc	de
      0005D9 AF                    1648 	xor	a, a
      0005DA 12                    1649 	ld	(de), a
      0005DB 59                    1650 	ld	e, c
      0005DC 50                    1651 	ld	d, b
      0005DD 13                    1652 	inc	de
      0005DE 13                    1653 	inc	de
      0005DF 13                    1654 	inc	de
      0005E0 AF                    1655 	xor	a, a
      0005E1 12                    1656 	ld	(de), a
      0005E2 21 04 00              1657 	ld	hl, #0x0004
      0005E5 09                    1658 	add	hl, bc
      0005E6 36 00                 1659 	ld	(hl), #0x00
                                   1660 ;main.c:87: set_win_tiles(5,row,5,1,blockmap);
      0005E8 C5                    1661 	push	bc
      0005E9 21 05 01              1662 	ld	hl, #0x105
      0005EC E5                    1663 	push	hl
      0005ED F8 0B                 1664 	ldhl	sp,	#11
      0005EF 66                    1665 	ld	h, (hl)
      0005F0 2E 05                 1666 	ld	l, #0x05
      0005F2 E5                    1667 	push	hl
      0005F3 CDr00r00              1668 	call	_set_win_tiles
      0005F6 E8 06                 1669 	add	sp, #6
                                   1670 ;main.c:88: return;
      0005F8 18 2E                 1671 	jr	00109$
      0005FA                       1672 00108$:
                                   1673 ;main.c:90: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      0005FA F8 00                 1674 	ldhl	sp,	#0
      0005FC 4D                    1675 	ld	c, l
      0005FD 44                    1676 	ld	b, h
      0005FE 36 50                 1677 	ld	(hl), #0x50
      000600 59                    1678 	ld	e, c
      000601 50                    1679 	ld	d, b
      000602 13                    1680 	inc	de
      000603 AF                    1681 	xor	a, a
      000604 12                    1682 	ld	(de), a
      000605 59                    1683 	ld	e, c
      000606 50                    1684 	ld	d, b
      000607 13                    1685 	inc	de
      000608 13                    1686 	inc	de
      000609 AF                    1687 	xor	a, a
      00060A 12                    1688 	ld	(de), a
      00060B 59                    1689 	ld	e, c
      00060C 50                    1690 	ld	d, b
      00060D 13                    1691 	inc	de
      00060E 13                    1692 	inc	de
      00060F 13                    1693 	inc	de
      000610 AF                    1694 	xor	a, a
      000611 12                    1695 	ld	(de), a
      000612 21 04 00              1696 	ld	hl, #0x0004
      000615 09                    1697 	add	hl, bc
      000616 36 00                 1698 	ld	(hl), #0x00
                                   1699 ;main.c:91: set_win_tiles(5,row,5,1,blockmap);
      000618 C5                    1700 	push	bc
      000619 21 05 01              1701 	ld	hl, #0x105
      00061C E5                    1702 	push	hl
      00061D F8 0B                 1703 	ldhl	sp,	#11
      00061F 66                    1704 	ld	h, (hl)
      000620 2E 05                 1705 	ld	l, #0x05
      000622 E5                    1706 	push	hl
      000623 CDr00r00              1707 	call	_set_win_tiles
      000626 E8 06                 1708 	add	sp, #6
                                   1709 ;main.c:92: return;
      000628                       1710 00109$:
                                   1711 ;main.c:94: }
      000628 E8 05                 1712 	add	sp, #5
      00062A C9                    1713 	ret
                                   1714 ;main.c:96: void updateDirection() {
                                   1715 ;	---------------------------------
                                   1716 ; Function updateDirection
                                   1717 ; ---------------------------------
      00062B                       1718 _updateDirection::
      00062B E8 FC                 1719 	add	sp, #-4
                                   1720 ;main.c:100: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      00062D 21r5Ar00              1721 	ld	hl, #_joydata
      000630 5E                    1722 	ld	e, (hl)
      000631 7B                    1723 	ld	a, e
      000632 E6 01                 1724 	and	a, #0x01
      000634 F8 00                 1725 	ldhl	sp,	#0
      000636 22                    1726 	ld	(hl+), a
      000637 AF                    1727 	xor	a, a
      000638 22                    1728 	ld	(hl+), a
      000639 7B                    1729 	ld	a, e
      00063A E6 04                 1730 	and	a, #0x04
      00063C 22                    1731 	ld	(hl+), a
      00063D AF                    1732 	xor	a, a
      00063E 32                    1733 	ld	(hl-), a
      00063F 2B                    1734 	dec	hl
      000640 7B                    1735 	ld	a, e
      000641 E6 08                 1736 	and	a, #0x08
      000643 4F                    1737 	ld	c, a
      000644 06 00                 1738 	ld	b, #0x00
      000646 3A                    1739 	ld	a, (hl-)
      000647 B6                    1740 	or	a, (hl)
      000648 28 14                 1741 	jr	Z, 00102$
      00064A F8 03                 1742 	ldhl	sp,	#3
      00064C 3A                    1743 	ld	a, (hl-)
      00064D B6                    1744 	or	a, (hl)
      00064E 20 0E                 1745 	jr	NZ, 00102$
      000650 78                    1746 	ld	a, b
      000651 B1                    1747 	or	a, c
      000652 20 0A                 1748 	jr	NZ, 00102$
                                   1749 ;main.c:101: xDir = 1;
      000654 21r1Br00              1750 	ld	hl, #_xDir
      000657 36 01                 1751 	ld	(hl), #0x01
                                   1752 ;main.c:102: yDir = 0;
      000659 21r1Cr00              1753 	ld	hl, #_yDir
      00065C 36 00                 1754 	ld	(hl), #0x00
      00065E                       1755 00102$:
                                   1756 ;main.c:104: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      00065E 7B                    1757 	ld	a, e
      00065F E6 02                 1758 	and	a, #0x02
      000661 5F                    1759 	ld	e, a
      000662 16 00                 1760 	ld	d, #0x00
      000664 7A                    1761 	ld	a, d
      000665 B3                    1762 	or	a, e
      000666 28 14                 1763 	jr	Z, 00106$
      000668 F8 03                 1764 	ldhl	sp,	#3
      00066A 3A                    1765 	ld	a, (hl-)
      00066B B6                    1766 	or	a, (hl)
      00066C 20 0E                 1767 	jr	NZ, 00106$
      00066E 78                    1768 	ld	a, b
      00066F B1                    1769 	or	a, c
      000670 20 0A                 1770 	jr	NZ, 00106$
                                   1771 ;main.c:105: xDir = -1;
      000672 21r1Br00              1772 	ld	hl, #_xDir
      000675 36 FF                 1773 	ld	(hl), #0xff
                                   1774 ;main.c:106: yDir = 0;
      000677 21r1Cr00              1775 	ld	hl, #_yDir
      00067A 36 00                 1776 	ld	(hl), #0x00
      00067C                       1777 00106$:
                                   1778 ;main.c:108: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      00067C F8 03                 1779 	ldhl	sp,	#3
      00067E 3A                    1780 	ld	a, (hl-)
      00067F B6                    1781 	or	a, (hl)
      000680 28 13                 1782 	jr	Z, 00110$
      000682 7A                    1783 	ld	a, d
      000683 B3                    1784 	or	a, e
      000684 20 0F                 1785 	jr	NZ, 00110$
      000686 2B                    1786 	dec	hl
      000687 3A                    1787 	ld	a, (hl-)
      000688 B6                    1788 	or	a, (hl)
      000689 20 0A                 1789 	jr	NZ, 00110$
                                   1790 ;main.c:109: xDir = 0;
      00068B 21r1Br00              1791 	ld	hl, #_xDir
      00068E 36 00                 1792 	ld	(hl), #0x00
                                   1793 ;main.c:110: yDir = -1;
      000690 21r1Cr00              1794 	ld	hl, #_yDir
      000693 36 FF                 1795 	ld	(hl), #0xff
      000695                       1796 00110$:
                                   1797 ;main.c:112: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000695 78                    1798 	ld	a, b
      000696 B1                    1799 	or	a, c
      000697 28 14                 1800 	jr	Z, 00114$
      000699 7A                    1801 	ld	a, d
      00069A B3                    1802 	or	a, e
      00069B 20 10                 1803 	jr	NZ, 00114$
      00069D F8 01                 1804 	ldhl	sp,	#1
      00069F 3A                    1805 	ld	a, (hl-)
      0006A0 B6                    1806 	or	a, (hl)
      0006A1 20 0A                 1807 	jr	NZ, 00114$
                                   1808 ;main.c:113: xDir = 0;
      0006A3 21r1Br00              1809 	ld	hl, #_xDir
      0006A6 36 00                 1810 	ld	(hl), #0x00
                                   1811 ;main.c:114: yDir = 1;
      0006A8 21r1Cr00              1812 	ld	hl, #_yDir
      0006AB 36 01                 1813 	ld	(hl), #0x01
      0006AD                       1814 00114$:
                                   1815 ;main.c:118: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      0006AD F8 03                 1816 	ldhl	sp,	#3
      0006AF 3A                    1817 	ld	a, (hl-)
      0006B0 B6                    1818 	or	a, (hl)
      0006B1 28 0F                 1819 	jr	Z, 00118$
      0006B3 2B                    1820 	dec	hl
      0006B4 3A                    1821 	ld	a, (hl-)
      0006B5 B6                    1822 	or	a, (hl)
      0006B6 28 0A                 1823 	jr	Z, 00118$
                                   1824 ;main.c:119: xDir = 1;
      0006B8 21r1Br00              1825 	ld	hl, #_xDir
      0006BB 36 01                 1826 	ld	(hl), #0x01
                                   1827 ;main.c:120: yDir = -1;
      0006BD 21r1Cr00              1828 	ld	hl, #_yDir
      0006C0 36 FF                 1829 	ld	(hl), #0xff
      0006C2                       1830 00118$:
                                   1831 ;main.c:122: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      0006C2 F8 03                 1832 	ldhl	sp,	#3
      0006C4 3A                    1833 	ld	a, (hl-)
      0006C5 B6                    1834 	or	a, (hl)
      0006C6 28 0E                 1835 	jr	Z, 00121$
      0006C8 7A                    1836 	ld	a, d
      0006C9 B3                    1837 	or	a, e
      0006CA 28 0A                 1838 	jr	Z, 00121$
                                   1839 ;main.c:123: xDir = -1;
      0006CC 21r1Br00              1840 	ld	hl, #_xDir
      0006CF 36 FF                 1841 	ld	(hl), #0xff
                                   1842 ;main.c:124: yDir = -1;
      0006D1 21r1Cr00              1843 	ld	hl, #_yDir
      0006D4 36 FF                 1844 	ld	(hl), #0xff
      0006D6                       1845 00121$:
                                   1846 ;main.c:126: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      0006D6 78                    1847 	ld	a, b
      0006D7 B1                    1848 	or	a, c
      0006D8 28 10                 1849 	jr	Z, 00124$
      0006DA F8 01                 1850 	ldhl	sp,	#1
      0006DC 3A                    1851 	ld	a, (hl-)
      0006DD B6                    1852 	or	a, (hl)
      0006DE 28 0A                 1853 	jr	Z, 00124$
                                   1854 ;main.c:127: xDir = 1;
      0006E0 21r1Br00              1855 	ld	hl, #_xDir
      0006E3 36 01                 1856 	ld	(hl), #0x01
                                   1857 ;main.c:128: yDir = 1;
      0006E5 21r1Cr00              1858 	ld	hl, #_yDir
      0006E8 36 01                 1859 	ld	(hl), #0x01
      0006EA                       1860 00124$:
                                   1861 ;main.c:130: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      0006EA 78                    1862 	ld	a, b
      0006EB B1                    1863 	or	a, c
      0006EC 28 0E                 1864 	jr	Z, 00127$
      0006EE 7A                    1865 	ld	a, d
      0006EF B3                    1866 	or	a, e
      0006F0 28 0A                 1867 	jr	Z, 00127$
                                   1868 ;main.c:131: xDir = -1;
      0006F2 21r1Br00              1869 	ld	hl, #_xDir
      0006F5 36 FF                 1870 	ld	(hl), #0xff
                                   1871 ;main.c:132: yDir = 1;
      0006F7 21r1Cr00              1872 	ld	hl, #_yDir
      0006FA 36 01                 1873 	ld	(hl), #0x01
      0006FC                       1874 00127$:
                                   1875 ;main.c:137: if (xDir == 0 && yDir == 0) {
      0006FC FAr1Br00              1876 	ld	a, (#_xDir)
      0006FF B7                    1877 	or	a, a
      000700 20 07                 1878 	jr	NZ, 00130$
      000702 FAr1Cr00              1879 	ld	a, (#_yDir)
      000705 B7                    1880 	or	a, a
                                   1881 ;main.c:138: return;
      000706 CArB7r07              1882 	jp	Z,00157$
      000709                       1883 00130$:
                                   1884 ;main.c:141: uint8_t direction = 0;
      000709 0E 00                 1885 	ld	c, #0x00
                                   1886 ;main.c:143: if (xDir == 0 && yDir < 0) {
      00070B FAr1Cr00              1887 	ld	a, (#_yDir)
      00070E 07                    1888 	rlca
      00070F E6 01                 1889 	and	a,#0x01
      000711 F8 02                 1890 	ldhl	sp,	#2
      000713 77                    1891 	ld	(hl), a
      000714 FAr1Br00              1892 	ld	a, (#_xDir)
      000717 B7                    1893 	or	a, a
      000718 20 08                 1894 	jr	NZ, 00133$
      00071A F8 02                 1895 	ldhl	sp,	#2
      00071C 7E                    1896 	ld	a, (hl)
      00071D B7                    1897 	or	a, a
      00071E 28 02                 1898 	jr	Z, 00133$
                                   1899 ;main.c:144: direction = 0;
      000720 0E 00                 1900 	ld	c, #0x00
      000722                       1901 00133$:
                                   1902 ;main.c:146: if (xDir > 0 && yDir < 0) {
      000722 21r1Br00              1903 	ld	hl, #_xDir
      000725 5E                    1904 	ld	e, (hl)
      000726 AF                    1905 	xor	a, a
      000727 57                    1906 	ld	d, a
      000728 96                    1907 	sub	a, (hl)
      000729 CB 7B                 1908 	bit	7, e
      00072B 28 07                 1909 	jr	Z, 00349$
      00072D CB 7A                 1910 	bit	7, d
      00072F 20 08                 1911 	jr	NZ, 00350$
      000731 BF                    1912 	cp	a, a
      000732 18 05                 1913 	jr	00350$
      000734                       1914 00349$:
      000734 CB 7A                 1915 	bit	7, d
      000736 28 01                 1916 	jr	Z, 00350$
      000738 37                    1917 	scf
      000739                       1918 00350$:
      000739 3E 00                 1919 	ld	a, #0x00
      00073B 17                    1920 	rla
      00073C 47                    1921 	ld	b, a
      00073D B7                    1922 	or	a, a
      00073E 28 08                 1923 	jr	Z, 00136$
      000740 F8 02                 1924 	ldhl	sp,	#2
      000742 7E                    1925 	ld	a, (hl)
      000743 B7                    1926 	or	a, a
      000744 28 02                 1927 	jr	Z, 00136$
                                   1928 ;main.c:147: direction = 1;
      000746 0E 01                 1929 	ld	c, #0x01
      000748                       1930 00136$:
                                   1931 ;main.c:149: if (xDir > 0 && yDir == 0) {
      000748 78                    1932 	ld	a, b
      000749 B7                    1933 	or	a, a
      00074A 28 08                 1934 	jr	Z, 00139$
      00074C FAr1Cr00              1935 	ld	a, (#_yDir)
      00074F B7                    1936 	or	a, a
      000750 20 02                 1937 	jr	NZ, 00139$
                                   1938 ;main.c:150: direction = 2;
      000752 0E 02                 1939 	ld	c, #0x02
      000754                       1940 00139$:
                                   1941 ;main.c:152: if (xDir > 0 && yDir > 0) {
      000754 21r1Cr00              1942 	ld	hl, #_yDir
      000757 5E                    1943 	ld	e, (hl)
      000758 AF                    1944 	xor	a, a
      000759 57                    1945 	ld	d, a
      00075A 96                    1946 	sub	a, (hl)
      00075B CB 7B                 1947 	bit	7, e
      00075D 28 07                 1948 	jr	Z, 00351$
      00075F CB 7A                 1949 	bit	7, d
      000761 20 08                 1950 	jr	NZ, 00352$
      000763 BF                    1951 	cp	a, a
      000764 18 05                 1952 	jr	00352$
      000766                       1953 00351$:
      000766 CB 7A                 1954 	bit	7, d
      000768 28 01                 1955 	jr	Z, 00352$
      00076A 37                    1956 	scf
      00076B                       1957 00352$:
      00076B 3E 00                 1958 	ld	a, #0x00
      00076D 17                    1959 	rla
      00076E F8 03                 1960 	ldhl	sp,	#3
      000770 77                    1961 	ld	(hl), a
      000771 78                    1962 	ld	a, b
      000772 B7                    1963 	or	a, a
      000773 28 06                 1964 	jr	Z, 00142$
      000775 7E                    1965 	ld	a, (hl)
      000776 B7                    1966 	or	a, a
      000777 28 02                 1967 	jr	Z, 00142$
                                   1968 ;main.c:153: direction = 3;
      000779 0E 03                 1969 	ld	c, #0x03
      00077B                       1970 00142$:
                                   1971 ;main.c:155: if (xDir == 0 && yDir > 0) {
      00077B FAr1Br00              1972 	ld	a, (#_xDir)
      00077E B7                    1973 	or	a, a
      00077F 20 08                 1974 	jr	NZ, 00145$
      000781 F8 03                 1975 	ldhl	sp,	#3
      000783 7E                    1976 	ld	a, (hl)
      000784 B7                    1977 	or	a, a
      000785 28 02                 1978 	jr	Z, 00145$
                                   1979 ;main.c:156: direction = 4;
      000787 0E 04                 1980 	ld	c, #0x04
      000789                       1981 00145$:
                                   1982 ;main.c:158: if (xDir < 0 && yDir > 0) {
      000789 FAr1Br00              1983 	ld	a, (#_xDir)
      00078C 07                    1984 	rlca
      00078D E6 01                 1985 	and	a,#0x01
      00078F 47                    1986 	ld	b, a
      000790 B7                    1987 	or	a, a
      000791 28 08                 1988 	jr	Z, 00148$
      000793 F8 03                 1989 	ldhl	sp,	#3
      000795 7E                    1990 	ld	a, (hl)
      000796 B7                    1991 	or	a, a
      000797 28 02                 1992 	jr	Z, 00148$
                                   1993 ;main.c:159: direction = 5;
      000799 0E 05                 1994 	ld	c, #0x05
      00079B                       1995 00148$:
                                   1996 ;main.c:161: if (xDir < 0 && yDir == 0) {
      00079B 78                    1997 	ld	a, b
      00079C B7                    1998 	or	a, a
      00079D 28 08                 1999 	jr	Z, 00151$
      00079F FAr1Cr00              2000 	ld	a, (#_yDir)
      0007A2 B7                    2001 	or	a, a
      0007A3 20 02                 2002 	jr	NZ, 00151$
                                   2003 ;main.c:162: direction = 6;
      0007A5 0E 06                 2004 	ld	c, #0x06
      0007A7                       2005 00151$:
                                   2006 ;main.c:164: if (xDir < 0 && yDir < 0) {
      0007A7 78                    2007 	ld	a, b
      0007A8 B7                    2008 	or	a, a
      0007A9 28 08                 2009 	jr	Z, 00154$
      0007AB F8 02                 2010 	ldhl	sp,	#2
      0007AD 7E                    2011 	ld	a, (hl)
      0007AE B7                    2012 	or	a, a
      0007AF 28 02                 2013 	jr	Z, 00154$
                                   2014 ;main.c:165: direction = 7;
      0007B1 0E 07                 2015 	ld	c, #0x07
      0007B3                       2016 00154$:
                                   2017 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0007B3 21r02r00              2018 	ld	hl, #(_shadow_OAM + 2)
      0007B6 71                    2019 	ld	(hl), c
                                   2020 ;main.c:168: set_sprite_tile(0, direction);
      0007B7                       2021 00157$:
                                   2022 ;main.c:169: }
      0007B7 E8 04                 2023 	add	sp, #4
      0007B9 C9                    2024 	ret
                                   2025 ;main.c:172: int8_t clamp( int8_t value, int8_t min, int8_t max )
                                   2026 ;	---------------------------------
                                   2027 ; Function clamp
                                   2028 ; ---------------------------------
      0007BA                       2029 _clamp::
                                   2030 ;main.c:174: return (value < min) ? min : (value > max) ? max : value;
      0007BA F8 03                 2031 	ldhl	sp,	#3
      0007BC 3A                    2032 	ld	a, (hl-)
      0007BD 5F                    2033 	ld	e, a
      0007BE 56                    2034 	ld	d, (hl)
      0007BF 2A                    2035 	ld	a, (hl+)
      0007C0 96                    2036 	sub	a, (hl)
      0007C1 CB 7B                 2037 	bit	7, e
      0007C3 28 07                 2038 	jr	Z, 00117$
      0007C5 CB 7A                 2039 	bit	7, d
      0007C7 20 08                 2040 	jr	NZ, 00118$
      0007C9 BF                    2041 	cp	a, a
      0007CA 18 05                 2042 	jr	00118$
      0007CC                       2043 00117$:
      0007CC CB 7A                 2044 	bit	7, d
      0007CE 28 01                 2045 	jr	Z, 00118$
      0007D0 37                    2046 	scf
      0007D1                       2047 00118$:
      0007D1 30 04                 2048 	jr	NC, 00103$
      0007D3 F8 03                 2049 	ldhl	sp,	#3
      0007D5 5E                    2050 	ld	e, (hl)
      0007D6 C9                    2051 	ret
      0007D7                       2052 00103$:
      0007D7 F8 02                 2053 	ldhl	sp,	#2
      0007D9 2A                    2054 	ld	a, (hl+)
      0007DA 23                    2055 	inc	hl
      0007DB 5F                    2056 	ld	e, a
      0007DC 56                    2057 	ld	d, (hl)
      0007DD 3A                    2058 	ld	a, (hl-)
      0007DE 2B                    2059 	dec	hl
      0007DF 96                    2060 	sub	a, (hl)
      0007E0 CB 7B                 2061 	bit	7, e
      0007E2 28 07                 2062 	jr	Z, 00119$
      0007E4 CB 7A                 2063 	bit	7, d
      0007E6 20 08                 2064 	jr	NZ, 00120$
      0007E8 BF                    2065 	cp	a, a
      0007E9 18 05                 2066 	jr	00120$
      0007EB                       2067 00119$:
      0007EB CB 7A                 2068 	bit	7, d
      0007ED 28 01                 2069 	jr	Z, 00120$
      0007EF 37                    2070 	scf
      0007F0                       2071 00120$:
      0007F0 30 04                 2072 	jr	NC, 00105$
      0007F2 F8 04                 2073 	ldhl	sp,	#4
      0007F4 5E                    2074 	ld	e, (hl)
      0007F5 C9                    2075 	ret
      0007F6                       2076 00105$:
      0007F6 F8 02                 2077 	ldhl	sp,	#2
      0007F8 5E                    2078 	ld	e, (hl)
                                   2079 ;main.c:175: }
      0007F9 C9                    2080 	ret
                                   2081 ;main.c:178: uint8_t uClamp( uint8_t value, uint8_t min, uint8_t max )
                                   2082 ;	---------------------------------
                                   2083 ; Function uClamp
                                   2084 ; ---------------------------------
      0007FA                       2085 _uClamp::
                                   2086 ;main.c:180: return (value < min) ? min : (value > max) ? max : value;
      0007FA F8 02                 2087 	ldhl	sp,	#2
      0007FC 2A                    2088 	ld	a, (hl+)
      0007FD 96                    2089 	sub	a, (hl)
      0007FE 30 02                 2090 	jr	NC, 00103$
      000800 5E                    2091 	ld	e, (hl)
      000801 C9                    2092 	ret
      000802                       2093 00103$:
      000802 F8 04                 2094 	ldhl	sp,	#4
      000804 3A                    2095 	ld	a, (hl-)
      000805 2B                    2096 	dec	hl
      000806 96                    2097 	sub	a, (hl)
      000807 30 04                 2098 	jr	NC, 00105$
      000809 23                    2099 	inc	hl
      00080A 23                    2100 	inc	hl
      00080B 5E                    2101 	ld	e, (hl)
      00080C C9                    2102 	ret
      00080D                       2103 00105$:
      00080D F8 02                 2104 	ldhl	sp,	#2
      00080F 5E                    2105 	ld	e, (hl)
                                   2106 ;main.c:181: }
      000810 C9                    2107 	ret
                                   2108 ;main.c:183: uint16_t u16Clamp( uint16_t value, uint16_t min, uint16_t max )
                                   2109 ;	---------------------------------
                                   2110 ; Function u16Clamp
                                   2111 ; ---------------------------------
      000811                       2112 _u16Clamp::
                                   2113 ;main.c:185: return (value < min) ? min : (value > max) ? max : value;
      000811 F8 02                 2114 	ldhl	sp,	#2
      000813 5D                    2115 	ld	e, l
      000814 54                    2116 	ld	d, h
      000815 F8 04                 2117 	ldhl	sp,	#4
      000817 1A                    2118 	ld	a, (de)
      000818 13                    2119 	inc	de
      000819 96                    2120 	sub	a, (hl)
      00081A 23                    2121 	inc	hl
      00081B 1A                    2122 	ld	a, (de)
      00081C 9E                    2123 	sbc	a, (hl)
      00081D 30 06                 2124 	jr	NC, 00103$
      00081F F8 04                 2125 	ldhl	sp,	#4
      000821 2A                    2126 	ld	a, (hl+)
      000822 5F                    2127 	ld	e, a
      000823 56                    2128 	ld	d, (hl)
      000824 C9                    2129 	ret
      000825                       2130 00103$:
      000825 F8 06                 2131 	ldhl	sp,	#6
      000827 5D                    2132 	ld	e, l
      000828 54                    2133 	ld	d, h
      000829 F8 02                 2134 	ldhl	sp,	#2
      00082B 1A                    2135 	ld	a, (de)
      00082C 13                    2136 	inc	de
      00082D 96                    2137 	sub	a, (hl)
      00082E 23                    2138 	inc	hl
      00082F 1A                    2139 	ld	a, (de)
      000830 9E                    2140 	sbc	a, (hl)
      000831 30 06                 2141 	jr	NC, 00105$
      000833 F8 06                 2142 	ldhl	sp,	#6
      000835 2A                    2143 	ld	a, (hl+)
      000836 5F                    2144 	ld	e, a
      000837 56                    2145 	ld	d, (hl)
      000838 C9                    2146 	ret
      000839                       2147 00105$:
      000839 F8 02                 2148 	ldhl	sp,	#2
      00083B 2A                    2149 	ld	a, (hl+)
      00083C 5F                    2150 	ld	e, a
      00083D 56                    2151 	ld	d, (hl)
                                   2152 ;main.c:186: }
      00083E C9                    2153 	ret
                                   2154 ;main.c:188: int16_t i16Clamp( int16_t value, int16_t min, int16_t max )
                                   2155 ;	---------------------------------
                                   2156 ; Function i16Clamp
                                   2157 ; ---------------------------------
      00083F                       2158 _i16Clamp::
                                   2159 ;main.c:190: return (value < min) ? min : (value > max) ? max : value;
      00083F F8 02                 2160 	ldhl	sp,	#2
      000841 5D                    2161 	ld	e, l
      000842 54                    2162 	ld	d, h
      000843 F8 04                 2163 	ldhl	sp,	#4
      000845 1A                    2164 	ld	a, (de)
      000846 13                    2165 	inc	de
      000847 96                    2166 	sub	a, (hl)
      000848 23                    2167 	inc	hl
      000849 1A                    2168 	ld	a, (de)
      00084A 9E                    2169 	sbc	a, (hl)
      00084B 1A                    2170 	ld	a, (de)
      00084C 57                    2171 	ld	d, a
      00084D CB 7E                 2172 	bit	7, (hl)
      00084F 28 07                 2173 	jr	Z, 00117$
      000851 CB 7A                 2174 	bit	7, d
      000853 20 08                 2175 	jr	NZ, 00118$
      000855 BF                    2176 	cp	a, a
      000856 18 05                 2177 	jr	00118$
      000858                       2178 00117$:
      000858 CB 7A                 2179 	bit	7, d
      00085A 28 01                 2180 	jr	Z, 00118$
      00085C 37                    2181 	scf
      00085D                       2182 00118$:
      00085D 30 06                 2183 	jr	NC, 00103$
      00085F F8 04                 2184 	ldhl	sp,	#4
      000861 2A                    2185 	ld	a, (hl+)
      000862 5F                    2186 	ld	e, a
      000863 56                    2187 	ld	d, (hl)
      000864 C9                    2188 	ret
      000865                       2189 00103$:
      000865 F8 06                 2190 	ldhl	sp,	#6
      000867 5D                    2191 	ld	e, l
      000868 54                    2192 	ld	d, h
      000869 F8 02                 2193 	ldhl	sp,	#2
      00086B 1A                    2194 	ld	a, (de)
      00086C 13                    2195 	inc	de
      00086D 96                    2196 	sub	a, (hl)
      00086E 23                    2197 	inc	hl
      00086F 1A                    2198 	ld	a, (de)
      000870 9E                    2199 	sbc	a, (hl)
      000871 1A                    2200 	ld	a, (de)
      000872 57                    2201 	ld	d, a
      000873 CB 7E                 2202 	bit	7, (hl)
      000875 28 07                 2203 	jr	Z, 00119$
      000877 CB 7A                 2204 	bit	7, d
      000879 20 08                 2205 	jr	NZ, 00120$
      00087B BF                    2206 	cp	a, a
      00087C 18 05                 2207 	jr	00120$
      00087E                       2208 00119$:
      00087E CB 7A                 2209 	bit	7, d
      000880 28 01                 2210 	jr	Z, 00120$
      000882 37                    2211 	scf
      000883                       2212 00120$:
      000883 30 06                 2213 	jr	NC, 00105$
      000885 F8 06                 2214 	ldhl	sp,	#6
      000887 2A                    2215 	ld	a, (hl+)
      000888 5F                    2216 	ld	e, a
      000889 56                    2217 	ld	d, (hl)
      00088A C9                    2218 	ret
      00088B                       2219 00105$:
      00088B F8 02                 2220 	ldhl	sp,	#2
      00088D 2A                    2221 	ld	a, (hl+)
      00088E 5F                    2222 	ld	e, a
      00088F 56                    2223 	ld	d, (hl)
                                   2224 ;main.c:191: }
      000890 C9                    2225 	ret
                                   2226 ;main.c:192: int8_t abs(int8_t value) {
                                   2227 ;	---------------------------------
                                   2228 ; Function abs
                                   2229 ; ---------------------------------
      000891                       2230 _abs::
                                   2231 ;main.c:193: if (value >= 0) return value;
      000891 F8 02                 2232 	ldhl	sp,	#2
      000893 CB 7E                 2233 	bit	7, (hl)
      000895 20 02                 2234 	jr	NZ, 00102$
      000897 5E                    2235 	ld	e, (hl)
      000898 C9                    2236 	ret
      000899                       2237 00102$:
                                   2238 ;main.c:194: else return - value;
      000899 AF                    2239 	xor	a, a
      00089A F8 02                 2240 	ldhl	sp,	#2
      00089C 96                    2241 	sub	a, (hl)
      00089D 5F                    2242 	ld	e, a
                                   2243 ;main.c:195: }
      00089E C9                    2244 	ret
                                   2245 ;main.c:197: void moveEnemiesWithBackground(int16_t x, int16_t y) {
                                   2246 ;	---------------------------------
                                   2247 ; Function moveEnemiesWithBackground
                                   2248 ; ---------------------------------
      00089F                       2249 _moveEnemiesWithBackground::
      00089F E8 FB                 2250 	add	sp, #-5
                                   2251 ;main.c:198: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0008A1 F8 04                 2252 	ldhl	sp,	#4
      0008A3 36 00                 2253 	ld	(hl), #0x00
      0008A5                       2254 00103$:
      0008A5 21r09r05              2255 	ld	hl, #_ENEMYCOUNT
      0008A8 4E                    2256 	ld	c, (hl)
      0008A9 F8 04                 2257 	ldhl	sp,	#4
      0008AB 7E                    2258 	ld	a, (hl)
      0008AC 91                    2259 	sub	a, c
      0008AD 30 57                 2260 	jr	NC, 00105$
                                   2261 ;main.c:199: enemies[i].x -= x;
      0008AF 4E                    2262 	ld	c, (hl)
      0008B0 06 00                 2263 	ld	b, #0x00
      0008B2 69                    2264 	ld	l, c
      0008B3 60                    2265 	ld	h, b
      0008B4 29                    2266 	add	hl, hl
      0008B5 29                    2267 	add	hl, hl
      0008B6 29                    2268 	add	hl, hl
      0008B7 09                    2269 	add	hl, bc
      0008B8 29                    2270 	add	hl, hl
      0008B9 01r00r00              2271 	ld	bc,#_enemies
      0008BC 09                    2272 	add	hl,bc
      0008BD 4D                    2273 	ld	c, l
      0008BE 44                    2274 	ld	b, h
      0008BF 59                    2275 	ld	e, c
      0008C0 50                    2276 	ld	d, b
      0008C1 1A                    2277 	ld	a, (de)
      0008C2 F8 00                 2278 	ldhl	sp,	#0
      0008C4 22                    2279 	ld	(hl+), a
      0008C5 13                    2280 	inc	de
      0008C6 1A                    2281 	ld	a, (de)
      0008C7 77                    2282 	ld	(hl), a
      0008C8 D1                    2283 	pop	de
      0008C9 D5                    2284 	push	de
      0008CA F8 07                 2285 	ldhl	sp,	#7
      0008CC 2A                    2286 	ld	a,	(hl+)
      0008CD 66                    2287 	ld	h, (hl)
      0008CE 6F                    2288 	ld	l, a
      0008CF 7B                    2289 	ld	a, e
      0008D0 95                    2290 	sub	a, l
      0008D1 5F                    2291 	ld	e, a
      0008D2 7A                    2292 	ld	a, d
      0008D3 9C                    2293 	sbc	a, h
      0008D4 F8 03                 2294 	ldhl	sp,	#3
      0008D6 32                    2295 	ld	(hl-), a
      0008D7 73                    2296 	ld	(hl), e
      0008D8 59                    2297 	ld	e, c
      0008D9 50                    2298 	ld	d, b
      0008DA 2A                    2299 	ld	a, (hl+)
      0008DB 12                    2300 	ld	(de), a
      0008DC 13                    2301 	inc	de
                                   2302 ;main.c:200: enemies[i].y -= y;
      0008DD 3A                    2303 	ld	a, (hl-)
      0008DE 12                    2304 	ld	(de), a
      0008DF 03                    2305 	inc	bc
      0008E0 03                    2306 	inc	bc
      0008E1 79                    2307 	ld	a, c
      0008E2 22                    2308 	ld	(hl+), a
      0008E3 78                    2309 	ld	a, b
      0008E4 32                    2310 	ld	(hl-), a
      0008E5 2A                    2311 	ld	a, (hl+)
      0008E6 5F                    2312 	ld	e, a
      0008E7 56                    2313 	ld	d, (hl)
      0008E8 1A                    2314 	ld	a, (de)
      0008E9 4F                    2315 	ld	c, a
      0008EA 13                    2316 	inc	de
      0008EB 1A                    2317 	ld	a, (de)
      0008EC 47                    2318 	ld	b, a
      0008ED F8 09                 2319 	ldhl	sp,#9
      0008EF 2A                    2320 	ld	a, (hl+)
      0008F0 5F                    2321 	ld	e, a
      0008F1 56                    2322 	ld	d, (hl)
      0008F2 79                    2323 	ld	a, c
      0008F3 93                    2324 	sub	a, e
      0008F4 5F                    2325 	ld	e, a
      0008F5 78                    2326 	ld	a, b
      0008F6 9A                    2327 	sbc	a, d
      0008F7 47                    2328 	ld	b, a
      0008F8 4B                    2329 	ld	c, e
      0008F9 F8 02                 2330 	ldhl	sp,	#2
      0008FB 2A                    2331 	ld	a,	(hl+)
      0008FC 66                    2332 	ld	h, (hl)
      0008FD 6F                    2333 	ld	l, a
      0008FE 79                    2334 	ld	a, c
      0008FF 22                    2335 	ld	(hl+), a
      000900 70                    2336 	ld	(hl), b
                                   2337 ;main.c:198: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000901 F8 04                 2338 	ldhl	sp,	#4
      000903 34                    2339 	inc	(hl)
      000904 18 9F                 2340 	jr	00103$
      000906                       2341 00105$:
                                   2342 ;main.c:202: }
      000906 E8 05                 2343 	add	sp, #5
      000908 C9                    2344 	ret
                                   2345 ;main.c:204: void updateEnemyPositions() {
                                   2346 ;	---------------------------------
                                   2347 ; Function updateEnemyPositions
                                   2348 ; ---------------------------------
      000909                       2349 _updateEnemyPositions::
      000909 E8 F1                 2350 	add	sp, #-15
                                   2351 ;main.c:207: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00090B F8 0E                 2352 	ldhl	sp,	#14
      00090D 36 00                 2353 	ld	(hl), #0x00
      00090F                       2354 00134$:
      00090F 21r09r05              2355 	ld	hl, #_ENEMYCOUNT
      000912 4E                    2356 	ld	c, (hl)
      000913 F8 0E                 2357 	ldhl	sp,	#14
      000915 7E                    2358 	ld	a, (hl)
      000916 91                    2359 	sub	a, c
      000917 D2rD2r0B              2360 	jp	NC, 00113$
                                   2361 ;main.c:208: if (enemies[i].x < playerDrawX) {
      00091A 4E                    2362 	ld	c, (hl)
      00091B 06 00                 2363 	ld	b, #0x00
      00091D 69                    2364 	ld	l, c
      00091E 60                    2365 	ld	h, b
      00091F 29                    2366 	add	hl, hl
      000920 29                    2367 	add	hl, hl
      000921 29                    2368 	add	hl, hl
      000922 09                    2369 	add	hl, bc
      000923 29                    2370 	add	hl, hl
      000924 01r00r00              2371 	ld	bc,#_enemies
      000927 09                    2372 	add	hl,bc
      000928 33                    2373 	inc	sp
      000929 33                    2374 	inc	sp
      00092A 5D                    2375 	ld	e, l
      00092B 54                    2376 	ld	d, h
      00092C D5                    2377 	push	de
      00092D 1A                    2378 	ld	a, (de)
      00092E F8 06                 2379 	ldhl	sp,	#6
      000930 22                    2380 	ld	(hl+), a
      000931 13                    2381 	inc	de
      000932 1A                    2382 	ld	a, (de)
      000933 77                    2383 	ld	(hl), a
      000934 FAr23r00              2384 	ld	a, (#_playerDrawX)
      000937 F8 08                 2385 	ldhl	sp,	#8
      000939 22                    2386 	ld	(hl+), a
      00093A 36 00                 2387 	ld	(hl), #0x00
                                   2388 ;main.c:215: enemies[i].ySpeed += enemies[i].accel;
      00093C D1                    2389 	pop	de
      00093D D5                    2390 	push	de
      00093E 21 0D 00              2391 	ld	hl, #0x000d
      000941 19                    2392 	add	hl, de
      000942 E5                    2393 	push	hl
      000943 7D                    2394 	ld	a, l
      000944 F8 0E                 2395 	ldhl	sp,	#14
      000946 77                    2396 	ld	(hl), a
      000947 E1                    2397 	pop	hl
      000948 7C                    2398 	ld	a, h
      000949 F8 0D                 2399 	ldhl	sp,	#13
      00094B 77                    2400 	ld	(hl), a
                                   2401 ;main.c:209: enemies[i].xSpeed += enemies[i].accel;
      00094C D1                    2402 	pop	de
      00094D D5                    2403 	push	de
      00094E 21 0E 00              2404 	ld	hl, #0x000e
      000951 19                    2405 	add	hl, de
      000952 E5                    2406 	push	hl
      000953 7D                    2407 	ld	a, l
      000954 F8 04                 2408 	ldhl	sp,	#4
      000956 77                    2409 	ld	(hl), a
      000957 E1                    2410 	pop	hl
      000958 7C                    2411 	ld	a, h
      000959 F8 03                 2412 	ldhl	sp,	#3
      00095B 77                    2413 	ld	(hl), a
      00095C F8 0C                 2414 	ldhl	sp,#12
      00095E 2A                    2415 	ld	a, (hl+)
      00095F 5F                    2416 	ld	e, a
      000960 56                    2417 	ld	d, (hl)
      000961 1A                    2418 	ld	a, (de)
      000962 4F                    2419 	ld	c, a
                                   2420 ;main.c:221: enemies[i].xSpeed = i16Clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000963 F8 02                 2421 	ldhl	sp,#2
      000965 2A                    2422 	ld	a, (hl+)
      000966 5F                    2423 	ld	e, a
      000967 56                    2424 	ld	d, (hl)
      000968 1A                    2425 	ld	a, (de)
      000969 F8 0A                 2426 	ldhl	sp,	#10
      00096B 22                    2427 	ld	(hl+), a
      00096C 13                    2428 	inc	de
      00096D 1A                    2429 	ld	a, (de)
      00096E 77                    2430 	ld	(hl), a
                                   2431 ;main.c:209: enemies[i].xSpeed += enemies[i].accel;
      00096F 06 00                 2432 	ld	b, #0x00
                                   2433 ;main.c:208: if (enemies[i].x < playerDrawX) {
      000971 F8 06                 2434 	ldhl	sp,	#6
      000973 5D                    2435 	ld	e, l
      000974 54                    2436 	ld	d, h
      000975 F8 08                 2437 	ldhl	sp,	#8
      000977 1A                    2438 	ld	a, (de)
      000978 13                    2439 	inc	de
      000979 96                    2440 	sub	a, (hl)
      00097A 23                    2441 	inc	hl
      00097B 1A                    2442 	ld	a, (de)
      00097C 9E                    2443 	sbc	a, (hl)
      00097D 1A                    2444 	ld	a, (de)
      00097E 57                    2445 	ld	d, a
      00097F CB 7E                 2446 	bit	7, (hl)
      000981 28 07                 2447 	jr	Z, 00228$
      000983 CB 7A                 2448 	bit	7, d
      000985 20 08                 2449 	jr	NZ, 00229$
      000987 BF                    2450 	cp	a, a
      000988 18 05                 2451 	jr	00229$
      00098A                       2452 00228$:
      00098A CB 7A                 2453 	bit	7, d
      00098C 28 01                 2454 	jr	Z, 00229$
      00098E 37                    2455 	scf
      00098F                       2456 00229$:
      00098F 30 12                 2457 	jr	NC, 00102$
                                   2458 ;main.c:209: enemies[i].xSpeed += enemies[i].accel;
      000991 F8 0A                 2459 	ldhl	sp,	#10
      000993 2A                    2460 	ld	a,	(hl+)
      000994 66                    2461 	ld	h, (hl)
      000995 6F                    2462 	ld	l, a
      000996 09                    2463 	add	hl, bc
      000997 4D                    2464 	ld	c, l
      000998 44                    2465 	ld	b, h
      000999 F8 02                 2466 	ldhl	sp,	#2
      00099B 2A                    2467 	ld	a,	(hl+)
      00099C 66                    2468 	ld	h, (hl)
      00099D 6F                    2469 	ld	l, a
      00099E 79                    2470 	ld	a, c
      00099F 22                    2471 	ld	(hl+), a
      0009A0 70                    2472 	ld	(hl), b
      0009A1 18 14                 2473 	jr	00103$
      0009A3                       2474 00102$:
                                   2475 ;main.c:212: enemies[i].xSpeed -= enemies[i].accel;
      0009A3 F8 0A                 2476 	ldhl	sp,#10
      0009A5 2A                    2477 	ld	a, (hl+)
      0009A6 5F                    2478 	ld	e, a
      0009A7 56                    2479 	ld	d, (hl)
      0009A8 7B                    2480 	ld	a, e
      0009A9 91                    2481 	sub	a, c
      0009AA 5F                    2482 	ld	e, a
      0009AB 7A                    2483 	ld	a, d
      0009AC 98                    2484 	sbc	a, b
      0009AD 4B                    2485 	ld	c, e
      0009AE 47                    2486 	ld	b, a
      0009AF F8 02                 2487 	ldhl	sp,	#2
      0009B1 2A                    2488 	ld	a,	(hl+)
      0009B2 66                    2489 	ld	h, (hl)
      0009B3 6F                    2490 	ld	l, a
      0009B4 79                    2491 	ld	a, c
      0009B5 22                    2492 	ld	(hl+), a
      0009B6 70                    2493 	ld	(hl), b
      0009B7                       2494 00103$:
                                   2495 ;main.c:231: enemies[i].y += enemies[i].ySpeed >> 5;
      0009B7 D1                    2496 	pop	de
      0009B8 D5                    2497 	push	de
      0009B9 21 02 00              2498 	ld	hl, #0x0002
      0009BC 19                    2499 	add	hl, de
      0009BD E5                    2500 	push	hl
      0009BE 7D                    2501 	ld	a, l
      0009BF F8 06                 2502 	ldhl	sp,	#6
      0009C1 77                    2503 	ld	(hl), a
      0009C2 E1                    2504 	pop	hl
      0009C3 7C                    2505 	ld	a, h
      0009C4 F8 05                 2506 	ldhl	sp,	#5
                                   2507 ;main.c:214: if (enemies[i].y < playerDrawY) {
      0009C6 32                    2508 	ld	(hl-), a
      0009C7 2A                    2509 	ld	a, (hl+)
      0009C8 5F                    2510 	ld	e, a
      0009C9 56                    2511 	ld	d, (hl)
      0009CA 1A                    2512 	ld	a, (de)
      0009CB F8 08                 2513 	ldhl	sp,	#8
      0009CD 22                    2514 	ld	(hl+), a
      0009CE 13                    2515 	inc	de
      0009CF 1A                    2516 	ld	a, (de)
      0009D0 77                    2517 	ld	(hl), a
      0009D1 FAr24r00              2518 	ld	a, (#_playerDrawY)
      0009D4 F8 0A                 2519 	ldhl	sp,	#10
      0009D6 22                    2520 	ld	(hl+), a
      0009D7 36 00                 2521 	ld	(hl), #0x00
                                   2522 ;main.c:215: enemies[i].ySpeed += enemies[i].accel;
      0009D9 D1                    2523 	pop	de
      0009DA D5                    2524 	push	de
      0009DB 21 10 00              2525 	ld	hl, #0x0010
      0009DE 19                    2526 	add	hl, de
      0009DF E5                    2527 	push	hl
      0009E0 7D                    2528 	ld	a, l
      0009E1 F8 08                 2529 	ldhl	sp,	#8
      0009E3 77                    2530 	ld	(hl), a
      0009E4 E1                    2531 	pop	hl
      0009E5 7C                    2532 	ld	a, h
      0009E6 F8 07                 2533 	ldhl	sp,	#7
      0009E8 77                    2534 	ld	(hl), a
                                   2535 ;main.c:209: enemies[i].xSpeed += enemies[i].accel;
      0009E9 F8 0C                 2536 	ldhl	sp,#12
      0009EB 2A                    2537 	ld	a, (hl+)
      0009EC 5F                    2538 	ld	e, a
      0009ED 56                    2539 	ld	d, (hl)
      0009EE 1A                    2540 	ld	a, (de)
      0009EF 47                    2541 	ld	b, a
                                   2542 ;main.c:215: enemies[i].ySpeed += enemies[i].accel;
      0009F0 F8 06                 2543 	ldhl	sp,#6
      0009F2 2A                    2544 	ld	a, (hl+)
      0009F3 5F                    2545 	ld	e, a
      0009F4 56                    2546 	ld	d, (hl)
      0009F5 1A                    2547 	ld	a, (de)
      0009F6 4F                    2548 	ld	c, a
      0009F7 13                    2549 	inc	de
      0009F8 1A                    2550 	ld	a, (de)
                                   2551 ;main.c:209: enemies[i].xSpeed += enemies[i].accel;
      0009F9 F8 0C                 2552 	ldhl	sp,	#12
      0009FB 70                    2553 	ld	(hl), b
      0009FC 23                    2554 	inc	hl
      0009FD 36 00                 2555 	ld	(hl), #0x00
                                   2556 ;main.c:215: enemies[i].ySpeed += enemies[i].accel;
      0009FF 47                    2557 	ld	b, a
                                   2558 ;main.c:214: if (enemies[i].y < playerDrawY) {
      000A00 F8 08                 2559 	ldhl	sp,	#8
      000A02 5D                    2560 	ld	e, l
      000A03 54                    2561 	ld	d, h
      000A04 F8 0A                 2562 	ldhl	sp,	#10
      000A06 1A                    2563 	ld	a, (de)
      000A07 13                    2564 	inc	de
      000A08 96                    2565 	sub	a, (hl)
      000A09 23                    2566 	inc	hl
      000A0A 1A                    2567 	ld	a, (de)
      000A0B 9E                    2568 	sbc	a, (hl)
      000A0C 1A                    2569 	ld	a, (de)
      000A0D 57                    2570 	ld	d, a
      000A0E CB 7E                 2571 	bit	7, (hl)
      000A10 28 07                 2572 	jr	Z, 00230$
      000A12 CB 7A                 2573 	bit	7, d
      000A14 20 08                 2574 	jr	NZ, 00231$
      000A16 BF                    2575 	cp	a, a
      000A17 18 05                 2576 	jr	00231$
      000A19                       2577 00230$:
      000A19 CB 7A                 2578 	bit	7, d
      000A1B 28 01                 2579 	jr	Z, 00231$
      000A1D 37                    2580 	scf
      000A1E                       2581 00231$:
      000A1E 30 12                 2582 	jr	NC, 00105$
                                   2583 ;main.c:215: enemies[i].ySpeed += enemies[i].accel;
      000A20 F8 0C                 2584 	ldhl	sp,	#12
      000A22 2A                    2585 	ld	a,	(hl+)
      000A23 66                    2586 	ld	h, (hl)
      000A24 6F                    2587 	ld	l, a
      000A25 09                    2588 	add	hl, bc
      000A26 4D                    2589 	ld	c, l
      000A27 44                    2590 	ld	b, h
      000A28 F8 06                 2591 	ldhl	sp,	#6
      000A2A 2A                    2592 	ld	a,	(hl+)
      000A2B 66                    2593 	ld	h, (hl)
      000A2C 6F                    2594 	ld	l, a
      000A2D 79                    2595 	ld	a, c
      000A2E 22                    2596 	ld	(hl+), a
      000A2F 70                    2597 	ld	(hl), b
      000A30 18 14                 2598 	jr	00106$
      000A32                       2599 00105$:
                                   2600 ;main.c:218: enemies[i].ySpeed -= enemies[i].accel;
      000A32 F8 0C                 2601 	ldhl	sp,#12
      000A34 2A                    2602 	ld	a, (hl+)
      000A35 5F                    2603 	ld	e, a
      000A36 56                    2604 	ld	d, (hl)
      000A37 79                    2605 	ld	a, c
      000A38 93                    2606 	sub	a, e
      000A39 5F                    2607 	ld	e, a
      000A3A 78                    2608 	ld	a, b
      000A3B 9A                    2609 	sbc	a, d
      000A3C 4B                    2610 	ld	c, e
      000A3D 47                    2611 	ld	b, a
      000A3E F8 06                 2612 	ldhl	sp,	#6
      000A40 2A                    2613 	ld	a,	(hl+)
      000A41 66                    2614 	ld	h, (hl)
      000A42 6F                    2615 	ld	l, a
      000A43 79                    2616 	ld	a, c
      000A44 22                    2617 	ld	(hl+), a
      000A45 70                    2618 	ld	(hl), b
      000A46                       2619 00106$:
                                   2620 ;main.c:221: enemies[i].xSpeed = i16Clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000A46 D1                    2621 	pop	de
      000A47 D5                    2622 	push	de
      000A48 21 0B 00              2623 	ld	hl, #0x000b
      000A4B 19                    2624 	add	hl, de
      000A4C E5                    2625 	push	hl
      000A4D 7D                    2626 	ld	a, l
      000A4E F8 0A                 2627 	ldhl	sp,	#10
      000A50 77                    2628 	ld	(hl), a
      000A51 E1                    2629 	pop	hl
      000A52 7C                    2630 	ld	a, h
      000A53 F8 09                 2631 	ldhl	sp,	#9
      000A55 32                    2632 	ld	(hl-), a
      000A56 2A                    2633 	ld	a, (hl+)
      000A57 5F                    2634 	ld	e, a
      000A58 2A                    2635 	ld	a, (hl+)
      000A59 23                    2636 	inc	hl
      000A5A 57                    2637 	ld	d, a
      000A5B 1A                    2638 	ld	a, (de)
      000A5C 4F                    2639 	ld	c, a
      000A5D 13                    2640 	inc	de
      000A5E 1A                    2641 	ld	a, (de)
      000A5F 47                    2642 	ld	b, a
      000A60 11 00 00              2643 	ld	de, #0x0000
      000A63 7B                    2644 	ld	a, e
      000A64 91                    2645 	sub	a, c
      000A65 5F                    2646 	ld	e, a
      000A66 7A                    2647 	ld	a, d
      000A67 98                    2648 	sbc	a, b
      000A68 32                    2649 	ld	(hl-), a
      000A69 73                    2650 	ld	(hl), e
      000A6A F8 02                 2651 	ldhl	sp,#2
      000A6C 2A                    2652 	ld	a, (hl+)
      000A6D 5F                    2653 	ld	e, a
      000A6E 56                    2654 	ld	d, (hl)
      000A6F 1A                    2655 	ld	a, (de)
      000A70 F8 0C                 2656 	ldhl	sp,	#12
      000A72 22                    2657 	ld	(hl+), a
      000A73 13                    2658 	inc	de
      000A74 1A                    2659 	ld	a, (de)
      000A75 77                    2660 	ld	(hl), a
      000A76 C5                    2661 	push	bc
      000A77 F8 0C                 2662 	ldhl	sp,	#12
      000A79 2A                    2663 	ld	a, (hl+)
      000A7A 5F                    2664 	ld	e, a
      000A7B 2A                    2665 	ld	a, (hl+)
      000A7C 57                    2666 	ld	d, a
      000A7D D5                    2667 	push	de
      000A7E 2A                    2668 	ld	a, (hl+)
      000A7F 5F                    2669 	ld	e, a
      000A80 56                    2670 	ld	d, (hl)
      000A81 D5                    2671 	push	de
      000A82 CDr3Fr08              2672 	call	_i16Clamp
      000A85 E8 06                 2673 	add	sp, #6
      000A87 4B                    2674 	ld	c, e
      000A88 42                    2675 	ld	b, d
      000A89 F8 02                 2676 	ldhl	sp,	#2
      000A8B 2A                    2677 	ld	a,	(hl+)
      000A8C 66                    2678 	ld	h, (hl)
      000A8D 6F                    2679 	ld	l, a
      000A8E 79                    2680 	ld	a, c
      000A8F 22                    2681 	ld	(hl+), a
      000A90 70                    2682 	ld	(hl), b
                                   2683 ;main.c:222: enemies[i].ySpeed = i16Clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000A91 F8 08                 2684 	ldhl	sp,#8
      000A93 2A                    2685 	ld	a, (hl+)
      000A94 5F                    2686 	ld	e, a
      000A95 2A                    2687 	ld	a, (hl+)
      000A96 23                    2688 	inc	hl
      000A97 57                    2689 	ld	d, a
      000A98 1A                    2690 	ld	a, (de)
      000A99 4F                    2691 	ld	c, a
      000A9A 13                    2692 	inc	de
      000A9B 1A                    2693 	ld	a, (de)
      000A9C 47                    2694 	ld	b, a
      000A9D 11 00 00              2695 	ld	de, #0x0000
      000AA0 7B                    2696 	ld	a, e
      000AA1 91                    2697 	sub	a, c
      000AA2 5F                    2698 	ld	e, a
      000AA3 7A                    2699 	ld	a, d
      000AA4 98                    2700 	sbc	a, b
      000AA5 32                    2701 	ld	(hl-), a
      000AA6 73                    2702 	ld	(hl), e
      000AA7 F8 06                 2703 	ldhl	sp,#6
      000AA9 2A                    2704 	ld	a, (hl+)
      000AAA 5F                    2705 	ld	e, a
      000AAB 56                    2706 	ld	d, (hl)
      000AAC 1A                    2707 	ld	a, (de)
      000AAD F8 0C                 2708 	ldhl	sp,	#12
      000AAF 22                    2709 	ld	(hl+), a
      000AB0 13                    2710 	inc	de
      000AB1 1A                    2711 	ld	a, (de)
      000AB2 77                    2712 	ld	(hl), a
      000AB3 C5                    2713 	push	bc
      000AB4 F8 0C                 2714 	ldhl	sp,	#12
      000AB6 2A                    2715 	ld	a, (hl+)
      000AB7 5F                    2716 	ld	e, a
      000AB8 2A                    2717 	ld	a, (hl+)
      000AB9 57                    2718 	ld	d, a
      000ABA D5                    2719 	push	de
      000ABB 2A                    2720 	ld	a, (hl+)
      000ABC 5F                    2721 	ld	e, a
      000ABD 56                    2722 	ld	d, (hl)
      000ABE D5                    2723 	push	de
      000ABF CDr3Fr08              2724 	call	_i16Clamp
      000AC2 E8 06                 2725 	add	sp, #6
      000AC4 4B                    2726 	ld	c, e
      000AC5 42                    2727 	ld	b, d
      000AC6 F8 06                 2728 	ldhl	sp,	#6
      000AC8 2A                    2729 	ld	a,	(hl+)
      000AC9 66                    2730 	ld	h, (hl)
      000ACA 6F                    2731 	ld	l, a
      000ACB 79                    2732 	ld	a, c
      000ACC 22                    2733 	ld	(hl+), a
      000ACD 70                    2734 	ld	(hl), b
                                   2735 ;main.c:221: enemies[i].xSpeed = i16Clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000ACE F8 02                 2736 	ldhl	sp,#2
      000AD0 2A                    2737 	ld	a, (hl+)
      000AD1 5F                    2738 	ld	e, a
      000AD2 56                    2739 	ld	d, (hl)
      000AD3 1A                    2740 	ld	a, (de)
      000AD4 F8 0C                 2741 	ldhl	sp,	#12
      000AD6 22                    2742 	ld	(hl+), a
      000AD7 13                    2743 	inc	de
      000AD8 1A                    2744 	ld	a, (de)
                                   2745 ;main.c:224: if (enemies[i].xSpeed >= 0) {
      000AD9 32                    2746 	ld	(hl-), a
      000ADA 2A                    2747 	ld	a, (hl+)
      000ADB 46                    2748 	ld	b, (hl)
                                   2749 ;main.c:225: enemies[i].x += enemies[i].xSpeed >> 5;
      000ADC D1                    2750 	pop	de
      000ADD D5                    2751 	push	de
      000ADE 1A                    2752 	ld	a, (de)
      000ADF F8 0A                 2753 	ldhl	sp,	#10
      000AE1 22                    2754 	ld	(hl+), a
      000AE2 13                    2755 	inc	de
      000AE3 1A                    2756 	ld	a, (de)
      000AE4 77                    2757 	ld	(hl), a
                                   2758 ;main.c:224: if (enemies[i].xSpeed >= 0) {
      000AE5 CB 78                 2759 	bit	7, b
      000AE7 20 27                 2760 	jr	NZ, 00108$
                                   2761 ;main.c:225: enemies[i].x += enemies[i].xSpeed >> 5;
      000AE9 23                    2762 	inc	hl
      000AEA 2A                    2763 	ld	a, (hl+)
      000AEB 4F                    2764 	ld	c, a
      000AEC 46                    2765 	ld	b, (hl)
      000AED CB 28                 2766 	sra	b
      000AEF CB 19                 2767 	rr	c
      000AF1 CB 28                 2768 	sra	b
      000AF3 CB 19                 2769 	rr	c
      000AF5 CB 28                 2770 	sra	b
      000AF7 CB 19                 2771 	rr	c
      000AF9 CB 28                 2772 	sra	b
      000AFB CB 19                 2773 	rr	c
      000AFD CB 28                 2774 	sra	b
      000AFF CB 19                 2775 	rr	c
      000B01 F8 0A                 2776 	ldhl	sp,	#10
      000B03 2A                    2777 	ld	a,	(hl+)
      000B04 66                    2778 	ld	h, (hl)
      000B05 6F                    2779 	ld	l, a
      000B06 09                    2780 	add	hl, bc
      000B07 4D                    2781 	ld	c, l
      000B08 44                    2782 	ld	b, h
      000B09 E1                    2783 	pop	hl
      000B0A E5                    2784 	push	hl
      000B0B 79                    2785 	ld	a, c
      000B0C 22                    2786 	ld	(hl+), a
      000B0D 70                    2787 	ld	(hl), b
      000B0E 18 34                 2788 	jr	00109$
      000B10                       2789 00108$:
                                   2790 ;main.c:228: enemies[i].x -= ((-enemies[i].xSpeed) >> 5);
      000B10 11 00 00              2791 	ld	de, #0x0000
      000B13 F8 0C                 2792 	ldhl	sp,	#12
      000B15 2A                    2793 	ld	a,	(hl+)
      000B16 66                    2794 	ld	h, (hl)
      000B17 6F                    2795 	ld	l, a
      000B18 7B                    2796 	ld	a, e
      000B19 95                    2797 	sub	a, l
      000B1A 5F                    2798 	ld	e, a
      000B1B 7A                    2799 	ld	a, d
      000B1C 9C                    2800 	sbc	a, h
      000B1D 47                    2801 	ld	b, a
      000B1E 4B                    2802 	ld	c, e
      000B1F CB 28                 2803 	sra	b
      000B21 CB 19                 2804 	rr	c
      000B23 CB 28                 2805 	sra	b
      000B25 CB 19                 2806 	rr	c
      000B27 CB 28                 2807 	sra	b
      000B29 CB 19                 2808 	rr	c
      000B2B CB 28                 2809 	sra	b
      000B2D CB 19                 2810 	rr	c
      000B2F CB 28                 2811 	sra	b
      000B31 CB 19                 2812 	rr	c
      000B33 F8 0A                 2813 	ldhl	sp,#10
      000B35 2A                    2814 	ld	a, (hl+)
      000B36 5F                    2815 	ld	e, a
      000B37 56                    2816 	ld	d, (hl)
      000B38 7B                    2817 	ld	a, e
      000B39 91                    2818 	sub	a, c
      000B3A 5F                    2819 	ld	e, a
      000B3B 7A                    2820 	ld	a, d
      000B3C 98                    2821 	sbc	a, b
      000B3D 47                    2822 	ld	b, a
      000B3E 4B                    2823 	ld	c, e
      000B3F E1                    2824 	pop	hl
      000B40 E5                    2825 	push	hl
      000B41 79                    2826 	ld	a, c
      000B42 22                    2827 	ld	(hl+), a
      000B43 70                    2828 	ld	(hl), b
      000B44                       2829 00109$:
                                   2830 ;main.c:230: if (enemies[i].ySpeed >= 0) {
      000B44 F8 06                 2831 	ldhl	sp,#6
      000B46 2A                    2832 	ld	a, (hl+)
      000B47 5F                    2833 	ld	e, a
      000B48 56                    2834 	ld	d, (hl)
      000B49 1A                    2835 	ld	a, (de)
      000B4A F8 0C                 2836 	ldhl	sp,	#12
      000B4C 22                    2837 	ld	(hl+), a
      000B4D 13                    2838 	inc	de
      000B4E 1A                    2839 	ld	a, (de)
      000B4F 32                    2840 	ld	(hl-), a
      000B50 2A                    2841 	ld	a, (hl+)
      000B51 46                    2842 	ld	b, (hl)
                                   2843 ;main.c:214: if (enemies[i].y < playerDrawY) {
      000B52 F8 04                 2844 	ldhl	sp,#4
      000B54 2A                    2845 	ld	a, (hl+)
      000B55 5F                    2846 	ld	e, a
      000B56 56                    2847 	ld	d, (hl)
      000B57 1A                    2848 	ld	a, (de)
      000B58 F8 08                 2849 	ldhl	sp,	#8
      000B5A 22                    2850 	ld	(hl+), a
      000B5B 13                    2851 	inc	de
      000B5C 1A                    2852 	ld	a, (de)
      000B5D 77                    2853 	ld	(hl), a
                                   2854 ;main.c:230: if (enemies[i].ySpeed >= 0) {
      000B5E CB 78                 2855 	bit	7, b
      000B60 20 2B                 2856 	jr	NZ, 00111$
                                   2857 ;main.c:231: enemies[i].y += enemies[i].ySpeed >> 5;
      000B62 F8 0C                 2858 	ldhl	sp,#12
      000B64 2A                    2859 	ld	a, (hl+)
      000B65 4F                    2860 	ld	c, a
      000B66 46                    2861 	ld	b, (hl)
      000B67 CB 28                 2862 	sra	b
      000B69 CB 19                 2863 	rr	c
      000B6B CB 28                 2864 	sra	b
      000B6D CB 19                 2865 	rr	c
      000B6F CB 28                 2866 	sra	b
      000B71 CB 19                 2867 	rr	c
      000B73 CB 28                 2868 	sra	b
      000B75 CB 19                 2869 	rr	c
      000B77 CB 28                 2870 	sra	b
      000B79 CB 19                 2871 	rr	c
      000B7B F8 08                 2872 	ldhl	sp,	#8
      000B7D 2A                    2873 	ld	a,	(hl+)
      000B7E 66                    2874 	ld	h, (hl)
      000B7F 6F                    2875 	ld	l, a
      000B80 09                    2876 	add	hl, bc
      000B81 4D                    2877 	ld	c, l
      000B82 44                    2878 	ld	b, h
      000B83 F8 04                 2879 	ldhl	sp,	#4
      000B85 2A                    2880 	ld	a,	(hl+)
      000B86 66                    2881 	ld	h, (hl)
      000B87 6F                    2882 	ld	l, a
      000B88 79                    2883 	ld	a, c
      000B89 22                    2884 	ld	(hl+), a
      000B8A 70                    2885 	ld	(hl), b
      000B8B 18 3F                 2886 	jr	00135$
      000B8D                       2887 00111$:
                                   2888 ;main.c:234: enemies[i].y -= ((-enemies[i].ySpeed) >> 5);
      000B8D 11 00 00              2889 	ld	de, #0x0000
      000B90 F8 0C                 2890 	ldhl	sp,	#12
      000B92 2A                    2891 	ld	a,	(hl+)
      000B93 66                    2892 	ld	h, (hl)
      000B94 6F                    2893 	ld	l, a
      000B95 7B                    2894 	ld	a, e
      000B96 95                    2895 	sub	a, l
      000B97 5F                    2896 	ld	e, a
      000B98 7A                    2897 	ld	a, d
      000B99 9C                    2898 	sbc	a, h
      000B9A F8 0B                 2899 	ldhl	sp,	#11
      000B9C 32                    2900 	ld	(hl-), a
      000B9D 7B                    2901 	ld	a, e
      000B9E 22                    2902 	ld	(hl+), a
      000B9F 2B                    2903 	dec	hl
      000BA0 2A                    2904 	ld	a, (hl+)
      000BA1 4F                    2905 	ld	c, a
      000BA2 3A                    2906 	ld	a, (hl-)
      000BA3 2B                    2907 	dec	hl
      000BA4 2B                    2908 	dec	hl
      000BA5 47                    2909 	ld	b, a
      000BA6 CB 28                 2910 	sra	b
      000BA8 CB 19                 2911 	rr	c
      000BAA CB 28                 2912 	sra	b
      000BAC CB 19                 2913 	rr	c
      000BAE CB 28                 2914 	sra	b
      000BB0 CB 19                 2915 	rr	c
      000BB2 CB 28                 2916 	sra	b
      000BB4 CB 19                 2917 	rr	c
      000BB6 CB 28                 2918 	sra	b
      000BB8 CB 19                 2919 	rr	c
      000BBA 2A                    2920 	ld	a, (hl+)
      000BBB 5F                    2921 	ld	e, a
      000BBC 56                    2922 	ld	d, (hl)
      000BBD 7B                    2923 	ld	a, e
      000BBE 91                    2924 	sub	a, c
      000BBF 5F                    2925 	ld	e, a
      000BC0 7A                    2926 	ld	a, d
      000BC1 98                    2927 	sbc	a, b
      000BC2 47                    2928 	ld	b, a
      000BC3 4B                    2929 	ld	c, e
      000BC4 F8 04                 2930 	ldhl	sp,	#4
      000BC6 2A                    2931 	ld	a,	(hl+)
      000BC7 66                    2932 	ld	h, (hl)
      000BC8 6F                    2933 	ld	l, a
      000BC9 79                    2934 	ld	a, c
      000BCA 22                    2935 	ld	(hl+), a
      000BCB 70                    2936 	ld	(hl), b
      000BCC                       2937 00135$:
                                   2938 ;main.c:207: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000BCC F8 0E                 2939 	ldhl	sp,	#14
      000BCE 34                    2940 	inc	(hl)
      000BCF C3r0Fr09              2941 	jp	00134$
      000BD2                       2942 00113$:
                                   2943 ;main.c:242: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000BD2 F8 0E                 2944 	ldhl	sp,	#14
      000BD4 36 00                 2945 	ld	(hl), #0x00
      000BD6                       2946 00137$:
      000BD6 21r09r05              2947 	ld	hl, #_ENEMYCOUNT
      000BD9 4E                    2948 	ld	c, (hl)
      000BDA F8 0E                 2949 	ldhl	sp,	#14
      000BDC 7E                    2950 	ld	a, (hl)
      000BDD 91                    2951 	sub	a, c
      000BDE D2r48r0D              2952 	jp	NC, 00139$
                                   2953 ;main.c:244: if (enemies[i].alive) {
      000BE1 4E                    2954 	ld	c, (hl)
      000BE2 06 00                 2955 	ld	b, #0x00
      000BE4 69                    2956 	ld	l, c
      000BE5 60                    2957 	ld	h, b
      000BE6 29                    2958 	add	hl, hl
      000BE7 29                    2959 	add	hl, hl
      000BE8 29                    2960 	add	hl, hl
      000BE9 09                    2961 	add	hl, bc
      000BEA 29                    2962 	add	hl, hl
      000BEB 01r00r00              2963 	ld	bc,#_enemies
      000BEE 09                    2964 	add	hl,bc
      000BEF E5                    2965 	push	hl
      000BF0 7D                    2966 	ld	a, l
      000BF1 F8 08                 2967 	ldhl	sp,	#8
      000BF3 77                    2968 	ld	(hl), a
      000BF4 E1                    2969 	pop	hl
      000BF5 7C                    2970 	ld	a, h
      000BF6 F8 07                 2971 	ldhl	sp,	#7
      000BF8 32                    2972 	ld	(hl-), a
      000BF9 2A                    2973 	ld	a, (hl+)
      000BFA 5F                    2974 	ld	e, a
      000BFB 56                    2975 	ld	d, (hl)
      000BFC 21 08 00              2976 	ld	hl, #0x0008
      000BFF 19                    2977 	add	hl, de
      000C00 4D                    2978 	ld	c, l
      000C01 44                    2979 	ld	b, h
      000C02 0A                    2980 	ld	a, (bc)
      000C03 F8 0D                 2981 	ldhl	sp,	#13
      000C05 77                    2982 	ld	(hl), a
      000C06 7E                    2983 	ld	a, (hl)
      000C07 B7                    2984 	or	a, a
      000C08 CAr1Ar0D              2985 	jp	Z, 00128$
                                   2986 ;main.c:245: if (enemies[i].visible == 1) {
      000C0B F8 06                 2987 	ldhl	sp,#6
      000C0D 2A                    2988 	ld	a, (hl+)
      000C0E 5F                    2989 	ld	e, a
      000C0F 56                    2990 	ld	d, (hl)
      000C10 21 09 00              2991 	ld	hl, #0x0009
      000C13 19                    2992 	add	hl, de
      000C14 E5                    2993 	push	hl
      000C15 7D                    2994 	ld	a, l
      000C16 F8 0A                 2995 	ldhl	sp,	#10
      000C18 77                    2996 	ld	(hl), a
      000C19 E1                    2997 	pop	hl
      000C1A 7C                    2998 	ld	a, h
      000C1B F8 09                 2999 	ldhl	sp,	#9
      000C1D 32                    3000 	ld	(hl-), a
      000C1E 2A                    3001 	ld	a, (hl+)
      000C1F 5F                    3002 	ld	e, a
      000C20 2A                    3003 	ld	a, (hl+)
      000C21 57                    3004 	ld	d, a
      000C22 1A                    3005 	ld	a, (de)
      000C23 77                    3006 	ld	(hl), a
                                   3007 ;main.c:246: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000C24 F8 06                 3008 	ldhl	sp,#6
      000C26 2A                    3009 	ld	a, (hl+)
      000C27 5F                    3010 	ld	e, a
      000C28 56                    3011 	ld	d, (hl)
      000C29 1A                    3012 	ld	a, (de)
      000C2A F8 04                 3013 	ldhl	sp,	#4
      000C2C 22                    3014 	ld	(hl+), a
      000C2D 13                    3015 	inc	de
      000C2E 1A                    3016 	ld	a, (de)
      000C2F 22                    3017 	ld	(hl+), a
      000C30 2A                    3018 	ld	a, (hl+)
      000C31 5F                    3019 	ld	e, a
      000C32 56                    3020 	ld	d, (hl)
      000C33 21 02 00              3021 	ld	hl, #0x0002
      000C36 19                    3022 	add	hl, de
      000C37 E5                    3023 	push	hl
      000C38 7D                    3024 	ld	a, l
      000C39 F8 0D                 3025 	ldhl	sp,	#13
      000C3B 77                    3026 	ld	(hl), a
      000C3C E1                    3027 	pop	hl
      000C3D 7C                    3028 	ld	a, h
      000C3E F8 0C                 3029 	ldhl	sp,	#12
                                   3030 ;main.c:248: set_sprite_tile(10+i, EMPTYSPRITE);
      000C40 22                    3031 	ld	(hl+), a
      000C41 23                    3032 	inc	hl
      000C42 7E                    3033 	ld	a, (hl)
                                   3034 ;main.c:246: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000C43 F8 04                 3035 	ldhl	sp,	#4
      000C45 4E                    3036 	ld	c, (hl)
      000C46 23                    3037 	inc	hl
      000C47 46                    3038 	ld	b, (hl)
                                   3039 ;main.c:248: set_sprite_tile(10+i, EMPTYSPRITE);
      000C48 C6 0A                 3040 	add	a, #0x0a
      000C4A F8 0D                 3041 	ldhl	sp,	#13
      000C4C 77                    3042 	ld	(hl), a
                                   3043 ;main.c:246: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000C4D 78                    3044 	ld	a, b
      000C4E 07                    3045 	rlca
      000C4F E6 01                 3046 	and	a,#0x01
      000C51 6F                    3047 	ld	l, a
                                   3048 ;	spillPairReg hl
                                   3049 ;	spillPairReg hl
                                   3050 ;main.c:245: if (enemies[i].visible == 1) {
      000C52 E5                    3051 	push	hl
      000C53 F8 0C                 3052 	ldhl	sp,	#12
      000C55 7E                    3053 	ld	a, (hl)
      000C56 3D                    3054 	dec	a
      000C57 E1                    3055 	pop	hl
      000C58 20 63                 3056 	jr	NZ, 00125$
                                   3057 ;main.c:246: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000C5A 7D                    3058 	ld	a, l
      000C5B B7                    3059 	or	a, a
      000C5C 20 44                 3060 	jr	NZ, 00114$
      000C5E 58                    3061 	ld	e, b
      000C5F 16 00                 3062 	ld	d, #0x00
      000C61 3E AC                 3063 	ld	a, #0xac
      000C63 B9                    3064 	cp	a, c
      000C64 3E 00                 3065 	ld	a, #0x00
      000C66 98                    3066 	sbc	a, b
      000C67 CB 7B                 3067 	bit	7, e
      000C69 28 07                 3068 	jr	Z, 00234$
      000C6B CB 7A                 3069 	bit	7, d
      000C6D 20 08                 3070 	jr	NZ, 00235$
      000C6F BF                    3071 	cp	a, a
      000C70 18 05                 3072 	jr	00235$
      000C72                       3073 00234$:
      000C72 CB 7A                 3074 	bit	7, d
      000C74 28 01                 3075 	jr	Z, 00235$
      000C76 37                    3076 	scf
      000C77                       3077 00235$:
      000C77 38 29                 3078 	jr	C, 00114$
      000C79 F8 0B                 3079 	ldhl	sp,#11
      000C7B 2A                    3080 	ld	a, (hl+)
      000C7C 5F                    3081 	ld	e, a
      000C7D 56                    3082 	ld	d, (hl)
      000C7E 1A                    3083 	ld	a, (de)
      000C7F 4F                    3084 	ld	c, a
      000C80 13                    3085 	inc	de
      000C81 1A                    3086 	ld	a, (de)
      000C82 47                    3087 	ld	b, a
      000C83 CB 78                 3088 	bit	7, b
      000C85 20 1B                 3089 	jr	NZ, 00114$
      000C87 58                    3090 	ld	e, b
      000C88 16 00                 3091 	ld	d, #0x00
      000C8A 3E 98                 3092 	ld	a, #0x98
      000C8C B9                    3093 	cp	a, c
      000C8D 3E 00                 3094 	ld	a, #0x00
      000C8F 98                    3095 	sbc	a, b
      000C90 CB 7B                 3096 	bit	7, e
      000C92 28 07                 3097 	jr	Z, 00236$
      000C94 CB 7A                 3098 	bit	7, d
      000C96 20 08                 3099 	jr	NZ, 00237$
      000C98 BF                    3100 	cp	a, a
      000C99 18 05                 3101 	jr	00237$
      000C9B                       3102 00236$:
      000C9B CB 7A                 3103 	bit	7, d
      000C9D 28 01                 3104 	jr	Z, 00237$
      000C9F 37                    3105 	scf
      000CA0                       3106 00237$:
      000CA0 30 78                 3107 	jr	NC, 00128$
      000CA2                       3108 00114$:
                                   3109 ;main.c:247: enemies[i].visible = 0;
      000CA2 F8 08                 3110 	ldhl	sp,	#8
      000CA4 2A                    3111 	ld	a,	(hl+)
      000CA5 66                    3112 	ld	h, (hl)
      000CA6 6F                    3113 	ld	l, a
      000CA7 36 00                 3114 	ld	(hl), #0x00
                                   3115 ;main.c:248: set_sprite_tile(10+i, EMPTYSPRITE);
      000CA9 21r08r05              3116 	ld	hl, #_EMPTYSPRITE
      000CAC 4E                    3117 	ld	c, (hl)
      000CAD F8 0D                 3118 	ldhl	sp,	#13
                                   3119 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000CAF 6E                    3120 	ld	l, (hl)
                                   3121 ;	spillPairReg hl
                                   3122 ;	spillPairReg hl
      000CB0 26 00                 3123 	ld	h, #0x00
                                   3124 ;	spillPairReg hl
                                   3125 ;	spillPairReg hl
      000CB2 29                    3126 	add	hl, hl
      000CB3 29                    3127 	add	hl, hl
      000CB4 11r00r00              3128 	ld	de, #_shadow_OAM
      000CB7 19                    3129 	add	hl, de
      000CB8 23                    3130 	inc	hl
      000CB9 23                    3131 	inc	hl
      000CBA 71                    3132 	ld	(hl), c
                                   3133 ;main.c:248: set_sprite_tile(10+i, EMPTYSPRITE);
      000CBB 18 5D                 3134 	jr	00128$
      000CBD                       3135 00125$:
                                   3136 ;main.c:252: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      000CBD CB 45                 3137 	bit	0, l
      000CBF 20 59                 3138 	jr	NZ, 00128$
      000CC1 79                    3139 	ld	a, c
      000CC2 D6 AC                 3140 	sub	a, #0xac
      000CC4 78                    3141 	ld	a, b
      000CC5 17                    3142 	rla
      000CC6 3F                    3143 	ccf
      000CC7 1F                    3144 	rra
      000CC8 DE 80                 3145 	sbc	a, #0x80
      000CCA 30 4E                 3146 	jr	NC, 00128$
      000CCC F8 0B                 3147 	ldhl	sp,#11
      000CCE 2A                    3148 	ld	a, (hl+)
      000CCF 5F                    3149 	ld	e, a
      000CD0 56                    3150 	ld	d, (hl)
      000CD1 1A                    3151 	ld	a, (de)
      000CD2 4F                    3152 	ld	c, a
      000CD3 13                    3153 	inc	de
      000CD4 1A                    3154 	ld	a, (de)
      000CD5 47                    3155 	ld	b, a
      000CD6 58                    3156 	ld	e, b
      000CD7 AF                    3157 	xor	a, a
      000CD8 57                    3158 	ld	d, a
      000CD9 B9                    3159 	cp	a, c
      000CDA 98                    3160 	sbc	a, b
      000CDB CB 7B                 3161 	bit	7, e
      000CDD 28 07                 3162 	jr	Z, 00238$
      000CDF CB 7A                 3163 	bit	7, d
      000CE1 20 08                 3164 	jr	NZ, 00239$
      000CE3 BF                    3165 	cp	a, a
      000CE4 18 05                 3166 	jr	00239$
      000CE6                       3167 00238$:
      000CE6 CB 7A                 3168 	bit	7, d
      000CE8 28 01                 3169 	jr	Z, 00239$
      000CEA 37                    3170 	scf
      000CEB                       3171 00239$:
      000CEB 30 2D                 3172 	jr	NC, 00128$
      000CED 79                    3173 	ld	a, c
      000CEE D6 98                 3174 	sub	a, #0x98
      000CF0 78                    3175 	ld	a, b
      000CF1 17                    3176 	rla
      000CF2 3F                    3177 	ccf
      000CF3 1F                    3178 	rra
      000CF4 DE 80                 3179 	sbc	a, #0x80
      000CF6 30 22                 3180 	jr	NC, 00128$
                                   3181 ;main.c:253: enemies[i].visible = 1;
      000CF8 F8 08                 3182 	ldhl	sp,	#8
      000CFA 2A                    3183 	ld	a,	(hl+)
      000CFB 66                    3184 	ld	h, (hl)
      000CFC 6F                    3185 	ld	l, a
      000CFD 36 01                 3186 	ld	(hl), #0x01
                                   3187 ;main.c:254: set_sprite_tile(10+i, enemies[i].sprite0);
      000CFF F8 06                 3188 	ldhl	sp,#6
      000D01 2A                    3189 	ld	a, (hl+)
      000D02 5F                    3190 	ld	e, a
      000D03 56                    3191 	ld	d, (hl)
      000D04 21 04 00              3192 	ld	hl, #0x0004
      000D07 19                    3193 	add	hl, de
      000D08 4D                    3194 	ld	c, l
      000D09 44                    3195 	ld	b, h
      000D0A 0A                    3196 	ld	a, (bc)
      000D0B 4F                    3197 	ld	c, a
      000D0C F8 0D                 3198 	ldhl	sp,	#13
                                   3199 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000D0E 6E                    3200 	ld	l, (hl)
      000D0F 11r00r00              3201 	ld	de, #_shadow_OAM+0
                                   3202 ;	spillPairReg hl
                                   3203 ;	spillPairReg hl
      000D12 26 00                 3204 	ld	h, #0x00
                                   3205 ;	spillPairReg hl
                                   3206 ;	spillPairReg hl
      000D14 29                    3207 	add	hl, hl
      000D15 29                    3208 	add	hl, hl
      000D16 19                    3209 	add	hl, de
      000D17 23                    3210 	inc	hl
      000D18 23                    3211 	inc	hl
      000D19 71                    3212 	ld	(hl), c
                                   3213 ;main.c:254: set_sprite_tile(10+i, enemies[i].sprite0);
      000D1A                       3214 00128$:
                                   3215 ;main.c:259: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000D1A F8 0E                 3216 	ldhl	sp,	#14
      000D1C 4E                    3217 	ld	c, (hl)
      000D1D 06 00                 3218 	ld	b, #0x00
      000D1F 69                    3219 	ld	l, c
      000D20 60                    3220 	ld	h, b
      000D21 29                    3221 	add	hl, hl
      000D22 29                    3222 	add	hl, hl
      000D23 29                    3223 	add	hl, hl
      000D24 09                    3224 	add	hl, bc
      000D25 29                    3225 	add	hl, hl
      000D26 11r00r00              3226 	ld	de, #_enemies
      000D29 19                    3227 	add	hl, de
      000D2A 4D                    3228 	ld	c, l
      000D2B 44                    3229 	ld	b, h
      000D2C 03                    3230 	inc	bc
      000D2D 03                    3231 	inc	bc
      000D2E 0A                    3232 	ld	a, (bc)
      000D2F 47                    3233 	ld	b, a
      000D30 4E                    3234 	ld	c, (hl)
      000D31 F8 0E                 3235 	ldhl	sp,	#14
      000D33 7E                    3236 	ld	a, (hl)
      000D34 C6 0A                 3237 	add	a, #0x0a
                                   3238 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000D36 6F                    3239 	ld	l, a
                                   3240 ;	spillPairReg hl
                                   3241 ;	spillPairReg hl
      000D37 26 00                 3242 	ld	h, #0x00
                                   3243 ;	spillPairReg hl
                                   3244 ;	spillPairReg hl
      000D39 29                    3245 	add	hl, hl
      000D3A 29                    3246 	add	hl, hl
      000D3B 11r00r00              3247 	ld	de, #_shadow_OAM
      000D3E 19                    3248 	add	hl, de
                                   3249 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000D3F 78                    3250 	ld	a, b
      000D40 22                    3251 	ld	(hl+), a
      000D41 71                    3252 	ld	(hl), c
                                   3253 ;main.c:242: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D42 F8 0E                 3254 	ldhl	sp,	#14
      000D44 34                    3255 	inc	(hl)
      000D45 C3rD6r0B              3256 	jp	00137$
      000D48                       3257 00139$:
                                   3258 ;main.c:261: }
      000D48 E8 0F                 3259 	add	sp, #15
      000D4A C9                    3260 	ret
                                   3261 ;main.c:263: void initEnemies(uint8_t loadSprites) {
                                   3262 ;	---------------------------------
                                   3263 ; Function initEnemies
                                   3264 ; ---------------------------------
      000D4B                       3265 _initEnemies::
      000D4B E8 F5                 3266 	add	sp, #-11
                                   3267 ;main.c:265: if (loadSprites) {
      000D4D F8 0D                 3268 	ldhl	sp,	#13
      000D4F 7E                    3269 	ld	a, (hl)
      000D50 B7                    3270 	or	a, a
      000D51 28 0D                 3271 	jr	Z, 00116$
                                   3272 ;main.c:267: set_sprite_data(9, 1, enemy1);
      000D53 11rF7r04              3273 	ld	de, #_enemy1
      000D56 D5                    3274 	push	de
      000D57 21 09 01              3275 	ld	hl, #0x109
      000D5A E5                    3276 	push	hl
      000D5B CDr00r00              3277 	call	_set_sprite_data
      000D5E E8 04                 3278 	add	sp, #4
                                   3279 ;main.c:272: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D60                       3280 00116$:
      000D60 F8 0A                 3281 	ldhl	sp,	#10
      000D62 36 00                 3282 	ld	(hl), #0x00
      000D64                       3283 00109$:
      000D64 21r09r05              3284 	ld	hl, #_ENEMYCOUNT
      000D67 4E                    3285 	ld	c, (hl)
      000D68 F8 0A                 3286 	ldhl	sp,	#10
      000D6A 7E                    3287 	ld	a, (hl)
      000D6B 91                    3288 	sub	a, c
      000D6C D2rF3r0E              3289 	jp	NC, 00111$
                                   3290 ;main.c:273: if (enemies[i].alive == 0) {
      000D6F 4E                    3291 	ld	c, (hl)
      000D70 06 00                 3292 	ld	b, #0x00
      000D72 69                    3293 	ld	l, c
      000D73 60                    3294 	ld	h, b
      000D74 29                    3295 	add	hl, hl
      000D75 29                    3296 	add	hl, hl
      000D76 29                    3297 	add	hl, hl
      000D77 09                    3298 	add	hl, bc
      000D78 29                    3299 	add	hl, hl
      000D79 01r00r00              3300 	ld	bc,#_enemies
      000D7C 09                    3301 	add	hl,bc
      000D7D E5                    3302 	push	hl
      000D7E 7D                    3303 	ld	a, l
      000D7F F8 08                 3304 	ldhl	sp,	#8
      000D81 77                    3305 	ld	(hl), a
      000D82 E1                    3306 	pop	hl
      000D83 7C                    3307 	ld	a, h
      000D84 F8 07                 3308 	ldhl	sp,	#7
      000D86 32                    3309 	ld	(hl-), a
      000D87 2A                    3310 	ld	a, (hl+)
      000D88 5F                    3311 	ld	e, a
      000D89 56                    3312 	ld	d, (hl)
      000D8A 21 08 00              3313 	ld	hl, #0x0008
      000D8D 19                    3314 	add	hl, de
      000D8E E5                    3315 	push	hl
      000D8F 7D                    3316 	ld	a, l
      000D90 F8 0A                 3317 	ldhl	sp,	#10
      000D92 77                    3318 	ld	(hl), a
      000D93 E1                    3319 	pop	hl
      000D94 7C                    3320 	ld	a, h
      000D95 F8 09                 3321 	ldhl	sp,	#9
      000D97 32                    3322 	ld	(hl-), a
      000D98 2A                    3323 	ld	a, (hl+)
      000D99 5F                    3324 	ld	e, a
      000D9A 56                    3325 	ld	d, (hl)
      000D9B 1A                    3326 	ld	a, (de)
      000D9C F8 05                 3327 	ldhl	sp,	#5
      000D9E 77                    3328 	ld	(hl), a
      000D9F 7E                    3329 	ld	a, (hl)
      000DA0 B7                    3330 	or	a, a
      000DA1 C2rEDr0E              3331 	jp	NZ, 00110$
                                   3332 ;main.c:274: uint8_t posIndex =  ((uint8_t)rand()) % (uint8_t)8;//(rand() & 8);
      000DA4 CDr00r00              3333 	call	_rand
      000DA7 7B                    3334 	ld	a, e
      000DA8 E6 07                 3335 	and	a, #0x07
      000DAA 4F                    3336 	ld	c, a
                                   3337 ;main.c:275: enemies[i].x = xSpawnPositions[posIndex];
      000DAB 21r0Ar05              3338 	ld	hl, #_xSpawnPositions
      000DAE 06 00                 3339 	ld	b, #0x00
      000DB0 09                    3340 	add	hl, bc
      000DB1 7E                    3341 	ld	a, (hl)
      000DB2 F8 00                 3342 	ldhl	sp,	#0
      000DB4 22                    3343 	ld	(hl+), a
      000DB5 36 00                 3344 	ld	(hl), #0x00
      000DB7 F8 06                 3345 	ldhl	sp,#6
      000DB9 2A                    3346 	ld	a, (hl+)
      000DBA 5F                    3347 	ld	e, a
      000DBB 56                    3348 	ld	d, (hl)
      000DBC F8 00                 3349 	ldhl	sp,	#0
      000DBE 2A                    3350 	ld	a, (hl+)
      000DBF 12                    3351 	ld	(de), a
      000DC0 13                    3352 	inc	de
      000DC1 7E                    3353 	ld	a, (hl)
      000DC2 12                    3354 	ld	(de), a
                                   3355 ;main.c:276: enemies[i].y = ySpawnPositions[posIndex];
      000DC3 F8 06                 3356 	ldhl	sp,	#6
      000DC5 2A                    3357 	ld	a, (hl+)
      000DC6 5F                    3358 	ld	e, a
      000DC7 56                    3359 	ld	d, (hl)
      000DC8 13                    3360 	inc	de
      000DC9 13                    3361 	inc	de
      000DCA 21r12r05              3362 	ld	hl, #_ySpawnPositions
      000DCD 06 00                 3363 	ld	b, #0x00
      000DCF 09                    3364 	add	hl, bc
      000DD0 7E                    3365 	ld	a, (hl)
      000DD1 F8 02                 3366 	ldhl	sp,	#2
      000DD3 22                    3367 	ld	(hl+), a
      000DD4 AF                    3368 	xor	a, a
      000DD5 32                    3369 	ld	(hl-), a
      000DD6 2A                    3370 	ld	a, (hl+)
      000DD7 12                    3371 	ld	(de), a
      000DD8 13                    3372 	inc	de
      000DD9 7E                    3373 	ld	a, (hl)
      000DDA 12                    3374 	ld	(de), a
                                   3375 ;main.c:278: enemies[i].sprite0 = 9;
      000DDB F8 06                 3376 	ldhl	sp,#6
      000DDD 2A                    3377 	ld	a, (hl+)
      000DDE 5F                    3378 	ld	e, a
      000DDF 56                    3379 	ld	d, (hl)
      000DE0 21 04 00              3380 	ld	hl, #0x0004
      000DE3 19                    3381 	add	hl, de
      000DE4 4D                    3382 	ld	c, l
      000DE5 44                    3383 	ld	b, h
      000DE6 36 09                 3384 	ld	(hl), #0x09
                                   3385 ;main.c:279: enemies[i].spriteCount = 1;
      000DE8 F8 06                 3386 	ldhl	sp,#6
      000DEA 2A                    3387 	ld	a, (hl+)
      000DEB 5F                    3388 	ld	e, a
      000DEC 56                    3389 	ld	d, (hl)
      000DED 21 06 00              3390 	ld	hl, #0x0006
      000DF0 19                    3391 	add	hl, de
      000DF1 5D                    3392 	ld	e, l
      000DF2 54                    3393 	ld	d, h
      000DF3 36 01                 3394 	ld	(hl), #0x01
      000DF5 13                    3395 	inc	de
      000DF6 AF                    3396 	xor	a, a
      000DF7 12                    3397 	ld	(de), a
                                   3398 ;main.c:280: enemies[i].alive = 1;
      000DF8 F8 08                 3399 	ldhl	sp,	#8
      000DFA 2A                    3400 	ld	a,	(hl+)
      000DFB 66                    3401 	ld	h, (hl)
      000DFC 6F                    3402 	ld	l, a
      000DFD 36 01                 3403 	ld	(hl), #0x01
                                   3404 ;main.c:281: enemies[i].visible = 1;
      000DFF F8 06                 3405 	ldhl	sp,#6
      000E01 2A                    3406 	ld	a, (hl+)
      000E02 5F                    3407 	ld	e, a
      000E03 56                    3408 	ld	d, (hl)
      000E04 21 09 00              3409 	ld	hl, #0x0009
      000E07 19                    3410 	add	hl, de
      000E08 36 01                 3411 	ld	(hl), #0x01
                                   3412 ;main.c:282: enemies[i].damage = 50;
      000E0A F8 06                 3413 	ldhl	sp,#6
      000E0C 2A                    3414 	ld	a, (hl+)
      000E0D 5F                    3415 	ld	e, a
      000E0E 56                    3416 	ld	d, (hl)
      000E0F 21 0A 00              3417 	ld	hl, #0x000a
      000E12 19                    3418 	add	hl, de
      000E13 36 32                 3419 	ld	(hl), #0x32
                                   3420 ;main.c:283: enemies[i].speed = 35;
      000E15 F8 06                 3421 	ldhl	sp,#6
      000E17 2A                    3422 	ld	a, (hl+)
      000E18 5F                    3423 	ld	e, a
      000E19 56                    3424 	ld	d, (hl)
      000E1A 21 0B 00              3425 	ld	hl, #0x000b
      000E1D 19                    3426 	add	hl, de
      000E1E 5D                    3427 	ld	e, l
      000E1F 54                    3428 	ld	d, h
      000E20 36 23                 3429 	ld	(hl), #0x23
      000E22 13                    3430 	inc	de
      000E23 AF                    3431 	xor	a, a
      000E24 12                    3432 	ld	(de), a
                                   3433 ;main.c:284: enemies[i].accel = 10;
      000E25 F8 06                 3434 	ldhl	sp,#6
      000E27 2A                    3435 	ld	a, (hl+)
      000E28 5F                    3436 	ld	e, a
      000E29 56                    3437 	ld	d, (hl)
      000E2A 21 0D 00              3438 	ld	hl, #0x000d
      000E2D 19                    3439 	add	hl, de
      000E2E 36 0A                 3440 	ld	(hl), #0x0a
                                   3441 ;main.c:285: enemies[i].xSpeed = 0;
      000E30 F8 06                 3442 	ldhl	sp,#6
      000E32 2A                    3443 	ld	a, (hl+)
      000E33 5F                    3444 	ld	e, a
      000E34 56                    3445 	ld	d, (hl)
      000E35 21 0E 00              3446 	ld	hl, #0x000e
      000E38 19                    3447 	add	hl, de
      000E39 5D                    3448 	ld	e, l
      000E3A 54                    3449 	ld	d, h
      000E3B AF                    3450 	xor	a, a
      000E3C 12                    3451 	ld	(de), a
      000E3D 13                    3452 	inc	de
      000E3E 12                    3453 	ld	(de), a
                                   3454 ;main.c:286: enemies[i].ySpeed = 0;
      000E3F F8 06                 3455 	ldhl	sp,#6
      000E41 2A                    3456 	ld	a, (hl+)
      000E42 5F                    3457 	ld	e, a
      000E43 56                    3458 	ld	d, (hl)
      000E44 21 10 00              3459 	ld	hl, #0x0010
      000E47 19                    3460 	add	hl, de
      000E48 5D                    3461 	ld	e, l
      000E49 54                    3462 	ld	d, h
      000E4A AF                    3463 	xor	a, a
      000E4B 12                    3464 	ld	(de), a
      000E4C 13                    3465 	inc	de
      000E4D 12                    3466 	ld	(de), a
                                   3467 ;main.c:291: set_sprite_tile(10+i, enemies[i].sprite0);
      000E4E 0A                    3468 	ld	a, (bc)
      000E4F F8 04                 3469 	ldhl	sp,	#4
      000E51 77                    3470 	ld	(hl), a
      000E52 F8 0A                 3471 	ldhl	sp,	#10
      000E54 7E                    3472 	ld	a, (hl)
      000E55 C6 0A                 3473 	add	a, #0x0a
      000E57 F8 05                 3474 	ldhl	sp,	#5
      000E59 77                    3475 	ld	(hl), a
      000E5A 4E                    3476 	ld	c, (hl)
                                   3477 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E5B F8 08                 3478 	ldhl	sp,	#8
      000E5D 79                    3479 	ld	a, c
      000E5E 22                    3480 	ld	(hl+), a
      000E5F 36 00                 3481 	ld	(hl), #0x00
      000E61 3E 02                 3482 	ld	a, #0x02
      000E63                       3483 00134$:
      000E63 F8 08                 3484 	ldhl	sp,	#8
      000E65 CB 26                 3485 	sla	(hl)
      000E67 23                    3486 	inc	hl
      000E68 CB 16                 3487 	rl	(hl)
      000E6A 3D                    3488 	dec	a
      000E6B 20 F6                 3489 	jr	NZ, 00134$
      000E6D 11r00r00              3490 	ld	de, #_shadow_OAM
      000E70 3A                    3491 	ld	a, (hl-)
      000E71 6E                    3492 	ld	l, (hl)
      000E72 67                    3493 	ld	h, a
      000E73 19                    3494 	add	hl, de
      000E74 E5                    3495 	push	hl
      000E75 7D                    3496 	ld	a, l
      000E76 F8 08                 3497 	ldhl	sp,	#8
      000E78 77                    3498 	ld	(hl), a
      000E79 E1                    3499 	pop	hl
      000E7A 7C                    3500 	ld	a, h
      000E7B F8 07                 3501 	ldhl	sp,	#7
      000E7D 32                    3502 	ld	(hl-), a
      000E7E 2A                    3503 	ld	a, (hl+)
      000E7F 5F                    3504 	ld	e, a
      000E80 56                    3505 	ld	d, (hl)
      000E81 21 02 00              3506 	ld	hl, #0x0002
      000E84 19                    3507 	add	hl, de
      000E85 E5                    3508 	push	hl
      000E86 7D                    3509 	ld	a, l
      000E87 F8 0A                 3510 	ldhl	sp,	#10
      000E89 77                    3511 	ld	(hl), a
      000E8A E1                    3512 	pop	hl
      000E8B 7C                    3513 	ld	a, h
      000E8C F8 09                 3514 	ldhl	sp,	#9
      000E8E 32                    3515 	ld	(hl-), a
      000E8F 2A                    3516 	ld	a, (hl+)
      000E90 5F                    3517 	ld	e, a
      000E91 56                    3518 	ld	d, (hl)
      000E92 F8 04                 3519 	ldhl	sp,	#4
                                   3520 ;main.c:292: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000E94 3A                    3521 	ld	a, (hl-)
      000E95 2B                    3522 	dec	hl
      000E96 12                    3523 	ld	(de), a
      000E97 7E                    3524 	ld	a, (hl)
      000E98 F8 09                 3525 	ldhl	sp,	#9
      000E9A 77                    3526 	ld	(hl), a
      000E9B F8 00                 3527 	ldhl	sp,	#0
      000E9D 7E                    3528 	ld	a, (hl)
      000E9E F8 08                 3529 	ldhl	sp,	#8
      000EA0 77                    3530 	ld	(hl), a
      000EA1 F8 05                 3531 	ldhl	sp,	#5
      000EA3 2A                    3532 	ld	a, (hl+)
      000EA4 23                    3533 	inc	hl
      000EA5 77                    3534 	ld	(hl), a
                                   3535 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000EA6 3A                    3536 	ld	a, (hl-)
      000EA7 22                    3537 	ld	(hl+), a
      000EA8 36 00                 3538 	ld	(hl), #0x00
      000EAA 3E 02                 3539 	ld	a, #0x02
      000EAC                       3540 00135$:
      000EAC F8 06                 3541 	ldhl	sp,	#6
      000EAE CB 26                 3542 	sla	(hl)
      000EB0 23                    3543 	inc	hl
      000EB1 CB 16                 3544 	rl	(hl)
      000EB3 3D                    3545 	dec	a
      000EB4 20 F6                 3546 	jr	NZ, 00135$
      000EB6 11r00r00              3547 	ld	de, #_shadow_OAM
      000EB9 3A                    3548 	ld	a, (hl-)
      000EBA 6E                    3549 	ld	l, (hl)
      000EBB 67                    3550 	ld	h, a
      000EBC 19                    3551 	add	hl, de
      000EBD E5                    3552 	push	hl
      000EBE 7D                    3553 	ld	a, l
      000EBF F8 06                 3554 	ldhl	sp,	#6
      000EC1 77                    3555 	ld	(hl), a
      000EC2 E1                    3556 	pop	hl
      000EC3 7C                    3557 	ld	a, h
      000EC4 F8 05                 3558 	ldhl	sp,	#5
      000EC6 32                    3559 	ld	(hl-), a
      000EC7 2A                    3560 	ld	a, (hl+)
      000EC8 23                    3561 	inc	hl
      000EC9 32                    3562 	ld	(hl-), a
      000ECA 2A                    3563 	ld	a, (hl+)
      000ECB 23                    3564 	inc	hl
                                   3565 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000ECC 32                    3566 	ld	(hl-), a
      000ECD 2A                    3567 	ld	a, (hl+)
      000ECE 5F                    3568 	ld	e, a
      000ECF 2A                    3569 	ld	a, (hl+)
      000ED0 23                    3570 	inc	hl
      000ED1 57                    3571 	ld	d, a
      000ED2 3A                    3572 	ld	a, (hl-)
      000ED3 2B                    3573 	dec	hl
      000ED4 2B                    3574 	dec	hl
      000ED5 12                    3575 	ld	(de), a
      000ED6 2A                    3576 	ld	a, (hl+)
      000ED7 5F                    3577 	ld	e, a
      000ED8 56                    3578 	ld	d, (hl)
      000ED9 6B                    3579 	ld	l, e
      000EDA 62                    3580 	ld	h, d
      000EDB 23                    3581 	inc	hl
      000EDC E5                    3582 	push	hl
      000EDD 7D                    3583 	ld	a, l
      000EDE F8 06                 3584 	ldhl	sp,	#6
      000EE0 77                    3585 	ld	(hl), a
      000EE1 E1                    3586 	pop	hl
      000EE2 7C                    3587 	ld	a, h
      000EE3 F8 05                 3588 	ldhl	sp,	#5
      000EE5 32                    3589 	ld	(hl-), a
      000EE6 2A                    3590 	ld	a, (hl+)
      000EE7 5F                    3591 	ld	e, a
      000EE8 56                    3592 	ld	d, (hl)
      000EE9 F8 08                 3593 	ldhl	sp,	#8
      000EEB 7E                    3594 	ld	a, (hl)
      000EEC 12                    3595 	ld	(de), a
                                   3596 ;main.c:292: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000EED                       3597 00110$:
                                   3598 ;main.c:272: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000EED F8 0A                 3599 	ldhl	sp,	#10
      000EEF 34                    3600 	inc	(hl)
      000EF0 C3r64r0D              3601 	jp	00109$
      000EF3                       3602 00111$:
                                   3603 ;main.c:295: }
      000EF3 E8 0B                 3604 	add	sp, #11
      000EF5 C9                    3605 	ret
                                   3606 ;main.c:298: void move() {
                                   3607 ;	---------------------------------
                                   3608 ; Function move
                                   3609 ; ---------------------------------
      000EF6                       3610 _move::
      000EF6 E8 F8                 3611 	add	sp, #-8
                                   3612 ;main.c:302: if (joydata & J_A) {
      000EF8 FAr5Ar00              3613 	ld	a, (#_joydata)
      000EFB CB 67                 3614 	bit	4, a
      000EFD 28 16                 3615 	jr	Z, 00102$
                                   3616 ;main.c:303: xSpeed += xDir + xDir + xDir;
      000EFF 21r1Br00              3617 	ld	hl, #_xDir
      000F02 7E                    3618 	ld	a, (hl)
      000F03 87                    3619 	add	a, a
      000F04 86                    3620 	add	a, (hl)
      000F05 21r1Dr00              3621 	ld	hl, #_xSpeed
      000F08 86                    3622 	add	a, (hl)
      000F09 77                    3623 	ld	(hl), a
                                   3624 ;main.c:304: ySpeed += yDir + yDir + yDir;
      000F0A 21r1Cr00              3625 	ld	hl, #_yDir
      000F0D 7E                    3626 	ld	a, (hl)
      000F0E 87                    3627 	add	a, a
      000F0F 86                    3628 	add	a, (hl)
      000F10 21r1Er00              3629 	ld	hl, #_ySpeed
      000F13 86                    3630 	add	a, (hl)
      000F14 77                    3631 	ld	(hl), a
      000F15                       3632 00102$:
                                   3633 ;main.c:308: xSpeed = clamp(xSpeed, -100, 100);
      000F15 21 9C 64              3634 	ld	hl, #0x649c
      000F18 E5                    3635 	push	hl
      000F19 FAr1Dr00              3636 	ld	a, (#_xSpeed)
      000F1C F5                    3637 	push	af
      000F1D 33                    3638 	inc	sp
      000F1E CDrBAr07              3639 	call	_clamp
      000F21 E8 03                 3640 	add	sp, #3
      000F23 21r1Dr00              3641 	ld	hl, #_xSpeed
      000F26 73                    3642 	ld	(hl), e
                                   3643 ;main.c:309: ySpeed = clamp(ySpeed, -100, 100);
      000F27 21 9C 64              3644 	ld	hl, #0x649c
      000F2A E5                    3645 	push	hl
      000F2B FAr1Er00              3646 	ld	a, (#_ySpeed)
      000F2E F5                    3647 	push	af
      000F2F 33                    3648 	inc	sp
      000F30 CDrBAr07              3649 	call	_clamp
      000F33 E8 03                 3650 	add	sp, #3
      000F35 21r1Er00              3651 	ld	hl, #_ySpeed
      000F38 73                    3652 	ld	(hl), e
                                   3653 ;main.c:311: int16_t xOverflow = 0;
      000F39 AF                    3654 	xor	a, a
      000F3A F8 02                 3655 	ldhl	sp,	#2
      000F3C 22                    3656 	ld	(hl+), a
      000F3D 77                    3657 	ld	(hl), a
                                   3658 ;main.c:312: int16_t yOverflow = 0;
      000F3E AF                    3659 	xor	a, a
      000F3F F8 00                 3660 	ldhl	sp,	#0
      000F41 22                    3661 	ld	(hl+), a
      000F42 77                    3662 	ld	(hl), a
                                   3663 ;main.c:317: uint8_t xCollisionPoint = playerDrawX -4; 
      000F43 21r23r00              3664 	ld	hl, #_playerDrawX
      000F46 46                    3665 	ld	b, (hl)
      000F47 78                    3666 	ld	a, b
      000F48 C6 FC                 3667 	add	a, #0xfc
      000F4A 4F                    3668 	ld	c, a
                                   3669 ;main.c:319: if (xSpeed > 0) {
      000F4B 21r1Dr00              3670 	ld	hl, #_xSpeed
      000F4E 5E                    3671 	ld	e, (hl)
      000F4F AF                    3672 	xor	a, a
      000F50 57                    3673 	ld	d, a
      000F51 96                    3674 	sub	a, (hl)
      000F52 CB 7B                 3675 	bit	7, e
      000F54 28 07                 3676 	jr	Z, 00229$
      000F56 CB 7A                 3677 	bit	7, d
      000F58 20 08                 3678 	jr	NZ, 00230$
      000F5A BF                    3679 	cp	a, a
      000F5B 18 05                 3680 	jr	00230$
      000F5D                       3681 00229$:
      000F5D CB 7A                 3682 	bit	7, d
      000F5F 28 01                 3683 	jr	Z, 00230$
      000F61 37                    3684 	scf
      000F62                       3685 00230$:
      000F62 30 04                 3686 	jr	NC, 00104$
                                   3687 ;main.c:320: xCollisionPoint = playerDrawX; //right edge
      000F64 21r23r00              3688 	ld	hl, #_playerDrawX
      000F67 4E                    3689 	ld	c, (hl)
      000F68                       3690 00104$:
                                   3691 ;main.c:322: if (xSpeed < 0) {
      000F68 FAr1Dr00              3692 	ld	a, (#_xSpeed)
      000F6B CB 7F                 3693 	bit	7, a
      000F6D 28 04                 3694 	jr	Z, 00106$
                                   3695 ;main.c:323: xCollisionPoint = playerDrawX -8; //left edge
      000F6F 78                    3696 	ld	a, b
      000F70 C6 F8                 3697 	add	a, #0xf8
      000F72 4F                    3698 	ld	c, a
      000F73                       3699 00106$:
                                   3700 ;main.c:327: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      000F73 06 00                 3701 	ld	b, #0x00
      000F75 79                    3702 	ld	a, c
      000F76 21r25r00              3703 	ld	hl, #_bgX
      000F79 86                    3704 	add	a, (hl)
      000F7A 23                    3705 	inc	hl
      000F7B 4F                    3706 	ld	c, a
      000F7C 78                    3707 	ld	a, b
      000F7D 8E                    3708 	adc	a, (hl)
      000F7E 47                    3709 	ld	b, a
      000F7F CB 28                 3710 	sra	b
      000F81 CB 19                 3711 	rr	c
      000F83 CB 28                 3712 	sra	b
      000F85 CB 19                 3713 	rr	c
      000F87 CB 28                 3714 	sra	b
      000F89 CB 19                 3715 	rr	c
      000F8B 11 20 00              3716 	ld	de, #0x0020
      000F8E D5                    3717 	push	de
      000F8F C5                    3718 	push	bc
      000F90 CDr00r00              3719 	call	__modsint
      000F93 E8 04                 3720 	add	sp, #4
                                   3721 ;main.c:331: uint8_t bgindY = ((playerDrawY-12 + bgY) >> 3)%32; 
      000F95 FAr24r00              3722 	ld	a, (#_playerDrawY)
      000F98 06 00                 3723 	ld	b, #0x00
      000F9A C6 F4                 3724 	add	a, #0xf4
      000F9C 4F                    3725 	ld	c, a
      000F9D 78                    3726 	ld	a, b
      000F9E CE FF                 3727 	adc	a, #0xff
      000FA0 47                    3728 	ld	b, a
      000FA1 79                    3729 	ld	a, c
      000FA2 21r27r00              3730 	ld	hl, #_bgY
      000FA5 86                    3731 	add	a, (hl)
      000FA6 23                    3732 	inc	hl
      000FA7 4F                    3733 	ld	c, a
      000FA8 78                    3734 	ld	a, b
      000FA9 8E                    3735 	adc	a, (hl)
      000FAA 47                    3736 	ld	b, a
      000FAB CB 28                 3737 	sra	b
      000FAD CB 19                 3738 	rr	c
      000FAF CB 28                 3739 	sra	b
      000FB1 CB 19                 3740 	rr	c
      000FB3 CB 28                 3741 	sra	b
      000FB5 CB 19                 3742 	rr	c
      000FB7 D5                    3743 	push	de
      000FB8 21 20 00              3744 	ld	hl, #0x0020
      000FBB E5                    3745 	push	hl
      000FBC C5                    3746 	push	bc
      000FBD CDr00r00              3747 	call	__modsint
      000FC0 E8 04                 3748 	add	sp, #4
      000FC2 6B                    3749 	ld	l, e
                                   3750 ;	spillPairReg hl
                                   3751 ;	spillPairReg hl
                                   3752 ;	spillPairReg hl
                                   3753 ;	spillPairReg hl
      000FC3 D1                    3754 	pop	de
                                   3755 ;main.c:334: uint16_t ind = 32*bgindY + bgindX;
      000FC4 26 00                 3756 	ld	h, #0x00
                                   3757 ;	spillPairReg hl
                                   3758 ;	spillPairReg hl
      000FC6 29                    3759 	add	hl, hl
      000FC7 29                    3760 	add	hl, hl
      000FC8 29                    3761 	add	hl, hl
      000FC9 29                    3762 	add	hl, hl
      000FCA 29                    3763 	add	hl, hl
      000FCB 19                    3764 	add	hl, de
                                   3765 ;main.c:335: uint8_t result = background1[ind] != BLANK[0];
      000FCC 01r87r00              3766 	ld	bc,#_background1
      000FCF 09                    3767 	add	hl,bc
      000FD0 4E                    3768 	ld	c, (hl)
      000FD1 21r07r05              3769 	ld	hl, #_BLANK
      000FD4 46                    3770 	ld	b, (hl)
      000FD5 79                    3771 	ld	a, c
      000FD6 90                    3772 	sub	a, b
      000FD7 3E 01                 3773 	ld	a, #0x01
      000FD9 28 01                 3774 	jr	Z, 00232$
      000FDB AF                    3775 	xor	a, a
      000FDC                       3776 00232$:
                                   3777 ;main.c:336: if (result == 0) {
      000FDC EE 01                 3778 	xor	a,#0x01
      000FDE C2rC4r10              3779 	jp	NZ, 00111$
                                   3780 ;main.c:337: playerX+=xSpeed;
      000FE1 FAr1Dr00              3781 	ld	a, (#_xSpeed)
      000FE4 4F                    3782 	ld	c, a
      000FE5 07                    3783 	rlca
      000FE6 9F                    3784 	sbc	a, a
      000FE7 47                    3785 	ld	b, a
      000FE8 21r1Fr00              3786 	ld	hl, #_playerX
      000FEB 6E                    3787 	ld	l, (hl)
                                   3788 ;	spillPairReg hl
                                   3789 ;	spillPairReg hl
      000FEC FAr20r00              3790 	ld	a, (_playerX + 1)
      000FEF 67                    3791 	ld	h, a
                                   3792 ;	spillPairReg hl
                                   3793 ;	spillPairReg hl
      000FF0 09                    3794 	add	hl, bc
      000FF1 4D                    3795 	ld	c, l
      000FF2 7C                    3796 	ld	a, h
      000FF3 21r1Fr00              3797 	ld	hl, #_playerX
      000FF6 71                    3798 	ld	(hl), c
      000FF7 23                    3799 	inc	hl
                                   3800 ;main.c:339: uint16_t limitedPlayerX = u16Clamp(playerX, 58<<5, 110<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      000FF8 32                    3801 	ld	(hl-), a
      000FF9 11 C0 0D              3802 	ld	de, #0x0dc0
      000FFC D5                    3803 	push	de
      000FFD 11 40 07              3804 	ld	de, #0x0740
      001000 D5                    3805 	push	de
      001001 2A                    3806 	ld	a, (hl+)
      001002 5F                    3807 	ld	e, a
      001003 56                    3808 	ld	d, (hl)
      001004 D5                    3809 	push	de
      001005 CDr11r08              3810 	call	_u16Clamp
      001008 E8 06                 3811 	add	sp, #6
      00100A 4B                    3812 	ld	c, e
      00100B 42                    3813 	ld	b, d
                                   3814 ;main.c:341: xOverflow = (playerX - limitedPlayerX);
      00100C 21r1Fr00              3815 	ld	hl, #_playerX
      00100F 2A                    3816 	ld	a, (hl+)
      001010 91                    3817 	sub	a, c
      001011 5F                    3818 	ld	e, a
      001012 7E                    3819 	ld	a, (hl)
      001013 98                    3820 	sbc	a, b
      001014 57                    3821 	ld	d, a
      001015 F8 04                 3822 	ldhl	sp,	#4
      001017 7B                    3823 	ld	a, e
      001018 22                    3824 	ld	(hl+), a
                                   3825 ;main.c:342: if (xOverflow >= 0) {
      001019 7A                    3826 	ld	a, d
      00101A 32                    3827 	ld	(hl-), a
      00101B 2A                    3828 	ld	a, (hl+)
      00101C 23                    3829 	inc	hl
      00101D 32                    3830 	ld	(hl-), a
      00101E 2A                    3831 	ld	a, (hl+)
      00101F 23                    3832 	inc	hl
      001020 77                    3833 	ld	(hl), a
      001021 CB 7E                 3834 	bit	7, (hl)
      001023 20 29                 3835 	jr	NZ, 00108$
                                   3836 ;main.c:343: xOverflow = xOverflow >> 5;
      001025 F8 04                 3837 	ldhl	sp,	#4
      001027 3A                    3838 	ld	a, (hl-)
      001028 2B                    3839 	dec	hl
      001029 77                    3840 	ld	(hl), a
      00102A F8 05                 3841 	ldhl	sp,	#5
      00102C 3A                    3842 	ld	a, (hl-)
      00102D 2B                    3843 	dec	hl
      00102E 77                    3844 	ld	(hl), a
      00102F CB 2E                 3845 	sra	(hl)
      001031 2B                    3846 	dec	hl
      001032 CB 1E                 3847 	rr	(hl)
      001034 23                    3848 	inc	hl
      001035 CB 2E                 3849 	sra	(hl)
      001037 2B                    3850 	dec	hl
      001038 CB 1E                 3851 	rr	(hl)
      00103A 23                    3852 	inc	hl
      00103B CB 2E                 3853 	sra	(hl)
      00103D 2B                    3854 	dec	hl
      00103E CB 1E                 3855 	rr	(hl)
      001040 23                    3856 	inc	hl
      001041 CB 2E                 3857 	sra	(hl)
      001043 2B                    3858 	dec	hl
      001044 CB 1E                 3859 	rr	(hl)
      001046 23                    3860 	inc	hl
      001047 CB 2E                 3861 	sra	(hl)
      001049 2B                    3862 	dec	hl
      00104A CB 1E                 3863 	rr	(hl)
      00104C 18 3E                 3864 	jr	00109$
      00104E                       3865 00108$:
                                   3866 ;main.c:346: xOverflow = -((-xOverflow) >> 5);
      00104E 11 00 00              3867 	ld	de, #0x0000
      001051 F8 04                 3868 	ldhl	sp,	#4
      001053 2A                    3869 	ld	a,	(hl+)
      001054 66                    3870 	ld	h, (hl)
      001055 6F                    3871 	ld	l, a
      001056 7B                    3872 	ld	a, e
      001057 95                    3873 	sub	a, l
      001058 5F                    3874 	ld	e, a
      001059 7A                    3875 	ld	a, d
      00105A 9C                    3876 	sbc	a, h
      00105B F8 07                 3877 	ldhl	sp,	#7
      00105D 32                    3878 	ld	(hl-), a
      00105E 7B                    3879 	ld	a, e
      00105F 22                    3880 	ld	(hl+), a
      001060 CB 2E                 3881 	sra	(hl)
      001062 2B                    3882 	dec	hl
      001063 CB 1E                 3883 	rr	(hl)
      001065 23                    3884 	inc	hl
      001066 CB 2E                 3885 	sra	(hl)
      001068 2B                    3886 	dec	hl
      001069 CB 1E                 3887 	rr	(hl)
      00106B 23                    3888 	inc	hl
      00106C CB 2E                 3889 	sra	(hl)
      00106E 2B                    3890 	dec	hl
      00106F CB 1E                 3891 	rr	(hl)
      001071 23                    3892 	inc	hl
      001072 CB 2E                 3893 	sra	(hl)
      001074 2B                    3894 	dec	hl
      001075 CB 1E                 3895 	rr	(hl)
      001077 23                    3896 	inc	hl
      001078 CB 2E                 3897 	sra	(hl)
      00107A 2B                    3898 	dec	hl
      00107B CB 1E                 3899 	rr	(hl)
      00107D 11 00 00              3900 	ld	de, #0x0000
      001080 2A                    3901 	ld	a,	(hl+)
      001081 66                    3902 	ld	h, (hl)
      001082 6F                    3903 	ld	l, a
      001083 7B                    3904 	ld	a, e
      001084 95                    3905 	sub	a, l
      001085 5F                    3906 	ld	e, a
      001086 7A                    3907 	ld	a, d
      001087 9C                    3908 	sbc	a, h
      001088 F8 03                 3909 	ldhl	sp,	#3
      00108A 32                    3910 	ld	(hl-), a
      00108B 73                    3911 	ld	(hl), e
      00108C                       3912 00109$:
                                   3913 ;main.c:348: bgX += xOverflow;
      00108C 21r25r00              3914 	ld	hl, #_bgX
      00108F 2A                    3915 	ld	a, (hl+)
      001090 5F                    3916 	ld	e, a
      001091 56                    3917 	ld	d, (hl)
      001092 F8 02                 3918 	ldhl	sp,	#2
      001094 2A                    3919 	ld	a,	(hl+)
      001095 66                    3920 	ld	h, (hl)
      001096 6F                    3921 	ld	l, a
      001097 19                    3922 	add	hl, de
      001098 5D                    3923 	ld	e, l
      001099 54                    3924 	ld	d, h
      00109A 21r25r00              3925 	ld	hl, #_bgX
      00109D 7B                    3926 	ld	a, e
      00109E 22                    3927 	ld	(hl+), a
      00109F 72                    3928 	ld	(hl), d
                                   3929 ;main.c:349: playerX = limitedPlayerX;
      0010A0 21r1Fr00              3930 	ld	hl, #_playerX
      0010A3 79                    3931 	ld	a, c
      0010A4 22                    3932 	ld	(hl+), a
                                   3933 ;main.c:350: playerDrawX=playerX >> 5;
      0010A5 78                    3934 	ld	a, b
      0010A6 32                    3935 	ld	(hl-), a
      0010A7 2A                    3936 	ld	a, (hl+)
      0010A8 4F                    3937 	ld	c, a
      0010A9 46                    3938 	ld	b, (hl)
      0010AA CB 38                 3939 	srl	b
      0010AC CB 19                 3940 	rr	c
      0010AE CB 38                 3941 	srl	b
      0010B0 CB 19                 3942 	rr	c
      0010B2 CB 38                 3943 	srl	b
      0010B4 CB 19                 3944 	rr	c
      0010B6 CB 38                 3945 	srl	b
      0010B8 CB 19                 3946 	rr	c
      0010BA CB 38                 3947 	srl	b
      0010BC CB 19                 3948 	rr	c
      0010BE 21r23r00              3949 	ld	hl, #_playerDrawX
      0010C1 71                    3950 	ld	(hl), c
      0010C2 18 05                 3951 	jr	00112$
      0010C4                       3952 00111$:
                                   3953 ;main.c:358: xSpeed = 0;
      0010C4 21r1Dr00              3954 	ld	hl, #_xSpeed
      0010C7 36 00                 3955 	ld	(hl), #0x00
      0010C9                       3956 00112$:
                                   3957 ;main.c:366: uint8_t yCollisionPoint = playerDrawY -12; 
      0010C9 21r24r00              3958 	ld	hl, #_playerDrawY
      0010CC 46                    3959 	ld	b, (hl)
      0010CD 78                    3960 	ld	a, b
      0010CE C6 F4                 3961 	add	a, #0xf4
      0010D0 4F                    3962 	ld	c, a
                                   3963 ;main.c:368: if (ySpeed > 0) {
      0010D1 21r1Er00              3964 	ld	hl, #_ySpeed
      0010D4 5E                    3965 	ld	e, (hl)
      0010D5 AF                    3966 	xor	a, a
      0010D6 57                    3967 	ld	d, a
      0010D7 96                    3968 	sub	a, (hl)
      0010D8 CB 7B                 3969 	bit	7, e
      0010DA 28 07                 3970 	jr	Z, 00233$
      0010DC CB 7A                 3971 	bit	7, d
      0010DE 20 08                 3972 	jr	NZ, 00234$
      0010E0 BF                    3973 	cp	a, a
      0010E1 18 05                 3974 	jr	00234$
      0010E3                       3975 00233$:
      0010E3 CB 7A                 3976 	bit	7, d
      0010E5 28 01                 3977 	jr	Z, 00234$
      0010E7 37                    3978 	scf
      0010E8                       3979 00234$:
      0010E8 30 04                 3980 	jr	NC, 00114$
                                   3981 ;main.c:369: yCollisionPoint = playerDrawY - 8; //bottom edge, only half the height, so -8
      0010EA 78                    3982 	ld	a, b
      0010EB C6 F8                 3983 	add	a, #0xf8
      0010ED 4F                    3984 	ld	c, a
      0010EE                       3985 00114$:
                                   3986 ;main.c:371: if (ySpeed < 0) {
      0010EE FAr1Er00              3987 	ld	a, (#_ySpeed)
      0010F1 CB 7F                 3988 	bit	7, a
      0010F3 28 04                 3989 	jr	Z, 00116$
                                   3990 ;main.c:372: yCollisionPoint = playerDrawY -16; //top edge, 
      0010F5 78                    3991 	ld	a, b
      0010F6 C6 F0                 3992 	add	a, #0xf0
      0010F8 4F                    3993 	ld	c, a
      0010F9                       3994 00116$:
                                   3995 ;main.c:376: bgindX = ((playerDrawX -4 + bgX) >> 3)%32;
      0010F9 FAr23r00              3996 	ld	a, (#_playerDrawX)
      0010FC 06 00                 3997 	ld	b, #0x00
      0010FE C6 FC                 3998 	add	a, #0xfc
      001100 5F                    3999 	ld	e, a
      001101 78                    4000 	ld	a, b
      001102 CE FF                 4001 	adc	a, #0xff
      001104 57                    4002 	ld	d, a
      001105 7B                    4003 	ld	a, e
      001106 21r25r00              4004 	ld	hl, #_bgX
      001109 86                    4005 	add	a, (hl)
      00110A 23                    4006 	inc	hl
      00110B 5F                    4007 	ld	e, a
      00110C 7A                    4008 	ld	a, d
      00110D 8E                    4009 	adc	a, (hl)
      00110E 57                    4010 	ld	d, a
      00110F CB 2A                 4011 	sra	d
      001111 CB 1B                 4012 	rr	e
      001113 CB 2A                 4013 	sra	d
      001115 CB 1B                 4014 	rr	e
      001117 CB 2A                 4015 	sra	d
      001119 CB 1B                 4016 	rr	e
      00111B C5                    4017 	push	bc
      00111C 21 20 00              4018 	ld	hl, #0x0020
      00111F E5                    4019 	push	hl
      001120 D5                    4020 	push	de
      001121 CDr00r00              4021 	call	__modsint
      001124 E8 04                 4022 	add	sp, #4
      001126 C1                    4023 	pop	bc
                                   4024 ;main.c:379: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001127 06 00                 4025 	ld	b, #0x00
      001129 79                    4026 	ld	a, c
      00112A 21r27r00              4027 	ld	hl, #_bgY
      00112D 86                    4028 	add	a, (hl)
      00112E 23                    4029 	inc	hl
      00112F 4F                    4030 	ld	c, a
      001130 78                    4031 	ld	a, b
      001131 8E                    4032 	adc	a, (hl)
      001132 47                    4033 	ld	b, a
      001133 CB 28                 4034 	sra	b
      001135 CB 19                 4035 	rr	c
      001137 CB 28                 4036 	sra	b
      001139 CB 19                 4037 	rr	c
      00113B CB 28                 4038 	sra	b
      00113D CB 19                 4039 	rr	c
      00113F D5                    4040 	push	de
      001140 21 20 00              4041 	ld	hl, #0x0020
      001143 E5                    4042 	push	hl
      001144 C5                    4043 	push	bc
      001145 CDr00r00              4044 	call	__modsint
      001148 E8 04                 4045 	add	sp, #4
      00114A 6B                    4046 	ld	l, e
                                   4047 ;	spillPairReg hl
                                   4048 ;	spillPairReg hl
      00114B D1                    4049 	pop	de
                                   4050 ;main.c:382: ind = 32*bgindY + bgindX;
      00114C 26 00                 4051 	ld	h, #0x00
                                   4052 ;	spillPairReg hl
                                   4053 ;	spillPairReg hl
      00114E 29                    4054 	add	hl, hl
      00114F 29                    4055 	add	hl, hl
      001150 29                    4056 	add	hl, hl
      001151 29                    4057 	add	hl, hl
      001152 29                    4058 	add	hl, hl
      001153 19                    4059 	add	hl, de
                                   4060 ;main.c:383: result = background1[ind] != BLANK[0];
      001154 11r87r00              4061 	ld	de, #_background1
      001157 19                    4062 	add	hl, de
      001158 4E                    4063 	ld	c, (hl)
      001159 21r07r05              4064 	ld	hl, #_BLANK
      00115C 46                    4065 	ld	b, (hl)
      00115D 79                    4066 	ld	a, c
      00115E 90                    4067 	sub	a, b
      00115F 3E 01                 4068 	ld	a, #0x01
      001161 28 01                 4069 	jr	Z, 00236$
      001163 AF                    4070 	xor	a, a
      001164                       4071 00236$:
                                   4072 ;main.c:384: if (result == 0) {
      001164 EE 01                 4073 	xor	a,#0x01
      001166 C2r48r12              4074 	jp	NZ, 00121$
                                   4075 ;main.c:385: playerY += ySpeed;
      001169 FAr1Er00              4076 	ld	a, (#_ySpeed)
      00116C 4F                    4077 	ld	c, a
      00116D 07                    4078 	rlca
      00116E 9F                    4079 	sbc	a, a
      00116F 47                    4080 	ld	b, a
      001170 21r21r00              4081 	ld	hl, #_playerY
      001173 6E                    4082 	ld	l, (hl)
                                   4083 ;	spillPairReg hl
                                   4084 ;	spillPairReg hl
      001174 FAr22r00              4085 	ld	a, (_playerY + 1)
      001177 67                    4086 	ld	h, a
                                   4087 ;	spillPairReg hl
                                   4088 ;	spillPairReg hl
      001178 09                    4089 	add	hl, bc
      001179 4D                    4090 	ld	c, l
      00117A 44                    4091 	ld	b, h
      00117B 21r21r00              4092 	ld	hl, #_playerY
      00117E 79                    4093 	ld	a, c
      00117F 22                    4094 	ld	(hl+), a
                                   4095 ;main.c:387: uint16_t limitedPlayerY = u16Clamp(playerY, 61<<5, 107<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001180 78                    4096 	ld	a, b
      001181 32                    4097 	ld	(hl-), a
      001182 11 60 0D              4098 	ld	de, #0x0d60
      001185 D5                    4099 	push	de
      001186 11 A0 07              4100 	ld	de, #0x07a0
      001189 D5                    4101 	push	de
      00118A 2A                    4102 	ld	a, (hl+)
      00118B 5F                    4103 	ld	e, a
      00118C 56                    4104 	ld	d, (hl)
      00118D D5                    4105 	push	de
      00118E CDr11r08              4106 	call	_u16Clamp
      001191 E8 06                 4107 	add	sp, #6
      001193 F8 04                 4108 	ldhl	sp,	#4
      001195 7B                    4109 	ld	a, e
      001196 22                    4110 	ld	(hl+), a
      001197 72                    4111 	ld	(hl), d
                                   4112 ;main.c:389: yOverflow = (playerY - limitedPlayerY);
      001198 21r21r00              4113 	ld	hl, #_playerY
      00119B 2A                    4114 	ld	a, (hl+)
      00119C 5F                    4115 	ld	e, a
      00119D 56                    4116 	ld	d, (hl)
      00119E F8 04                 4117 	ldhl	sp,	#4
      0011A0 2A                    4118 	ld	a,	(hl+)
      0011A1 66                    4119 	ld	h, (hl)
      0011A2 6F                    4120 	ld	l, a
      0011A3 7B                    4121 	ld	a, e
      0011A4 95                    4122 	sub	a, l
      0011A5 5F                    4123 	ld	e, a
      0011A6 7A                    4124 	ld	a, d
      0011A7 9C                    4125 	sbc	a, h
      0011A8 47                    4126 	ld	b, a
      0011A9 4B                    4127 	ld	c, e
      0011AA 33                    4128 	inc	sp
      0011AB 33                    4129 	inc	sp
      0011AC C5                    4130 	push	bc
      0011AD CB 78                 4131 	bit	7, b
      0011AF 20 21                 4132 	jr	NZ, 00118$
                                   4133 ;main.c:391: yOverflow = yOverflow >> 5;
      0011B1 F8 01                 4134 	ldhl	sp,	#1
      0011B3 CB 2E                 4135 	sra	(hl)
      0011B5 2B                    4136 	dec	hl
      0011B6 CB 1E                 4137 	rr	(hl)
      0011B8 23                    4138 	inc	hl
      0011B9 CB 2E                 4139 	sra	(hl)
      0011BB 2B                    4140 	dec	hl
      0011BC CB 1E                 4141 	rr	(hl)
      0011BE 23                    4142 	inc	hl
      0011BF CB 2E                 4143 	sra	(hl)
      0011C1 2B                    4144 	dec	hl
      0011C2 CB 1E                 4145 	rr	(hl)
      0011C4 23                    4146 	inc	hl
      0011C5 CB 2E                 4147 	sra	(hl)
      0011C7 2B                    4148 	dec	hl
      0011C8 CB 1E                 4149 	rr	(hl)
      0011CA 23                    4150 	inc	hl
      0011CB CB 2E                 4151 	sra	(hl)
      0011CD 2B                    4152 	dec	hl
      0011CE CB 1E                 4153 	rr	(hl)
      0011D0 18 3B                 4154 	jr	00119$
      0011D2                       4155 00118$:
                                   4156 ;main.c:394: yOverflow = -((-yOverflow) >> 5);
      0011D2 11 00 00              4157 	ld	de, #0x0000
      0011D5 E1                    4158 	pop	hl
      0011D6 E5                    4159 	push	hl
      0011D7 7B                    4160 	ld	a, e
      0011D8 95                    4161 	sub	a, l
      0011D9 5F                    4162 	ld	e, a
      0011DA 7A                    4163 	ld	a, d
      0011DB 9C                    4164 	sbc	a, h
      0011DC F8 07                 4165 	ldhl	sp,	#7
      0011DE 32                    4166 	ld	(hl-), a
      0011DF 7B                    4167 	ld	a, e
      0011E0 22                    4168 	ld	(hl+), a
      0011E1 CB 2E                 4169 	sra	(hl)
      0011E3 2B                    4170 	dec	hl
      0011E4 CB 1E                 4171 	rr	(hl)
      0011E6 23                    4172 	inc	hl
      0011E7 CB 2E                 4173 	sra	(hl)
      0011E9 2B                    4174 	dec	hl
      0011EA CB 1E                 4175 	rr	(hl)
      0011EC 23                    4176 	inc	hl
      0011ED CB 2E                 4177 	sra	(hl)
      0011EF 2B                    4178 	dec	hl
      0011F0 CB 1E                 4179 	rr	(hl)
      0011F2 23                    4180 	inc	hl
      0011F3 CB 2E                 4181 	sra	(hl)
      0011F5 2B                    4182 	dec	hl
      0011F6 CB 1E                 4183 	rr	(hl)
      0011F8 23                    4184 	inc	hl
      0011F9 CB 2E                 4185 	sra	(hl)
      0011FB 2B                    4186 	dec	hl
      0011FC CB 1E                 4187 	rr	(hl)
      0011FE 11 00 00              4188 	ld	de, #0x0000
      001201 2A                    4189 	ld	a,	(hl+)
      001202 66                    4190 	ld	h, (hl)
      001203 6F                    4191 	ld	l, a
      001204 7B                    4192 	ld	a, e
      001205 95                    4193 	sub	a, l
      001206 5F                    4194 	ld	e, a
      001207 7A                    4195 	ld	a, d
      001208 9C                    4196 	sbc	a, h
      001209 F8 01                 4197 	ldhl	sp,	#1
      00120B 32                    4198 	ld	(hl-), a
      00120C 73                    4199 	ld	(hl), e
      00120D                       4200 00119$:
                                   4201 ;main.c:396: bgY += yOverflow;
      00120D 21r27r00              4202 	ld	hl, #_bgY
      001210 2A                    4203 	ld	a, (hl+)
      001211 5F                    4204 	ld	e, a
      001212 56                    4205 	ld	d, (hl)
      001213 E1                    4206 	pop	hl
      001214 E5                    4207 	push	hl
      001215 19                    4208 	add	hl, de
      001216 5D                    4209 	ld	e, l
      001217 54                    4210 	ld	d, h
      001218 21r27r00              4211 	ld	hl, #_bgY
      00121B 7B                    4212 	ld	a, e
      00121C 22                    4213 	ld	(hl+), a
      00121D 72                    4214 	ld	(hl), d
                                   4215 ;main.c:397: playerY = limitedPlayerY;
      00121E F8 04                 4216 	ldhl	sp,	#4
      001220 7E                    4217 	ld	a, (hl)
      001221 EAr21r00              4218 	ld	(#_playerY),a
      001224 F8 05                 4219 	ldhl	sp,	#5
      001226 7E                    4220 	ld	a, (hl)
      001227 21r22r00              4221 	ld	hl, #_playerY + 1
                                   4222 ;main.c:398: playerDrawY=playerY >> 5;
      00122A 32                    4223 	ld	(hl-), a
      00122B 2A                    4224 	ld	a, (hl+)
      00122C 4F                    4225 	ld	c, a
      00122D 46                    4226 	ld	b, (hl)
      00122E CB 38                 4227 	srl	b
      001230 CB 19                 4228 	rr	c
      001232 CB 38                 4229 	srl	b
      001234 CB 19                 4230 	rr	c
      001236 CB 38                 4231 	srl	b
      001238 CB 19                 4232 	rr	c
      00123A CB 38                 4233 	srl	b
      00123C CB 19                 4234 	rr	c
      00123E CB 38                 4235 	srl	b
      001240 CB 19                 4236 	rr	c
      001242 21r24r00              4237 	ld	hl, #_playerDrawY
      001245 71                    4238 	ld	(hl), c
      001246 18 05                 4239 	jr	00122$
      001248                       4240 00121$:
                                   4241 ;main.c:403: ySpeed = 0;
      001248 21r1Er00              4242 	ld	hl, #_ySpeed
      00124B 36 00                 4243 	ld	(hl), #0x00
      00124D                       4244 00122$:
                                   4245 ;main.c:407: move_sprite(0, playerDrawX, playerDrawY);
      00124D 21r24r00              4246 	ld	hl, #_playerDrawY
      001250 4E                    4247 	ld	c, (hl)
      001251 21r23r00              4248 	ld	hl, #_playerDrawX
      001254 46                    4249 	ld	b, (hl)
                                   4250 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001255 21r00r00              4251 	ld	hl, #_shadow_OAM
                                   4252 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001258 79                    4253 	ld	a, c
      001259 22                    4254 	ld	(hl+), a
      00125A 70                    4255 	ld	(hl), b
                                   4256 ;main.c:410: if (bgX >= 256) {
      00125B 21r25r00              4257 	ld	hl, #_bgX
      00125E 2A                    4258 	ld	a, (hl+)
      00125F 4F                    4259 	ld	c, a
      001260 46                    4260 	ld	b, (hl)
      001261 78                    4261 	ld	a, b
      001262 EE 80                 4262 	xor	a, #0x80
      001264 D6 81                 4263 	sub	a, #0x81
      001266 38 0F                 4264 	jr	C, 00124$
                                   4265 ;main.c:411: bgX = bgX % 256;
      001268 AF                    4266 	xor	a, a
      001269 3C                    4267 	inc	a
      00126A F5                    4268 	push	af
      00126B C5                    4269 	push	bc
      00126C CDr00r00              4270 	call	__modsint
      00126F E8 04                 4271 	add	sp, #4
      001271 21r25r00              4272 	ld	hl, #_bgX
      001274 7B                    4273 	ld	a, e
      001275 22                    4274 	ld	(hl+), a
      001276 72                    4275 	ld	(hl), d
      001277                       4276 00124$:
                                   4277 ;main.c:413: if (bgX < 0) {
      001277 FAr25r00              4278 	ld	a, (#_bgX)
      00127A F8 06                 4279 	ldhl	sp,	#6
      00127C 77                    4280 	ld	(hl), a
      00127D FAr26r00              4281 	ld	a, (#_bgX + 1)
      001280 F8 07                 4282 	ldhl	sp,	#7
      001282 77                    4283 	ld	(hl), a
      001283 CB 7E                 4284 	bit	7, (hl)
      001285 28 2D                 4285 	jr	Z, 00126$
                                   4286 ;main.c:414: bgX = 255 - (bgX % 256);
      001287 2B                    4287 	dec	hl
      001288 AF                    4288 	xor	a, a
      001289 3C                    4289 	inc	a
      00128A F5                    4290 	push	af
      00128B 2A                    4291 	ld	a, (hl+)
      00128C 5F                    4292 	ld	e, a
      00128D 56                    4293 	ld	d, (hl)
      00128E D5                    4294 	push	de
      00128F CDr00r00              4295 	call	__modsint
      001292 E8 04                 4296 	add	sp, #4
      001294 F8 04                 4297 	ldhl	sp,	#4
      001296 7B                    4298 	ld	a, e
      001297 22                    4299 	ld	(hl+), a
      001298 72                    4300 	ld	(hl), d
      001299 11 FF 00              4301 	ld	de, #0x00ff
      00129C F8 04                 4302 	ldhl	sp,	#4
      00129E 2A                    4303 	ld	a,	(hl+)
      00129F 66                    4304 	ld	h, (hl)
      0012A0 6F                    4305 	ld	l, a
      0012A1 7B                    4306 	ld	a, e
      0012A2 95                    4307 	sub	a, l
      0012A3 5F                    4308 	ld	e, a
      0012A4 7A                    4309 	ld	a, d
      0012A5 9C                    4310 	sbc	a, h
      0012A6 F8 07                 4311 	ldhl	sp,	#7
      0012A8 32                    4312 	ld	(hl-), a
      0012A9 73                    4313 	ld	(hl), e
      0012AA 7E                    4314 	ld	a, (hl)
      0012AB EAr25r00              4315 	ld	(#_bgX),a
      0012AE F8 07                 4316 	ldhl	sp,	#7
      0012B0 7E                    4317 	ld	a, (hl)
      0012B1 EAr26r00              4318 	ld	(#_bgX + 1),a
      0012B4                       4319 00126$:
                                   4320 ;main.c:416: if (bgY >= 256) {
      0012B4 21r27r00              4321 	ld	hl, #_bgY
      0012B7 2A                    4322 	ld	a, (hl+)
      0012B8 4F                    4323 	ld	c, a
      0012B9 46                    4324 	ld	b, (hl)
      0012BA 78                    4325 	ld	a, b
      0012BB EE 80                 4326 	xor	a, #0x80
      0012BD D6 81                 4327 	sub	a, #0x81
      0012BF 38 0F                 4328 	jr	C, 00128$
                                   4329 ;main.c:417: bgY = bgY % 256;
      0012C1 AF                    4330 	xor	a, a
      0012C2 3C                    4331 	inc	a
      0012C3 F5                    4332 	push	af
      0012C4 C5                    4333 	push	bc
      0012C5 CDr00r00              4334 	call	__modsint
      0012C8 E8 04                 4335 	add	sp, #4
      0012CA 21r27r00              4336 	ld	hl, #_bgY
      0012CD 7B                    4337 	ld	a, e
      0012CE 22                    4338 	ld	(hl+), a
      0012CF 72                    4339 	ld	(hl), d
      0012D0                       4340 00128$:
                                   4341 ;main.c:419: if (bgY < 0) {
      0012D0 FAr27r00              4342 	ld	a, (#_bgY)
      0012D3 F8 06                 4343 	ldhl	sp,	#6
      0012D5 77                    4344 	ld	(hl), a
      0012D6 FAr28r00              4345 	ld	a, (#_bgY + 1)
      0012D9 F8 07                 4346 	ldhl	sp,	#7
      0012DB 77                    4347 	ld	(hl), a
      0012DC CB 7E                 4348 	bit	7, (hl)
      0012DE 28 2D                 4349 	jr	Z, 00130$
                                   4350 ;main.c:420: bgY = 255 - (bgY % 256);
      0012E0 2B                    4351 	dec	hl
      0012E1 AF                    4352 	xor	a, a
      0012E2 3C                    4353 	inc	a
      0012E3 F5                    4354 	push	af
      0012E4 2A                    4355 	ld	a, (hl+)
      0012E5 5F                    4356 	ld	e, a
      0012E6 56                    4357 	ld	d, (hl)
      0012E7 D5                    4358 	push	de
      0012E8 CDr00r00              4359 	call	__modsint
      0012EB E8 04                 4360 	add	sp, #4
      0012ED F8 04                 4361 	ldhl	sp,	#4
      0012EF 7B                    4362 	ld	a, e
      0012F0 22                    4363 	ld	(hl+), a
      0012F1 72                    4364 	ld	(hl), d
      0012F2 11 FF 00              4365 	ld	de, #0x00ff
      0012F5 F8 04                 4366 	ldhl	sp,	#4
      0012F7 2A                    4367 	ld	a,	(hl+)
      0012F8 66                    4368 	ld	h, (hl)
      0012F9 6F                    4369 	ld	l, a
      0012FA 7B                    4370 	ld	a, e
      0012FB 95                    4371 	sub	a, l
      0012FC 5F                    4372 	ld	e, a
      0012FD 7A                    4373 	ld	a, d
      0012FE 9C                    4374 	sbc	a, h
      0012FF F8 07                 4375 	ldhl	sp,	#7
      001301 32                    4376 	ld	(hl-), a
      001302 73                    4377 	ld	(hl), e
      001303 7E                    4378 	ld	a, (hl)
      001304 EAr27r00              4379 	ld	(#_bgY),a
      001307 F8 07                 4380 	ldhl	sp,	#7
      001309 7E                    4381 	ld	a, (hl)
      00130A EAr28r00              4382 	ld	(#_bgY + 1),a
      00130D                       4383 00130$:
                                   4384 ;main.c:423: move_bkg(bgX, bgY);
      00130D 21r27r00              4385 	ld	hl, #_bgY
      001310 4E                    4386 	ld	c, (hl)
      001311 FAr25r00              4387 	ld	a, (#_bgX)
      001314 E0r00                 4388 	ldh	(_SCX_REG + 0), a
                                   4389 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001316 79                    4390 	ld	a, c
      001317 E0r00                 4391 	ldh	(_SCY_REG + 0), a
                                   4392 ;main.c:424: moveEnemiesWithBackground(xOverflow, yOverflow);
      001319 D1                    4393 	pop	de
      00131A D5                    4394 	push	de
      00131B D5                    4395 	push	de
      00131C F8 04                 4396 	ldhl	sp,	#4
      00131E 2A                    4397 	ld	a, (hl+)
      00131F 5F                    4398 	ld	e, a
      001320 56                    4399 	ld	d, (hl)
      001321 D5                    4400 	push	de
      001322 CDr9Fr08              4401 	call	_moveEnemiesWithBackground
      001325 E8 04                 4402 	add	sp, #4
                                   4403 ;main.c:427: if (ySpeed > 0) ySpeed--;
      001327 21r1Er00              4404 	ld	hl, #_ySpeed
      00132A 5E                    4405 	ld	e, (hl)
      00132B AF                    4406 	xor	a, a
      00132C 57                    4407 	ld	d, a
      00132D 96                    4408 	sub	a, (hl)
      00132E CB 7B                 4409 	bit	7, e
      001330 28 07                 4410 	jr	Z, 00237$
      001332 CB 7A                 4411 	bit	7, d
      001334 20 08                 4412 	jr	NZ, 00238$
      001336 BF                    4413 	cp	a, a
      001337 18 05                 4414 	jr	00238$
      001339                       4415 00237$:
      001339 CB 7A                 4416 	bit	7, d
      00133B 28 01                 4417 	jr	Z, 00238$
      00133D 37                    4418 	scf
      00133E                       4419 00238$:
      00133E 30 04                 4420 	jr	NC, 00132$
      001340 21r1Er00              4421 	ld	hl, #_ySpeed
      001343 35                    4422 	dec	(hl)
      001344                       4423 00132$:
                                   4424 ;main.c:428: if (ySpeed < 0) ySpeed++;
      001344 21r1Er00              4425 	ld	hl, #_ySpeed
      001347 CB 7E                 4426 	bit	7, (hl)
      001349 28 01                 4427 	jr	Z, 00134$
      00134B 34                    4428 	inc	(hl)
      00134C                       4429 00134$:
                                   4430 ;main.c:429: if (xSpeed > 0) xSpeed--;
      00134C 21r1Dr00              4431 	ld	hl, #_xSpeed
      00134F 5E                    4432 	ld	e, (hl)
      001350 AF                    4433 	xor	a, a
      001351 57                    4434 	ld	d, a
      001352 96                    4435 	sub	a, (hl)
      001353 CB 7B                 4436 	bit	7, e
      001355 28 07                 4437 	jr	Z, 00239$
      001357 CB 7A                 4438 	bit	7, d
      001359 20 08                 4439 	jr	NZ, 00240$
      00135B BF                    4440 	cp	a, a
      00135C 18 05                 4441 	jr	00240$
      00135E                       4442 00239$:
      00135E CB 7A                 4443 	bit	7, d
      001360 28 01                 4444 	jr	Z, 00240$
      001362 37                    4445 	scf
      001363                       4446 00240$:
      001363 30 04                 4447 	jr	NC, 00136$
      001365 21r1Dr00              4448 	ld	hl, #_xSpeed
      001368 35                    4449 	dec	(hl)
      001369                       4450 00136$:
                                   4451 ;main.c:430: if (xSpeed < 0) xSpeed++;
      001369 21r1Dr00              4452 	ld	hl, #_xSpeed
      00136C CB 7E                 4453 	bit	7, (hl)
      00136E 28 01                 4454 	jr	Z, 00141$
      001370 34                    4455 	inc	(hl)
      001371                       4456 00141$:
                                   4457 ;main.c:434: }
      001371 E8 08                 4458 	add	sp, #8
      001373 C9                    4459 	ret
                                   4460 ;main.c:436: void takeDamage(int16_t amount) {
                                   4461 ;	---------------------------------
                                   4462 ; Function takeDamage
                                   4463 ; ---------------------------------
      001374                       4464 _takeDamage::
      001374 3B                    4465 	dec	sp
                                   4466 ;main.c:437: if (amount > shield) {
      001375 FAr5Cr00              4467 	ld	a, (#_shield)
      001378 4F                    4468 	ld	c, a
      001379 07                    4469 	rlca
      00137A 9F                    4470 	sbc	a, a
      00137B 47                    4471 	ld	b, a
                                   4472 ;main.c:439: hull -= (amount - shield);
      00137C F8 03                 4473 	ldhl	sp,	#3
      00137E 7E                    4474 	ld	a, (hl)
      00137F F8 00                 4475 	ldhl	sp,	#0
      001381 77                    4476 	ld	(hl), a
                                   4477 ;main.c:437: if (amount > shield) {
      001382 F8 03                 4478 	ldhl	sp,	#3
      001384 79                    4479 	ld	a, c
      001385 96                    4480 	sub	a, (hl)
      001386 23                    4481 	inc	hl
      001387 78                    4482 	ld	a, b
      001388 9E                    4483 	sbc	a, (hl)
      001389 78                    4484 	ld	a, b
      00138A 57                    4485 	ld	d, a
      00138B CB 7E                 4486 	bit	7, (hl)
      00138D 28 07                 4487 	jr	Z, 00111$
      00138F CB 7A                 4488 	bit	7, d
      001391 20 08                 4489 	jr	NZ, 00112$
      001393 BF                    4490 	cp	a, a
      001394 18 05                 4491 	jr	00112$
      001396                       4492 00111$:
      001396 CB 7A                 4493 	bit	7, d
      001398 28 01                 4494 	jr	Z, 00112$
      00139A 37                    4495 	scf
      00139B                       4496 00112$:
      00139B 30 10                 4497 	jr	NC, 00102$
                                   4498 ;main.c:438: shield = 0;
      00139D 21r5Cr00              4499 	ld	hl, #_shield
      0013A0 36 00                 4500 	ld	(hl), #0x00
                                   4501 ;main.c:439: hull -= (amount - shield);
      0013A2 FAr5Br00              4502 	ld	a, (#_hull)
      0013A5 F8 00                 4503 	ldhl	sp,	#0
      0013A7 96                    4504 	sub	a, (hl)
      0013A8 EAr5Br00              4505 	ld	(#_hull),a
      0013AB 18 09                 4506 	jr	00104$
      0013AD                       4507 00102$:
                                   4508 ;main.c:442: shield -= amount;
      0013AD FAr5Cr00              4509 	ld	a, (#_shield)
      0013B0 F8 00                 4510 	ldhl	sp,	#0
      0013B2 96                    4511 	sub	a, (hl)
      0013B3 EAr5Cr00              4512 	ld	(#_shield),a
      0013B6                       4513 00104$:
                                   4514 ;main.c:444: }
      0013B6 33                    4515 	inc	sp
      0013B7 C9                    4516 	ret
                                   4517 ;main.c:446: void checkCollision() {
                                   4518 ;	---------------------------------
                                   4519 ; Function checkCollision
                                   4520 ; ---------------------------------
      0013B8                       4521 _checkCollision::
      0013B8 E8 F2                 4522 	add	sp, #-14
                                   4523 ;main.c:449: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0013BA F8 0D                 4524 	ldhl	sp,	#13
      0013BC 36 00                 4525 	ld	(hl), #0x00
      0013BE                       4526 00112$:
      0013BE 21r09r05              4527 	ld	hl, #_ENEMYCOUNT
      0013C1 4E                    4528 	ld	c, (hl)
      0013C2 F8 0D                 4529 	ldhl	sp,	#13
      0013C4 7E                    4530 	ld	a, (hl)
      0013C5 91                    4531 	sub	a, c
      0013C6 D2r3Ar15              4532 	jp	NC, 00114$
                                   4533 ;main.c:450: if (enemies[i].visible && enemies[i].alive) {
      0013C9 4E                    4534 	ld	c, (hl)
      0013CA 06 00                 4535 	ld	b, #0x00
      0013CC 69                    4536 	ld	l, c
      0013CD 60                    4537 	ld	h, b
      0013CE 29                    4538 	add	hl, hl
      0013CF 29                    4539 	add	hl, hl
      0013D0 29                    4540 	add	hl, hl
      0013D1 09                    4541 	add	hl, bc
      0013D2 29                    4542 	add	hl, hl
      0013D3 01r00r00              4543 	ld	bc,#_enemies
      0013D6 09                    4544 	add	hl,bc
      0013D7 33                    4545 	inc	sp
      0013D8 33                    4546 	inc	sp
      0013D9 5D                    4547 	ld	e, l
      0013DA 54                    4548 	ld	d, h
      0013DB D5                    4549 	push	de
      0013DC 21 09 00              4550 	ld	hl, #0x0009
      0013DF 19                    4551 	add	hl, de
      0013E0 4D                    4552 	ld	c, l
      0013E1 44                    4553 	ld	b, h
      0013E2 0A                    4554 	ld	a, (bc)
      0013E3 F8 0C                 4555 	ldhl	sp,	#12
      0013E5 77                    4556 	ld	(hl), a
      0013E6 7E                    4557 	ld	a, (hl)
      0013E7 B7                    4558 	or	a, a
      0013E8 CAr34r15              4559 	jp	Z, 00113$
      0013EB D1                    4560 	pop	de
      0013EC D5                    4561 	push	de
      0013ED 21 08 00              4562 	ld	hl, #0x0008
      0013F0 19                    4563 	add	hl, de
      0013F1 E5                    4564 	push	hl
      0013F2 7D                    4565 	ld	a, l
      0013F3 F8 04                 4566 	ldhl	sp,	#4
      0013F5 77                    4567 	ld	(hl), a
      0013F6 E1                    4568 	pop	hl
      0013F7 7C                    4569 	ld	a, h
      0013F8 F8 03                 4570 	ldhl	sp,	#3
      0013FA 32                    4571 	ld	(hl-), a
      0013FB 2A                    4572 	ld	a, (hl+)
      0013FC 5F                    4573 	ld	e, a
      0013FD 56                    4574 	ld	d, (hl)
      0013FE 1A                    4575 	ld	a, (de)
      0013FF B7                    4576 	or	a, a
      001400 CAr34r15              4577 	jp	Z, 00113$
                                   4578 ;main.c:451: uint8_t x = enemies[i].x;
                                   4579 ;main.c:452: uint8_t y = enemies[i].y;
      001403 23                    4580 	inc	hl
      001404 D1                    4581 	pop	de
      001405 D5                    4582 	push	de
      001406 1A                    4583 	ld	a, (de)
      001407 4F                    4584 	ld	c, a
      001408 D1                    4585 	pop	de
      001409 D5                    4586 	push	de
      00140A 13                    4587 	inc	de
      00140B 13                    4588 	inc	de
      00140C 1A                    4589 	ld	a, (de)
      00140D 77                    4590 	ld	(hl), a
                                   4591 ;main.c:454: if (x > playerDrawX - PLAYERSIZE && x - (8>>(enemies[i].spriteCount-1)) < playerDrawX
      00140E FAr23r00              4592 	ld	a, (#_playerDrawX)
      001411 F8 0B                 4593 	ldhl	sp,	#11
      001413 22                    4594 	ld	(hl+), a
      001414 36 00                 4595 	ld	(hl), #0x00
      001416 FAr1Ar00              4596 	ld	a, (#_PLAYERSIZE)
      001419 F8 05                 4597 	ldhl	sp,	#5
      00141B 22                    4598 	ld	(hl+), a
      00141C 36 00                 4599 	ld	(hl), #0x00
      00141E F8 0B                 4600 	ldhl	sp,#11
      001420 2A                    4601 	ld	a, (hl+)
      001421 5F                    4602 	ld	e, a
      001422 56                    4603 	ld	d, (hl)
      001423 F8 05                 4604 	ldhl	sp,	#5
      001425 2A                    4605 	ld	a,	(hl+)
      001426 66                    4606 	ld	h, (hl)
      001427 6F                    4607 	ld	l, a
      001428 7B                    4608 	ld	a, e
      001429 95                    4609 	sub	a, l
      00142A 5F                    4610 	ld	e, a
      00142B 7A                    4611 	ld	a, d
      00142C 9C                    4612 	sbc	a, h
      00142D F8 0A                 4613 	ldhl	sp,	#10
      00142F 32                    4614 	ld	(hl-), a
      001430 73                    4615 	ld	(hl), e
      001431 06 00                 4616 	ld	b, #0x00
      001433 2A                    4617 	ld	a, (hl+)
      001434 91                    4618 	sub	a, c
      001435 7E                    4619 	ld	a, (hl)
      001436 98                    4620 	sbc	a, b
      001437 56                    4621 	ld	d, (hl)
      001438 78                    4622 	ld	a, b
      001439 CB 7F                 4623 	bit	7,a
      00143B 28 07                 4624 	jr	Z, 00157$
      00143D CB 7A                 4625 	bit	7, d
      00143F 20 08                 4626 	jr	NZ, 00158$
      001441 BF                    4627 	cp	a, a
      001442 18 05                 4628 	jr	00158$
      001444                       4629 00157$:
      001444 CB 7A                 4630 	bit	7, d
      001446 28 01                 4631 	jr	Z, 00158$
      001448 37                    4632 	scf
      001449                       4633 00158$:
      001449 D2r34r15              4634 	jp	NC, 00113$
      00144C D1                    4635 	pop	de
      00144D D5                    4636 	push	de
      00144E 21 06 00              4637 	ld	hl, #0x0006
      001451 19                    4638 	add	hl, de
      001452 5D                    4639 	ld	e, l
      001453 54                    4640 	ld	d, h
      001454 1A                    4641 	ld	a, (de)
      001455 5F                    4642 	ld	e, a
      001456 1D                    4643 	dec	e
      001457 F8 07                 4644 	ldhl	sp,	#7
      001459 3E 08                 4645 	ld	a, #0x08
      00145B 22                    4646 	ld	(hl+), a
      00145C AF                    4647 	xor	a, a
      00145D 77                    4648 	ld	(hl), a
      00145E 1C                    4649 	inc	e
      00145F 18 07                 4650 	jr	00160$
      001461                       4651 00159$:
      001461 F8 08                 4652 	ldhl	sp,	#8
      001463 CB 2E                 4653 	sra	(hl)
      001465 2B                    4654 	dec	hl
      001466 CB 1E                 4655 	rr	(hl)
      001468                       4656 00160$:
      001468 1D                    4657 	dec	e
      001469 20 F6                 4658 	jr	NZ, 00159$
      00146B F8 07                 4659 	ldhl	sp,#7
      00146D 2A                    4660 	ld	a, (hl+)
      00146E 5F                    4661 	ld	e, a
      00146F 56                    4662 	ld	d, (hl)
      001470 79                    4663 	ld	a, c
      001471 93                    4664 	sub	a, e
      001472 5F                    4665 	ld	e, a
      001473 78                    4666 	ld	a, b
      001474 9A                    4667 	sbc	a, d
      001475 47                    4668 	ld	b, a
      001476 4B                    4669 	ld	c, e
      001477 F8 0B                 4670 	ldhl	sp,	#11
      001479 79                    4671 	ld	a, c
      00147A 96                    4672 	sub	a, (hl)
      00147B 23                    4673 	inc	hl
      00147C 78                    4674 	ld	a, b
      00147D 9E                    4675 	sbc	a, (hl)
      00147E 78                    4676 	ld	a, b
      00147F 57                    4677 	ld	d, a
      001480 CB 7E                 4678 	bit	7, (hl)
      001482 28 07                 4679 	jr	Z, 00161$
      001484 CB 7A                 4680 	bit	7, d
      001486 20 08                 4681 	jr	NZ, 00162$
      001488 BF                    4682 	cp	a, a
      001489 18 05                 4683 	jr	00162$
      00148B                       4684 00161$:
      00148B CB 7A                 4685 	bit	7, d
      00148D 28 01                 4686 	jr	Z, 00162$
      00148F 37                    4687 	scf
      001490                       4688 00162$:
      001490 D2r34r15              4689 	jp	NC, 00113$
                                   4690 ;main.c:455: && y > playerDrawY - PLAYERSIZE && y -(8>>(enemies[i].spriteCount-1)) < playerDrawY ) 
      001493 FAr24r00              4691 	ld	a, (#_playerDrawY)
      001496 F8 09                 4692 	ldhl	sp,	#9
      001498 22                    4693 	ld	(hl+), a
      001499 AF                    4694 	xor	a, a
      00149A 32                    4695 	ld	(hl-), a
      00149B 2A                    4696 	ld	a, (hl+)
      00149C 5F                    4697 	ld	e, a
      00149D 56                    4698 	ld	d, (hl)
      00149E F8 05                 4699 	ldhl	sp,	#5
      0014A0 2A                    4700 	ld	a,	(hl+)
      0014A1 66                    4701 	ld	h, (hl)
      0014A2 6F                    4702 	ld	l, a
      0014A3 7B                    4703 	ld	a, e
      0014A4 95                    4704 	sub	a, l
      0014A5 5F                    4705 	ld	e, a
      0014A6 7A                    4706 	ld	a, d
      0014A7 9C                    4707 	sbc	a, h
      0014A8 F8 0C                 4708 	ldhl	sp,	#12
      0014AA 32                    4709 	ld	(hl-), a
      0014AB 73                    4710 	ld	(hl), e
      0014AC F8 04                 4711 	ldhl	sp,	#4
      0014AE 4E                    4712 	ld	c, (hl)
      0014AF 06 00                 4713 	ld	b, #0x00
      0014B1 F8 0B                 4714 	ldhl	sp,	#11
      0014B3 2A                    4715 	ld	a, (hl+)
      0014B4 91                    4716 	sub	a, c
      0014B5 7E                    4717 	ld	a, (hl)
      0014B6 98                    4718 	sbc	a, b
      0014B7 56                    4719 	ld	d, (hl)
      0014B8 78                    4720 	ld	a, b
      0014B9 CB 7F                 4721 	bit	7,a
      0014BB 28 07                 4722 	jr	Z, 00163$
      0014BD CB 7A                 4723 	bit	7, d
      0014BF 20 08                 4724 	jr	NZ, 00164$
      0014C1 BF                    4725 	cp	a, a
      0014C2 18 05                 4726 	jr	00164$
      0014C4                       4727 00163$:
      0014C4 CB 7A                 4728 	bit	7, d
      0014C6 28 01                 4729 	jr	Z, 00164$
      0014C8 37                    4730 	scf
      0014C9                       4731 00164$:
      0014C9 30 69                 4732 	jr	NC, 00113$
      0014CB F8 07                 4733 	ldhl	sp,#7
      0014CD 2A                    4734 	ld	a, (hl+)
      0014CE 5F                    4735 	ld	e, a
      0014CF 2A                    4736 	ld	a, (hl+)
      0014D0 57                    4737 	ld	d, a
      0014D1 79                    4738 	ld	a, c
      0014D2 93                    4739 	sub	a, e
      0014D3 5F                    4740 	ld	e, a
      0014D4 78                    4741 	ld	a, b
      0014D5 9A                    4742 	sbc	a, d
      0014D6 47                    4743 	ld	b, a
      0014D7 7B                    4744 	ld	a, e
      0014D8 96                    4745 	sub	a, (hl)
      0014D9 23                    4746 	inc	hl
      0014DA 78                    4747 	ld	a, b
      0014DB 9E                    4748 	sbc	a, (hl)
      0014DC 78                    4749 	ld	a, b
      0014DD 57                    4750 	ld	d, a
      0014DE CB 7E                 4751 	bit	7, (hl)
      0014E0 28 07                 4752 	jr	Z, 00165$
      0014E2 CB 7A                 4753 	bit	7, d
      0014E4 20 08                 4754 	jr	NZ, 00166$
      0014E6 BF                    4755 	cp	a, a
      0014E7 18 05                 4756 	jr	00166$
      0014E9                       4757 00165$:
      0014E9 CB 7A                 4758 	bit	7, d
      0014EB 28 01                 4759 	jr	Z, 00166$
      0014ED 37                    4760 	scf
      0014EE                       4761 00166$:
      0014EE 30 44                 4762 	jr	NC, 00113$
                                   4763 ;main.c:457: set_sprite_tile(10+i, EMPTYSPRITE);
      0014F0 21r08r05              4764 	ld	hl, #_EMPTYSPRITE
      0014F3 4E                    4765 	ld	c, (hl)
      0014F4 F8 0D                 4766 	ldhl	sp,	#13
      0014F6 7E                    4767 	ld	a, (hl)
      0014F7 C6 0A                 4768 	add	a, #0x0a
                                   4769 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0014F9 6F                    4770 	ld	l, a
                                   4771 ;	spillPairReg hl
                                   4772 ;	spillPairReg hl
      0014FA 26 00                 4773 	ld	h, #0x00
                                   4774 ;	spillPairReg hl
                                   4775 ;	spillPairReg hl
      0014FC 29                    4776 	add	hl, hl
      0014FD 29                    4777 	add	hl, hl
      0014FE 11r00r00              4778 	ld	de, #_shadow_OAM
      001501 19                    4779 	add	hl, de
      001502 23                    4780 	inc	hl
      001503 23                    4781 	inc	hl
      001504 71                    4782 	ld	(hl), c
                                   4783 ;main.c:458: enemies[i].alive = 0;
      001505 F8 02                 4784 	ldhl	sp,	#2
      001507 2A                    4785 	ld	a,	(hl+)
      001508 66                    4786 	ld	h, (hl)
      001509 6F                    4787 	ld	l, a
      00150A 36 00                 4788 	ld	(hl), #0x00
                                   4789 ;main.c:459: takeDamage(enemies[i].damage);
      00150C D1                    4790 	pop	de
      00150D D5                    4791 	push	de
      00150E 21 0A 00              4792 	ld	hl, #0x000a
      001511 19                    4793 	add	hl, de
      001512 E5                    4794 	push	hl
      001513 7D                    4795 	ld	a, l
      001514 F8 0D                 4796 	ldhl	sp,	#13
      001516 77                    4797 	ld	(hl), a
      001517 E1                    4798 	pop	hl
      001518 7C                    4799 	ld	a, h
      001519 F8 0C                 4800 	ldhl	sp,	#12
      00151B 32                    4801 	ld	(hl-), a
      00151C 2A                    4802 	ld	a, (hl+)
      00151D 5F                    4803 	ld	e, a
      00151E 56                    4804 	ld	d, (hl)
      00151F 1A                    4805 	ld	a, (de)
      001520 77                    4806 	ld	(hl), a
      001521 3A                    4807 	ld	a, (hl-)
      001522 22                    4808 	ld	(hl+), a
      001523 AF                    4809 	xor	a, a
      001524 32                    4810 	ld	(hl-), a
      001525 2A                    4811 	ld	a, (hl+)
      001526 5F                    4812 	ld	e, a
      001527 56                    4813 	ld	d, (hl)
      001528 D5                    4814 	push	de
      001529 CDr74r13              4815 	call	_takeDamage
      00152C E1                    4816 	pop	hl
                                   4817 ;main.c:460: initEnemies(0);
      00152D AF                    4818 	xor	a, a
      00152E F5                    4819 	push	af
      00152F 33                    4820 	inc	sp
      001530 CDr4Br0D              4821 	call	_initEnemies
      001533 33                    4822 	inc	sp
      001534                       4823 00113$:
                                   4824 ;main.c:449: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001534 F8 0D                 4825 	ldhl	sp,	#13
      001536 34                    4826 	inc	(hl)
      001537 C3rBEr13              4827 	jp	00112$
      00153A                       4828 00114$:
                                   4829 ;main.c:467: }
      00153A E8 0E                 4830 	add	sp, #14
      00153C C9                    4831 	ret
                                   4832 ;main.c:470: void updateShieldsAndHull() {
                                   4833 ;	---------------------------------
                                   4834 ; Function updateShieldsAndHull
                                   4835 ; ---------------------------------
      00153D                       4836 _updateShieldsAndHull::
                                   4837 ;main.c:471: if (shield < maxShield) {
      00153D 21r2Ar00              4838 	ld	hl, #_maxShield
      001540 5E                    4839 	ld	e, (hl)
      001541 FAr5Cr00              4840 	ld	a, (#_shield)
      001544 57                    4841 	ld	d,a
      001545 21r2Ar00              4842 	ld	hl, #_maxShield
      001548 96                    4843 	sub	a, (hl)
      001549 CB 7B                 4844 	bit	7, e
      00154B 28 07                 4845 	jr	Z, 00110$
      00154D CB 7A                 4846 	bit	7, d
      00154F 20 08                 4847 	jr	NZ, 00111$
      001551 BF                    4848 	cp	a, a
      001552 18 05                 4849 	jr	00111$
      001554                       4850 00110$:
      001554 CB 7A                 4851 	bit	7, d
      001556 28 01                 4852 	jr	Z, 00111$
      001558 37                    4853 	scf
      001559                       4854 00111$:
      001559 30 04                 4855 	jr	NC, 00102$
                                   4856 ;main.c:472: shield += 1;
      00155B 21r5Cr00              4857 	ld	hl, #_shield
      00155E 34                    4858 	inc	(hl)
      00155F                       4859 00102$:
                                   4860 ;main.c:474: setHealthBar(0, hull);
      00155F FAr5Br00              4861 	ld	a, (#_hull)
      001562 67                    4862 	ld	h, a
      001563 2E 00                 4863 	ld	l, #0x00
      001565 E5                    4864 	push	hl
      001566 CDr1Ar05              4865 	call	_setHealthBar
      001569 E1                    4866 	pop	hl
                                   4867 ;main.c:475: setHealthBar(1, shield);
      00156A FAr5Cr00              4868 	ld	a, (#_shield)
      00156D 67                    4869 	ld	h, a
      00156E 2E 01                 4870 	ld	l, #0x01
      001570 E5                    4871 	push	hl
      001571 CDr1Ar05              4872 	call	_setHealthBar
      001574 E1                    4873 	pop	hl
                                   4874 ;main.c:476: }
      001575 C9                    4875 	ret
                                   4876 ;main.c:478: void initGame() {
                                   4877 ;	---------------------------------
                                   4878 ; Function initGame
                                   4879 ; ---------------------------------
      001576                       4880 _initGame::
                                   4881 ;main.c:481: xDir = 0;
      001576 21r1Br00              4882 	ld	hl, #_xDir
      001579 36 00                 4883 	ld	(hl), #0x00
                                   4884 ;main.c:482: yDir = 0;
      00157B 21r1Cr00              4885 	ld	hl, #_yDir
      00157E 36 00                 4886 	ld	(hl), #0x00
                                   4887 ;main.c:483: xSpeed = 0;
      001580 21r1Dr00              4888 	ld	hl, #_xSpeed
      001583 36 00                 4889 	ld	(hl), #0x00
                                   4890 ;main.c:484: ySpeed = 0;
      001585 21r1Er00              4891 	ld	hl, #_ySpeed
      001588 36 00                 4892 	ld	(hl), #0x00
                                   4893 ;main.c:487: playerX = 80<<5;
      00158A 21r1Fr00              4894 	ld	hl, #_playerX
      00158D 36 00                 4895 	ld	(hl), #0x00
      00158F 23                    4896 	inc	hl
      001590 36 0A                 4897 	ld	(hl), #0x0a
                                   4898 ;main.c:488: playerY = 80<<5;
      001592 21r21r00              4899 	ld	hl, #_playerY
      001595 36 00                 4900 	ld	(hl), #0x00
      001597 23                    4901 	inc	hl
      001598 36 0A                 4902 	ld	(hl), #0x0a
                                   4903 ;main.c:490: playerDrawX = 80;
      00159A 21r23r00              4904 	ld	hl, #_playerDrawX
      00159D 36 50                 4905 	ld	(hl), #0x50
                                   4906 ;main.c:491: playerDrawY = 80;
      00159F 21r24r00              4907 	ld	hl, #_playerDrawY
      0015A2 36 50                 4908 	ld	(hl), #0x50
                                   4909 ;main.c:494: bgX = 0;
      0015A4 AF                    4910 	xor	a, a
      0015A5 21r25r00              4911 	ld	hl, #_bgX
      0015A8 22                    4912 	ld	(hl+), a
      0015A9 77                    4913 	ld	(hl), a
                                   4914 ;main.c:495: bgY = 0;
      0015AA AF                    4915 	xor	a, a
      0015AB 21r27r00              4916 	ld	hl, #_bgY
      0015AE 22                    4917 	ld	(hl+), a
      0015AF 77                    4918 	ld	(hl), a
                                   4919 ;main.c:497: hull = maxHull;
      0015B0 FAr29r00              4920 	ld	a, (#_maxHull)
      0015B3 EAr5Br00              4921 	ld	(#_hull),a
                                   4922 ;main.c:498: shield = maxShield;
      0015B6 FAr2Ar00              4923 	ld	a, (#_maxShield)
      0015B9 EAr5Cr00              4924 	ld	(#_shield),a
                                   4925 ;main.c:500: DISPLAY_ON;
      0015BC F0r00                 4926 	ldh	a, (_LCDC_REG + 0)
      0015BE F6 80                 4927 	or	a, #0x80
      0015C0 E0r00                 4928 	ldh	(_LCDC_REG + 0), a
                                   4929 ;main.c:501: SPRITES_8x8;
      0015C2 F0r00                 4930 	ldh	a, (_LCDC_REG + 0)
      0015C4 E6 FB                 4931 	and	a, #0xfb
      0015C6 E0r00                 4932 	ldh	(_LCDC_REG + 0), a
                                   4933 ;main.c:502: set_sprite_data(0, 8, cross);
      0015C8 11r07r00              4934 	ld	de, #_cross
      0015CB D5                    4935 	push	de
      0015CC 21 00 08              4936 	ld	hl, #0x800
      0015CF E5                    4937 	push	hl
      0015D0 CDr00r00              4938 	call	_set_sprite_data
      0015D3 E8 04                 4939 	add	sp, #4
                                   4940 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0015D5 21r02r00              4941 	ld	hl, #(_shadow_OAM + 2)
      0015D8 36 00                 4942 	ld	(hl), #0x00
                                   4943 ;main.c:505: SHOW_SPRITES;
      0015DA F0r00                 4944 	ldh	a, (_LCDC_REG + 0)
      0015DC F6 02                 4945 	or	a, #0x02
      0015DE E0r00                 4946 	ldh	(_LCDC_REG + 0), a
                                   4947 ;main.c:509: font_init();
      0015E0 CDr00r00              4948 	call	_font_init
                                   4949 ;main.c:510: min_font = font_load(font_min); // 36 tiles of characters
      0015E3 11r00r00              4950 	ld	de, #_font_min
      0015E6 D5                    4951 	push	de
      0015E7 CDr00r00              4952 	call	_font_load
      0015EA E1                    4953 	pop	hl
      0015EB 21r5Dr00              4954 	ld	hl, #_min_font
      0015EE 7B                    4955 	ld	a, e
      0015EF 22                    4956 	ld	(hl+), a
                                   4957 ;main.c:511: font_set(min_font);
      0015F0 7A                    4958 	ld	a, d
      0015F1 32                    4959 	ld	(hl-), a
      0015F2 2A                    4960 	ld	a, (hl+)
      0015F3 5F                    4961 	ld	e, a
      0015F4 56                    4962 	ld	d, (hl)
      0015F5 D5                    4963 	push	de
      0015F6 CDr00r00              4964 	call	_font_set
      0015F9 E1                    4965 	pop	hl
                                   4966 ;main.c:512: set_win_tiles(1,0,4,1,hullabel);
      0015FA 11r00r00              4967 	ld	de, #_hullabel
      0015FD D5                    4968 	push	de
      0015FE 21 04 01              4969 	ld	hl, #0x104
      001601 E5                    4970 	push	hl
      001602 21 01 00              4971 	ld	hl, #0x01
      001605 E5                    4972 	push	hl
      001606 CDr00r00              4973 	call	_set_win_tiles
      001609 E8 06                 4974 	add	sp, #6
                                   4975 ;main.c:513: set_win_tiles(1,1,5,1,shieldlabel);
      00160B 11r04r00              4976 	ld	de, #_shieldlabel
      00160E D5                    4977 	push	de
      00160F 21 05 01              4978 	ld	hl, #0x105
      001612 E5                    4979 	push	hl
      001613 21 01 01              4980 	ld	hl, #0x101
      001616 E5                    4981 	push	hl
      001617 CDr00r00              4982 	call	_set_win_tiles
      00161A E8 06                 4983 	add	sp, #6
                                   4984 ;main.c:518: set_bkg_data(0x50,1,healthblock);
      00161C 11rE7r04              4985 	ld	de, #_healthblock
      00161F D5                    4986 	push	de
      001620 21 50 01              4987 	ld	hl, #0x150
      001623 E5                    4988 	push	hl
      001624 CDr00r00              4989 	call	_set_bkg_data
      001627 E8 04                 4990 	add	sp, #4
                                   4991 ;main.c:520: setHealthBar(0, hull);
      001629 FAr5Br00              4992 	ld	a, (#_hull)
      00162C 67                    4993 	ld	h, a
      00162D 2E 00                 4994 	ld	l, #0x00
      00162F E5                    4995 	push	hl
      001630 CDr1Ar05              4996 	call	_setHealthBar
      001633 E1                    4997 	pop	hl
                                   4998 ;main.c:521: setHealthBar(1, shield);
      001634 FAr5Cr00              4999 	ld	a, (#_shield)
      001637 67                    5000 	ld	h, a
      001638 2E 01                 5001 	ld	l, #0x01
      00163A E5                    5002 	push	hl
      00163B CDr1Ar05              5003 	call	_setHealthBar
      00163E E1                    5004 	pop	hl
                                   5005 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      00163F 3E 07                 5006 	ld	a, #0x07
      001641 E0r00                 5007 	ldh	(_WX_REG + 0), a
      001643 3E 7C                 5008 	ld	a, #0x7c
      001645 E0r00                 5009 	ldh	(_WY_REG + 0), a
                                   5010 ;main.c:524: SHOW_WIN;;
      001647 F0r00                 5011 	ldh	a, (_LCDC_REG + 0)
      001649 F6 20                 5012 	or	a, #0x20
      00164B E0r00                 5013 	ldh	(_LCDC_REG + 0), a
                                   5014 ;main.c:529: set_bkg_data(0x25, 6, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      00164D 11r87r04              5015 	ld	de, #_backgroundtiles
      001650 D5                    5016 	push	de
      001651 21 25 06              5017 	ld	hl, #0x625
      001654 E5                    5018 	push	hl
      001655 CDr00r00              5019 	call	_set_bkg_data
      001658 E8 04                 5020 	add	sp, #4
                                   5021 ;main.c:530: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      00165A 11r87r00              5022 	ld	de, #_background1
      00165D D5                    5023 	push	de
      00165E 21 20 20              5024 	ld	hl, #0x2020
      001661 E5                    5025 	push	hl
      001662 AF                    5026 	xor	a, a
      001663 0F                    5027 	rrca
      001664 F5                    5028 	push	af
      001665 CDr00r00              5029 	call	_set_bkg_tiles
      001668 E8 06                 5030 	add	sp, #6
                                   5031 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      00166A AF                    5032 	xor	a, a
      00166B E0r00                 5033 	ldh	(_SCX_REG + 0), a
      00166D AF                    5034 	xor	a, a
      00166E E0r00                 5035 	ldh	(_SCY_REG + 0), a
                                   5036 ;main.c:532: SHOW_BKG;
      001670 F0r00                 5037 	ldh	a, (_LCDC_REG + 0)
      001672 F6 01                 5038 	or	a, #0x01
      001674 E0r00                 5039 	ldh	(_LCDC_REG + 0), a
                                   5040 ;main.c:538: }
      001676 C9                    5041 	ret
                                   5042 ;main.c:540: void main(){
                                   5043 ;	---------------------------------
                                   5044 ; Function main
                                   5045 ; ---------------------------------
      001677                       5046 _main::
                                   5047 ;main.c:552: waitpad(J_A);
      001677 3E 10                 5048 	ld	a, #0x10
      001679 F5                    5049 	push	af
      00167A 33                    5050 	inc	sp
      00167B CDr00r00              5051 	call	_waitpad
      00167E 33                    5052 	inc	sp
                                   5053 ;main.c:553: uint16_t seed = LY_REG;
      00167F F0r00                 5054 	ldh	a, (_LY_REG + 0)
      001681 4F                    5055 	ld	c, a
      001682 06 00                 5056 	ld	b, #0x00
                                   5057 ;main.c:554: seed |= (uint16_t)DIV_REG << 8;
      001684 F0r00                 5058 	ldh	a, (_DIV_REG + 0)
      001686 5F                    5059 	ld	e, a
      001687 AF                    5060 	xor	a, a
      001688 B1                    5061 	or	a, c
      001689 4F                    5062 	ld	c, a
      00168A 7B                    5063 	ld	a, e
      00168B B0                    5064 	or	a, b
      00168C 47                    5065 	ld	b, a
                                   5066 ;main.c:555: initrand(seed);
      00168D C5                    5067 	push	bc
      00168E CDr00r00              5068 	call	_initrand
      001691 E1                    5069 	pop	hl
                                   5070 ;main.c:560: initGame();
      001692 CDr76r15              5071 	call	_initGame
                                   5072 ;main.c:561: initEnemies(1);
      001695 3E 01                 5073 	ld	a, #0x01
      001697 F5                    5074 	push	af
      001698 33                    5075 	inc	sp
      001699 CDr4Br0D              5076 	call	_initEnemies
      00169C 33                    5077 	inc	sp
                                   5078 ;main.c:563: while(1) {
      00169D                       5079 00102$:
                                   5080 ;main.c:564: joydata = joypad(); // query for button states
      00169D CDr00r00              5081 	call	_joypad
      0016A0 21r5Ar00              5082 	ld	hl, #_joydata
      0016A3 73                    5083 	ld	(hl), e
                                   5084 ;main.c:566: updateDirection(); // set player direction
      0016A4 CDr2Br06              5085 	call	_updateDirection
                                   5086 ;main.c:569: move(); 
      0016A7 CDrF6r0E              5087 	call	_move
                                   5088 ;main.c:571: updateEnemyPositions();
      0016AA CDr09r09              5089 	call	_updateEnemyPositions
                                   5090 ;main.c:574: checkCollision(); 
      0016AD CDrB8r13              5091 	call	_checkCollision
                                   5092 ;main.c:576: updateShieldsAndHull();
      0016B0 CDr3Dr15              5093 	call	_updateShieldsAndHull
                                   5094 ;main.c:578: SHOW_WIN;	
      0016B3 F0r00                 5095 	ldh	a, (_LCDC_REG + 0)
      0016B5 F6 20                 5096 	or	a, #0x20
      0016B7 E0r00                 5097 	ldh	(_LCDC_REG + 0), a
                                   5098 ;main.c:579: wait_vbl_done(); // Idle until next frame
      0016B9 CDr00r00              5099 	call	_wait_vbl_done
                                   5100 ;main.c:584: }
      0016BC 18 DF                 5101 	jr	00102$
                                   5102 	.area _CODE
                                   5103 	.area _INITIALIZER
      000000                       5104 __xinit__hullabel:
      000000 12                    5105 	.db #0x12	; 18
      000001 1F                    5106 	.db #0x1f	; 31
      000002 16                    5107 	.db #0x16	; 22
      000003 16                    5108 	.db #0x16	; 22
      000004                       5109 __xinit__shieldlabel:
      000004 1D                    5110 	.db #0x1d	; 29
      000005 12                    5111 	.db #0x12	; 18
      000006 16                    5112 	.db #0x16	; 22
      000007 0E                    5113 	.db #0x0e	; 14
      000008                       5114 __xinit__blob:
      000008 0A 00                 5115 	.dw #0x000a
      00000A 0A 00                 5116 	.dw #0x000a
      00000C 00                    5117 	.db #0x00	; 0
      00000D 00                    5118 	.db #0x00	; 0
      00000E 01 00                 5119 	.dw #0x0001
      000010 01                    5120 	.db #0x01	; 1
      000011 00                    5121 	.db #0x00	; 0
      000012 00                    5122 	.db #0x00	; 0
      000013 00 00                 5123 	.dw #0x0000
      000015 00                    5124 	.db #0x00	; 0
      000016 00 00                 5125 	.dw #0x0000
      000018 00 00                 5126 	.dw #0x0000
      00001A                       5127 __xinit__PLAYERSIZE:
      00001A 08                    5128 	.db #0x08	; 8
      00001B                       5129 __xinit__xDir:
      00001B 00                    5130 	.db #0x00	;  0
      00001C                       5131 __xinit__yDir:
      00001C 00                    5132 	.db #0x00	;  0
      00001D                       5133 __xinit__xSpeed:
      00001D 00                    5134 	.db #0x00	;  0
      00001E                       5135 __xinit__ySpeed:
      00001E 00                    5136 	.db #0x00	;  0
      00001F                       5137 __xinit__playerX:
      00001F 00 0A                 5138 	.dw #0x0a00
      000021                       5139 __xinit__playerY:
      000021 00 0A                 5140 	.dw #0x0a00
      000023                       5141 __xinit__playerDrawX:
      000023 50                    5142 	.db #0x50	; 80	'P'
      000024                       5143 __xinit__playerDrawY:
      000024 50                    5144 	.db #0x50	; 80	'P'
      000025                       5145 __xinit__bgX:
      000025 00 00                 5146 	.dw #0x0000
      000027                       5147 __xinit__bgY:
      000027 00 00                 5148 	.dw #0x0000
      000029                       5149 __xinit__maxHull:
      000029 64                    5150 	.db #0x64	;  100	'd'
      00002A                       5151 __xinit__maxShield:
      00002A 64                    5152 	.db #0x64	;  100	'd'
                                   5153 	.area _CABS (ABS)
