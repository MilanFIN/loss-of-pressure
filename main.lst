                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _moveProjectiles
                                     15 	.globl _fire
                                     16 	.globl _setGunIcon
                                     17 	.globl _checkCollision
                                     18 	.globl _takeDamage
                                     19 	.globl _move
                                     20 	.globl _initEnemies
                                     21 	.globl _updateEnemyPositions
                                     22 	.globl _playSound
                                     23 	.globl _updateDirection
                                     24 	.globl _setHealthBar
                                     25 	.globl _interruptLCD
                                     26 	.globl _rand
                                     27 	.globl _initrand
                                     28 	.globl _font_set
                                     29 	.globl _font_load
                                     30 	.globl _font_init
                                     31 	.globl _set_sprite_data
                                     32 	.globl _set_win_tiles
                                     33 	.globl _set_bkg_tiles
                                     34 	.globl _set_bkg_data
                                     35 	.globl _wait_vbl_done
                                     36 	.globl _set_interrupts
                                     37 	.globl _waitpad
                                     38 	.globl _joypad
                                     39 	.globl _add_LCD
                                     40 	.globl _gunMap
                                     41 	.globl _switchDelay
                                     42 	.globl _currentGun
                                     43 	.globl _enemyCollisionCount
                                     44 	.globl _yOverflow
                                     45 	.globl _xOverflow
                                     46 	.globl _bgY
                                     47 	.globl _bgX
                                     48 	.globl _playerDrawY
                                     49 	.globl _playerDrawX
                                     50 	.globl _playerY
                                     51 	.globl _playerX
                                     52 	.globl _ySpeed
                                     53 	.globl _xSpeed
                                     54 	.globl _yDir
                                     55 	.globl _xDir
                                     56 	.globl _fireCooldown
                                     57 	.globl _oldestProjectile
                                     58 	.globl _missile
                                     59 	.globl _doubleGun
                                     60 	.globl _singleGun
                                     61 	.globl _blob
                                     62 	.globl _scorelabel
                                     63 	.globl _weaponlabel
                                     64 	.globl _shieldlabel
                                     65 	.globl _hullabel
                                     66 	.globl _min_font
                                     67 	.globl _shield
                                     68 	.globl _hull
                                     69 	.globl _joydata
                                     70 	.globl _projectiles
                                     71 	.globl _enemies
                                     72 	.globl _GUNCOUNT
                                     73 	.globl _maxShield
                                     74 	.globl _maxHull
                                     75 	.globl _PLAYERSIZE
                                     76 	.globl _PROJECTILECOUNT
                                     77 	.globl _ySpawnPositions
                                     78 	.globl _xSpawnPositions
                                     79 	.globl _ENEMYCOUNT
                                     80 	.globl _EMPTYSPRITE
                                     81 	.globl _BLANK
                                     82 	.globl _BLANKSIZE
                                     83 	.globl _ProjectileTiles
                                     84 	.globl _projectile1
                                     85 	.globl _enemy1
                                     86 	.globl _healthblock
                                     87 	.globl _backgroundtiles
                                     88 	.globl _background1
                                     89 	.globl _cross
                                     90 ;--------------------------------------------------------
                                     91 ; special function registers
                                     92 ;--------------------------------------------------------
                                     93 ;--------------------------------------------------------
                                     94 ; ram data
                                     95 ;--------------------------------------------------------
                                     96 	.area _DATA
      000000                         97 _enemies::
      000000                         98 	.ds 80
      000050                         99 _projectiles::
      000050                        100 	.ds 55
      000087                        101 _joydata::
      000087                        102 	.ds 1
      000088                        103 _hull::
      000088                        104 	.ds 1
      000089                        105 _shield::
      000089                        106 	.ds 1
      00008A                        107 _min_font::
      00008A                        108 	.ds 2
                                    109 ;--------------------------------------------------------
                                    110 ; ram data
                                    111 ;--------------------------------------------------------
                                    112 	.area _INITIALIZED
      000000                        113 _hullabel::
      000000                        114 	.ds 4
      000004                        115 _shieldlabel::
      000004                        116 	.ds 4
      000008                        117 _weaponlabel::
      000008                        118 	.ds 5
      00000D                        119 _scorelabel::
      00000D                        120 	.ds 5
      000012                        121 _blob::
      000012                        122 	.ds 16
      000022                        123 _singleGun::
      000022                        124 	.ds 11
      00002D                        125 _doubleGun::
      00002D                        126 	.ds 11
      000038                        127 _missile::
      000038                        128 	.ds 11
      000043                        129 _oldestProjectile::
      000043                        130 	.ds 1
      000044                        131 _fireCooldown::
      000044                        132 	.ds 1
      000045                        133 _xDir::
      000045                        134 	.ds 1
      000046                        135 _yDir::
      000046                        136 	.ds 1
      000047                        137 _xSpeed::
      000047                        138 	.ds 1
      000048                        139 _ySpeed::
      000048                        140 	.ds 1
      000049                        141 _playerX::
      000049                        142 	.ds 2
      00004B                        143 _playerY::
      00004B                        144 	.ds 2
      00004D                        145 _playerDrawX::
      00004D                        146 	.ds 1
      00004E                        147 _playerDrawY::
      00004E                        148 	.ds 1
      00004F                        149 _bgX::
      00004F                        150 	.ds 2
      000051                        151 _bgY::
      000051                        152 	.ds 2
      000053                        153 _xOverflow::
      000053                        154 	.ds 2
      000055                        155 _yOverflow::
      000055                        156 	.ds 2
      000057                        157 _enemyCollisionCount::
      000057                        158 	.ds 1
      000058                        159 _currentGun::
      000058                        160 	.ds 1
      000059                        161 _switchDelay::
      000059                        162 	.ds 1
      00005A                        163 _gunMap::
      00005A                        164 	.ds 3
                                    165 ;--------------------------------------------------------
                                    166 ; absolute external ram data
                                    167 ;--------------------------------------------------------
                                    168 	.area _DABS (ABS)
                                    169 ;--------------------------------------------------------
                                    170 ; global & static initialisations
                                    171 ;--------------------------------------------------------
                                    172 	.area _HOME
                                    173 	.area _GSINIT
                                    174 	.area _GSFINAL
                                    175 	.area _GSINIT
                                    176 ;--------------------------------------------------------
                                    177 ; Home
                                    178 ;--------------------------------------------------------
                                    179 	.area _HOME
                                    180 	.area _HOME
                                    181 ;--------------------------------------------------------
                                    182 ; code
                                    183 ;--------------------------------------------------------
                                    184 	.area _CODE
                                    185 ;main.c:90: void interruptLCD()
                                    186 ;	---------------------------------
                                    187 ; Function interruptLCD
                                    188 ; ---------------------------------
      000000                        189 _interruptLCD::
                                    190 ;main.c:92: HIDE_SPRITES;
      000000 F0r00                  191 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  192 	and	a, #0xfd
      000004 E0r00                  193 	ldh	(_LCDC_REG + 0), a
                                    194 ;main.c:93: }
      000006 C9                     195 	ret
      000007                        196 _cross:
      000007 18                     197 	.db #0x18	; 24
      000008 18                     198 	.db #0x18	; 24
      000009 18                     199 	.db #0x18	; 24
      00000A 18                     200 	.db #0x18	; 24
      00000B 3C                     201 	.db #0x3c	; 60
      00000C 3C                     202 	.db #0x3c	; 60
      00000D 3C                     203 	.db #0x3c	; 60
      00000E 3C                     204 	.db #0x3c	; 60
      00000F 7E                     205 	.db #0x7e	; 126
      000010 7E                     206 	.db #0x7e	; 126
      000011 7E                     207 	.db #0x7e	; 126
      000012 7E                     208 	.db #0x7e	; 126
      000013 FF                     209 	.db #0xff	; 255
      000014 FF                     210 	.db #0xff	; 255
      000015 FF                     211 	.db #0xff	; 255
      000016 FF                     212 	.db #0xff	; 255
      000017 0F                     213 	.db #0x0f	; 15
      000018 0F                     214 	.db #0x0f	; 15
      000019 3F                     215 	.db #0x3f	; 63
      00001A 3F                     216 	.db #0x3f	; 63
      00001B FF                     217 	.db #0xff	; 255
      00001C FF                     218 	.db #0xff	; 255
      00001D FF                     219 	.db #0xff	; 255
      00001E FF                     220 	.db #0xff	; 255
      00001F 7E                     221 	.db #0x7e	; 126
      000020 7E                     222 	.db #0x7e	; 126
      000021 3E                     223 	.db #0x3e	; 62
      000022 3E                     224 	.db #0x3e	; 62
      000023 1C                     225 	.db #0x1c	; 28
      000024 1C                     226 	.db #0x1c	; 28
      000025 0C                     227 	.db #0x0c	; 12
      000026 0C                     228 	.db #0x0c	; 12
      000027 C0                     229 	.db #0xc0	; 192
      000028 C0                     230 	.db #0xc0	; 192
      000029 F0                     231 	.db #0xf0	; 240
      00002A F0                     232 	.db #0xf0	; 240
      00002B FC                     233 	.db #0xfc	; 252
      00002C FC                     234 	.db #0xfc	; 252
      00002D FF                     235 	.db #0xff	; 255
      00002E FF                     236 	.db #0xff	; 255
      00002F FF                     237 	.db #0xff	; 255
      000030 FF                     238 	.db #0xff	; 255
      000031 FC                     239 	.db #0xfc	; 252
      000032 FC                     240 	.db #0xfc	; 252
      000033 F0                     241 	.db #0xf0	; 240
      000034 F0                     242 	.db #0xf0	; 240
      000035 C0                     243 	.db #0xc0	; 192
      000036 C0                     244 	.db #0xc0	; 192
      000037 0C                     245 	.db #0x0c	; 12
      000038 0C                     246 	.db #0x0c	; 12
      000039 1C                     247 	.db #0x1c	; 28
      00003A 1C                     248 	.db #0x1c	; 28
      00003B 3E                     249 	.db #0x3e	; 62
      00003C 3E                     250 	.db #0x3e	; 62
      00003D 7E                     251 	.db #0x7e	; 126
      00003E 7E                     252 	.db #0x7e	; 126
      00003F FF                     253 	.db #0xff	; 255
      000040 FF                     254 	.db #0xff	; 255
      000041 FF                     255 	.db #0xff	; 255
      000042 FF                     256 	.db #0xff	; 255
      000043 3F                     257 	.db #0x3f	; 63
      000044 3F                     258 	.db #0x3f	; 63
      000045 0F                     259 	.db #0x0f	; 15
      000046 0F                     260 	.db #0x0f	; 15
      000047 FF                     261 	.db #0xff	; 255
      000048 FF                     262 	.db #0xff	; 255
      000049 FF                     263 	.db #0xff	; 255
      00004A FF                     264 	.db #0xff	; 255
      00004B 7E                     265 	.db #0x7e	; 126
      00004C 7E                     266 	.db #0x7e	; 126
      00004D 7E                     267 	.db #0x7e	; 126
      00004E 7E                     268 	.db #0x7e	; 126
      00004F 3C                     269 	.db #0x3c	; 60
      000050 3C                     270 	.db #0x3c	; 60
      000051 3C                     271 	.db #0x3c	; 60
      000052 3C                     272 	.db #0x3c	; 60
      000053 18                     273 	.db #0x18	; 24
      000054 18                     274 	.db #0x18	; 24
      000055 18                     275 	.db #0x18	; 24
      000056 18                     276 	.db #0x18	; 24
      000057 30                     277 	.db #0x30	; 48	'0'
      000058 30                     278 	.db #0x30	; 48	'0'
      000059 38                     279 	.db #0x38	; 56	'8'
      00005A 38                     280 	.db #0x38	; 56	'8'
      00005B 7C                     281 	.db #0x7c	; 124
      00005C 7C                     282 	.db #0x7c	; 124
      00005D 7E                     283 	.db #0x7e	; 126
      00005E 7E                     284 	.db #0x7e	; 126
      00005F FF                     285 	.db #0xff	; 255
      000060 FF                     286 	.db #0xff	; 255
      000061 FF                     287 	.db #0xff	; 255
      000062 FF                     288 	.db #0xff	; 255
      000063 FC                     289 	.db #0xfc	; 252
      000064 FC                     290 	.db #0xfc	; 252
      000065 F0                     291 	.db #0xf0	; 240
      000066 F0                     292 	.db #0xf0	; 240
      000067 03                     293 	.db #0x03	; 3
      000068 03                     294 	.db #0x03	; 3
      000069 0F                     295 	.db #0x0f	; 15
      00006A 0F                     296 	.db #0x0f	; 15
      00006B 3F                     297 	.db #0x3f	; 63
      00006C 3F                     298 	.db #0x3f	; 63
      00006D FF                     299 	.db #0xff	; 255
      00006E FF                     300 	.db #0xff	; 255
      00006F FF                     301 	.db #0xff	; 255
      000070 FF                     302 	.db #0xff	; 255
      000071 3F                     303 	.db #0x3f	; 63
      000072 3F                     304 	.db #0x3f	; 63
      000073 0F                     305 	.db #0x0f	; 15
      000074 0F                     306 	.db #0x0f	; 15
      000075 03                     307 	.db #0x03	; 3
      000076 03                     308 	.db #0x03	; 3
      000077 F0                     309 	.db #0xf0	; 240
      000078 F0                     310 	.db #0xf0	; 240
      000079 FC                     311 	.db #0xfc	; 252
      00007A FC                     312 	.db #0xfc	; 252
      00007B FF                     313 	.db #0xff	; 255
      00007C FF                     314 	.db #0xff	; 255
      00007D FF                     315 	.db #0xff	; 255
      00007E FF                     316 	.db #0xff	; 255
      00007F 7E                     317 	.db #0x7e	; 126
      000080 7E                     318 	.db #0x7e	; 126
      000081 7C                     319 	.db #0x7c	; 124
      000082 7C                     320 	.db #0x7c	; 124
      000083 38                     321 	.db #0x38	; 56	'8'
      000084 38                     322 	.db #0x38	; 56	'8'
      000085 30                     323 	.db #0x30	; 48	'0'
      000086 30                     324 	.db #0x30	; 48	'0'
      000087                        325 _background1:
      000087 26                     326 	.db #0x26	; 38
      000088 26                     327 	.db #0x26	; 38
      000089 26                     328 	.db #0x26	; 38
      00008A 26                     329 	.db #0x26	; 38
      00008B 26                     330 	.db #0x26	; 38
      00008C 26                     331 	.db #0x26	; 38
      00008D 26                     332 	.db #0x26	; 38
      00008E 26                     333 	.db #0x26	; 38
      00008F 26                     334 	.db #0x26	; 38
      000090 26                     335 	.db #0x26	; 38
      000091 26                     336 	.db #0x26	; 38
      000092 2A                     337 	.db #0x2a	; 42
      000093 29                     338 	.db #0x29	; 41
      000094 26                     339 	.db #0x26	; 38
      000095 26                     340 	.db #0x26	; 38
      000096 26                     341 	.db #0x26	; 38
      000097 26                     342 	.db #0x26	; 38
      000098 26                     343 	.db #0x26	; 38
      000099 26                     344 	.db #0x26	; 38
      00009A 26                     345 	.db #0x26	; 38
      00009B 2C                     346 	.db #0x2c	; 44
      00009C 26                     347 	.db #0x26	; 38
      00009D 26                     348 	.db #0x26	; 38
      00009E 26                     349 	.db #0x26	; 38
      00009F 26                     350 	.db #0x26	; 38
      0000A0 26                     351 	.db #0x26	; 38
      0000A1 26                     352 	.db #0x26	; 38
      0000A2 26                     353 	.db #0x26	; 38
      0000A3 26                     354 	.db #0x26	; 38
      0000A4 26                     355 	.db #0x26	; 38
      0000A5 26                     356 	.db #0x26	; 38
      0000A6 26                     357 	.db #0x26	; 38
      0000A7 26                     358 	.db #0x26	; 38
      0000A8 2B                     359 	.db #0x2b	; 43
      0000A9 26                     360 	.db #0x26	; 38
      0000AA 26                     361 	.db #0x26	; 38
      0000AB 26                     362 	.db #0x26	; 38
      0000AC 26                     363 	.db #0x26	; 38
      0000AD 26                     364 	.db #0x26	; 38
      0000AE 26                     365 	.db #0x26	; 38
      0000AF 26                     366 	.db #0x26	; 38
      0000B0 26                     367 	.db #0x26	; 38
      0000B1 26                     368 	.db #0x26	; 38
      0000B2 26                     369 	.db #0x26	; 38
      0000B3 26                     370 	.db #0x26	; 38
      0000B4 26                     371 	.db #0x26	; 38
      0000B5 26                     372 	.db #0x26	; 38
      0000B6 26                     373 	.db #0x26	; 38
      0000B7 26                     374 	.db #0x26	; 38
      0000B8 26                     375 	.db #0x26	; 38
      0000B9 26                     376 	.db #0x26	; 38
      0000BA 26                     377 	.db #0x26	; 38
      0000BB 26                     378 	.db #0x26	; 38
      0000BC 26                     379 	.db #0x26	; 38
      0000BD 26                     380 	.db #0x26	; 38
      0000BE 26                     381 	.db #0x26	; 38
      0000BF 26                     382 	.db #0x26	; 38
      0000C0 26                     383 	.db #0x26	; 38
      0000C1 26                     384 	.db #0x26	; 38
      0000C2 26                     385 	.db #0x26	; 38
      0000C3 26                     386 	.db #0x26	; 38
      0000C4 26                     387 	.db #0x26	; 38
      0000C5 26                     388 	.db #0x26	; 38
      0000C6 26                     389 	.db #0x26	; 38
      0000C7 26                     390 	.db #0x26	; 38
      0000C8 26                     391 	.db #0x26	; 38
      0000C9 26                     392 	.db #0x26	; 38
      0000CA 26                     393 	.db #0x26	; 38
      0000CB 26                     394 	.db #0x26	; 38
      0000CC 26                     395 	.db #0x26	; 38
      0000CD 26                     396 	.db #0x26	; 38
      0000CE 26                     397 	.db #0x26	; 38
      0000CF 26                     398 	.db #0x26	; 38
      0000D0 26                     399 	.db #0x26	; 38
      0000D1 26                     400 	.db #0x26	; 38
      0000D2 26                     401 	.db #0x26	; 38
      0000D3 26                     402 	.db #0x26	; 38
      0000D4 26                     403 	.db #0x26	; 38
      0000D5 26                     404 	.db #0x26	; 38
      0000D6 26                     405 	.db #0x26	; 38
      0000D7 26                     406 	.db #0x26	; 38
      0000D8 26                     407 	.db #0x26	; 38
      0000D9 26                     408 	.db #0x26	; 38
      0000DA 26                     409 	.db #0x26	; 38
      0000DB 26                     410 	.db #0x26	; 38
      0000DC 26                     411 	.db #0x26	; 38
      0000DD 26                     412 	.db #0x26	; 38
      0000DE 26                     413 	.db #0x26	; 38
      0000DF 26                     414 	.db #0x26	; 38
      0000E0 26                     415 	.db #0x26	; 38
      0000E1 26                     416 	.db #0x26	; 38
      0000E2 26                     417 	.db #0x26	; 38
      0000E3 26                     418 	.db #0x26	; 38
      0000E4 26                     419 	.db #0x26	; 38
      0000E5 26                     420 	.db #0x26	; 38
      0000E6 26                     421 	.db #0x26	; 38
      0000E7 26                     422 	.db #0x26	; 38
      0000E8 26                     423 	.db #0x26	; 38
      0000E9 26                     424 	.db #0x26	; 38
      0000EA 26                     425 	.db #0x26	; 38
      0000EB 26                     426 	.db #0x26	; 38
      0000EC 26                     427 	.db #0x26	; 38
      0000ED 26                     428 	.db #0x26	; 38
      0000EE 26                     429 	.db #0x26	; 38
      0000EF 26                     430 	.db #0x26	; 38
      0000F0 26                     431 	.db #0x26	; 38
      0000F1 26                     432 	.db #0x26	; 38
      0000F2 26                     433 	.db #0x26	; 38
      0000F3 26                     434 	.db #0x26	; 38
      0000F4 26                     435 	.db #0x26	; 38
      0000F5 26                     436 	.db #0x26	; 38
      0000F6 26                     437 	.db #0x26	; 38
      0000F7 26                     438 	.db #0x26	; 38
      0000F8 2B                     439 	.db #0x2b	; 43
      0000F9 26                     440 	.db #0x26	; 38
      0000FA 26                     441 	.db #0x26	; 38
      0000FB 26                     442 	.db #0x26	; 38
      0000FC 26                     443 	.db #0x26	; 38
      0000FD 26                     444 	.db #0x26	; 38
      0000FE 26                     445 	.db #0x26	; 38
      0000FF 2B                     446 	.db #0x2b	; 43
      000100 26                     447 	.db #0x26	; 38
      000101 26                     448 	.db #0x26	; 38
      000102 26                     449 	.db #0x26	; 38
      000103 26                     450 	.db #0x26	; 38
      000104 26                     451 	.db #0x26	; 38
      000105 26                     452 	.db #0x26	; 38
      000106 26                     453 	.db #0x26	; 38
      000107 26                     454 	.db #0x26	; 38
      000108 26                     455 	.db #0x26	; 38
      000109 26                     456 	.db #0x26	; 38
      00010A 26                     457 	.db #0x26	; 38
      00010B 26                     458 	.db #0x26	; 38
      00010C 2B                     459 	.db #0x2b	; 43
      00010D 26                     460 	.db #0x26	; 38
      00010E 26                     461 	.db #0x26	; 38
      00010F 26                     462 	.db #0x26	; 38
      000110 26                     463 	.db #0x26	; 38
      000111 26                     464 	.db #0x26	; 38
      000112 26                     465 	.db #0x26	; 38
      000113 26                     466 	.db #0x26	; 38
      000114 2C                     467 	.db #0x2c	; 44
      000115 26                     468 	.db #0x26	; 38
      000116 26                     469 	.db #0x26	; 38
      000117 26                     470 	.db #0x26	; 38
      000118 26                     471 	.db #0x26	; 38
      000119 26                     472 	.db #0x26	; 38
      00011A 26                     473 	.db #0x26	; 38
      00011B 26                     474 	.db #0x26	; 38
      00011C 26                     475 	.db #0x26	; 38
      00011D 26                     476 	.db #0x26	; 38
      00011E 26                     477 	.db #0x26	; 38
      00011F 26                     478 	.db #0x26	; 38
      000120 26                     479 	.db #0x26	; 38
      000121 26                     480 	.db #0x26	; 38
      000122 26                     481 	.db #0x26	; 38
      000123 26                     482 	.db #0x26	; 38
      000124 26                     483 	.db #0x26	; 38
      000125 26                     484 	.db #0x26	; 38
      000126 26                     485 	.db #0x26	; 38
      000127 26                     486 	.db #0x26	; 38
      000128 26                     487 	.db #0x26	; 38
      000129 2C                     488 	.db #0x2c	; 44
      00012A 26                     489 	.db #0x26	; 38
      00012B 26                     490 	.db #0x26	; 38
      00012C 26                     491 	.db #0x26	; 38
      00012D 26                     492 	.db #0x26	; 38
      00012E 25                     493 	.db #0x25	; 37
      00012F 26                     494 	.db #0x26	; 38
      000130 26                     495 	.db #0x26	; 38
      000131 26                     496 	.db #0x26	; 38
      000132 26                     497 	.db #0x26	; 38
      000133 26                     498 	.db #0x26	; 38
      000134 26                     499 	.db #0x26	; 38
      000135 26                     500 	.db #0x26	; 38
      000136 26                     501 	.db #0x26	; 38
      000137 26                     502 	.db #0x26	; 38
      000138 26                     503 	.db #0x26	; 38
      000139 26                     504 	.db #0x26	; 38
      00013A 26                     505 	.db #0x26	; 38
      00013B 26                     506 	.db #0x26	; 38
      00013C 2C                     507 	.db #0x2c	; 44
      00013D 26                     508 	.db #0x26	; 38
      00013E 26                     509 	.db #0x26	; 38
      00013F 26                     510 	.db #0x26	; 38
      000140 26                     511 	.db #0x26	; 38
      000141 26                     512 	.db #0x26	; 38
      000142 26                     513 	.db #0x26	; 38
      000143 26                     514 	.db #0x26	; 38
      000144 2B                     515 	.db #0x2b	; 43
      000145 26                     516 	.db #0x26	; 38
      000146 26                     517 	.db #0x26	; 38
      000147 26                     518 	.db #0x26	; 38
      000148 26                     519 	.db #0x26	; 38
      000149 26                     520 	.db #0x26	; 38
      00014A 26                     521 	.db #0x26	; 38
      00014B 26                     522 	.db #0x26	; 38
      00014C 26                     523 	.db #0x26	; 38
      00014D 26                     524 	.db #0x26	; 38
      00014E 26                     525 	.db #0x26	; 38
      00014F 26                     526 	.db #0x26	; 38
      000150 26                     527 	.db #0x26	; 38
      000151 26                     528 	.db #0x26	; 38
      000152 26                     529 	.db #0x26	; 38
      000153 26                     530 	.db #0x26	; 38
      000154 26                     531 	.db #0x26	; 38
      000155 26                     532 	.db #0x26	; 38
      000156 26                     533 	.db #0x26	; 38
      000157 26                     534 	.db #0x26	; 38
      000158 26                     535 	.db #0x26	; 38
      000159 26                     536 	.db #0x26	; 38
      00015A 26                     537 	.db #0x26	; 38
      00015B 26                     538 	.db #0x26	; 38
      00015C 26                     539 	.db #0x26	; 38
      00015D 26                     540 	.db #0x26	; 38
      00015E 26                     541 	.db #0x26	; 38
      00015F 26                     542 	.db #0x26	; 38
      000160 2C                     543 	.db #0x2c	; 44
      000161 26                     544 	.db #0x26	; 38
      000162 26                     545 	.db #0x26	; 38
      000163 26                     546 	.db #0x26	; 38
      000164 26                     547 	.db #0x26	; 38
      000165 26                     548 	.db #0x26	; 38
      000166 26                     549 	.db #0x26	; 38
      000167 26                     550 	.db #0x26	; 38
      000168 26                     551 	.db #0x26	; 38
      000169 26                     552 	.db #0x26	; 38
      00016A 26                     553 	.db #0x26	; 38
      00016B 26                     554 	.db #0x26	; 38
      00016C 26                     555 	.db #0x26	; 38
      00016D 26                     556 	.db #0x26	; 38
      00016E 26                     557 	.db #0x26	; 38
      00016F 26                     558 	.db #0x26	; 38
      000170 26                     559 	.db #0x26	; 38
      000171 26                     560 	.db #0x26	; 38
      000172 26                     561 	.db #0x26	; 38
      000173 26                     562 	.db #0x26	; 38
      000174 26                     563 	.db #0x26	; 38
      000175 26                     564 	.db #0x26	; 38
      000176 26                     565 	.db #0x26	; 38
      000177 26                     566 	.db #0x26	; 38
      000178 26                     567 	.db #0x26	; 38
      000179 26                     568 	.db #0x26	; 38
      00017A 26                     569 	.db #0x26	; 38
      00017B 26                     570 	.db #0x26	; 38
      00017C 26                     571 	.db #0x26	; 38
      00017D 26                     572 	.db #0x26	; 38
      00017E 26                     573 	.db #0x26	; 38
      00017F 26                     574 	.db #0x26	; 38
      000180 26                     575 	.db #0x26	; 38
      000181 26                     576 	.db #0x26	; 38
      000182 26                     577 	.db #0x26	; 38
      000183 26                     578 	.db #0x26	; 38
      000184 26                     579 	.db #0x26	; 38
      000185 26                     580 	.db #0x26	; 38
      000186 26                     581 	.db #0x26	; 38
      000187 26                     582 	.db #0x26	; 38
      000188 26                     583 	.db #0x26	; 38
      000189 26                     584 	.db #0x26	; 38
      00018A 26                     585 	.db #0x26	; 38
      00018B 26                     586 	.db #0x26	; 38
      00018C 26                     587 	.db #0x26	; 38
      00018D 26                     588 	.db #0x26	; 38
      00018E 26                     589 	.db #0x26	; 38
      00018F 26                     590 	.db #0x26	; 38
      000190 26                     591 	.db #0x26	; 38
      000191 26                     592 	.db #0x26	; 38
      000192 26                     593 	.db #0x26	; 38
      000193 26                     594 	.db #0x26	; 38
      000194 26                     595 	.db #0x26	; 38
      000195 2B                     596 	.db #0x2b	; 43
      000196 26                     597 	.db #0x26	; 38
      000197 26                     598 	.db #0x26	; 38
      000198 26                     599 	.db #0x26	; 38
      000199 26                     600 	.db #0x26	; 38
      00019A 26                     601 	.db #0x26	; 38
      00019B 26                     602 	.db #0x26	; 38
      00019C 26                     603 	.db #0x26	; 38
      00019D 26                     604 	.db #0x26	; 38
      00019E 26                     605 	.db #0x26	; 38
      00019F 26                     606 	.db #0x26	; 38
      0001A0 26                     607 	.db #0x26	; 38
      0001A1 26                     608 	.db #0x26	; 38
      0001A2 26                     609 	.db #0x26	; 38
      0001A3 26                     610 	.db #0x26	; 38
      0001A4 26                     611 	.db #0x26	; 38
      0001A5 26                     612 	.db #0x26	; 38
      0001A6 25                     613 	.db #0x25	; 37
      0001A7 26                     614 	.db #0x26	; 38
      0001A8 26                     615 	.db #0x26	; 38
      0001A9 26                     616 	.db #0x26	; 38
      0001AA 2B                     617 	.db #0x2b	; 43
      0001AB 26                     618 	.db #0x26	; 38
      0001AC 26                     619 	.db #0x26	; 38
      0001AD 26                     620 	.db #0x26	; 38
      0001AE 26                     621 	.db #0x26	; 38
      0001AF 26                     622 	.db #0x26	; 38
      0001B0 26                     623 	.db #0x26	; 38
      0001B1 26                     624 	.db #0x26	; 38
      0001B2 26                     625 	.db #0x26	; 38
      0001B3 26                     626 	.db #0x26	; 38
      0001B4 26                     627 	.db #0x26	; 38
      0001B5 26                     628 	.db #0x26	; 38
      0001B6 26                     629 	.db #0x26	; 38
      0001B7 26                     630 	.db #0x26	; 38
      0001B8 26                     631 	.db #0x26	; 38
      0001B9 26                     632 	.db #0x26	; 38
      0001BA 26                     633 	.db #0x26	; 38
      0001BB 26                     634 	.db #0x26	; 38
      0001BC 26                     635 	.db #0x26	; 38
      0001BD 26                     636 	.db #0x26	; 38
      0001BE 26                     637 	.db #0x26	; 38
      0001BF 26                     638 	.db #0x26	; 38
      0001C0 26                     639 	.db #0x26	; 38
      0001C1 26                     640 	.db #0x26	; 38
      0001C2 26                     641 	.db #0x26	; 38
      0001C3 26                     642 	.db #0x26	; 38
      0001C4 2B                     643 	.db #0x2b	; 43
      0001C5 26                     644 	.db #0x26	; 38
      0001C6 26                     645 	.db #0x26	; 38
      0001C7 26                     646 	.db #0x26	; 38
      0001C8 26                     647 	.db #0x26	; 38
      0001C9 26                     648 	.db #0x26	; 38
      0001CA 26                     649 	.db #0x26	; 38
      0001CB 26                     650 	.db #0x26	; 38
      0001CC 26                     651 	.db #0x26	; 38
      0001CD 26                     652 	.db #0x26	; 38
      0001CE 26                     653 	.db #0x26	; 38
      0001CF 26                     654 	.db #0x26	; 38
      0001D0 26                     655 	.db #0x26	; 38
      0001D1 26                     656 	.db #0x26	; 38
      0001D2 26                     657 	.db #0x26	; 38
      0001D3 26                     658 	.db #0x26	; 38
      0001D4 26                     659 	.db #0x26	; 38
      0001D5 26                     660 	.db #0x26	; 38
      0001D6 26                     661 	.db #0x26	; 38
      0001D7 26                     662 	.db #0x26	; 38
      0001D8 26                     663 	.db #0x26	; 38
      0001D9 26                     664 	.db #0x26	; 38
      0001DA 27                     665 	.db #0x27	; 39
      0001DB 28                     666 	.db #0x28	; 40
      0001DC 26                     667 	.db #0x26	; 38
      0001DD 26                     668 	.db #0x26	; 38
      0001DE 26                     669 	.db #0x26	; 38
      0001DF 26                     670 	.db #0x26	; 38
      0001E0 26                     671 	.db #0x26	; 38
      0001E1 26                     672 	.db #0x26	; 38
      0001E2 26                     673 	.db #0x26	; 38
      0001E3 26                     674 	.db #0x26	; 38
      0001E4 26                     675 	.db #0x26	; 38
      0001E5 26                     676 	.db #0x26	; 38
      0001E6 26                     677 	.db #0x26	; 38
      0001E7 26                     678 	.db #0x26	; 38
      0001E8 26                     679 	.db #0x26	; 38
      0001E9 26                     680 	.db #0x26	; 38
      0001EA 26                     681 	.db #0x26	; 38
      0001EB 26                     682 	.db #0x26	; 38
      0001EC 26                     683 	.db #0x26	; 38
      0001ED 26                     684 	.db #0x26	; 38
      0001EE 26                     685 	.db #0x26	; 38
      0001EF 26                     686 	.db #0x26	; 38
      0001F0 26                     687 	.db #0x26	; 38
      0001F1 26                     688 	.db #0x26	; 38
      0001F2 26                     689 	.db #0x26	; 38
      0001F3 26                     690 	.db #0x26	; 38
      0001F4 26                     691 	.db #0x26	; 38
      0001F5 26                     692 	.db #0x26	; 38
      0001F6 26                     693 	.db #0x26	; 38
      0001F7 26                     694 	.db #0x26	; 38
      0001F8 26                     695 	.db #0x26	; 38
      0001F9 26                     696 	.db #0x26	; 38
      0001FA 2A                     697 	.db #0x2a	; 42
      0001FB 29                     698 	.db #0x29	; 41
      0001FC 26                     699 	.db #0x26	; 38
      0001FD 26                     700 	.db #0x26	; 38
      0001FE 26                     701 	.db #0x26	; 38
      0001FF 26                     702 	.db #0x26	; 38
      000200 26                     703 	.db #0x26	; 38
      000201 26                     704 	.db #0x26	; 38
      000202 26                     705 	.db #0x26	; 38
      000203 26                     706 	.db #0x26	; 38
      000204 26                     707 	.db #0x26	; 38
      000205 26                     708 	.db #0x26	; 38
      000206 26                     709 	.db #0x26	; 38
      000207 26                     710 	.db #0x26	; 38
      000208 26                     711 	.db #0x26	; 38
      000209 26                     712 	.db #0x26	; 38
      00020A 26                     713 	.db #0x26	; 38
      00020B 26                     714 	.db #0x26	; 38
      00020C 26                     715 	.db #0x26	; 38
      00020D 26                     716 	.db #0x26	; 38
      00020E 27                     717 	.db #0x27	; 39
      00020F 28                     718 	.db #0x28	; 40
      000210 26                     719 	.db #0x26	; 38
      000211 26                     720 	.db #0x26	; 38
      000212 26                     721 	.db #0x26	; 38
      000213 26                     722 	.db #0x26	; 38
      000214 26                     723 	.db #0x26	; 38
      000215 26                     724 	.db #0x26	; 38
      000216 26                     725 	.db #0x26	; 38
      000217 26                     726 	.db #0x26	; 38
      000218 26                     727 	.db #0x26	; 38
      000219 26                     728 	.db #0x26	; 38
      00021A 26                     729 	.db #0x26	; 38
      00021B 26                     730 	.db #0x26	; 38
      00021C 26                     731 	.db #0x26	; 38
      00021D 26                     732 	.db #0x26	; 38
      00021E 26                     733 	.db #0x26	; 38
      00021F 2C                     734 	.db #0x2c	; 44
      000220 26                     735 	.db #0x26	; 38
      000221 26                     736 	.db #0x26	; 38
      000222 26                     737 	.db #0x26	; 38
      000223 26                     738 	.db #0x26	; 38
      000224 26                     739 	.db #0x26	; 38
      000225 26                     740 	.db #0x26	; 38
      000226 26                     741 	.db #0x26	; 38
      000227 26                     742 	.db #0x26	; 38
      000228 26                     743 	.db #0x26	; 38
      000229 26                     744 	.db #0x26	; 38
      00022A 26                     745 	.db #0x26	; 38
      00022B 26                     746 	.db #0x26	; 38
      00022C 26                     747 	.db #0x26	; 38
      00022D 26                     748 	.db #0x26	; 38
      00022E 2A                     749 	.db #0x2a	; 42
      00022F 29                     750 	.db #0x29	; 41
      000230 26                     751 	.db #0x26	; 38
      000231 26                     752 	.db #0x26	; 38
      000232 26                     753 	.db #0x26	; 38
      000233 26                     754 	.db #0x26	; 38
      000234 26                     755 	.db #0x26	; 38
      000235 26                     756 	.db #0x26	; 38
      000236 26                     757 	.db #0x26	; 38
      000237 26                     758 	.db #0x26	; 38
      000238 26                     759 	.db #0x26	; 38
      000239 26                     760 	.db #0x26	; 38
      00023A 26                     761 	.db #0x26	; 38
      00023B 26                     762 	.db #0x26	; 38
      00023C 26                     763 	.db #0x26	; 38
      00023D 25                     764 	.db #0x25	; 37
      00023E 26                     765 	.db #0x26	; 38
      00023F 26                     766 	.db #0x26	; 38
      000240 26                     767 	.db #0x26	; 38
      000241 26                     768 	.db #0x26	; 38
      000242 26                     769 	.db #0x26	; 38
      000243 26                     770 	.db #0x26	; 38
      000244 2C                     771 	.db #0x2c	; 44
      000245 26                     772 	.db #0x26	; 38
      000246 26                     773 	.db #0x26	; 38
      000247 26                     774 	.db #0x26	; 38
      000248 26                     775 	.db #0x26	; 38
      000249 26                     776 	.db #0x26	; 38
      00024A 26                     777 	.db #0x26	; 38
      00024B 26                     778 	.db #0x26	; 38
      00024C 26                     779 	.db #0x26	; 38
      00024D 26                     780 	.db #0x26	; 38
      00024E 26                     781 	.db #0x26	; 38
      00024F 26                     782 	.db #0x26	; 38
      000250 26                     783 	.db #0x26	; 38
      000251 26                     784 	.db #0x26	; 38
      000252 26                     785 	.db #0x26	; 38
      000253 26                     786 	.db #0x26	; 38
      000254 26                     787 	.db #0x26	; 38
      000255 26                     788 	.db #0x26	; 38
      000256 26                     789 	.db #0x26	; 38
      000257 26                     790 	.db #0x26	; 38
      000258 26                     791 	.db #0x26	; 38
      000259 26                     792 	.db #0x26	; 38
      00025A 26                     793 	.db #0x26	; 38
      00025B 26                     794 	.db #0x26	; 38
      00025C 26                     795 	.db #0x26	; 38
      00025D 26                     796 	.db #0x26	; 38
      00025E 26                     797 	.db #0x26	; 38
      00025F 26                     798 	.db #0x26	; 38
      000260 26                     799 	.db #0x26	; 38
      000261 26                     800 	.db #0x26	; 38
      000262 26                     801 	.db #0x26	; 38
      000263 26                     802 	.db #0x26	; 38
      000264 26                     803 	.db #0x26	; 38
      000265 26                     804 	.db #0x26	; 38
      000266 26                     805 	.db #0x26	; 38
      000267 26                     806 	.db #0x26	; 38
      000268 26                     807 	.db #0x26	; 38
      000269 26                     808 	.db #0x26	; 38
      00026A 2C                     809 	.db #0x2c	; 44
      00026B 26                     810 	.db #0x26	; 38
      00026C 26                     811 	.db #0x26	; 38
      00026D 26                     812 	.db #0x26	; 38
      00026E 26                     813 	.db #0x26	; 38
      00026F 26                     814 	.db #0x26	; 38
      000270 26                     815 	.db #0x26	; 38
      000271 26                     816 	.db #0x26	; 38
      000272 26                     817 	.db #0x26	; 38
      000273 26                     818 	.db #0x26	; 38
      000274 26                     819 	.db #0x26	; 38
      000275 26                     820 	.db #0x26	; 38
      000276 26                     821 	.db #0x26	; 38
      000277 26                     822 	.db #0x26	; 38
      000278 26                     823 	.db #0x26	; 38
      000279 2C                     824 	.db #0x2c	; 44
      00027A 26                     825 	.db #0x26	; 38
      00027B 26                     826 	.db #0x26	; 38
      00027C 26                     827 	.db #0x26	; 38
      00027D 26                     828 	.db #0x26	; 38
      00027E 26                     829 	.db #0x26	; 38
      00027F 26                     830 	.db #0x26	; 38
      000280 26                     831 	.db #0x26	; 38
      000281 26                     832 	.db #0x26	; 38
      000282 26                     833 	.db #0x26	; 38
      000283 26                     834 	.db #0x26	; 38
      000284 26                     835 	.db #0x26	; 38
      000285 26                     836 	.db #0x26	; 38
      000286 26                     837 	.db #0x26	; 38
      000287 26                     838 	.db #0x26	; 38
      000288 26                     839 	.db #0x26	; 38
      000289 26                     840 	.db #0x26	; 38
      00028A 26                     841 	.db #0x26	; 38
      00028B 26                     842 	.db #0x26	; 38
      00028C 26                     843 	.db #0x26	; 38
      00028D 26                     844 	.db #0x26	; 38
      00028E 26                     845 	.db #0x26	; 38
      00028F 26                     846 	.db #0x26	; 38
      000290 26                     847 	.db #0x26	; 38
      000291 26                     848 	.db #0x26	; 38
      000292 26                     849 	.db #0x26	; 38
      000293 26                     850 	.db #0x26	; 38
      000294 26                     851 	.db #0x26	; 38
      000295 2B                     852 	.db #0x2b	; 43
      000296 26                     853 	.db #0x26	; 38
      000297 26                     854 	.db #0x26	; 38
      000298 26                     855 	.db #0x26	; 38
      000299 26                     856 	.db #0x26	; 38
      00029A 26                     857 	.db #0x26	; 38
      00029B 26                     858 	.db #0x26	; 38
      00029C 26                     859 	.db #0x26	; 38
      00029D 26                     860 	.db #0x26	; 38
      00029E 26                     861 	.db #0x26	; 38
      00029F 26                     862 	.db #0x26	; 38
      0002A0 26                     863 	.db #0x26	; 38
      0002A1 26                     864 	.db #0x26	; 38
      0002A2 26                     865 	.db #0x26	; 38
      0002A3 26                     866 	.db #0x26	; 38
      0002A4 26                     867 	.db #0x26	; 38
      0002A5 26                     868 	.db #0x26	; 38
      0002A6 26                     869 	.db #0x26	; 38
      0002A7 28                     870 	.db #0x28	; 40
      0002A8 26                     871 	.db #0x26	; 38
      0002A9 26                     872 	.db #0x26	; 38
      0002AA 26                     873 	.db #0x26	; 38
      0002AB 26                     874 	.db #0x26	; 38
      0002AC 26                     875 	.db #0x26	; 38
      0002AD 26                     876 	.db #0x26	; 38
      0002AE 26                     877 	.db #0x26	; 38
      0002AF 26                     878 	.db #0x26	; 38
      0002B0 26                     879 	.db #0x26	; 38
      0002B1 26                     880 	.db #0x26	; 38
      0002B2 26                     881 	.db #0x26	; 38
      0002B3 26                     882 	.db #0x26	; 38
      0002B4 26                     883 	.db #0x26	; 38
      0002B5 26                     884 	.db #0x26	; 38
      0002B6 26                     885 	.db #0x26	; 38
      0002B7 26                     886 	.db #0x26	; 38
      0002B8 26                     887 	.db #0x26	; 38
      0002B9 26                     888 	.db #0x26	; 38
      0002BA 26                     889 	.db #0x26	; 38
      0002BB 26                     890 	.db #0x26	; 38
      0002BC 26                     891 	.db #0x26	; 38
      0002BD 26                     892 	.db #0x26	; 38
      0002BE 26                     893 	.db #0x26	; 38
      0002BF 26                     894 	.db #0x26	; 38
      0002C0 2B                     895 	.db #0x2b	; 43
      0002C1 26                     896 	.db #0x26	; 38
      0002C2 26                     897 	.db #0x26	; 38
      0002C3 26                     898 	.db #0x26	; 38
      0002C4 26                     899 	.db #0x26	; 38
      0002C5 26                     900 	.db #0x26	; 38
      0002C6 27                     901 	.db #0x27	; 39
      0002C7 29                     902 	.db #0x29	; 41
      0002C8 26                     903 	.db #0x26	; 38
      0002C9 26                     904 	.db #0x26	; 38
      0002CA 26                     905 	.db #0x26	; 38
      0002CB 26                     906 	.db #0x26	; 38
      0002CC 26                     907 	.db #0x26	; 38
      0002CD 26                     908 	.db #0x26	; 38
      0002CE 2B                     909 	.db #0x2b	; 43
      0002CF 26                     910 	.db #0x26	; 38
      0002D0 26                     911 	.db #0x26	; 38
      0002D1 26                     912 	.db #0x26	; 38
      0002D2 26                     913 	.db #0x26	; 38
      0002D3 26                     914 	.db #0x26	; 38
      0002D4 26                     915 	.db #0x26	; 38
      0002D5 26                     916 	.db #0x26	; 38
      0002D6 26                     917 	.db #0x26	; 38
      0002D7 26                     918 	.db #0x26	; 38
      0002D8 26                     919 	.db #0x26	; 38
      0002D9 26                     920 	.db #0x26	; 38
      0002DA 26                     921 	.db #0x26	; 38
      0002DB 26                     922 	.db #0x26	; 38
      0002DC 26                     923 	.db #0x26	; 38
      0002DD 26                     924 	.db #0x26	; 38
      0002DE 26                     925 	.db #0x26	; 38
      0002DF 26                     926 	.db #0x26	; 38
      0002E0 26                     927 	.db #0x26	; 38
      0002E1 26                     928 	.db #0x26	; 38
      0002E2 26                     929 	.db #0x26	; 38
      0002E3 26                     930 	.db #0x26	; 38
      0002E4 26                     931 	.db #0x26	; 38
      0002E5 26                     932 	.db #0x26	; 38
      0002E6 2A                     933 	.db #0x2a	; 42
      0002E7 26                     934 	.db #0x26	; 38
      0002E8 26                     935 	.db #0x26	; 38
      0002E9 26                     936 	.db #0x26	; 38
      0002EA 26                     937 	.db #0x26	; 38
      0002EB 26                     938 	.db #0x26	; 38
      0002EC 26                     939 	.db #0x26	; 38
      0002ED 26                     940 	.db #0x26	; 38
      0002EE 26                     941 	.db #0x26	; 38
      0002EF 26                     942 	.db #0x26	; 38
      0002F0 26                     943 	.db #0x26	; 38
      0002F1 26                     944 	.db #0x26	; 38
      0002F2 2C                     945 	.db #0x2c	; 44
      0002F3 26                     946 	.db #0x26	; 38
      0002F4 26                     947 	.db #0x26	; 38
      0002F5 26                     948 	.db #0x26	; 38
      0002F6 26                     949 	.db #0x26	; 38
      0002F7 26                     950 	.db #0x26	; 38
      0002F8 26                     951 	.db #0x26	; 38
      0002F9 26                     952 	.db #0x26	; 38
      0002FA 26                     953 	.db #0x26	; 38
      0002FB 26                     954 	.db #0x26	; 38
      0002FC 26                     955 	.db #0x26	; 38
      0002FD 26                     956 	.db #0x26	; 38
      0002FE 26                     957 	.db #0x26	; 38
      0002FF 26                     958 	.db #0x26	; 38
      000300 26                     959 	.db #0x26	; 38
      000301 26                     960 	.db #0x26	; 38
      000302 26                     961 	.db #0x26	; 38
      000303 26                     962 	.db #0x26	; 38
      000304 26                     963 	.db #0x26	; 38
      000305 26                     964 	.db #0x26	; 38
      000306 26                     965 	.db #0x26	; 38
      000307 26                     966 	.db #0x26	; 38
      000308 26                     967 	.db #0x26	; 38
      000309 26                     968 	.db #0x26	; 38
      00030A 26                     969 	.db #0x26	; 38
      00030B 26                     970 	.db #0x26	; 38
      00030C 26                     971 	.db #0x26	; 38
      00030D 26                     972 	.db #0x26	; 38
      00030E 26                     973 	.db #0x26	; 38
      00030F 26                     974 	.db #0x26	; 38
      000310 26                     975 	.db #0x26	; 38
      000311 26                     976 	.db #0x26	; 38
      000312 26                     977 	.db #0x26	; 38
      000313 26                     978 	.db #0x26	; 38
      000314 26                     979 	.db #0x26	; 38
      000315 26                     980 	.db #0x26	; 38
      000316 26                     981 	.db #0x26	; 38
      000317 2B                     982 	.db #0x2b	; 43
      000318 26                     983 	.db #0x26	; 38
      000319 26                     984 	.db #0x26	; 38
      00031A 26                     985 	.db #0x26	; 38
      00031B 26                     986 	.db #0x26	; 38
      00031C 26                     987 	.db #0x26	; 38
      00031D 26                     988 	.db #0x26	; 38
      00031E 26                     989 	.db #0x26	; 38
      00031F 26                     990 	.db #0x26	; 38
      000320 26                     991 	.db #0x26	; 38
      000321 26                     992 	.db #0x26	; 38
      000322 26                     993 	.db #0x26	; 38
      000323 26                     994 	.db #0x26	; 38
      000324 26                     995 	.db #0x26	; 38
      000325 26                     996 	.db #0x26	; 38
      000326 26                     997 	.db #0x26	; 38
      000327 26                     998 	.db #0x26	; 38
      000328 26                     999 	.db #0x26	; 38
      000329 26                    1000 	.db #0x26	; 38
      00032A 26                    1001 	.db #0x26	; 38
      00032B 26                    1002 	.db #0x26	; 38
      00032C 26                    1003 	.db #0x26	; 38
      00032D 26                    1004 	.db #0x26	; 38
      00032E 26                    1005 	.db #0x26	; 38
      00032F 26                    1006 	.db #0x26	; 38
      000330 26                    1007 	.db #0x26	; 38
      000331 26                    1008 	.db #0x26	; 38
      000332 26                    1009 	.db #0x26	; 38
      000333 26                    1010 	.db #0x26	; 38
      000334 26                    1011 	.db #0x26	; 38
      000335 26                    1012 	.db #0x26	; 38
      000336 26                    1013 	.db #0x26	; 38
      000337 26                    1014 	.db #0x26	; 38
      000338 26                    1015 	.db #0x26	; 38
      000339 26                    1016 	.db #0x26	; 38
      00033A 26                    1017 	.db #0x26	; 38
      00033B 26                    1018 	.db #0x26	; 38
      00033C 26                    1019 	.db #0x26	; 38
      00033D 26                    1020 	.db #0x26	; 38
      00033E 2B                    1021 	.db #0x2b	; 43
      00033F 26                    1022 	.db #0x26	; 38
      000340 26                    1023 	.db #0x26	; 38
      000341 26                    1024 	.db #0x26	; 38
      000342 26                    1025 	.db #0x26	; 38
      000343 26                    1026 	.db #0x26	; 38
      000344 26                    1027 	.db #0x26	; 38
      000345 26                    1028 	.db #0x26	; 38
      000346 26                    1029 	.db #0x26	; 38
      000347 26                    1030 	.db #0x26	; 38
      000348 26                    1031 	.db #0x26	; 38
      000349 26                    1032 	.db #0x26	; 38
      00034A 2B                    1033 	.db #0x2b	; 43
      00034B 26                    1034 	.db #0x26	; 38
      00034C 26                    1035 	.db #0x26	; 38
      00034D 26                    1036 	.db #0x26	; 38
      00034E 26                    1037 	.db #0x26	; 38
      00034F 26                    1038 	.db #0x26	; 38
      000350 26                    1039 	.db #0x26	; 38
      000351 26                    1040 	.db #0x26	; 38
      000352 26                    1041 	.db #0x26	; 38
      000353 26                    1042 	.db #0x26	; 38
      000354 26                    1043 	.db #0x26	; 38
      000355 26                    1044 	.db #0x26	; 38
      000356 26                    1045 	.db #0x26	; 38
      000357 26                    1046 	.db #0x26	; 38
      000358 26                    1047 	.db #0x26	; 38
      000359 26                    1048 	.db #0x26	; 38
      00035A 26                    1049 	.db #0x26	; 38
      00035B 26                    1050 	.db #0x26	; 38
      00035C 26                    1051 	.db #0x26	; 38
      00035D 26                    1052 	.db #0x26	; 38
      00035E 26                    1053 	.db #0x26	; 38
      00035F 26                    1054 	.db #0x26	; 38
      000360 26                    1055 	.db #0x26	; 38
      000361 26                    1056 	.db #0x26	; 38
      000362 26                    1057 	.db #0x26	; 38
      000363 26                    1058 	.db #0x26	; 38
      000364 26                    1059 	.db #0x26	; 38
      000365 26                    1060 	.db #0x26	; 38
      000366 2C                    1061 	.db #0x2c	; 44
      000367 26                    1062 	.db #0x26	; 38
      000368 26                    1063 	.db #0x26	; 38
      000369 26                    1064 	.db #0x26	; 38
      00036A 26                    1065 	.db #0x26	; 38
      00036B 26                    1066 	.db #0x26	; 38
      00036C 26                    1067 	.db #0x26	; 38
      00036D 26                    1068 	.db #0x26	; 38
      00036E 26                    1069 	.db #0x26	; 38
      00036F 26                    1070 	.db #0x26	; 38
      000370 2B                    1071 	.db #0x2b	; 43
      000371 26                    1072 	.db #0x26	; 38
      000372 26                    1073 	.db #0x26	; 38
      000373 26                    1074 	.db #0x26	; 38
      000374 26                    1075 	.db #0x26	; 38
      000375 26                    1076 	.db #0x26	; 38
      000376 26                    1077 	.db #0x26	; 38
      000377 26                    1078 	.db #0x26	; 38
      000378 26                    1079 	.db #0x26	; 38
      000379 26                    1080 	.db #0x26	; 38
      00037A 26                    1081 	.db #0x26	; 38
      00037B 26                    1082 	.db #0x26	; 38
      00037C 26                    1083 	.db #0x26	; 38
      00037D 26                    1084 	.db #0x26	; 38
      00037E 26                    1085 	.db #0x26	; 38
      00037F 26                    1086 	.db #0x26	; 38
      000380 26                    1087 	.db #0x26	; 38
      000381 26                    1088 	.db #0x26	; 38
      000382 26                    1089 	.db #0x26	; 38
      000383 26                    1090 	.db #0x26	; 38
      000384 26                    1091 	.db #0x26	; 38
      000385 26                    1092 	.db #0x26	; 38
      000386 26                    1093 	.db #0x26	; 38
      000387 26                    1094 	.db #0x26	; 38
      000388 26                    1095 	.db #0x26	; 38
      000389 26                    1096 	.db #0x26	; 38
      00038A 26                    1097 	.db #0x26	; 38
      00038B 26                    1098 	.db #0x26	; 38
      00038C 26                    1099 	.db #0x26	; 38
      00038D 26                    1100 	.db #0x26	; 38
      00038E 26                    1101 	.db #0x26	; 38
      00038F 26                    1102 	.db #0x26	; 38
      000390 26                    1103 	.db #0x26	; 38
      000391 26                    1104 	.db #0x26	; 38
      000392 26                    1105 	.db #0x26	; 38
      000393 26                    1106 	.db #0x26	; 38
      000394 26                    1107 	.db #0x26	; 38
      000395 26                    1108 	.db #0x26	; 38
      000396 26                    1109 	.db #0x26	; 38
      000397 26                    1110 	.db #0x26	; 38
      000398 27                    1111 	.db #0x27	; 39
      000399 28                    1112 	.db #0x28	; 40
      00039A 26                    1113 	.db #0x26	; 38
      00039B 26                    1114 	.db #0x26	; 38
      00039C 26                    1115 	.db #0x26	; 38
      00039D 26                    1116 	.db #0x26	; 38
      00039E 26                    1117 	.db #0x26	; 38
      00039F 26                    1118 	.db #0x26	; 38
      0003A0 26                    1119 	.db #0x26	; 38
      0003A1 26                    1120 	.db #0x26	; 38
      0003A2 26                    1121 	.db #0x26	; 38
      0003A3 26                    1122 	.db #0x26	; 38
      0003A4 26                    1123 	.db #0x26	; 38
      0003A5 26                    1124 	.db #0x26	; 38
      0003A6 26                    1125 	.db #0x26	; 38
      0003A7 26                    1126 	.db #0x26	; 38
      0003A8 26                    1127 	.db #0x26	; 38
      0003A9 26                    1128 	.db #0x26	; 38
      0003AA 26                    1129 	.db #0x26	; 38
      0003AB 26                    1130 	.db #0x26	; 38
      0003AC 26                    1131 	.db #0x26	; 38
      0003AD 2B                    1132 	.db #0x2b	; 43
      0003AE 26                    1133 	.db #0x26	; 38
      0003AF 26                    1134 	.db #0x26	; 38
      0003B0 26                    1135 	.db #0x26	; 38
      0003B1 26                    1136 	.db #0x26	; 38
      0003B2 26                    1137 	.db #0x26	; 38
      0003B3 26                    1138 	.db #0x26	; 38
      0003B4 26                    1139 	.db #0x26	; 38
      0003B5 25                    1140 	.db #0x25	; 37
      0003B6 26                    1141 	.db #0x26	; 38
      0003B7 26                    1142 	.db #0x26	; 38
      0003B8 2A                    1143 	.db #0x2a	; 42
      0003B9 29                    1144 	.db #0x29	; 41
      0003BA 26                    1145 	.db #0x26	; 38
      0003BB 26                    1146 	.db #0x26	; 38
      0003BC 26                    1147 	.db #0x26	; 38
      0003BD 26                    1148 	.db #0x26	; 38
      0003BE 26                    1149 	.db #0x26	; 38
      0003BF 26                    1150 	.db #0x26	; 38
      0003C0 26                    1151 	.db #0x26	; 38
      0003C1 26                    1152 	.db #0x26	; 38
      0003C2 2B                    1153 	.db #0x2b	; 43
      0003C3 26                    1154 	.db #0x26	; 38
      0003C4 26                    1155 	.db #0x26	; 38
      0003C5 26                    1156 	.db #0x26	; 38
      0003C6 26                    1157 	.db #0x26	; 38
      0003C7 26                    1158 	.db #0x26	; 38
      0003C8 26                    1159 	.db #0x26	; 38
      0003C9 2C                    1160 	.db #0x2c	; 44
      0003CA 26                    1161 	.db #0x26	; 38
      0003CB 26                    1162 	.db #0x26	; 38
      0003CC 26                    1163 	.db #0x26	; 38
      0003CD 26                    1164 	.db #0x26	; 38
      0003CE 26                    1165 	.db #0x26	; 38
      0003CF 26                    1166 	.db #0x26	; 38
      0003D0 26                    1167 	.db #0x26	; 38
      0003D1 26                    1168 	.db #0x26	; 38
      0003D2 26                    1169 	.db #0x26	; 38
      0003D3 26                    1170 	.db #0x26	; 38
      0003D4 26                    1171 	.db #0x26	; 38
      0003D5 2C                    1172 	.db #0x2c	; 44
      0003D6 26                    1173 	.db #0x26	; 38
      0003D7 26                    1174 	.db #0x26	; 38
      0003D8 26                    1175 	.db #0x26	; 38
      0003D9 26                    1176 	.db #0x26	; 38
      0003DA 26                    1177 	.db #0x26	; 38
      0003DB 26                    1178 	.db #0x26	; 38
      0003DC 26                    1179 	.db #0x26	; 38
      0003DD 26                    1180 	.db #0x26	; 38
      0003DE 26                    1181 	.db #0x26	; 38
      0003DF 26                    1182 	.db #0x26	; 38
      0003E0 26                    1183 	.db #0x26	; 38
      0003E1 26                    1184 	.db #0x26	; 38
      0003E2 26                    1185 	.db #0x26	; 38
      0003E3 26                    1186 	.db #0x26	; 38
      0003E4 26                    1187 	.db #0x26	; 38
      0003E5 26                    1188 	.db #0x26	; 38
      0003E6 26                    1189 	.db #0x26	; 38
      0003E7 26                    1190 	.db #0x26	; 38
      0003E8 26                    1191 	.db #0x26	; 38
      0003E9 26                    1192 	.db #0x26	; 38
      0003EA 26                    1193 	.db #0x26	; 38
      0003EB 26                    1194 	.db #0x26	; 38
      0003EC 26                    1195 	.db #0x26	; 38
      0003ED 26                    1196 	.db #0x26	; 38
      0003EE 26                    1197 	.db #0x26	; 38
      0003EF 26                    1198 	.db #0x26	; 38
      0003F0 26                    1199 	.db #0x26	; 38
      0003F1 26                    1200 	.db #0x26	; 38
      0003F2 26                    1201 	.db #0x26	; 38
      0003F3 26                    1202 	.db #0x26	; 38
      0003F4 26                    1203 	.db #0x26	; 38
      0003F5 26                    1204 	.db #0x26	; 38
      0003F6 26                    1205 	.db #0x26	; 38
      0003F7 26                    1206 	.db #0x26	; 38
      0003F8 26                    1207 	.db #0x26	; 38
      0003F9 26                    1208 	.db #0x26	; 38
      0003FA 26                    1209 	.db #0x26	; 38
      0003FB 26                    1210 	.db #0x26	; 38
      0003FC 26                    1211 	.db #0x26	; 38
      0003FD 26                    1212 	.db #0x26	; 38
      0003FE 26                    1213 	.db #0x26	; 38
      0003FF 26                    1214 	.db #0x26	; 38
      000400 26                    1215 	.db #0x26	; 38
      000401 26                    1216 	.db #0x26	; 38
      000402 26                    1217 	.db #0x26	; 38
      000403 26                    1218 	.db #0x26	; 38
      000404 26                    1219 	.db #0x26	; 38
      000405 26                    1220 	.db #0x26	; 38
      000406 26                    1221 	.db #0x26	; 38
      000407 26                    1222 	.db #0x26	; 38
      000408 26                    1223 	.db #0x26	; 38
      000409 26                    1224 	.db #0x26	; 38
      00040A 26                    1225 	.db #0x26	; 38
      00040B 26                    1226 	.db #0x26	; 38
      00040C 26                    1227 	.db #0x26	; 38
      00040D 2B                    1228 	.db #0x2b	; 43
      00040E 26                    1229 	.db #0x26	; 38
      00040F 26                    1230 	.db #0x26	; 38
      000410 26                    1231 	.db #0x26	; 38
      000411 26                    1232 	.db #0x26	; 38
      000412 26                    1233 	.db #0x26	; 38
      000413 26                    1234 	.db #0x26	; 38
      000414 26                    1235 	.db #0x26	; 38
      000415 26                    1236 	.db #0x26	; 38
      000416 26                    1237 	.db #0x26	; 38
      000417 26                    1238 	.db #0x26	; 38
      000418 26                    1239 	.db #0x26	; 38
      000419 26                    1240 	.db #0x26	; 38
      00041A 26                    1241 	.db #0x26	; 38
      00041B 26                    1242 	.db #0x26	; 38
      00041C 26                    1243 	.db #0x26	; 38
      00041D 26                    1244 	.db #0x26	; 38
      00041E 26                    1245 	.db #0x26	; 38
      00041F 26                    1246 	.db #0x26	; 38
      000420 2B                    1247 	.db #0x2b	; 43
      000421 26                    1248 	.db #0x26	; 38
      000422 26                    1249 	.db #0x26	; 38
      000423 26                    1250 	.db #0x26	; 38
      000424 26                    1251 	.db #0x26	; 38
      000425 26                    1252 	.db #0x26	; 38
      000426 26                    1253 	.db #0x26	; 38
      000427 26                    1254 	.db #0x26	; 38
      000428 26                    1255 	.db #0x26	; 38
      000429 26                    1256 	.db #0x26	; 38
      00042A 26                    1257 	.db #0x26	; 38
      00042B 26                    1258 	.db #0x26	; 38
      00042C 26                    1259 	.db #0x26	; 38
      00042D 26                    1260 	.db #0x26	; 38
      00042E 26                    1261 	.db #0x26	; 38
      00042F 26                    1262 	.db #0x26	; 38
      000430 26                    1263 	.db #0x26	; 38
      000431 26                    1264 	.db #0x26	; 38
      000432 26                    1265 	.db #0x26	; 38
      000433 26                    1266 	.db #0x26	; 38
      000434 26                    1267 	.db #0x26	; 38
      000435 26                    1268 	.db #0x26	; 38
      000436 26                    1269 	.db #0x26	; 38
      000437 2C                    1270 	.db #0x2c	; 44
      000438 26                    1271 	.db #0x26	; 38
      000439 26                    1272 	.db #0x26	; 38
      00043A 26                    1273 	.db #0x26	; 38
      00043B 26                    1274 	.db #0x26	; 38
      00043C 26                    1275 	.db #0x26	; 38
      00043D 26                    1276 	.db #0x26	; 38
      00043E 26                    1277 	.db #0x26	; 38
      00043F 26                    1278 	.db #0x26	; 38
      000440 26                    1279 	.db #0x26	; 38
      000441 26                    1280 	.db #0x26	; 38
      000442 26                    1281 	.db #0x26	; 38
      000443 26                    1282 	.db #0x26	; 38
      000444 26                    1283 	.db #0x26	; 38
      000445 26                    1284 	.db #0x26	; 38
      000446 26                    1285 	.db #0x26	; 38
      000447 26                    1286 	.db #0x26	; 38
      000448 25                    1287 	.db #0x25	; 37
      000449 2C                    1288 	.db #0x2c	; 44
      00044A 26                    1289 	.db #0x26	; 38
      00044B 26                    1290 	.db #0x26	; 38
      00044C 26                    1291 	.db #0x26	; 38
      00044D 26                    1292 	.db #0x26	; 38
      00044E 26                    1293 	.db #0x26	; 38
      00044F 26                    1294 	.db #0x26	; 38
      000450 26                    1295 	.db #0x26	; 38
      000451 26                    1296 	.db #0x26	; 38
      000452 26                    1297 	.db #0x26	; 38
      000453 26                    1298 	.db #0x26	; 38
      000454 26                    1299 	.db #0x26	; 38
      000455 26                    1300 	.db #0x26	; 38
      000456 26                    1301 	.db #0x26	; 38
      000457 26                    1302 	.db #0x26	; 38
      000458 26                    1303 	.db #0x26	; 38
      000459 26                    1304 	.db #0x26	; 38
      00045A 2B                    1305 	.db #0x2b	; 43
      00045B 26                    1306 	.db #0x26	; 38
      00045C 26                    1307 	.db #0x26	; 38
      00045D 26                    1308 	.db #0x26	; 38
      00045E 26                    1309 	.db #0x26	; 38
      00045F 26                    1310 	.db #0x26	; 38
      000460 26                    1311 	.db #0x26	; 38
      000461 26                    1312 	.db #0x26	; 38
      000462 26                    1313 	.db #0x26	; 38
      000463 26                    1314 	.db #0x26	; 38
      000464 26                    1315 	.db #0x26	; 38
      000465 26                    1316 	.db #0x26	; 38
      000466 26                    1317 	.db #0x26	; 38
      000467 26                    1318 	.db #0x26	; 38
      000468 26                    1319 	.db #0x26	; 38
      000469 26                    1320 	.db #0x26	; 38
      00046A 26                    1321 	.db #0x26	; 38
      00046B 26                    1322 	.db #0x26	; 38
      00046C 26                    1323 	.db #0x26	; 38
      00046D 26                    1324 	.db #0x26	; 38
      00046E 26                    1325 	.db #0x26	; 38
      00046F 26                    1326 	.db #0x26	; 38
      000470 26                    1327 	.db #0x26	; 38
      000471 26                    1328 	.db #0x26	; 38
      000472 27                    1329 	.db #0x27	; 39
      000473 28                    1330 	.db #0x28	; 40
      000474 26                    1331 	.db #0x26	; 38
      000475 26                    1332 	.db #0x26	; 38
      000476 26                    1333 	.db #0x26	; 38
      000477 26                    1334 	.db #0x26	; 38
      000478 26                    1335 	.db #0x26	; 38
      000479 26                    1336 	.db #0x26	; 38
      00047A 26                    1337 	.db #0x26	; 38
      00047B 26                    1338 	.db #0x26	; 38
      00047C 26                    1339 	.db #0x26	; 38
      00047D 26                    1340 	.db #0x26	; 38
      00047E 26                    1341 	.db #0x26	; 38
      00047F 26                    1342 	.db #0x26	; 38
      000480 26                    1343 	.db #0x26	; 38
      000481 26                    1344 	.db #0x26	; 38
      000482 26                    1345 	.db #0x26	; 38
      000483 26                    1346 	.db #0x26	; 38
      000484 26                    1347 	.db #0x26	; 38
      000485 26                    1348 	.db #0x26	; 38
      000486 2B                    1349 	.db #0x2b	; 43
      000487                       1350 _backgroundtiles:
      000487 40                    1351 	.db #0x40	; 64
      000488 38                    1352 	.db #0x38	; 56	'8'
      000489 3A                    1353 	.db #0x3a	; 58
      00048A 44                    1354 	.db #0x44	; 68	'D'
      00048B 7C                    1355 	.db #0x7c	; 124
      00048C 9A                    1356 	.db #0x9a	; 154
      00048D 5E                    1357 	.db #0x5e	; 94
      00048E E9                    1358 	.db #0xe9	; 233
      00048F 7A                    1359 	.db #0x7a	; 122	'z'
      000490 87                    1360 	.db #0x87	; 135
      000491 76                    1361 	.db #0x76	; 118	'v'
      000492 B9                    1362 	.db #0xb9	; 185
      000493 3C                    1363 	.db #0x3c	; 60
      000494 72                    1364 	.db #0x72	; 114	'r'
      000495 00                    1365 	.db #0x00	; 0
      000496 3C                    1366 	.db #0x3c	; 60
      000497 00                    1367 	.db #0x00	; 0
      000498 00                    1368 	.db #0x00	; 0
      000499 00                    1369 	.db #0x00	; 0
      00049A 00                    1370 	.db #0x00	; 0
      00049B 00                    1371 	.db #0x00	; 0
      00049C 00                    1372 	.db #0x00	; 0
      00049D 00                    1373 	.db #0x00	; 0
      00049E 00                    1374 	.db #0x00	; 0
      00049F 00                    1375 	.db #0x00	; 0
      0004A0 00                    1376 	.db #0x00	; 0
      0004A1 00                    1377 	.db #0x00	; 0
      0004A2 00                    1378 	.db #0x00	; 0
      0004A3 00                    1379 	.db #0x00	; 0
      0004A4 00                    1380 	.db #0x00	; 0
      0004A5 00                    1381 	.db #0x00	; 0
      0004A6 00                    1382 	.db #0x00	; 0
      0004A7 00                    1383 	.db #0x00	; 0
      0004A8 0F                    1384 	.db #0x0f	; 15
      0004A9 08                    1385 	.db #0x08	; 8
      0004AA 17                    1386 	.db #0x17	; 23
      0004AB 1C                    1387 	.db #0x1c	; 28
      0004AC 23                    1388 	.db #0x23	; 35
      0004AD 3E                    1389 	.db #0x3e	; 62
      0004AE 41                    1390 	.db #0x41	; 65	'A'
      0004AF 1B                    1391 	.db #0x1b	; 27
      0004B0 64                    1392 	.db #0x64	; 100	'd'
      0004B1 31                    1393 	.db #0x31	; 49	'1'
      0004B2 4E                    1394 	.db #0x4e	; 78	'N'
      0004B3 B1                    1395 	.db #0xb1	; 177
      0004B4 CE                    1396 	.db #0xce	; 206
      0004B5 BB                    1397 	.db #0xbb	; 187
      0004B6 C4                    1398 	.db #0xc4	; 196
      0004B7 00                    1399 	.db #0x00	; 0
      0004B8 F8                    1400 	.db #0xf8	; 248
      0004B9 00                    1401 	.db #0x00	; 0
      0004BA FC                    1402 	.db #0xfc	; 252
      0004BB E0                    1403 	.db #0xe0	; 224
      0004BC 1E                    1404 	.db #0x1e	; 30
      0004BD F0                    1405 	.db #0xf0	; 240
      0004BE 0F                    1406 	.db #0x0f	; 15
      0004BF BE                    1407 	.db #0xbe	; 190
      0004C0 01                    1408 	.db #0x01	; 1
      0004C1 BC                    1409 	.db #0xbc	; 188
      0004C2 02                    1410 	.db #0x02	; 2
      0004C3 CE                    1411 	.db #0xce	; 206
      0004C4 01                    1412 	.db #0x01	; 1
      0004C5 F6                    1413 	.db #0xf6	; 246
      0004C6 61                    1414 	.db #0x61	; 97	'a'
      0004C7 F4                    1415 	.db #0xf4	; 244
      0004C8 02                    1416 	.db #0x02	; 2
      0004C9 94                    1417 	.db #0x94	; 148
      0004CA 62                    1418 	.db #0x62	; 98	'b'
      0004CB E4                    1419 	.db #0xe4	; 228
      0004CC 02                    1420 	.db #0x02	; 2
      0004CD 6C                    1421 	.db #0x6c	; 108	'l'
      0004CE 82                    1422 	.db #0x82	; 130
      0004CF 70                    1423 	.db #0x70	; 112	'p'
      0004D0 8C                    1424 	.db #0x8c	; 140
      0004D1 60                    1425 	.db #0x60	; 96
      0004D2 90                    1426 	.db #0x90	; 144
      0004D3 00                    1427 	.db #0x00	; 0
      0004D4 E0                    1428 	.db #0xe0	; 224
      0004D5 80                    1429 	.db #0x80	; 128
      0004D6 80                    1430 	.db #0x80	; 128
      0004D7 8E                    1431 	.db #0x8e	; 142
      0004D8 F7                    1432 	.db #0xf7	; 247
      0004D9 8F                    1433 	.db #0x8f	; 143
      0004DA F3                    1434 	.db #0xf3	; 243
      0004DB 86                    1435 	.db #0x86	; 134
      0004DC F9                    1436 	.db #0xf9	; 249
      0004DD 42                    1437 	.db #0x42	; 66	'B'
      0004DE 7D                    1438 	.db #0x7d	; 125
      0004DF 80                    1439 	.db #0x80	; 128
      0004E0 FF                    1440 	.db #0xff	; 255
      0004E1 44                    1441 	.db #0x44	; 68	'D'
      0004E2 7F                    1442 	.db #0x7f	; 127
      0004E3 28                    1443 	.db #0x28	; 40
      0004E4 3F                    1444 	.db #0x3f	; 63
      0004E5 07                    1445 	.db #0x07	; 7
      0004E6 07                    1446 	.db #0x07	; 7
      0004E7 00                    1447 	.db #0x00	; 0
      0004E8 00                    1448 	.db #0x00	; 0
      0004E9 08                    1449 	.db #0x08	; 8
      0004EA 00                    1450 	.db #0x00	; 0
      0004EB 08                    1451 	.db #0x08	; 8
      0004EC 00                    1452 	.db #0x00	; 0
      0004ED 1C                    1453 	.db #0x1c	; 28
      0004EE 00                    1454 	.db #0x00	; 0
      0004EF 7F                    1455 	.db #0x7f	; 127
      0004F0 00                    1456 	.db #0x00	; 0
      0004F1 1C                    1457 	.db #0x1c	; 28
      0004F2 00                    1458 	.db #0x00	; 0
      0004F3 08                    1459 	.db #0x08	; 8
      0004F4 00                    1460 	.db #0x00	; 0
      0004F5 08                    1461 	.db #0x08	; 8
      0004F6 00                    1462 	.db #0x00	; 0
      0004F7 00                    1463 	.db #0x00	; 0
      0004F8 00                    1464 	.db #0x00	; 0
      0004F9 00                    1465 	.db #0x00	; 0
      0004FA 00                    1466 	.db #0x00	; 0
      0004FB 00                    1467 	.db #0x00	; 0
      0004FC 00                    1468 	.db #0x00	; 0
      0004FD 10                    1469 	.db #0x10	; 16
      0004FE 00                    1470 	.db #0x00	; 0
      0004FF 00                    1471 	.db #0x00	; 0
      000500 00                    1472 	.db #0x00	; 0
      000501 00                    1473 	.db #0x00	; 0
      000502 00                    1474 	.db #0x00	; 0
      000503 00                    1475 	.db #0x00	; 0
      000504 00                    1476 	.db #0x00	; 0
      000505 00                    1477 	.db #0x00	; 0
      000506 00                    1478 	.db #0x00	; 0
      000507                       1479 _healthblock:
      000507 FE                    1480 	.db #0xfe	; 254
      000508 FE                    1481 	.db #0xfe	; 254
      000509 FE                    1482 	.db #0xfe	; 254
      00050A FE                    1483 	.db #0xfe	; 254
      00050B FE                    1484 	.db #0xfe	; 254
      00050C FE                    1485 	.db #0xfe	; 254
      00050D FE                    1486 	.db #0xfe	; 254
      00050E FE                    1487 	.db #0xfe	; 254
      00050F FE                    1488 	.db #0xfe	; 254
      000510 FE                    1489 	.db #0xfe	; 254
      000511 FE                    1490 	.db #0xfe	; 254
      000512 FE                    1491 	.db #0xfe	; 254
      000513 FE                    1492 	.db #0xfe	; 254
      000514 FE                    1493 	.db #0xfe	; 254
      000515 00                    1494 	.db #0x00	; 0
      000516 00                    1495 	.db #0x00	; 0
      000517                       1496 _enemy1:
      000517 3C                    1497 	.db #0x3c	; 60
      000518 3C                    1498 	.db #0x3c	; 60
      000519 7E                    1499 	.db #0x7e	; 126
      00051A 7E                    1500 	.db #0x7e	; 126
      00051B FF                    1501 	.db #0xff	; 255
      00051C FF                    1502 	.db #0xff	; 255
      00051D FF                    1503 	.db #0xff	; 255
      00051E FF                    1504 	.db #0xff	; 255
      00051F FF                    1505 	.db #0xff	; 255
      000520 FF                    1506 	.db #0xff	; 255
      000521 FF                    1507 	.db #0xff	; 255
      000522 FF                    1508 	.db #0xff	; 255
      000523 7E                    1509 	.db #0x7e	; 126
      000524 7E                    1510 	.db #0x7e	; 126
      000525 3C                    1511 	.db #0x3c	; 60
      000526 3C                    1512 	.db #0x3c	; 60
      000527                       1513 _projectile1:
      000527 3C                    1514 	.db #0x3c	; 60
      000528 3C                    1515 	.db #0x3c	; 60
      000529 7E                    1516 	.db #0x7e	; 126
      00052A 7E                    1517 	.db #0x7e	; 126
      00052B FF                    1518 	.db #0xff	; 255
      00052C FF                    1519 	.db #0xff	; 255
      00052D FF                    1520 	.db #0xff	; 255
      00052E FF                    1521 	.db #0xff	; 255
      00052F FF                    1522 	.db #0xff	; 255
      000530 FF                    1523 	.db #0xff	; 255
      000531 FF                    1524 	.db #0xff	; 255
      000532 FF                    1525 	.db #0xff	; 255
      000533 7E                    1526 	.db #0x7e	; 126
      000534 7E                    1527 	.db #0x7e	; 126
      000535 3C                    1528 	.db #0x3c	; 60
      000536 3C                    1529 	.db #0x3c	; 60
      000537                       1530 _ProjectileTiles:
      000537 24                    1531 	.db #0x24	; 36
      000538 18                    1532 	.db #0x18	; 24
      000539 18                    1533 	.db #0x18	; 24
      00053A 3C                    1534 	.db #0x3c	; 60
      00053B 18                    1535 	.db #0x18	; 24
      00053C 3C                    1536 	.db #0x3c	; 60
      00053D 24                    1537 	.db #0x24	; 36
      00053E 18                    1538 	.db #0x18	; 24
      00053F 00                    1539 	.db #0x00	; 0
      000540 00                    1540 	.db #0x00	; 0
      000541 00                    1541 	.db #0x00	; 0
      000542 00                    1542 	.db #0x00	; 0
      000543 00                    1543 	.db #0x00	; 0
      000544 00                    1544 	.db #0x00	; 0
      000545 00                    1545 	.db #0x00	; 0
      000546 00                    1546 	.db #0x00	; 0
      000547 00                    1547 	.db #0x00	; 0
      000548 00                    1548 	.db #0x00	; 0
      000549 00                    1549 	.db #0x00	; 0
      00054A 00                    1550 	.db #0x00	; 0
      00054B 09                    1551 	.db #0x09	; 9
      00054C 06                    1552 	.db #0x06	; 6
      00054D 06                    1553 	.db #0x06	; 6
      00054E 0F                    1554 	.db #0x0f	; 15
      00054F 06                    1555 	.db #0x06	; 6
      000550 0F                    1556 	.db #0x0f	; 15
      000551 09                    1557 	.db #0x09	; 9
      000552 06                    1558 	.db #0x06	; 6
      000553 00                    1559 	.db #0x00	; 0
      000554 00                    1560 	.db #0x00	; 0
      000555 00                    1561 	.db #0x00	; 0
      000556 00                    1562 	.db #0x00	; 0
      000557 09                    1563 	.db #0x09	; 9
      000558 06                    1564 	.db #0x06	; 6
      000559 06                    1565 	.db #0x06	; 6
      00055A 0F                    1566 	.db #0x0f	; 15
      00055B 06                    1567 	.db #0x06	; 6
      00055C 0F                    1568 	.db #0x0f	; 15
      00055D 09                    1569 	.db #0x09	; 9
      00055E 06                    1570 	.db #0x06	; 6
      00055F 00                    1571 	.db #0x00	; 0
      000560 00                    1572 	.db #0x00	; 0
      000561 00                    1573 	.db #0x00	; 0
      000562 00                    1574 	.db #0x00	; 0
      000563 00                    1575 	.db #0x00	; 0
      000564 00                    1576 	.db #0x00	; 0
      000565 00                    1577 	.db #0x00	; 0
      000566 00                    1578 	.db #0x00	; 0
      000567 99                    1579 	.db #0x99	; 153
      000568 66                    1580 	.db #0x66	; 102	'f'
      000569 66                    1581 	.db #0x66	; 102	'f'
      00056A FF                    1582 	.db #0xff	; 255
      00056B 66                    1583 	.db #0x66	; 102	'f'
      00056C FF                    1584 	.db #0xff	; 255
      00056D 99                    1585 	.db #0x99	; 153
      00056E 66                    1586 	.db #0x66	; 102	'f'
      00056F 00                    1587 	.db #0x00	; 0
      000570 00                    1588 	.db #0x00	; 0
      000571 00                    1589 	.db #0x00	; 0
      000572 00                    1590 	.db #0x00	; 0
      000573 00                    1591 	.db #0x00	; 0
      000574 00                    1592 	.db #0x00	; 0
      000575 00                    1593 	.db #0x00	; 0
      000576 00                    1594 	.db #0x00	; 0
      000577 09                    1595 	.db #0x09	; 9
      000578 06                    1596 	.db #0x06	; 6
      000579 06                    1597 	.db #0x06	; 6
      00057A 0F                    1598 	.db #0x0f	; 15
      00057B 06                    1599 	.db #0x06	; 6
      00057C 0F                    1600 	.db #0x0f	; 15
      00057D 09                    1601 	.db #0x09	; 9
      00057E 06                    1602 	.db #0x06	; 6
      00057F 09                    1603 	.db #0x09	; 9
      000580 06                    1604 	.db #0x06	; 6
      000581 06                    1605 	.db #0x06	; 6
      000582 0F                    1606 	.db #0x0f	; 15
      000583 06                    1607 	.db #0x06	; 6
      000584 0F                    1608 	.db #0x0f	; 15
      000585 09                    1609 	.db #0x09	; 9
      000586 06                    1610 	.db #0x06	; 6
      000587 90                    1611 	.db #0x90	; 144
      000588 60                    1612 	.db #0x60	; 96
      000589 60                    1613 	.db #0x60	; 96
      00058A F0                    1614 	.db #0xf0	; 240
      00058B 60                    1615 	.db #0x60	; 96
      00058C F0                    1616 	.db #0xf0	; 240
      00058D 90                    1617 	.db #0x90	; 144
      00058E 60                    1618 	.db #0x60	; 96
      00058F 09                    1619 	.db #0x09	; 9
      000590 06                    1620 	.db #0x06	; 6
      000591 06                    1621 	.db #0x06	; 6
      000592 0F                    1622 	.db #0x0f	; 15
      000593 06                    1623 	.db #0x06	; 6
      000594 0F                    1624 	.db #0x0f	; 15
      000595 09                    1625 	.db #0x09	; 9
      000596 06                    1626 	.db #0x06	; 6
      000597 18                    1627 	.db #0x18	; 24
      000598 00                    1628 	.db #0x00	; 0
      000599 18                    1629 	.db #0x18	; 24
      00059A 18                    1630 	.db #0x18	; 24
      00059B 18                    1631 	.db #0x18	; 24
      00059C 18                    1632 	.db #0x18	; 24
      00059D 3C                    1633 	.db #0x3c	; 60
      00059E 18                    1634 	.db #0x18	; 24
      00059F 3C                    1635 	.db #0x3c	; 60
      0005A0 18                    1636 	.db #0x18	; 24
      0005A1 3C                    1637 	.db #0x3c	; 60
      0005A2 3C                    1638 	.db #0x3c	; 60
      0005A3 7E                    1639 	.db #0x7e	; 126
      0005A4 3C                    1640 	.db #0x3c	; 60
      0005A5 7E                    1641 	.db #0x7e	; 126
      0005A6 24                    1642 	.db #0x24	; 36
      0005A7 00                    1643 	.db #0x00	; 0
      0005A8 00                    1644 	.db #0x00	; 0
      0005A9 C0                    1645 	.db #0xc0	; 192
      0005AA 00                    1646 	.db #0x00	; 0
      0005AB F8                    1647 	.db #0xf8	; 248
      0005AC E0                    1648 	.db #0xe0	; 224
      0005AD FF                    1649 	.db #0xff	; 255
      0005AE 7E                    1650 	.db #0x7e	; 126
      0005AF FF                    1651 	.db #0xff	; 255
      0005B0 7E                    1652 	.db #0x7e	; 126
      0005B1 F8                    1653 	.db #0xf8	; 248
      0005B2 E0                    1654 	.db #0xe0	; 224
      0005B3 C0                    1655 	.db #0xc0	; 192
      0005B4 00                    1656 	.db #0x00	; 0
      0005B5 00                    1657 	.db #0x00	; 0
      0005B6 00                    1658 	.db #0x00	; 0
      0005B7 06                    1659 	.db #0x06	; 6
      0005B8 00                    1660 	.db #0x00	; 0
      0005B9 0F                    1661 	.db #0x0f	; 15
      0005BA 06                    1662 	.db #0x06	; 6
      0005BB 1F                    1663 	.db #0x1f	; 31
      0005BC 0E                    1664 	.db #0x0e	; 14
      0005BD 7E                    1665 	.db #0x7e	; 126
      0005BE 1C                    1666 	.db #0x1c	; 28
      0005BF FC                    1667 	.db #0xfc	; 252
      0005C0 78                    1668 	.db #0x78	; 120	'x'
      0005C1 F8                    1669 	.db #0xf8	; 248
      0005C2 F0                    1670 	.db #0xf0	; 240
      0005C3 F8                    1671 	.db #0xf8	; 248
      0005C4 70                    1672 	.db #0x70	; 112	'p'
      0005C5 70                    1673 	.db #0x70	; 112	'p'
      0005C6 20                    1674 	.db #0x20	; 32
      0005C7                       1675 _BLANKSIZE:
      0005C7 03                    1676 	.db #0x03	; 3
      0005C8                       1677 _BLANK:
      0005C8 26                    1678 	.db #0x26	; 38
      0005C9 2B                    1679 	.db #0x2b	; 43
      0005CA 2C                    1680 	.db #0x2c	; 44
      0005CB                       1681 _EMPTYSPRITE:
      0005CB 50                    1682 	.db #0x50	; 80	'P'
      0005CC                       1683 _ENEMYCOUNT:
      0005CC 05                    1684 	.db #0x05	; 5
      0005CD                       1685 _xSpawnPositions:
      0005CD 00                    1686 	.db #0x00	; 0
      0005CE 60                    1687 	.db #0x60	; 96
      0005CF B0                    1688 	.db #0xb0	; 176
      0005D0 00                    1689 	.db #0x00	; 0
      0005D1 B0                    1690 	.db #0xb0	; 176
      0005D2 00                    1691 	.db #0x00	; 0
      0005D3 60                    1692 	.db #0x60	; 96
      0005D4 B0                    1693 	.db #0xb0	; 176
      0005D5                       1694 _ySpawnPositions:
      0005D5 00                    1695 	.db #0x00	; 0
      0005D6 00                    1696 	.db #0x00	; 0
      0005D7 00                    1697 	.db #0x00	; 0
      0005D8 5C                    1698 	.db #0x5c	; 92
      0005D9 5C                    1699 	.db #0x5c	; 92
      0005DA A0                    1700 	.db #0xa0	; 160
      0005DB A0                    1701 	.db #0xa0	; 160
      0005DC A0                    1702 	.db #0xa0	; 160
      0005DD                       1703 _PROJECTILECOUNT:
      0005DD 05                    1704 	.db #0x05	; 5
      0005DE                       1705 _PLAYERSIZE:
      0005DE 08                    1706 	.db #0x08	; 8
      0005DF                       1707 _maxHull:
      0005DF 64                    1708 	.db #0x64	;  100	'd'
      0005E0                       1709 _maxShield:
      0005E0 64                    1710 	.db #0x64	;  100	'd'
      0005E1                       1711 _GUNCOUNT:
      0005E1 03                    1712 	.db #0x03	; 3
                                   1713 ;main.c:96: void setHealthBar(uint8_t row, uint8_t hp) {
                                   1714 ;	---------------------------------
                                   1715 ; Function setHealthBar
                                   1716 ; ---------------------------------
      0005E2                       1717 _setHealthBar::
      0005E2 E8 FB                 1718 	add	sp, #-5
                                   1719 ;main.c:97: if (hp >= 80) {
      0005E4 F8 08                 1720 	ldhl	sp,	#8
      0005E6 7E                    1721 	ld	a, (hl)
      0005E7 D6 50                 1722 	sub	a, #0x50
      0005E9 38 31                 1723 	jr	C, 00102$
                                   1724 ;main.c:98: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      0005EB F8 00                 1725 	ldhl	sp,	#0
      0005ED 4D                    1726 	ld	c, l
      0005EE 44                    1727 	ld	b, h
      0005EF 36 50                 1728 	ld	(hl), #0x50
      0005F1 69                    1729 	ld	l, c
                                   1730 ;	spillPairReg hl
                                   1731 ;	spillPairReg hl
      0005F2 60                    1732 	ld	h, b
                                   1733 ;	spillPairReg hl
                                   1734 ;	spillPairReg hl
      0005F3 23                    1735 	inc	hl
      0005F4 36 50                 1736 	ld	(hl), #0x50
      0005F6 69                    1737 	ld	l, c
                                   1738 ;	spillPairReg hl
                                   1739 ;	spillPairReg hl
      0005F7 60                    1740 	ld	h, b
                                   1741 ;	spillPairReg hl
                                   1742 ;	spillPairReg hl
      0005F8 23                    1743 	inc	hl
      0005F9 23                    1744 	inc	hl
      0005FA 36 50                 1745 	ld	(hl), #0x50
      0005FC 69                    1746 	ld	l, c
                                   1747 ;	spillPairReg hl
                                   1748 ;	spillPairReg hl
      0005FD 60                    1749 	ld	h, b
                                   1750 ;	spillPairReg hl
                                   1751 ;	spillPairReg hl
      0005FE 23                    1752 	inc	hl
      0005FF 23                    1753 	inc	hl
      000600 23                    1754 	inc	hl
      000601 36 50                 1755 	ld	(hl), #0x50
      000603 21 04 00              1756 	ld	hl, #0x0004
      000606 09                    1757 	add	hl, bc
      000607 36 50                 1758 	ld	(hl), #0x50
                                   1759 ;main.c:99: set_win_tiles(5,row,5,1,blockmap);
      000609 C5                    1760 	push	bc
      00060A 21 05 01              1761 	ld	hl, #0x105
      00060D E5                    1762 	push	hl
      00060E F8 0B                 1763 	ldhl	sp,	#11
      000610 66                    1764 	ld	h, (hl)
      000611 2E 05                 1765 	ld	l, #0x05
      000613 E5                    1766 	push	hl
      000614 CDr00r00              1767 	call	_set_win_tiles
      000617 E8 06                 1768 	add	sp, #6
                                   1769 ;main.c:100: return;
      000619 C3rF0r06              1770 	jp	00109$
      00061C                       1771 00102$:
                                   1772 ;main.c:102: if (hp >= 60) {
      00061C F8 08                 1773 	ldhl	sp,	#8
      00061E 7E                    1774 	ld	a, (hl)
      00061F D6 3C                 1775 	sub	a, #0x3c
      000621 38 31                 1776 	jr	C, 00104$
                                   1777 ;main.c:103: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      000623 F8 00                 1778 	ldhl	sp,	#0
      000625 4D                    1779 	ld	c, l
      000626 44                    1780 	ld	b, h
      000627 36 50                 1781 	ld	(hl), #0x50
      000629 69                    1782 	ld	l, c
                                   1783 ;	spillPairReg hl
                                   1784 ;	spillPairReg hl
      00062A 60                    1785 	ld	h, b
                                   1786 ;	spillPairReg hl
                                   1787 ;	spillPairReg hl
      00062B 23                    1788 	inc	hl
      00062C 36 50                 1789 	ld	(hl), #0x50
      00062E 69                    1790 	ld	l, c
                                   1791 ;	spillPairReg hl
                                   1792 ;	spillPairReg hl
      00062F 60                    1793 	ld	h, b
                                   1794 ;	spillPairReg hl
                                   1795 ;	spillPairReg hl
      000630 23                    1796 	inc	hl
      000631 23                    1797 	inc	hl
      000632 36 50                 1798 	ld	(hl), #0x50
      000634 69                    1799 	ld	l, c
                                   1800 ;	spillPairReg hl
                                   1801 ;	spillPairReg hl
      000635 60                    1802 	ld	h, b
                                   1803 ;	spillPairReg hl
                                   1804 ;	spillPairReg hl
      000636 23                    1805 	inc	hl
      000637 23                    1806 	inc	hl
      000638 23                    1807 	inc	hl
      000639 36 50                 1808 	ld	(hl), #0x50
      00063B 21 04 00              1809 	ld	hl, #0x0004
      00063E 09                    1810 	add	hl, bc
      00063F 36 00                 1811 	ld	(hl), #0x00
                                   1812 ;main.c:104: set_win_tiles(5,row,5,1,blockmap);
      000641 C5                    1813 	push	bc
      000642 21 05 01              1814 	ld	hl, #0x105
      000645 E5                    1815 	push	hl
      000646 F8 0B                 1816 	ldhl	sp,	#11
      000648 66                    1817 	ld	h, (hl)
      000649 2E 05                 1818 	ld	l, #0x05
      00064B E5                    1819 	push	hl
      00064C CDr00r00              1820 	call	_set_win_tiles
      00064F E8 06                 1821 	add	sp, #6
                                   1822 ;main.c:105: return;
      000651 C3rF0r06              1823 	jp	00109$
      000654                       1824 00104$:
                                   1825 ;main.c:107: if (hp >= 40) {
      000654 F8 08                 1826 	ldhl	sp,	#8
      000656 7E                    1827 	ld	a, (hl)
      000657 D6 28                 1828 	sub	a, #0x28
      000659 38 30                 1829 	jr	C, 00106$
                                   1830 ;main.c:108: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      00065B F8 00                 1831 	ldhl	sp,	#0
      00065D 4D                    1832 	ld	c, l
      00065E 44                    1833 	ld	b, h
      00065F 36 50                 1834 	ld	(hl), #0x50
      000661 69                    1835 	ld	l, c
                                   1836 ;	spillPairReg hl
                                   1837 ;	spillPairReg hl
      000662 60                    1838 	ld	h, b
                                   1839 ;	spillPairReg hl
                                   1840 ;	spillPairReg hl
      000663 23                    1841 	inc	hl
      000664 36 50                 1842 	ld	(hl), #0x50
      000666 69                    1843 	ld	l, c
                                   1844 ;	spillPairReg hl
                                   1845 ;	spillPairReg hl
      000667 60                    1846 	ld	h, b
                                   1847 ;	spillPairReg hl
                                   1848 ;	spillPairReg hl
      000668 23                    1849 	inc	hl
      000669 23                    1850 	inc	hl
      00066A 36 50                 1851 	ld	(hl), #0x50
      00066C 59                    1852 	ld	e, c
      00066D 50                    1853 	ld	d, b
      00066E 13                    1854 	inc	de
      00066F 13                    1855 	inc	de
      000670 13                    1856 	inc	de
      000671 AF                    1857 	xor	a, a
      000672 12                    1858 	ld	(de), a
      000673 21 04 00              1859 	ld	hl, #0x0004
      000676 09                    1860 	add	hl, bc
      000677 36 00                 1861 	ld	(hl), #0x00
                                   1862 ;main.c:109: set_win_tiles(5,row,5,1,blockmap);
      000679 C5                    1863 	push	bc
      00067A 21 05 01              1864 	ld	hl, #0x105
      00067D E5                    1865 	push	hl
      00067E F8 0B                 1866 	ldhl	sp,	#11
      000680 66                    1867 	ld	h, (hl)
      000681 2E 05                 1868 	ld	l, #0x05
      000683 E5                    1869 	push	hl
      000684 CDr00r00              1870 	call	_set_win_tiles
      000687 E8 06                 1871 	add	sp, #6
                                   1872 ;main.c:110: return;
      000689 18 65                 1873 	jr	00109$
      00068B                       1874 00106$:
                                   1875 ;main.c:112: if (hp >= 20) {
      00068B F8 08                 1876 	ldhl	sp,	#8
      00068D 7E                    1877 	ld	a, (hl)
      00068E D6 14                 1878 	sub	a, #0x14
      000690 38 30                 1879 	jr	C, 00108$
                                   1880 ;main.c:113: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000692 F8 00                 1881 	ldhl	sp,	#0
      000694 4D                    1882 	ld	c, l
      000695 44                    1883 	ld	b, h
      000696 36 50                 1884 	ld	(hl), #0x50
      000698 69                    1885 	ld	l, c
                                   1886 ;	spillPairReg hl
                                   1887 ;	spillPairReg hl
      000699 60                    1888 	ld	h, b
                                   1889 ;	spillPairReg hl
                                   1890 ;	spillPairReg hl
      00069A 23                    1891 	inc	hl
      00069B 36 50                 1892 	ld	(hl), #0x50
      00069D 59                    1893 	ld	e, c
      00069E 50                    1894 	ld	d, b
      00069F 13                    1895 	inc	de
      0006A0 13                    1896 	inc	de
      0006A1 AF                    1897 	xor	a, a
      0006A2 12                    1898 	ld	(de), a
      0006A3 59                    1899 	ld	e, c
      0006A4 50                    1900 	ld	d, b
      0006A5 13                    1901 	inc	de
      0006A6 13                    1902 	inc	de
      0006A7 13                    1903 	inc	de
      0006A8 AF                    1904 	xor	a, a
      0006A9 12                    1905 	ld	(de), a
      0006AA 21 04 00              1906 	ld	hl, #0x0004
      0006AD 09                    1907 	add	hl, bc
      0006AE 36 00                 1908 	ld	(hl), #0x00
                                   1909 ;main.c:114: set_win_tiles(5,row,5,1,blockmap);
      0006B0 C5                    1910 	push	bc
      0006B1 21 05 01              1911 	ld	hl, #0x105
      0006B4 E5                    1912 	push	hl
      0006B5 F8 0B                 1913 	ldhl	sp,	#11
      0006B7 66                    1914 	ld	h, (hl)
      0006B8 2E 05                 1915 	ld	l, #0x05
      0006BA E5                    1916 	push	hl
      0006BB CDr00r00              1917 	call	_set_win_tiles
      0006BE E8 06                 1918 	add	sp, #6
                                   1919 ;main.c:115: return;
      0006C0 18 2E                 1920 	jr	00109$
      0006C2                       1921 00108$:
                                   1922 ;main.c:117: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      0006C2 F8 00                 1923 	ldhl	sp,	#0
      0006C4 4D                    1924 	ld	c, l
      0006C5 44                    1925 	ld	b, h
      0006C6 36 50                 1926 	ld	(hl), #0x50
      0006C8 59                    1927 	ld	e, c
      0006C9 50                    1928 	ld	d, b
      0006CA 13                    1929 	inc	de
      0006CB AF                    1930 	xor	a, a
      0006CC 12                    1931 	ld	(de), a
      0006CD 59                    1932 	ld	e, c
      0006CE 50                    1933 	ld	d, b
      0006CF 13                    1934 	inc	de
      0006D0 13                    1935 	inc	de
      0006D1 AF                    1936 	xor	a, a
      0006D2 12                    1937 	ld	(de), a
      0006D3 59                    1938 	ld	e, c
      0006D4 50                    1939 	ld	d, b
      0006D5 13                    1940 	inc	de
      0006D6 13                    1941 	inc	de
      0006D7 13                    1942 	inc	de
      0006D8 AF                    1943 	xor	a, a
      0006D9 12                    1944 	ld	(de), a
      0006DA 21 04 00              1945 	ld	hl, #0x0004
      0006DD 09                    1946 	add	hl, bc
      0006DE 36 00                 1947 	ld	(hl), #0x00
                                   1948 ;main.c:118: set_win_tiles(5,row,5,1,blockmap);
      0006E0 C5                    1949 	push	bc
      0006E1 21 05 01              1950 	ld	hl, #0x105
      0006E4 E5                    1951 	push	hl
      0006E5 F8 0B                 1952 	ldhl	sp,	#11
      0006E7 66                    1953 	ld	h, (hl)
      0006E8 2E 05                 1954 	ld	l, #0x05
      0006EA E5                    1955 	push	hl
      0006EB CDr00r00              1956 	call	_set_win_tiles
      0006EE E8 06                 1957 	add	sp, #6
                                   1958 ;main.c:119: return;
      0006F0                       1959 00109$:
                                   1960 ;main.c:121: }
      0006F0 E8 05                 1961 	add	sp, #5
      0006F2 C9                    1962 	ret
                                   1963 ;main.c:123: void updateDirection() {
                                   1964 ;	---------------------------------
                                   1965 ; Function updateDirection
                                   1966 ; ---------------------------------
      0006F3                       1967 _updateDirection::
      0006F3 E8 FC                 1968 	add	sp, #-4
                                   1969 ;main.c:127: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      0006F5 21r87r00              1970 	ld	hl, #_joydata
      0006F8 5E                    1971 	ld	e, (hl)
      0006F9 7B                    1972 	ld	a, e
      0006FA E6 01                 1973 	and	a, #0x01
      0006FC F8 00                 1974 	ldhl	sp,	#0
      0006FE 22                    1975 	ld	(hl+), a
      0006FF AF                    1976 	xor	a, a
      000700 22                    1977 	ld	(hl+), a
      000701 7B                    1978 	ld	a, e
      000702 E6 04                 1979 	and	a, #0x04
      000704 22                    1980 	ld	(hl+), a
      000705 AF                    1981 	xor	a, a
      000706 32                    1982 	ld	(hl-), a
      000707 2B                    1983 	dec	hl
      000708 7B                    1984 	ld	a, e
      000709 E6 08                 1985 	and	a, #0x08
      00070B 4F                    1986 	ld	c, a
      00070C 06 00                 1987 	ld	b, #0x00
      00070E 3A                    1988 	ld	a, (hl-)
      00070F B6                    1989 	or	a, (hl)
      000710 28 14                 1990 	jr	Z, 00102$
      000712 F8 03                 1991 	ldhl	sp,	#3
      000714 3A                    1992 	ld	a, (hl-)
      000715 B6                    1993 	or	a, (hl)
      000716 20 0E                 1994 	jr	NZ, 00102$
      000718 78                    1995 	ld	a, b
      000719 B1                    1996 	or	a, c
      00071A 20 0A                 1997 	jr	NZ, 00102$
                                   1998 ;main.c:128: xDir = 1;
      00071C 21r45r00              1999 	ld	hl, #_xDir
      00071F 36 01                 2000 	ld	(hl), #0x01
                                   2001 ;main.c:129: yDir = 0;
      000721 21r46r00              2002 	ld	hl, #_yDir
      000724 36 00                 2003 	ld	(hl), #0x00
      000726                       2004 00102$:
                                   2005 ;main.c:131: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000726 7B                    2006 	ld	a, e
      000727 E6 02                 2007 	and	a, #0x02
      000729 5F                    2008 	ld	e, a
      00072A 16 00                 2009 	ld	d, #0x00
      00072C 7A                    2010 	ld	a, d
      00072D B3                    2011 	or	a, e
      00072E 28 14                 2012 	jr	Z, 00106$
      000730 F8 03                 2013 	ldhl	sp,	#3
      000732 3A                    2014 	ld	a, (hl-)
      000733 B6                    2015 	or	a, (hl)
      000734 20 0E                 2016 	jr	NZ, 00106$
      000736 78                    2017 	ld	a, b
      000737 B1                    2018 	or	a, c
      000738 20 0A                 2019 	jr	NZ, 00106$
                                   2020 ;main.c:132: xDir = -1;
      00073A 21r45r00              2021 	ld	hl, #_xDir
      00073D 36 FF                 2022 	ld	(hl), #0xff
                                   2023 ;main.c:133: yDir = 0;
      00073F 21r46r00              2024 	ld	hl, #_yDir
      000742 36 00                 2025 	ld	(hl), #0x00
      000744                       2026 00106$:
                                   2027 ;main.c:135: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000744 F8 03                 2028 	ldhl	sp,	#3
      000746 3A                    2029 	ld	a, (hl-)
      000747 B6                    2030 	or	a, (hl)
      000748 28 13                 2031 	jr	Z, 00110$
      00074A 7A                    2032 	ld	a, d
      00074B B3                    2033 	or	a, e
      00074C 20 0F                 2034 	jr	NZ, 00110$
      00074E 2B                    2035 	dec	hl
      00074F 3A                    2036 	ld	a, (hl-)
      000750 B6                    2037 	or	a, (hl)
      000751 20 0A                 2038 	jr	NZ, 00110$
                                   2039 ;main.c:136: xDir = 0;
      000753 21r45r00              2040 	ld	hl, #_xDir
      000756 36 00                 2041 	ld	(hl), #0x00
                                   2042 ;main.c:137: yDir = -1;
      000758 21r46r00              2043 	ld	hl, #_yDir
      00075B 36 FF                 2044 	ld	(hl), #0xff
      00075D                       2045 00110$:
                                   2046 ;main.c:139: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      00075D 78                    2047 	ld	a, b
      00075E B1                    2048 	or	a, c
      00075F 28 14                 2049 	jr	Z, 00114$
      000761 7A                    2050 	ld	a, d
      000762 B3                    2051 	or	a, e
      000763 20 10                 2052 	jr	NZ, 00114$
      000765 F8 01                 2053 	ldhl	sp,	#1
      000767 3A                    2054 	ld	a, (hl-)
      000768 B6                    2055 	or	a, (hl)
      000769 20 0A                 2056 	jr	NZ, 00114$
                                   2057 ;main.c:140: xDir = 0;
      00076B 21r45r00              2058 	ld	hl, #_xDir
      00076E 36 00                 2059 	ld	(hl), #0x00
                                   2060 ;main.c:141: yDir = 1;
      000770 21r46r00              2061 	ld	hl, #_yDir
      000773 36 01                 2062 	ld	(hl), #0x01
      000775                       2063 00114$:
                                   2064 ;main.c:145: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000775 F8 03                 2065 	ldhl	sp,	#3
      000777 3A                    2066 	ld	a, (hl-)
      000778 B6                    2067 	or	a, (hl)
      000779 28 0F                 2068 	jr	Z, 00118$
      00077B 2B                    2069 	dec	hl
      00077C 3A                    2070 	ld	a, (hl-)
      00077D B6                    2071 	or	a, (hl)
      00077E 28 0A                 2072 	jr	Z, 00118$
                                   2073 ;main.c:146: xDir = 1;
      000780 21r45r00              2074 	ld	hl, #_xDir
      000783 36 01                 2075 	ld	(hl), #0x01
                                   2076 ;main.c:147: yDir = -1;
      000785 21r46r00              2077 	ld	hl, #_yDir
      000788 36 FF                 2078 	ld	(hl), #0xff
      00078A                       2079 00118$:
                                   2080 ;main.c:149: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      00078A F8 03                 2081 	ldhl	sp,	#3
      00078C 3A                    2082 	ld	a, (hl-)
      00078D B6                    2083 	or	a, (hl)
      00078E 28 0E                 2084 	jr	Z, 00121$
      000790 7A                    2085 	ld	a, d
      000791 B3                    2086 	or	a, e
      000792 28 0A                 2087 	jr	Z, 00121$
                                   2088 ;main.c:150: xDir = -1;
      000794 21r45r00              2089 	ld	hl, #_xDir
      000797 36 FF                 2090 	ld	(hl), #0xff
                                   2091 ;main.c:151: yDir = -1;
      000799 21r46r00              2092 	ld	hl, #_yDir
      00079C 36 FF                 2093 	ld	(hl), #0xff
      00079E                       2094 00121$:
                                   2095 ;main.c:153: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      00079E 78                    2096 	ld	a, b
      00079F B1                    2097 	or	a, c
      0007A0 28 10                 2098 	jr	Z, 00124$
      0007A2 F8 01                 2099 	ldhl	sp,	#1
      0007A4 3A                    2100 	ld	a, (hl-)
      0007A5 B6                    2101 	or	a, (hl)
      0007A6 28 0A                 2102 	jr	Z, 00124$
                                   2103 ;main.c:154: xDir = 1;
      0007A8 21r45r00              2104 	ld	hl, #_xDir
      0007AB 36 01                 2105 	ld	(hl), #0x01
                                   2106 ;main.c:155: yDir = 1;
      0007AD 21r46r00              2107 	ld	hl, #_yDir
      0007B0 36 01                 2108 	ld	(hl), #0x01
      0007B2                       2109 00124$:
                                   2110 ;main.c:157: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      0007B2 78                    2111 	ld	a, b
      0007B3 B1                    2112 	or	a, c
      0007B4 28 0E                 2113 	jr	Z, 00127$
      0007B6 7A                    2114 	ld	a, d
      0007B7 B3                    2115 	or	a, e
      0007B8 28 0A                 2116 	jr	Z, 00127$
                                   2117 ;main.c:158: xDir = -1;
      0007BA 21r45r00              2118 	ld	hl, #_xDir
      0007BD 36 FF                 2119 	ld	(hl), #0xff
                                   2120 ;main.c:159: yDir = 1;
      0007BF 21r46r00              2121 	ld	hl, #_yDir
      0007C2 36 01                 2122 	ld	(hl), #0x01
      0007C4                       2123 00127$:
                                   2124 ;main.c:164: if (xDir == 0 && yDir == 0) {
      0007C4 FAr45r00              2125 	ld	a, (#_xDir)
      0007C7 B7                    2126 	or	a, a
      0007C8 20 07                 2127 	jr	NZ, 00130$
      0007CA FAr46r00              2128 	ld	a, (#_yDir)
      0007CD B7                    2129 	or	a, a
                                   2130 ;main.c:165: return;
      0007CE CAr7Fr08              2131 	jp	Z,00157$
      0007D1                       2132 00130$:
                                   2133 ;main.c:168: uint8_t direction = 0;
      0007D1 0E 00                 2134 	ld	c, #0x00
                                   2135 ;main.c:170: if (xDir == 0 && yDir < 0) {
      0007D3 FAr46r00              2136 	ld	a, (#_yDir)
      0007D6 07                    2137 	rlca
      0007D7 E6 01                 2138 	and	a,#0x01
      0007D9 F8 02                 2139 	ldhl	sp,	#2
      0007DB 77                    2140 	ld	(hl), a
      0007DC FAr45r00              2141 	ld	a, (#_xDir)
      0007DF B7                    2142 	or	a, a
      0007E0 20 08                 2143 	jr	NZ, 00133$
      0007E2 F8 02                 2144 	ldhl	sp,	#2
      0007E4 7E                    2145 	ld	a, (hl)
      0007E5 B7                    2146 	or	a, a
      0007E6 28 02                 2147 	jr	Z, 00133$
                                   2148 ;main.c:171: direction = 0;
      0007E8 0E 00                 2149 	ld	c, #0x00
      0007EA                       2150 00133$:
                                   2151 ;main.c:173: if (xDir > 0 && yDir < 0) {
      0007EA 21r45r00              2152 	ld	hl, #_xDir
      0007ED 5E                    2153 	ld	e, (hl)
      0007EE AF                    2154 	xor	a, a
      0007EF 57                    2155 	ld	d, a
      0007F0 96                    2156 	sub	a, (hl)
      0007F1 CB 7B                 2157 	bit	7, e
      0007F3 28 07                 2158 	jr	Z, 00349$
      0007F5 CB 7A                 2159 	bit	7, d
      0007F7 20 08                 2160 	jr	NZ, 00350$
      0007F9 BF                    2161 	cp	a, a
      0007FA 18 05                 2162 	jr	00350$
      0007FC                       2163 00349$:
      0007FC CB 7A                 2164 	bit	7, d
      0007FE 28 01                 2165 	jr	Z, 00350$
      000800 37                    2166 	scf
      000801                       2167 00350$:
      000801 3E 00                 2168 	ld	a, #0x00
      000803 17                    2169 	rla
      000804 47                    2170 	ld	b, a
      000805 B7                    2171 	or	a, a
      000806 28 08                 2172 	jr	Z, 00136$
      000808 F8 02                 2173 	ldhl	sp,	#2
      00080A 7E                    2174 	ld	a, (hl)
      00080B B7                    2175 	or	a, a
      00080C 28 02                 2176 	jr	Z, 00136$
                                   2177 ;main.c:174: direction = 1;
      00080E 0E 01                 2178 	ld	c, #0x01
      000810                       2179 00136$:
                                   2180 ;main.c:176: if (xDir > 0 && yDir == 0) {
      000810 78                    2181 	ld	a, b
      000811 B7                    2182 	or	a, a
      000812 28 08                 2183 	jr	Z, 00139$
      000814 FAr46r00              2184 	ld	a, (#_yDir)
      000817 B7                    2185 	or	a, a
      000818 20 02                 2186 	jr	NZ, 00139$
                                   2187 ;main.c:177: direction = 2;
      00081A 0E 02                 2188 	ld	c, #0x02
      00081C                       2189 00139$:
                                   2190 ;main.c:179: if (xDir > 0 && yDir > 0) {
      00081C 21r46r00              2191 	ld	hl, #_yDir
      00081F 5E                    2192 	ld	e, (hl)
      000820 AF                    2193 	xor	a, a
      000821 57                    2194 	ld	d, a
      000822 96                    2195 	sub	a, (hl)
      000823 CB 7B                 2196 	bit	7, e
      000825 28 07                 2197 	jr	Z, 00351$
      000827 CB 7A                 2198 	bit	7, d
      000829 20 08                 2199 	jr	NZ, 00352$
      00082B BF                    2200 	cp	a, a
      00082C 18 05                 2201 	jr	00352$
      00082E                       2202 00351$:
      00082E CB 7A                 2203 	bit	7, d
      000830 28 01                 2204 	jr	Z, 00352$
      000832 37                    2205 	scf
      000833                       2206 00352$:
      000833 3E 00                 2207 	ld	a, #0x00
      000835 17                    2208 	rla
      000836 F8 03                 2209 	ldhl	sp,	#3
      000838 77                    2210 	ld	(hl), a
      000839 78                    2211 	ld	a, b
      00083A B7                    2212 	or	a, a
      00083B 28 06                 2213 	jr	Z, 00142$
      00083D 7E                    2214 	ld	a, (hl)
      00083E B7                    2215 	or	a, a
      00083F 28 02                 2216 	jr	Z, 00142$
                                   2217 ;main.c:180: direction = 3;
      000841 0E 03                 2218 	ld	c, #0x03
      000843                       2219 00142$:
                                   2220 ;main.c:182: if (xDir == 0 && yDir > 0) {
      000843 FAr45r00              2221 	ld	a, (#_xDir)
      000846 B7                    2222 	or	a, a
      000847 20 08                 2223 	jr	NZ, 00145$
      000849 F8 03                 2224 	ldhl	sp,	#3
      00084B 7E                    2225 	ld	a, (hl)
      00084C B7                    2226 	or	a, a
      00084D 28 02                 2227 	jr	Z, 00145$
                                   2228 ;main.c:183: direction = 4;
      00084F 0E 04                 2229 	ld	c, #0x04
      000851                       2230 00145$:
                                   2231 ;main.c:185: if (xDir < 0 && yDir > 0) {
      000851 FAr45r00              2232 	ld	a, (#_xDir)
      000854 07                    2233 	rlca
      000855 E6 01                 2234 	and	a,#0x01
      000857 47                    2235 	ld	b, a
      000858 B7                    2236 	or	a, a
      000859 28 08                 2237 	jr	Z, 00148$
      00085B F8 03                 2238 	ldhl	sp,	#3
      00085D 7E                    2239 	ld	a, (hl)
      00085E B7                    2240 	or	a, a
      00085F 28 02                 2241 	jr	Z, 00148$
                                   2242 ;main.c:186: direction = 5;
      000861 0E 05                 2243 	ld	c, #0x05
      000863                       2244 00148$:
                                   2245 ;main.c:188: if (xDir < 0 && yDir == 0) {
      000863 78                    2246 	ld	a, b
      000864 B7                    2247 	or	a, a
      000865 28 08                 2248 	jr	Z, 00151$
      000867 FAr46r00              2249 	ld	a, (#_yDir)
      00086A B7                    2250 	or	a, a
      00086B 20 02                 2251 	jr	NZ, 00151$
                                   2252 ;main.c:189: direction = 6;
      00086D 0E 06                 2253 	ld	c, #0x06
      00086F                       2254 00151$:
                                   2255 ;main.c:191: if (xDir < 0 && yDir < 0) {
      00086F 78                    2256 	ld	a, b
      000870 B7                    2257 	or	a, a
      000871 28 08                 2258 	jr	Z, 00154$
      000873 F8 02                 2259 	ldhl	sp,	#2
      000875 7E                    2260 	ld	a, (hl)
      000876 B7                    2261 	or	a, a
      000877 28 02                 2262 	jr	Z, 00154$
                                   2263 ;main.c:192: direction = 7;
      000879 0E 07                 2264 	ld	c, #0x07
      00087B                       2265 00154$:
                                   2266 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00087B 21r02r00              2267 	ld	hl, #(_shadow_OAM + 2)
      00087E 71                    2268 	ld	(hl), c
                                   2269 ;main.c:195: set_sprite_tile(0, direction);
      00087F                       2270 00157$:
                                   2271 ;main.c:196: }
      00087F E8 04                 2272 	add	sp, #4
      000881 C9                    2273 	ret
                                   2274 ;main.c:225: void playSound(uint8_t type) {
                                   2275 ;	---------------------------------
                                   2276 ; Function playSound
                                   2277 ; ---------------------------------
      000882                       2278 _playSound::
                                   2279 ;main.c:226: if (type == 20) { //singlegun
      000882 F8 02                 2280 	ldhl	sp,	#2
      000884 7E                    2281 	ld	a, (hl)
      000885 D6 14                 2282 	sub	a, #0x14
      000887 20 13                 2283 	jr	NZ, 00102$
                                   2284 ;main.c:227: NR10_REG = 0x00;
      000889 AF                    2285 	xor	a, a
      00088A E0r00                 2286 	ldh	(_NR10_REG + 0), a
                                   2287 ;main.c:228: NR11_REG = 0x81;
      00088C 3E 81                 2288 	ld	a, #0x81
      00088E E0r00                 2289 	ldh	(_NR11_REG + 0), a
                                   2290 ;main.c:229: NR12_REG = 0x43;
      000890 3E 43                 2291 	ld	a, #0x43
      000892 E0r00                 2292 	ldh	(_NR12_REG + 0), a
                                   2293 ;main.c:230: NR13_REG = 0X00;//0x6D;
      000894 AF                    2294 	xor	a, a
      000895 E0r00                 2295 	ldh	(_NR13_REG + 0), a
                                   2296 ;main.c:231: NR14_REG = 0x86;
      000897 3E 86                 2297 	ld	a, #0x86
      000899 E0r00                 2298 	ldh	(_NR14_REG + 0), a
                                   2299 ;main.c:232: return;
      00089B C9                    2300 	ret
      00089C                       2301 00102$:
                                   2302 ;main.c:234: if (type == 23) {
      00089C F8 02                 2303 	ldhl	sp,	#2
      00089E 7E                    2304 	ld	a, (hl)
      00089F D6 17                 2305 	sub	a, #0x17
      0008A1 20 12                 2306 	jr	NZ, 00104$
                                   2307 ;main.c:235: NR10_REG = 0x00;
      0008A3 AF                    2308 	xor	a, a
      0008A4 E0r00                 2309 	ldh	(_NR10_REG + 0), a
                                   2310 ;main.c:236: NR11_REG = 0x81;
      0008A6 3E 81                 2311 	ld	a, #0x81
      0008A8 E0r00                 2312 	ldh	(_NR11_REG + 0), a
                                   2313 ;main.c:237: NR12_REG = 0x53;
      0008AA 3E 53                 2314 	ld	a, #0x53
      0008AC E0r00                 2315 	ldh	(_NR12_REG + 0), a
                                   2316 ;main.c:238: NR13_REG = 0X00;//0x6D;
      0008AE AF                    2317 	xor	a, a
      0008AF E0r00                 2318 	ldh	(_NR13_REG + 0), a
                                   2319 ;main.c:239: NR14_REG = 0x86;
      0008B1 3E 86                 2320 	ld	a, #0x86
      0008B3 E0r00                 2321 	ldh	(_NR14_REG + 0), a
      0008B5                       2322 00104$:
                                   2323 ;main.c:241: if (type == 26) {
      0008B5 F8 02                 2324 	ldhl	sp,	#2
      0008B7 7E                    2325 	ld	a, (hl)
      0008B8 D6 1A                 2326 	sub	a, #0x1a
      0008BA 20 13                 2327 	jr	NZ, 00106$
                                   2328 ;main.c:242: NR10_REG = 0x00;
      0008BC AF                    2329 	xor	a, a
      0008BD E0r00                 2330 	ldh	(_NR10_REG + 0), a
                                   2331 ;main.c:243: NR11_REG = 0x89;
      0008BF 3E 89                 2332 	ld	a, #0x89
      0008C1 E0r00                 2333 	ldh	(_NR11_REG + 0), a
                                   2334 ;main.c:244: NR12_REG = 0x55;
      0008C3 3E 55                 2335 	ld	a, #0x55
      0008C5 E0r00                 2336 	ldh	(_NR12_REG + 0), a
                                   2337 ;main.c:245: NR13_REG = 0x70;//0Xbe;//0x6D;
      0008C7 3E 70                 2338 	ld	a, #0x70
      0008C9 E0r00                 2339 	ldh	(_NR13_REG + 0), a
                                   2340 ;main.c:246: NR14_REG = 0x84;
      0008CB 3E 84                 2341 	ld	a, #0x84
      0008CD E0r00                 2342 	ldh	(_NR14_REG + 0), a
      0008CF                       2343 00106$:
                                   2344 ;main.c:248: if (type == 0) {  // explosion
      0008CF F8 02                 2345 	ldhl	sp,	#2
      0008D1 7E                    2346 	ld	a, (hl)
      0008D2 B7                    2347 	or	a, a
      0008D3 C0                    2348 	ret	NZ
                                   2349 ;main.c:249: NR41_REG = 0x20;  
      0008D4 3E 20                 2350 	ld	a, #0x20
      0008D6 E0r00                 2351 	ldh	(_NR41_REG + 0), a
                                   2352 ;main.c:250: NR42_REG = 0xa2;//0xa3;  
      0008D8 3E A2                 2353 	ld	a, #0xa2
      0008DA E0r00                 2354 	ldh	(_NR42_REG + 0), a
                                   2355 ;main.c:251: NR43_REG = 0x57;  
      0008DC 3E 57                 2356 	ld	a, #0x57
      0008DE E0r00                 2357 	ldh	(_NR43_REG + 0), a
                                   2358 ;main.c:252: NR44_REG = 0x80;  
      0008E0 3E 80                 2359 	ld	a, #0x80
      0008E2 E0r00                 2360 	ldh	(_NR44_REG + 0), a
                                   2361 ;main.c:258: }
      0008E4 C9                    2362 	ret
                                   2363 ;main.c:261: void updateEnemyPositions() {
                                   2364 ;	---------------------------------
                                   2365 ; Function updateEnemyPositions
                                   2366 ; ---------------------------------
      0008E5                       2367 _updateEnemyPositions::
      0008E5 E8 F0                 2368 	add	sp, #-16
                                   2369 ;main.c:263: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0008E7 F8 0F                 2370 	ldhl	sp,	#15
      0008E9 36 00                 2371 	ld	(hl), #0x00
      0008EB                       2372 00140$:
      0008EB 21rCCr05              2373 	ld	hl, #_ENEMYCOUNT
      0008EE 4E                    2374 	ld	c, (hl)
      0008EF F8 0F                 2375 	ldhl	sp,	#15
      0008F1 7E                    2376 	ld	a, (hl)
      0008F2 91                    2377 	sub	a, c
      0008F3 D2r0Cr0D              2378 	jp	NC, 00117$
                                   2379 ;main.c:265: enemies[i].x -= xOverflow;
      0008F6 7E                    2380 	ld	a, (hl)
      0008F7 16 00                 2381 	ld	d, #0x00
      0008F9 87                    2382 	add	a, a
      0008FA CB 12                 2383 	rl	d
      0008FC 87                    2384 	add	a, a
      0008FD CB 12                 2385 	rl	d
      0008FF 87                    2386 	add	a, a
      000900 CB 12                 2387 	rl	d
      000902 87                    2388 	add	a, a
      000903 CB 12                 2389 	rl	d
                                   2390 ;main.c:275: if (enemies[i].y < playerDrawY) {
      000905 5F                    2391 	ld	e, a
      000906 21r00r00              2392 	ld	hl, #_enemies
      000909 19                    2393 	add	hl, de
      00090A E5                    2394 	push	hl
      00090B 7D                    2395 	ld	a, l
      00090C F8 06                 2396 	ldhl	sp,	#6
      00090E 77                    2397 	ld	(hl), a
      00090F E1                    2398 	pop	hl
      000910 7C                    2399 	ld	a, h
      000911 F8 05                 2400 	ldhl	sp,	#5
                                   2401 ;main.c:265: enemies[i].x -= xOverflow;
      000913 32                    2402 	ld	(hl-), a
      000914 2A                    2403 	ld	a, (hl+)
      000915 5F                    2404 	ld	e, a
      000916 56                    2405 	ld	d, (hl)
      000917 1A                    2406 	ld	a, (de)
      000918 47                    2407 	ld	b, a
      000919 13                    2408 	inc	de
      00091A 1A                    2409 	ld	a, (de)
      00091B 4F                    2410 	ld	c, a
      00091C 58                    2411 	ld	e, b
      00091D 51                    2412 	ld	d, c
      00091E 21r53r00              2413 	ld	hl, #_xOverflow
      000921 2A                    2414 	ld	a,	(hl+)
      000922 66                    2415 	ld	h, (hl)
      000923 6F                    2416 	ld	l, a
      000924 7B                    2417 	ld	a, e
      000925 95                    2418 	sub	a, l
      000926 5F                    2419 	ld	e, a
      000927 7A                    2420 	ld	a, d
      000928 9C                    2421 	sbc	a, h
      000929 F8 0C                 2422 	ldhl	sp,	#12
      00092B 32                    2423 	ld	(hl-), a
      00092C 73                    2424 	ld	(hl), e
      00092D F8 04                 2425 	ldhl	sp,#4
      00092F 2A                    2426 	ld	a, (hl+)
      000930 5F                    2427 	ld	e, a
      000931 56                    2428 	ld	d, (hl)
      000932 F8 0B                 2429 	ldhl	sp,	#11
      000934 2A                    2430 	ld	a, (hl+)
      000935 12                    2431 	ld	(de), a
      000936 13                    2432 	inc	de
      000937 7E                    2433 	ld	a, (hl)
      000938 12                    2434 	ld	(de), a
                                   2435 ;main.c:266: enemies[i].y -= yOverflow;
      000939 F8 04                 2436 	ldhl	sp,#4
      00093B 2A                    2437 	ld	a, (hl+)
      00093C 5F                    2438 	ld	e, a
      00093D 56                    2439 	ld	d, (hl)
      00093E 21 02 00              2440 	ld	hl, #0x0002
      000941 19                    2441 	add	hl, de
      000942 E5                    2442 	push	hl
      000943 7D                    2443 	ld	a, l
      000944 F8 08                 2444 	ldhl	sp,	#8
      000946 77                    2445 	ld	(hl), a
      000947 E1                    2446 	pop	hl
      000948 7C                    2447 	ld	a, h
      000949 F8 07                 2448 	ldhl	sp,	#7
      00094B 32                    2449 	ld	(hl-), a
      00094C 2A                    2450 	ld	a, (hl+)
      00094D 5F                    2451 	ld	e, a
      00094E 56                    2452 	ld	d, (hl)
      00094F 1A                    2453 	ld	a, (de)
      000950 4F                    2454 	ld	c, a
      000951 13                    2455 	inc	de
      000952 1A                    2456 	ld	a, (de)
      000953 47                    2457 	ld	b, a
      000954 79                    2458 	ld	a, c
      000955 21r55r00              2459 	ld	hl, #_yOverflow
      000958 96                    2460 	sub	a, (hl)
      000959 23                    2461 	inc	hl
      00095A 4F                    2462 	ld	c, a
      00095B 78                    2463 	ld	a, b
      00095C 9E                    2464 	sbc	a, (hl)
      00095D 47                    2465 	ld	b, a
      00095E F8 06                 2466 	ldhl	sp,	#6
      000960 2A                    2467 	ld	a,	(hl+)
      000961 66                    2468 	ld	h, (hl)
      000962 6F                    2469 	ld	l, a
      000963 79                    2470 	ld	a, c
      000964 22                    2471 	ld	(hl+), a
      000965 70                    2472 	ld	(hl), b
                                   2473 ;main.c:269: if (enemies[i].x < playerDrawX) {
      000966 21r4Dr00              2474 	ld	hl, #_playerDrawX
      000969 4E                    2475 	ld	c, (hl)
      00096A 06 00                 2476 	ld	b, #0x00
                                   2477 ;main.c:282: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      00096C F8 04                 2478 	ldhl	sp,#4
      00096E 2A                    2479 	ld	a, (hl+)
      00096F 5F                    2480 	ld	e, a
      000970 56                    2481 	ld	d, (hl)
      000971 21 0E 00              2482 	ld	hl, #0x000e
      000974 19                    2483 	add	hl, de
      000975 E5                    2484 	push	hl
      000976 7D                    2485 	ld	a, l
      000977 F8 0A                 2486 	ldhl	sp,	#10
      000979 77                    2487 	ld	(hl), a
      00097A E1                    2488 	pop	hl
      00097B 7C                    2489 	ld	a, h
      00097C F8 09                 2490 	ldhl	sp,	#9
      00097E 77                    2491 	ld	(hl), a
                                   2492 ;main.c:270: enemies[i].xSpeed += enemies[i].accel;
      00097F F8 04                 2493 	ldhl	sp,#4
      000981 2A                    2494 	ld	a, (hl+)
      000982 5F                    2495 	ld	e, a
      000983 56                    2496 	ld	d, (hl)
      000984 21 0D 00              2497 	ld	hl, #0x000d
      000987 19                    2498 	add	hl, de
      000988 33                    2499 	inc	sp
      000989 33                    2500 	inc	sp
      00098A E5                    2501 	push	hl
      00098B F8 08                 2502 	ldhl	sp,#8
      00098D 2A                    2503 	ld	a, (hl+)
      00098E 5F                    2504 	ld	e, a
      00098F 56                    2505 	ld	d, (hl)
      000990 1A                    2506 	ld	a, (de)
      000991 F8 0D                 2507 	ldhl	sp,	#13
      000993 22                    2508 	ld	(hl+), a
      000994 D1                    2509 	pop	de
      000995 D5                    2510 	push	de
      000996 1A                    2511 	ld	a, (de)
      000997 77                    2512 	ld	(hl), a
                                   2513 ;main.c:269: if (enemies[i].x < playerDrawX) {
      000998 F8 0B                 2514 	ldhl	sp,	#11
      00099A 2A                    2515 	ld	a, (hl+)
      00099B 91                    2516 	sub	a, c
      00099C 7E                    2517 	ld	a, (hl)
      00099D 98                    2518 	sbc	a, b
      00099E 56                    2519 	ld	d, (hl)
      00099F 78                    2520 	ld	a, b
      0009A0 CB 7F                 2521 	bit	7,a
      0009A2 28 07                 2522 	jr	Z, 00273$
      0009A4 CB 7A                 2523 	bit	7, d
      0009A6 20 08                 2524 	jr	NZ, 00274$
      0009A8 BF                    2525 	cp	a, a
      0009A9 18 05                 2526 	jr	00274$
      0009AB                       2527 00273$:
      0009AB CB 7A                 2528 	bit	7, d
      0009AD 28 01                 2529 	jr	Z, 00274$
      0009AF 37                    2530 	scf
      0009B0                       2531 00274$:
      0009B0 30 0D                 2532 	jr	NC, 00102$
                                   2533 ;main.c:270: enemies[i].xSpeed += enemies[i].accel;
      0009B2 F8 0E                 2534 	ldhl	sp,	#14
      0009B4 3A                    2535 	ld	a, (hl-)
      0009B5 86                    2536 	add	a, (hl)
      0009B6 4F                    2537 	ld	c, a
      0009B7 F8 08                 2538 	ldhl	sp,	#8
      0009B9 2A                    2539 	ld	a,	(hl+)
      0009BA 66                    2540 	ld	h, (hl)
      0009BB 6F                    2541 	ld	l, a
      0009BC 71                    2542 	ld	(hl), c
      0009BD 18 0B                 2543 	jr	00103$
      0009BF                       2544 00102$:
                                   2545 ;main.c:273: enemies[i].xSpeed -= enemies[i].accel;
      0009BF F8 0D                 2546 	ldhl	sp,	#13
      0009C1 2A                    2547 	ld	a, (hl+)
      0009C2 96                    2548 	sub	a, (hl)
      0009C3 4F                    2549 	ld	c, a
      0009C4 F8 08                 2550 	ldhl	sp,	#8
      0009C6 2A                    2551 	ld	a,	(hl+)
      0009C7 66                    2552 	ld	h, (hl)
      0009C8 6F                    2553 	ld	l, a
      0009C9 71                    2554 	ld	(hl), c
      0009CA                       2555 00103$:
                                   2556 ;main.c:275: if (enemies[i].y < playerDrawY) {
      0009CA F8 06                 2557 	ldhl	sp,#6
      0009CC 2A                    2558 	ld	a, (hl+)
      0009CD 5F                    2559 	ld	e, a
      0009CE 56                    2560 	ld	d, (hl)
      0009CF 1A                    2561 	ld	a, (de)
      0009D0 F8 02                 2562 	ldhl	sp,	#2
      0009D2 22                    2563 	ld	(hl+), a
      0009D3 13                    2564 	inc	de
      0009D4 1A                    2565 	ld	a, (de)
      0009D5 77                    2566 	ld	(hl), a
      0009D6 21r4Er00              2567 	ld	hl, #_playerDrawY
      0009D9 4E                    2568 	ld	c, (hl)
      0009DA 06 00                 2569 	ld	b, #0x00
                                   2570 ;main.c:283: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0009DC F8 04                 2571 	ldhl	sp,#4
      0009DE 2A                    2572 	ld	a, (hl+)
      0009DF 5F                    2573 	ld	e, a
      0009E0 56                    2574 	ld	d, (hl)
      0009E1 21 0F 00              2575 	ld	hl, #0x000f
      0009E4 19                    2576 	add	hl, de
      0009E5 E5                    2577 	push	hl
      0009E6 7D                    2578 	ld	a, l
      0009E7 F8 0C                 2579 	ldhl	sp,	#12
      0009E9 77                    2580 	ld	(hl), a
      0009EA E1                    2581 	pop	hl
      0009EB 7C                    2582 	ld	a, h
      0009EC F8 0B                 2583 	ldhl	sp,	#11
                                   2584 ;main.c:276: enemies[i].ySpeed += enemies[i].accel;
      0009EE 32                    2585 	ld	(hl-), a
      0009EF 2A                    2586 	ld	a, (hl+)
      0009F0 5F                    2587 	ld	e, a
      0009F1 2A                    2588 	ld	a, (hl+)
      0009F2 23                    2589 	inc	hl
      0009F3 57                    2590 	ld	d, a
      0009F4 1A                    2591 	ld	a, (de)
      0009F5 22                    2592 	ld	(hl+), a
      0009F6 D1                    2593 	pop	de
      0009F7 D5                    2594 	push	de
      0009F8 1A                    2595 	ld	a, (de)
      0009F9 77                    2596 	ld	(hl), a
                                   2597 ;main.c:275: if (enemies[i].y < playerDrawY) {
      0009FA F8 02                 2598 	ldhl	sp,	#2
      0009FC 2A                    2599 	ld	a, (hl+)
      0009FD 91                    2600 	sub	a, c
      0009FE 7E                    2601 	ld	a, (hl)
      0009FF 98                    2602 	sbc	a, b
      000A00 56                    2603 	ld	d, (hl)
      000A01 78                    2604 	ld	a, b
      000A02 CB 7F                 2605 	bit	7,a
      000A04 28 07                 2606 	jr	Z, 00275$
      000A06 CB 7A                 2607 	bit	7, d
      000A08 20 08                 2608 	jr	NZ, 00276$
      000A0A BF                    2609 	cp	a, a
      000A0B 18 05                 2610 	jr	00276$
      000A0D                       2611 00275$:
      000A0D CB 7A                 2612 	bit	7, d
      000A0F 28 01                 2613 	jr	Z, 00276$
      000A11 37                    2614 	scf
      000A12                       2615 00276$:
      000A12 30 0D                 2616 	jr	NC, 00105$
                                   2617 ;main.c:276: enemies[i].ySpeed += enemies[i].accel;
      000A14 F8 0E                 2618 	ldhl	sp,	#14
      000A16 3A                    2619 	ld	a, (hl-)
      000A17 86                    2620 	add	a, (hl)
      000A18 4F                    2621 	ld	c, a
      000A19 F8 0A                 2622 	ldhl	sp,	#10
      000A1B 2A                    2623 	ld	a,	(hl+)
      000A1C 66                    2624 	ld	h, (hl)
      000A1D 6F                    2625 	ld	l, a
      000A1E 71                    2626 	ld	(hl), c
      000A1F 18 0B                 2627 	jr	00106$
      000A21                       2628 00105$:
                                   2629 ;main.c:279: enemies[i].ySpeed -= enemies[i].accel;
      000A21 F8 0D                 2630 	ldhl	sp,	#13
      000A23 2A                    2631 	ld	a, (hl+)
      000A24 96                    2632 	sub	a, (hl)
      000A25 4F                    2633 	ld	c, a
      000A26 F8 0A                 2634 	ldhl	sp,	#10
      000A28 2A                    2635 	ld	a,	(hl+)
      000A29 66                    2636 	ld	h, (hl)
      000A2A 6F                    2637 	ld	l, a
      000A2B 71                    2638 	ld	(hl), c
      000A2C                       2639 00106$:
                                   2640 ;main.c:282: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000A2C F8 04                 2641 	ldhl	sp,#4
      000A2E 2A                    2642 	ld	a, (hl+)
      000A2F 5F                    2643 	ld	e, a
      000A30 56                    2644 	ld	d, (hl)
      000A31 21 0C 00              2645 	ld	hl, #0x000c
      000A34 19                    2646 	add	hl, de
      000A35 4D                    2647 	ld	c, l
      000A36 44                    2648 	ld	b, h
      000A37 0A                    2649 	ld	a, (bc)
      000A38 5F                    2650 	ld	e, a
      000A39 F8 0C                 2651 	ldhl	sp,	#12
      000A3B 7B                    2652 	ld	a, e
      000A3C 22                    2653 	ld	(hl+), a
      000A3D AF                    2654 	xor	a, a
      000A3E 93                    2655 	sub	a, e
      000A3F 77                    2656 	ld	(hl), a
      000A40 F8 08                 2657 	ldhl	sp,#8
      000A42 2A                    2658 	ld	a, (hl+)
      000A43 5F                    2659 	ld	e, a
      000A44 56                    2660 	ld	d, (hl)
      000A45 1A                    2661 	ld	a, (de)
      000A46 F8 0E                 2662 	ldhl	sp,	#14
                                   2663 ;main.c:201: return (value < min) ? min : (value > max) ? max : value;
      000A48 32                    2664 	ld	(hl-), a
      000A49 2A                    2665 	ld	a, (hl+)
      000A4A 5F                    2666 	ld	e, a
      000A4B 56                    2667 	ld	d, (hl)
      000A4C 3A                    2668 	ld	a, (hl-)
      000A4D 96                    2669 	sub	a, (hl)
      000A4E CB 7B                 2670 	bit	7, e
      000A50 28 07                 2671 	jr	Z, 00277$
      000A52 CB 7A                 2672 	bit	7, d
      000A54 20 08                 2673 	jr	NZ, 00278$
      000A56 BF                    2674 	cp	a, a
      000A57 18 05                 2675 	jr	00278$
      000A59                       2676 00277$:
      000A59 CB 7A                 2677 	bit	7, d
      000A5B 28 01                 2678 	jr	Z, 00278$
      000A5D 37                    2679 	scf
      000A5E                       2680 00278$:
      000A5E 30 05                 2681 	jr	NC, 00147$
      000A60 F8 0D                 2682 	ldhl	sp,	#13
      000A62 7E                    2683 	ld	a, (hl)
      000A63 18 23                 2684 	jr	00148$
      000A65                       2685 00147$:
      000A65 F8 0E                 2686 	ldhl	sp,	#14
      000A67 3A                    2687 	ld	a, (hl-)
      000A68 2B                    2688 	dec	hl
      000A69 5F                    2689 	ld	e, a
      000A6A 56                    2690 	ld	d, (hl)
      000A6B 2A                    2691 	ld	a, (hl+)
      000A6C 23                    2692 	inc	hl
      000A6D 96                    2693 	sub	a, (hl)
      000A6E CB 7B                 2694 	bit	7, e
      000A70 28 07                 2695 	jr	Z, 00279$
      000A72 CB 7A                 2696 	bit	7, d
      000A74 20 08                 2697 	jr	NZ, 00280$
      000A76 BF                    2698 	cp	a, a
      000A77 18 05                 2699 	jr	00280$
      000A79                       2700 00279$:
      000A79 CB 7A                 2701 	bit	7, d
      000A7B 28 01                 2702 	jr	Z, 00280$
      000A7D 37                    2703 	scf
      000A7E                       2704 00280$:
      000A7E 30 05                 2705 	jr	NC, 00149$
      000A80 F8 0C                 2706 	ldhl	sp,	#12
      000A82 7E                    2707 	ld	a, (hl)
      000A83 18 03                 2708 	jr	00150$
      000A85                       2709 00149$:
      000A85 F8 0E                 2710 	ldhl	sp,	#14
      000A87 7E                    2711 	ld	a, (hl)
      000A88                       2712 00150$:
      000A88                       2713 00148$:
                                   2714 ;main.c:282: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000A88 F8 08                 2715 	ldhl	sp,	#8
      000A8A F5                    2716 	push	af
      000A8B 2A                    2717 	ld	a,	(hl+)
      000A8C 66                    2718 	ld	h, (hl)
      000A8D 6F                    2719 	ld	l, a
      000A8E F1                    2720 	pop	af
      000A8F 77                    2721 	ld	(hl), a
                                   2722 ;main.c:283: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000A90 0A                    2723 	ld	a, (bc)
      000A91 47                    2724 	ld	b, a
      000A92 48                    2725 	ld	c, b
      000A93 AF                    2726 	xor	a, a
      000A94 90                    2727 	sub	a, b
      000A95 47                    2728 	ld	b, a
      000A96 F8 0A                 2729 	ldhl	sp,#10
      000A98 2A                    2730 	ld	a, (hl+)
      000A99 5F                    2731 	ld	e, a
      000A9A 56                    2732 	ld	d, (hl)
      000A9B 1A                    2733 	ld	a, (de)
      000A9C 6F                    2734 	ld	l, a
                                   2735 ;	spillPairReg hl
                                   2736 ;	spillPairReg hl
                                   2737 ;main.c:201: return (value < min) ? min : (value > max) ? max : value;
      000A9D 58                    2738 	ld	e, b
      000A9E 7D                    2739 	ld	a,l
      000A9F 57                    2740 	ld	d,a
      000AA0 90                    2741 	sub	a, b
      000AA1 CB 7B                 2742 	bit	7, e
      000AA3 28 07                 2743 	jr	Z, 00281$
      000AA5 CB 7A                 2744 	bit	7, d
      000AA7 20 08                 2745 	jr	NZ, 00282$
      000AA9 BF                    2746 	cp	a, a
      000AAA 18 05                 2747 	jr	00282$
      000AAC                       2748 00281$:
      000AAC CB 7A                 2749 	bit	7, d
      000AAE 28 01                 2750 	jr	Z, 00282$
      000AB0 37                    2751 	scf
      000AB1                       2752 00282$:
      000AB1 30 03                 2753 	jr	NC, 00151$
      000AB3 48                    2754 	ld	c, b
      000AB4 18 17                 2755 	jr	00152$
      000AB6                       2756 00151$:
      000AB6 5D                    2757 	ld	e, l
      000AB7 79                    2758 	ld	a,c
      000AB8 57                    2759 	ld	d,a
      000AB9 95                    2760 	sub	a, l
      000ABA CB 7B                 2761 	bit	7, e
      000ABC 28 07                 2762 	jr	Z, 00283$
      000ABE CB 7A                 2763 	bit	7, d
      000AC0 20 08                 2764 	jr	NZ, 00284$
      000AC2 BF                    2765 	cp	a, a
      000AC3 18 05                 2766 	jr	00284$
      000AC5                       2767 00283$:
      000AC5 CB 7A                 2768 	bit	7, d
      000AC7 28 01                 2769 	jr	Z, 00284$
      000AC9 37                    2770 	scf
      000ACA                       2771 00284$:
      000ACA 38 01                 2772 	jr	C, 00154$
      000ACC 4D                    2773 	ld	c, l
      000ACD                       2774 00154$:
      000ACD                       2775 00152$:
                                   2776 ;main.c:283: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000ACD F8 0A                 2777 	ldhl	sp,	#10
      000ACF 2A                    2778 	ld	a,	(hl+)
      000AD0 66                    2779 	ld	h, (hl)
      000AD1 6F                    2780 	ld	l, a
      000AD2 71                    2781 	ld	(hl), c
                                   2782 ;main.c:286: enemies[i].xReserve += enemies[i].xSpeed;
      000AD3 F8 04                 2783 	ldhl	sp,#4
      000AD5 2A                    2784 	ld	a, (hl+)
      000AD6 5F                    2785 	ld	e, a
      000AD7 56                    2786 	ld	d, (hl)
      000AD8 21 04 00              2787 	ld	hl, #0x0004
      000ADB 19                    2788 	add	hl, de
      000ADC E5                    2789 	push	hl
      000ADD 7D                    2790 	ld	a, l
      000ADE F8 0D                 2791 	ldhl	sp,	#13
      000AE0 77                    2792 	ld	(hl), a
      000AE1 E1                    2793 	pop	hl
      000AE2 7C                    2794 	ld	a, h
      000AE3 F8 0C                 2795 	ldhl	sp,	#12
      000AE5 32                    2796 	ld	(hl-), a
      000AE6 2A                    2797 	ld	a, (hl+)
      000AE7 5F                    2798 	ld	e, a
      000AE8 56                    2799 	ld	d, (hl)
      000AE9 1A                    2800 	ld	a, (de)
      000AEA 47                    2801 	ld	b, a
      000AEB F8 08                 2802 	ldhl	sp,#8
      000AED 2A                    2803 	ld	a, (hl+)
      000AEE 5F                    2804 	ld	e, a
      000AEF 2A                    2805 	ld	a, (hl+)
      000AF0 23                    2806 	inc	hl
      000AF1 57                    2807 	ld	d, a
      000AF2 1A                    2808 	ld	a, (de)
      000AF3 80                    2809 	add	a, b
      000AF4 47                    2810 	ld	b, a
      000AF5 2A                    2811 	ld	a,	(hl+)
      000AF6 66                    2812 	ld	h, (hl)
      000AF7 6F                    2813 	ld	l, a
      000AF8 70                    2814 	ld	(hl), b
                                   2815 ;main.c:287: enemies[i].yReserve += enemies[i].ySpeed;
      000AF9 F8 04                 2816 	ldhl	sp,#4
      000AFB 2A                    2817 	ld	a, (hl+)
      000AFC 5F                    2818 	ld	e, a
      000AFD 56                    2819 	ld	d, (hl)
      000AFE 21 05 00              2820 	ld	hl, #0x0005
      000B01 19                    2821 	add	hl, de
      000B02 E5                    2822 	push	hl
      000B03 7D                    2823 	ld	a, l
      000B04 F8 0F                 2824 	ldhl	sp,	#15
      000B06 77                    2825 	ld	(hl), a
      000B07 E1                    2826 	pop	hl
      000B08 7C                    2827 	ld	a, h
      000B09 F8 0E                 2828 	ldhl	sp,	#14
      000B0B 32                    2829 	ld	(hl-), a
      000B0C 2A                    2830 	ld	a, (hl+)
      000B0D 5F                    2831 	ld	e, a
      000B0E 56                    2832 	ld	d, (hl)
      000B0F 1A                    2833 	ld	a, (de)
      000B10 81                    2834 	add	a, c
      000B11 4F                    2835 	ld	c, a
      000B12 3A                    2836 	ld	a, (hl-)
      000B13 6E                    2837 	ld	l, (hl)
      000B14 67                    2838 	ld	h, a
      000B15 71                    2839 	ld	(hl), c
                                   2840 ;main.c:291: if (enemies[i].xReserve >> 3 > 0) {
      000B16 CB 28                 2841 	sra	b
      000B18 CB 28                 2842 	sra	b
      000B1A CB 28                 2843 	sra	b
                                   2844 ;main.c:286: enemies[i].xReserve += enemies[i].xSpeed;
      000B1C F8 0B                 2845 	ldhl	sp,#11
      000B1E 2A                    2846 	ld	a, (hl+)
      000B1F 5F                    2847 	ld	e, a
      000B20 3A                    2848 	ld	a, (hl-)
      000B21 2B                    2849 	dec	hl
      000B22 57                    2850 	ld	d, a
      000B23 1A                    2851 	ld	a, (de)
      000B24 77                    2852 	ld	(hl), a
                                   2853 ;main.c:291: if (enemies[i].xReserve >> 3 > 0) {
      000B25 58                    2854 	ld	e, b
      000B26 AF                    2855 	xor	a, a
      000B27 57                    2856 	ld	d, a
      000B28 90                    2857 	sub	a, b
      000B29 CB 7B                 2858 	bit	7, e
      000B2B 28 07                 2859 	jr	Z, 00285$
      000B2D CB 7A                 2860 	bit	7, d
      000B2F 20 08                 2861 	jr	NZ, 00286$
      000B31 BF                    2862 	cp	a, a
      000B32 18 05                 2863 	jr	00286$
      000B34                       2864 00285$:
      000B34 CB 7A                 2865 	bit	7, d
      000B36 28 01                 2866 	jr	Z, 00286$
      000B38 37                    2867 	scf
      000B39                       2868 00286$:
      000B39 30 3F                 2869 	jr	NC, 00110$
                                   2870 ;main.c:292: int8_t xMovement = enemies[i].xReserve >> 3;
      000B3B F8 0A                 2871 	ldhl	sp,	#10
      000B3D 7E                    2872 	ld	a, (hl)
      000B3E CB 2F                 2873 	sra	a
      000B40 CB 2F                 2874 	sra	a
      000B42 CB 2F                 2875 	sra	a
      000B44 77                    2876 	ld	(hl), a
                                   2877 ;main.c:293: enemies[i].x += xMovement;
      000B45 F8 04                 2878 	ldhl	sp,#4
      000B47 2A                    2879 	ld	a, (hl+)
      000B48 5F                    2880 	ld	e, a
      000B49 56                    2881 	ld	d, (hl)
      000B4A 1A                    2882 	ld	a, (de)
      000B4B 4F                    2883 	ld	c, a
      000B4C 13                    2884 	inc	de
      000B4D 1A                    2885 	ld	a, (de)
      000B4E 47                    2886 	ld	b, a
      000B4F F8 0A                 2887 	ldhl	sp,	#10
      000B51 7E                    2888 	ld	a, (hl)
      000B52 5F                    2889 	ld	e, a
      000B53 07                    2890 	rlca
      000B54 9F                    2891 	sbc	a, a
      000B55 57                    2892 	ld	d, a
      000B56 69                    2893 	ld	l, c
                                   2894 ;	spillPairReg hl
                                   2895 ;	spillPairReg hl
      000B57 60                    2896 	ld	h, b
                                   2897 ;	spillPairReg hl
                                   2898 ;	spillPairReg hl
      000B58 19                    2899 	add	hl, de
      000B59 4D                    2900 	ld	c, l
      000B5A 44                    2901 	ld	b, h
      000B5B F8 04                 2902 	ldhl	sp,	#4
      000B5D 2A                    2903 	ld	a,	(hl+)
      000B5E 66                    2904 	ld	h, (hl)
      000B5F 6F                    2905 	ld	l, a
      000B60 79                    2906 	ld	a, c
      000B61 22                    2907 	ld	(hl+), a
      000B62 70                    2908 	ld	(hl), b
                                   2909 ;main.c:294: enemies[i].xReserve -=  xMovement << 3;
      000B63 F8 0B                 2910 	ldhl	sp,#11
      000B65 2A                    2911 	ld	a, (hl+)
      000B66 5F                    2912 	ld	e, a
      000B67 3A                    2913 	ld	a, (hl-)
      000B68 2B                    2914 	dec	hl
      000B69 57                    2915 	ld	d, a
      000B6A 1A                    2916 	ld	a, (de)
      000B6B F5                    2917 	push	af
      000B6C 2A                    2918 	ld	a, (hl+)
      000B6D 87                    2919 	add	a, a
      000B6E 87                    2920 	add	a, a
      000B6F 87                    2921 	add	a, a
      000B70 4F                    2922 	ld	c, a
      000B71 F1                    2923 	pop	af
      000B72 91                    2924 	sub	a, c
      000B73 4F                    2925 	ld	c, a
      000B74 2A                    2926 	ld	a,	(hl+)
      000B75 66                    2927 	ld	h, (hl)
      000B76 6F                    2928 	ld	l, a
      000B77 71                    2929 	ld	(hl), c
      000B78 18 69                 2930 	jr	00111$
      000B7A                       2931 00110$:
                                   2932 ;main.c:297: else if ((-enemies[i].xReserve) >> 3 > 0){
      000B7A F8 0A                 2933 	ldhl	sp,	#10
      000B7C 7E                    2934 	ld	a, (hl)
      000B7D 4F                    2935 	ld	c, a
      000B7E 07                    2936 	rlca
      000B7F 9F                    2937 	sbc	a, a
      000B80 47                    2938 	ld	b, a
      000B81 AF                    2939 	xor	a, a
      000B82 91                    2940 	sub	a, c
      000B83 4F                    2941 	ld	c, a
      000B84 9F                    2942 	sbc	a, a
      000B85 90                    2943 	sub	a, b
      000B86 47                    2944 	ld	b, a
      000B87 CB 28                 2945 	sra	b
      000B89 CB 19                 2946 	rr	c
      000B8B CB 28                 2947 	sra	b
      000B8D CB 19                 2948 	rr	c
      000B8F CB 28                 2949 	sra	b
      000B91 CB 19                 2950 	rr	c
      000B93 58                    2951 	ld	e, b
      000B94 AF                    2952 	xor	a, a
      000B95 57                    2953 	ld	d, a
      000B96 B9                    2954 	cp	a, c
      000B97 98                    2955 	sbc	a, b
      000B98 CB 7B                 2956 	bit	7, e
      000B9A 28 07                 2957 	jr	Z, 00287$
      000B9C CB 7A                 2958 	bit	7, d
      000B9E 20 08                 2959 	jr	NZ, 00288$
      000BA0 BF                    2960 	cp	a, a
      000BA1 18 05                 2961 	jr	00288$
      000BA3                       2962 00287$:
      000BA3 CB 7A                 2963 	bit	7, d
      000BA5 28 01                 2964 	jr	Z, 00288$
      000BA7 37                    2965 	scf
      000BA8                       2966 00288$:
      000BA8 30 39                 2967 	jr	NC, 00111$
                                   2968 ;main.c:298: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      000BAA AF                    2969 	xor	a, a
      000BAB 91                    2970 	sub	a, c
      000BAC 4F                    2971 	ld	c, a
      000BAD F8 0A                 2972 	ldhl	sp,	#10
      000BAF 71                    2973 	ld	(hl), c
                                   2974 ;main.c:299: enemies[i].x += xMovement;
      000BB0 F8 04                 2975 	ldhl	sp,#4
      000BB2 2A                    2976 	ld	a, (hl+)
      000BB3 5F                    2977 	ld	e, a
      000BB4 56                    2978 	ld	d, (hl)
      000BB5 1A                    2979 	ld	a, (de)
      000BB6 4F                    2980 	ld	c, a
      000BB7 13                    2981 	inc	de
      000BB8 1A                    2982 	ld	a, (de)
      000BB9 47                    2983 	ld	b, a
      000BBA F8 0A                 2984 	ldhl	sp,	#10
      000BBC 7E                    2985 	ld	a, (hl)
      000BBD 5F                    2986 	ld	e, a
      000BBE 07                    2987 	rlca
      000BBF 9F                    2988 	sbc	a, a
      000BC0 57                    2989 	ld	d, a
      000BC1 69                    2990 	ld	l, c
                                   2991 ;	spillPairReg hl
                                   2992 ;	spillPairReg hl
      000BC2 60                    2993 	ld	h, b
                                   2994 ;	spillPairReg hl
                                   2995 ;	spillPairReg hl
      000BC3 19                    2996 	add	hl, de
      000BC4 4D                    2997 	ld	c, l
      000BC5 44                    2998 	ld	b, h
      000BC6 F8 04                 2999 	ldhl	sp,	#4
      000BC8 2A                    3000 	ld	a,	(hl+)
      000BC9 66                    3001 	ld	h, (hl)
      000BCA 6F                    3002 	ld	l, a
      000BCB 79                    3003 	ld	a, c
      000BCC 22                    3004 	ld	(hl+), a
      000BCD 70                    3005 	ld	(hl), b
                                   3006 ;main.c:300: enemies[i].xReserve +=  (-xMovement) << 3;
      000BCE F8 0B                 3007 	ldhl	sp,#11
      000BD0 2A                    3008 	ld	a, (hl+)
      000BD1 5F                    3009 	ld	e, a
      000BD2 3A                    3010 	ld	a, (hl-)
      000BD3 2B                    3011 	dec	hl
      000BD4 57                    3012 	ld	d, a
      000BD5 1A                    3013 	ld	a, (de)
      000BD6 4F                    3014 	ld	c, a
      000BD7 AF                    3015 	xor	a, a
      000BD8 96                    3016 	sub	a, (hl)
      000BD9 23                    3017 	inc	hl
      000BDA 87                    3018 	add	a, a
      000BDB 87                    3019 	add	a, a
      000BDC 87                    3020 	add	a, a
      000BDD 81                    3021 	add	a, c
      000BDE 4F                    3022 	ld	c, a
      000BDF 2A                    3023 	ld	a,	(hl+)
      000BE0 66                    3024 	ld	h, (hl)
      000BE1 6F                    3025 	ld	l, a
      000BE2 71                    3026 	ld	(hl), c
      000BE3                       3027 00111$:
                                   3028 ;main.c:303: if (enemies[i].yReserve >> 3 > 0) {
      000BE3 F8 0D                 3029 	ldhl	sp,#13
      000BE5 2A                    3030 	ld	a, (hl+)
      000BE6 5F                    3031 	ld	e, a
      000BE7 56                    3032 	ld	d, (hl)
      000BE8 1A                    3033 	ld	a, (de)
      000BE9 F8 0B                 3034 	ldhl	sp,	#11
      000BEB 77                    3035 	ld	(hl), a
      000BEC 2A                    3036 	ld	a, (hl+)
      000BED CB 2F                 3037 	sra	a
      000BEF CB 2F                 3038 	sra	a
      000BF1 CB 2F                 3039 	sra	a
      000BF3 77                    3040 	ld	(hl), a
      000BF4 5E                    3041 	ld	e, (hl)
      000BF5 AF                    3042 	xor	a, a
      000BF6 57                    3043 	ld	d, a
      000BF7 96                    3044 	sub	a, (hl)
      000BF8 CB 7B                 3045 	bit	7, e
      000BFA 28 07                 3046 	jr	Z, 00289$
      000BFC CB 7A                 3047 	bit	7, d
      000BFE 20 08                 3048 	jr	NZ, 00290$
      000C00 BF                    3049 	cp	a, a
      000C01 18 05                 3050 	jr	00290$
      000C03                       3051 00289$:
      000C03 CB 7A                 3052 	bit	7, d
      000C05 28 01                 3053 	jr	Z, 00290$
      000C07 37                    3054 	scf
      000C08                       3055 00290$:
      000C08 30 5B                 3056 	jr	NC, 00115$
                                   3057 ;main.c:304: int8_t yMovement = enemies[i].yReserve >> 3;
      000C0A F8 0C                 3058 	ldhl	sp,	#12
      000C0C 7E                    3059 	ld	a, (hl)
      000C0D F8 08                 3060 	ldhl	sp,	#8
                                   3061 ;main.c:305: enemies[i].y += yMovement;
      000C0F 32                    3062 	ld	(hl-), a
      000C10 2B                    3063 	dec	hl
      000C11 2A                    3064 	ld	a, (hl+)
      000C12 5F                    3065 	ld	e, a
      000C13 56                    3066 	ld	d, (hl)
      000C14 1A                    3067 	ld	a, (de)
      000C15 F8 0B                 3068 	ldhl	sp,	#11
      000C17 22                    3069 	ld	(hl+), a
      000C18 13                    3070 	inc	de
      000C19 1A                    3071 	ld	a, (de)
      000C1A 77                    3072 	ld	(hl), a
      000C1B F8 08                 3073 	ldhl	sp,	#8
      000C1D 7E                    3074 	ld	a, (hl)
      000C1E F8 04                 3075 	ldhl	sp,	#4
      000C20 22                    3076 	ld	(hl+), a
      000C21 07                    3077 	rlca
      000C22 9F                    3078 	sbc	a, a
      000C23 77                    3079 	ld	(hl), a
      000C24 F8 0B                 3080 	ldhl	sp,	#11
      000C26 3A                    3081 	ld	a, (hl-)
      000C27 2B                    3082 	dec	hl
      000C28 77                    3083 	ld	(hl), a
      000C29 F8 0C                 3084 	ldhl	sp,	#12
      000C2B 3A                    3085 	ld	a, (hl-)
      000C2C 2B                    3086 	dec	hl
      000C2D 32                    3087 	ld	(hl-), a
      000C2E 2A                    3088 	ld	a, (hl+)
      000C2F 5F                    3089 	ld	e, a
      000C30 56                    3090 	ld	d, (hl)
      000C31 F8 04                 3091 	ldhl	sp,	#4
      000C33 2A                    3092 	ld	a,	(hl+)
      000C34 66                    3093 	ld	h, (hl)
      000C35 6F                    3094 	ld	l, a
      000C36 19                    3095 	add	hl, de
      000C37 E5                    3096 	push	hl
      000C38 7D                    3097 	ld	a, l
      000C39 F8 0D                 3098 	ldhl	sp,	#13
      000C3B 77                    3099 	ld	(hl), a
      000C3C E1                    3100 	pop	hl
      000C3D 7C                    3101 	ld	a, h
      000C3E F8 0C                 3102 	ldhl	sp,	#12
      000C40 77                    3103 	ld	(hl), a
      000C41 F8 06                 3104 	ldhl	sp,#6
      000C43 2A                    3105 	ld	a, (hl+)
      000C44 5F                    3106 	ld	e, a
      000C45 56                    3107 	ld	d, (hl)
      000C46 F8 0B                 3108 	ldhl	sp,	#11
      000C48 2A                    3109 	ld	a, (hl+)
      000C49 12                    3110 	ld	(de), a
      000C4A 13                    3111 	inc	de
                                   3112 ;main.c:306: enemies[i].yReserve -=  yMovement << 3;
      000C4B 2A                    3113 	ld	a, (hl+)
      000C4C 12                    3114 	ld	(de), a
      000C4D 2A                    3115 	ld	a, (hl+)
      000C4E 5F                    3116 	ld	e, a
      000C4F 56                    3117 	ld	d, (hl)
      000C50 1A                    3118 	ld	a, (de)
      000C51 F5                    3119 	push	af
      000C52 F8 0A                 3120 	ldhl	sp,	#10
      000C54 7E                    3121 	ld	a, (hl)
      000C55 87                    3122 	add	a, a
      000C56 87                    3123 	add	a, a
      000C57 87                    3124 	add	a, a
      000C58 4F                    3125 	ld	c, a
      000C59 F1                    3126 	pop	af
      000C5A 91                    3127 	sub	a, c
      000C5B 4F                    3128 	ld	c, a
      000C5C F8 0D                 3129 	ldhl	sp,	#13
      000C5E 2A                    3130 	ld	a,	(hl+)
      000C5F 66                    3131 	ld	h, (hl)
      000C60 6F                    3132 	ld	l, a
      000C61 71                    3133 	ld	(hl), c
      000C62 C3r06r0D              3134 	jp	00141$
      000C65                       3135 00115$:
                                   3136 ;main.c:308: else if ((-enemies[i].yReserve) >> 3 > 0){
      000C65 F8 0B                 3137 	ldhl	sp,	#11
      000C67 7E                    3138 	ld	a, (hl)
      000C68 F8 08                 3139 	ldhl	sp,	#8
      000C6A 22                    3140 	ld	(hl+), a
      000C6B 07                    3141 	rlca
      000C6C 9F                    3142 	sbc	a, a
      000C6D 77                    3143 	ld	(hl), a
      000C6E 11 00 00              3144 	ld	de, #0x0000
      000C71 3A                    3145 	ld	a, (hl-)
      000C72 6E                    3146 	ld	l, (hl)
      000C73 67                    3147 	ld	h, a
      000C74 7B                    3148 	ld	a, e
      000C75 95                    3149 	sub	a, l
      000C76 5F                    3150 	ld	e, a
      000C77 7A                    3151 	ld	a, d
      000C78 9C                    3152 	sbc	a, h
      000C79 F8 0C                 3153 	ldhl	sp,	#12
      000C7B 32                    3154 	ld	(hl-), a
      000C7C 7B                    3155 	ld	a, e
      000C7D 22                    3156 	ld	(hl+), a
      000C7E CB 2E                 3157 	sra	(hl)
      000C80 2B                    3158 	dec	hl
      000C81 CB 1E                 3159 	rr	(hl)
      000C83 23                    3160 	inc	hl
      000C84 CB 2E                 3161 	sra	(hl)
      000C86 2B                    3162 	dec	hl
      000C87 CB 1E                 3163 	rr	(hl)
      000C89 23                    3164 	inc	hl
      000C8A CB 2E                 3165 	sra	(hl)
      000C8C 2B                    3166 	dec	hl
      000C8D CB 1E                 3167 	rr	(hl)
      000C8F AF                    3168 	xor	a, a
      000C90 96                    3169 	sub	a, (hl)
      000C91 23                    3170 	inc	hl
      000C92 3E 00                 3171 	ld	a, #0x00
      000C94 9E                    3172 	sbc	a, (hl)
      000C95 3E 00                 3173 	ld	a, #0x00
      000C97 57                    3174 	ld	d, a
      000C98 CB 7E                 3175 	bit	7, (hl)
      000C9A 28 07                 3176 	jr	Z, 00291$
      000C9C CB 7A                 3177 	bit	7, d
      000C9E 20 08                 3178 	jr	NZ, 00292$
      000CA0 BF                    3179 	cp	a, a
      000CA1 18 05                 3180 	jr	00292$
      000CA3                       3181 00291$:
      000CA3 CB 7A                 3182 	bit	7, d
      000CA5 28 01                 3183 	jr	Z, 00292$
      000CA7 37                    3184 	scf
      000CA8                       3185 00292$:
      000CA8 30 5C                 3186 	jr	NC, 00141$
                                   3187 ;main.c:309: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      000CAA F8 0B                 3188 	ldhl	sp,	#11
      000CAC 2A                    3189 	ld	a, (hl+)
      000CAD 4F                    3190 	ld	c, a
      000CAE AF                    3191 	xor	a, a
      000CAF 91                    3192 	sub	a, c
      000CB0 77                    3193 	ld	(hl), a
      000CB1 7E                    3194 	ld	a, (hl)
      000CB2 F8 08                 3195 	ldhl	sp,	#8
                                   3196 ;main.c:310: enemies[i].y += yMovement;
      000CB4 32                    3197 	ld	(hl-), a
      000CB5 2B                    3198 	dec	hl
      000CB6 2A                    3199 	ld	a, (hl+)
      000CB7 5F                    3200 	ld	e, a
      000CB8 56                    3201 	ld	d, (hl)
      000CB9 1A                    3202 	ld	a, (de)
      000CBA F8 0B                 3203 	ldhl	sp,	#11
      000CBC 22                    3204 	ld	(hl+), a
      000CBD 13                    3205 	inc	de
      000CBE 1A                    3206 	ld	a, (de)
      000CBF 77                    3207 	ld	(hl), a
      000CC0 F8 08                 3208 	ldhl	sp,	#8
      000CC2 7E                    3209 	ld	a, (hl)
      000CC3 F8 04                 3210 	ldhl	sp,	#4
      000CC5 22                    3211 	ld	(hl+), a
      000CC6 07                    3212 	rlca
      000CC7 9F                    3213 	sbc	a, a
      000CC8 77                    3214 	ld	(hl), a
      000CC9 F8 0B                 3215 	ldhl	sp,	#11
      000CCB 3A                    3216 	ld	a, (hl-)
      000CCC 2B                    3217 	dec	hl
      000CCD 77                    3218 	ld	(hl), a
      000CCE F8 0C                 3219 	ldhl	sp,	#12
      000CD0 3A                    3220 	ld	a, (hl-)
      000CD1 2B                    3221 	dec	hl
      000CD2 32                    3222 	ld	(hl-), a
      000CD3 2A                    3223 	ld	a, (hl+)
      000CD4 5F                    3224 	ld	e, a
      000CD5 56                    3225 	ld	d, (hl)
      000CD6 F8 04                 3226 	ldhl	sp,	#4
      000CD8 2A                    3227 	ld	a,	(hl+)
      000CD9 66                    3228 	ld	h, (hl)
      000CDA 6F                    3229 	ld	l, a
      000CDB 19                    3230 	add	hl, de
      000CDC E5                    3231 	push	hl
      000CDD 7D                    3232 	ld	a, l
      000CDE F8 0D                 3233 	ldhl	sp,	#13
      000CE0 77                    3234 	ld	(hl), a
      000CE1 E1                    3235 	pop	hl
      000CE2 7C                    3236 	ld	a, h
      000CE3 F8 0C                 3237 	ldhl	sp,	#12
      000CE5 77                    3238 	ld	(hl), a
      000CE6 F8 06                 3239 	ldhl	sp,#6
      000CE8 2A                    3240 	ld	a, (hl+)
      000CE9 5F                    3241 	ld	e, a
      000CEA 56                    3242 	ld	d, (hl)
      000CEB F8 0B                 3243 	ldhl	sp,	#11
      000CED 2A                    3244 	ld	a, (hl+)
      000CEE 12                    3245 	ld	(de), a
      000CEF 13                    3246 	inc	de
                                   3247 ;main.c:311: enemies[i].yReserve +=  (-yMovement) << 3;
      000CF0 2A                    3248 	ld	a, (hl+)
      000CF1 12                    3249 	ld	(de), a
      000CF2 2A                    3250 	ld	a, (hl+)
      000CF3 5F                    3251 	ld	e, a
      000CF4 56                    3252 	ld	d, (hl)
      000CF5 1A                    3253 	ld	a, (de)
      000CF6 4F                    3254 	ld	c, a
      000CF7 AF                    3255 	xor	a, a
      000CF8 F8 08                 3256 	ldhl	sp,	#8
      000CFA 96                    3257 	sub	a, (hl)
      000CFB 87                    3258 	add	a, a
      000CFC 87                    3259 	add	a, a
      000CFD 87                    3260 	add	a, a
      000CFE 81                    3261 	add	a, c
      000CFF 4F                    3262 	ld	c, a
      000D00 F8 0D                 3263 	ldhl	sp,	#13
      000D02 2A                    3264 	ld	a,	(hl+)
      000D03 66                    3265 	ld	h, (hl)
      000D04 6F                    3266 	ld	l, a
      000D05 71                    3267 	ld	(hl), c
      000D06                       3268 00141$:
                                   3269 ;main.c:263: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D06 F8 0F                 3270 	ldhl	sp,	#15
      000D08 34                    3271 	inc	(hl)
      000D09 C3rEBr08              3272 	jp	00140$
      000D0C                       3273 00117$:
                                   3274 ;main.c:322: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D0C F8 0F                 3275 	ldhl	sp,	#15
      000D0E 36 00                 3276 	ld	(hl), #0x00
      000D10                       3277 00143$:
      000D10 21rCCr05              3278 	ld	hl, #_ENEMYCOUNT
      000D13 4E                    3279 	ld	c, (hl)
      000D14 F8 0F                 3280 	ldhl	sp,	#15
      000D16 7E                    3281 	ld	a, (hl)
      000D17 91                    3282 	sub	a, c
      000D18 D2r82r0E              3283 	jp	NC, 00145$
                                   3284 ;main.c:324: if (enemies[i].alive) {
      000D1B 7E                    3285 	ld	a, (hl)
      000D1C 16 00                 3286 	ld	d, #0x00
      000D1E 87                    3287 	add	a, a
      000D1F CB 12                 3288 	rl	d
      000D21 87                    3289 	add	a, a
      000D22 CB 12                 3290 	rl	d
      000D24 87                    3291 	add	a, a
      000D25 CB 12                 3292 	rl	d
      000D27 87                    3293 	add	a, a
      000D28 CB 12                 3294 	rl	d
      000D2A 5F                    3295 	ld	e, a
      000D2B 21r00r00              3296 	ld	hl, #_enemies
      000D2E 19                    3297 	add	hl, de
      000D2F E5                    3298 	push	hl
      000D30 7D                    3299 	ld	a, l
      000D31 F8 09                 3300 	ldhl	sp,	#9
      000D33 77                    3301 	ld	(hl), a
      000D34 E1                    3302 	pop	hl
      000D35 7C                    3303 	ld	a, h
      000D36 F8 08                 3304 	ldhl	sp,	#8
      000D38 32                    3305 	ld	(hl-), a
      000D39 2A                    3306 	ld	a, (hl+)
      000D3A 5F                    3307 	ld	e, a
      000D3B 56                    3308 	ld	d, (hl)
      000D3C 21 09 00              3309 	ld	hl, #0x0009
      000D3F 19                    3310 	add	hl, de
      000D40 4D                    3311 	ld	c, l
      000D41 44                    3312 	ld	b, h
      000D42 0A                    3313 	ld	a, (bc)
      000D43 F8 0E                 3314 	ldhl	sp,	#14
      000D45 77                    3315 	ld	(hl), a
      000D46 7E                    3316 	ld	a, (hl)
      000D47 B7                    3317 	or	a, a
      000D48 CAr57r0E              3318 	jp	Z, 00132$
                                   3319 ;main.c:325: if (enemies[i].visible == 1) {
      000D4B F8 07                 3320 	ldhl	sp,#7
      000D4D 2A                    3321 	ld	a, (hl+)
      000D4E 5F                    3322 	ld	e, a
      000D4F 56                    3323 	ld	d, (hl)
      000D50 21 0A 00              3324 	ld	hl, #0x000a
      000D53 19                    3325 	add	hl, de
      000D54 E5                    3326 	push	hl
      000D55 7D                    3327 	ld	a, l
      000D56 F8 0B                 3328 	ldhl	sp,	#11
      000D58 77                    3329 	ld	(hl), a
      000D59 E1                    3330 	pop	hl
      000D5A 7C                    3331 	ld	a, h
      000D5B F8 0A                 3332 	ldhl	sp,	#10
      000D5D 32                    3333 	ld	(hl-), a
      000D5E 2A                    3334 	ld	a, (hl+)
      000D5F 5F                    3335 	ld	e, a
      000D60 2A                    3336 	ld	a, (hl+)
      000D61 57                    3337 	ld	d, a
      000D62 1A                    3338 	ld	a, (de)
      000D63 77                    3339 	ld	(hl), a
                                   3340 ;main.c:326: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D64 F8 07                 3341 	ldhl	sp,#7
      000D66 2A                    3342 	ld	a, (hl+)
      000D67 5F                    3343 	ld	e, a
      000D68 56                    3344 	ld	d, (hl)
      000D69 1A                    3345 	ld	a, (de)
      000D6A F8 05                 3346 	ldhl	sp,	#5
      000D6C 22                    3347 	ld	(hl+), a
      000D6D 13                    3348 	inc	de
      000D6E 1A                    3349 	ld	a, (de)
      000D6F 22                    3350 	ld	(hl+), a
      000D70 2A                    3351 	ld	a, (hl+)
      000D71 5F                    3352 	ld	e, a
      000D72 56                    3353 	ld	d, (hl)
      000D73 21 02 00              3354 	ld	hl, #0x0002
      000D76 19                    3355 	add	hl, de
      000D77 E5                    3356 	push	hl
      000D78 7D                    3357 	ld	a, l
      000D79 F8 0E                 3358 	ldhl	sp,	#14
      000D7B 77                    3359 	ld	(hl), a
      000D7C E1                    3360 	pop	hl
      000D7D 7C                    3361 	ld	a, h
      000D7E F8 0D                 3362 	ldhl	sp,	#13
                                   3363 ;main.c:328: set_sprite_tile(10+i, 0x7f);
      000D80 22                    3364 	ld	(hl+), a
      000D81 23                    3365 	inc	hl
      000D82 7E                    3366 	ld	a, (hl)
                                   3367 ;main.c:326: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D83 F8 05                 3368 	ldhl	sp,	#5
      000D85 4E                    3369 	ld	c, (hl)
      000D86 23                    3370 	inc	hl
      000D87 46                    3371 	ld	b, (hl)
                                   3372 ;main.c:328: set_sprite_tile(10+i, 0x7f);
      000D88 C6 0A                 3373 	add	a, #0x0a
      000D8A F8 0E                 3374 	ldhl	sp,	#14
      000D8C 77                    3375 	ld	(hl), a
                                   3376 ;main.c:326: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D8D 78                    3377 	ld	a, b
      000D8E 07                    3378 	rlca
      000D8F E6 01                 3379 	and	a,#0x01
      000D91 6F                    3380 	ld	l, a
                                   3381 ;	spillPairReg hl
                                   3382 ;	spillPairReg hl
                                   3383 ;main.c:325: if (enemies[i].visible == 1) {
      000D92 E5                    3384 	push	hl
      000D93 F8 0D                 3385 	ldhl	sp,	#13
      000D95 7E                    3386 	ld	a, (hl)
      000D96 3D                    3387 	dec	a
      000D97 E1                    3388 	pop	hl
      000D98 20 60                 3389 	jr	NZ, 00129$
                                   3390 ;main.c:326: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D9A 7D                    3391 	ld	a, l
      000D9B B7                    3392 	or	a, a
      000D9C 20 44                 3393 	jr	NZ, 00118$
      000D9E 58                    3394 	ld	e, b
      000D9F 16 00                 3395 	ld	d, #0x00
      000DA1 3E AC                 3396 	ld	a, #0xac
      000DA3 B9                    3397 	cp	a, c
      000DA4 3E 00                 3398 	ld	a, #0x00
      000DA6 98                    3399 	sbc	a, b
      000DA7 CB 7B                 3400 	bit	7, e
      000DA9 28 07                 3401 	jr	Z, 00296$
      000DAB CB 7A                 3402 	bit	7, d
      000DAD 20 08                 3403 	jr	NZ, 00297$
      000DAF BF                    3404 	cp	a, a
      000DB0 18 05                 3405 	jr	00297$
      000DB2                       3406 00296$:
      000DB2 CB 7A                 3407 	bit	7, d
      000DB4 28 01                 3408 	jr	Z, 00297$
      000DB6 37                    3409 	scf
      000DB7                       3410 00297$:
      000DB7 38 29                 3411 	jr	C, 00118$
      000DB9 F8 0C                 3412 	ldhl	sp,#12
      000DBB 2A                    3413 	ld	a, (hl+)
      000DBC 5F                    3414 	ld	e, a
      000DBD 56                    3415 	ld	d, (hl)
      000DBE 1A                    3416 	ld	a, (de)
      000DBF 4F                    3417 	ld	c, a
      000DC0 13                    3418 	inc	de
      000DC1 1A                    3419 	ld	a, (de)
      000DC2 47                    3420 	ld	b, a
      000DC3 CB 78                 3421 	bit	7, b
      000DC5 20 1B                 3422 	jr	NZ, 00118$
      000DC7 58                    3423 	ld	e, b
      000DC8 16 00                 3424 	ld	d, #0x00
      000DCA 3E 98                 3425 	ld	a, #0x98
      000DCC B9                    3426 	cp	a, c
      000DCD 3E 00                 3427 	ld	a, #0x00
      000DCF 98                    3428 	sbc	a, b
      000DD0 CB 7B                 3429 	bit	7, e
      000DD2 28 07                 3430 	jr	Z, 00298$
      000DD4 CB 7A                 3431 	bit	7, d
      000DD6 20 08                 3432 	jr	NZ, 00299$
      000DD8 BF                    3433 	cp	a, a
      000DD9 18 05                 3434 	jr	00299$
      000DDB                       3435 00298$:
      000DDB CB 7A                 3436 	bit	7, d
      000DDD 28 01                 3437 	jr	Z, 00299$
      000DDF 37                    3438 	scf
      000DE0                       3439 00299$:
      000DE0 30 75                 3440 	jr	NC, 00132$
      000DE2                       3441 00118$:
                                   3442 ;main.c:327: enemies[i].visible = 0;
      000DE2 F8 09                 3443 	ldhl	sp,	#9
      000DE4 2A                    3444 	ld	a,	(hl+)
      000DE5 66                    3445 	ld	h, (hl)
      000DE6 6F                    3446 	ld	l, a
      000DE7 36 00                 3447 	ld	(hl), #0x00
                                   3448 ;main.c:328: set_sprite_tile(10+i, 0x7f);
      000DE9 F8 0E                 3449 	ldhl	sp,	#14
                                   3450 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DEB 6E                    3451 	ld	l, (hl)
      000DEC 01r00r00              3452 	ld	bc, #_shadow_OAM+0
                                   3453 ;	spillPairReg hl
                                   3454 ;	spillPairReg hl
      000DEF 26 00                 3455 	ld	h, #0x00
                                   3456 ;	spillPairReg hl
                                   3457 ;	spillPairReg hl
      000DF1 29                    3458 	add	hl, hl
      000DF2 29                    3459 	add	hl, hl
      000DF3 09                    3460 	add	hl, bc
      000DF4 23                    3461 	inc	hl
      000DF5 23                    3462 	inc	hl
      000DF6 36 7F                 3463 	ld	(hl), #0x7f
                                   3464 ;main.c:328: set_sprite_tile(10+i, 0x7f);
      000DF8 18 5D                 3465 	jr	00132$
      000DFA                       3466 00129$:
                                   3467 ;main.c:332: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      000DFA CB 45                 3468 	bit	0, l
      000DFC 20 59                 3469 	jr	NZ, 00132$
      000DFE 79                    3470 	ld	a, c
      000DFF D6 AC                 3471 	sub	a, #0xac
      000E01 78                    3472 	ld	a, b
      000E02 17                    3473 	rla
      000E03 3F                    3474 	ccf
      000E04 1F                    3475 	rra
      000E05 DE 80                 3476 	sbc	a, #0x80
      000E07 30 4E                 3477 	jr	NC, 00132$
      000E09 F8 0C                 3478 	ldhl	sp,#12
      000E0B 2A                    3479 	ld	a, (hl+)
      000E0C 5F                    3480 	ld	e, a
      000E0D 56                    3481 	ld	d, (hl)
      000E0E 1A                    3482 	ld	a, (de)
      000E0F 4F                    3483 	ld	c, a
      000E10 13                    3484 	inc	de
      000E11 1A                    3485 	ld	a, (de)
      000E12 47                    3486 	ld	b, a
      000E13 58                    3487 	ld	e, b
      000E14 AF                    3488 	xor	a, a
      000E15 57                    3489 	ld	d, a
      000E16 B9                    3490 	cp	a, c
      000E17 98                    3491 	sbc	a, b
      000E18 CB 7B                 3492 	bit	7, e
      000E1A 28 07                 3493 	jr	Z, 00300$
      000E1C CB 7A                 3494 	bit	7, d
      000E1E 20 08                 3495 	jr	NZ, 00301$
      000E20 BF                    3496 	cp	a, a
      000E21 18 05                 3497 	jr	00301$
      000E23                       3498 00300$:
      000E23 CB 7A                 3499 	bit	7, d
      000E25 28 01                 3500 	jr	Z, 00301$
      000E27 37                    3501 	scf
      000E28                       3502 00301$:
      000E28 30 2D                 3503 	jr	NC, 00132$
      000E2A 79                    3504 	ld	a, c
      000E2B D6 98                 3505 	sub	a, #0x98
      000E2D 78                    3506 	ld	a, b
      000E2E 17                    3507 	rla
      000E2F 3F                    3508 	ccf
      000E30 1F                    3509 	rra
      000E31 DE 80                 3510 	sbc	a, #0x80
      000E33 30 22                 3511 	jr	NC, 00132$
                                   3512 ;main.c:333: enemies[i].visible = 1;
      000E35 F8 09                 3513 	ldhl	sp,	#9
      000E37 2A                    3514 	ld	a,	(hl+)
      000E38 66                    3515 	ld	h, (hl)
      000E39 6F                    3516 	ld	l, a
      000E3A 36 01                 3517 	ld	(hl), #0x01
                                   3518 ;main.c:334: set_sprite_tile(10+i, enemies[i].sprite0);
      000E3C F8 07                 3519 	ldhl	sp,#7
      000E3E 2A                    3520 	ld	a, (hl+)
      000E3F 5F                    3521 	ld	e, a
      000E40 56                    3522 	ld	d, (hl)
      000E41 21 06 00              3523 	ld	hl, #0x0006
      000E44 19                    3524 	add	hl, de
      000E45 4D                    3525 	ld	c, l
      000E46 44                    3526 	ld	b, h
      000E47 0A                    3527 	ld	a, (bc)
      000E48 4F                    3528 	ld	c, a
      000E49 F8 0E                 3529 	ldhl	sp,	#14
                                   3530 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E4B 6E                    3531 	ld	l, (hl)
      000E4C 11r00r00              3532 	ld	de, #_shadow_OAM+0
                                   3533 ;	spillPairReg hl
                                   3534 ;	spillPairReg hl
      000E4F 26 00                 3535 	ld	h, #0x00
                                   3536 ;	spillPairReg hl
                                   3537 ;	spillPairReg hl
      000E51 29                    3538 	add	hl, hl
      000E52 29                    3539 	add	hl, hl
      000E53 19                    3540 	add	hl, de
      000E54 23                    3541 	inc	hl
      000E55 23                    3542 	inc	hl
      000E56 71                    3543 	ld	(hl), c
                                   3544 ;main.c:334: set_sprite_tile(10+i, enemies[i].sprite0);
      000E57                       3545 00132$:
                                   3546 ;main.c:339: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000E57 F8 0F                 3547 	ldhl	sp,	#15
      000E59 6E                    3548 	ld	l, (hl)
      000E5A 26 00                 3549 	ld	h, #0x00
      000E5C 29                    3550 	add	hl, hl
      000E5D 29                    3551 	add	hl, hl
      000E5E 29                    3552 	add	hl, hl
      000E5F 29                    3553 	add	hl, hl
      000E60 11r00r00              3554 	ld	de, #_enemies
      000E63 19                    3555 	add	hl, de
      000E64 4D                    3556 	ld	c, l
      000E65 44                    3557 	ld	b, h
      000E66 03                    3558 	inc	bc
      000E67 03                    3559 	inc	bc
      000E68 0A                    3560 	ld	a, (bc)
      000E69 47                    3561 	ld	b, a
      000E6A 4E                    3562 	ld	c, (hl)
      000E6B F8 0F                 3563 	ldhl	sp,	#15
      000E6D 7E                    3564 	ld	a, (hl)
      000E6E C6 0A                 3565 	add	a, #0x0a
                                   3566 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E70 6F                    3567 	ld	l, a
                                   3568 ;	spillPairReg hl
                                   3569 ;	spillPairReg hl
      000E71 26 00                 3570 	ld	h, #0x00
                                   3571 ;	spillPairReg hl
                                   3572 ;	spillPairReg hl
      000E73 29                    3573 	add	hl, hl
      000E74 29                    3574 	add	hl, hl
      000E75 11r00r00              3575 	ld	de, #_shadow_OAM
      000E78 19                    3576 	add	hl, de
                                   3577 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E79 78                    3578 	ld	a, b
      000E7A 22                    3579 	ld	(hl+), a
      000E7B 71                    3580 	ld	(hl), c
                                   3581 ;main.c:322: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E7C F8 0F                 3582 	ldhl	sp,	#15
      000E7E 34                    3583 	inc	(hl)
      000E7F C3r10r0D              3584 	jp	00143$
      000E82                       3585 00145$:
                                   3586 ;main.c:341: }
      000E82 E8 10                 3587 	add	sp, #16
      000E84 C9                    3588 	ret
                                   3589 ;main.c:343: void initEnemies(uint8_t loadSprites) {
                                   3590 ;	---------------------------------
                                   3591 ; Function initEnemies
                                   3592 ; ---------------------------------
      000E85                       3593 _initEnemies::
      000E85 E8 F9                 3594 	add	sp, #-7
                                   3595 ;main.c:345: if (loadSprites) {
      000E87 F8 09                 3596 	ldhl	sp,	#9
      000E89 7E                    3597 	ld	a, (hl)
      000E8A B7                    3598 	or	a, a
      000E8B 28 0D                 3599 	jr	Z, 00116$
                                   3600 ;main.c:347: set_sprite_data(9, 2, enemy1);
      000E8D 11r17r05              3601 	ld	de, #_enemy1
      000E90 D5                    3602 	push	de
      000E91 21 09 02              3603 	ld	hl, #0x209
      000E94 E5                    3604 	push	hl
      000E95 CDr00r00              3605 	call	_set_sprite_data
      000E98 E8 04                 3606 	add	sp, #4
                                   3607 ;main.c:352: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E9A                       3608 00116$:
      000E9A 0E 00                 3609 	ld	c, #0x00
      000E9C                       3610 00109$:
      000E9C 21rCCr05              3611 	ld	hl, #_ENEMYCOUNT
      000E9F 46                    3612 	ld	b, (hl)
      000EA0 79                    3613 	ld	a, c
      000EA1 90                    3614 	sub	a, b
      000EA2 D2r3Fr0F              3615 	jp	NC, 00111$
                                   3616 ;main.c:353: if (enemies[i].alive == 0) {
      000EA5 69                    3617 	ld	l, c
                                   3618 ;	spillPairReg hl
                                   3619 ;	spillPairReg hl
      000EA6 26 00                 3620 	ld	h, #0x00
                                   3621 ;	spillPairReg hl
                                   3622 ;	spillPairReg hl
      000EA8 29                    3623 	add	hl, hl
      000EA9 29                    3624 	add	hl, hl
      000EAA 29                    3625 	add	hl, hl
      000EAB 29                    3626 	add	hl, hl
      000EAC 5D                    3627 	ld	e, l
      000EAD 54                    3628 	ld	d, h
      000EAE 21r00r00              3629 	ld	hl, #_enemies
      000EB1 19                    3630 	add	hl, de
      000EB2 33                    3631 	inc	sp
      000EB3 33                    3632 	inc	sp
      000EB4 5D                    3633 	ld	e, l
      000EB5 54                    3634 	ld	d, h
      000EB6 D5                    3635 	push	de
      000EB7 21 09 00              3636 	ld	hl, #0x0009
      000EBA 19                    3637 	add	hl, de
      000EBB 5D                    3638 	ld	e, l
      000EBC 54                    3639 	ld	d, h
      000EBD 1A                    3640 	ld	a, (de)
      000EBE B7                    3641 	or	a, a
      000EBF 20 7A                 3642 	jr	NZ, 00110$
                                   3643 ;main.c:355: enemies[i] = blob;
      000EC1 D1                    3644 	pop	de
      000EC2 D5                    3645 	push	de
      000EC3 C5                    3646 	push	bc
      000EC4 21 10 00              3647 	ld	hl, #0x0010
      000EC7 E5                    3648 	push	hl
      000EC8 21r12r00              3649 	ld	hl, #_blob
      000ECB E5                    3650 	push	hl
      000ECC D5                    3651 	push	de
      000ECD CDr00r00              3652 	call	___memcpy
      000ED0 E8 06                 3653 	add	sp, #6
      000ED2 CDr00r00              3654 	call	_rand
      000ED5 7B                    3655 	ld	a, e
      000ED6 C1                    3656 	pop	bc
      000ED7 E6 07                 3657 	and	a, #0x07
                                   3658 ;main.c:359: enemies[i].x = xSpawnPositions[posIndex];
      000ED9 47                    3659 	ld	b, a
      000EDA C6rCD                 3660 	add	a,#<(_xSpawnPositions)
      000EDC 5F                    3661 	ld	e, a
      000EDD 3Es05                 3662 	ld	a, #>(_xSpawnPositions)
      000EDF CE 00                 3663 	adc	a, #0x00
      000EE1 57                    3664 	ld	d, a
      000EE2 1A                    3665 	ld	a, (de)
      000EE3 F8 02                 3666 	ldhl	sp,	#2
      000EE5 22                    3667 	ld	(hl+), a
      000EE6 AF                    3668 	xor	a, a
      000EE7 32                    3669 	ld	(hl-), a
      000EE8 D1                    3670 	pop	de
      000EE9 D5                    3671 	push	de
      000EEA 2A                    3672 	ld	a, (hl+)
      000EEB 12                    3673 	ld	(de), a
      000EEC 13                    3674 	inc	de
      000EED 7E                    3675 	ld	a, (hl)
      000EEE 12                    3676 	ld	(de), a
                                   3677 ;main.c:360: enemies[i].y = ySpawnPositions[posIndex];
      000EEF D1                    3678 	pop	de
      000EF0 D5                    3679 	push	de
      000EF1 13                    3680 	inc	de
      000EF2 13                    3681 	inc	de
      000EF3 78                    3682 	ld	a, b
      000EF4 C6rD5                 3683 	add	a, #<(_ySpawnPositions)
      000EF6 6F                    3684 	ld	l, a
                                   3685 ;	spillPairReg hl
                                   3686 ;	spillPairReg hl
      000EF7 3E 00                 3687 	ld	a, #0x00
      000EF9 CEs05                 3688 	adc	a, #>(_ySpawnPositions)
      000EFB 67                    3689 	ld	h, a
                                   3690 ;	spillPairReg hl
                                   3691 ;	spillPairReg hl
      000EFC 7E                    3692 	ld	a, (hl)
      000EFD F8 04                 3693 	ldhl	sp,	#4
      000EFF 22                    3694 	ld	(hl+), a
      000F00 AF                    3695 	xor	a, a
      000F01 32                    3696 	ld	(hl-), a
      000F02 2A                    3697 	ld	a, (hl+)
      000F03 12                    3698 	ld	(de), a
      000F04 13                    3699 	inc	de
      000F05 7E                    3700 	ld	a, (hl)
      000F06 12                    3701 	ld	(de), a
                                   3702 ;main.c:362: set_sprite_tile(10+i, enemies[i].sprite0);
      000F07 D1                    3703 	pop	de
      000F08 D5                    3704 	push	de
      000F09 21 06 00              3705 	ld	hl, #0x0006
      000F0C 19                    3706 	add	hl, de
      000F0D 5D                    3707 	ld	e, l
      000F0E 54                    3708 	ld	d, h
      000F0F 1A                    3709 	ld	a, (de)
      000F10 47                    3710 	ld	b, a
      000F11 79                    3711 	ld	a, c
      000F12 C6 0A                 3712 	add	a, #0x0a
      000F14 F8 06                 3713 	ldhl	sp,	#6
      000F16 77                    3714 	ld	(hl), a
      000F17 5E                    3715 	ld	e, (hl)
                                   3716 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F18 26 00                 3717 	ld	h, #0x00
                                   3718 ;	spillPairReg hl
                                   3719 ;	spillPairReg hl
      000F1A 6B                    3720 	ld	l, e
      000F1B 29                    3721 	add	hl, hl
      000F1C 29                    3722 	add	hl, hl
      000F1D 11r00r00              3723 	ld	de, #_shadow_OAM
      000F20 19                    3724 	add	hl, de
      000F21 23                    3725 	inc	hl
      000F22 23                    3726 	inc	hl
      000F23 70                    3727 	ld	(hl), b
                                   3728 ;main.c:365: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000F24 F8 04                 3729 	ldhl	sp,	#4
      000F26 3A                    3730 	ld	a, (hl-)
      000F27 2B                    3731 	dec	hl
      000F28 5F                    3732 	ld	e, a
      000F29 46                    3733 	ld	b, (hl)
      000F2A F8 06                 3734 	ldhl	sp,	#6
      000F2C 56                    3735 	ld	d, (hl)
                                   3736 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000F2D 26 00                 3737 	ld	h, #0x00
                                   3738 ;	spillPairReg hl
                                   3739 ;	spillPairReg hl
      000F2F 6A                    3740 	ld	l, d
      000F30 29                    3741 	add	hl, hl
      000F31 29                    3742 	add	hl, hl
      000F32 D5                    3743 	push	de
      000F33 11r00r00              3744 	ld	de, #_shadow_OAM
      000F36 19                    3745 	add	hl, de
      000F37 D1                    3746 	pop	de
                                   3747 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000F38 7B                    3748 	ld	a, e
      000F39 22                    3749 	ld	(hl+), a
      000F3A 70                    3750 	ld	(hl), b
                                   3751 ;main.c:365: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000F3B                       3752 00110$:
                                   3753 ;main.c:352: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000F3B 0C                    3754 	inc	c
      000F3C C3r9Cr0E              3755 	jp	00109$
      000F3F                       3756 00111$:
                                   3757 ;main.c:368: }
      000F3F E8 07                 3758 	add	sp, #7
      000F41 C9                    3759 	ret
                                   3760 ;main.c:371: void move() {
                                   3761 ;	---------------------------------
                                   3762 ; Function move
                                   3763 ; ---------------------------------
      000F42                       3764 _move::
      000F42 E8 F8                 3765 	add	sp, #-8
                                   3766 ;main.c:375: if (joydata & J_A) {
      000F44 FAr87r00              3767 	ld	a, (#_joydata)
      000F47 CB 67                 3768 	bit	4, a
      000F49 28 16                 3769 	jr	Z, 00102$
                                   3770 ;main.c:376: xSpeed += xDir + xDir + xDir;
      000F4B 21r45r00              3771 	ld	hl, #_xDir
      000F4E 7E                    3772 	ld	a, (hl)
      000F4F 87                    3773 	add	a, a
      000F50 86                    3774 	add	a, (hl)
      000F51 21r47r00              3775 	ld	hl, #_xSpeed
      000F54 86                    3776 	add	a, (hl)
      000F55 77                    3777 	ld	(hl), a
                                   3778 ;main.c:377: ySpeed += yDir + yDir + yDir;
      000F56 21r46r00              3779 	ld	hl, #_yDir
      000F59 7E                    3780 	ld	a, (hl)
      000F5A 87                    3781 	add	a, a
      000F5B 86                    3782 	add	a, (hl)
      000F5C 21r48r00              3783 	ld	hl, #_ySpeed
      000F5F 86                    3784 	add	a, (hl)
      000F60 77                    3785 	ld	(hl), a
      000F61                       3786 00102$:
                                   3787 ;main.c:381: xSpeed = clamp(xSpeed, -100, 100);
      000F61 21r47r00              3788 	ld	hl, #_xSpeed
      000F64 4E                    3789 	ld	c, (hl)
                                   3790 ;main.c:201: return (value < min) ? min : (value > max) ? max : value;
      000F65 79                    3791 	ld	a, c
      000F66 EE 80                 3792 	xor	a, #0x80
      000F68 D6 1C                 3793 	sub	a, #0x1c
      000F6A 30 04                 3794 	jr	NC, 00159$
      000F6C 0E 9C                 3795 	ld	c, #0x9c
      000F6E 18 19                 3796 	jr	00160$
      000F70                       3797 00159$:
      000F70 59                    3798 	ld	e, c
      000F71 3E 64                 3799 	ld	a,#0x64
      000F73 57                    3800 	ld	d,a
      000F74 91                    3801 	sub	a, c
      000F75 CB 7B                 3802 	bit	7, e
      000F77 28 07                 3803 	jr	Z, 00331$
      000F79 CB 7A                 3804 	bit	7, d
      000F7B 20 08                 3805 	jr	NZ, 00332$
      000F7D BF                    3806 	cp	a, a
      000F7E 18 05                 3807 	jr	00332$
      000F80                       3808 00331$:
      000F80 CB 7A                 3809 	bit	7, d
      000F82 28 01                 3810 	jr	Z, 00332$
      000F84 37                    3811 	scf
      000F85                       3812 00332$:
      000F85 30 02                 3813 	jr	NC, 00161$
      000F87 0E 64                 3814 	ld	c, #0x64
      000F89                       3815 00161$:
      000F89                       3816 00160$:
      000F89 21r47r00              3817 	ld	hl, #_xSpeed
      000F8C 71                    3818 	ld	(hl), c
                                   3819 ;main.c:382: ySpeed = clamp(ySpeed, -100, 100);
      000F8D 21r48r00              3820 	ld	hl, #_ySpeed
      000F90 4E                    3821 	ld	c, (hl)
                                   3822 ;main.c:201: return (value < min) ? min : (value > max) ? max : value;
      000F91 79                    3823 	ld	a, c
      000F92 EE 80                 3824 	xor	a, #0x80
      000F94 D6 1C                 3825 	sub	a, #0x1c
      000F96 30 04                 3826 	jr	NC, 00163$
      000F98 0E 9C                 3827 	ld	c, #0x9c
      000F9A 18 19                 3828 	jr	00164$
      000F9C                       3829 00163$:
      000F9C 59                    3830 	ld	e, c
      000F9D 3E 64                 3831 	ld	a,#0x64
      000F9F 57                    3832 	ld	d,a
      000FA0 91                    3833 	sub	a, c
      000FA1 CB 7B                 3834 	bit	7, e
      000FA3 28 07                 3835 	jr	Z, 00333$
      000FA5 CB 7A                 3836 	bit	7, d
      000FA7 20 08                 3837 	jr	NZ, 00334$
      000FA9 BF                    3838 	cp	a, a
      000FAA 18 05                 3839 	jr	00334$
      000FAC                       3840 00333$:
      000FAC CB 7A                 3841 	bit	7, d
      000FAE 28 01                 3842 	jr	Z, 00334$
      000FB0 37                    3843 	scf
      000FB1                       3844 00334$:
      000FB1 30 02                 3845 	jr	NC, 00165$
      000FB3 0E 64                 3846 	ld	c, #0x64
      000FB5                       3847 00165$:
      000FB5                       3848 00164$:
      000FB5 21r48r00              3849 	ld	hl, #_ySpeed
      000FB8 71                    3850 	ld	(hl), c
                                   3851 ;main.c:384: xOverflow = 0;
      000FB9 AF                    3852 	xor	a, a
      000FBA 21r53r00              3853 	ld	hl, #_xOverflow
      000FBD 22                    3854 	ld	(hl+), a
      000FBE 77                    3855 	ld	(hl), a
                                   3856 ;main.c:385: yOverflow = 0;
      000FBF AF                    3857 	xor	a, a
      000FC0 21r55r00              3858 	ld	hl, #_yOverflow
      000FC3 22                    3859 	ld	(hl+), a
      000FC4 77                    3860 	ld	(hl), a
                                   3861 ;main.c:390: uint8_t xCollisionPoint = playerDrawX -4; 
      000FC5 21r4Dr00              3862 	ld	hl, #_playerDrawX
      000FC8 46                    3863 	ld	b, (hl)
      000FC9 78                    3864 	ld	a, b
      000FCA C6 FC                 3865 	add	a, #0xfc
      000FCC 4F                    3866 	ld	c, a
                                   3867 ;main.c:392: if (xSpeed > 0) {
      000FCD 21r47r00              3868 	ld	hl, #_xSpeed
      000FD0 5E                    3869 	ld	e, (hl)
      000FD1 AF                    3870 	xor	a, a
      000FD2 57                    3871 	ld	d, a
      000FD3 96                    3872 	sub	a, (hl)
      000FD4 CB 7B                 3873 	bit	7, e
      000FD6 28 07                 3874 	jr	Z, 00335$
      000FD8 CB 7A                 3875 	bit	7, d
      000FDA 20 08                 3876 	jr	NZ, 00336$
      000FDC BF                    3877 	cp	a, a
      000FDD 18 05                 3878 	jr	00336$
      000FDF                       3879 00335$:
      000FDF CB 7A                 3880 	bit	7, d
      000FE1 28 01                 3881 	jr	Z, 00336$
      000FE3 37                    3882 	scf
      000FE4                       3883 00336$:
      000FE4 30 04                 3884 	jr	NC, 00104$
                                   3885 ;main.c:393: xCollisionPoint = playerDrawX; //right edge
      000FE6 21r4Dr00              3886 	ld	hl, #_playerDrawX
      000FE9 4E                    3887 	ld	c, (hl)
      000FEA                       3888 00104$:
                                   3889 ;main.c:395: if (xSpeed < 0) {
      000FEA FAr47r00              3890 	ld	a, (#_xSpeed)
      000FED CB 7F                 3891 	bit	7, a
      000FEF 28 04                 3892 	jr	Z, 00106$
                                   3893 ;main.c:396: xCollisionPoint = playerDrawX -8; //left edge
      000FF1 78                    3894 	ld	a, b
      000FF2 C6 F8                 3895 	add	a, #0xf8
      000FF4 4F                    3896 	ld	c, a
      000FF5                       3897 00106$:
                                   3898 ;main.c:400: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      000FF5 06 00                 3899 	ld	b, #0x00
      000FF7 79                    3900 	ld	a, c
      000FF8 21r4Fr00              3901 	ld	hl, #_bgX
      000FFB 86                    3902 	add	a, (hl)
      000FFC 23                    3903 	inc	hl
      000FFD 4F                    3904 	ld	c, a
      000FFE 78                    3905 	ld	a, b
      000FFF 8E                    3906 	adc	a, (hl)
      001000 47                    3907 	ld	b, a
      001001 CB 28                 3908 	sra	b
      001003 CB 19                 3909 	rr	c
      001005 CB 28                 3910 	sra	b
      001007 CB 19                 3911 	rr	c
      001009 CB 28                 3912 	sra	b
      00100B CB 19                 3913 	rr	c
      00100D 11 20 00              3914 	ld	de, #0x0020
      001010 D5                    3915 	push	de
      001011 C5                    3916 	push	bc
      001012 CDr00r00              3917 	call	__modsint
      001015 E8 04                 3918 	add	sp, #4
                                   3919 ;main.c:404: uint8_t bgindY = ((playerDrawY-12 + bgY) >> 3)%32; 
      001017 FAr4Er00              3920 	ld	a, (#_playerDrawY)
      00101A 06 00                 3921 	ld	b, #0x00
      00101C C6 F4                 3922 	add	a, #0xf4
      00101E 4F                    3923 	ld	c, a
      00101F 78                    3924 	ld	a, b
      001020 CE FF                 3925 	adc	a, #0xff
      001022 47                    3926 	ld	b, a
      001023 79                    3927 	ld	a, c
      001024 21r51r00              3928 	ld	hl, #_bgY
      001027 86                    3929 	add	a, (hl)
      001028 23                    3930 	inc	hl
      001029 4F                    3931 	ld	c, a
      00102A 78                    3932 	ld	a, b
      00102B 8E                    3933 	adc	a, (hl)
      00102C 47                    3934 	ld	b, a
      00102D CB 28                 3935 	sra	b
      00102F CB 19                 3936 	rr	c
      001031 CB 28                 3937 	sra	b
      001033 CB 19                 3938 	rr	c
      001035 CB 28                 3939 	sra	b
      001037 CB 19                 3940 	rr	c
      001039 D5                    3941 	push	de
      00103A 21 20 00              3942 	ld	hl, #0x0020
      00103D E5                    3943 	push	hl
      00103E C5                    3944 	push	bc
      00103F CDr00r00              3945 	call	__modsint
      001042 E8 04                 3946 	add	sp, #4
      001044 6B                    3947 	ld	l, e
                                   3948 ;	spillPairReg hl
                                   3949 ;	spillPairReg hl
                                   3950 ;	spillPairReg hl
                                   3951 ;	spillPairReg hl
      001045 D1                    3952 	pop	de
                                   3953 ;main.c:407: uint16_t ind = 32*bgindY + bgindX;
      001046 26 00                 3954 	ld	h, #0x00
                                   3955 ;	spillPairReg hl
                                   3956 ;	spillPairReg hl
      001048 29                    3957 	add	hl, hl
      001049 29                    3958 	add	hl, hl
      00104A 29                    3959 	add	hl, hl
      00104B 29                    3960 	add	hl, hl
      00104C 29                    3961 	add	hl, hl
      00104D 19                    3962 	add	hl, de
      00104E 5D                    3963 	ld	e, l
      00104F 54                    3964 	ld	d, h
                                   3965 ;main.c:408: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001050 0E 01                 3966 	ld	c, #0x01
                                   3967 ;main.c:409: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001052 21r87r00              3968 	ld	hl, #_background1
      001055 19                    3969 	add	hl, de
      001056 46                    3970 	ld	b, (hl)
      001057 1E 00                 3971 	ld	e, #0x00
      001059                       3972 00152$:
      001059 FArC7r05              3973 	ld	a, (#_BLANKSIZE)
      00105C F8 02                 3974 	ldhl	sp,	#2
      00105E 77                    3975 	ld	(hl), a
      00105F 7B                    3976 	ld	a, e
      001060 96                    3977 	sub	a, (hl)
      001061 30 11                 3978 	jr	NC, 00109$
                                   3979 ;main.c:410: if (background1[ind] == BLANK[i] ) {
      001063 21rC8r05              3980 	ld	hl, #_BLANK
      001066 16 00                 3981 	ld	d, #0x00
      001068 19                    3982 	add	hl, de
      001069 56                    3983 	ld	d, (hl)
      00106A 78                    3984 	ld	a, b
                                   3985 ;main.c:411: result = 0;
      00106B 92                    3986 	sub	a,d
      00106C 20 03                 3987 	jr	NZ, 00153$
      00106E 4F                    3988 	ld	c,a
                                   3989 ;main.c:412: break;
      00106F 18 03                 3990 	jr	00109$
      001071                       3991 00153$:
                                   3992 ;main.c:409: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001071 1C                    3993 	inc	e
      001072 18 E5                 3994 	jr	00152$
      001074                       3995 00109$:
                                   3996 ;main.c:416: if (result == 0) {
      001074 79                    3997 	ld	a, c
      001075 B7                    3998 	or	a, a
      001076 C2r44r11              3999 	jp	NZ, 00114$
                                   4000 ;main.c:417: playerX+=xSpeed;
      001079 FAr47r00              4001 	ld	a, (#_xSpeed)
      00107C 4F                    4002 	ld	c, a
      00107D 07                    4003 	rlca
      00107E 9F                    4004 	sbc	a, a
      00107F 47                    4005 	ld	b, a
      001080 21r49r00              4006 	ld	hl, #_playerX
      001083 6E                    4007 	ld	l, (hl)
                                   4008 ;	spillPairReg hl
                                   4009 ;	spillPairReg hl
      001084 FAr4Ar00              4010 	ld	a, (_playerX + 1)
      001087 67                    4011 	ld	h, a
                                   4012 ;	spillPairReg hl
                                   4013 ;	spillPairReg hl
      001088 09                    4014 	add	hl, bc
      001089 4D                    4015 	ld	c, l
      00108A 44                    4016 	ld	b, h
      00108B 21r49r00              4017 	ld	hl, #_playerX
      00108E 79                    4018 	ld	a, c
      00108F 22                    4019 	ld	(hl+), a
                                   4020 ;main.c:419: uint16_t limitedPlayerX = u16Clamp(playerX, 58<<5, 110<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001090 78                    4021 	ld	a, b
      001091 32                    4022 	ld	(hl-), a
      001092 2A                    4023 	ld	a, (hl+)
      001093 4F                    4024 	ld	c, a
      001094 46                    4025 	ld	b, (hl)
      001095 79                    4026 	ld	a, c
      001096 D6 40                 4027 	sub	a, #0x40
      001098 78                    4028 	ld	a, b
      001099 DE 07                 4029 	sbc	a, #0x07
      00109B 30 05                 4030 	jr	NC, 00167$
      00109D 01 40 07              4031 	ld	bc, #0x0740
      0010A0 18 0B                 4032 	jr	00168$
      0010A2                       4033 00167$:
      0010A2 3E C0                 4034 	ld	a, #0xc0
      0010A4 B9                    4035 	cp	a, c
      0010A5 3E 0D                 4036 	ld	a, #0x0d
      0010A7 98                    4037 	sbc	a, b
      0010A8 30 03                 4038 	jr	NC, 00169$
      0010AA 01 C0 0D              4039 	ld	bc, #0x0dc0
      0010AD                       4040 00169$:
      0010AD                       4041 00168$:
      0010AD 59                    4042 	ld	e,c
      0010AE 50                    4043 	ld	d,b
                                   4044 ;main.c:421: xOverflow = (playerX - limitedPlayerX);
      0010AF FAr49r00              4045 	ld	a, (#_playerX)
      0010B2 93                    4046 	sub	a, e
      0010B3 EAr53r00              4047 	ld	(#_xOverflow),a
      0010B6 FAr4Ar00              4048 	ld	a, (#_playerX + 1)
      0010B9 9A                    4049 	sbc	a, d
      0010BA 21r54r00              4050 	ld	hl, #_xOverflow + 1
                                   4051 ;main.c:422: if (xOverflow >= 0) {
      0010BD 32                    4052 	ld	(hl-), a
      0010BE 6E                    4053 	ld	l, (hl)
                                   4054 ;	spillPairReg hl
                                   4055 ;	spillPairReg hl
      0010BF FAr54r00              4056 	ld	a, (_xOverflow + 1)
                                   4057 ;	spillPairReg hl
                                   4058 ;	spillPairReg hl
      0010C2 CB 7F                 4059 	bit	7,a
      0010C4 20 22                 4060 	jr	NZ, 00111$
                                   4061 ;main.c:423: xOverflow = xOverflow >> 5;
      0010C6 21r54r00              4062 	ld	hl, #_xOverflow + 1
      0010C9 CB 2E                 4063 	sra	(hl)
      0010CB 2B                    4064 	dec	hl
      0010CC CB 1E                 4065 	rr	(hl)
      0010CE 23                    4066 	inc	hl
      0010CF CB 2E                 4067 	sra	(hl)
      0010D1 2B                    4068 	dec	hl
      0010D2 CB 1E                 4069 	rr	(hl)
      0010D4 23                    4070 	inc	hl
      0010D5 CB 2E                 4071 	sra	(hl)
      0010D7 2B                    4072 	dec	hl
      0010D8 CB 1E                 4073 	rr	(hl)
      0010DA 23                    4074 	inc	hl
      0010DB CB 2E                 4075 	sra	(hl)
      0010DD 2B                    4076 	dec	hl
      0010DE CB 1E                 4077 	rr	(hl)
      0010E0 23                    4078 	inc	hl
      0010E1 CB 2E                 4079 	sra	(hl)
      0010E3 2B                    4080 	dec	hl
      0010E4 CB 1E                 4081 	rr	(hl)
      0010E6 18 25                 4082 	jr	00112$
      0010E8                       4083 00111$:
                                   4084 ;main.c:426: xOverflow = -((-xOverflow) >> 5);
      0010E8 AF                    4085 	xor	a, a
      0010E9 21r53r00              4086 	ld	hl, #_xOverflow
      0010EC 96                    4087 	sub	a, (hl)
      0010ED 23                    4088 	inc	hl
      0010EE 5F                    4089 	ld	e, a
      0010EF 9F                    4090 	sbc	a, a
      0010F0 96                    4091 	sub	a, (hl)
      0010F1 2B                    4092 	dec	hl
      0010F2 57                    4093 	ld	d, a
      0010F3 CB 2A                 4094 	sra	d
      0010F5 CB 1B                 4095 	rr	e
      0010F7 CB 2A                 4096 	sra	d
      0010F9 CB 1B                 4097 	rr	e
      0010FB CB 2A                 4098 	sra	d
      0010FD CB 1B                 4099 	rr	e
      0010FF CB 2A                 4100 	sra	d
      001101 CB 1B                 4101 	rr	e
      001103 CB 2A                 4102 	sra	d
      001105 CB 1B                 4103 	rr	e
      001107 AF                    4104 	xor	a, a
      001108 93                    4105 	sub	a, e
      001109 22                    4106 	ld	(hl+), a
      00110A 9F                    4107 	sbc	a, a
      00110B 92                    4108 	sub	a, d
      00110C 77                    4109 	ld	(hl), a
      00110D                       4110 00112$:
                                   4111 ;main.c:428: bgX += xOverflow;
      00110D FAr4Fr00              4112 	ld	a, (#_bgX)
      001110 21r53r00              4113 	ld	hl, #_xOverflow
      001113 86                    4114 	add	a, (hl)
      001114 21r4Fr00              4115 	ld	hl, #_bgX
      001117 22                    4116 	ld	(hl+), a
      001118 7E                    4117 	ld	a, (hl)
      001119 21r54r00              4118 	ld	hl, #_xOverflow + 1
      00111C 8E                    4119 	adc	a, (hl)
      00111D EAr50r00              4120 	ld	(#_bgX + 1),a
                                   4121 ;main.c:429: playerX = limitedPlayerX;
      001120 21r49r00              4122 	ld	hl, #_playerX
      001123 79                    4123 	ld	a, c
      001124 22                    4124 	ld	(hl+), a
                                   4125 ;main.c:430: playerDrawX=playerX >> 5;
      001125 78                    4126 	ld	a, b
      001126 32                    4127 	ld	(hl-), a
      001127 2A                    4128 	ld	a, (hl+)
      001128 4F                    4129 	ld	c, a
      001129 46                    4130 	ld	b, (hl)
      00112A CB 38                 4131 	srl	b
      00112C CB 19                 4132 	rr	c
      00112E CB 38                 4133 	srl	b
      001130 CB 19                 4134 	rr	c
      001132 CB 38                 4135 	srl	b
      001134 CB 19                 4136 	rr	c
      001136 CB 38                 4137 	srl	b
      001138 CB 19                 4138 	rr	c
      00113A CB 38                 4139 	srl	b
      00113C CB 19                 4140 	rr	c
      00113E 21r4Dr00              4141 	ld	hl, #_playerDrawX
      001141 71                    4142 	ld	(hl), c
      001142 18 05                 4143 	jr	00115$
      001144                       4144 00114$:
                                   4145 ;main.c:438: xSpeed = 0;
      001144 21r47r00              4146 	ld	hl, #_xSpeed
      001147 36 00                 4147 	ld	(hl), #0x00
      001149                       4148 00115$:
                                   4149 ;main.c:446: uint8_t yCollisionPoint = playerDrawY -12; 
      001149 21r4Er00              4150 	ld	hl, #_playerDrawY
      00114C 4E                    4151 	ld	c, (hl)
      00114D 79                    4152 	ld	a, c
      00114E C6 F4                 4153 	add	a, #0xf4
      001150 F8 07                 4154 	ldhl	sp,	#7
      001152 77                    4155 	ld	(hl), a
                                   4156 ;main.c:448: if (ySpeed > 0) {
      001153 21r48r00              4157 	ld	hl, #_ySpeed
      001156 5E                    4158 	ld	e, (hl)
      001157 AF                    4159 	xor	a, a
      001158 57                    4160 	ld	d, a
      001159 96                    4161 	sub	a, (hl)
      00115A CB 7B                 4162 	bit	7, e
      00115C 28 07                 4163 	jr	Z, 00339$
      00115E CB 7A                 4164 	bit	7, d
      001160 20 08                 4165 	jr	NZ, 00340$
      001162 BF                    4166 	cp	a, a
      001163 18 05                 4167 	jr	00340$
      001165                       4168 00339$:
      001165 CB 7A                 4169 	bit	7, d
      001167 28 01                 4170 	jr	Z, 00340$
      001169 37                    4171 	scf
      00116A                       4172 00340$:
      00116A 30 06                 4173 	jr	NC, 00117$
                                   4174 ;main.c:449: yCollisionPoint = playerDrawY - 8; //bottom edge, only half the height, so -8
      00116C 79                    4175 	ld	a, c
      00116D C6 F8                 4176 	add	a, #0xf8
      00116F F8 07                 4177 	ldhl	sp,	#7
      001171 77                    4178 	ld	(hl), a
      001172                       4179 00117$:
                                   4180 ;main.c:451: if (ySpeed < 0) {
      001172 FAr48r00              4181 	ld	a, (#_ySpeed)
      001175 CB 7F                 4182 	bit	7, a
      001177 28 06                 4183 	jr	Z, 00119$
                                   4184 ;main.c:452: yCollisionPoint = playerDrawY -16; //top edge, 
      001179 79                    4185 	ld	a, c
      00117A C6 F0                 4186 	add	a, #0xf0
      00117C F8 07                 4187 	ldhl	sp,	#7
      00117E 77                    4188 	ld	(hl), a
      00117F                       4189 00119$:
                                   4190 ;main.c:456: bgindX = ((playerDrawX -4 + bgX) >> 3)%32;
      00117F FAr4Dr00              4191 	ld	a, (#_playerDrawX)
      001182 F8 03                 4192 	ldhl	sp,	#3
      001184 22                    4193 	ld	(hl+), a
      001185 AF                    4194 	xor	a, a
      001186 32                    4195 	ld	(hl-), a
      001187 2A                    4196 	ld	a, (hl+)
      001188 5F                    4197 	ld	e, a
      001189 56                    4198 	ld	d, (hl)
      00118A 21 04 00              4199 	ld	hl, #0x0004
      00118D 7B                    4200 	ld	a, e
      00118E 95                    4201 	sub	a, l
      00118F 5F                    4202 	ld	e, a
      001190 7A                    4203 	ld	a, d
      001191 9C                    4204 	sbc	a, h
      001192 F8 06                 4205 	ldhl	sp,	#6
      001194 32                    4206 	ld	(hl-), a
      001195 73                    4207 	ld	(hl), e
      001196 3A                    4208 	ld	a, (hl-)
      001197 2B                    4209 	dec	hl
      001198 77                    4210 	ld	(hl), a
      001199 F8 06                 4211 	ldhl	sp,	#6
      00119B 3A                    4212 	ld	a, (hl-)
      00119C 2B                    4213 	dec	hl
      00119D 32                    4214 	ld	(hl-), a
      00119E 2A                    4215 	ld	a, (hl+)
      00119F 5F                    4216 	ld	e, a
      0011A0 56                    4217 	ld	d, (hl)
      0011A1 21r4Fr00              4218 	ld	hl, #_bgX
      0011A4 2A                    4219 	ld	a,	(hl+)
      0011A5 66                    4220 	ld	h, (hl)
      0011A6 6F                    4221 	ld	l, a
      0011A7 19                    4222 	add	hl, de
      0011A8 E5                    4223 	push	hl
      0011A9 7D                    4224 	ld	a, l
      0011AA F8 07                 4225 	ldhl	sp,	#7
      0011AC 77                    4226 	ld	(hl), a
      0011AD E1                    4227 	pop	hl
      0011AE 7C                    4228 	ld	a, h
      0011AF F8 06                 4229 	ldhl	sp,	#6
      0011B1 77                    4230 	ld	(hl), a
      0011B2 CB 2E                 4231 	sra	(hl)
      0011B4 2B                    4232 	dec	hl
      0011B5 CB 1E                 4233 	rr	(hl)
      0011B7 23                    4234 	inc	hl
      0011B8 CB 2E                 4235 	sra	(hl)
      0011BA 2B                    4236 	dec	hl
      0011BB CB 1E                 4237 	rr	(hl)
      0011BD 23                    4238 	inc	hl
      0011BE CB 2E                 4239 	sra	(hl)
      0011C0 2B                    4240 	dec	hl
      0011C1 CB 1E                 4241 	rr	(hl)
      0011C3 11 20 00              4242 	ld	de, #0x0020
      0011C6 D5                    4243 	push	de
      0011C7 2A                    4244 	ld	a, (hl+)
      0011C8 5F                    4245 	ld	e, a
      0011C9 56                    4246 	ld	d, (hl)
      0011CA D5                    4247 	push	de
      0011CB CDr00r00              4248 	call	__modsint
      0011CE E8 04                 4249 	add	sp, #4
      0011D0 F8 05                 4250 	ldhl	sp,	#5
      0011D2 7B                    4251 	ld	a, e
      0011D3 22                    4252 	ld	(hl+), a
      0011D4 72                    4253 	ld	(hl), d
      0011D5 F8 05                 4254 	ldhl	sp,	#5
      0011D7 7E                    4255 	ld	a, (hl)
      0011D8 F8 00                 4256 	ldhl	sp,	#0
      0011DA 77                    4257 	ld	(hl), a
      0011DB F8 06                 4258 	ldhl	sp,	#6
      0011DD 7E                    4259 	ld	a, (hl)
      0011DE F8 01                 4260 	ldhl	sp,	#1
      0011E0 77                    4261 	ld	(hl), a
                                   4262 ;main.c:459: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      0011E1 F8 07                 4263 	ldhl	sp,	#7
      0011E3 3A                    4264 	ld	a, (hl-)
      0011E4 22                    4265 	ld	(hl+), a
      0011E5 AF                    4266 	xor	a, a
      0011E6 32                    4267 	ld	(hl-), a
      0011E7 3A                    4268 	ld	a, (hl-)
      0011E8 2B                    4269 	dec	hl
      0011E9 77                    4270 	ld	(hl), a
      0011EA F8 07                 4271 	ldhl	sp,	#7
      0011EC 3A                    4272 	ld	a, (hl-)
      0011ED 2B                    4273 	dec	hl
      0011EE 32                    4274 	ld	(hl-), a
      0011EF 2A                    4275 	ld	a, (hl+)
      0011F0 5F                    4276 	ld	e, a
      0011F1 56                    4277 	ld	d, (hl)
      0011F2 21r51r00              4278 	ld	hl, #_bgY
      0011F5 2A                    4279 	ld	a,	(hl+)
      0011F6 66                    4280 	ld	h, (hl)
      0011F7 6F                    4281 	ld	l, a
      0011F8 19                    4282 	add	hl, de
      0011F9 E5                    4283 	push	hl
      0011FA 7D                    4284 	ld	a, l
      0011FB F8 08                 4285 	ldhl	sp,	#8
      0011FD 77                    4286 	ld	(hl), a
      0011FE E1                    4287 	pop	hl
      0011FF 7C                    4288 	ld	a, h
      001200 F8 07                 4289 	ldhl	sp,	#7
      001202 77                    4290 	ld	(hl), a
      001203 CB 2E                 4291 	sra	(hl)
      001205 2B                    4292 	dec	hl
      001206 CB 1E                 4293 	rr	(hl)
      001208 23                    4294 	inc	hl
      001209 CB 2E                 4295 	sra	(hl)
      00120B 2B                    4296 	dec	hl
      00120C CB 1E                 4297 	rr	(hl)
      00120E 23                    4298 	inc	hl
      00120F CB 2E                 4299 	sra	(hl)
      001211 2B                    4300 	dec	hl
      001212 CB 1E                 4301 	rr	(hl)
      001214 11 20 00              4302 	ld	de, #0x0020
      001217 D5                    4303 	push	de
      001218 2A                    4304 	ld	a, (hl+)
      001219 5F                    4305 	ld	e, a
      00121A 56                    4306 	ld	d, (hl)
      00121B D5                    4307 	push	de
      00121C CDr00r00              4308 	call	__modsint
      00121F E8 04                 4309 	add	sp, #4
      001221 F8 06                 4310 	ldhl	sp,	#6
      001223 7B                    4311 	ld	a, e
      001224 22                    4312 	ld	(hl+), a
      001225 72                    4313 	ld	(hl), d
      001226 F8 06                 4314 	ldhl	sp,	#6
      001228 2A                    4315 	ld	a, (hl+)
      001229 77                    4316 	ld	(hl), a
                                   4317 ;main.c:462: ind = 32*bgindY + bgindX;
      00122A 3A                    4318 	ld	a, (hl-)
      00122B 22                    4319 	ld	(hl+), a
      00122C 36 00                 4320 	ld	(hl), #0x00
      00122E 3E 05                 4321 	ld	a, #0x05
      001230                       4322 00341$:
      001230 F8 06                 4323 	ldhl	sp,	#6
      001232 CB 26                 4324 	sla	(hl)
      001234 23                    4325 	inc	hl
      001235 CB 16                 4326 	rl	(hl)
      001237 3D                    4327 	dec	a
      001238 20 F6                 4328 	jr	NZ, 00341$
      00123A 2B                    4329 	dec	hl
      00123B 3A                    4330 	ld	a, (hl-)
      00123C 2B                    4331 	dec	hl
      00123D 77                    4332 	ld	(hl), a
      00123E F8 07                 4333 	ldhl	sp,	#7
      001240 3A                    4334 	ld	a, (hl-)
      001241 2B                    4335 	dec	hl
      001242 77                    4336 	ld	(hl), a
      001243 D1                    4337 	pop	de
      001244 D5                    4338 	push	de
      001245 3A                    4339 	ld	a, (hl-)
      001246 6E                    4340 	ld	l, (hl)
      001247 67                    4341 	ld	h, a
      001248 19                    4342 	add	hl, de
      001249 E5                    4343 	push	hl
      00124A 7D                    4344 	ld	a, l
      00124B F8 08                 4345 	ldhl	sp,	#8
      00124D 77                    4346 	ld	(hl), a
      00124E E1                    4347 	pop	hl
      00124F 7C                    4348 	ld	a, h
      001250 F8 07                 4349 	ldhl	sp,	#7
      001252 77                    4350 	ld	(hl), a
                                   4351 ;main.c:463: result = 1;
      001253 F8 03                 4352 	ldhl	sp,	#3
      001255 36 01                 4353 	ld	(hl), #0x01
                                   4354 ;main.c:464: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001257 F8 06                 4355 	ldhl	sp,#6
      001259 2A                    4356 	ld	a, (hl+)
      00125A 5F                    4357 	ld	e, a
      00125B 56                    4358 	ld	d, (hl)
      00125C 21r87r00              4359 	ld	hl, #_background1
      00125F 19                    4360 	add	hl, de
      001260 4D                    4361 	ld	c, l
      001261 44                    4362 	ld	b, h
      001262 0A                    4363 	ld	a, (bc)
      001263 F8 04                 4364 	ldhl	sp,	#4
      001265 77                    4365 	ld	(hl), a
      001266 F8 07                 4366 	ldhl	sp,	#7
      001268 36 00                 4367 	ld	(hl), #0x00
      00126A                       4368 00155$:
      00126A F8 07                 4369 	ldhl	sp,	#7
      00126C 7E                    4370 	ld	a, (hl)
      00126D F8 02                 4371 	ldhl	sp,	#2
      00126F 96                    4372 	sub	a, (hl)
      001270 30 29                 4373 	jr	NC, 00122$
                                   4374 ;main.c:465: if (background1[ind] == BLANK[j] ) {
      001272 11rC8r05              4375 	ld	de, #_BLANK
      001275 F8 07                 4376 	ldhl	sp,	#7
      001277 6E                    4377 	ld	l, (hl)
      001278 26 00                 4378 	ld	h, #0x00
      00127A 19                    4379 	add	hl, de
      00127B E5                    4380 	push	hl
      00127C 7D                    4381 	ld	a, l
      00127D F8 07                 4382 	ldhl	sp,	#7
      00127F 77                    4383 	ld	(hl), a
      001280 E1                    4384 	pop	hl
      001281 7C                    4385 	ld	a, h
      001282 F8 06                 4386 	ldhl	sp,	#6
      001284 32                    4387 	ld	(hl-), a
      001285 2A                    4388 	ld	a, (hl+)
      001286 5F                    4389 	ld	e, a
      001287 3A                    4390 	ld	a, (hl-)
      001288 2B                    4391 	dec	hl
      001289 57                    4392 	ld	d, a
      00128A 1A                    4393 	ld	a, (de)
      00128B 4F                    4394 	ld	c, a
      00128C 7E                    4395 	ld	a, (hl)
      00128D 91                    4396 	sub	a, c
      00128E 20 06                 4397 	jr	NZ, 00156$
                                   4398 ;main.c:466: result = 0;
      001290 F8 03                 4399 	ldhl	sp,	#3
      001292 36 00                 4400 	ld	(hl), #0x00
                                   4401 ;main.c:467: break;
      001294 18 05                 4402 	jr	00122$
      001296                       4403 00156$:
                                   4404 ;main.c:464: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001296 F8 07                 4405 	ldhl	sp,	#7
      001298 34                    4406 	inc	(hl)
      001299 18 CF                 4407 	jr	00155$
      00129B                       4408 00122$:
                                   4409 ;main.c:470: if (result == 0) {
      00129B F8 03                 4410 	ldhl	sp,	#3
      00129D 7E                    4411 	ld	a, (hl)
      00129E B7                    4412 	or	a, a
      00129F C2r6Cr13              4413 	jp	NZ, 00127$
                                   4414 ;main.c:471: playerY += ySpeed;
      0012A2 FAr48r00              4415 	ld	a, (#_ySpeed)
      0012A5 4F                    4416 	ld	c, a
      0012A6 07                    4417 	rlca
      0012A7 9F                    4418 	sbc	a, a
      0012A8 21r4Br00              4419 	ld	hl, #_playerY
      0012AB 5E                    4420 	ld	e, (hl)
      0012AC 23                    4421 	inc	hl
      0012AD 56                    4422 	ld	d, (hl)
      0012AE 2B                    4423 	dec	hl
      0012AF 47                    4424 	ld	b, a
      0012B0 79                    4425 	ld	a, c
      0012B1 83                    4426 	add	a, e
      0012B2 4F                    4427 	ld	c, a
      0012B3 78                    4428 	ld	a, b
      0012B4 8A                    4429 	adc	a, d
      0012B5 47                    4430 	ld	b, a
      0012B6 79                    4431 	ld	a, c
      0012B7 22                    4432 	ld	(hl+), a
                                   4433 ;main.c:473: uint16_t limitedPlayerY = u16Clamp(playerY, 61<<5, 107<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      0012B8 78                    4434 	ld	a, b
      0012B9 32                    4435 	ld	(hl-), a
      0012BA 2A                    4436 	ld	a, (hl+)
      0012BB 5F                    4437 	ld	e, a
      0012BC 56                    4438 	ld	d, (hl)
      0012BD 7B                    4439 	ld	a, e
      0012BE D6 A0                 4440 	sub	a, #0xa0
      0012C0 7A                    4441 	ld	a, d
      0012C1 DE 07                 4442 	sbc	a, #0x07
      0012C3 30 05                 4443 	jr	NC, 00171$
      0012C5 11 A0 07              4444 	ld	de, #0x07a0
      0012C8 18 0B                 4445 	jr	00172$
      0012CA                       4446 00171$:
      0012CA 3E 60                 4447 	ld	a, #0x60
      0012CC BB                    4448 	cp	a, e
      0012CD 3E 0D                 4449 	ld	a, #0x0d
      0012CF 9A                    4450 	sbc	a, d
      0012D0 30 03                 4451 	jr	NC, 00173$
      0012D2 11 60 0D              4452 	ld	de, #0x0d60
      0012D5                       4453 00173$:
      0012D5                       4454 00172$:
      0012D5 4B                    4455 	ld	c, e
      0012D6 42                    4456 	ld	b, d
                                   4457 ;main.c:475: yOverflow = (playerY - limitedPlayerY);
      0012D7 FAr4Br00              4458 	ld	a, (#_playerY)
      0012DA 93                    4459 	sub	a, e
      0012DB EAr55r00              4460 	ld	(#_yOverflow),a
      0012DE FAr4Cr00              4461 	ld	a, (#_playerY + 1)
      0012E1 9A                    4462 	sbc	a, d
      0012E2 21r56r00              4463 	ld	hl, #_yOverflow + 1
                                   4464 ;main.c:476: if (yOverflow >= 0) {
      0012E5 32                    4465 	ld	(hl-), a
      0012E6 6E                    4466 	ld	l, (hl)
                                   4467 ;	spillPairReg hl
                                   4468 ;	spillPairReg hl
      0012E7 FAr56r00              4469 	ld	a, (_yOverflow + 1)
                                   4470 ;	spillPairReg hl
                                   4471 ;	spillPairReg hl
      0012EA CB 7F                 4472 	bit	7,a
      0012EC 20 22                 4473 	jr	NZ, 00124$
                                   4474 ;main.c:477: yOverflow = yOverflow >> 5;
      0012EE 21r56r00              4475 	ld	hl, #_yOverflow + 1
      0012F1 CB 2E                 4476 	sra	(hl)
      0012F3 2B                    4477 	dec	hl
      0012F4 CB 1E                 4478 	rr	(hl)
      0012F6 23                    4479 	inc	hl
      0012F7 CB 2E                 4480 	sra	(hl)
      0012F9 2B                    4481 	dec	hl
      0012FA CB 1E                 4482 	rr	(hl)
      0012FC 23                    4483 	inc	hl
      0012FD CB 2E                 4484 	sra	(hl)
      0012FF 2B                    4485 	dec	hl
      001300 CB 1E                 4486 	rr	(hl)
      001302 23                    4487 	inc	hl
      001303 CB 2E                 4488 	sra	(hl)
      001305 2B                    4489 	dec	hl
      001306 CB 1E                 4490 	rr	(hl)
      001308 23                    4491 	inc	hl
      001309 CB 2E                 4492 	sra	(hl)
      00130B 2B                    4493 	dec	hl
      00130C CB 1E                 4494 	rr	(hl)
      00130E 18 25                 4495 	jr	00125$
      001310                       4496 00124$:
                                   4497 ;main.c:480: yOverflow = -((-yOverflow) >> 5);
      001310 AF                    4498 	xor	a, a
      001311 21r55r00              4499 	ld	hl, #_yOverflow
      001314 96                    4500 	sub	a, (hl)
      001315 23                    4501 	inc	hl
      001316 5F                    4502 	ld	e, a
      001317 9F                    4503 	sbc	a, a
      001318 96                    4504 	sub	a, (hl)
      001319 2B                    4505 	dec	hl
      00131A 57                    4506 	ld	d, a
      00131B CB 2A                 4507 	sra	d
      00131D CB 1B                 4508 	rr	e
      00131F CB 2A                 4509 	sra	d
      001321 CB 1B                 4510 	rr	e
      001323 CB 2A                 4511 	sra	d
      001325 CB 1B                 4512 	rr	e
      001327 CB 2A                 4513 	sra	d
      001329 CB 1B                 4514 	rr	e
      00132B CB 2A                 4515 	sra	d
      00132D CB 1B                 4516 	rr	e
      00132F AF                    4517 	xor	a, a
      001330 93                    4518 	sub	a, e
      001331 22                    4519 	ld	(hl+), a
      001332 9F                    4520 	sbc	a, a
      001333 92                    4521 	sub	a, d
      001334 77                    4522 	ld	(hl), a
      001335                       4523 00125$:
                                   4524 ;main.c:482: bgY += yOverflow;
      001335 FAr51r00              4525 	ld	a, (#_bgY)
      001338 21r55r00              4526 	ld	hl, #_yOverflow
      00133B 86                    4527 	add	a, (hl)
      00133C 21r51r00              4528 	ld	hl, #_bgY
      00133F 22                    4529 	ld	(hl+), a
      001340 7E                    4530 	ld	a, (hl)
      001341 21r56r00              4531 	ld	hl, #_yOverflow + 1
      001344 8E                    4532 	adc	a, (hl)
      001345 EAr52r00              4533 	ld	(#_bgY + 1),a
                                   4534 ;main.c:483: playerY = limitedPlayerY;
      001348 21r4Br00              4535 	ld	hl, #_playerY
      00134B 79                    4536 	ld	a, c
      00134C 22                    4537 	ld	(hl+), a
                                   4538 ;main.c:484: playerDrawY=playerY >> 5;
      00134D 78                    4539 	ld	a, b
      00134E 32                    4540 	ld	(hl-), a
      00134F 2A                    4541 	ld	a, (hl+)
      001350 4F                    4542 	ld	c, a
      001351 46                    4543 	ld	b, (hl)
      001352 CB 38                 4544 	srl	b
      001354 CB 19                 4545 	rr	c
      001356 CB 38                 4546 	srl	b
      001358 CB 19                 4547 	rr	c
      00135A CB 38                 4548 	srl	b
      00135C CB 19                 4549 	rr	c
      00135E CB 38                 4550 	srl	b
      001360 CB 19                 4551 	rr	c
      001362 CB 38                 4552 	srl	b
      001364 CB 19                 4553 	rr	c
      001366 21r4Er00              4554 	ld	hl, #_playerDrawY
      001369 71                    4555 	ld	(hl), c
      00136A 18 05                 4556 	jr	00128$
      00136C                       4557 00127$:
                                   4558 ;main.c:489: ySpeed = 0;
      00136C 21r48r00              4559 	ld	hl, #_ySpeed
      00136F 36 00                 4560 	ld	(hl), #0x00
      001371                       4561 00128$:
                                   4562 ;main.c:493: move_sprite(0, playerDrawX, playerDrawY);
      001371 21r4Er00              4563 	ld	hl, #_playerDrawY
      001374 4E                    4564 	ld	c, (hl)
      001375 21r4Dr00              4565 	ld	hl, #_playerDrawX
      001378 46                    4566 	ld	b, (hl)
                                   4567 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001379 21r00r00              4568 	ld	hl, #_shadow_OAM
                                   4569 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00137C 79                    4570 	ld	a, c
      00137D 22                    4571 	ld	(hl+), a
      00137E 70                    4572 	ld	(hl), b
                                   4573 ;main.c:496: if (bgX >= 256) {
      00137F 21r4Fr00              4574 	ld	hl, #_bgX
      001382 2A                    4575 	ld	a, (hl+)
      001383 4F                    4576 	ld	c, a
      001384 46                    4577 	ld	b, (hl)
      001385 78                    4578 	ld	a, b
      001386 EE 80                 4579 	xor	a, #0x80
      001388 D6 81                 4580 	sub	a, #0x81
      00138A 38 0F                 4581 	jr	C, 00130$
                                   4582 ;main.c:497: bgX = bgX % 256;
      00138C AF                    4583 	xor	a, a
      00138D 3C                    4584 	inc	a
      00138E F5                    4585 	push	af
      00138F C5                    4586 	push	bc
      001390 CDr00r00              4587 	call	__modsint
      001393 E8 04                 4588 	add	sp, #4
      001395 21r4Fr00              4589 	ld	hl, #_bgX
      001398 7B                    4590 	ld	a, e
      001399 22                    4591 	ld	(hl+), a
      00139A 72                    4592 	ld	(hl), d
      00139B                       4593 00130$:
                                   4594 ;main.c:499: if (bgX < 0) {
      00139B 21r4Fr00              4595 	ld	hl, #_bgX
      00139E 2A                    4596 	ld	a, (hl+)
      00139F 4F                    4597 	ld	c, a
      0013A0 46                    4598 	ld	b, (hl)
      0013A1 CB 78                 4599 	bit	7, b
      0013A3 28 15                 4600 	jr	Z, 00132$
                                   4601 ;main.c:500: bgX = 255 - (bgX % 256);
      0013A5 AF                    4602 	xor	a, a
      0013A6 3C                    4603 	inc	a
      0013A7 F5                    4604 	push	af
      0013A8 C5                    4605 	push	bc
      0013A9 CDr00r00              4606 	call	__modsint
      0013AC E8 04                 4607 	add	sp, #4
      0013AE 3E FF                 4608 	ld	a, #0xff
      0013B0 93                    4609 	sub	a, e
      0013B1 4F                    4610 	ld	c, a
      0013B2 9F                    4611 	sbc	a, a
      0013B3 92                    4612 	sub	a, d
      0013B4 21r4Fr00              4613 	ld	hl, #_bgX
      0013B7 71                    4614 	ld	(hl), c
      0013B8 23                    4615 	inc	hl
      0013B9 77                    4616 	ld	(hl), a
      0013BA                       4617 00132$:
                                   4618 ;main.c:502: if (bgY >= 256) {
      0013BA 21r51r00              4619 	ld	hl, #_bgY
      0013BD 2A                    4620 	ld	a, (hl+)
      0013BE 4F                    4621 	ld	c, a
      0013BF 46                    4622 	ld	b, (hl)
      0013C0 78                    4623 	ld	a, b
      0013C1 EE 80                 4624 	xor	a, #0x80
      0013C3 D6 81                 4625 	sub	a, #0x81
      0013C5 38 0F                 4626 	jr	C, 00134$
                                   4627 ;main.c:503: bgY = bgY % 256;
      0013C7 AF                    4628 	xor	a, a
      0013C8 3C                    4629 	inc	a
      0013C9 F5                    4630 	push	af
      0013CA C5                    4631 	push	bc
      0013CB CDr00r00              4632 	call	__modsint
      0013CE E8 04                 4633 	add	sp, #4
      0013D0 21r51r00              4634 	ld	hl, #_bgY
      0013D3 7B                    4635 	ld	a, e
      0013D4 22                    4636 	ld	(hl+), a
      0013D5 72                    4637 	ld	(hl), d
      0013D6                       4638 00134$:
                                   4639 ;main.c:505: if (bgY < 0) {
      0013D6 21r51r00              4640 	ld	hl, #_bgY
      0013D9 2A                    4641 	ld	a, (hl+)
      0013DA 4F                    4642 	ld	c, a
      0013DB 46                    4643 	ld	b, (hl)
      0013DC CB 78                 4644 	bit	7, b
      0013DE 28 15                 4645 	jr	Z, 00136$
                                   4646 ;main.c:506: bgY = 255 - (bgY % 256);
      0013E0 AF                    4647 	xor	a, a
      0013E1 3C                    4648 	inc	a
      0013E2 F5                    4649 	push	af
      0013E3 C5                    4650 	push	bc
      0013E4 CDr00r00              4651 	call	__modsint
      0013E7 E8 04                 4652 	add	sp, #4
      0013E9 3E FF                 4653 	ld	a, #0xff
      0013EB 93                    4654 	sub	a, e
      0013EC 4F                    4655 	ld	c, a
      0013ED 9F                    4656 	sbc	a, a
      0013EE 92                    4657 	sub	a, d
      0013EF 21r51r00              4658 	ld	hl, #_bgY
      0013F2 71                    4659 	ld	(hl), c
      0013F3 23                    4660 	inc	hl
      0013F4 77                    4661 	ld	(hl), a
      0013F5                       4662 00136$:
                                   4663 ;main.c:509: move_bkg(bgX, bgY);
      0013F5 21r51r00              4664 	ld	hl, #_bgY
      0013F8 4E                    4665 	ld	c, (hl)
      0013F9 FAr4Fr00              4666 	ld	a, (#_bgX)
      0013FC E0r00                 4667 	ldh	(_SCX_REG + 0), a
                                   4668 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      0013FE 79                    4669 	ld	a, c
      0013FF E0r00                 4670 	ldh	(_SCY_REG + 0), a
                                   4671 ;main.c:512: if (ySpeed > 0) ySpeed--;
      001401 21r48r00              4672 	ld	hl, #_ySpeed
      001404 5E                    4673 	ld	e, (hl)
      001405 AF                    4674 	xor	a, a
      001406 57                    4675 	ld	d, a
      001407 96                    4676 	sub	a, (hl)
      001408 CB 7B                 4677 	bit	7, e
      00140A 28 07                 4678 	jr	Z, 00344$
      00140C CB 7A                 4679 	bit	7, d
      00140E 20 08                 4680 	jr	NZ, 00345$
      001410 BF                    4681 	cp	a, a
      001411 18 05                 4682 	jr	00345$
      001413                       4683 00344$:
      001413 CB 7A                 4684 	bit	7, d
      001415 28 01                 4685 	jr	Z, 00345$
      001417 37                    4686 	scf
      001418                       4687 00345$:
      001418 30 04                 4688 	jr	NC, 00138$
      00141A 21r48r00              4689 	ld	hl, #_ySpeed
      00141D 35                    4690 	dec	(hl)
      00141E                       4691 00138$:
                                   4692 ;main.c:513: if (ySpeed < 0) ySpeed++;
      00141E 21r48r00              4693 	ld	hl, #_ySpeed
      001421 CB 7E                 4694 	bit	7, (hl)
      001423 28 01                 4695 	jr	Z, 00140$
      001425 34                    4696 	inc	(hl)
      001426                       4697 00140$:
                                   4698 ;main.c:514: if (xSpeed > 0) xSpeed--;
      001426 21r47r00              4699 	ld	hl, #_xSpeed
      001429 5E                    4700 	ld	e, (hl)
      00142A AF                    4701 	xor	a, a
      00142B 57                    4702 	ld	d, a
      00142C 96                    4703 	sub	a, (hl)
      00142D CB 7B                 4704 	bit	7, e
      00142F 28 07                 4705 	jr	Z, 00346$
      001431 CB 7A                 4706 	bit	7, d
      001433 20 08                 4707 	jr	NZ, 00347$
      001435 BF                    4708 	cp	a, a
      001436 18 05                 4709 	jr	00347$
      001438                       4710 00346$:
      001438 CB 7A                 4711 	bit	7, d
      00143A 28 01                 4712 	jr	Z, 00347$
      00143C 37                    4713 	scf
      00143D                       4714 00347$:
      00143D 30 04                 4715 	jr	NC, 00142$
      00143F 21r47r00              4716 	ld	hl, #_xSpeed
      001442 35                    4717 	dec	(hl)
      001443                       4718 00142$:
                                   4719 ;main.c:515: if (xSpeed < 0) xSpeed++;
      001443 21r47r00              4720 	ld	hl, #_xSpeed
      001446 CB 7E                 4721 	bit	7, (hl)
      001448 28 01                 4722 	jr	Z, 00157$
      00144A 34                    4723 	inc	(hl)
      00144B                       4724 00157$:
                                   4725 ;main.c:519: }
      00144B E8 08                 4726 	add	sp, #8
      00144D C9                    4727 	ret
                                   4728 ;main.c:521: void takeDamage(int16_t amount) {
                                   4729 ;	---------------------------------
                                   4730 ; Function takeDamage
                                   4731 ; ---------------------------------
      00144E                       4732 _takeDamage::
      00144E 3B                    4733 	dec	sp
                                   4734 ;main.c:522: if (amount > shield) {
      00144F FAr89r00              4735 	ld	a, (#_shield)
      001452 4F                    4736 	ld	c, a
      001453 07                    4737 	rlca
      001454 9F                    4738 	sbc	a, a
      001455 47                    4739 	ld	b, a
                                   4740 ;main.c:524: hull -= (amount - shield);
      001456 F8 03                 4741 	ldhl	sp,	#3
      001458 7E                    4742 	ld	a, (hl)
      001459 F8 00                 4743 	ldhl	sp,	#0
      00145B 77                    4744 	ld	(hl), a
                                   4745 ;main.c:522: if (amount > shield) {
      00145C F8 03                 4746 	ldhl	sp,	#3
      00145E 79                    4747 	ld	a, c
      00145F 96                    4748 	sub	a, (hl)
      001460 23                    4749 	inc	hl
      001461 78                    4750 	ld	a, b
      001462 9E                    4751 	sbc	a, (hl)
      001463 78                    4752 	ld	a, b
      001464 57                    4753 	ld	d, a
      001465 CB 7E                 4754 	bit	7, (hl)
      001467 28 07                 4755 	jr	Z, 00111$
      001469 CB 7A                 4756 	bit	7, d
      00146B 20 08                 4757 	jr	NZ, 00112$
      00146D BF                    4758 	cp	a, a
      00146E 18 05                 4759 	jr	00112$
      001470                       4760 00111$:
      001470 CB 7A                 4761 	bit	7, d
      001472 28 01                 4762 	jr	Z, 00112$
      001474 37                    4763 	scf
      001475                       4764 00112$:
      001475 30 10                 4765 	jr	NC, 00102$
                                   4766 ;main.c:523: shield = 0;
      001477 21r89r00              4767 	ld	hl, #_shield
      00147A 36 00                 4768 	ld	(hl), #0x00
                                   4769 ;main.c:524: hull -= (amount - shield);
      00147C FAr88r00              4770 	ld	a, (#_hull)
      00147F F8 00                 4771 	ldhl	sp,	#0
      001481 96                    4772 	sub	a, (hl)
      001482 EAr88r00              4773 	ld	(#_hull),a
      001485 18 09                 4774 	jr	00104$
      001487                       4775 00102$:
                                   4776 ;main.c:527: shield -= amount;
      001487 FAr89r00              4777 	ld	a, (#_shield)
      00148A F8 00                 4778 	ldhl	sp,	#0
      00148C 96                    4779 	sub	a, (hl)
      00148D EAr89r00              4780 	ld	(#_shield),a
      001490                       4781 00104$:
                                   4782 ;main.c:529: }
      001490 33                    4783 	inc	sp
      001491 C9                    4784 	ret
                                   4785 ;main.c:531: void checkCollision() {
                                   4786 ;	---------------------------------
                                   4787 ; Function checkCollision
                                   4788 ; ---------------------------------
      001492                       4789 _checkCollision::
      001492 E8 ED                 4790 	add	sp, #-19
                                   4791 ;main.c:538: struct Enemy *eptr = enemies;
                                   4792 ;main.c:541: while (i < ENEMYCOUNT) {
      001494 21rCCr05              4793 	ld	hl, #_ENEMYCOUNT
      001497 4E                    4794 	ld	c, (hl)
      001498 AF                    4795 	xor	a, a
      001499 91                    4796 	sub	a, c
      00149A D2rCEr17              4797 	jp	NC, 00123$
                                   4798 ;main.c:542: eptr += enemyCollisionCount;
      00149D 21r57r00              4799 	ld	hl, #_enemyCollisionCount
      0014A0 6E                    4800 	ld	l, (hl)
                                   4801 ;	spillPairReg hl
                                   4802 ;	spillPairReg hl
      0014A1 26 00                 4803 	ld	h, #0x00
                                   4804 ;	spillPairReg hl
                                   4805 ;	spillPairReg hl
      0014A3 29                    4806 	add	hl, hl
      0014A4 29                    4807 	add	hl, hl
      0014A5 29                    4808 	add	hl, hl
      0014A6 29                    4809 	add	hl, hl
      0014A7 11r00r00              4810 	ld	de, #_enemies
      0014AA 19                    4811 	add	hl, de
      0014AB 4D                    4812 	ld	c, l
      0014AC 44                    4813 	ld	b, h
                                   4814 ;main.c:543: if (eptr->visible && eptr->alive) {
      0014AD 21 0A 00              4815 	ld	hl, #0x000a
      0014B0 09                    4816 	add	hl, bc
      0014B1 7E                    4817 	ld	a, (hl)
      0014B2 B7                    4818 	or	a, a
      0014B3 CAr05r16              4819 	jp	Z, 00108$
      0014B6 21 09 00              4820 	ld	hl, #0x0009
      0014B9 09                    4821 	add	hl, bc
      0014BA E5                    4822 	push	hl
      0014BB 7D                    4823 	ld	a, l
      0014BC F8 0B                 4824 	ldhl	sp,	#11
      0014BE 77                    4825 	ld	(hl), a
      0014BF E1                    4826 	pop	hl
      0014C0 7C                    4827 	ld	a, h
      0014C1 F8 0A                 4828 	ldhl	sp,	#10
      0014C3 32                    4829 	ld	(hl-), a
      0014C4 2A                    4830 	ld	a, (hl+)
      0014C5 5F                    4831 	ld	e, a
      0014C6 56                    4832 	ld	d, (hl)
      0014C7 1A                    4833 	ld	a, (de)
      0014C8 B7                    4834 	or	a, a
      0014C9 CAr05r16              4835 	jp	Z, 00108$
                                   4836 ;main.c:545: if (eptr->x > playerDrawX - PLAYERSIZE && eptr->x - (8>>(eptr->spriteCount-1)) < playerDrawX) 
      0014CC 59                    4837 	ld	e, c
      0014CD 50                    4838 	ld	d, b
      0014CE 1A                    4839 	ld	a, (de)
      0014CF F8 0F                 4840 	ldhl	sp,	#15
      0014D1 22                    4841 	ld	(hl+), a
      0014D2 13                    4842 	inc	de
      0014D3 1A                    4843 	ld	a, (de)
      0014D4 77                    4844 	ld	(hl), a
      0014D5 FAr4Dr00              4845 	ld	a, (#_playerDrawX)
      0014D8 F8 0D                 4846 	ldhl	sp,	#13
      0014DA 22                    4847 	ld	(hl+), a
      0014DB 36 00                 4848 	ld	(hl), #0x00
      0014DD FArDEr05              4849 	ld	a, (#_PLAYERSIZE)
      0014E0 F8 07                 4850 	ldhl	sp,	#7
      0014E2 22                    4851 	ld	(hl+), a
      0014E3 36 00                 4852 	ld	(hl), #0x00
      0014E5 F8 0D                 4853 	ldhl	sp,#13
      0014E7 2A                    4854 	ld	a, (hl+)
      0014E8 5F                    4855 	ld	e, a
      0014E9 56                    4856 	ld	d, (hl)
      0014EA F8 07                 4857 	ldhl	sp,	#7
      0014EC 2A                    4858 	ld	a,	(hl+)
      0014ED 66                    4859 	ld	h, (hl)
      0014EE 6F                    4860 	ld	l, a
      0014EF 7B                    4861 	ld	a, e
      0014F0 95                    4862 	sub	a, l
      0014F1 5F                    4863 	ld	e, a
      0014F2 7A                    4864 	ld	a, d
      0014F3 9C                    4865 	sbc	a, h
      0014F4 F8 12                 4866 	ldhl	sp,	#18
      0014F6 32                    4867 	ld	(hl-), a
      0014F7 73                    4868 	ld	(hl), e
      0014F8 F8 11                 4869 	ldhl	sp,	#17
      0014FA 5D                    4870 	ld	e, l
      0014FB 54                    4871 	ld	d, h
      0014FC F8 0F                 4872 	ldhl	sp,	#15
      0014FE 1A                    4873 	ld	a, (de)
      0014FF 13                    4874 	inc	de
      001500 96                    4875 	sub	a, (hl)
      001501 23                    4876 	inc	hl
      001502 1A                    4877 	ld	a, (de)
      001503 9E                    4878 	sbc	a, (hl)
      001504 1A                    4879 	ld	a, (de)
      001505 57                    4880 	ld	d, a
      001506 5E                    4881 	ld	e, (hl)
      001507 CB 7B                 4882 	bit	7, e
      001509 28 07                 4883 	jr	Z, 00208$
      00150B CB 7A                 4884 	bit	7, d
      00150D 20 08                 4885 	jr	NZ, 00209$
      00150F BF                    4886 	cp	a, a
      001510 18 05                 4887 	jr	00209$
      001512                       4888 00208$:
      001512 CB 7A                 4889 	bit	7, d
      001514 28 01                 4890 	jr	Z, 00209$
      001516 37                    4891 	scf
      001517                       4892 00209$:
      001517 D2r05r16              4893 	jp	NC, 00108$
      00151A 21 08 00              4894 	ld	hl, #0x0008
      00151D 09                    4895 	add	hl, bc
      00151E 5E                    4896 	ld	e, (hl)
      00151F 1D                    4897 	dec	e
      001520 F8 0B                 4898 	ldhl	sp,	#11
      001522 3E 08                 4899 	ld	a, #0x08
      001524 22                    4900 	ld	(hl+), a
      001525 AF                    4901 	xor	a, a
      001526 77                    4902 	ld	(hl), a
      001527 1C                    4903 	inc	e
      001528 18 07                 4904 	jr	00211$
      00152A                       4905 00210$:
      00152A F8 0C                 4906 	ldhl	sp,	#12
      00152C CB 2E                 4907 	sra	(hl)
      00152E 2B                    4908 	dec	hl
      00152F CB 1E                 4909 	rr	(hl)
      001531                       4910 00211$:
      001531 1D                    4911 	dec	e
      001532 20 F6                 4912 	jr	NZ, 00210$
      001534 F8 0F                 4913 	ldhl	sp,#15
      001536 2A                    4914 	ld	a, (hl+)
      001537 5F                    4915 	ld	e, a
      001538 56                    4916 	ld	d, (hl)
      001539 F8 0B                 4917 	ldhl	sp,	#11
      00153B 2A                    4918 	ld	a,	(hl+)
      00153C 66                    4919 	ld	h, (hl)
      00153D 6F                    4920 	ld	l, a
      00153E 7B                    4921 	ld	a, e
      00153F 95                    4922 	sub	a, l
      001540 5F                    4923 	ld	e, a
      001541 7A                    4924 	ld	a, d
      001542 9C                    4925 	sbc	a, h
      001543 F8 12                 4926 	ldhl	sp,	#18
      001545 32                    4927 	ld	(hl-), a
      001546 73                    4928 	ld	(hl), e
      001547 F8 11                 4929 	ldhl	sp,	#17
      001549 5D                    4930 	ld	e, l
      00154A 54                    4931 	ld	d, h
      00154B F8 0D                 4932 	ldhl	sp,	#13
      00154D 1A                    4933 	ld	a, (de)
      00154E 13                    4934 	inc	de
      00154F 96                    4935 	sub	a, (hl)
      001550 23                    4936 	inc	hl
      001551 1A                    4937 	ld	a, (de)
      001552 9E                    4938 	sbc	a, (hl)
      001553 1A                    4939 	ld	a, (de)
      001554 57                    4940 	ld	d, a
      001555 5E                    4941 	ld	e, (hl)
      001556 CB 7B                 4942 	bit	7, e
      001558 28 07                 4943 	jr	Z, 00212$
      00155A CB 7A                 4944 	bit	7, d
      00155C 20 08                 4945 	jr	NZ, 00213$
      00155E BF                    4946 	cp	a, a
      00155F 18 05                 4947 	jr	00213$
      001561                       4948 00212$:
      001561 CB 7A                 4949 	bit	7, d
      001563 28 01                 4950 	jr	Z, 00213$
      001565 37                    4951 	scf
      001566                       4952 00213$:
      001566 D2r05r16              4953 	jp	NC, 00108$
                                   4954 ;main.c:547: if (eptr->y > playerDrawY - PLAYERSIZE && eptr->y -(8>>(eptr->spriteCount-1)) < playerDrawY) {
      001569 69                    4955 	ld	l, c
                                   4956 ;	spillPairReg hl
                                   4957 ;	spillPairReg hl
      00156A 60                    4958 	ld	h, b
                                   4959 ;	spillPairReg hl
                                   4960 ;	spillPairReg hl
      00156B 23                    4961 	inc	hl
      00156C 23                    4962 	inc	hl
      00156D 5D                    4963 	ld	e, l
      00156E 54                    4964 	ld	d, h
      00156F 1A                    4965 	ld	a, (de)
      001570 F8 11                 4966 	ldhl	sp,	#17
      001572 22                    4967 	ld	(hl+), a
      001573 13                    4968 	inc	de
      001574 1A                    4969 	ld	a, (de)
      001575 77                    4970 	ld	(hl), a
      001576 FAr4Er00              4971 	ld	a, (#_playerDrawY)
      001579 F8 0D                 4972 	ldhl	sp,	#13
      00157B 22                    4973 	ld	(hl+), a
      00157C AF                    4974 	xor	a, a
      00157D 32                    4975 	ld	(hl-), a
      00157E 2A                    4976 	ld	a, (hl+)
      00157F 5F                    4977 	ld	e, a
      001580 56                    4978 	ld	d, (hl)
      001581 F8 07                 4979 	ldhl	sp,	#7
      001583 2A                    4980 	ld	a,	(hl+)
      001584 66                    4981 	ld	h, (hl)
      001585 6F                    4982 	ld	l, a
      001586 7B                    4983 	ld	a, e
      001587 95                    4984 	sub	a, l
      001588 5F                    4985 	ld	e, a
      001589 7A                    4986 	ld	a, d
      00158A 9C                    4987 	sbc	a, h
      00158B F8 10                 4988 	ldhl	sp,	#16
      00158D 32                    4989 	ld	(hl-), a
      00158E 73                    4990 	ld	(hl), e
      00158F F8 0F                 4991 	ldhl	sp,	#15
      001591 5D                    4992 	ld	e, l
      001592 54                    4993 	ld	d, h
      001593 F8 11                 4994 	ldhl	sp,	#17
      001595 1A                    4995 	ld	a, (de)
      001596 13                    4996 	inc	de
      001597 96                    4997 	sub	a, (hl)
      001598 23                    4998 	inc	hl
      001599 1A                    4999 	ld	a, (de)
      00159A 9E                    5000 	sbc	a, (hl)
      00159B 1A                    5001 	ld	a, (de)
      00159C 57                    5002 	ld	d, a
      00159D 5E                    5003 	ld	e, (hl)
      00159E CB 7B                 5004 	bit	7, e
      0015A0 28 07                 5005 	jr	Z, 00214$
      0015A2 CB 7A                 5006 	bit	7, d
      0015A4 20 08                 5007 	jr	NZ, 00215$
      0015A6 BF                    5008 	cp	a, a
      0015A7 18 05                 5009 	jr	00215$
      0015A9                       5010 00214$:
      0015A9 CB 7A                 5011 	bit	7, d
      0015AB 28 01                 5012 	jr	Z, 00215$
      0015AD 37                    5013 	scf
      0015AE                       5014 00215$:
      0015AE 30 55                 5015 	jr	NC, 00108$
      0015B0 F8 11                 5016 	ldhl	sp,#17
      0015B2 2A                    5017 	ld	a, (hl+)
      0015B3 5F                    5018 	ld	e, a
      0015B4 56                    5019 	ld	d, (hl)
      0015B5 F8 0B                 5020 	ldhl	sp,	#11
      0015B7 2A                    5021 	ld	a,	(hl+)
      0015B8 66                    5022 	ld	h, (hl)
      0015B9 6F                    5023 	ld	l, a
      0015BA 7B                    5024 	ld	a, e
      0015BB 95                    5025 	sub	a, l
      0015BC 5F                    5026 	ld	e, a
      0015BD 7A                    5027 	ld	a, d
      0015BE 9C                    5028 	sbc	a, h
      0015BF F8 10                 5029 	ldhl	sp,	#16
      0015C1 32                    5030 	ld	(hl-), a
      0015C2 73                    5031 	ld	(hl), e
      0015C3 F8 0F                 5032 	ldhl	sp,	#15
      0015C5 5D                    5033 	ld	e, l
      0015C6 54                    5034 	ld	d, h
      0015C7 F8 0D                 5035 	ldhl	sp,	#13
      0015C9 1A                    5036 	ld	a, (de)
      0015CA 13                    5037 	inc	de
      0015CB 96                    5038 	sub	a, (hl)
      0015CC 23                    5039 	inc	hl
      0015CD 1A                    5040 	ld	a, (de)
      0015CE 9E                    5041 	sbc	a, (hl)
      0015CF 1A                    5042 	ld	a, (de)
      0015D0 57                    5043 	ld	d, a
      0015D1 5E                    5044 	ld	e, (hl)
      0015D2 CB 7B                 5045 	bit	7, e
      0015D4 28 07                 5046 	jr	Z, 00216$
      0015D6 CB 7A                 5047 	bit	7, d
      0015D8 20 08                 5048 	jr	NZ, 00217$
      0015DA BF                    5049 	cp	a, a
      0015DB 18 05                 5050 	jr	00217$
      0015DD                       5051 00216$:
      0015DD CB 7A                 5052 	bit	7, d
      0015DF 28 01                 5053 	jr	Z, 00217$
      0015E1 37                    5054 	scf
      0015E2                       5055 00217$:
      0015E2 30 21                 5056 	jr	NC, 00108$
                                   5057 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0015E4 21r2Ar00              5058 	ld	hl, #(_shadow_OAM + 42)
      0015E7 36 7F                 5059 	ld	(hl), #0x7f
                                   5060 ;main.c:549: eptr->alive = 0;
      0015E9 F8 09                 5061 	ldhl	sp,	#9
      0015EB 2A                    5062 	ld	a,	(hl+)
      0015EC 66                    5063 	ld	h, (hl)
      0015ED 6F                    5064 	ld	l, a
      0015EE 36 00                 5065 	ld	(hl), #0x00
                                   5066 ;main.c:550: takeDamage(eptr->damage);
      0015F0 21 0B 00              5067 	ld	hl, #0x000b
      0015F3 09                    5068 	add	hl, bc
      0015F4 5E                    5069 	ld	e, (hl)
      0015F5 16 00                 5070 	ld	d, #0x00
      0015F7 C5                    5071 	push	bc
      0015F8 D5                    5072 	push	de
      0015F9 CDr4Er14              5073 	call	_takeDamage
      0015FC E1                    5074 	pop	hl
      0015FD AF                    5075 	xor	a, a
      0015FE F5                    5076 	push	af
      0015FF 33                    5077 	inc	sp
      001600 CDr85r0E              5078 	call	_initEnemies
      001603 33                    5079 	inc	sp
      001604 C1                    5080 	pop	bc
      001605                       5081 00108$:
                                   5082 ;main.c:561: struct Projectile *pptr = projectiles;
      001605 F8 10                 5083 	ldhl	sp,	#16
      001607 3Er50                 5084 	ld	a, #<(_projectiles)
      001609 22                    5085 	ld	(hl+), a
      00160A 36s00                 5086 	ld	(hl), #>(_projectiles)
                                   5087 ;main.c:563: while (j < PROJECTILECOUNT) {
      00160C 21 02 00              5088 	ld	hl, #0x0002
      00160F 09                    5089 	add	hl, bc
      001610 E5                    5090 	push	hl
      001611 7D                    5091 	ld	a, l
      001612 F8 04                 5092 	ldhl	sp,	#4
      001614 77                    5093 	ld	(hl), a
      001615 E1                    5094 	pop	hl
      001616 7C                    5095 	ld	a, h
      001617 F8 03                 5096 	ldhl	sp,	#3
      001619 77                    5097 	ld	(hl), a
      00161A 21 08 00              5098 	ld	hl, #0x0008
      00161D 09                    5099 	add	hl, bc
      00161E E5                    5100 	push	hl
      00161F 7D                    5101 	ld	a, l
      001620 F8 06                 5102 	ldhl	sp,	#6
      001622 77                    5103 	ld	(hl), a
      001623 E1                    5104 	pop	hl
      001624 7C                    5105 	ld	a, h
      001625 F8 05                 5106 	ldhl	sp,	#5
      001627 77                    5107 	ld	(hl), a
      001628 F8 12                 5108 	ldhl	sp,	#18
      00162A 36 00                 5109 	ld	(hl), #0x00
      00162C                       5110 00118$:
      00162C 21rDDr05              5111 	ld	hl, #_PROJECTILECOUNT
      00162F 5E                    5112 	ld	e, (hl)
      001630 F8 12                 5113 	ldhl	sp,	#18
      001632 7E                    5114 	ld	a, (hl)
      001633 93                    5115 	sub	a, e
      001634 D2rCEr17              5116 	jp	NC, 00123$
                                   5117 ;main.c:564: if (pptr->active) {
      001637 2B                    5118 	dec	hl
      001638 2B                    5119 	dec	hl
      001639 2A                    5120 	ld	a, (hl+)
      00163A 5F                    5121 	ld	e, a
      00163B 56                    5122 	ld	d, (hl)
      00163C 21 08 00              5123 	ld	hl, #0x0008
      00163F 19                    5124 	add	hl, de
      001640 E5                    5125 	push	hl
      001641 7D                    5126 	ld	a, l
      001642 F8 08                 5127 	ldhl	sp,	#8
      001644 77                    5128 	ld	(hl), a
      001645 E1                    5129 	pop	hl
      001646 7C                    5130 	ld	a, h
      001647 F8 07                 5131 	ldhl	sp,	#7
      001649 32                    5132 	ld	(hl-), a
      00164A 2A                    5133 	ld	a, (hl+)
      00164B 5F                    5134 	ld	e, a
      00164C 56                    5135 	ld	d, (hl)
      00164D 1A                    5136 	ld	a, (de)
      00164E B7                    5137 	or	a, a
      00164F CArB5r17              5138 	jp	Z, 00117$
                                   5139 ;main.c:565: if (eptr->x > pptr->x - 8 && eptr->x - (8>>(eptr->spriteCount-1)) < pptr->x) {
      001652 59                    5140 	ld	e, c
      001653 50                    5141 	ld	d, b
      001654 1A                    5142 	ld	a, (de)
      001655 F8 0A                 5143 	ldhl	sp,	#10
      001657 22                    5144 	ld	(hl+), a
      001658 13                    5145 	inc	de
      001659 1A                    5146 	ld	a, (de)
      00165A 77                    5147 	ld	(hl), a
      00165B F8 10                 5148 	ldhl	sp,#16
      00165D 2A                    5149 	ld	a, (hl+)
      00165E 5F                    5150 	ld	e, a
      00165F 56                    5151 	ld	d, (hl)
      001660 1A                    5152 	ld	a, (de)
      001661 F8 0C                 5153 	ldhl	sp,	#12
      001663 22                    5154 	ld	(hl+), a
      001664 13                    5155 	inc	de
      001665 1A                    5156 	ld	a, (de)
      001666 32                    5157 	ld	(hl-), a
      001667 7E                    5158 	ld	a, (hl)
      001668 F8 08                 5159 	ldhl	sp,	#8
      00166A 77                    5160 	ld	(hl), a
      00166B F8 0D                 5161 	ldhl	sp,	#13
      00166D 7E                    5162 	ld	a, (hl)
      00166E F8 09                 5163 	ldhl	sp,	#9
      001670 32                    5164 	ld	(hl-), a
      001671 2A                    5165 	ld	a, (hl+)
      001672 5F                    5166 	ld	e, a
      001673 56                    5167 	ld	d, (hl)
      001674 21 08 00              5168 	ld	hl, #0x0008
      001677 7B                    5169 	ld	a, e
      001678 95                    5170 	sub	a, l
      001679 5F                    5171 	ld	e, a
      00167A 7A                    5172 	ld	a, d
      00167B 9C                    5173 	sbc	a, h
      00167C F8 0F                 5174 	ldhl	sp,	#15
      00167E 32                    5175 	ld	(hl-), a
      00167F 73                    5176 	ld	(hl), e
      001680 F8 0E                 5177 	ldhl	sp,	#14
      001682 5D                    5178 	ld	e, l
      001683 54                    5179 	ld	d, h
      001684 F8 0A                 5180 	ldhl	sp,	#10
      001686 1A                    5181 	ld	a, (de)
      001687 13                    5182 	inc	de
      001688 96                    5183 	sub	a, (hl)
      001689 23                    5184 	inc	hl
      00168A 1A                    5185 	ld	a, (de)
      00168B 9E                    5186 	sbc	a, (hl)
      00168C 1A                    5187 	ld	a, (de)
      00168D 57                    5188 	ld	d, a
      00168E CB 7E                 5189 	bit	7, (hl)
      001690 28 07                 5190 	jr	Z, 00218$
      001692 CB 7A                 5191 	bit	7, d
      001694 20 08                 5192 	jr	NZ, 00219$
      001696 BF                    5193 	cp	a, a
      001697 18 05                 5194 	jr	00219$
      001699                       5195 00218$:
      001699 CB 7A                 5196 	bit	7, d
      00169B 28 01                 5197 	jr	Z, 00219$
      00169D 37                    5198 	scf
      00169E                       5199 00219$:
      00169E D2rB5r17              5200 	jp	NC, 00117$
      0016A1 F8 04                 5201 	ldhl	sp,#4
      0016A3 2A                    5202 	ld	a, (hl+)
      0016A4 5F                    5203 	ld	e, a
      0016A5 56                    5204 	ld	d, (hl)
      0016A6 1A                    5205 	ld	a, (de)
      0016A7 5F                    5206 	ld	e, a
      0016A8 1D                    5207 	dec	e
      0016A9 F8 08                 5208 	ldhl	sp,	#8
      0016AB 3E 08                 5209 	ld	a, #0x08
      0016AD 22                    5210 	ld	(hl+), a
      0016AE AF                    5211 	xor	a, a
      0016AF 77                    5212 	ld	(hl), a
      0016B0 1C                    5213 	inc	e
      0016B1 18 07                 5214 	jr	00221$
      0016B3                       5215 00220$:
      0016B3 F8 09                 5216 	ldhl	sp,	#9
      0016B5 CB 2E                 5217 	sra	(hl)
      0016B7 2B                    5218 	dec	hl
      0016B8 CB 1E                 5219 	rr	(hl)
      0016BA                       5220 00221$:
      0016BA 1D                    5221 	dec	e
      0016BB 20 F6                 5222 	jr	NZ, 00220$
      0016BD F8 0A                 5223 	ldhl	sp,#10
      0016BF 2A                    5224 	ld	a, (hl+)
      0016C0 5F                    5225 	ld	e, a
      0016C1 56                    5226 	ld	d, (hl)
      0016C2 F8 08                 5227 	ldhl	sp,	#8
      0016C4 2A                    5228 	ld	a,	(hl+)
      0016C5 66                    5229 	ld	h, (hl)
      0016C6 6F                    5230 	ld	l, a
      0016C7 7B                    5231 	ld	a, e
      0016C8 95                    5232 	sub	a, l
      0016C9 5F                    5233 	ld	e, a
      0016CA 7A                    5234 	ld	a, d
      0016CB 9C                    5235 	sbc	a, h
      0016CC F8 0F                 5236 	ldhl	sp,	#15
      0016CE 32                    5237 	ld	(hl-), a
      0016CF 73                    5238 	ld	(hl), e
      0016D0 F8 0E                 5239 	ldhl	sp,	#14
      0016D2 5D                    5240 	ld	e, l
      0016D3 54                    5241 	ld	d, h
      0016D4 F8 0C                 5242 	ldhl	sp,	#12
      0016D6 1A                    5243 	ld	a, (de)
      0016D7 13                    5244 	inc	de
      0016D8 96                    5245 	sub	a, (hl)
      0016D9 23                    5246 	inc	hl
      0016DA 1A                    5247 	ld	a, (de)
      0016DB 9E                    5248 	sbc	a, (hl)
      0016DC 1A                    5249 	ld	a, (de)
      0016DD 57                    5250 	ld	d, a
      0016DE CB 7E                 5251 	bit	7, (hl)
      0016E0 28 07                 5252 	jr	Z, 00222$
      0016E2 CB 7A                 5253 	bit	7, d
      0016E4 20 08                 5254 	jr	NZ, 00223$
      0016E6 BF                    5255 	cp	a, a
      0016E7 18 05                 5256 	jr	00223$
      0016E9                       5257 00222$:
      0016E9 CB 7A                 5258 	bit	7, d
      0016EB 28 01                 5259 	jr	Z, 00223$
      0016ED 37                    5260 	scf
      0016EE                       5261 00223$:
      0016EE D2rB5r17              5262 	jp	NC, 00117$
                                   5263 ;main.c:566: if (eptr->y > pptr->y - 8 && eptr->y -(8>>(eptr->spriteCount-1)) < pptr->y ) {
      0016F1 F8 02                 5264 	ldhl	sp,#2
      0016F3 2A                    5265 	ld	a, (hl+)
      0016F4 5F                    5266 	ld	e, a
      0016F5 56                    5267 	ld	d, (hl)
      0016F6 1A                    5268 	ld	a, (de)
      0016F7 F8 0E                 5269 	ldhl	sp,	#14
      0016F9 22                    5270 	ld	(hl+), a
      0016FA 13                    5271 	inc	de
      0016FB 1A                    5272 	ld	a, (de)
      0016FC 22                    5273 	ld	(hl+), a
      0016FD 2A                    5274 	ld	a, (hl+)
      0016FE 66                    5275 	ld	h, (hl)
                                   5276 ;	spillPairReg hl
                                   5277 ;	spillPairReg hl
      0016FF 6F                    5278 	ld	l, a
                                   5279 ;	spillPairReg hl
                                   5280 ;	spillPairReg hl
      001700 23                    5281 	inc	hl
      001701 23                    5282 	inc	hl
      001702 5D                    5283 	ld	e, l
      001703 54                    5284 	ld	d, h
      001704 1A                    5285 	ld	a, (de)
      001705 F8 0A                 5286 	ldhl	sp,	#10
      001707 22                    5287 	ld	(hl+), a
      001708 13                    5288 	inc	de
      001709 1A                    5289 	ld	a, (de)
      00170A 77                    5290 	ld	(hl), a
      00170B F8 0A                 5291 	ldhl	sp,	#10
      00170D 7E                    5292 	ld	a, (hl)
      00170E F8 00                 5293 	ldhl	sp,	#0
      001710 77                    5294 	ld	(hl), a
      001711 F8 0B                 5295 	ldhl	sp,	#11
      001713 7E                    5296 	ld	a, (hl)
      001714 F8 01                 5297 	ldhl	sp,	#1
      001716 77                    5298 	ld	(hl), a
      001717 D1                    5299 	pop	de
      001718 D5                    5300 	push	de
      001719 21 08 00              5301 	ld	hl, #0x0008
      00171C 7B                    5302 	ld	a, e
      00171D 95                    5303 	sub	a, l
      00171E 5F                    5304 	ld	e, a
      00171F 7A                    5305 	ld	a, d
      001720 9C                    5306 	sbc	a, h
      001721 F8 0D                 5307 	ldhl	sp,	#13
      001723 32                    5308 	ld	(hl-), a
      001724 73                    5309 	ld	(hl), e
      001725 F8 0C                 5310 	ldhl	sp,	#12
      001727 5D                    5311 	ld	e, l
      001728 54                    5312 	ld	d, h
      001729 F8 0E                 5313 	ldhl	sp,	#14
      00172B 1A                    5314 	ld	a, (de)
      00172C 13                    5315 	inc	de
      00172D 96                    5316 	sub	a, (hl)
      00172E 23                    5317 	inc	hl
      00172F 1A                    5318 	ld	a, (de)
      001730 9E                    5319 	sbc	a, (hl)
      001731 1A                    5320 	ld	a, (de)
      001732 57                    5321 	ld	d, a
      001733 CB 7E                 5322 	bit	7, (hl)
      001735 28 07                 5323 	jr	Z, 00224$
      001737 CB 7A                 5324 	bit	7, d
      001739 20 08                 5325 	jr	NZ, 00225$
      00173B BF                    5326 	cp	a, a
      00173C 18 05                 5327 	jr	00225$
      00173E                       5328 00224$:
      00173E CB 7A                 5329 	bit	7, d
      001740 28 01                 5330 	jr	Z, 00225$
      001742 37                    5331 	scf
      001743                       5332 00225$:
      001743 30 70                 5333 	jr	NC, 00117$
      001745 F8 0E                 5334 	ldhl	sp,#14
      001747 2A                    5335 	ld	a, (hl+)
      001748 5F                    5336 	ld	e, a
      001749 56                    5337 	ld	d, (hl)
      00174A F8 08                 5338 	ldhl	sp,	#8
      00174C 2A                    5339 	ld	a,	(hl+)
      00174D 66                    5340 	ld	h, (hl)
      00174E 6F                    5341 	ld	l, a
      00174F 7B                    5342 	ld	a, e
      001750 95                    5343 	sub	a, l
      001751 5F                    5344 	ld	e, a
      001752 7A                    5345 	ld	a, d
      001753 9C                    5346 	sbc	a, h
      001754 F8 0D                 5347 	ldhl	sp,	#13
      001756 32                    5348 	ld	(hl-), a
      001757 73                    5349 	ld	(hl), e
      001758 2A                    5350 	ld	a, (hl+)
      001759 23                    5351 	inc	hl
      00175A 32                    5352 	ld	(hl-), a
      00175B 2A                    5353 	ld	a, (hl+)
      00175C 23                    5354 	inc	hl
      00175D 77                    5355 	ld	(hl), a
      00175E F8 0E                 5356 	ldhl	sp,	#14
      001760 5D                    5357 	ld	e, l
      001761 54                    5358 	ld	d, h
      001762 F8 0A                 5359 	ldhl	sp,	#10
      001764 1A                    5360 	ld	a, (de)
      001765 13                    5361 	inc	de
      001766 96                    5362 	sub	a, (hl)
      001767 23                    5363 	inc	hl
      001768 1A                    5364 	ld	a, (de)
      001769 9E                    5365 	sbc	a, (hl)
      00176A 1A                    5366 	ld	a, (de)
      00176B 57                    5367 	ld	d, a
      00176C CB 7E                 5368 	bit	7, (hl)
      00176E 28 07                 5369 	jr	Z, 00226$
      001770 CB 7A                 5370 	bit	7, d
      001772 20 08                 5371 	jr	NZ, 00227$
      001774 BF                    5372 	cp	a, a
      001775 18 05                 5373 	jr	00227$
      001777                       5374 00226$:
      001777 CB 7A                 5375 	bit	7, d
      001779 28 01                 5376 	jr	Z, 00227$
      00177B 37                    5377 	scf
      00177C                       5378 00227$:
      00177C 30 37                 5379 	jr	NC, 00117$
                                   5380 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00177E 21r2Ar00              5381 	ld	hl, #(_shadow_OAM + 42)
      001781 36 7F                 5382 	ld	(hl), #0x7f
                                   5383 ;main.c:568: eptr->alive = 0;
      001783 21 09 00              5384 	ld	hl, #0x0009
      001786 09                    5385 	add	hl, bc
      001787 36 00                 5386 	ld	(hl), #0x00
                                   5387 ;main.c:569: initEnemies(0);
      001789 C5                    5388 	push	bc
      00178A AF                    5389 	xor	a, a
      00178B F5                    5390 	push	af
      00178C 33                    5391 	inc	sp
      00178D CDr85r0E              5392 	call	_initEnemies
      001790 33                    5393 	inc	sp
      001791 C1                    5394 	pop	bc
                                   5395 ;main.c:570: set_sprite_tile(20+j, 0x7f);
      001792 F8 12                 5396 	ldhl	sp,	#18
      001794 7E                    5397 	ld	a, (hl)
      001795 C6 14                 5398 	add	a, #0x14
      001797 5F                    5399 	ld	e, a
                                   5400 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001798 26 00                 5401 	ld	h, #0x00
                                   5402 ;	spillPairReg hl
                                   5403 ;	spillPairReg hl
      00179A 6B                    5404 	ld	l, e
      00179B 29                    5405 	add	hl, hl
      00179C 29                    5406 	add	hl, hl
      00179D 11r00r00              5407 	ld	de, #_shadow_OAM
      0017A0 19                    5408 	add	hl, de
      0017A1 23                    5409 	inc	hl
      0017A2 23                    5410 	inc	hl
      0017A3 36 7F                 5411 	ld	(hl), #0x7f
                                   5412 ;main.c:571: playSound(0);
      0017A5 C5                    5413 	push	bc
      0017A6 AF                    5414 	xor	a, a
      0017A7 F5                    5415 	push	af
      0017A8 33                    5416 	inc	sp
      0017A9 CDr82r08              5417 	call	_playSound
      0017AC 33                    5418 	inc	sp
      0017AD C1                    5419 	pop	bc
                                   5420 ;main.c:572: pptr->active = 0;
      0017AE F8 06                 5421 	ldhl	sp,	#6
      0017B0 2A                    5422 	ld	a,	(hl+)
      0017B1 66                    5423 	ld	h, (hl)
      0017B2 6F                    5424 	ld	l, a
      0017B3 36 00                 5425 	ld	(hl), #0x00
      0017B5                       5426 00117$:
                                   5427 ;main.c:576: j++;
      0017B5 F8 12                 5428 	ldhl	sp,	#18
      0017B7 34                    5429 	inc	(hl)
                                   5430 ;main.c:577: pptr++;
      0017B8 2B                    5431 	dec	hl
      0017B9 2B                    5432 	dec	hl
      0017BA 2A                    5433 	ld	a, (hl+)
      0017BB 5F                    5434 	ld	e, a
      0017BC 56                    5435 	ld	d, (hl)
      0017BD 21 0B 00              5436 	ld	hl, #0x000b
      0017C0 19                    5437 	add	hl, de
      0017C1 E5                    5438 	push	hl
      0017C2 7D                    5439 	ld	a, l
      0017C3 F8 12                 5440 	ldhl	sp,	#18
      0017C5 77                    5441 	ld	(hl), a
      0017C6 E1                    5442 	pop	hl
      0017C7 7C                    5443 	ld	a, h
      0017C8 F8 11                 5444 	ldhl	sp,	#17
      0017CA 77                    5445 	ld	(hl), a
      0017CB C3r2Cr16              5446 	jp	00118$
                                   5447 ;main.c:584: break;
      0017CE                       5448 00123$:
                                   5449 ;main.c:587: if (enemyCollisionCount == 0) {
      0017CE FAr57r00              5450 	ld	a, (#_enemyCollisionCount)
      0017D1 B7                    5451 	or	a, a
      0017D2 20 09                 5452 	jr	NZ, 00125$
                                   5453 ;main.c:588: enemyCollisionCount = ENEMYCOUNT - 1;
      0017D4 FArCCr05              5454 	ld	a, (#_ENEMYCOUNT)
      0017D7 3D                    5455 	dec	a
      0017D8 EAr57r00              5456 	ld	(#_enemyCollisionCount),a
      0017DB 18 04                 5457 	jr	00130$
      0017DD                       5458 00125$:
                                   5459 ;main.c:591: enemyCollisionCount--;
      0017DD 21r57r00              5460 	ld	hl, #_enemyCollisionCount
      0017E0 35                    5461 	dec	(hl)
      0017E1                       5462 00130$:
                                   5463 ;main.c:640: }
      0017E1 E8 13                 5464 	add	sp, #19
      0017E3 C9                    5465 	ret
                                   5466 ;main.c:643: void setGunIcon() {
                                   5467 ;	---------------------------------
                                   5468 ; Function setGunIcon
                                   5469 ; ---------------------------------
      0017E4                       5470 _setGunIcon::
                                   5471 ;main.c:646: set_win_tiles(15, 0,1,1,gunMap+currentGun);
      0017E4 01r5Ar00              5472 	ld	bc, #_gunMap+0
      0017E7 79                    5473 	ld	a, c
      0017E8 21r58r00              5474 	ld	hl, #_currentGun
      0017EB 86                    5475 	add	a, (hl)
      0017EC 4F                    5476 	ld	c, a
      0017ED 30 01                 5477 	jr	NC, 00103$
      0017EF 04                    5478 	inc	b
      0017F0                       5479 00103$:
      0017F0 C5                    5480 	push	bc
      0017F1 21 01 01              5481 	ld	hl, #0x101
      0017F4 E5                    5482 	push	hl
      0017F5 21 0F 00              5483 	ld	hl, #0x0f
      0017F8 E5                    5484 	push	hl
      0017F9 CDr00r00              5485 	call	_set_win_tiles
      0017FC E8 06                 5486 	add	sp, #6
                                   5487 ;main.c:648: }
      0017FE C9                    5488 	ret
                                   5489 ;main.c:658: void fire() {
                                   5490 ;	---------------------------------
                                   5491 ; Function fire
                                   5492 ; ---------------------------------
      0017FF                       5493 _fire::
      0017FF E8 FA                 5494 	add	sp, #-6
                                   5495 ;main.c:660: oldestProjectile += 1;
      001801 21r43r00              5496 	ld	hl, #_oldestProjectile
      001804 34                    5497 	inc	(hl)
      001805 7E                    5498 	ld	a, (hl)
                                   5499 ;main.c:661: if (oldestProjectile >= PROJECTILECOUNT) {
      001806 21rDDr05              5500 	ld	hl, #_PROJECTILECOUNT
      001809 4E                    5501 	ld	c, (hl)
      00180A 21r43r00              5502 	ld	hl, #_oldestProjectile
      00180D 7E                    5503 	ld	a, (hl)
      00180E 91                    5504 	sub	a, c
      00180F 38 02                 5505 	jr	C, 00102$
                                   5506 ;main.c:662: oldestProjectile = 0;
      001811 36 00                 5507 	ld	(hl), #0x00
      001813                       5508 00102$:
                                   5509 ;main.c:665: if (currentGun == 0) {
      001813 FAr58r00              5510 	ld	a, (#_currentGun)
      001816 B7                    5511 	or	a, a
      001817 20 1F                 5512 	jr	NZ, 00104$
                                   5513 ;main.c:666: projectiles[oldestProjectile] = singleGun;
      001819 21r43r00              5514 	ld	hl, #_oldestProjectile
      00181C 4E                    5515 	ld	c, (hl)
      00181D 06 00                 5516 	ld	b, #0x00
      00181F 69                    5517 	ld	l, c
      001820 60                    5518 	ld	h, b
      001821 29                    5519 	add	hl, hl
      001822 29                    5520 	add	hl, hl
      001823 09                    5521 	add	hl, bc
      001824 29                    5522 	add	hl, hl
      001825 09                    5523 	add	hl, bc
      001826 01r50r00              5524 	ld	bc,#_projectiles
      001829 09                    5525 	add	hl,bc
      00182A 11 0B 00              5526 	ld	de, #0x000b
      00182D D5                    5527 	push	de
      00182E 11r22r00              5528 	ld	de, #_singleGun
      001831 D5                    5529 	push	de
      001832 E5                    5530 	push	hl
      001833 CDr00r00              5531 	call	___memcpy
      001836 E8 06                 5532 	add	sp, #6
      001838                       5533 00104$:
                                   5534 ;main.c:668: if (currentGun == 1) {
      001838 FAr58r00              5535 	ld	a, (#_currentGun)
      00183B 3D                    5536 	dec	a
      00183C 20 1F                 5537 	jr	NZ, 00106$
                                   5538 ;main.c:669: projectiles[oldestProjectile] = doubleGun;
      00183E 21r43r00              5539 	ld	hl, #_oldestProjectile
      001841 4E                    5540 	ld	c, (hl)
      001842 06 00                 5541 	ld	b, #0x00
      001844 69                    5542 	ld	l, c
      001845 60                    5543 	ld	h, b
      001846 29                    5544 	add	hl, hl
      001847 29                    5545 	add	hl, hl
      001848 09                    5546 	add	hl, bc
      001849 29                    5547 	add	hl, hl
      00184A 09                    5548 	add	hl, bc
      00184B 01r50r00              5549 	ld	bc,#_projectiles
      00184E 09                    5550 	add	hl,bc
      00184F 11 0B 00              5551 	ld	de, #0x000b
      001852 D5                    5552 	push	de
      001853 11r2Dr00              5553 	ld	de, #_doubleGun
      001856 D5                    5554 	push	de
      001857 E5                    5555 	push	hl
      001858 CDr00r00              5556 	call	___memcpy
      00185B E8 06                 5557 	add	sp, #6
      00185D                       5558 00106$:
                                   5559 ;main.c:671: if (currentGun == 2) {
      00185D FAr58r00              5560 	ld	a, (#_currentGun)
      001860 D6 02                 5561 	sub	a, #0x02
      001862 20 1F                 5562 	jr	NZ, 00108$
                                   5563 ;main.c:672: projectiles[oldestProjectile] = missile;
      001864 21r43r00              5564 	ld	hl, #_oldestProjectile
      001867 4E                    5565 	ld	c, (hl)
      001868 06 00                 5566 	ld	b, #0x00
      00186A 69                    5567 	ld	l, c
      00186B 60                    5568 	ld	h, b
      00186C 29                    5569 	add	hl, hl
      00186D 29                    5570 	add	hl, hl
      00186E 09                    5571 	add	hl, bc
      00186F 29                    5572 	add	hl, hl
      001870 09                    5573 	add	hl, bc
      001871 01r50r00              5574 	ld	bc,#_projectiles
      001874 09                    5575 	add	hl,bc
      001875 11 0B 00              5576 	ld	de, #0x000b
      001878 D5                    5577 	push	de
      001879 11r38r00              5578 	ld	de, #_missile
      00187C D5                    5579 	push	de
      00187D E5                    5580 	push	hl
      00187E CDr00r00              5581 	call	___memcpy
      001881 E8 06                 5582 	add	sp, #6
      001883                       5583 00108$:
                                   5584 ;main.c:674: projectiles[oldestProjectile].x = playerDrawX;
      001883 21r43r00              5585 	ld	hl, #_oldestProjectile
      001886 4E                    5586 	ld	c, (hl)
      001887 06 00                 5587 	ld	b, #0x00
      001889 69                    5588 	ld	l, c
      00188A 60                    5589 	ld	h, b
      00188B 29                    5590 	add	hl, hl
      00188C 29                    5591 	add	hl, hl
      00188D 09                    5592 	add	hl, bc
      00188E 29                    5593 	add	hl, hl
      00188F 09                    5594 	add	hl, bc
      001890 01r50r00              5595 	ld	bc,#_projectiles
      001893 09                    5596 	add	hl,bc
      001894 E5                    5597 	push	hl
      001895 FAr4Dr00              5598 	ld	a, (#_playerDrawX)
      001898 E1                    5599 	pop	hl
      001899 0E 00                 5600 	ld	c, #0x00
      00189B 22                    5601 	ld	(hl+), a
      00189C 71                    5602 	ld	(hl), c
                                   5603 ;main.c:675: projectiles[oldestProjectile].y = playerDrawY;
      00189D 21r43r00              5604 	ld	hl, #_oldestProjectile
      0018A0 4E                    5605 	ld	c, (hl)
      0018A1 06 00                 5606 	ld	b, #0x00
      0018A3 69                    5607 	ld	l, c
      0018A4 60                    5608 	ld	h, b
      0018A5 29                    5609 	add	hl, hl
      0018A6 29                    5610 	add	hl, hl
      0018A7 09                    5611 	add	hl, bc
      0018A8 29                    5612 	add	hl, hl
      0018A9 09                    5613 	add	hl, bc
      0018AA 01r50r00              5614 	ld	bc,#_projectiles
      0018AD 09                    5615 	add	hl,bc
      0018AE 23                    5616 	inc	hl
      0018AF 23                    5617 	inc	hl
      0018B0 E5                    5618 	push	hl
      0018B1 FAr4Er00              5619 	ld	a, (#_playerDrawY)
      0018B4 E1                    5620 	pop	hl
      0018B5 0E 00                 5621 	ld	c, #0x00
      0018B7 22                    5622 	ld	(hl+), a
      0018B8 71                    5623 	ld	(hl), c
                                   5624 ;main.c:676: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      0018B9 21r43r00              5625 	ld	hl, #_oldestProjectile
      0018BC 4E                    5626 	ld	c, (hl)
      0018BD 06 00                 5627 	ld	b, #0x00
      0018BF 69                    5628 	ld	l, c
      0018C0 60                    5629 	ld	h, b
      0018C1 29                    5630 	add	hl, hl
      0018C2 29                    5631 	add	hl, hl
      0018C3 09                    5632 	add	hl, bc
      0018C4 29                    5633 	add	hl, hl
      0018C5 09                    5634 	add	hl, bc
      0018C6 01r50r00              5635 	ld	bc,#_projectiles
      0018C9 09                    5636 	add	hl,bc
      0018CA 5D                    5637 	ld	e, l
      0018CB 54                    5638 	ld	d, h
      0018CC 21 04 00              5639 	ld	hl, #0x0004
      0018CF 19                    5640 	add	hl, de
      0018D0 4D                    5641 	ld	c, l
      0018D1 44                    5642 	ld	b, h
      0018D2 21 06 00              5643 	ld	hl, #0x0006
      0018D5 19                    5644 	add	hl, de
      0018D6 7E                    5645 	ld	a, (hl)
      0018D7 C5                    5646 	push	bc
      0018D8 F5                    5647 	push	af
      0018D9 33                    5648 	inc	sp
      0018DA FAr45r00              5649 	ld	a, (#_xDir)
      0018DD F5                    5650 	push	af
      0018DE 33                    5651 	inc	sp
      0018DF CDr00r00              5652 	call	__muluschar
      0018E2 E1                    5653 	pop	hl
      0018E3 7B                    5654 	ld	a, e
      0018E4 C1                    5655 	pop	bc
      0018E5 02                    5656 	ld	(bc), a
                                   5657 ;main.c:677: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      0018E6 21r43r00              5658 	ld	hl, #_oldestProjectile
      0018E9 4E                    5659 	ld	c, (hl)
      0018EA 06 00                 5660 	ld	b, #0x00
      0018EC 69                    5661 	ld	l, c
      0018ED 60                    5662 	ld	h, b
      0018EE 29                    5663 	add	hl, hl
      0018EF 29                    5664 	add	hl, hl
      0018F0 09                    5665 	add	hl, bc
      0018F1 29                    5666 	add	hl, hl
      0018F2 09                    5667 	add	hl, bc
      0018F3 01r50r00              5668 	ld	bc,#_projectiles
      0018F6 09                    5669 	add	hl,bc
      0018F7 5D                    5670 	ld	e, l
      0018F8 54                    5671 	ld	d, h
      0018F9 21 05 00              5672 	ld	hl, #0x0005
      0018FC 19                    5673 	add	hl, de
      0018FD 4D                    5674 	ld	c, l
      0018FE 44                    5675 	ld	b, h
      0018FF 21 06 00              5676 	ld	hl, #0x0006
      001902 19                    5677 	add	hl, de
      001903 7E                    5678 	ld	a, (hl)
      001904 C5                    5679 	push	bc
      001905 F5                    5680 	push	af
      001906 33                    5681 	inc	sp
      001907 FAr46r00              5682 	ld	a, (#_yDir)
      00190A F5                    5683 	push	af
      00190B 33                    5684 	inc	sp
      00190C CDr00r00              5685 	call	__muluschar
      00190F E1                    5686 	pop	hl
      001910 7B                    5687 	ld	a, e
      001911 C1                    5688 	pop	bc
      001912 02                    5689 	ld	(bc), a
                                   5690 ;main.c:660: oldestProjectile += 1;
      001913 FAr43r00              5691 	ld	a, (#_oldestProjectile)
      001916 F8 05                 5692 	ldhl	sp,	#5
      001918 77                    5693 	ld	(hl), a
                                   5694 ;main.c:666: projectiles[oldestProjectile] = singleGun;
      001919 21r43r00              5695 	ld	hl, #_oldestProjectile
      00191C 4E                    5696 	ld	c, (hl)
      00191D 06 00                 5697 	ld	b, #0x00
      00191F 69                    5698 	ld	l, c
      001920 60                    5699 	ld	h, b
      001921 29                    5700 	add	hl, hl
      001922 29                    5701 	add	hl, hl
      001923 09                    5702 	add	hl, bc
      001924 29                    5703 	add	hl, hl
      001925 09                    5704 	add	hl, bc
                                   5705 ;main.c:680: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      001926 01r50r00              5706 	ld	bc,#_projectiles
      001929 09                    5707 	add	hl,bc
      00192A 4D                    5708 	ld	c, l
      00192B 44                    5709 	ld	b, h
      00192C F8 05                 5710 	ldhl	sp,	#5
      00192E 7E                    5711 	ld	a, (hl)
      00192F C6 14                 5712 	add	a, #0x14
      001931 77                    5713 	ld	(hl), a
      001932 21 0A 00              5714 	ld	hl, #0x000a
      001935 09                    5715 	add	hl, bc
      001936 7E                    5716 	ld	a, (hl)
      001937 F8 04                 5717 	ldhl	sp,	#4
      001939 77                    5718 	ld	(hl), a
                                   5719 ;main.c:679: if (yDir != 0 && xDir == 0) {
      00193A FAr46r00              5720 	ld	a, (#_yDir)
      00193D B7                    5721 	or	a, a
      00193E CAr04r1A              5722 	jp	Z, 00135$
      001941 FAr45r00              5723 	ld	a, (#_xDir)
      001944 B7                    5724 	or	a, a
      001945 C2r04r1A              5725 	jp	NZ, 00135$
                                   5726 ;main.c:680: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
                                   5727 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001948 F8 05                 5728 	ldhl	sp,	#5
      00194A 7E                    5729 	ld	a, (hl)
      00194B F8 02                 5730 	ldhl	sp,	#2
      00194D 22                    5731 	ld	(hl+), a
      00194E 36 00                 5732 	ld	(hl), #0x00
      001950 3E 02                 5733 	ld	a, #0x02
      001952                       5734 00246$:
      001952 F8 02                 5735 	ldhl	sp,	#2
      001954 CB 26                 5736 	sla	(hl)
      001956 23                    5737 	inc	hl
      001957 CB 16                 5738 	rl	(hl)
      001959 3D                    5739 	dec	a
      00195A 20 F6                 5740 	jr	NZ, 00246$
      00195C 2B                    5741 	dec	hl
      00195D 2A                    5742 	ld	a, (hl+)
      00195E 5F                    5743 	ld	e, a
      00195F 56                    5744 	ld	d, (hl)
      001960 21r00r00              5745 	ld	hl, #_shadow_OAM
      001963 19                    5746 	add	hl, de
      001964 33                    5747 	inc	sp
      001965 33                    5748 	inc	sp
      001966 5D                    5749 	ld	e, l
      001967 54                    5750 	ld	d, h
      001968 D5                    5751 	push	de
      001969 21 02 00              5752 	ld	hl, #0x0002
      00196C 19                    5753 	add	hl, de
      00196D E5                    5754 	push	hl
      00196E 7D                    5755 	ld	a, l
      00196F F8 04                 5756 	ldhl	sp,	#4
      001971 77                    5757 	ld	(hl), a
      001972 E1                    5758 	pop	hl
      001973 7C                    5759 	ld	a, h
      001974 F8 03                 5760 	ldhl	sp,	#3
      001976 32                    5761 	ld	(hl-), a
      001977 2A                    5762 	ld	a, (hl+)
      001978 5F                    5763 	ld	e, a
      001979 2A                    5764 	ld	a, (hl+)
      00197A 57                    5765 	ld	d, a
      00197B 7E                    5766 	ld	a, (hl)
      00197C 12                    5767 	ld	(de), a
                                   5768 ;main.c:660: oldestProjectile += 1;
      00197D FAr43r00              5769 	ld	a, (#_oldestProjectile)
                                   5770 ;main.c:680: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      001980 C6 14                 5771 	add	a, #0x14
      001982 F8 05                 5772 	ldhl	sp,	#5
      001984 77                    5773 	ld	(hl), a
                                   5774 ;main.c:681: if (yDir == 1) {
      001985 FAr46r00              5775 	ld	a, (#_yDir)
      001988 3D                    5776 	dec	a
      001989 20 3D                 5777 	jr	NZ, 00110$
                                   5778 ;main.c:682: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
                                   5779 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00198B F8 05                 5780 	ldhl	sp,	#5
      00198D 3A                    5781 	ld	a, (hl-)
      00198E 22                    5782 	ld	(hl+), a
      00198F 36 00                 5783 	ld	(hl), #0x00
      001991 3E 02                 5784 	ld	a, #0x02
      001993                       5785 00249$:
      001993 F8 04                 5786 	ldhl	sp,	#4
      001995 CB 26                 5787 	sla	(hl)
      001997 23                    5788 	inc	hl
      001998 CB 16                 5789 	rl	(hl)
      00199A 3D                    5790 	dec	a
      00199B 20 F6                 5791 	jr	NZ, 00249$
      00199D 2B                    5792 	dec	hl
      00199E 2A                    5793 	ld	a, (hl+)
      00199F 5F                    5794 	ld	e, a
      0019A0 56                    5795 	ld	d, (hl)
      0019A1 21r00r00              5796 	ld	hl, #_shadow_OAM
      0019A4 19                    5797 	add	hl, de
      0019A5 E5                    5798 	push	hl
      0019A6 7D                    5799 	ld	a, l
      0019A7 F8 04                 5800 	ldhl	sp,	#4
      0019A9 77                    5801 	ld	(hl), a
      0019AA E1                    5802 	pop	hl
      0019AB 7C                    5803 	ld	a, h
      0019AC F8 03                 5804 	ldhl	sp,	#3
      0019AE 32                    5805 	ld	(hl-), a
      0019AF 2A                    5806 	ld	a, (hl+)
      0019B0 5F                    5807 	ld	e, a
      0019B1 56                    5808 	ld	d, (hl)
      0019B2 21 03 00              5809 	ld	hl, #0x0003
      0019B5 19                    5810 	add	hl, de
      0019B6 E5                    5811 	push	hl
      0019B7 7D                    5812 	ld	a, l
      0019B8 F8 06                 5813 	ldhl	sp,	#6
      0019BA 77                    5814 	ld	(hl), a
      0019BB E1                    5815 	pop	hl
      0019BC 7C                    5816 	ld	a, h
      0019BD F8 05                 5817 	ldhl	sp,	#5
      0019BF 32                    5818 	ld	(hl-), a
      0019C0 2A                    5819 	ld	a,	(hl+)
      0019C1 66                    5820 	ld	h, (hl)
      0019C2 6F                    5821 	ld	l, a
      0019C3 36 40                 5822 	ld	(hl), #0x40
                                   5823 ;main.c:682: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
      0019C5 C3r11r1C              5824 	jp	00136$
      0019C8                       5825 00110$:
                                   5826 ;main.c:687: set_sprite_prop(20+oldestProjectile, 0); 
                                   5827 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0019C8 F8 05                 5828 	ldhl	sp,	#5
      0019CA 3A                    5829 	ld	a, (hl-)
      0019CB 22                    5830 	ld	(hl+), a
      0019CC 36 00                 5831 	ld	(hl), #0x00
      0019CE 3E 02                 5832 	ld	a, #0x02
      0019D0                       5833 00250$:
      0019D0 F8 04                 5834 	ldhl	sp,	#4
      0019D2 CB 26                 5835 	sla	(hl)
      0019D4 23                    5836 	inc	hl
      0019D5 CB 16                 5837 	rl	(hl)
      0019D7 3D                    5838 	dec	a
      0019D8 20 F6                 5839 	jr	NZ, 00250$
      0019DA 11r00r00              5840 	ld	de, #_shadow_OAM
      0019DD 3A                    5841 	ld	a, (hl-)
      0019DE 6E                    5842 	ld	l, (hl)
      0019DF 67                    5843 	ld	h, a
      0019E0 19                    5844 	add	hl, de
      0019E1 E5                    5845 	push	hl
      0019E2 7D                    5846 	ld	a, l
      0019E3 F8 04                 5847 	ldhl	sp,	#4
      0019E5 77                    5848 	ld	(hl), a
      0019E6 E1                    5849 	pop	hl
      0019E7 7C                    5850 	ld	a, h
      0019E8 F8 03                 5851 	ldhl	sp,	#3
      0019EA 32                    5852 	ld	(hl-), a
      0019EB 2A                    5853 	ld	a, (hl+)
      0019EC 5F                    5854 	ld	e, a
      0019ED 56                    5855 	ld	d, (hl)
      0019EE 21 03 00              5856 	ld	hl, #0x0003
      0019F1 19                    5857 	add	hl, de
      0019F2 E5                    5858 	push	hl
      0019F3 7D                    5859 	ld	a, l
      0019F4 F8 06                 5860 	ldhl	sp,	#6
      0019F6 77                    5861 	ld	(hl), a
      0019F7 E1                    5862 	pop	hl
      0019F8 7C                    5863 	ld	a, h
      0019F9 F8 05                 5864 	ldhl	sp,	#5
      0019FB 32                    5865 	ld	(hl-), a
      0019FC 2A                    5866 	ld	a,	(hl+)
      0019FD 66                    5867 	ld	h, (hl)
      0019FE 6F                    5868 	ld	l, a
      0019FF 36 00                 5869 	ld	(hl), #0x00
                                   5870 ;main.c:687: set_sprite_prop(20+oldestProjectile, 0); 
      001A01 C3r11r1C              5871 	jp	00136$
      001A04                       5872 00135$:
                                   5873 ;main.c:692: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type+1);
                                   5874 ;main.c:691: else if (xDir != 0 && yDir == 0) {
      001A04 FAr45r00              5875 	ld	a, (#_xDir)
      001A07 B7                    5876 	or	a, a
      001A08 CArD1r1A              5877 	jp	Z, 00131$
      001A0B FAr46r00              5878 	ld	a, (#_yDir)
      001A0E B7                    5879 	or	a, a
      001A0F C2rD1r1A              5880 	jp	NZ, 00131$
                                   5881 ;main.c:692: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type+1);
      001A12 F8 04                 5882 	ldhl	sp,	#4
      001A14 34                    5883 	inc	(hl)
                                   5884 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001A15 23                    5885 	inc	hl
      001A16 7E                    5886 	ld	a, (hl)
      001A17 F8 02                 5887 	ldhl	sp,	#2
      001A19 22                    5888 	ld	(hl+), a
      001A1A 36 00                 5889 	ld	(hl), #0x00
      001A1C 3E 02                 5890 	ld	a, #0x02
      001A1E                       5891 00251$:
      001A1E F8 02                 5892 	ldhl	sp,	#2
      001A20 CB 26                 5893 	sla	(hl)
      001A22 23                    5894 	inc	hl
      001A23 CB 16                 5895 	rl	(hl)
      001A25 3D                    5896 	dec	a
      001A26 20 F6                 5897 	jr	NZ, 00251$
      001A28 2B                    5898 	dec	hl
      001A29 2A                    5899 	ld	a, (hl+)
      001A2A 5F                    5900 	ld	e, a
      001A2B 56                    5901 	ld	d, (hl)
      001A2C 21r00r00              5902 	ld	hl, #_shadow_OAM
      001A2F 19                    5903 	add	hl, de
      001A30 33                    5904 	inc	sp
      001A31 33                    5905 	inc	sp
      001A32 5D                    5906 	ld	e, l
      001A33 54                    5907 	ld	d, h
      001A34 D5                    5908 	push	de
      001A35 21 02 00              5909 	ld	hl, #0x0002
      001A38 19                    5910 	add	hl, de
      001A39 E5                    5911 	push	hl
      001A3A 7D                    5912 	ld	a, l
      001A3B F8 04                 5913 	ldhl	sp,	#4
      001A3D 77                    5914 	ld	(hl), a
      001A3E E1                    5915 	pop	hl
      001A3F 7C                    5916 	ld	a, h
      001A40 F8 03                 5917 	ldhl	sp,	#3
      001A42 32                    5918 	ld	(hl-), a
      001A43 2A                    5919 	ld	a, (hl+)
      001A44 5F                    5920 	ld	e, a
      001A45 2A                    5921 	ld	a, (hl+)
      001A46 57                    5922 	ld	d, a
      001A47 7E                    5923 	ld	a, (hl)
      001A48 12                    5924 	ld	(de), a
                                   5925 ;main.c:660: oldestProjectile += 1;
      001A49 FAr43r00              5926 	ld	a, (#_oldestProjectile)
                                   5927 ;main.c:680: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      001A4C C6 14                 5928 	add	a, #0x14
      001A4E F8 05                 5929 	ldhl	sp,	#5
      001A50 77                    5930 	ld	(hl), a
                                   5931 ;main.c:693: if (xDir == 1) {
      001A51 FAr45r00              5932 	ld	a, (#_xDir)
      001A54 3D                    5933 	dec	a
      001A55 20 3D                 5934 	jr	NZ, 00113$
                                   5935 ;main.c:694: set_sprite_prop(20+oldestProjectile, 0); 
                                   5936 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001A57 F8 05                 5937 	ldhl	sp,	#5
      001A59 3A                    5938 	ld	a, (hl-)
      001A5A 22                    5939 	ld	(hl+), a
      001A5B 36 00                 5940 	ld	(hl), #0x00
      001A5D 3E 02                 5941 	ld	a, #0x02
      001A5F                       5942 00254$:
      001A5F F8 04                 5943 	ldhl	sp,	#4
      001A61 CB 26                 5944 	sla	(hl)
      001A63 23                    5945 	inc	hl
      001A64 CB 16                 5946 	rl	(hl)
      001A66 3D                    5947 	dec	a
      001A67 20 F6                 5948 	jr	NZ, 00254$
      001A69 2B                    5949 	dec	hl
      001A6A 2A                    5950 	ld	a, (hl+)
      001A6B 5F                    5951 	ld	e, a
      001A6C 56                    5952 	ld	d, (hl)
      001A6D 21r00r00              5953 	ld	hl, #_shadow_OAM
      001A70 19                    5954 	add	hl, de
      001A71 E5                    5955 	push	hl
      001A72 7D                    5956 	ld	a, l
      001A73 F8 04                 5957 	ldhl	sp,	#4
      001A75 77                    5958 	ld	(hl), a
      001A76 E1                    5959 	pop	hl
      001A77 7C                    5960 	ld	a, h
      001A78 F8 03                 5961 	ldhl	sp,	#3
      001A7A 32                    5962 	ld	(hl-), a
      001A7B 2A                    5963 	ld	a, (hl+)
      001A7C 5F                    5964 	ld	e, a
      001A7D 56                    5965 	ld	d, (hl)
      001A7E 21 03 00              5966 	ld	hl, #0x0003
      001A81 19                    5967 	add	hl, de
      001A82 E5                    5968 	push	hl
      001A83 7D                    5969 	ld	a, l
      001A84 F8 06                 5970 	ldhl	sp,	#6
      001A86 77                    5971 	ld	(hl), a
      001A87 E1                    5972 	pop	hl
      001A88 7C                    5973 	ld	a, h
      001A89 F8 05                 5974 	ldhl	sp,	#5
      001A8B 32                    5975 	ld	(hl-), a
      001A8C 2A                    5976 	ld	a,	(hl+)
      001A8D 66                    5977 	ld	h, (hl)
      001A8E 6F                    5978 	ld	l, a
      001A8F 36 00                 5979 	ld	(hl), #0x00
                                   5980 ;main.c:694: set_sprite_prop(20+oldestProjectile, 0); 
      001A91 C3r11r1C              5981 	jp	00136$
      001A94                       5982 00113$:
                                   5983 ;main.c:697: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
                                   5984 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001A94 F8 05                 5985 	ldhl	sp,	#5
      001A96 3A                    5986 	ld	a, (hl-)
      001A97 22                    5987 	ld	(hl+), a
      001A98 36 00                 5988 	ld	(hl), #0x00
      001A9A 3E 02                 5989 	ld	a, #0x02
      001A9C                       5990 00255$:
      001A9C F8 04                 5991 	ldhl	sp,	#4
      001A9E CB 26                 5992 	sla	(hl)
      001AA0 23                    5993 	inc	hl
      001AA1 CB 16                 5994 	rl	(hl)
      001AA3 3D                    5995 	dec	a
      001AA4 20 F6                 5996 	jr	NZ, 00255$
      001AA6 2B                    5997 	dec	hl
      001AA7 2A                    5998 	ld	a, (hl+)
      001AA8 5F                    5999 	ld	e, a
      001AA9 56                    6000 	ld	d, (hl)
      001AAA 21r00r00              6001 	ld	hl, #_shadow_OAM
      001AAD 19                    6002 	add	hl, de
      001AAE E5                    6003 	push	hl
      001AAF 7D                    6004 	ld	a, l
      001AB0 F8 04                 6005 	ldhl	sp,	#4
      001AB2 77                    6006 	ld	(hl), a
      001AB3 E1                    6007 	pop	hl
      001AB4 7C                    6008 	ld	a, h
      001AB5 F8 03                 6009 	ldhl	sp,	#3
      001AB7 32                    6010 	ld	(hl-), a
      001AB8 2A                    6011 	ld	a, (hl+)
      001AB9 5F                    6012 	ld	e, a
      001ABA 56                    6013 	ld	d, (hl)
      001ABB 21 03 00              6014 	ld	hl, #0x0003
      001ABE 19                    6015 	add	hl, de
      001ABF E5                    6016 	push	hl
      001AC0 7D                    6017 	ld	a, l
      001AC1 F8 06                 6018 	ldhl	sp,	#6
      001AC3 77                    6019 	ld	(hl), a
      001AC4 E1                    6020 	pop	hl
      001AC5 7C                    6021 	ld	a, h
      001AC6 F8 05                 6022 	ldhl	sp,	#5
      001AC8 32                    6023 	ld	(hl-), a
      001AC9 2A                    6024 	ld	a,	(hl+)
      001ACA 66                    6025 	ld	h, (hl)
      001ACB 6F                    6026 	ld	l, a
      001ACC 36 20                 6027 	ld	(hl), #0x20
                                   6028 ;main.c:697: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
      001ACE C3r11r1C              6029 	jp	00136$
      001AD1                       6030 00131$:
                                   6031 ;main.c:701: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type+2);
      001AD1 F8 04                 6032 	ldhl	sp,	#4
      001AD3 7E                    6033 	ld	a, (hl)
      001AD4 C6 02                 6034 	add	a, #0x02
      001AD6 F8 01                 6035 	ldhl	sp,	#1
      001AD8 77                    6036 	ld	(hl), a
                                   6037 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001AD9 F8 05                 6038 	ldhl	sp,	#5
      001ADB 3A                    6039 	ld	a, (hl-)
      001ADC 22                    6040 	ld	(hl+), a
      001ADD 36 00                 6041 	ld	(hl), #0x00
      001ADF 3E 02                 6042 	ld	a, #0x02
      001AE1                       6043 00256$:
      001AE1 F8 04                 6044 	ldhl	sp,	#4
      001AE3 CB 26                 6045 	sla	(hl)
      001AE5 23                    6046 	inc	hl
      001AE6 CB 16                 6047 	rl	(hl)
      001AE8 3D                    6048 	dec	a
      001AE9 20 F6                 6049 	jr	NZ, 00256$
      001AEB 11r00r00              6050 	ld	de, #_shadow_OAM
      001AEE 3A                    6051 	ld	a, (hl-)
      001AEF 6E                    6052 	ld	l, (hl)
      001AF0 67                    6053 	ld	h, a
      001AF1 19                    6054 	add	hl, de
      001AF2 E5                    6055 	push	hl
      001AF3 7D                    6056 	ld	a, l
      001AF4 F8 04                 6057 	ldhl	sp,	#4
      001AF6 77                    6058 	ld	(hl), a
      001AF7 E1                    6059 	pop	hl
      001AF8 7C                    6060 	ld	a, h
      001AF9 F8 03                 6061 	ldhl	sp,	#3
      001AFB 32                    6062 	ld	(hl-), a
      001AFC 2A                    6063 	ld	a, (hl+)
      001AFD 5F                    6064 	ld	e, a
      001AFE 56                    6065 	ld	d, (hl)
      001AFF 21 02 00              6066 	ld	hl, #0x0002
      001B02 19                    6067 	add	hl, de
      001B03 E5                    6068 	push	hl
      001B04 7D                    6069 	ld	a, l
      001B05 F8 06                 6070 	ldhl	sp,	#6
      001B07 77                    6071 	ld	(hl), a
      001B08 E1                    6072 	pop	hl
      001B09 7C                    6073 	ld	a, h
      001B0A F8 05                 6074 	ldhl	sp,	#5
      001B0C 32                    6075 	ld	(hl-), a
      001B0D 2A                    6076 	ld	a, (hl+)
      001B0E 5F                    6077 	ld	e, a
      001B0F 56                    6078 	ld	d, (hl)
      001B10 F8 01                 6079 	ldhl	sp,	#1
      001B12 7E                    6080 	ld	a, (hl)
      001B13 12                    6081 	ld	(de), a
                                   6082 ;main.c:702: if (xDir == 1 && yDir == -1) {
      001B14 FAr45r00              6083 	ld	a, (#_xDir)
      001B17 3D                    6084 	dec	a
      001B18 3E 01                 6085 	ld	a, #0x01
      001B1A 28 01                 6086 	jr	Z, 00258$
      001B1C AF                    6087 	xor	a, a
      001B1D                       6088 00258$:
      001B1D F8 02                 6089 	ldhl	sp,	#2
      001B1F 77                    6090 	ld	(hl), a
                                   6091 ;main.c:660: oldestProjectile += 1;
      001B20 FAr43r00              6092 	ld	a, (#_oldestProjectile)
      001B23 F8 05                 6093 	ldhl	sp,	#5
      001B25 77                    6094 	ld	(hl), a
                                   6095 ;main.c:702: if (xDir == 1 && yDir == -1) {
      001B26 FAr46r00              6096 	ld	a, (#_yDir)
      001B29 3C                    6097 	inc	a
      001B2A 3E 01                 6098 	ld	a, #0x01
      001B2C 28 01                 6099 	jr	Z, 00260$
      001B2E AF                    6100 	xor	a, a
      001B2F                       6101 00260$:
      001B2F F8 03                 6102 	ldhl	sp,	#3
                                   6103 ;main.c:680: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      001B31 22                    6104 	ld	(hl+), a
      001B32 23                    6105 	inc	hl
      001B33 3A                    6106 	ld	a, (hl-)
      001B34 C6 14                 6107 	add	a, #0x14
                                   6108 ;main.c:702: if (xDir == 1 && yDir == -1) {
      001B36 32                    6109 	ld	(hl-), a
      001B37 2B                    6110 	dec	hl
      001B38 7E                    6111 	ld	a, (hl)
      001B39 B7                    6112 	or	a, a
      001B3A 28 43                 6113 	jr	Z, 00127$
      001B3C 23                    6114 	inc	hl
      001B3D 7E                    6115 	ld	a, (hl)
      001B3E B7                    6116 	or	a, a
      001B3F 28 3E                 6117 	jr	Z, 00127$
                                   6118 ;main.c:703: set_sprite_prop(20+oldestProjectile, 0); //default is right & up
      001B41 23                    6119 	inc	hl
      001B42 2A                    6120 	ld	a, (hl+)
      001B43 77                    6121 	ld	(hl), a
                                   6122 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001B44 3A                    6123 	ld	a, (hl-)
      001B45 22                    6124 	ld	(hl+), a
      001B46 36 00                 6125 	ld	(hl), #0x00
      001B48 3E 02                 6126 	ld	a, #0x02
      001B4A                       6127 00261$:
      001B4A F8 04                 6128 	ldhl	sp,	#4
      001B4C CB 26                 6129 	sla	(hl)
      001B4E 23                    6130 	inc	hl
      001B4F CB 16                 6131 	rl	(hl)
      001B51 3D                    6132 	dec	a
      001B52 20 F6                 6133 	jr	NZ, 00261$
      001B54 2B                    6134 	dec	hl
      001B55 2A                    6135 	ld	a, (hl+)
      001B56 5F                    6136 	ld	e, a
      001B57 56                    6137 	ld	d, (hl)
      001B58 21r00r00              6138 	ld	hl, #_shadow_OAM
      001B5B 19                    6139 	add	hl, de
      001B5C E5                    6140 	push	hl
      001B5D 7D                    6141 	ld	a, l
      001B5E F8 04                 6142 	ldhl	sp,	#4
      001B60 77                    6143 	ld	(hl), a
      001B61 E1                    6144 	pop	hl
      001B62 7C                    6145 	ld	a, h
      001B63 F8 03                 6146 	ldhl	sp,	#3
      001B65 32                    6147 	ld	(hl-), a
      001B66 2A                    6148 	ld	a, (hl+)
      001B67 5F                    6149 	ld	e, a
      001B68 56                    6150 	ld	d, (hl)
      001B69 21 03 00              6151 	ld	hl, #0x0003
      001B6C 19                    6152 	add	hl, de
      001B6D E5                    6153 	push	hl
      001B6E 7D                    6154 	ld	a, l
      001B6F F8 06                 6155 	ldhl	sp,	#6
      001B71 77                    6156 	ld	(hl), a
      001B72 E1                    6157 	pop	hl
      001B73 7C                    6158 	ld	a, h
      001B74 F8 05                 6159 	ldhl	sp,	#5
      001B76 32                    6160 	ld	(hl-), a
      001B77 2A                    6161 	ld	a,	(hl+)
      001B78 66                    6162 	ld	h, (hl)
      001B79 6F                    6163 	ld	l, a
      001B7A 36 00                 6164 	ld	(hl), #0x00
                                   6165 ;main.c:703: set_sprite_prop(20+oldestProjectile, 0); //default is right & up
      001B7C C3r11r1C              6166 	jp	00136$
      001B7F                       6167 00127$:
                                   6168 ;main.c:681: if (yDir == 1) {
      001B7F FAr46r00              6169 	ld	a, (#_yDir)
      001B82 3D                    6170 	dec	a
      001B83 3E 01                 6171 	ld	a, #0x01
      001B85 28 01                 6172 	jr	Z, 00263$
      001B87 AF                    6173 	xor	a, a
      001B88                       6174 00263$:
      001B88 F8 05                 6175 	ldhl	sp,	#5
      001B8A 77                    6176 	ld	(hl), a
                                   6177 ;main.c:705: else if (xDir == 1 && yDir == 1) {
      001B8B F8 02                 6178 	ldhl	sp,	#2
      001B8D 7E                    6179 	ld	a, (hl)
      001B8E B7                    6180 	or	a, a
      001B8F 28 43                 6181 	jr	Z, 00123$
      001B91 F8 05                 6182 	ldhl	sp,	#5
      001B93 7E                    6183 	ld	a, (hl)
      001B94 B7                    6184 	or	a, a
      001B95 28 3D                 6185 	jr	Z, 00123$
                                   6186 ;main.c:706: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
      001B97 2B                    6187 	dec	hl
      001B98 2A                    6188 	ld	a, (hl+)
      001B99 77                    6189 	ld	(hl), a
                                   6190 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001B9A 3A                    6191 	ld	a, (hl-)
      001B9B 22                    6192 	ld	(hl+), a
      001B9C 36 00                 6193 	ld	(hl), #0x00
      001B9E 3E 02                 6194 	ld	a, #0x02
      001BA0                       6195 00264$:
      001BA0 F8 04                 6196 	ldhl	sp,	#4
      001BA2 CB 26                 6197 	sla	(hl)
      001BA4 23                    6198 	inc	hl
      001BA5 CB 16                 6199 	rl	(hl)
      001BA7 3D                    6200 	dec	a
      001BA8 20 F6                 6201 	jr	NZ, 00264$
      001BAA 2B                    6202 	dec	hl
      001BAB 2A                    6203 	ld	a, (hl+)
      001BAC 5F                    6204 	ld	e, a
      001BAD 56                    6205 	ld	d, (hl)
      001BAE 21r00r00              6206 	ld	hl, #_shadow_OAM
      001BB1 19                    6207 	add	hl, de
      001BB2 E5                    6208 	push	hl
      001BB3 7D                    6209 	ld	a, l
      001BB4 F8 04                 6210 	ldhl	sp,	#4
      001BB6 77                    6211 	ld	(hl), a
      001BB7 E1                    6212 	pop	hl
      001BB8 7C                    6213 	ld	a, h
      001BB9 F8 03                 6214 	ldhl	sp,	#3
      001BBB 32                    6215 	ld	(hl-), a
      001BBC 2A                    6216 	ld	a, (hl+)
      001BBD 5F                    6217 	ld	e, a
      001BBE 56                    6218 	ld	d, (hl)
      001BBF 21 03 00              6219 	ld	hl, #0x0003
      001BC2 19                    6220 	add	hl, de
      001BC3 E5                    6221 	push	hl
      001BC4 7D                    6222 	ld	a, l
      001BC5 F8 06                 6223 	ldhl	sp,	#6
      001BC7 77                    6224 	ld	(hl), a
      001BC8 E1                    6225 	pop	hl
      001BC9 7C                    6226 	ld	a, h
      001BCA F8 05                 6227 	ldhl	sp,	#5
      001BCC 32                    6228 	ld	(hl-), a
      001BCD 2A                    6229 	ld	a,	(hl+)
      001BCE 66                    6230 	ld	h, (hl)
      001BCF 6F                    6231 	ld	l, a
      001BD0 36 40                 6232 	ld	(hl), #0x40
                                   6233 ;main.c:706: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
      001BD2 18 3D                 6234 	jr	00136$
      001BD4                       6235 00123$:
                                   6236 ;main.c:708: else if (xDir == -1 && yDir == 1) {
      001BD4 FAr45r00              6237 	ld	a, (#_xDir)
      001BD7 3C                    6238 	inc	a
      001BD8 3E 01                 6239 	ld	a, #0x01
      001BDA 28 01                 6240 	jr	Z, 00266$
      001BDC AF                    6241 	xor	a, a
      001BDD                       6242 00266$:
      001BDD 4F                    6243 	ld	c, a
      001BDE B7                    6244 	or	a, a
      001BDF 28 17                 6245 	jr	Z, 00119$
      001BE1 F8 05                 6246 	ldhl	sp,	#5
      001BE3 7E                    6247 	ld	a, (hl)
      001BE4 B7                    6248 	or	a, a
      001BE5 28 11                 6249 	jr	Z, 00119$
                                   6250 ;main.c:709: set_sprite_prop(20+oldestProjectile, S_FLIPY | S_FLIPX); 
      001BE7 2B                    6251 	dec	hl
                                   6252 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001BE8 6E                    6253 	ld	l, (hl)
      001BE9 01r00r00              6254 	ld	bc, #_shadow_OAM+0
                                   6255 ;	spillPairReg hl
                                   6256 ;	spillPairReg hl
      001BEC 26 00                 6257 	ld	h, #0x00
                                   6258 ;	spillPairReg hl
                                   6259 ;	spillPairReg hl
      001BEE 29                    6260 	add	hl, hl
      001BEF 29                    6261 	add	hl, hl
      001BF0 09                    6262 	add	hl, bc
      001BF1 23                    6263 	inc	hl
      001BF2 23                    6264 	inc	hl
      001BF3 23                    6265 	inc	hl
      001BF4 36 60                 6266 	ld	(hl), #0x60
                                   6267 ;main.c:709: set_sprite_prop(20+oldestProjectile, S_FLIPY | S_FLIPX); 
      001BF6 18 19                 6268 	jr	00136$
      001BF8                       6269 00119$:
                                   6270 ;main.c:711: else if (xDir == -1 && yDir == -1) {
      001BF8 79                    6271 	ld	a, c
      001BF9 B7                    6272 	or	a, a
      001BFA 28 15                 6273 	jr	Z, 00136$
      001BFC F8 03                 6274 	ldhl	sp,	#3
      001BFE 7E                    6275 	ld	a, (hl)
      001BFF B7                    6276 	or	a, a
      001C00 28 0F                 6277 	jr	Z, 00136$
                                   6278 ;main.c:712: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
      001C02 23                    6279 	inc	hl
                                   6280 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001C03 6E                    6281 	ld	l, (hl)
      001C04 01r00r00              6282 	ld	bc, #_shadow_OAM+0
                                   6283 ;	spillPairReg hl
                                   6284 ;	spillPairReg hl
      001C07 26 00                 6285 	ld	h, #0x00
                                   6286 ;	spillPairReg hl
                                   6287 ;	spillPairReg hl
      001C09 29                    6288 	add	hl, hl
      001C0A 29                    6289 	add	hl, hl
      001C0B 09                    6290 	add	hl, bc
      001C0C 23                    6291 	inc	hl
      001C0D 23                    6292 	inc	hl
      001C0E 23                    6293 	inc	hl
      001C0F 36 20                 6294 	ld	(hl), #0x20
                                   6295 ;main.c:712: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
      001C11                       6296 00136$:
                                   6297 ;main.c:716: move_sprite(20+oldestProjectile, playerDrawX, playerDrawY);
      001C11 21r4Er00              6298 	ld	hl, #_playerDrawY
      001C14 46                    6299 	ld	b, (hl)
      001C15 21r4Dr00              6300 	ld	hl, #_playerDrawX
      001C18 4E                    6301 	ld	c, (hl)
      001C19 FAr43r00              6302 	ld	a, (#_oldestProjectile)
      001C1C C6 14                 6303 	add	a, #0x14
                                   6304 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001C1E 6F                    6305 	ld	l, a
                                   6306 ;	spillPairReg hl
                                   6307 ;	spillPairReg hl
      001C1F 26 00                 6308 	ld	h, #0x00
                                   6309 ;	spillPairReg hl
                                   6310 ;	spillPairReg hl
      001C21 29                    6311 	add	hl, hl
      001C22 29                    6312 	add	hl, hl
      001C23 11r00r00              6313 	ld	de, #_shadow_OAM
      001C26 19                    6314 	add	hl, de
                                   6315 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001C27 78                    6316 	ld	a, b
      001C28 22                    6317 	ld	(hl+), a
      001C29 71                    6318 	ld	(hl), c
                                   6319 ;main.c:717: fireCooldown = projectiles[oldestProjectile].delay;
      001C2A 21r43r00              6320 	ld	hl, #_oldestProjectile
      001C2D 4E                    6321 	ld	c, (hl)
      001C2E 06 00                 6322 	ld	b, #0x00
      001C30 69                    6323 	ld	l, c
      001C31 60                    6324 	ld	h, b
      001C32 29                    6325 	add	hl, hl
      001C33 29                    6326 	add	hl, hl
      001C34 09                    6327 	add	hl, bc
      001C35 29                    6328 	add	hl, hl
      001C36 09                    6329 	add	hl, bc
      001C37 01r50r00              6330 	ld	bc,#_projectiles
      001C3A 09                    6331 	add	hl,bc
      001C3B 4D                    6332 	ld	c, l
      001C3C 44                    6333 	ld	b, h
      001C3D 21 09 00              6334 	ld	hl, #0x0009
      001C40 09                    6335 	add	hl, bc
      001C41 7E                    6336 	ld	a, (hl)
      001C42 EAr44r00              6337 	ld	(#_fireCooldown),a
                                   6338 ;main.c:719: playSound(projectiles[oldestProjectile].type);
      001C45 21 0A 00              6339 	ld	hl, #0x000a
      001C48 09                    6340 	add	hl, bc
      001C49 7E                    6341 	ld	a, (hl)
      001C4A F5                    6342 	push	af
      001C4B 33                    6343 	inc	sp
      001C4C CDr82r08              6344 	call	_playSound
                                   6345 ;main.c:723: }
      001C4F E8 07                 6346 	add	sp, #7
      001C51 C9                    6347 	ret
                                   6348 ;main.c:726: void moveProjectiles() {
                                   6349 ;	---------------------------------
                                   6350 ; Function moveProjectiles
                                   6351 ; ---------------------------------
      001C52                       6352 _moveProjectiles::
      001C52 E8 F7                 6353 	add	sp, #-9
                                   6354 ;main.c:727: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001C54 F8 08                 6355 	ldhl	sp,	#8
      001C56 36 00                 6356 	ld	(hl), #0x00
      001C58                       6357 00112$:
      001C58 21rDDr05              6358 	ld	hl, #_PROJECTILECOUNT
      001C5B 4E                    6359 	ld	c, (hl)
      001C5C F8 08                 6360 	ldhl	sp,	#8
      001C5E 7E                    6361 	ld	a, (hl)
      001C5F 91                    6362 	sub	a, c
      001C60 D2rA1r1D              6363 	jp	NC, 00114$
                                   6364 ;main.c:728: projectiles[i].x -= xOverflow;
      001C63 4E                    6365 	ld	c, (hl)
      001C64 06 00                 6366 	ld	b, #0x00
      001C66 69                    6367 	ld	l, c
      001C67 60                    6368 	ld	h, b
      001C68 29                    6369 	add	hl, hl
      001C69 29                    6370 	add	hl, hl
      001C6A 09                    6371 	add	hl, bc
      001C6B 29                    6372 	add	hl, hl
      001C6C 09                    6373 	add	hl, bc
      001C6D 01r50r00              6374 	ld	bc,#_projectiles
      001C70 09                    6375 	add	hl,bc
      001C71 33                    6376 	inc	sp
      001C72 33                    6377 	inc	sp
      001C73 5D                    6378 	ld	e, l
      001C74 54                    6379 	ld	d, h
      001C75 D5                    6380 	push	de
      001C76 1A                    6381 	ld	a, (de)
      001C77 4F                    6382 	ld	c, a
      001C78 13                    6383 	inc	de
      001C79 1A                    6384 	ld	a, (de)
      001C7A 47                    6385 	ld	b, a
      001C7B 79                    6386 	ld	a, c
      001C7C 21r53r00              6387 	ld	hl, #_xOverflow
      001C7F 96                    6388 	sub	a, (hl)
      001C80 23                    6389 	inc	hl
      001C81 4F                    6390 	ld	c, a
      001C82 78                    6391 	ld	a, b
      001C83 9E                    6392 	sbc	a, (hl)
      001C84 47                    6393 	ld	b, a
      001C85 E1                    6394 	pop	hl
      001C86 E5                    6395 	push	hl
      001C87 79                    6396 	ld	a, c
      001C88 22                    6397 	ld	(hl+), a
      001C89 70                    6398 	ld	(hl), b
                                   6399 ;main.c:729: projectiles[i].y -= yOverflow;
      001C8A D1                    6400 	pop	de
      001C8B D5                    6401 	push	de
      001C8C 21 02 00              6402 	ld	hl, #0x0002
      001C8F 19                    6403 	add	hl, de
      001C90 E5                    6404 	push	hl
      001C91 7D                    6405 	ld	a, l
      001C92 F8 04                 6406 	ldhl	sp,	#4
      001C94 77                    6407 	ld	(hl), a
      001C95 E1                    6408 	pop	hl
      001C96 7C                    6409 	ld	a, h
      001C97 F8 03                 6410 	ldhl	sp,	#3
      001C99 32                    6411 	ld	(hl-), a
      001C9A 2A                    6412 	ld	a, (hl+)
      001C9B 5F                    6413 	ld	e, a
      001C9C 56                    6414 	ld	d, (hl)
      001C9D 1A                    6415 	ld	a, (de)
      001C9E 4F                    6416 	ld	c, a
      001C9F 13                    6417 	inc	de
      001CA0 1A                    6418 	ld	a, (de)
      001CA1 47                    6419 	ld	b, a
      001CA2 79                    6420 	ld	a, c
      001CA3 21r55r00              6421 	ld	hl, #_yOverflow
      001CA6 96                    6422 	sub	a, (hl)
      001CA7 23                    6423 	inc	hl
      001CA8 4F                    6424 	ld	c, a
      001CA9 78                    6425 	ld	a, b
      001CAA 9E                    6426 	sbc	a, (hl)
      001CAB 47                    6427 	ld	b, a
      001CAC F8 02                 6428 	ldhl	sp,	#2
      001CAE 2A                    6429 	ld	a,	(hl+)
      001CAF 66                    6430 	ld	h, (hl)
      001CB0 6F                    6431 	ld	l, a
      001CB1 79                    6432 	ld	a, c
      001CB2 22                    6433 	ld	(hl+), a
      001CB3 70                    6434 	ld	(hl), b
                                   6435 ;main.c:731: if (projectiles[i].active) {
      001CB4 D1                    6436 	pop	de
      001CB5 D5                    6437 	push	de
      001CB6 21 08 00              6438 	ld	hl, #0x0008
      001CB9 19                    6439 	add	hl, de
      001CBA 4D                    6440 	ld	c, l
      001CBB 44                    6441 	ld	b, h
      001CBC 0A                    6442 	ld	a, (bc)
      001CBD B7                    6443 	or	a, a
      001CBE CAr9Br1D              6444 	jp	Z, 00113$
                                   6445 ;main.c:732: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      001CC1 F8 02                 6446 	ldhl	sp,#2
      001CC3 2A                    6447 	ld	a, (hl+)
      001CC4 5F                    6448 	ld	e, a
      001CC5 56                    6449 	ld	d, (hl)
      001CC6 1A                    6450 	ld	a, (de)
      001CC7 4F                    6451 	ld	c, a
      001CC8 13                    6452 	inc	de
      001CC9 1A                    6453 	ld	a, (de)
      001CCA 47                    6454 	ld	b, a
      001CCB D1                    6455 	pop	de
      001CCC D5                    6456 	push	de
      001CCD 21 05 00              6457 	ld	hl, #0x0005
      001CD0 19                    6458 	add	hl, de
      001CD1 5D                    6459 	ld	e, l
      001CD2 54                    6460 	ld	d, h
      001CD3 1A                    6461 	ld	a, (de)
      001CD4 6F                    6462 	ld	l, a
                                   6463 ;	spillPairReg hl
                                   6464 ;	spillPairReg hl
      001CD5 07                    6465 	rlca
      001CD6 9F                    6466 	sbc	a, a
      001CD7 67                    6467 	ld	h, a
                                   6468 ;	spillPairReg hl
                                   6469 ;	spillPairReg hl
      001CD8 09                    6470 	add	hl, bc
      001CD9 4D                    6471 	ld	c, l
      001CDA 44                    6472 	ld	b, h
      001CDB F8 04                 6473 	ldhl	sp,	#4
      001CDD 79                    6474 	ld	a, c
      001CDE 22                    6475 	ld	(hl+), a
      001CDF 70                    6476 	ld	(hl), b
                                   6477 ;main.c:733: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      001CE0 D1                    6478 	pop	de
      001CE1 D5                    6479 	push	de
      001CE2 1A                    6480 	ld	a, (de)
      001CE3 4F                    6481 	ld	c, a
      001CE4 13                    6482 	inc	de
      001CE5 1A                    6483 	ld	a, (de)
      001CE6 47                    6484 	ld	b, a
      001CE7 D1                    6485 	pop	de
      001CE8 D5                    6486 	push	de
      001CE9 21 04 00              6487 	ld	hl, #0x0004
      001CEC 19                    6488 	add	hl, de
      001CED 5D                    6489 	ld	e, l
      001CEE 54                    6490 	ld	d, h
      001CEF 1A                    6491 	ld	a, (de)
      001CF0 6F                    6492 	ld	l, a
                                   6493 ;	spillPairReg hl
                                   6494 ;	spillPairReg hl
      001CF1 07                    6495 	rlca
      001CF2 9F                    6496 	sbc	a, a
      001CF3 67                    6497 	ld	h, a
                                   6498 ;	spillPairReg hl
                                   6499 ;	spillPairReg hl
      001CF4 09                    6500 	add	hl, bc
      001CF5 4D                    6501 	ld	c, l
      001CF6 44                    6502 	ld	b, h
                                   6503 ;main.c:735: move_sprite(20+i, newX, newY);
      001CF7 F8 04                 6504 	ldhl	sp,	#4
      001CF9 2A                    6505 	ld	a, (hl+)
      001CFA 23                    6506 	inc	hl
      001CFB 5F                    6507 	ld	e, a
      001CFC 79                    6508 	ld	a, c
      001CFD 22                    6509 	ld	(hl+), a
      001CFE 23                    6510 	inc	hl
      001CFF 3A                    6511 	ld	a, (hl-)
      001D00 C6 14                 6512 	add	a, #0x14
      001D02 77                    6513 	ld	(hl), a
      001D03 56                    6514 	ld	d, (hl)
                                   6515 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001D04 26 00                 6516 	ld	h, #0x00
                                   6517 ;	spillPairReg hl
                                   6518 ;	spillPairReg hl
      001D06 6A                    6519 	ld	l, d
      001D07 29                    6520 	add	hl, hl
      001D08 29                    6521 	add	hl, hl
      001D09 D5                    6522 	push	de
      001D0A 11r00r00              6523 	ld	de, #_shadow_OAM
      001D0D 19                    6524 	add	hl, de
      001D0E D1                    6525 	pop	de
                                   6526 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001D0F 7B                    6527 	ld	a, e
      001D10 22                    6528 	ld	(hl+), a
      001D11 5D                    6529 	ld	e, l
      001D12 54                    6530 	ld	d, h
      001D13 F8 06                 6531 	ldhl	sp,	#6
      001D15 7E                    6532 	ld	a, (hl)
      001D16 12                    6533 	ld	(de), a
                                   6534 ;main.c:736: projectiles[i].y = newY;
      001D17 F8 02                 6535 	ldhl	sp,#2
      001D19 2A                    6536 	ld	a, (hl+)
      001D1A 5F                    6537 	ld	e, a
      001D1B 2A                    6538 	ld	a, (hl+)
      001D1C 57                    6539 	ld	d, a
      001D1D 2A                    6540 	ld	a, (hl+)
      001D1E 12                    6541 	ld	(de), a
      001D1F 13                    6542 	inc	de
      001D20 7E                    6543 	ld	a, (hl)
      001D21 12                    6544 	ld	(de), a
                                   6545 ;main.c:737: projectiles[i].x = newX;
      001D22 E1                    6546 	pop	hl
      001D23 E5                    6547 	push	hl
      001D24 79                    6548 	ld	a, c
      001D25 22                    6549 	ld	(hl+), a
      001D26 70                    6550 	ld	(hl), b
                                   6551 ;main.c:742: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      001D27 D1                    6552 	pop	de
      001D28 D5                    6553 	push	de
      001D29 1A                    6554 	ld	a, (de)
      001D2A 6F                    6555 	ld	l, a
                                   6556 ;	spillPairReg hl
                                   6557 ;	spillPairReg hl
      001D2B 13                    6558 	inc	de
      001D2C 1A                    6559 	ld	a, (de)
      001D2D 67                    6560 	ld	h, a
                                   6561 ;	spillPairReg hl
                                   6562 ;	spillPairReg hl
      001D2E CB 78                 6563 	bit	7, b
      001D30 20 44                 6564 	jr	NZ, 00101$
      001D32 5C                    6565 	ld	e, h
      001D33 16 00                 6566 	ld	d, #0x00
      001D35 3E AA                 6567 	ld	a, #0xaa
      001D37 BD                    6568 	cp	a, l
      001D38 3E 00                 6569 	ld	a, #0x00
      001D3A 9C                    6570 	sbc	a, h
      001D3B CB 7B                 6571 	bit	7, e
      001D3D 28 07                 6572 	jr	Z, 00147$
      001D3F CB 7A                 6573 	bit	7, d
      001D41 20 08                 6574 	jr	NZ, 00148$
      001D43 BF                    6575 	cp	a, a
      001D44 18 05                 6576 	jr	00148$
      001D46                       6577 00147$:
      001D46 CB 7A                 6578 	bit	7, d
      001D48 28 01                 6579 	jr	Z, 00148$
      001D4A 37                    6580 	scf
      001D4B                       6581 00148$:
      001D4B 38 29                 6582 	jr	C, 00101$
                                   6583 ;main.c:729: projectiles[i].y -= yOverflow;
      001D4D F8 02                 6584 	ldhl	sp,#2
      001D4F 2A                    6585 	ld	a, (hl+)
      001D50 5F                    6586 	ld	e, a
      001D51 56                    6587 	ld	d, (hl)
      001D52 1A                    6588 	ld	a, (de)
      001D53 4F                    6589 	ld	c, a
      001D54 13                    6590 	inc	de
      001D55 1A                    6591 	ld	a, (de)
                                   6592 ;main.c:742: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      001D56 47                    6593 	ld	b, a
      001D57 CB 78                 6594 	bit	7, b
      001D59 20 1B                 6595 	jr	NZ, 00101$
      001D5B 58                    6596 	ld	e, b
      001D5C 16 00                 6597 	ld	d, #0x00
      001D5E 3E 9A                 6598 	ld	a, #0x9a
      001D60 B9                    6599 	cp	a, c
      001D61 3E 00                 6600 	ld	a, #0x00
      001D63 98                    6601 	sbc	a, b
      001D64 CB 7B                 6602 	bit	7, e
      001D66 28 07                 6603 	jr	Z, 00149$
      001D68 CB 7A                 6604 	bit	7, d
      001D6A 20 08                 6605 	jr	NZ, 00150$
      001D6C BF                    6606 	cp	a, a
      001D6D 18 05                 6607 	jr	00150$
      001D6F                       6608 00149$:
      001D6F CB 7A                 6609 	bit	7, d
      001D71 28 01                 6610 	jr	Z, 00150$
      001D73 37                    6611 	scf
      001D74                       6612 00150$:
      001D74 30 25                 6613 	jr	NC, 00113$
      001D76                       6614 00101$:
                                   6615 ;main.c:744: projectiles[i].active = 0;
      001D76 F8 08                 6616 	ldhl	sp,	#8
      001D78 4E                    6617 	ld	c, (hl)
      001D79 06 00                 6618 	ld	b, #0x00
      001D7B 69                    6619 	ld	l, c
      001D7C 60                    6620 	ld	h, b
      001D7D 29                    6621 	add	hl, hl
      001D7E 29                    6622 	add	hl, hl
      001D7F 09                    6623 	add	hl, bc
      001D80 29                    6624 	add	hl, hl
      001D81 09                    6625 	add	hl, bc
      001D82 11r50r00              6626 	ld	de, #_projectiles
      001D85 19                    6627 	add	hl, de
      001D86 01 08 00              6628 	ld	bc, #0x0008
      001D89 09                    6629 	add	hl, bc
      001D8A 36 00                 6630 	ld	(hl), #0x00
                                   6631 ;main.c:745: set_sprite_tile(20+i, 0x7f);
      001D8C F8 07                 6632 	ldhl	sp,	#7
                                   6633 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001D8E 6E                    6634 	ld	l, (hl)
                                   6635 ;	spillPairReg hl
                                   6636 ;	spillPairReg hl
      001D8F 26 00                 6637 	ld	h, #0x00
                                   6638 ;	spillPairReg hl
                                   6639 ;	spillPairReg hl
      001D91 29                    6640 	add	hl, hl
      001D92 29                    6641 	add	hl, hl
      001D93 11r00r00              6642 	ld	de, #_shadow_OAM
      001D96 19                    6643 	add	hl, de
      001D97 23                    6644 	inc	hl
      001D98 23                    6645 	inc	hl
      001D99 36 7F                 6646 	ld	(hl), #0x7f
                                   6647 ;main.c:745: set_sprite_tile(20+i, 0x7f);
      001D9B                       6648 00113$:
                                   6649 ;main.c:727: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001D9B F8 08                 6650 	ldhl	sp,	#8
      001D9D 34                    6651 	inc	(hl)
      001D9E C3r58r1C              6652 	jp	00112$
      001DA1                       6653 00114$:
                                   6654 ;main.c:750: }
      001DA1 E8 09                 6655 	add	sp, #9
      001DA3 C9                    6656 	ret
                                   6657 ;main.c:753: void initProjectiles() {
                                   6658 ;	---------------------------------
                                   6659 ; Function initProjectiles
                                   6660 ; ---------------------------------
      001DA4                       6661 _initProjectiles::
                                   6662 ;main.c:754: set_sprite_data(20, 9, ProjectileTiles);
      001DA4 11r37r05              6663 	ld	de, #_ProjectileTiles
      001DA7 D5                    6664 	push	de
      001DA8 21 14 09              6665 	ld	hl, #0x914
      001DAB E5                    6666 	push	hl
      001DAC CDr00r00              6667 	call	_set_sprite_data
      001DAF E8 04                 6668 	add	sp, #4
                                   6669 ;main.c:756: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001DB1 AF                    6670 	xor	a, a
      001DB2                       6671 00103$:
      001DB2 21rDDr05              6672 	ld	hl, #_PROJECTILECOUNT
      001DB5 4E                    6673 	ld	c, (hl)
      001DB6 B9                    6674 	cp	a, c
      001DB7 D0                    6675 	ret	NC
      001DB8 3C                    6676 	inc	a
                                   6677 ;main.c:760: }
      001DB9 18 F7                 6678 	jr	00103$
                                   6679 ;main.c:762: void initGame() {
                                   6680 ;	---------------------------------
                                   6681 ; Function initGame
                                   6682 ; ---------------------------------
      001DBB                       6683 _initGame::
                                   6684 ;main.c:765: xDir = 0;
      001DBB 21r45r00              6685 	ld	hl, #_xDir
      001DBE 36 00                 6686 	ld	(hl), #0x00
                                   6687 ;main.c:766: yDir = -1;
      001DC0 21r46r00              6688 	ld	hl, #_yDir
      001DC3 36 FF                 6689 	ld	(hl), #0xff
                                   6690 ;main.c:767: xSpeed = 0;
      001DC5 21r47r00              6691 	ld	hl, #_xSpeed
      001DC8 36 00                 6692 	ld	(hl), #0x00
                                   6693 ;main.c:768: ySpeed = 0;
      001DCA 21r48r00              6694 	ld	hl, #_ySpeed
      001DCD 36 00                 6695 	ld	(hl), #0x00
                                   6696 ;main.c:771: playerX = 80<<5;
      001DCF 21r49r00              6697 	ld	hl, #_playerX
      001DD2 36 00                 6698 	ld	(hl), #0x00
      001DD4 23                    6699 	inc	hl
      001DD5 36 0A                 6700 	ld	(hl), #0x0a
                                   6701 ;main.c:772: playerY = 80<<5;
      001DD7 21r4Br00              6702 	ld	hl, #_playerY
      001DDA 36 00                 6703 	ld	(hl), #0x00
      001DDC 23                    6704 	inc	hl
      001DDD 36 0A                 6705 	ld	(hl), #0x0a
                                   6706 ;main.c:774: playerDrawX = 80;
      001DDF 21r4Dr00              6707 	ld	hl, #_playerDrawX
      001DE2 36 50                 6708 	ld	(hl), #0x50
                                   6709 ;main.c:775: playerDrawY = 80;
      001DE4 21r4Er00              6710 	ld	hl, #_playerDrawY
      001DE7 36 50                 6711 	ld	(hl), #0x50
                                   6712 ;main.c:778: bgX = 0;
      001DE9 AF                    6713 	xor	a, a
      001DEA 21r4Fr00              6714 	ld	hl, #_bgX
      001DED 22                    6715 	ld	(hl+), a
      001DEE 77                    6716 	ld	(hl), a
                                   6717 ;main.c:779: bgY = 0;
      001DEF AF                    6718 	xor	a, a
      001DF0 21r51r00              6719 	ld	hl, #_bgY
      001DF3 22                    6720 	ld	(hl+), a
      001DF4 77                    6721 	ld	(hl), a
                                   6722 ;main.c:781: hull = maxHull;
      001DF5 FArDFr05              6723 	ld	a, (#_maxHull)
      001DF8 EAr88r00              6724 	ld	(#_hull),a
                                   6725 ;main.c:782: shield = maxShield;
      001DFB FArE0r05              6726 	ld	a, (#_maxShield)
      001DFE EAr89r00              6727 	ld	(#_shield),a
                                   6728 ;main.c:784: DISPLAY_ON;
      001E01 F0r00                 6729 	ldh	a, (_LCDC_REG + 0)
      001E03 F6 80                 6730 	or	a, #0x80
      001E05 E0r00                 6731 	ldh	(_LCDC_REG + 0), a
                                   6732 ;main.c:785: SPRITES_8x8;
      001E07 F0r00                 6733 	ldh	a, (_LCDC_REG + 0)
      001E09 E6 FB                 6734 	and	a, #0xfb
      001E0B E0r00                 6735 	ldh	(_LCDC_REG + 0), a
                                   6736 ;main.c:786: set_sprite_data(0, 8, cross);
      001E0D 11r07r00              6737 	ld	de, #_cross
      001E10 D5                    6738 	push	de
      001E11 21 00 08              6739 	ld	hl, #0x800
      001E14 E5                    6740 	push	hl
      001E15 CDr00r00              6741 	call	_set_sprite_data
      001E18 E8 04                 6742 	add	sp, #4
                                   6743 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001E1A 21r02r00              6744 	ld	hl, #(_shadow_OAM + 2)
      001E1D 36 00                 6745 	ld	(hl), #0x00
                                   6746 ;main.c:789: SHOW_SPRITES;
      001E1F F0r00                 6747 	ldh	a, (_LCDC_REG + 0)
      001E21 F6 02                 6748 	or	a, #0x02
      001E23 E0r00                 6749 	ldh	(_LCDC_REG + 0), a
                                   6750 ;main.c:793: font_init();
      001E25 CDr00r00              6751 	call	_font_init
                                   6752 ;main.c:795: min_font = font_load(font_min); // 36 tiles of characters
      001E28 11r00r00              6753 	ld	de, #_font_min
      001E2B D5                    6754 	push	de
      001E2C CDr00r00              6755 	call	_font_load
      001E2F E1                    6756 	pop	hl
      001E30 21r8Ar00              6757 	ld	hl, #_min_font
      001E33 7B                    6758 	ld	a, e
      001E34 22                    6759 	ld	(hl+), a
                                   6760 ;main.c:796: font_set(min_font);
      001E35 7A                    6761 	ld	a, d
      001E36 32                    6762 	ld	(hl-), a
      001E37 2A                    6763 	ld	a, (hl+)
      001E38 5F                    6764 	ld	e, a
      001E39 56                    6765 	ld	d, (hl)
      001E3A D5                    6766 	push	de
      001E3B CDr00r00              6767 	call	_font_set
      001E3E E1                    6768 	pop	hl
                                   6769 ;main.c:797: set_win_tiles(1,0,4,1,hullabel);
      001E3F 11r00r00              6770 	ld	de, #_hullabel
      001E42 D5                    6771 	push	de
      001E43 21 04 01              6772 	ld	hl, #0x104
      001E46 E5                    6773 	push	hl
      001E47 21 01 00              6774 	ld	hl, #0x01
      001E4A E5                    6775 	push	hl
      001E4B CDr00r00              6776 	call	_set_win_tiles
      001E4E E8 06                 6777 	add	sp, #6
                                   6778 ;main.c:798: set_win_tiles(1,1,4,1,shieldlabel);
      001E50 11r04r00              6779 	ld	de, #_shieldlabel
      001E53 D5                    6780 	push	de
      001E54 21 04 01              6781 	ld	hl, #0x104
      001E57 E5                    6782 	push	hl
      001E58 21 01 01              6783 	ld	hl, #0x101
      001E5B E5                    6784 	push	hl
      001E5C CDr00r00              6785 	call	_set_win_tiles
      001E5F E8 06                 6786 	add	sp, #6
                                   6787 ;main.c:803: set_bkg_data(0x50,1,healthblock);
      001E61 11r07r05              6788 	ld	de, #_healthblock
      001E64 D5                    6789 	push	de
      001E65 21 50 01              6790 	ld	hl, #0x150
      001E68 E5                    6791 	push	hl
      001E69 CDr00r00              6792 	call	_set_bkg_data
      001E6C E8 04                 6793 	add	sp, #4
                                   6794 ;main.c:805: setHealthBar(0, hull);
      001E6E FAr88r00              6795 	ld	a, (#_hull)
      001E71 67                    6796 	ld	h, a
      001E72 2E 00                 6797 	ld	l, #0x00
      001E74 E5                    6798 	push	hl
      001E75 CDrE2r05              6799 	call	_setHealthBar
      001E78 E1                    6800 	pop	hl
                                   6801 ;main.c:806: setHealthBar(1, shield);
      001E79 FAr89r00              6802 	ld	a, (#_shield)
      001E7C 67                    6803 	ld	h, a
      001E7D 2E 01                 6804 	ld	l, #0x01
      001E7F E5                    6805 	push	hl
      001E80 CDrE2r05              6806 	call	_setHealthBar
      001E83 E1                    6807 	pop	hl
                                   6808 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      001E84 3E 07                 6809 	ld	a, #0x07
      001E86 E0r00                 6810 	ldh	(_WX_REG + 0), a
      001E88 3E 7E                 6811 	ld	a, #0x7e
      001E8A E0r00                 6812 	ldh	(_WY_REG + 0), a
                                   6813 ;main.c:813: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      001E8C 11r87r04              6814 	ld	de, #_backgroundtiles
      001E8F D5                    6815 	push	de
      001E90 21 25 08              6816 	ld	hl, #0x825
      001E93 E5                    6817 	push	hl
      001E94 CDr00r00              6818 	call	_set_bkg_data
      001E97 E8 04                 6819 	add	sp, #4
                                   6820 ;main.c:814: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      001E99 11r87r00              6821 	ld	de, #_background1
      001E9C D5                    6822 	push	de
      001E9D 21 20 20              6823 	ld	hl, #0x2020
      001EA0 E5                    6824 	push	hl
      001EA1 AF                    6825 	xor	a, a
      001EA2 0F                    6826 	rrca
      001EA3 F5                    6827 	push	af
      001EA4 CDr00r00              6828 	call	_set_bkg_tiles
      001EA7 E8 06                 6829 	add	sp, #6
                                   6830 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001EA9 AF                    6831 	xor	a, a
      001EAA E0r00                 6832 	ldh	(_SCX_REG + 0), a
      001EAC AF                    6833 	xor	a, a
      001EAD E0r00                 6834 	ldh	(_SCY_REG + 0), a
                                   6835 ;main.c:817: set_bkg_data(0x51, 9, ProjectileTiles);
      001EAF 11r37r05              6836 	ld	de, #_ProjectileTiles
      001EB2 D5                    6837 	push	de
      001EB3 21 51 09              6838 	ld	hl, #0x951
      001EB6 E5                    6839 	push	hl
      001EB7 CDr00r00              6840 	call	_set_bkg_data
      001EBA E8 04                 6841 	add	sp, #4
                                   6842 ;main.c:819: set_win_tiles(10, 0,5,1,weaponlabel);
      001EBC 11r08r00              6843 	ld	de, #_weaponlabel
      001EBF D5                    6844 	push	de
      001EC0 21 05 01              6845 	ld	hl, #0x105
      001EC3 E5                    6846 	push	hl
      001EC4 21 0A 00              6847 	ld	hl, #0x0a
      001EC7 E5                    6848 	push	hl
      001EC8 CDr00r00              6849 	call	_set_win_tiles
      001ECB E8 06                 6850 	add	sp, #6
                                   6851 ;main.c:820: set_win_tiles(10, 1,5,1,scorelabel);
      001ECD 11r0Dr00              6852 	ld	de, #_scorelabel
      001ED0 D5                    6853 	push	de
      001ED1 21 05 01              6854 	ld	hl, #0x105
      001ED4 E5                    6855 	push	hl
      001ED5 21 0A 01              6856 	ld	hl, #0x10a
      001ED8 E5                    6857 	push	hl
      001ED9 CDr00r00              6858 	call	_set_win_tiles
      001EDC E8 06                 6859 	add	sp, #6
                                   6860 ;main.c:822: setGunIcon();
      001EDE CDrE4r17              6861 	call	_setGunIcon
                                   6862 ;main.c:823: SHOW_BKG;
      001EE1 F0r00                 6863 	ldh	a, (_LCDC_REG + 0)
      001EE3 F6 01                 6864 	or	a, #0x01
      001EE5 E0r00                 6865 	ldh	(_LCDC_REG + 0), a
                                   6866 ;main.c:824: SHOW_WIN;;
      001EE7 F0r00                 6867 	ldh	a, (_LCDC_REG + 0)
      001EE9 F6 20                 6868 	or	a, #0x20
      001EEB E0r00                 6869 	ldh	(_LCDC_REG + 0), a
                                   6870 ;main.c:830: }
      001EED C9                    6871 	ret
                                   6872 ;main.c:832: void main(){
                                   6873 ;	---------------------------------
                                   6874 ; Function main
                                   6875 ; ---------------------------------
      001EEE                       6876 _main::
                                   6877 ;main.c:835: STAT_REG = 0x45;
      001EEE 3E 45                 6878 	ld	a, #0x45
      001EF0 E0r00                 6879 	ldh	(_STAT_REG + 0), a
                                   6880 ;main.c:836: LYC_REG = 0x7e;//0x08;  //  Fire LCD Interupt on the 8th scan line (just first row)
      001EF2 3E 7E                 6881 	ld	a, #0x7e
      001EF4 E0r00                 6882 	ldh	(_LYC_REG + 0), a
                                   6883 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      001EF6 F3                    6884 	di
                                   6885 ;main.c:838: add_LCD(interruptLCD);
      001EF7 11r00r00              6886 	ld	de, #_interruptLCD
      001EFA D5                    6887 	push	de
      001EFB CDr00r00              6888 	call	_add_LCD
      001EFE 33                    6889 	inc	sp
      001EFF 33                    6890 	inc	sp
                                   6891 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      001F00 FB                    6892 	ei
                                   6893 ;main.c:840: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      001F01 3E 03                 6894 	ld	a, #0x03
      001F03 F5                    6895 	push	af
      001F04 33                    6896 	inc	sp
      001F05 CDr00r00              6897 	call	_set_interrupts
      001F08 33                    6898 	inc	sp
                                   6899 ;main.c:846: NR52_REG = 0x80; // sound on 
      001F09 3E 80                 6900 	ld	a, #0x80
      001F0B E0r00                 6901 	ldh	(_NR52_REG + 0), a
                                   6902 ;main.c:847: NR50_REG = 0x77; // volume
      001F0D 3E 77                 6903 	ld	a, #0x77
      001F0F E0r00                 6904 	ldh	(_NR50_REG + 0), a
                                   6905 ;main.c:848: NR51_REG = 0xFF; // all channels
      001F11 3E FF                 6906 	ld	a, #0xff
      001F13 E0r00                 6907 	ldh	(_NR51_REG + 0), a
                                   6908 ;main.c:852: waitpad(J_A);
      001F15 3E 10                 6909 	ld	a, #0x10
      001F17 F5                    6910 	push	af
      001F18 33                    6911 	inc	sp
      001F19 CDr00r00              6912 	call	_waitpad
      001F1C 33                    6913 	inc	sp
                                   6914 ;main.c:853: uint16_t seed = LY_REG;
      001F1D F0r00                 6915 	ldh	a, (_LY_REG + 0)
      001F1F 4F                    6916 	ld	c, a
      001F20 06 00                 6917 	ld	b, #0x00
                                   6918 ;main.c:854: seed |= (uint16_t)DIV_REG << 8;
      001F22 F0r00                 6919 	ldh	a, (_DIV_REG + 0)
      001F24 5F                    6920 	ld	e, a
      001F25 AF                    6921 	xor	a, a
      001F26 B1                    6922 	or	a, c
      001F27 4F                    6923 	ld	c, a
      001F28 7B                    6924 	ld	a, e
      001F29 B0                    6925 	or	a, b
      001F2A 47                    6926 	ld	b, a
                                   6927 ;main.c:855: initrand(seed);
      001F2B C5                    6928 	push	bc
      001F2C CDr00r00              6929 	call	_initrand
      001F2F E1                    6930 	pop	hl
                                   6931 ;main.c:860: initGame();
      001F30 CDrBBr1D              6932 	call	_initGame
                                   6933 ;main.c:861: initEnemies(1);
      001F33 3E 01                 6934 	ld	a, #0x01
      001F35 F5                    6935 	push	af
      001F36 33                    6936 	inc	sp
      001F37 CDr85r0E              6937 	call	_initEnemies
      001F3A 33                    6938 	inc	sp
                                   6939 ;main.c:862: initProjectiles();
      001F3B CDrA4r1D              6940 	call	_initProjectiles
                                   6941 ;main.c:864: while(1) {
      001F3E                       6942 00114$:
                                   6943 ;main.c:865: SHOW_SPRITES;
      001F3E F0r00                 6944 	ldh	a, (_LCDC_REG + 0)
      001F40 F6 02                 6945 	or	a, #0x02
      001F42 E0r00                 6946 	ldh	(_LCDC_REG + 0), a
                                   6947 ;main.c:867: joydata = joypad(); // query for button states
      001F44 CDr00r00              6948 	call	_joypad
      001F47 21r87r00              6949 	ld	hl, #_joydata
      001F4A 73                    6950 	ld	(hl), e
                                   6951 ;main.c:869: updateDirection(); // set player direction
      001F4B CDrF3r06              6952 	call	_updateDirection
                                   6953 ;main.c:872: move(); 
      001F4E CDr42r0F              6954 	call	_move
                                   6955 ;main.c:874: updateEnemyPositions();
      001F51 CDrE5r08              6956 	call	_updateEnemyPositions
                                   6957 ;main.c:877: checkCollision(); 
      001F54 CDr92r14              6958 	call	_checkCollision
                                   6959 ;main.c:651: if (shield < maxShield) {
      001F57 21rE0r05              6960 	ld	hl, #_maxShield
      001F5A 4E                    6961 	ld	c, (hl)
      001F5B 59                    6962 	ld	e, c
      001F5C 21r89r00              6963 	ld	hl, #_shield
      001F5F 56                    6964 	ld	d, (hl)
      001F60 7E                    6965 	ld	a, (hl)
      001F61 91                    6966 	sub	a, c
      001F62 CB 7B                 6967 	bit	7, e
      001F64 28 07                 6968 	jr	Z, 00171$
      001F66 CB 7A                 6969 	bit	7, d
      001F68 20 08                 6970 	jr	NZ, 00172$
      001F6A BF                    6971 	cp	a, a
      001F6B 18 05                 6972 	jr	00172$
      001F6D                       6973 00171$:
      001F6D CB 7A                 6974 	bit	7, d
      001F6F 28 01                 6975 	jr	Z, 00172$
      001F71 37                    6976 	scf
      001F72                       6977 00172$:
      001F72 30 04                 6978 	jr	NC, 00122$
                                   6979 ;main.c:652: shield += 1;
      001F74 21r89r00              6980 	ld	hl, #_shield
      001F77 34                    6981 	inc	(hl)
      001F78                       6982 00122$:
                                   6983 ;main.c:654: setHealthBar(0, hull);
      001F78 FAr88r00              6984 	ld	a, (#_hull)
      001F7B 67                    6985 	ld	h, a
      001F7C 2E 00                 6986 	ld	l, #0x00
      001F7E E5                    6987 	push	hl
      001F7F CDrE2r05              6988 	call	_setHealthBar
      001F82 E1                    6989 	pop	hl
                                   6990 ;main.c:655: setHealthBar(1, shield);
      001F83 FAr89r00              6991 	ld	a, (#_shield)
      001F86 67                    6992 	ld	h, a
      001F87 2E 01                 6993 	ld	l, #0x01
      001F89 E5                    6994 	push	hl
      001F8A CDrE2r05              6995 	call	_setHealthBar
      001F8D E1                    6996 	pop	hl
                                   6997 ;main.c:882: if (joydata & J_B && fireCooldown == 0) {
      001F8E FAr87r00              6998 	ld	a, (#_joydata)
      001F91 CB 6F                 6999 	bit	5, a
      001F93 28 09                 7000 	jr	Z, 00102$
      001F95 FAr44r00              7001 	ld	a, (#_fireCooldown)
      001F98 B7                    7002 	or	a, a
      001F99 20 03                 7003 	jr	NZ, 00102$
                                   7004 ;main.c:883: fire();
      001F9B CDrFFr17              7005 	call	_fire
      001F9E                       7006 00102$:
                                   7007 ;main.c:885: if (fireCooldown > 0) {
      001F9E 21r44r00              7008 	ld	hl, #_fireCooldown
      001FA1 7E                    7009 	ld	a, (hl)
      001FA2 B7                    7010 	or	a, a
      001FA3 28 01                 7011 	jr	Z, 00105$
                                   7012 ;main.c:886: --fireCooldown;
      001FA5 35                    7013 	dec	(hl)
      001FA6                       7014 00105$:
                                   7015 ;main.c:889: if (joydata & J_SELECT && switchDelay == 0) {
      001FA6 FAr87r00              7016 	ld	a, (#_joydata)
      001FA9 CB 77                 7017 	bit	6, a
      001FAB 28 1F                 7018 	jr	Z, 00109$
      001FAD FAr59r00              7019 	ld	a, (#_switchDelay)
      001FB0 B7                    7020 	or	a, a
      001FB1 20 19                 7021 	jr	NZ, 00109$
                                   7022 ;main.c:890: currentGun++;
      001FB3 21r58r00              7023 	ld	hl, #_currentGun
      001FB6 34                    7024 	inc	(hl)
                                   7025 ;main.c:891: if (currentGun >= GUNCOUNT) {
      001FB7 21rE1r05              7026 	ld	hl, #_GUNCOUNT
      001FBA 4E                    7027 	ld	c, (hl)
      001FBB 21r58r00              7028 	ld	hl, #_currentGun
      001FBE 7E                    7029 	ld	a, (hl)
      001FBF 91                    7030 	sub	a, c
      001FC0 38 02                 7031 	jr	C, 00107$
                                   7032 ;main.c:892: currentGun = 0;
      001FC2 36 00                 7033 	ld	(hl), #0x00
      001FC4                       7034 00107$:
                                   7035 ;main.c:894: setGunIcon();
      001FC4 CDrE4r17              7036 	call	_setGunIcon
                                   7037 ;main.c:895: switchDelay = 30;
      001FC7 21r59r00              7038 	ld	hl, #_switchDelay
      001FCA 36 1E                 7039 	ld	(hl), #0x1e
      001FCC                       7040 00109$:
                                   7041 ;main.c:897: if (switchDelay != 0) {
      001FCC 21r59r00              7042 	ld	hl, #_switchDelay
      001FCF 7E                    7043 	ld	a, (hl)
      001FD0 B7                    7044 	or	a, a
      001FD1 28 01                 7045 	jr	Z, 00112$
                                   7046 ;main.c:898: switchDelay--;
      001FD3 35                    7047 	dec	(hl)
      001FD4                       7048 00112$:
                                   7049 ;main.c:900: moveProjectiles();
      001FD4 CDr52r1C              7050 	call	_moveProjectiles
                                   7051 ;main.c:912: SHOW_WIN;	
      001FD7 F0r00                 7052 	ldh	a, (_LCDC_REG + 0)
      001FD9 F6 20                 7053 	or	a, #0x20
      001FDB E0r00                 7054 	ldh	(_LCDC_REG + 0), a
                                   7055 ;main.c:913: wait_vbl_done(); // Idle until next frame
      001FDD CDr00r00              7056 	call	_wait_vbl_done
                                   7057 ;main.c:918: }
      001FE0 C3r3Er1F              7058 	jp	00114$
                                   7059 	.area _CODE
                                   7060 	.area _INITIALIZER
      000000                       7061 __xinit__hullabel:
      000000 12                    7062 	.db #0x12	; 18
      000001 1F                    7063 	.db #0x1f	; 31
      000002 16                    7064 	.db #0x16	; 22
      000003 16                    7065 	.db #0x16	; 22
      000004                       7066 __xinit__shieldlabel:
      000004 1D                    7067 	.db #0x1d	; 29
      000005 12                    7068 	.db #0x12	; 18
      000006 16                    7069 	.db #0x16	; 22
      000007 0E                    7070 	.db #0x0e	; 14
      000008                       7071 __xinit__weaponlabel:
      000008 21                    7072 	.db #0x21	; 33
      000009 0F                    7073 	.db #0x0f	; 15
      00000A 0B                    7074 	.db #0x0b	; 11
      00000B 1A                    7075 	.db #0x1a	; 26
      00000C 18                    7076 	.db #0x18	; 24
      00000D                       7077 __xinit__scorelabel:
      00000D 1D                    7078 	.db #0x1d	; 29
      00000E 0D                    7079 	.db #0x0d	; 13
      00000F 19                    7080 	.db #0x19	; 25
      000010 1C                    7081 	.db #0x1c	; 28
      000011 0F                    7082 	.db #0x0f	; 15
      000012                       7083 __xinit__blob:
      000012 00 00                 7084 	.dw #0x0000
      000014 00 00                 7085 	.dw #0x0000
      000016 00                    7086 	.db #0x00	;  0
      000017 00                    7087 	.db #0x00	;  0
      000018 09                    7088 	.db #0x09	; 9
      000019 00                    7089 	.db #0x00	; 0
      00001A 01                    7090 	.db #0x01	; 1
      00001B 01                    7091 	.db #0x01	; 1
      00001C 01                    7092 	.db #0x01	; 1
      00001D 32                    7093 	.db #0x32	; 50	'2'
      00001E 03                    7094 	.db #0x03	;  3
      00001F 01                    7095 	.db #0x01	; 1
      000020 00                    7096 	.db #0x00	;  0
      000021 00                    7097 	.db #0x00	;  0
      000022                       7098 __xinit__singleGun:
      000022 00 00                 7099 	.dw #0x0000
      000024 00 00                 7100 	.dw #0x0000
      000026 00                    7101 	.db #0x00	;  0
      000027 FF                    7102 	.db #0xff	; -1
      000028 02                    7103 	.db #0x02	; 2
      000029 00                    7104 	.db #0x00	; 0
      00002A 01                    7105 	.db #0x01	; 1
      00002B 0F                    7106 	.db #0x0f	; 15
      00002C 14                    7107 	.db #0x14	; 20
      00002D                       7108 __xinit__doubleGun:
      00002D 00 00                 7109 	.dw #0x0000
      00002F 00 00                 7110 	.dw #0x0000
      000031 00                    7111 	.db #0x00	;  0
      000032 FF                    7112 	.db #0xff	; -1
      000033 02                    7113 	.db #0x02	; 2
      000034 00                    7114 	.db #0x00	; 0
      000035 01                    7115 	.db #0x01	; 1
      000036 0F                    7116 	.db #0x0f	; 15
      000037 17                    7117 	.db #0x17	; 23
      000038                       7118 __xinit__missile:
      000038 00 00                 7119 	.dw #0x0000
      00003A 00 00                 7120 	.dw #0x0000
      00003C 00                    7121 	.db #0x00	;  0
      00003D FF                    7122 	.db #0xff	; -1
      00003E 01                    7123 	.db #0x01	; 1
      00003F 00                    7124 	.db #0x00	; 0
      000040 01                    7125 	.db #0x01	; 1
      000041 1E                    7126 	.db #0x1e	; 30
      000042 1A                    7127 	.db #0x1a	; 26
      000043                       7128 __xinit__oldestProjectile:
      000043 00                    7129 	.db #0x00	; 0
      000044                       7130 __xinit__fireCooldown:
      000044 00                    7131 	.db #0x00	; 0
      000045                       7132 __xinit__xDir:
      000045 00                    7133 	.db #0x00	;  0
      000046                       7134 __xinit__yDir:
      000046 FF                    7135 	.db #0xff	; -1
      000047                       7136 __xinit__xSpeed:
      000047 00                    7137 	.db #0x00	;  0
      000048                       7138 __xinit__ySpeed:
      000048 00                    7139 	.db #0x00	;  0
      000049                       7140 __xinit__playerX:
      000049 00 0A                 7141 	.dw #0x0a00
      00004B                       7142 __xinit__playerY:
      00004B 00 0A                 7143 	.dw #0x0a00
      00004D                       7144 __xinit__playerDrawX:
      00004D 50                    7145 	.db #0x50	; 80	'P'
      00004E                       7146 __xinit__playerDrawY:
      00004E 50                    7147 	.db #0x50	; 80	'P'
      00004F                       7148 __xinit__bgX:
      00004F 00 00                 7149 	.dw #0x0000
      000051                       7150 __xinit__bgY:
      000051 00 00                 7151 	.dw #0x0000
      000053                       7152 __xinit__xOverflow:
      000053 00 00                 7153 	.dw #0x0000
      000055                       7154 __xinit__yOverflow:
      000055 00 00                 7155 	.dw #0x0000
      000057                       7156 __xinit__enemyCollisionCount:
      000057 00                    7157 	.db #0x00	; 0
      000058                       7158 __xinit__currentGun:
      000058 00                    7159 	.db #0x00	; 0
      000059                       7160 __xinit__switchDelay:
      000059 00                    7161 	.db #0x00	; 0
      00005A                       7162 __xinit__gunMap:
      00005A 51                    7163 	.db #0x51	; 81	'Q'
      00005B 56                    7164 	.db #0x56	; 86	'V'
      00005C 58                    7165 	.db #0x58	; 88	'X'
                                   7166 	.area _CABS (ABS)
