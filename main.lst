                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _moveProjectiles
                                     15 	.globl _fire
                                     16 	.globl _setGunIcon
                                     17 	.globl _checkCollision
                                     18 	.globl _takeDamage
                                     19 	.globl _move
                                     20 	.globl _updateEnemyPositions
                                     21 	.globl _initEnemies
                                     22 	.globl _playSound
                                     23 	.globl _updateDirection
                                     24 	.globl _incrementScore
                                     25 	.globl _updateScore
                                     26 	.globl _setHealthBar
                                     27 	.globl _interruptLCD
                                     28 	.globl _bcd2text
                                     29 	.globl _bcd_add
                                     30 	.globl _rand
                                     31 	.globl _initrand
                                     32 	.globl _font_set
                                     33 	.globl _font_load
                                     34 	.globl _font_init
                                     35 	.globl _set_sprite_data
                                     36 	.globl _set_win_tiles
                                     37 	.globl _set_bkg_tiles
                                     38 	.globl _set_bkg_data
                                     39 	.globl _wait_vbl_done
                                     40 	.globl _set_interrupts
                                     41 	.globl _waitpad
                                     42 	.globl _joypad
                                     43 	.globl _add_LCD
                                     44 	.globl _INCREMENT
                                     45 	.globl _bcd
                                     46 	.globl _score
                                     47 	.globl _gunMap
                                     48 	.globl _switchDelay
                                     49 	.globl _currentGun
                                     50 	.globl _enemyCollisionCount
                                     51 	.globl _yOverflow
                                     52 	.globl _xOverflow
                                     53 	.globl _bgY
                                     54 	.globl _bgX
                                     55 	.globl _playerDrawY
                                     56 	.globl _playerDrawX
                                     57 	.globl _playerY
                                     58 	.globl _playerX
                                     59 	.globl _ySpeed
                                     60 	.globl _xSpeed
                                     61 	.globl _yDir
                                     62 	.globl _xDir
                                     63 	.globl _fireCooldown
                                     64 	.globl _oldestProjectile
                                     65 	.globl _missile
                                     66 	.globl _doubleGun
                                     67 	.globl _singleGun
                                     68 	.globl _bigblob
                                     69 	.globl _blob
                                     70 	.globl _scorelabel
                                     71 	.globl _weaponlabel
                                     72 	.globl _shieldlabel
                                     73 	.globl _hullabel
                                     74 	.globl _min_font
                                     75 	.globl _shield
                                     76 	.globl _hull
                                     77 	.globl _joydata
                                     78 	.globl _projectiles
                                     79 	.globl _enemies
                                     80 	.globl _GUNCOUNT
                                     81 	.globl _maxShield
                                     82 	.globl _maxHull
                                     83 	.globl _PLAYERSIZE
                                     84 	.globl _PROJECTILECOUNT
                                     85 	.globl _ySpawnPositions
                                     86 	.globl _xSpawnPositions
                                     87 	.globl _ENEMYCOUNT
                                     88 	.globl _EMPTYSPRITE
                                     89 	.globl _BLANK
                                     90 	.globl _BLANKSIZE
                                     91 	.globl _Player1
                                     92 	.globl _ProjectileTiles
                                     93 	.globl _largeenemies
                                     94 	.globl _enemy1
                                     95 	.globl _healthblock
                                     96 	.globl _backgroundtiles
                                     97 	.globl _background1
                                     98 	.globl _cross
                                     99 ;--------------------------------------------------------
                                    100 ; special function registers
                                    101 ;--------------------------------------------------------
                                    102 ;--------------------------------------------------------
                                    103 ; ram data
                                    104 ;--------------------------------------------------------
                                    105 	.area _DATA
      000000                        106 _enemies::
      000000                        107 	.ds 80
      000050                        108 _projectiles::
      000050                        109 	.ds 60
      00008C                        110 _joydata::
      00008C                        111 	.ds 1
      00008D                        112 _hull::
      00008D                        113 	.ds 1
      00008E                        114 _shield::
      00008E                        115 	.ds 1
      00008F                        116 _min_font::
      00008F                        117 	.ds 2
                                    118 ;--------------------------------------------------------
                                    119 ; ram data
                                    120 ;--------------------------------------------------------
                                    121 	.area _INITIALIZED
      000000                        122 _hullabel::
      000000                        123 	.ds 4
      000004                        124 _shieldlabel::
      000004                        125 	.ds 4
      000008                        126 _weaponlabel::
      000008                        127 	.ds 4
      00000C                        128 _scorelabel::
      00000C                        129 	.ds 4
      000010                        130 _blob::
      000010                        131 	.ds 16
      000020                        132 _bigblob::
      000020                        133 	.ds 16
      000030                        134 _singleGun::
      000030                        135 	.ds 12
      00003C                        136 _doubleGun::
      00003C                        137 	.ds 12
      000048                        138 _missile::
      000048                        139 	.ds 12
      000054                        140 _oldestProjectile::
      000054                        141 	.ds 1
      000055                        142 _fireCooldown::
      000055                        143 	.ds 1
      000056                        144 _xDir::
      000056                        145 	.ds 1
      000057                        146 _yDir::
      000057                        147 	.ds 1
      000058                        148 _xSpeed::
      000058                        149 	.ds 1
      000059                        150 _ySpeed::
      000059                        151 	.ds 1
      00005A                        152 _playerX::
      00005A                        153 	.ds 2
      00005C                        154 _playerY::
      00005C                        155 	.ds 2
      00005E                        156 _playerDrawX::
      00005E                        157 	.ds 1
      00005F                        158 _playerDrawY::
      00005F                        159 	.ds 1
      000060                        160 _bgX::
      000060                        161 	.ds 2
      000062                        162 _bgY::
      000062                        163 	.ds 2
      000064                        164 _xOverflow::
      000064                        165 	.ds 2
      000066                        166 _yOverflow::
      000066                        167 	.ds 2
      000068                        168 _enemyCollisionCount::
      000068                        169 	.ds 1
      000069                        170 _currentGun::
      000069                        171 	.ds 1
      00006A                        172 _switchDelay::
      00006A                        173 	.ds 1
      00006B                        174 _gunMap::
      00006B                        175 	.ds 3
      00006E                        176 _score::
      00006E                        177 	.ds 2
      000070                        178 _bcd::
      000070                        179 	.ds 4
      000074                        180 _INCREMENT::
      000074                        181 	.ds 4
                                    182 ;--------------------------------------------------------
                                    183 ; absolute external ram data
                                    184 ;--------------------------------------------------------
                                    185 	.area _DABS (ABS)
                                    186 ;--------------------------------------------------------
                                    187 ; global & static initialisations
                                    188 ;--------------------------------------------------------
                                    189 	.area _HOME
                                    190 	.area _GSINIT
                                    191 	.area _GSFINAL
                                    192 	.area _GSINIT
                                    193 ;--------------------------------------------------------
                                    194 ; Home
                                    195 ;--------------------------------------------------------
                                    196 	.area _HOME
                                    197 	.area _HOME
                                    198 ;--------------------------------------------------------
                                    199 ; code
                                    200 ;--------------------------------------------------------
                                    201 	.area _CODE
                                    202 ;main.c:102: void interruptLCD()
                                    203 ;	---------------------------------
                                    204 ; Function interruptLCD
                                    205 ; ---------------------------------
      000000                        206 _interruptLCD::
                                    207 ;main.c:104: HIDE_SPRITES;
      000000 F0r00                  208 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  209 	and	a, #0xfd
      000004 E0r00                  210 	ldh	(_LCDC_REG + 0), a
                                    211 ;main.c:105: }
      000006 C9                     212 	ret
      000007                        213 _cross:
      000007 18                     214 	.db #0x18	; 24
      000008 18                     215 	.db #0x18	; 24
      000009 18                     216 	.db #0x18	; 24
      00000A 18                     217 	.db #0x18	; 24
      00000B 3C                     218 	.db #0x3c	; 60
      00000C 3C                     219 	.db #0x3c	; 60
      00000D 3C                     220 	.db #0x3c	; 60
      00000E 3C                     221 	.db #0x3c	; 60
      00000F 7E                     222 	.db #0x7e	; 126
      000010 7E                     223 	.db #0x7e	; 126
      000011 7E                     224 	.db #0x7e	; 126
      000012 7E                     225 	.db #0x7e	; 126
      000013 FF                     226 	.db #0xff	; 255
      000014 FF                     227 	.db #0xff	; 255
      000015 FF                     228 	.db #0xff	; 255
      000016 FF                     229 	.db #0xff	; 255
      000017 0F                     230 	.db #0x0f	; 15
      000018 0F                     231 	.db #0x0f	; 15
      000019 3F                     232 	.db #0x3f	; 63
      00001A 3F                     233 	.db #0x3f	; 63
      00001B FF                     234 	.db #0xff	; 255
      00001C FF                     235 	.db #0xff	; 255
      00001D FF                     236 	.db #0xff	; 255
      00001E FF                     237 	.db #0xff	; 255
      00001F 7E                     238 	.db #0x7e	; 126
      000020 7E                     239 	.db #0x7e	; 126
      000021 3E                     240 	.db #0x3e	; 62
      000022 3E                     241 	.db #0x3e	; 62
      000023 1C                     242 	.db #0x1c	; 28
      000024 1C                     243 	.db #0x1c	; 28
      000025 0C                     244 	.db #0x0c	; 12
      000026 0C                     245 	.db #0x0c	; 12
      000027 C0                     246 	.db #0xc0	; 192
      000028 C0                     247 	.db #0xc0	; 192
      000029 F0                     248 	.db #0xf0	; 240
      00002A F0                     249 	.db #0xf0	; 240
      00002B FC                     250 	.db #0xfc	; 252
      00002C FC                     251 	.db #0xfc	; 252
      00002D FF                     252 	.db #0xff	; 255
      00002E FF                     253 	.db #0xff	; 255
      00002F FF                     254 	.db #0xff	; 255
      000030 FF                     255 	.db #0xff	; 255
      000031 FC                     256 	.db #0xfc	; 252
      000032 FC                     257 	.db #0xfc	; 252
      000033 F0                     258 	.db #0xf0	; 240
      000034 F0                     259 	.db #0xf0	; 240
      000035 C0                     260 	.db #0xc0	; 192
      000036 C0                     261 	.db #0xc0	; 192
      000037 0C                     262 	.db #0x0c	; 12
      000038 0C                     263 	.db #0x0c	; 12
      000039 1C                     264 	.db #0x1c	; 28
      00003A 1C                     265 	.db #0x1c	; 28
      00003B 3E                     266 	.db #0x3e	; 62
      00003C 3E                     267 	.db #0x3e	; 62
      00003D 7E                     268 	.db #0x7e	; 126
      00003E 7E                     269 	.db #0x7e	; 126
      00003F FF                     270 	.db #0xff	; 255
      000040 FF                     271 	.db #0xff	; 255
      000041 FF                     272 	.db #0xff	; 255
      000042 FF                     273 	.db #0xff	; 255
      000043 3F                     274 	.db #0x3f	; 63
      000044 3F                     275 	.db #0x3f	; 63
      000045 0F                     276 	.db #0x0f	; 15
      000046 0F                     277 	.db #0x0f	; 15
      000047 FF                     278 	.db #0xff	; 255
      000048 FF                     279 	.db #0xff	; 255
      000049 FF                     280 	.db #0xff	; 255
      00004A FF                     281 	.db #0xff	; 255
      00004B 7E                     282 	.db #0x7e	; 126
      00004C 7E                     283 	.db #0x7e	; 126
      00004D 7E                     284 	.db #0x7e	; 126
      00004E 7E                     285 	.db #0x7e	; 126
      00004F 3C                     286 	.db #0x3c	; 60
      000050 3C                     287 	.db #0x3c	; 60
      000051 3C                     288 	.db #0x3c	; 60
      000052 3C                     289 	.db #0x3c	; 60
      000053 18                     290 	.db #0x18	; 24
      000054 18                     291 	.db #0x18	; 24
      000055 18                     292 	.db #0x18	; 24
      000056 18                     293 	.db #0x18	; 24
      000057 30                     294 	.db #0x30	; 48	'0'
      000058 30                     295 	.db #0x30	; 48	'0'
      000059 38                     296 	.db #0x38	; 56	'8'
      00005A 38                     297 	.db #0x38	; 56	'8'
      00005B 7C                     298 	.db #0x7c	; 124
      00005C 7C                     299 	.db #0x7c	; 124
      00005D 7E                     300 	.db #0x7e	; 126
      00005E 7E                     301 	.db #0x7e	; 126
      00005F FF                     302 	.db #0xff	; 255
      000060 FF                     303 	.db #0xff	; 255
      000061 FF                     304 	.db #0xff	; 255
      000062 FF                     305 	.db #0xff	; 255
      000063 FC                     306 	.db #0xfc	; 252
      000064 FC                     307 	.db #0xfc	; 252
      000065 F0                     308 	.db #0xf0	; 240
      000066 F0                     309 	.db #0xf0	; 240
      000067 03                     310 	.db #0x03	; 3
      000068 03                     311 	.db #0x03	; 3
      000069 0F                     312 	.db #0x0f	; 15
      00006A 0F                     313 	.db #0x0f	; 15
      00006B 3F                     314 	.db #0x3f	; 63
      00006C 3F                     315 	.db #0x3f	; 63
      00006D FF                     316 	.db #0xff	; 255
      00006E FF                     317 	.db #0xff	; 255
      00006F FF                     318 	.db #0xff	; 255
      000070 FF                     319 	.db #0xff	; 255
      000071 3F                     320 	.db #0x3f	; 63
      000072 3F                     321 	.db #0x3f	; 63
      000073 0F                     322 	.db #0x0f	; 15
      000074 0F                     323 	.db #0x0f	; 15
      000075 03                     324 	.db #0x03	; 3
      000076 03                     325 	.db #0x03	; 3
      000077 F0                     326 	.db #0xf0	; 240
      000078 F0                     327 	.db #0xf0	; 240
      000079 FC                     328 	.db #0xfc	; 252
      00007A FC                     329 	.db #0xfc	; 252
      00007B FF                     330 	.db #0xff	; 255
      00007C FF                     331 	.db #0xff	; 255
      00007D FF                     332 	.db #0xff	; 255
      00007E FF                     333 	.db #0xff	; 255
      00007F 7E                     334 	.db #0x7e	; 126
      000080 7E                     335 	.db #0x7e	; 126
      000081 7C                     336 	.db #0x7c	; 124
      000082 7C                     337 	.db #0x7c	; 124
      000083 38                     338 	.db #0x38	; 56	'8'
      000084 38                     339 	.db #0x38	; 56	'8'
      000085 30                     340 	.db #0x30	; 48	'0'
      000086 30                     341 	.db #0x30	; 48	'0'
      000087                        342 _background1:
      000087 26                     343 	.db #0x26	; 38
      000088 26                     344 	.db #0x26	; 38
      000089 26                     345 	.db #0x26	; 38
      00008A 26                     346 	.db #0x26	; 38
      00008B 26                     347 	.db #0x26	; 38
      00008C 26                     348 	.db #0x26	; 38
      00008D 26                     349 	.db #0x26	; 38
      00008E 26                     350 	.db #0x26	; 38
      00008F 26                     351 	.db #0x26	; 38
      000090 26                     352 	.db #0x26	; 38
      000091 26                     353 	.db #0x26	; 38
      000092 2A                     354 	.db #0x2a	; 42
      000093 29                     355 	.db #0x29	; 41
      000094 26                     356 	.db #0x26	; 38
      000095 26                     357 	.db #0x26	; 38
      000096 26                     358 	.db #0x26	; 38
      000097 26                     359 	.db #0x26	; 38
      000098 26                     360 	.db #0x26	; 38
      000099 26                     361 	.db #0x26	; 38
      00009A 26                     362 	.db #0x26	; 38
      00009B 2C                     363 	.db #0x2c	; 44
      00009C 26                     364 	.db #0x26	; 38
      00009D 26                     365 	.db #0x26	; 38
      00009E 26                     366 	.db #0x26	; 38
      00009F 26                     367 	.db #0x26	; 38
      0000A0 26                     368 	.db #0x26	; 38
      0000A1 26                     369 	.db #0x26	; 38
      0000A2 26                     370 	.db #0x26	; 38
      0000A3 26                     371 	.db #0x26	; 38
      0000A4 26                     372 	.db #0x26	; 38
      0000A5 26                     373 	.db #0x26	; 38
      0000A6 26                     374 	.db #0x26	; 38
      0000A7 26                     375 	.db #0x26	; 38
      0000A8 2B                     376 	.db #0x2b	; 43
      0000A9 26                     377 	.db #0x26	; 38
      0000AA 26                     378 	.db #0x26	; 38
      0000AB 26                     379 	.db #0x26	; 38
      0000AC 26                     380 	.db #0x26	; 38
      0000AD 26                     381 	.db #0x26	; 38
      0000AE 26                     382 	.db #0x26	; 38
      0000AF 26                     383 	.db #0x26	; 38
      0000B0 26                     384 	.db #0x26	; 38
      0000B1 26                     385 	.db #0x26	; 38
      0000B2 26                     386 	.db #0x26	; 38
      0000B3 26                     387 	.db #0x26	; 38
      0000B4 26                     388 	.db #0x26	; 38
      0000B5 26                     389 	.db #0x26	; 38
      0000B6 26                     390 	.db #0x26	; 38
      0000B7 26                     391 	.db #0x26	; 38
      0000B8 26                     392 	.db #0x26	; 38
      0000B9 26                     393 	.db #0x26	; 38
      0000BA 26                     394 	.db #0x26	; 38
      0000BB 26                     395 	.db #0x26	; 38
      0000BC 26                     396 	.db #0x26	; 38
      0000BD 26                     397 	.db #0x26	; 38
      0000BE 26                     398 	.db #0x26	; 38
      0000BF 26                     399 	.db #0x26	; 38
      0000C0 26                     400 	.db #0x26	; 38
      0000C1 26                     401 	.db #0x26	; 38
      0000C2 26                     402 	.db #0x26	; 38
      0000C3 26                     403 	.db #0x26	; 38
      0000C4 26                     404 	.db #0x26	; 38
      0000C5 26                     405 	.db #0x26	; 38
      0000C6 26                     406 	.db #0x26	; 38
      0000C7 26                     407 	.db #0x26	; 38
      0000C8 26                     408 	.db #0x26	; 38
      0000C9 26                     409 	.db #0x26	; 38
      0000CA 26                     410 	.db #0x26	; 38
      0000CB 26                     411 	.db #0x26	; 38
      0000CC 26                     412 	.db #0x26	; 38
      0000CD 26                     413 	.db #0x26	; 38
      0000CE 26                     414 	.db #0x26	; 38
      0000CF 26                     415 	.db #0x26	; 38
      0000D0 26                     416 	.db #0x26	; 38
      0000D1 26                     417 	.db #0x26	; 38
      0000D2 26                     418 	.db #0x26	; 38
      0000D3 26                     419 	.db #0x26	; 38
      0000D4 26                     420 	.db #0x26	; 38
      0000D5 26                     421 	.db #0x26	; 38
      0000D6 26                     422 	.db #0x26	; 38
      0000D7 26                     423 	.db #0x26	; 38
      0000D8 26                     424 	.db #0x26	; 38
      0000D9 26                     425 	.db #0x26	; 38
      0000DA 26                     426 	.db #0x26	; 38
      0000DB 26                     427 	.db #0x26	; 38
      0000DC 26                     428 	.db #0x26	; 38
      0000DD 26                     429 	.db #0x26	; 38
      0000DE 26                     430 	.db #0x26	; 38
      0000DF 26                     431 	.db #0x26	; 38
      0000E0 26                     432 	.db #0x26	; 38
      0000E1 26                     433 	.db #0x26	; 38
      0000E2 26                     434 	.db #0x26	; 38
      0000E3 26                     435 	.db #0x26	; 38
      0000E4 26                     436 	.db #0x26	; 38
      0000E5 26                     437 	.db #0x26	; 38
      0000E6 26                     438 	.db #0x26	; 38
      0000E7 26                     439 	.db #0x26	; 38
      0000E8 26                     440 	.db #0x26	; 38
      0000E9 26                     441 	.db #0x26	; 38
      0000EA 26                     442 	.db #0x26	; 38
      0000EB 26                     443 	.db #0x26	; 38
      0000EC 26                     444 	.db #0x26	; 38
      0000ED 26                     445 	.db #0x26	; 38
      0000EE 26                     446 	.db #0x26	; 38
      0000EF 26                     447 	.db #0x26	; 38
      0000F0 26                     448 	.db #0x26	; 38
      0000F1 26                     449 	.db #0x26	; 38
      0000F2 26                     450 	.db #0x26	; 38
      0000F3 26                     451 	.db #0x26	; 38
      0000F4 26                     452 	.db #0x26	; 38
      0000F5 26                     453 	.db #0x26	; 38
      0000F6 26                     454 	.db #0x26	; 38
      0000F7 26                     455 	.db #0x26	; 38
      0000F8 2B                     456 	.db #0x2b	; 43
      0000F9 26                     457 	.db #0x26	; 38
      0000FA 26                     458 	.db #0x26	; 38
      0000FB 26                     459 	.db #0x26	; 38
      0000FC 26                     460 	.db #0x26	; 38
      0000FD 26                     461 	.db #0x26	; 38
      0000FE 26                     462 	.db #0x26	; 38
      0000FF 2B                     463 	.db #0x2b	; 43
      000100 26                     464 	.db #0x26	; 38
      000101 26                     465 	.db #0x26	; 38
      000102 26                     466 	.db #0x26	; 38
      000103 26                     467 	.db #0x26	; 38
      000104 26                     468 	.db #0x26	; 38
      000105 26                     469 	.db #0x26	; 38
      000106 26                     470 	.db #0x26	; 38
      000107 26                     471 	.db #0x26	; 38
      000108 26                     472 	.db #0x26	; 38
      000109 26                     473 	.db #0x26	; 38
      00010A 26                     474 	.db #0x26	; 38
      00010B 26                     475 	.db #0x26	; 38
      00010C 2B                     476 	.db #0x2b	; 43
      00010D 26                     477 	.db #0x26	; 38
      00010E 26                     478 	.db #0x26	; 38
      00010F 26                     479 	.db #0x26	; 38
      000110 26                     480 	.db #0x26	; 38
      000111 26                     481 	.db #0x26	; 38
      000112 26                     482 	.db #0x26	; 38
      000113 26                     483 	.db #0x26	; 38
      000114 2C                     484 	.db #0x2c	; 44
      000115 26                     485 	.db #0x26	; 38
      000116 26                     486 	.db #0x26	; 38
      000117 26                     487 	.db #0x26	; 38
      000118 26                     488 	.db #0x26	; 38
      000119 26                     489 	.db #0x26	; 38
      00011A 26                     490 	.db #0x26	; 38
      00011B 26                     491 	.db #0x26	; 38
      00011C 26                     492 	.db #0x26	; 38
      00011D 26                     493 	.db #0x26	; 38
      00011E 26                     494 	.db #0x26	; 38
      00011F 26                     495 	.db #0x26	; 38
      000120 26                     496 	.db #0x26	; 38
      000121 26                     497 	.db #0x26	; 38
      000122 26                     498 	.db #0x26	; 38
      000123 26                     499 	.db #0x26	; 38
      000124 26                     500 	.db #0x26	; 38
      000125 26                     501 	.db #0x26	; 38
      000126 26                     502 	.db #0x26	; 38
      000127 26                     503 	.db #0x26	; 38
      000128 26                     504 	.db #0x26	; 38
      000129 2C                     505 	.db #0x2c	; 44
      00012A 26                     506 	.db #0x26	; 38
      00012B 26                     507 	.db #0x26	; 38
      00012C 26                     508 	.db #0x26	; 38
      00012D 26                     509 	.db #0x26	; 38
      00012E 25                     510 	.db #0x25	; 37
      00012F 26                     511 	.db #0x26	; 38
      000130 26                     512 	.db #0x26	; 38
      000131 26                     513 	.db #0x26	; 38
      000132 26                     514 	.db #0x26	; 38
      000133 26                     515 	.db #0x26	; 38
      000134 26                     516 	.db #0x26	; 38
      000135 26                     517 	.db #0x26	; 38
      000136 26                     518 	.db #0x26	; 38
      000137 26                     519 	.db #0x26	; 38
      000138 26                     520 	.db #0x26	; 38
      000139 26                     521 	.db #0x26	; 38
      00013A 26                     522 	.db #0x26	; 38
      00013B 26                     523 	.db #0x26	; 38
      00013C 2C                     524 	.db #0x2c	; 44
      00013D 26                     525 	.db #0x26	; 38
      00013E 26                     526 	.db #0x26	; 38
      00013F 26                     527 	.db #0x26	; 38
      000140 26                     528 	.db #0x26	; 38
      000141 26                     529 	.db #0x26	; 38
      000142 26                     530 	.db #0x26	; 38
      000143 26                     531 	.db #0x26	; 38
      000144 2B                     532 	.db #0x2b	; 43
      000145 26                     533 	.db #0x26	; 38
      000146 26                     534 	.db #0x26	; 38
      000147 26                     535 	.db #0x26	; 38
      000148 26                     536 	.db #0x26	; 38
      000149 26                     537 	.db #0x26	; 38
      00014A 26                     538 	.db #0x26	; 38
      00014B 26                     539 	.db #0x26	; 38
      00014C 26                     540 	.db #0x26	; 38
      00014D 26                     541 	.db #0x26	; 38
      00014E 26                     542 	.db #0x26	; 38
      00014F 26                     543 	.db #0x26	; 38
      000150 26                     544 	.db #0x26	; 38
      000151 26                     545 	.db #0x26	; 38
      000152 26                     546 	.db #0x26	; 38
      000153 26                     547 	.db #0x26	; 38
      000154 26                     548 	.db #0x26	; 38
      000155 26                     549 	.db #0x26	; 38
      000156 26                     550 	.db #0x26	; 38
      000157 26                     551 	.db #0x26	; 38
      000158 26                     552 	.db #0x26	; 38
      000159 26                     553 	.db #0x26	; 38
      00015A 26                     554 	.db #0x26	; 38
      00015B 26                     555 	.db #0x26	; 38
      00015C 26                     556 	.db #0x26	; 38
      00015D 26                     557 	.db #0x26	; 38
      00015E 26                     558 	.db #0x26	; 38
      00015F 26                     559 	.db #0x26	; 38
      000160 2C                     560 	.db #0x2c	; 44
      000161 26                     561 	.db #0x26	; 38
      000162 26                     562 	.db #0x26	; 38
      000163 26                     563 	.db #0x26	; 38
      000164 26                     564 	.db #0x26	; 38
      000165 26                     565 	.db #0x26	; 38
      000166 26                     566 	.db #0x26	; 38
      000167 26                     567 	.db #0x26	; 38
      000168 26                     568 	.db #0x26	; 38
      000169 26                     569 	.db #0x26	; 38
      00016A 26                     570 	.db #0x26	; 38
      00016B 26                     571 	.db #0x26	; 38
      00016C 26                     572 	.db #0x26	; 38
      00016D 26                     573 	.db #0x26	; 38
      00016E 26                     574 	.db #0x26	; 38
      00016F 26                     575 	.db #0x26	; 38
      000170 26                     576 	.db #0x26	; 38
      000171 26                     577 	.db #0x26	; 38
      000172 26                     578 	.db #0x26	; 38
      000173 26                     579 	.db #0x26	; 38
      000174 26                     580 	.db #0x26	; 38
      000175 26                     581 	.db #0x26	; 38
      000176 26                     582 	.db #0x26	; 38
      000177 26                     583 	.db #0x26	; 38
      000178 26                     584 	.db #0x26	; 38
      000179 26                     585 	.db #0x26	; 38
      00017A 26                     586 	.db #0x26	; 38
      00017B 26                     587 	.db #0x26	; 38
      00017C 26                     588 	.db #0x26	; 38
      00017D 26                     589 	.db #0x26	; 38
      00017E 26                     590 	.db #0x26	; 38
      00017F 26                     591 	.db #0x26	; 38
      000180 26                     592 	.db #0x26	; 38
      000181 26                     593 	.db #0x26	; 38
      000182 26                     594 	.db #0x26	; 38
      000183 26                     595 	.db #0x26	; 38
      000184 26                     596 	.db #0x26	; 38
      000185 26                     597 	.db #0x26	; 38
      000186 26                     598 	.db #0x26	; 38
      000187 26                     599 	.db #0x26	; 38
      000188 26                     600 	.db #0x26	; 38
      000189 26                     601 	.db #0x26	; 38
      00018A 26                     602 	.db #0x26	; 38
      00018B 26                     603 	.db #0x26	; 38
      00018C 26                     604 	.db #0x26	; 38
      00018D 26                     605 	.db #0x26	; 38
      00018E 26                     606 	.db #0x26	; 38
      00018F 26                     607 	.db #0x26	; 38
      000190 26                     608 	.db #0x26	; 38
      000191 26                     609 	.db #0x26	; 38
      000192 26                     610 	.db #0x26	; 38
      000193 26                     611 	.db #0x26	; 38
      000194 26                     612 	.db #0x26	; 38
      000195 2B                     613 	.db #0x2b	; 43
      000196 26                     614 	.db #0x26	; 38
      000197 26                     615 	.db #0x26	; 38
      000198 26                     616 	.db #0x26	; 38
      000199 26                     617 	.db #0x26	; 38
      00019A 26                     618 	.db #0x26	; 38
      00019B 26                     619 	.db #0x26	; 38
      00019C 26                     620 	.db #0x26	; 38
      00019D 26                     621 	.db #0x26	; 38
      00019E 26                     622 	.db #0x26	; 38
      00019F 26                     623 	.db #0x26	; 38
      0001A0 26                     624 	.db #0x26	; 38
      0001A1 26                     625 	.db #0x26	; 38
      0001A2 26                     626 	.db #0x26	; 38
      0001A3 26                     627 	.db #0x26	; 38
      0001A4 26                     628 	.db #0x26	; 38
      0001A5 26                     629 	.db #0x26	; 38
      0001A6 25                     630 	.db #0x25	; 37
      0001A7 26                     631 	.db #0x26	; 38
      0001A8 26                     632 	.db #0x26	; 38
      0001A9 26                     633 	.db #0x26	; 38
      0001AA 2B                     634 	.db #0x2b	; 43
      0001AB 26                     635 	.db #0x26	; 38
      0001AC 26                     636 	.db #0x26	; 38
      0001AD 26                     637 	.db #0x26	; 38
      0001AE 26                     638 	.db #0x26	; 38
      0001AF 26                     639 	.db #0x26	; 38
      0001B0 26                     640 	.db #0x26	; 38
      0001B1 26                     641 	.db #0x26	; 38
      0001B2 26                     642 	.db #0x26	; 38
      0001B3 26                     643 	.db #0x26	; 38
      0001B4 26                     644 	.db #0x26	; 38
      0001B5 26                     645 	.db #0x26	; 38
      0001B6 26                     646 	.db #0x26	; 38
      0001B7 26                     647 	.db #0x26	; 38
      0001B8 26                     648 	.db #0x26	; 38
      0001B9 26                     649 	.db #0x26	; 38
      0001BA 26                     650 	.db #0x26	; 38
      0001BB 26                     651 	.db #0x26	; 38
      0001BC 26                     652 	.db #0x26	; 38
      0001BD 26                     653 	.db #0x26	; 38
      0001BE 26                     654 	.db #0x26	; 38
      0001BF 26                     655 	.db #0x26	; 38
      0001C0 26                     656 	.db #0x26	; 38
      0001C1 26                     657 	.db #0x26	; 38
      0001C2 26                     658 	.db #0x26	; 38
      0001C3 26                     659 	.db #0x26	; 38
      0001C4 2B                     660 	.db #0x2b	; 43
      0001C5 26                     661 	.db #0x26	; 38
      0001C6 26                     662 	.db #0x26	; 38
      0001C7 26                     663 	.db #0x26	; 38
      0001C8 26                     664 	.db #0x26	; 38
      0001C9 26                     665 	.db #0x26	; 38
      0001CA 26                     666 	.db #0x26	; 38
      0001CB 26                     667 	.db #0x26	; 38
      0001CC 26                     668 	.db #0x26	; 38
      0001CD 26                     669 	.db #0x26	; 38
      0001CE 26                     670 	.db #0x26	; 38
      0001CF 26                     671 	.db #0x26	; 38
      0001D0 26                     672 	.db #0x26	; 38
      0001D1 26                     673 	.db #0x26	; 38
      0001D2 26                     674 	.db #0x26	; 38
      0001D3 26                     675 	.db #0x26	; 38
      0001D4 26                     676 	.db #0x26	; 38
      0001D5 26                     677 	.db #0x26	; 38
      0001D6 26                     678 	.db #0x26	; 38
      0001D7 26                     679 	.db #0x26	; 38
      0001D8 26                     680 	.db #0x26	; 38
      0001D9 26                     681 	.db #0x26	; 38
      0001DA 27                     682 	.db #0x27	; 39
      0001DB 28                     683 	.db #0x28	; 40
      0001DC 26                     684 	.db #0x26	; 38
      0001DD 26                     685 	.db #0x26	; 38
      0001DE 26                     686 	.db #0x26	; 38
      0001DF 26                     687 	.db #0x26	; 38
      0001E0 26                     688 	.db #0x26	; 38
      0001E1 26                     689 	.db #0x26	; 38
      0001E2 26                     690 	.db #0x26	; 38
      0001E3 26                     691 	.db #0x26	; 38
      0001E4 26                     692 	.db #0x26	; 38
      0001E5 26                     693 	.db #0x26	; 38
      0001E6 26                     694 	.db #0x26	; 38
      0001E7 26                     695 	.db #0x26	; 38
      0001E8 26                     696 	.db #0x26	; 38
      0001E9 26                     697 	.db #0x26	; 38
      0001EA 26                     698 	.db #0x26	; 38
      0001EB 26                     699 	.db #0x26	; 38
      0001EC 26                     700 	.db #0x26	; 38
      0001ED 26                     701 	.db #0x26	; 38
      0001EE 26                     702 	.db #0x26	; 38
      0001EF 26                     703 	.db #0x26	; 38
      0001F0 26                     704 	.db #0x26	; 38
      0001F1 26                     705 	.db #0x26	; 38
      0001F2 26                     706 	.db #0x26	; 38
      0001F3 26                     707 	.db #0x26	; 38
      0001F4 26                     708 	.db #0x26	; 38
      0001F5 26                     709 	.db #0x26	; 38
      0001F6 26                     710 	.db #0x26	; 38
      0001F7 26                     711 	.db #0x26	; 38
      0001F8 26                     712 	.db #0x26	; 38
      0001F9 26                     713 	.db #0x26	; 38
      0001FA 2A                     714 	.db #0x2a	; 42
      0001FB 29                     715 	.db #0x29	; 41
      0001FC 26                     716 	.db #0x26	; 38
      0001FD 26                     717 	.db #0x26	; 38
      0001FE 26                     718 	.db #0x26	; 38
      0001FF 26                     719 	.db #0x26	; 38
      000200 26                     720 	.db #0x26	; 38
      000201 26                     721 	.db #0x26	; 38
      000202 26                     722 	.db #0x26	; 38
      000203 26                     723 	.db #0x26	; 38
      000204 26                     724 	.db #0x26	; 38
      000205 26                     725 	.db #0x26	; 38
      000206 26                     726 	.db #0x26	; 38
      000207 26                     727 	.db #0x26	; 38
      000208 26                     728 	.db #0x26	; 38
      000209 26                     729 	.db #0x26	; 38
      00020A 26                     730 	.db #0x26	; 38
      00020B 26                     731 	.db #0x26	; 38
      00020C 26                     732 	.db #0x26	; 38
      00020D 26                     733 	.db #0x26	; 38
      00020E 27                     734 	.db #0x27	; 39
      00020F 28                     735 	.db #0x28	; 40
      000210 26                     736 	.db #0x26	; 38
      000211 26                     737 	.db #0x26	; 38
      000212 26                     738 	.db #0x26	; 38
      000213 26                     739 	.db #0x26	; 38
      000214 26                     740 	.db #0x26	; 38
      000215 26                     741 	.db #0x26	; 38
      000216 26                     742 	.db #0x26	; 38
      000217 26                     743 	.db #0x26	; 38
      000218 26                     744 	.db #0x26	; 38
      000219 26                     745 	.db #0x26	; 38
      00021A 26                     746 	.db #0x26	; 38
      00021B 26                     747 	.db #0x26	; 38
      00021C 26                     748 	.db #0x26	; 38
      00021D 26                     749 	.db #0x26	; 38
      00021E 26                     750 	.db #0x26	; 38
      00021F 2C                     751 	.db #0x2c	; 44
      000220 26                     752 	.db #0x26	; 38
      000221 26                     753 	.db #0x26	; 38
      000222 26                     754 	.db #0x26	; 38
      000223 26                     755 	.db #0x26	; 38
      000224 26                     756 	.db #0x26	; 38
      000225 26                     757 	.db #0x26	; 38
      000226 26                     758 	.db #0x26	; 38
      000227 26                     759 	.db #0x26	; 38
      000228 26                     760 	.db #0x26	; 38
      000229 26                     761 	.db #0x26	; 38
      00022A 26                     762 	.db #0x26	; 38
      00022B 26                     763 	.db #0x26	; 38
      00022C 26                     764 	.db #0x26	; 38
      00022D 26                     765 	.db #0x26	; 38
      00022E 2A                     766 	.db #0x2a	; 42
      00022F 29                     767 	.db #0x29	; 41
      000230 26                     768 	.db #0x26	; 38
      000231 26                     769 	.db #0x26	; 38
      000232 26                     770 	.db #0x26	; 38
      000233 26                     771 	.db #0x26	; 38
      000234 26                     772 	.db #0x26	; 38
      000235 26                     773 	.db #0x26	; 38
      000236 26                     774 	.db #0x26	; 38
      000237 26                     775 	.db #0x26	; 38
      000238 26                     776 	.db #0x26	; 38
      000239 26                     777 	.db #0x26	; 38
      00023A 26                     778 	.db #0x26	; 38
      00023B 26                     779 	.db #0x26	; 38
      00023C 26                     780 	.db #0x26	; 38
      00023D 25                     781 	.db #0x25	; 37
      00023E 26                     782 	.db #0x26	; 38
      00023F 26                     783 	.db #0x26	; 38
      000240 26                     784 	.db #0x26	; 38
      000241 26                     785 	.db #0x26	; 38
      000242 26                     786 	.db #0x26	; 38
      000243 26                     787 	.db #0x26	; 38
      000244 2C                     788 	.db #0x2c	; 44
      000245 26                     789 	.db #0x26	; 38
      000246 26                     790 	.db #0x26	; 38
      000247 26                     791 	.db #0x26	; 38
      000248 26                     792 	.db #0x26	; 38
      000249 26                     793 	.db #0x26	; 38
      00024A 26                     794 	.db #0x26	; 38
      00024B 26                     795 	.db #0x26	; 38
      00024C 26                     796 	.db #0x26	; 38
      00024D 26                     797 	.db #0x26	; 38
      00024E 26                     798 	.db #0x26	; 38
      00024F 26                     799 	.db #0x26	; 38
      000250 26                     800 	.db #0x26	; 38
      000251 26                     801 	.db #0x26	; 38
      000252 26                     802 	.db #0x26	; 38
      000253 26                     803 	.db #0x26	; 38
      000254 26                     804 	.db #0x26	; 38
      000255 26                     805 	.db #0x26	; 38
      000256 26                     806 	.db #0x26	; 38
      000257 26                     807 	.db #0x26	; 38
      000258 26                     808 	.db #0x26	; 38
      000259 26                     809 	.db #0x26	; 38
      00025A 26                     810 	.db #0x26	; 38
      00025B 26                     811 	.db #0x26	; 38
      00025C 26                     812 	.db #0x26	; 38
      00025D 26                     813 	.db #0x26	; 38
      00025E 26                     814 	.db #0x26	; 38
      00025F 26                     815 	.db #0x26	; 38
      000260 26                     816 	.db #0x26	; 38
      000261 26                     817 	.db #0x26	; 38
      000262 26                     818 	.db #0x26	; 38
      000263 26                     819 	.db #0x26	; 38
      000264 26                     820 	.db #0x26	; 38
      000265 26                     821 	.db #0x26	; 38
      000266 26                     822 	.db #0x26	; 38
      000267 26                     823 	.db #0x26	; 38
      000268 26                     824 	.db #0x26	; 38
      000269 26                     825 	.db #0x26	; 38
      00026A 2C                     826 	.db #0x2c	; 44
      00026B 26                     827 	.db #0x26	; 38
      00026C 26                     828 	.db #0x26	; 38
      00026D 26                     829 	.db #0x26	; 38
      00026E 26                     830 	.db #0x26	; 38
      00026F 26                     831 	.db #0x26	; 38
      000270 26                     832 	.db #0x26	; 38
      000271 26                     833 	.db #0x26	; 38
      000272 26                     834 	.db #0x26	; 38
      000273 26                     835 	.db #0x26	; 38
      000274 26                     836 	.db #0x26	; 38
      000275 26                     837 	.db #0x26	; 38
      000276 26                     838 	.db #0x26	; 38
      000277 26                     839 	.db #0x26	; 38
      000278 26                     840 	.db #0x26	; 38
      000279 2C                     841 	.db #0x2c	; 44
      00027A 26                     842 	.db #0x26	; 38
      00027B 26                     843 	.db #0x26	; 38
      00027C 26                     844 	.db #0x26	; 38
      00027D 26                     845 	.db #0x26	; 38
      00027E 26                     846 	.db #0x26	; 38
      00027F 26                     847 	.db #0x26	; 38
      000280 26                     848 	.db #0x26	; 38
      000281 26                     849 	.db #0x26	; 38
      000282 26                     850 	.db #0x26	; 38
      000283 26                     851 	.db #0x26	; 38
      000284 26                     852 	.db #0x26	; 38
      000285 26                     853 	.db #0x26	; 38
      000286 26                     854 	.db #0x26	; 38
      000287 26                     855 	.db #0x26	; 38
      000288 26                     856 	.db #0x26	; 38
      000289 26                     857 	.db #0x26	; 38
      00028A 26                     858 	.db #0x26	; 38
      00028B 26                     859 	.db #0x26	; 38
      00028C 26                     860 	.db #0x26	; 38
      00028D 26                     861 	.db #0x26	; 38
      00028E 26                     862 	.db #0x26	; 38
      00028F 26                     863 	.db #0x26	; 38
      000290 26                     864 	.db #0x26	; 38
      000291 26                     865 	.db #0x26	; 38
      000292 26                     866 	.db #0x26	; 38
      000293 26                     867 	.db #0x26	; 38
      000294 26                     868 	.db #0x26	; 38
      000295 2B                     869 	.db #0x2b	; 43
      000296 26                     870 	.db #0x26	; 38
      000297 26                     871 	.db #0x26	; 38
      000298 26                     872 	.db #0x26	; 38
      000299 26                     873 	.db #0x26	; 38
      00029A 26                     874 	.db #0x26	; 38
      00029B 26                     875 	.db #0x26	; 38
      00029C 26                     876 	.db #0x26	; 38
      00029D 26                     877 	.db #0x26	; 38
      00029E 26                     878 	.db #0x26	; 38
      00029F 26                     879 	.db #0x26	; 38
      0002A0 26                     880 	.db #0x26	; 38
      0002A1 26                     881 	.db #0x26	; 38
      0002A2 26                     882 	.db #0x26	; 38
      0002A3 26                     883 	.db #0x26	; 38
      0002A4 26                     884 	.db #0x26	; 38
      0002A5 26                     885 	.db #0x26	; 38
      0002A6 26                     886 	.db #0x26	; 38
      0002A7 28                     887 	.db #0x28	; 40
      0002A8 26                     888 	.db #0x26	; 38
      0002A9 26                     889 	.db #0x26	; 38
      0002AA 26                     890 	.db #0x26	; 38
      0002AB 26                     891 	.db #0x26	; 38
      0002AC 26                     892 	.db #0x26	; 38
      0002AD 26                     893 	.db #0x26	; 38
      0002AE 26                     894 	.db #0x26	; 38
      0002AF 26                     895 	.db #0x26	; 38
      0002B0 26                     896 	.db #0x26	; 38
      0002B1 26                     897 	.db #0x26	; 38
      0002B2 26                     898 	.db #0x26	; 38
      0002B3 26                     899 	.db #0x26	; 38
      0002B4 26                     900 	.db #0x26	; 38
      0002B5 26                     901 	.db #0x26	; 38
      0002B6 26                     902 	.db #0x26	; 38
      0002B7 26                     903 	.db #0x26	; 38
      0002B8 26                     904 	.db #0x26	; 38
      0002B9 26                     905 	.db #0x26	; 38
      0002BA 26                     906 	.db #0x26	; 38
      0002BB 26                     907 	.db #0x26	; 38
      0002BC 26                     908 	.db #0x26	; 38
      0002BD 26                     909 	.db #0x26	; 38
      0002BE 26                     910 	.db #0x26	; 38
      0002BF 26                     911 	.db #0x26	; 38
      0002C0 2B                     912 	.db #0x2b	; 43
      0002C1 26                     913 	.db #0x26	; 38
      0002C2 26                     914 	.db #0x26	; 38
      0002C3 26                     915 	.db #0x26	; 38
      0002C4 26                     916 	.db #0x26	; 38
      0002C5 26                     917 	.db #0x26	; 38
      0002C6 27                     918 	.db #0x27	; 39
      0002C7 29                     919 	.db #0x29	; 41
      0002C8 26                     920 	.db #0x26	; 38
      0002C9 26                     921 	.db #0x26	; 38
      0002CA 26                     922 	.db #0x26	; 38
      0002CB 26                     923 	.db #0x26	; 38
      0002CC 26                     924 	.db #0x26	; 38
      0002CD 26                     925 	.db #0x26	; 38
      0002CE 2B                     926 	.db #0x2b	; 43
      0002CF 26                     927 	.db #0x26	; 38
      0002D0 26                     928 	.db #0x26	; 38
      0002D1 26                     929 	.db #0x26	; 38
      0002D2 26                     930 	.db #0x26	; 38
      0002D3 26                     931 	.db #0x26	; 38
      0002D4 26                     932 	.db #0x26	; 38
      0002D5 26                     933 	.db #0x26	; 38
      0002D6 26                     934 	.db #0x26	; 38
      0002D7 26                     935 	.db #0x26	; 38
      0002D8 26                     936 	.db #0x26	; 38
      0002D9 26                     937 	.db #0x26	; 38
      0002DA 26                     938 	.db #0x26	; 38
      0002DB 26                     939 	.db #0x26	; 38
      0002DC 26                     940 	.db #0x26	; 38
      0002DD 26                     941 	.db #0x26	; 38
      0002DE 26                     942 	.db #0x26	; 38
      0002DF 26                     943 	.db #0x26	; 38
      0002E0 26                     944 	.db #0x26	; 38
      0002E1 26                     945 	.db #0x26	; 38
      0002E2 26                     946 	.db #0x26	; 38
      0002E3 26                     947 	.db #0x26	; 38
      0002E4 26                     948 	.db #0x26	; 38
      0002E5 26                     949 	.db #0x26	; 38
      0002E6 2A                     950 	.db #0x2a	; 42
      0002E7 26                     951 	.db #0x26	; 38
      0002E8 26                     952 	.db #0x26	; 38
      0002E9 26                     953 	.db #0x26	; 38
      0002EA 26                     954 	.db #0x26	; 38
      0002EB 26                     955 	.db #0x26	; 38
      0002EC 26                     956 	.db #0x26	; 38
      0002ED 26                     957 	.db #0x26	; 38
      0002EE 26                     958 	.db #0x26	; 38
      0002EF 26                     959 	.db #0x26	; 38
      0002F0 26                     960 	.db #0x26	; 38
      0002F1 26                     961 	.db #0x26	; 38
      0002F2 2C                     962 	.db #0x2c	; 44
      0002F3 26                     963 	.db #0x26	; 38
      0002F4 26                     964 	.db #0x26	; 38
      0002F5 26                     965 	.db #0x26	; 38
      0002F6 26                     966 	.db #0x26	; 38
      0002F7 26                     967 	.db #0x26	; 38
      0002F8 26                     968 	.db #0x26	; 38
      0002F9 26                     969 	.db #0x26	; 38
      0002FA 26                     970 	.db #0x26	; 38
      0002FB 26                     971 	.db #0x26	; 38
      0002FC 26                     972 	.db #0x26	; 38
      0002FD 26                     973 	.db #0x26	; 38
      0002FE 26                     974 	.db #0x26	; 38
      0002FF 26                     975 	.db #0x26	; 38
      000300 26                     976 	.db #0x26	; 38
      000301 26                     977 	.db #0x26	; 38
      000302 26                     978 	.db #0x26	; 38
      000303 26                     979 	.db #0x26	; 38
      000304 26                     980 	.db #0x26	; 38
      000305 26                     981 	.db #0x26	; 38
      000306 26                     982 	.db #0x26	; 38
      000307 26                     983 	.db #0x26	; 38
      000308 26                     984 	.db #0x26	; 38
      000309 26                     985 	.db #0x26	; 38
      00030A 26                     986 	.db #0x26	; 38
      00030B 26                     987 	.db #0x26	; 38
      00030C 26                     988 	.db #0x26	; 38
      00030D 26                     989 	.db #0x26	; 38
      00030E 26                     990 	.db #0x26	; 38
      00030F 26                     991 	.db #0x26	; 38
      000310 26                     992 	.db #0x26	; 38
      000311 26                     993 	.db #0x26	; 38
      000312 26                     994 	.db #0x26	; 38
      000313 26                     995 	.db #0x26	; 38
      000314 26                     996 	.db #0x26	; 38
      000315 26                     997 	.db #0x26	; 38
      000316 26                     998 	.db #0x26	; 38
      000317 2B                     999 	.db #0x2b	; 43
      000318 26                    1000 	.db #0x26	; 38
      000319 26                    1001 	.db #0x26	; 38
      00031A 26                    1002 	.db #0x26	; 38
      00031B 26                    1003 	.db #0x26	; 38
      00031C 26                    1004 	.db #0x26	; 38
      00031D 26                    1005 	.db #0x26	; 38
      00031E 26                    1006 	.db #0x26	; 38
      00031F 26                    1007 	.db #0x26	; 38
      000320 26                    1008 	.db #0x26	; 38
      000321 26                    1009 	.db #0x26	; 38
      000322 26                    1010 	.db #0x26	; 38
      000323 26                    1011 	.db #0x26	; 38
      000324 26                    1012 	.db #0x26	; 38
      000325 26                    1013 	.db #0x26	; 38
      000326 26                    1014 	.db #0x26	; 38
      000327 26                    1015 	.db #0x26	; 38
      000328 26                    1016 	.db #0x26	; 38
      000329 26                    1017 	.db #0x26	; 38
      00032A 26                    1018 	.db #0x26	; 38
      00032B 26                    1019 	.db #0x26	; 38
      00032C 26                    1020 	.db #0x26	; 38
      00032D 26                    1021 	.db #0x26	; 38
      00032E 26                    1022 	.db #0x26	; 38
      00032F 26                    1023 	.db #0x26	; 38
      000330 26                    1024 	.db #0x26	; 38
      000331 26                    1025 	.db #0x26	; 38
      000332 26                    1026 	.db #0x26	; 38
      000333 26                    1027 	.db #0x26	; 38
      000334 26                    1028 	.db #0x26	; 38
      000335 26                    1029 	.db #0x26	; 38
      000336 26                    1030 	.db #0x26	; 38
      000337 26                    1031 	.db #0x26	; 38
      000338 26                    1032 	.db #0x26	; 38
      000339 26                    1033 	.db #0x26	; 38
      00033A 26                    1034 	.db #0x26	; 38
      00033B 26                    1035 	.db #0x26	; 38
      00033C 26                    1036 	.db #0x26	; 38
      00033D 26                    1037 	.db #0x26	; 38
      00033E 2B                    1038 	.db #0x2b	; 43
      00033F 26                    1039 	.db #0x26	; 38
      000340 26                    1040 	.db #0x26	; 38
      000341 26                    1041 	.db #0x26	; 38
      000342 26                    1042 	.db #0x26	; 38
      000343 26                    1043 	.db #0x26	; 38
      000344 26                    1044 	.db #0x26	; 38
      000345 26                    1045 	.db #0x26	; 38
      000346 26                    1046 	.db #0x26	; 38
      000347 26                    1047 	.db #0x26	; 38
      000348 26                    1048 	.db #0x26	; 38
      000349 26                    1049 	.db #0x26	; 38
      00034A 2B                    1050 	.db #0x2b	; 43
      00034B 26                    1051 	.db #0x26	; 38
      00034C 26                    1052 	.db #0x26	; 38
      00034D 26                    1053 	.db #0x26	; 38
      00034E 26                    1054 	.db #0x26	; 38
      00034F 26                    1055 	.db #0x26	; 38
      000350 26                    1056 	.db #0x26	; 38
      000351 26                    1057 	.db #0x26	; 38
      000352 26                    1058 	.db #0x26	; 38
      000353 26                    1059 	.db #0x26	; 38
      000354 26                    1060 	.db #0x26	; 38
      000355 26                    1061 	.db #0x26	; 38
      000356 26                    1062 	.db #0x26	; 38
      000357 26                    1063 	.db #0x26	; 38
      000358 26                    1064 	.db #0x26	; 38
      000359 26                    1065 	.db #0x26	; 38
      00035A 26                    1066 	.db #0x26	; 38
      00035B 26                    1067 	.db #0x26	; 38
      00035C 26                    1068 	.db #0x26	; 38
      00035D 26                    1069 	.db #0x26	; 38
      00035E 26                    1070 	.db #0x26	; 38
      00035F 26                    1071 	.db #0x26	; 38
      000360 26                    1072 	.db #0x26	; 38
      000361 26                    1073 	.db #0x26	; 38
      000362 26                    1074 	.db #0x26	; 38
      000363 26                    1075 	.db #0x26	; 38
      000364 26                    1076 	.db #0x26	; 38
      000365 26                    1077 	.db #0x26	; 38
      000366 2C                    1078 	.db #0x2c	; 44
      000367 26                    1079 	.db #0x26	; 38
      000368 26                    1080 	.db #0x26	; 38
      000369 26                    1081 	.db #0x26	; 38
      00036A 26                    1082 	.db #0x26	; 38
      00036B 26                    1083 	.db #0x26	; 38
      00036C 26                    1084 	.db #0x26	; 38
      00036D 26                    1085 	.db #0x26	; 38
      00036E 26                    1086 	.db #0x26	; 38
      00036F 26                    1087 	.db #0x26	; 38
      000370 2B                    1088 	.db #0x2b	; 43
      000371 26                    1089 	.db #0x26	; 38
      000372 26                    1090 	.db #0x26	; 38
      000373 26                    1091 	.db #0x26	; 38
      000374 26                    1092 	.db #0x26	; 38
      000375 26                    1093 	.db #0x26	; 38
      000376 26                    1094 	.db #0x26	; 38
      000377 26                    1095 	.db #0x26	; 38
      000378 26                    1096 	.db #0x26	; 38
      000379 26                    1097 	.db #0x26	; 38
      00037A 26                    1098 	.db #0x26	; 38
      00037B 26                    1099 	.db #0x26	; 38
      00037C 26                    1100 	.db #0x26	; 38
      00037D 26                    1101 	.db #0x26	; 38
      00037E 26                    1102 	.db #0x26	; 38
      00037F 26                    1103 	.db #0x26	; 38
      000380 26                    1104 	.db #0x26	; 38
      000381 26                    1105 	.db #0x26	; 38
      000382 26                    1106 	.db #0x26	; 38
      000383 26                    1107 	.db #0x26	; 38
      000384 26                    1108 	.db #0x26	; 38
      000385 26                    1109 	.db #0x26	; 38
      000386 26                    1110 	.db #0x26	; 38
      000387 26                    1111 	.db #0x26	; 38
      000388 26                    1112 	.db #0x26	; 38
      000389 26                    1113 	.db #0x26	; 38
      00038A 26                    1114 	.db #0x26	; 38
      00038B 26                    1115 	.db #0x26	; 38
      00038C 26                    1116 	.db #0x26	; 38
      00038D 26                    1117 	.db #0x26	; 38
      00038E 26                    1118 	.db #0x26	; 38
      00038F 26                    1119 	.db #0x26	; 38
      000390 26                    1120 	.db #0x26	; 38
      000391 26                    1121 	.db #0x26	; 38
      000392 26                    1122 	.db #0x26	; 38
      000393 26                    1123 	.db #0x26	; 38
      000394 26                    1124 	.db #0x26	; 38
      000395 26                    1125 	.db #0x26	; 38
      000396 26                    1126 	.db #0x26	; 38
      000397 26                    1127 	.db #0x26	; 38
      000398 27                    1128 	.db #0x27	; 39
      000399 28                    1129 	.db #0x28	; 40
      00039A 26                    1130 	.db #0x26	; 38
      00039B 26                    1131 	.db #0x26	; 38
      00039C 26                    1132 	.db #0x26	; 38
      00039D 26                    1133 	.db #0x26	; 38
      00039E 26                    1134 	.db #0x26	; 38
      00039F 26                    1135 	.db #0x26	; 38
      0003A0 26                    1136 	.db #0x26	; 38
      0003A1 26                    1137 	.db #0x26	; 38
      0003A2 26                    1138 	.db #0x26	; 38
      0003A3 26                    1139 	.db #0x26	; 38
      0003A4 26                    1140 	.db #0x26	; 38
      0003A5 26                    1141 	.db #0x26	; 38
      0003A6 26                    1142 	.db #0x26	; 38
      0003A7 26                    1143 	.db #0x26	; 38
      0003A8 26                    1144 	.db #0x26	; 38
      0003A9 26                    1145 	.db #0x26	; 38
      0003AA 26                    1146 	.db #0x26	; 38
      0003AB 26                    1147 	.db #0x26	; 38
      0003AC 26                    1148 	.db #0x26	; 38
      0003AD 2B                    1149 	.db #0x2b	; 43
      0003AE 26                    1150 	.db #0x26	; 38
      0003AF 26                    1151 	.db #0x26	; 38
      0003B0 26                    1152 	.db #0x26	; 38
      0003B1 26                    1153 	.db #0x26	; 38
      0003B2 26                    1154 	.db #0x26	; 38
      0003B3 26                    1155 	.db #0x26	; 38
      0003B4 26                    1156 	.db #0x26	; 38
      0003B5 25                    1157 	.db #0x25	; 37
      0003B6 26                    1158 	.db #0x26	; 38
      0003B7 26                    1159 	.db #0x26	; 38
      0003B8 2A                    1160 	.db #0x2a	; 42
      0003B9 29                    1161 	.db #0x29	; 41
      0003BA 26                    1162 	.db #0x26	; 38
      0003BB 26                    1163 	.db #0x26	; 38
      0003BC 26                    1164 	.db #0x26	; 38
      0003BD 26                    1165 	.db #0x26	; 38
      0003BE 26                    1166 	.db #0x26	; 38
      0003BF 26                    1167 	.db #0x26	; 38
      0003C0 26                    1168 	.db #0x26	; 38
      0003C1 26                    1169 	.db #0x26	; 38
      0003C2 2B                    1170 	.db #0x2b	; 43
      0003C3 26                    1171 	.db #0x26	; 38
      0003C4 26                    1172 	.db #0x26	; 38
      0003C5 26                    1173 	.db #0x26	; 38
      0003C6 26                    1174 	.db #0x26	; 38
      0003C7 26                    1175 	.db #0x26	; 38
      0003C8 26                    1176 	.db #0x26	; 38
      0003C9 2C                    1177 	.db #0x2c	; 44
      0003CA 26                    1178 	.db #0x26	; 38
      0003CB 26                    1179 	.db #0x26	; 38
      0003CC 26                    1180 	.db #0x26	; 38
      0003CD 26                    1181 	.db #0x26	; 38
      0003CE 26                    1182 	.db #0x26	; 38
      0003CF 26                    1183 	.db #0x26	; 38
      0003D0 26                    1184 	.db #0x26	; 38
      0003D1 26                    1185 	.db #0x26	; 38
      0003D2 26                    1186 	.db #0x26	; 38
      0003D3 26                    1187 	.db #0x26	; 38
      0003D4 26                    1188 	.db #0x26	; 38
      0003D5 2C                    1189 	.db #0x2c	; 44
      0003D6 26                    1190 	.db #0x26	; 38
      0003D7 26                    1191 	.db #0x26	; 38
      0003D8 26                    1192 	.db #0x26	; 38
      0003D9 26                    1193 	.db #0x26	; 38
      0003DA 26                    1194 	.db #0x26	; 38
      0003DB 26                    1195 	.db #0x26	; 38
      0003DC 26                    1196 	.db #0x26	; 38
      0003DD 26                    1197 	.db #0x26	; 38
      0003DE 26                    1198 	.db #0x26	; 38
      0003DF 26                    1199 	.db #0x26	; 38
      0003E0 26                    1200 	.db #0x26	; 38
      0003E1 26                    1201 	.db #0x26	; 38
      0003E2 26                    1202 	.db #0x26	; 38
      0003E3 26                    1203 	.db #0x26	; 38
      0003E4 26                    1204 	.db #0x26	; 38
      0003E5 26                    1205 	.db #0x26	; 38
      0003E6 26                    1206 	.db #0x26	; 38
      0003E7 26                    1207 	.db #0x26	; 38
      0003E8 26                    1208 	.db #0x26	; 38
      0003E9 26                    1209 	.db #0x26	; 38
      0003EA 26                    1210 	.db #0x26	; 38
      0003EB 26                    1211 	.db #0x26	; 38
      0003EC 26                    1212 	.db #0x26	; 38
      0003ED 26                    1213 	.db #0x26	; 38
      0003EE 26                    1214 	.db #0x26	; 38
      0003EF 26                    1215 	.db #0x26	; 38
      0003F0 26                    1216 	.db #0x26	; 38
      0003F1 26                    1217 	.db #0x26	; 38
      0003F2 26                    1218 	.db #0x26	; 38
      0003F3 26                    1219 	.db #0x26	; 38
      0003F4 26                    1220 	.db #0x26	; 38
      0003F5 26                    1221 	.db #0x26	; 38
      0003F6 26                    1222 	.db #0x26	; 38
      0003F7 26                    1223 	.db #0x26	; 38
      0003F8 26                    1224 	.db #0x26	; 38
      0003F9 26                    1225 	.db #0x26	; 38
      0003FA 26                    1226 	.db #0x26	; 38
      0003FB 26                    1227 	.db #0x26	; 38
      0003FC 26                    1228 	.db #0x26	; 38
      0003FD 26                    1229 	.db #0x26	; 38
      0003FE 26                    1230 	.db #0x26	; 38
      0003FF 26                    1231 	.db #0x26	; 38
      000400 26                    1232 	.db #0x26	; 38
      000401 26                    1233 	.db #0x26	; 38
      000402 26                    1234 	.db #0x26	; 38
      000403 26                    1235 	.db #0x26	; 38
      000404 26                    1236 	.db #0x26	; 38
      000405 26                    1237 	.db #0x26	; 38
      000406 26                    1238 	.db #0x26	; 38
      000407 26                    1239 	.db #0x26	; 38
      000408 26                    1240 	.db #0x26	; 38
      000409 26                    1241 	.db #0x26	; 38
      00040A 26                    1242 	.db #0x26	; 38
      00040B 26                    1243 	.db #0x26	; 38
      00040C 26                    1244 	.db #0x26	; 38
      00040D 2B                    1245 	.db #0x2b	; 43
      00040E 26                    1246 	.db #0x26	; 38
      00040F 26                    1247 	.db #0x26	; 38
      000410 26                    1248 	.db #0x26	; 38
      000411 26                    1249 	.db #0x26	; 38
      000412 26                    1250 	.db #0x26	; 38
      000413 26                    1251 	.db #0x26	; 38
      000414 26                    1252 	.db #0x26	; 38
      000415 26                    1253 	.db #0x26	; 38
      000416 26                    1254 	.db #0x26	; 38
      000417 26                    1255 	.db #0x26	; 38
      000418 26                    1256 	.db #0x26	; 38
      000419 26                    1257 	.db #0x26	; 38
      00041A 26                    1258 	.db #0x26	; 38
      00041B 26                    1259 	.db #0x26	; 38
      00041C 26                    1260 	.db #0x26	; 38
      00041D 26                    1261 	.db #0x26	; 38
      00041E 26                    1262 	.db #0x26	; 38
      00041F 26                    1263 	.db #0x26	; 38
      000420 2B                    1264 	.db #0x2b	; 43
      000421 26                    1265 	.db #0x26	; 38
      000422 26                    1266 	.db #0x26	; 38
      000423 26                    1267 	.db #0x26	; 38
      000424 26                    1268 	.db #0x26	; 38
      000425 26                    1269 	.db #0x26	; 38
      000426 26                    1270 	.db #0x26	; 38
      000427 26                    1271 	.db #0x26	; 38
      000428 26                    1272 	.db #0x26	; 38
      000429 26                    1273 	.db #0x26	; 38
      00042A 26                    1274 	.db #0x26	; 38
      00042B 26                    1275 	.db #0x26	; 38
      00042C 26                    1276 	.db #0x26	; 38
      00042D 26                    1277 	.db #0x26	; 38
      00042E 26                    1278 	.db #0x26	; 38
      00042F 26                    1279 	.db #0x26	; 38
      000430 26                    1280 	.db #0x26	; 38
      000431 26                    1281 	.db #0x26	; 38
      000432 26                    1282 	.db #0x26	; 38
      000433 26                    1283 	.db #0x26	; 38
      000434 26                    1284 	.db #0x26	; 38
      000435 26                    1285 	.db #0x26	; 38
      000436 26                    1286 	.db #0x26	; 38
      000437 2C                    1287 	.db #0x2c	; 44
      000438 26                    1288 	.db #0x26	; 38
      000439 26                    1289 	.db #0x26	; 38
      00043A 26                    1290 	.db #0x26	; 38
      00043B 26                    1291 	.db #0x26	; 38
      00043C 26                    1292 	.db #0x26	; 38
      00043D 26                    1293 	.db #0x26	; 38
      00043E 26                    1294 	.db #0x26	; 38
      00043F 26                    1295 	.db #0x26	; 38
      000440 26                    1296 	.db #0x26	; 38
      000441 26                    1297 	.db #0x26	; 38
      000442 26                    1298 	.db #0x26	; 38
      000443 26                    1299 	.db #0x26	; 38
      000444 26                    1300 	.db #0x26	; 38
      000445 26                    1301 	.db #0x26	; 38
      000446 26                    1302 	.db #0x26	; 38
      000447 26                    1303 	.db #0x26	; 38
      000448 25                    1304 	.db #0x25	; 37
      000449 2C                    1305 	.db #0x2c	; 44
      00044A 26                    1306 	.db #0x26	; 38
      00044B 26                    1307 	.db #0x26	; 38
      00044C 26                    1308 	.db #0x26	; 38
      00044D 26                    1309 	.db #0x26	; 38
      00044E 26                    1310 	.db #0x26	; 38
      00044F 26                    1311 	.db #0x26	; 38
      000450 26                    1312 	.db #0x26	; 38
      000451 26                    1313 	.db #0x26	; 38
      000452 26                    1314 	.db #0x26	; 38
      000453 26                    1315 	.db #0x26	; 38
      000454 26                    1316 	.db #0x26	; 38
      000455 26                    1317 	.db #0x26	; 38
      000456 26                    1318 	.db #0x26	; 38
      000457 26                    1319 	.db #0x26	; 38
      000458 26                    1320 	.db #0x26	; 38
      000459 26                    1321 	.db #0x26	; 38
      00045A 2B                    1322 	.db #0x2b	; 43
      00045B 26                    1323 	.db #0x26	; 38
      00045C 26                    1324 	.db #0x26	; 38
      00045D 26                    1325 	.db #0x26	; 38
      00045E 26                    1326 	.db #0x26	; 38
      00045F 26                    1327 	.db #0x26	; 38
      000460 26                    1328 	.db #0x26	; 38
      000461 26                    1329 	.db #0x26	; 38
      000462 26                    1330 	.db #0x26	; 38
      000463 26                    1331 	.db #0x26	; 38
      000464 26                    1332 	.db #0x26	; 38
      000465 26                    1333 	.db #0x26	; 38
      000466 26                    1334 	.db #0x26	; 38
      000467 26                    1335 	.db #0x26	; 38
      000468 26                    1336 	.db #0x26	; 38
      000469 26                    1337 	.db #0x26	; 38
      00046A 26                    1338 	.db #0x26	; 38
      00046B 26                    1339 	.db #0x26	; 38
      00046C 26                    1340 	.db #0x26	; 38
      00046D 26                    1341 	.db #0x26	; 38
      00046E 26                    1342 	.db #0x26	; 38
      00046F 26                    1343 	.db #0x26	; 38
      000470 26                    1344 	.db #0x26	; 38
      000471 26                    1345 	.db #0x26	; 38
      000472 27                    1346 	.db #0x27	; 39
      000473 28                    1347 	.db #0x28	; 40
      000474 26                    1348 	.db #0x26	; 38
      000475 26                    1349 	.db #0x26	; 38
      000476 26                    1350 	.db #0x26	; 38
      000477 26                    1351 	.db #0x26	; 38
      000478 26                    1352 	.db #0x26	; 38
      000479 26                    1353 	.db #0x26	; 38
      00047A 26                    1354 	.db #0x26	; 38
      00047B 26                    1355 	.db #0x26	; 38
      00047C 26                    1356 	.db #0x26	; 38
      00047D 26                    1357 	.db #0x26	; 38
      00047E 26                    1358 	.db #0x26	; 38
      00047F 26                    1359 	.db #0x26	; 38
      000480 26                    1360 	.db #0x26	; 38
      000481 26                    1361 	.db #0x26	; 38
      000482 26                    1362 	.db #0x26	; 38
      000483 26                    1363 	.db #0x26	; 38
      000484 26                    1364 	.db #0x26	; 38
      000485 26                    1365 	.db #0x26	; 38
      000486 2B                    1366 	.db #0x2b	; 43
      000487                       1367 _backgroundtiles:
      000487 40                    1368 	.db #0x40	; 64
      000488 38                    1369 	.db #0x38	; 56	'8'
      000489 3A                    1370 	.db #0x3a	; 58
      00048A 44                    1371 	.db #0x44	; 68	'D'
      00048B 7C                    1372 	.db #0x7c	; 124
      00048C 9A                    1373 	.db #0x9a	; 154
      00048D 5E                    1374 	.db #0x5e	; 94
      00048E E9                    1375 	.db #0xe9	; 233
      00048F 7A                    1376 	.db #0x7a	; 122	'z'
      000490 87                    1377 	.db #0x87	; 135
      000491 76                    1378 	.db #0x76	; 118	'v'
      000492 B9                    1379 	.db #0xb9	; 185
      000493 3C                    1380 	.db #0x3c	; 60
      000494 72                    1381 	.db #0x72	; 114	'r'
      000495 00                    1382 	.db #0x00	; 0
      000496 3C                    1383 	.db #0x3c	; 60
      000497 00                    1384 	.db #0x00	; 0
      000498 00                    1385 	.db #0x00	; 0
      000499 00                    1386 	.db #0x00	; 0
      00049A 00                    1387 	.db #0x00	; 0
      00049B 00                    1388 	.db #0x00	; 0
      00049C 00                    1389 	.db #0x00	; 0
      00049D 00                    1390 	.db #0x00	; 0
      00049E 00                    1391 	.db #0x00	; 0
      00049F 00                    1392 	.db #0x00	; 0
      0004A0 00                    1393 	.db #0x00	; 0
      0004A1 00                    1394 	.db #0x00	; 0
      0004A2 00                    1395 	.db #0x00	; 0
      0004A3 00                    1396 	.db #0x00	; 0
      0004A4 00                    1397 	.db #0x00	; 0
      0004A5 00                    1398 	.db #0x00	; 0
      0004A6 00                    1399 	.db #0x00	; 0
      0004A7 00                    1400 	.db #0x00	; 0
      0004A8 0F                    1401 	.db #0x0f	; 15
      0004A9 08                    1402 	.db #0x08	; 8
      0004AA 17                    1403 	.db #0x17	; 23
      0004AB 1C                    1404 	.db #0x1c	; 28
      0004AC 23                    1405 	.db #0x23	; 35
      0004AD 3E                    1406 	.db #0x3e	; 62
      0004AE 41                    1407 	.db #0x41	; 65	'A'
      0004AF 1B                    1408 	.db #0x1b	; 27
      0004B0 64                    1409 	.db #0x64	; 100	'd'
      0004B1 31                    1410 	.db #0x31	; 49	'1'
      0004B2 4E                    1411 	.db #0x4e	; 78	'N'
      0004B3 B1                    1412 	.db #0xb1	; 177
      0004B4 CE                    1413 	.db #0xce	; 206
      0004B5 BB                    1414 	.db #0xbb	; 187
      0004B6 C4                    1415 	.db #0xc4	; 196
      0004B7 00                    1416 	.db #0x00	; 0
      0004B8 F8                    1417 	.db #0xf8	; 248
      0004B9 00                    1418 	.db #0x00	; 0
      0004BA FC                    1419 	.db #0xfc	; 252
      0004BB E0                    1420 	.db #0xe0	; 224
      0004BC 1E                    1421 	.db #0x1e	; 30
      0004BD F0                    1422 	.db #0xf0	; 240
      0004BE 0F                    1423 	.db #0x0f	; 15
      0004BF BE                    1424 	.db #0xbe	; 190
      0004C0 01                    1425 	.db #0x01	; 1
      0004C1 BC                    1426 	.db #0xbc	; 188
      0004C2 02                    1427 	.db #0x02	; 2
      0004C3 CE                    1428 	.db #0xce	; 206
      0004C4 01                    1429 	.db #0x01	; 1
      0004C5 F6                    1430 	.db #0xf6	; 246
      0004C6 61                    1431 	.db #0x61	; 97	'a'
      0004C7 F4                    1432 	.db #0xf4	; 244
      0004C8 02                    1433 	.db #0x02	; 2
      0004C9 94                    1434 	.db #0x94	; 148
      0004CA 62                    1435 	.db #0x62	; 98	'b'
      0004CB E4                    1436 	.db #0xe4	; 228
      0004CC 02                    1437 	.db #0x02	; 2
      0004CD 6C                    1438 	.db #0x6c	; 108	'l'
      0004CE 82                    1439 	.db #0x82	; 130
      0004CF 70                    1440 	.db #0x70	; 112	'p'
      0004D0 8C                    1441 	.db #0x8c	; 140
      0004D1 60                    1442 	.db #0x60	; 96
      0004D2 90                    1443 	.db #0x90	; 144
      0004D3 00                    1444 	.db #0x00	; 0
      0004D4 E0                    1445 	.db #0xe0	; 224
      0004D5 80                    1446 	.db #0x80	; 128
      0004D6 80                    1447 	.db #0x80	; 128
      0004D7 8E                    1448 	.db #0x8e	; 142
      0004D8 F7                    1449 	.db #0xf7	; 247
      0004D9 8F                    1450 	.db #0x8f	; 143
      0004DA F3                    1451 	.db #0xf3	; 243
      0004DB 86                    1452 	.db #0x86	; 134
      0004DC F9                    1453 	.db #0xf9	; 249
      0004DD 42                    1454 	.db #0x42	; 66	'B'
      0004DE 7D                    1455 	.db #0x7d	; 125
      0004DF 80                    1456 	.db #0x80	; 128
      0004E0 FF                    1457 	.db #0xff	; 255
      0004E1 44                    1458 	.db #0x44	; 68	'D'
      0004E2 7F                    1459 	.db #0x7f	; 127
      0004E3 28                    1460 	.db #0x28	; 40
      0004E4 3F                    1461 	.db #0x3f	; 63
      0004E5 07                    1462 	.db #0x07	; 7
      0004E6 07                    1463 	.db #0x07	; 7
      0004E7 00                    1464 	.db #0x00	; 0
      0004E8 00                    1465 	.db #0x00	; 0
      0004E9 08                    1466 	.db #0x08	; 8
      0004EA 00                    1467 	.db #0x00	; 0
      0004EB 08                    1468 	.db #0x08	; 8
      0004EC 00                    1469 	.db #0x00	; 0
      0004ED 1C                    1470 	.db #0x1c	; 28
      0004EE 00                    1471 	.db #0x00	; 0
      0004EF 7F                    1472 	.db #0x7f	; 127
      0004F0 00                    1473 	.db #0x00	; 0
      0004F1 1C                    1474 	.db #0x1c	; 28
      0004F2 00                    1475 	.db #0x00	; 0
      0004F3 08                    1476 	.db #0x08	; 8
      0004F4 00                    1477 	.db #0x00	; 0
      0004F5 08                    1478 	.db #0x08	; 8
      0004F6 00                    1479 	.db #0x00	; 0
      0004F7 00                    1480 	.db #0x00	; 0
      0004F8 00                    1481 	.db #0x00	; 0
      0004F9 00                    1482 	.db #0x00	; 0
      0004FA 00                    1483 	.db #0x00	; 0
      0004FB 00                    1484 	.db #0x00	; 0
      0004FC 00                    1485 	.db #0x00	; 0
      0004FD 10                    1486 	.db #0x10	; 16
      0004FE 00                    1487 	.db #0x00	; 0
      0004FF 00                    1488 	.db #0x00	; 0
      000500 00                    1489 	.db #0x00	; 0
      000501 00                    1490 	.db #0x00	; 0
      000502 00                    1491 	.db #0x00	; 0
      000503 00                    1492 	.db #0x00	; 0
      000504 00                    1493 	.db #0x00	; 0
      000505 00                    1494 	.db #0x00	; 0
      000506 00                    1495 	.db #0x00	; 0
      000507                       1496 _healthblock:
      000507 FE                    1497 	.db #0xfe	; 254
      000508 FE                    1498 	.db #0xfe	; 254
      000509 FE                    1499 	.db #0xfe	; 254
      00050A FE                    1500 	.db #0xfe	; 254
      00050B FE                    1501 	.db #0xfe	; 254
      00050C FE                    1502 	.db #0xfe	; 254
      00050D FE                    1503 	.db #0xfe	; 254
      00050E FE                    1504 	.db #0xfe	; 254
      00050F FE                    1505 	.db #0xfe	; 254
      000510 FE                    1506 	.db #0xfe	; 254
      000511 FE                    1507 	.db #0xfe	; 254
      000512 FE                    1508 	.db #0xfe	; 254
      000513 FE                    1509 	.db #0xfe	; 254
      000514 FE                    1510 	.db #0xfe	; 254
      000515 00                    1511 	.db #0x00	; 0
      000516 00                    1512 	.db #0x00	; 0
      000517                       1513 _enemy1:
      000517 66                    1514 	.db #0x66	; 102	'f'
      000518 24                    1515 	.db #0x24	; 36
      000519 E7                    1516 	.db #0xe7	; 231
      00051A 66                    1517 	.db #0x66	; 102	'f'
      00051B F7                    1518 	.db #0xf7	; 247
      00051C E7                    1519 	.db #0xe7	; 231
      00051D 1C                    1520 	.db #0x1c	; 28
      00051E 18                    1521 	.db #0x18	; 24
      00051F 38                    1522 	.db #0x38	; 56	'8'
      000520 18                    1523 	.db #0x18	; 24
      000521 EF                    1524 	.db #0xef	; 239
      000522 E7                    1525 	.db #0xe7	; 231
      000523 E7                    1526 	.db #0xe7	; 231
      000524 66                    1527 	.db #0x66	; 102	'f'
      000525 66                    1528 	.db #0x66	; 102	'f'
      000526 24                    1529 	.db #0x24	; 36
      000527                       1530 _largeenemies:
      000527 00                    1531 	.db #0x00	; 0
      000528 00                    1532 	.db #0x00	; 0
      000529 00                    1533 	.db #0x00	; 0
      00052A 00                    1534 	.db #0x00	; 0
      00052B 00                    1535 	.db #0x00	; 0
      00052C 00                    1536 	.db #0x00	; 0
      00052D 00                    1537 	.db #0x00	; 0
      00052E 00                    1538 	.db #0x00	; 0
      00052F 00                    1539 	.db #0x00	; 0
      000530 00                    1540 	.db #0x00	; 0
      000531 00                    1541 	.db #0x00	; 0
      000532 00                    1542 	.db #0x00	; 0
      000533 00                    1543 	.db #0x00	; 0
      000534 00                    1544 	.db #0x00	; 0
      000535 7F                    1545 	.db #0x7f	; 127
      000536 7F                    1546 	.db #0x7f	; 127
      000537 7F                    1547 	.db #0x7f	; 127
      000538 7F                    1548 	.db #0x7f	; 127
      000539 00                    1549 	.db #0x00	; 0
      00053A 00                    1550 	.db #0x00	; 0
      00053B 00                    1551 	.db #0x00	; 0
      00053C 00                    1552 	.db #0x00	; 0
      00053D 00                    1553 	.db #0x00	; 0
      00053E 00                    1554 	.db #0x00	; 0
      00053F 00                    1555 	.db #0x00	; 0
      000540 00                    1556 	.db #0x00	; 0
      000541 00                    1557 	.db #0x00	; 0
      000542 00                    1558 	.db #0x00	; 0
      000543 00                    1559 	.db #0x00	; 0
      000544 00                    1560 	.db #0x00	; 0
      000545 00                    1561 	.db #0x00	; 0
      000546 00                    1562 	.db #0x00	; 0
      000547 00                    1563 	.db #0x00	; 0
      000548 00                    1564 	.db #0x00	; 0
      000549 40                    1565 	.db #0x40	; 64
      00054A 40                    1566 	.db #0x40	; 64
      00054B 60                    1567 	.db #0x60	; 96
      00054C 60                    1568 	.db #0x60	; 96
      00054D 70                    1569 	.db #0x70	; 112	'p'
      00054E 70                    1570 	.db #0x70	; 112	'p'
      00054F 78                    1571 	.db #0x78	; 120	'x'
      000550 78                    1572 	.db #0x78	; 120	'x'
      000551 7C                    1573 	.db #0x7c	; 124
      000552 7C                    1574 	.db #0x7c	; 124
      000553 7E                    1575 	.db #0x7e	; 126
      000554 7E                    1576 	.db #0x7e	; 126
      000555 FF                    1577 	.db #0xff	; 255
      000556 FF                    1578 	.db #0xff	; 255
      000557 FF                    1579 	.db #0xff	; 255
      000558 FF                    1580 	.db #0xff	; 255
      000559 7E                    1581 	.db #0x7e	; 126
      00055A 7E                    1582 	.db #0x7e	; 126
      00055B 7C                    1583 	.db #0x7c	; 124
      00055C 7C                    1584 	.db #0x7c	; 124
      00055D 78                    1585 	.db #0x78	; 120	'x'
      00055E 78                    1586 	.db #0x78	; 120	'x'
      00055F 70                    1587 	.db #0x70	; 112	'p'
      000560 70                    1588 	.db #0x70	; 112	'p'
      000561 60                    1589 	.db #0x60	; 96
      000562 60                    1590 	.db #0x60	; 96
      000563 40                    1591 	.db #0x40	; 64
      000564 40                    1592 	.db #0x40	; 64
      000565 00                    1593 	.db #0x00	; 0
      000566 00                    1594 	.db #0x00	; 0
      000567                       1595 _ProjectileTiles:
      000567 24                    1596 	.db #0x24	; 36
      000568 18                    1597 	.db #0x18	; 24
      000569 18                    1598 	.db #0x18	; 24
      00056A 3C                    1599 	.db #0x3c	; 60
      00056B 18                    1600 	.db #0x18	; 24
      00056C 3C                    1601 	.db #0x3c	; 60
      00056D 24                    1602 	.db #0x24	; 36
      00056E 18                    1603 	.db #0x18	; 24
      00056F 00                    1604 	.db #0x00	; 0
      000570 00                    1605 	.db #0x00	; 0
      000571 00                    1606 	.db #0x00	; 0
      000572 00                    1607 	.db #0x00	; 0
      000573 00                    1608 	.db #0x00	; 0
      000574 00                    1609 	.db #0x00	; 0
      000575 00                    1610 	.db #0x00	; 0
      000576 00                    1611 	.db #0x00	; 0
      000577 00                    1612 	.db #0x00	; 0
      000578 00                    1613 	.db #0x00	; 0
      000579 00                    1614 	.db #0x00	; 0
      00057A 00                    1615 	.db #0x00	; 0
      00057B 00                    1616 	.db #0x00	; 0
      00057C 00                    1617 	.db #0x00	; 0
      00057D 00                    1618 	.db #0x00	; 0
      00057E 00                    1619 	.db #0x00	; 0
      00057F 00                    1620 	.db #0x00	; 0
      000580 00                    1621 	.db #0x00	; 0
      000581 00                    1622 	.db #0x00	; 0
      000582 00                    1623 	.db #0x00	; 0
      000583 00                    1624 	.db #0x00	; 0
      000584 00                    1625 	.db #0x00	; 0
      000585 00                    1626 	.db #0x00	; 0
      000586 00                    1627 	.db #0x00	; 0
      000587 00                    1628 	.db #0x00	; 0
      000588 00                    1629 	.db #0x00	; 0
      000589 00                    1630 	.db #0x00	; 0
      00058A 00                    1631 	.db #0x00	; 0
      00058B 09                    1632 	.db #0x09	; 9
      00058C 06                    1633 	.db #0x06	; 6
      00058D 06                    1634 	.db #0x06	; 6
      00058E 0F                    1635 	.db #0x0f	; 15
      00058F 06                    1636 	.db #0x06	; 6
      000590 0F                    1637 	.db #0x0f	; 15
      000591 09                    1638 	.db #0x09	; 9
      000592 06                    1639 	.db #0x06	; 6
      000593 00                    1640 	.db #0x00	; 0
      000594 00                    1641 	.db #0x00	; 0
      000595 00                    1642 	.db #0x00	; 0
      000596 00                    1643 	.db #0x00	; 0
      000597 00                    1644 	.db #0x00	; 0
      000598 00                    1645 	.db #0x00	; 0
      000599 00                    1646 	.db #0x00	; 0
      00059A 00                    1647 	.db #0x00	; 0
      00059B 00                    1648 	.db #0x00	; 0
      00059C 00                    1649 	.db #0x00	; 0
      00059D 00                    1650 	.db #0x00	; 0
      00059E 00                    1651 	.db #0x00	; 0
      00059F 00                    1652 	.db #0x00	; 0
      0005A0 00                    1653 	.db #0x00	; 0
      0005A1 00                    1654 	.db #0x00	; 0
      0005A2 00                    1655 	.db #0x00	; 0
      0005A3 00                    1656 	.db #0x00	; 0
      0005A4 00                    1657 	.db #0x00	; 0
      0005A5 00                    1658 	.db #0x00	; 0
      0005A6 00                    1659 	.db #0x00	; 0
      0005A7 09                    1660 	.db #0x09	; 9
      0005A8 06                    1661 	.db #0x06	; 6
      0005A9 06                    1662 	.db #0x06	; 6
      0005AA 0F                    1663 	.db #0x0f	; 15
      0005AB 06                    1664 	.db #0x06	; 6
      0005AC 0F                    1665 	.db #0x0f	; 15
      0005AD 09                    1666 	.db #0x09	; 9
      0005AE 06                    1667 	.db #0x06	; 6
      0005AF 00                    1668 	.db #0x00	; 0
      0005B0 00                    1669 	.db #0x00	; 0
      0005B1 00                    1670 	.db #0x00	; 0
      0005B2 00                    1671 	.db #0x00	; 0
      0005B3 00                    1672 	.db #0x00	; 0
      0005B4 00                    1673 	.db #0x00	; 0
      0005B5 00                    1674 	.db #0x00	; 0
      0005B6 00                    1675 	.db #0x00	; 0
      0005B7 00                    1676 	.db #0x00	; 0
      0005B8 00                    1677 	.db #0x00	; 0
      0005B9 00                    1678 	.db #0x00	; 0
      0005BA 00                    1679 	.db #0x00	; 0
      0005BB 00                    1680 	.db #0x00	; 0
      0005BC 00                    1681 	.db #0x00	; 0
      0005BD 00                    1682 	.db #0x00	; 0
      0005BE 00                    1683 	.db #0x00	; 0
      0005BF 00                    1684 	.db #0x00	; 0
      0005C0 00                    1685 	.db #0x00	; 0
      0005C1 00                    1686 	.db #0x00	; 0
      0005C2 00                    1687 	.db #0x00	; 0
      0005C3 00                    1688 	.db #0x00	; 0
      0005C4 00                    1689 	.db #0x00	; 0
      0005C5 00                    1690 	.db #0x00	; 0
      0005C6 00                    1691 	.db #0x00	; 0
      0005C7 99                    1692 	.db #0x99	; 153
      0005C8 66                    1693 	.db #0x66	; 102	'f'
      0005C9 66                    1694 	.db #0x66	; 102	'f'
      0005CA FF                    1695 	.db #0xff	; 255
      0005CB 66                    1696 	.db #0x66	; 102	'f'
      0005CC FF                    1697 	.db #0xff	; 255
      0005CD 99                    1698 	.db #0x99	; 153
      0005CE 66                    1699 	.db #0x66	; 102	'f'
      0005CF 00                    1700 	.db #0x00	; 0
      0005D0 00                    1701 	.db #0x00	; 0
      0005D1 00                    1702 	.db #0x00	; 0
      0005D2 00                    1703 	.db #0x00	; 0
      0005D3 00                    1704 	.db #0x00	; 0
      0005D4 00                    1705 	.db #0x00	; 0
      0005D5 00                    1706 	.db #0x00	; 0
      0005D6 00                    1707 	.db #0x00	; 0
      0005D7 00                    1708 	.db #0x00	; 0
      0005D8 00                    1709 	.db #0x00	; 0
      0005D9 00                    1710 	.db #0x00	; 0
      0005DA 00                    1711 	.db #0x00	; 0
      0005DB 00                    1712 	.db #0x00	; 0
      0005DC 00                    1713 	.db #0x00	; 0
      0005DD 00                    1714 	.db #0x00	; 0
      0005DE 00                    1715 	.db #0x00	; 0
      0005DF 00                    1716 	.db #0x00	; 0
      0005E0 00                    1717 	.db #0x00	; 0
      0005E1 00                    1718 	.db #0x00	; 0
      0005E2 00                    1719 	.db #0x00	; 0
      0005E3 00                    1720 	.db #0x00	; 0
      0005E4 00                    1721 	.db #0x00	; 0
      0005E5 00                    1722 	.db #0x00	; 0
      0005E6 00                    1723 	.db #0x00	; 0
      0005E7 09                    1724 	.db #0x09	; 9
      0005E8 06                    1725 	.db #0x06	; 6
      0005E9 06                    1726 	.db #0x06	; 6
      0005EA 0F                    1727 	.db #0x0f	; 15
      0005EB 06                    1728 	.db #0x06	; 6
      0005EC 0F                    1729 	.db #0x0f	; 15
      0005ED 09                    1730 	.db #0x09	; 9
      0005EE 06                    1731 	.db #0x06	; 6
      0005EF 09                    1732 	.db #0x09	; 9
      0005F0 06                    1733 	.db #0x06	; 6
      0005F1 06                    1734 	.db #0x06	; 6
      0005F2 0F                    1735 	.db #0x0f	; 15
      0005F3 06                    1736 	.db #0x06	; 6
      0005F4 0F                    1737 	.db #0x0f	; 15
      0005F5 09                    1738 	.db #0x09	; 9
      0005F6 06                    1739 	.db #0x06	; 6
      0005F7 00                    1740 	.db #0x00	; 0
      0005F8 00                    1741 	.db #0x00	; 0
      0005F9 00                    1742 	.db #0x00	; 0
      0005FA 00                    1743 	.db #0x00	; 0
      0005FB 00                    1744 	.db #0x00	; 0
      0005FC 00                    1745 	.db #0x00	; 0
      0005FD 00                    1746 	.db #0x00	; 0
      0005FE 00                    1747 	.db #0x00	; 0
      0005FF 00                    1748 	.db #0x00	; 0
      000600 00                    1749 	.db #0x00	; 0
      000601 00                    1750 	.db #0x00	; 0
      000602 00                    1751 	.db #0x00	; 0
      000603 00                    1752 	.db #0x00	; 0
      000604 00                    1753 	.db #0x00	; 0
      000605 00                    1754 	.db #0x00	; 0
      000606 00                    1755 	.db #0x00	; 0
      000607 90                    1756 	.db #0x90	; 144
      000608 60                    1757 	.db #0x60	; 96
      000609 60                    1758 	.db #0x60	; 96
      00060A F0                    1759 	.db #0xf0	; 240
      00060B 60                    1760 	.db #0x60	; 96
      00060C F0                    1761 	.db #0xf0	; 240
      00060D 90                    1762 	.db #0x90	; 144
      00060E 60                    1763 	.db #0x60	; 96
      00060F 09                    1764 	.db #0x09	; 9
      000610 06                    1765 	.db #0x06	; 6
      000611 06                    1766 	.db #0x06	; 6
      000612 0F                    1767 	.db #0x0f	; 15
      000613 06                    1768 	.db #0x06	; 6
      000614 0F                    1769 	.db #0x0f	; 15
      000615 09                    1770 	.db #0x09	; 9
      000616 06                    1771 	.db #0x06	; 6
      000617 00                    1772 	.db #0x00	; 0
      000618 00                    1773 	.db #0x00	; 0
      000619 00                    1774 	.db #0x00	; 0
      00061A 00                    1775 	.db #0x00	; 0
      00061B 00                    1776 	.db #0x00	; 0
      00061C 00                    1777 	.db #0x00	; 0
      00061D 00                    1778 	.db #0x00	; 0
      00061E 00                    1779 	.db #0x00	; 0
      00061F 00                    1780 	.db #0x00	; 0
      000620 00                    1781 	.db #0x00	; 0
      000621 00                    1782 	.db #0x00	; 0
      000622 00                    1783 	.db #0x00	; 0
      000623 00                    1784 	.db #0x00	; 0
      000624 00                    1785 	.db #0x00	; 0
      000625 00                    1786 	.db #0x00	; 0
      000626 00                    1787 	.db #0x00	; 0
      000627 18                    1788 	.db #0x18	; 24
      000628 00                    1789 	.db #0x00	; 0
      000629 18                    1790 	.db #0x18	; 24
      00062A 18                    1791 	.db #0x18	; 24
      00062B 18                    1792 	.db #0x18	; 24
      00062C 18                    1793 	.db #0x18	; 24
      00062D 3C                    1794 	.db #0x3c	; 60
      00062E 18                    1795 	.db #0x18	; 24
      00062F 3C                    1796 	.db #0x3c	; 60
      000630 18                    1797 	.db #0x18	; 24
      000631 3C                    1798 	.db #0x3c	; 60
      000632 3C                    1799 	.db #0x3c	; 60
      000633 7E                    1800 	.db #0x7e	; 126
      000634 3C                    1801 	.db #0x3c	; 60
      000635 7E                    1802 	.db #0x7e	; 126
      000636 24                    1803 	.db #0x24	; 36
      000637 00                    1804 	.db #0x00	; 0
      000638 00                    1805 	.db #0x00	; 0
      000639 00                    1806 	.db #0x00	; 0
      00063A 00                    1807 	.db #0x00	; 0
      00063B 00                    1808 	.db #0x00	; 0
      00063C 00                    1809 	.db #0x00	; 0
      00063D 00                    1810 	.db #0x00	; 0
      00063E 00                    1811 	.db #0x00	; 0
      00063F 00                    1812 	.db #0x00	; 0
      000640 00                    1813 	.db #0x00	; 0
      000641 00                    1814 	.db #0x00	; 0
      000642 00                    1815 	.db #0x00	; 0
      000643 00                    1816 	.db #0x00	; 0
      000644 00                    1817 	.db #0x00	; 0
      000645 00                    1818 	.db #0x00	; 0
      000646 00                    1819 	.db #0x00	; 0
      000647 C0                    1820 	.db #0xc0	; 192
      000648 00                    1821 	.db #0x00	; 0
      000649 F8                    1822 	.db #0xf8	; 248
      00064A E0                    1823 	.db #0xe0	; 224
      00064B FF                    1824 	.db #0xff	; 255
      00064C 7E                    1825 	.db #0x7e	; 126
      00064D FF                    1826 	.db #0xff	; 255
      00064E 7E                    1827 	.db #0x7e	; 126
      00064F F8                    1828 	.db #0xf8	; 248
      000650 E0                    1829 	.db #0xe0	; 224
      000651 C0                    1830 	.db #0xc0	; 192
      000652 00                    1831 	.db #0x00	; 0
      000653 00                    1832 	.db #0x00	; 0
      000654 00                    1833 	.db #0x00	; 0
      000655 00                    1834 	.db #0x00	; 0
      000656 00                    1835 	.db #0x00	; 0
      000657 00                    1836 	.db #0x00	; 0
      000658 00                    1837 	.db #0x00	; 0
      000659 00                    1838 	.db #0x00	; 0
      00065A 00                    1839 	.db #0x00	; 0
      00065B 00                    1840 	.db #0x00	; 0
      00065C 00                    1841 	.db #0x00	; 0
      00065D 00                    1842 	.db #0x00	; 0
      00065E 00                    1843 	.db #0x00	; 0
      00065F 00                    1844 	.db #0x00	; 0
      000660 00                    1845 	.db #0x00	; 0
      000661 00                    1846 	.db #0x00	; 0
      000662 00                    1847 	.db #0x00	; 0
      000663 00                    1848 	.db #0x00	; 0
      000664 00                    1849 	.db #0x00	; 0
      000665 00                    1850 	.db #0x00	; 0
      000666 00                    1851 	.db #0x00	; 0
      000667 06                    1852 	.db #0x06	; 6
      000668 00                    1853 	.db #0x00	; 0
      000669 0F                    1854 	.db #0x0f	; 15
      00066A 06                    1855 	.db #0x06	; 6
      00066B 1F                    1856 	.db #0x1f	; 31
      00066C 0E                    1857 	.db #0x0e	; 14
      00066D 7E                    1858 	.db #0x7e	; 126
      00066E 1C                    1859 	.db #0x1c	; 28
      00066F FC                    1860 	.db #0xfc	; 252
      000670 78                    1861 	.db #0x78	; 120	'x'
      000671 F8                    1862 	.db #0xf8	; 248
      000672 F0                    1863 	.db #0xf0	; 240
      000673 F8                    1864 	.db #0xf8	; 248
      000674 70                    1865 	.db #0x70	; 112	'p'
      000675 70                    1866 	.db #0x70	; 112	'p'
      000676 20                    1867 	.db #0x20	; 32
      000677 00                    1868 	.db #0x00	; 0
      000678 00                    1869 	.db #0x00	; 0
      000679 00                    1870 	.db #0x00	; 0
      00067A 00                    1871 	.db #0x00	; 0
      00067B 00                    1872 	.db #0x00	; 0
      00067C 00                    1873 	.db #0x00	; 0
      00067D 00                    1874 	.db #0x00	; 0
      00067E 00                    1875 	.db #0x00	; 0
      00067F 00                    1876 	.db #0x00	; 0
      000680 00                    1877 	.db #0x00	; 0
      000681 00                    1878 	.db #0x00	; 0
      000682 00                    1879 	.db #0x00	; 0
      000683 00                    1880 	.db #0x00	; 0
      000684 00                    1881 	.db #0x00	; 0
      000685 00                    1882 	.db #0x00	; 0
      000686 00                    1883 	.db #0x00	; 0
      000687                       1884 _Player1:
      000687 08                    1885 	.db #0x08	; 8
      000688 08                    1886 	.db #0x08	; 8
      000689 1C                    1887 	.db #0x1c	; 28
      00068A 14                    1888 	.db #0x14	; 20
      00068B 38                    1889 	.db #0x38	; 56	'8'
      00068C 28                    1890 	.db #0x28	; 40
      00068D 68                    1891 	.db #0x68	; 104	'h'
      00068E 58                    1892 	.db #0x58	; 88	'X'
      00068F 50                    1893 	.db #0x50	; 80	'P'
      000690 71                    1894 	.db #0x71	; 113	'q'
      000691 D0                    1895 	.db #0xd0	; 208
      000692 B2                    1896 	.db #0xb2	; 178
      000693 D5                    1897 	.db #0xd5	; 213
      000694 B6                    1898 	.db #0xb6	; 182
      000695 D5                    1899 	.db #0xd5	; 213
      000696 B6                    1900 	.db #0xb6	; 182
      000697 D5                    1901 	.db #0xd5	; 213
      000698 B6                    1902 	.db #0xb6	; 182
      000699 CD                    1903 	.db #0xcd	; 205
      00069A BE                    1904 	.db #0xbe	; 190
      00069B C5                    1905 	.db #0xc5	; 197
      00069C BE                    1906 	.db #0xbe	; 190
      00069D 65                    1907 	.db #0x65	; 101	'e'
      00069E 5E                    1908 	.db #0x5e	; 94
      00069F 3E                    1909 	.db #0x3e	; 62
      0006A0 2F                    1910 	.db #0x2f	; 47
      0006A1 13                    1911 	.db #0x13	; 19
      0006A2 13                    1912 	.db #0x13	; 19
      0006A3 06                    1913 	.db #0x06	; 6
      0006A4 07                    1914 	.db #0x07	; 7
      0006A5 07                    1915 	.db #0x07	; 7
      0006A6 05                    1916 	.db #0x05	; 5
      0006A7 10                    1917 	.db #0x10	; 16
      0006A8 10                    1918 	.db #0x10	; 16
      0006A9 38                    1919 	.db #0x38	; 56	'8'
      0006AA 28                    1920 	.db #0x28	; 40
      0006AB 1C                    1921 	.db #0x1c	; 28
      0006AC 14                    1922 	.db #0x14	; 20
      0006AD 16                    1923 	.db #0x16	; 22
      0006AE 1A                    1924 	.db #0x1a	; 26
      0006AF 0A                    1925 	.db #0x0a	; 10
      0006B0 8E                    1926 	.db #0x8e	; 142
      0006B1 0B                    1927 	.db #0x0b	; 11
      0006B2 4D                    1928 	.db #0x4d	; 77	'M'
      0006B3 AB                    1929 	.db #0xab	; 171
      0006B4 6D                    1930 	.db #0x6d	; 109	'm'
      0006B5 AB                    1931 	.db #0xab	; 171
      0006B6 6D                    1932 	.db #0x6d	; 109	'm'
      0006B7 AB                    1933 	.db #0xab	; 171
      0006B8 6D                    1934 	.db #0x6d	; 109	'm'
      0006B9 B3                    1935 	.db #0xb3	; 179
      0006BA 7D                    1936 	.db #0x7d	; 125
      0006BB A3                    1937 	.db #0xa3	; 163
      0006BC 7D                    1938 	.db #0x7d	; 125
      0006BD A6                    1939 	.db #0xa6	; 166
      0006BE 7A                    1940 	.db #0x7a	; 122	'z'
      0006BF 7C                    1941 	.db #0x7c	; 124
      0006C0 F4                    1942 	.db #0xf4	; 244
      0006C1 C8                    1943 	.db #0xc8	; 200
      0006C2 C8                    1944 	.db #0xc8	; 200
      0006C3 60                    1945 	.db #0x60	; 96
      0006C4 E0                    1946 	.db #0xe0	; 224
      0006C5 E0                    1947 	.db #0xe0	; 224
      0006C6 A0                    1948 	.db #0xa0	; 160
      0006C7 07                    1949 	.db #0x07	; 7
      0006C8 07                    1950 	.db #0x07	; 7
      0006C9 0F                    1951 	.db #0x0f	; 15
      0006CA 08                    1952 	.db #0x08	; 8
      0006CB 18                    1953 	.db #0x18	; 24
      0006CC 17                    1954 	.db #0x17	; 23
      0006CD 31                    1955 	.db #0x31	; 49	'1'
      0006CE 2F                    1956 	.db #0x2f	; 47
      0006CF 12                    1957 	.db #0x12	; 18
      0006D0 1E                    1958 	.db #0x1e	; 30
      0006D1 DF                    1959 	.db #0xdf	; 223
      0006D2 DF                    1960 	.db #0xdf	; 223
      0006D3 F0                    1961 	.db #0xf0	; 240
      0006D4 7F                    1962 	.db #0x7f	; 127
      0006D5 AF                    1963 	.db #0xaf	; 175
      0006D6 F0                    1964 	.db #0xf0	; 240
      0006D7 AF                    1965 	.db #0xaf	; 175
      0006D8 F0                    1966 	.db #0xf0	; 240
      0006D9 F0                    1967 	.db #0xf0	; 240
      0006DA 7F                    1968 	.db #0x7f	; 127
      0006DB DF                    1969 	.db #0xdf	; 223
      0006DC DF                    1970 	.db #0xdf	; 223
      0006DD 12                    1971 	.db #0x12	; 18
      0006DE 1E                    1972 	.db #0x1e	; 30
      0006DF 31                    1973 	.db #0x31	; 49	'1'
      0006E0 2F                    1974 	.db #0x2f	; 47
      0006E1 18                    1975 	.db #0x18	; 24
      0006E2 17                    1976 	.db #0x17	; 23
      0006E3 0F                    1977 	.db #0x0f	; 15
      0006E4 08                    1978 	.db #0x08	; 8
      0006E5 07                    1979 	.db #0x07	; 7
      0006E6 07                    1980 	.db #0x07	; 7
      0006E7 E0                    1981 	.db #0xe0	; 224
      0006E8 E0                    1982 	.db #0xe0	; 224
      0006E9 F8                    1983 	.db #0xf8	; 248
      0006EA 18                    1984 	.db #0x18	; 24
      0006EB 0C                    1985 	.db #0x0c	; 12
      0006EC F4                    1986 	.db #0xf4	; 244
      0006ED F6                    1987 	.db #0xf6	; 246
      0006EE FA                    1988 	.db #0xfa	; 250
      0006EF 0F                    1989 	.db #0x0f	; 15
      0006F0 0D                    1990 	.db #0x0d	; 13
      0006F1 C2                    1991 	.db #0xc2	; 194
      0006F2 C2                    1992 	.db #0xc2	; 194
      0006F3 00                    1993 	.db #0x00	; 0
      0006F4 E0                    1994 	.db #0xe0	; 224
      0006F5 C0                    1995 	.db #0xc0	; 192
      0006F6 10                    1996 	.db #0x10	; 16
      0006F7 C0                    1997 	.db #0xc0	; 192
      0006F8 10                    1998 	.db #0x10	; 16
      0006F9 00                    1999 	.db #0x00	; 0
      0006FA E0                    2000 	.db #0xe0	; 224
      0006FB C2                    2001 	.db #0xc2	; 194
      0006FC C2                    2002 	.db #0xc2	; 194
      0006FD 0F                    2003 	.db #0x0f	; 15
      0006FE 0D                    2004 	.db #0x0d	; 13
      0006FF F6                    2005 	.db #0xf6	; 246
      000700 FA                    2006 	.db #0xfa	; 250
      000701 0C                    2007 	.db #0x0c	; 12
      000702 F4                    2008 	.db #0xf4	; 244
      000703 F8                    2009 	.db #0xf8	; 248
      000704 18                    2010 	.db #0x18	; 24
      000705 E0                    2011 	.db #0xe0	; 224
      000706 E0                    2012 	.db #0xe0	; 224
      000707 07                    2013 	.db #0x07	; 7
      000708 07                    2014 	.db #0x07	; 7
      000709 1B                    2015 	.db #0x1b	; 27
      00070A 1C                    2016 	.db #0x1c	; 28
      00070B 38                    2017 	.db #0x38	; 56	'8'
      00070C 27                    2018 	.db #0x27	; 39
      00070D 60                    2019 	.db #0x60	; 96
      00070E 5E                    2020 	.db #0x5e	; 94
      00070F 60                    2021 	.db #0x60	; 96
      000710 5C                    2022 	.db #0x5c	; 92
      000711 41                    2023 	.db #0x41	; 65	'A'
      000712 79                    2024 	.db #0x79	; 121	'y'
      000713 C4                    2025 	.db #0xc4	; 196
      000714 B7                    2026 	.db #0xb7	; 183
      000715 99                    2027 	.db #0x99	; 153
      000716 FE                    2028 	.db #0xfe	; 254
      000717 B3                    2029 	.db #0xb3	; 179
      000718 EC                    2030 	.db #0xec	; 236
      000719 67                    2031 	.db #0x67	; 103	'g'
      00071A 58                    2032 	.db #0x58	; 88	'X'
      00071B 2E                    2033 	.db #0x2e	; 46
      00071C 31                    2034 	.db #0x31	; 49	'1'
      00071D 5C                    2035 	.db #0x5c	; 92
      00071E 73                    2036 	.db #0x73	; 115	's'
      00071F 69                    2037 	.db #0x69	; 105	'i'
      000720 5E                    2038 	.db #0x5e	; 94
      000721 37                    2039 	.db #0x37	; 55	'7'
      000722 2D                    2040 	.db #0x2d	; 45
      000723 1A                    2041 	.db #0x1a	; 26
      000724 1B                    2042 	.db #0x1b	; 27
      000725 01                    2043 	.db #0x01	; 1
      000726 01                    2044 	.db #0x01	; 1
      000727 E0                    2045 	.db #0xe0	; 224
      000728 E0                    2046 	.db #0xe0	; 224
      000729 90                    2047 	.db #0x90	; 144
      00072A 70                    2048 	.db #0x70	; 112	'p'
      00072B C0                    2049 	.db #0xc0	; 192
      00072C C0                    2050 	.db #0xc0	; 192
      00072D 00                    2051 	.db #0x00	; 0
      00072E 00                    2052 	.db #0x00	; 0
      00072F 02                    2053 	.db #0x02	; 2
      000730 02                    2054 	.db #0x02	; 2
      000731 C1                    2055 	.db #0xc1	; 193
      000732 C3                    2056 	.db #0xc3	; 195
      000733 65                    2057 	.db #0x65	; 101	'e'
      000734 A7                    2058 	.db #0xa7	; 167
      000735 A7                    2059 	.db #0xa7	; 167
      000736 65                    2060 	.db #0x65	; 101	'e'
      000737 A3                    2061 	.db #0xa3	; 163
      000738 65                    2062 	.db #0x65	; 101	'e'
      000739 03                    2063 	.db #0x03	; 3
      00073A CD                    2064 	.db #0xcd	; 205
      00073B 41                    2065 	.db #0x41	; 65	'A'
      00073C DF                    2066 	.db #0xdf	; 223
      00073D 86                    2067 	.db #0x86	; 134
      00073E BA                    2068 	.db #0xba	; 186
      00073F 86                    2069 	.db #0x86	; 134
      000740 FA                    2070 	.db #0xfa	; 250
      000741 1C                    2071 	.db #0x1c	; 28
      000742 E4                    2072 	.db #0xe4	; 228
      000743 78                    2073 	.db #0x78	; 120	'x'
      000744 B8                    2074 	.db #0xb8	; 184
      000745 C0                    2075 	.db #0xc0	; 192
      000746 C0                    2076 	.db #0xc0	; 192
      000747 00                    2077 	.db #0x00	; 0
      000748 00                    2078 	.db #0x00	; 0
      000749 00                    2079 	.db #0x00	; 0
      00074A 00                    2080 	.db #0x00	; 0
      00074B 00                    2081 	.db #0x00	; 0
      00074C 00                    2082 	.db #0x00	; 0
      00074D 00                    2083 	.db #0x00	; 0
      00074E 00                    2084 	.db #0x00	; 0
      00074F 00                    2085 	.db #0x00	; 0
      000750 00                    2086 	.db #0x00	; 0
      000751 00                    2087 	.db #0x00	; 0
      000752 00                    2088 	.db #0x00	; 0
      000753 00                    2089 	.db #0x00	; 0
      000754 00                    2090 	.db #0x00	; 0
      000755 00                    2091 	.db #0x00	; 0
      000756 00                    2092 	.db #0x00	; 0
      000757 00                    2093 	.db #0x00	; 0
      000758 00                    2094 	.db #0x00	; 0
      000759 00                    2095 	.db #0x00	; 0
      00075A 00                    2096 	.db #0x00	; 0
      00075B 00                    2097 	.db #0x00	; 0
      00075C 00                    2098 	.db #0x00	; 0
      00075D 00                    2099 	.db #0x00	; 0
      00075E 00                    2100 	.db #0x00	; 0
      00075F 00                    2101 	.db #0x00	; 0
      000760 00                    2102 	.db #0x00	; 0
      000761 00                    2103 	.db #0x00	; 0
      000762 00                    2104 	.db #0x00	; 0
      000763 00                    2105 	.db #0x00	; 0
      000764 00                    2106 	.db #0x00	; 0
      000765 00                    2107 	.db #0x00	; 0
      000766 00                    2108 	.db #0x00	; 0
      000767 00                    2109 	.db #0x00	; 0
      000768 00                    2110 	.db #0x00	; 0
      000769 00                    2111 	.db #0x00	; 0
      00076A 00                    2112 	.db #0x00	; 0
      00076B 00                    2113 	.db #0x00	; 0
      00076C 00                    2114 	.db #0x00	; 0
      00076D 00                    2115 	.db #0x00	; 0
      00076E 00                    2116 	.db #0x00	; 0
      00076F 00                    2117 	.db #0x00	; 0
      000770 00                    2118 	.db #0x00	; 0
      000771 00                    2119 	.db #0x00	; 0
      000772 00                    2120 	.db #0x00	; 0
      000773 00                    2121 	.db #0x00	; 0
      000774 00                    2122 	.db #0x00	; 0
      000775 00                    2123 	.db #0x00	; 0
      000776 00                    2124 	.db #0x00	; 0
      000777 00                    2125 	.db #0x00	; 0
      000778 00                    2126 	.db #0x00	; 0
      000779 00                    2127 	.db #0x00	; 0
      00077A 00                    2128 	.db #0x00	; 0
      00077B 00                    2129 	.db #0x00	; 0
      00077C 00                    2130 	.db #0x00	; 0
      00077D 00                    2131 	.db #0x00	; 0
      00077E 00                    2132 	.db #0x00	; 0
      00077F 00                    2133 	.db #0x00	; 0
      000780 00                    2134 	.db #0x00	; 0
      000781 00                    2135 	.db #0x00	; 0
      000782 00                    2136 	.db #0x00	; 0
      000783 00                    2137 	.db #0x00	; 0
      000784 00                    2138 	.db #0x00	; 0
      000785 00                    2139 	.db #0x00	; 0
      000786 00                    2140 	.db #0x00	; 0
      000787                       2141 _BLANKSIZE:
      000787 03                    2142 	.db #0x03	; 3
      000788                       2143 _BLANK:
      000788 26                    2144 	.db #0x26	; 38
      000789 2B                    2145 	.db #0x2b	; 43
      00078A 2C                    2146 	.db #0x2c	; 44
      00078B                       2147 _EMPTYSPRITE:
      00078B 50                    2148 	.db #0x50	; 80	'P'
      00078C                       2149 _ENEMYCOUNT:
      00078C 05                    2150 	.db #0x05	; 5
      00078D                       2151 _xSpawnPositions:
      00078D 00                    2152 	.db #0x00	; 0
      00078E 60                    2153 	.db #0x60	; 96
      00078F B0                    2154 	.db #0xb0	; 176
      000790 00                    2155 	.db #0x00	; 0
      000791 B0                    2156 	.db #0xb0	; 176
      000792 00                    2157 	.db #0x00	; 0
      000793 60                    2158 	.db #0x60	; 96
      000794 B0                    2159 	.db #0xb0	; 176
      000795                       2160 _ySpawnPositions:
      000795 00                    2161 	.db #0x00	; 0
      000796 00                    2162 	.db #0x00	; 0
      000797 00                    2163 	.db #0x00	; 0
      000798 5C                    2164 	.db #0x5c	; 92
      000799 5C                    2165 	.db #0x5c	; 92
      00079A A0                    2166 	.db #0xa0	; 160
      00079B A0                    2167 	.db #0xa0	; 160
      00079C A0                    2168 	.db #0xa0	; 160
      00079D                       2169 _PROJECTILECOUNT:
      00079D 05                    2170 	.db #0x05	; 5
      00079E                       2171 _PLAYERSIZE:
      00079E 10                    2172 	.db #0x10	; 16
      00079F                       2173 _maxHull:
      00079F 64                    2174 	.db #0x64	;  100	'd'
      0007A0                       2175 _maxShield:
      0007A0 64                    2176 	.db #0x64	;  100	'd'
      0007A1                       2177 _GUNCOUNT:
      0007A1 03                    2178 	.db #0x03	; 3
                                   2179 ;main.c:108: void setHealthBar(uint8_t row, uint8_t hp) {
                                   2180 ;	---------------------------------
                                   2181 ; Function setHealthBar
                                   2182 ; ---------------------------------
      0007A2                       2183 _setHealthBar::
      0007A2 E8 FB                 2184 	add	sp, #-5
                                   2185 ;main.c:110: if (hp >= 80) {
      0007A4 F8 08                 2186 	ldhl	sp,	#8
      0007A6 7E                    2187 	ld	a, (hl)
      0007A7 D6 50                 2188 	sub	a, #0x50
      0007A9 38 31                 2189 	jr	C, 00102$
                                   2190 ;main.c:111: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      0007AB F8 00                 2191 	ldhl	sp,	#0
      0007AD 4D                    2192 	ld	c, l
      0007AE 44                    2193 	ld	b, h
      0007AF 36 50                 2194 	ld	(hl), #0x50
      0007B1 69                    2195 	ld	l, c
                                   2196 ;	spillPairReg hl
                                   2197 ;	spillPairReg hl
      0007B2 60                    2198 	ld	h, b
                                   2199 ;	spillPairReg hl
                                   2200 ;	spillPairReg hl
      0007B3 23                    2201 	inc	hl
      0007B4 36 50                 2202 	ld	(hl), #0x50
      0007B6 69                    2203 	ld	l, c
                                   2204 ;	spillPairReg hl
                                   2205 ;	spillPairReg hl
      0007B7 60                    2206 	ld	h, b
                                   2207 ;	spillPairReg hl
                                   2208 ;	spillPairReg hl
      0007B8 23                    2209 	inc	hl
      0007B9 23                    2210 	inc	hl
      0007BA 36 50                 2211 	ld	(hl), #0x50
      0007BC 69                    2212 	ld	l, c
                                   2213 ;	spillPairReg hl
                                   2214 ;	spillPairReg hl
      0007BD 60                    2215 	ld	h, b
                                   2216 ;	spillPairReg hl
                                   2217 ;	spillPairReg hl
      0007BE 23                    2218 	inc	hl
      0007BF 23                    2219 	inc	hl
      0007C0 23                    2220 	inc	hl
      0007C1 36 50                 2221 	ld	(hl), #0x50
      0007C3 21 04 00              2222 	ld	hl, #0x0004
      0007C6 09                    2223 	add	hl, bc
      0007C7 36 50                 2224 	ld	(hl), #0x50
                                   2225 ;main.c:112: set_win_tiles(5,row,5,1,blockmap);
      0007C9 C5                    2226 	push	bc
      0007CA 21 05 01              2227 	ld	hl, #0x105
      0007CD E5                    2228 	push	hl
      0007CE F8 0B                 2229 	ldhl	sp,	#11
      0007D0 66                    2230 	ld	h, (hl)
      0007D1 2E 05                 2231 	ld	l, #0x05
      0007D3 E5                    2232 	push	hl
      0007D4 CDr00r00              2233 	call	_set_win_tiles
      0007D7 E8 06                 2234 	add	sp, #6
                                   2235 ;main.c:113: return;
      0007D9 C3rB0r08              2236 	jp	00109$
      0007DC                       2237 00102$:
                                   2238 ;main.c:115: if (hp >= 60) {
      0007DC F8 08                 2239 	ldhl	sp,	#8
      0007DE 7E                    2240 	ld	a, (hl)
      0007DF D6 3C                 2241 	sub	a, #0x3c
      0007E1 38 31                 2242 	jr	C, 00104$
                                   2243 ;main.c:116: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      0007E3 F8 00                 2244 	ldhl	sp,	#0
      0007E5 4D                    2245 	ld	c, l
      0007E6 44                    2246 	ld	b, h
      0007E7 36 50                 2247 	ld	(hl), #0x50
      0007E9 69                    2248 	ld	l, c
                                   2249 ;	spillPairReg hl
                                   2250 ;	spillPairReg hl
      0007EA 60                    2251 	ld	h, b
                                   2252 ;	spillPairReg hl
                                   2253 ;	spillPairReg hl
      0007EB 23                    2254 	inc	hl
      0007EC 36 50                 2255 	ld	(hl), #0x50
      0007EE 69                    2256 	ld	l, c
                                   2257 ;	spillPairReg hl
                                   2258 ;	spillPairReg hl
      0007EF 60                    2259 	ld	h, b
                                   2260 ;	spillPairReg hl
                                   2261 ;	spillPairReg hl
      0007F0 23                    2262 	inc	hl
      0007F1 23                    2263 	inc	hl
      0007F2 36 50                 2264 	ld	(hl), #0x50
      0007F4 69                    2265 	ld	l, c
                                   2266 ;	spillPairReg hl
                                   2267 ;	spillPairReg hl
      0007F5 60                    2268 	ld	h, b
                                   2269 ;	spillPairReg hl
                                   2270 ;	spillPairReg hl
      0007F6 23                    2271 	inc	hl
      0007F7 23                    2272 	inc	hl
      0007F8 23                    2273 	inc	hl
      0007F9 36 50                 2274 	ld	(hl), #0x50
      0007FB 21 04 00              2275 	ld	hl, #0x0004
      0007FE 09                    2276 	add	hl, bc
      0007FF 36 00                 2277 	ld	(hl), #0x00
                                   2278 ;main.c:117: set_win_tiles(5,row,5,1,blockmap);
      000801 C5                    2279 	push	bc
      000802 21 05 01              2280 	ld	hl, #0x105
      000805 E5                    2281 	push	hl
      000806 F8 0B                 2282 	ldhl	sp,	#11
      000808 66                    2283 	ld	h, (hl)
      000809 2E 05                 2284 	ld	l, #0x05
      00080B E5                    2285 	push	hl
      00080C CDr00r00              2286 	call	_set_win_tiles
      00080F E8 06                 2287 	add	sp, #6
                                   2288 ;main.c:118: return;
      000811 C3rB0r08              2289 	jp	00109$
      000814                       2290 00104$:
                                   2291 ;main.c:120: if (hp >= 40) {
      000814 F8 08                 2292 	ldhl	sp,	#8
      000816 7E                    2293 	ld	a, (hl)
      000817 D6 28                 2294 	sub	a, #0x28
      000819 38 30                 2295 	jr	C, 00106$
                                   2296 ;main.c:121: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      00081B F8 00                 2297 	ldhl	sp,	#0
      00081D 4D                    2298 	ld	c, l
      00081E 44                    2299 	ld	b, h
      00081F 36 50                 2300 	ld	(hl), #0x50
      000821 69                    2301 	ld	l, c
                                   2302 ;	spillPairReg hl
                                   2303 ;	spillPairReg hl
      000822 60                    2304 	ld	h, b
                                   2305 ;	spillPairReg hl
                                   2306 ;	spillPairReg hl
      000823 23                    2307 	inc	hl
      000824 36 50                 2308 	ld	(hl), #0x50
      000826 69                    2309 	ld	l, c
                                   2310 ;	spillPairReg hl
                                   2311 ;	spillPairReg hl
      000827 60                    2312 	ld	h, b
                                   2313 ;	spillPairReg hl
                                   2314 ;	spillPairReg hl
      000828 23                    2315 	inc	hl
      000829 23                    2316 	inc	hl
      00082A 36 50                 2317 	ld	(hl), #0x50
      00082C 59                    2318 	ld	e, c
      00082D 50                    2319 	ld	d, b
      00082E 13                    2320 	inc	de
      00082F 13                    2321 	inc	de
      000830 13                    2322 	inc	de
      000831 AF                    2323 	xor	a, a
      000832 12                    2324 	ld	(de), a
      000833 21 04 00              2325 	ld	hl, #0x0004
      000836 09                    2326 	add	hl, bc
      000837 36 00                 2327 	ld	(hl), #0x00
                                   2328 ;main.c:122: set_win_tiles(5,row,5,1,blockmap);
      000839 C5                    2329 	push	bc
      00083A 21 05 01              2330 	ld	hl, #0x105
      00083D E5                    2331 	push	hl
      00083E F8 0B                 2332 	ldhl	sp,	#11
      000840 66                    2333 	ld	h, (hl)
      000841 2E 05                 2334 	ld	l, #0x05
      000843 E5                    2335 	push	hl
      000844 CDr00r00              2336 	call	_set_win_tiles
      000847 E8 06                 2337 	add	sp, #6
                                   2338 ;main.c:123: return;
      000849 18 65                 2339 	jr	00109$
      00084B                       2340 00106$:
                                   2341 ;main.c:125: if (hp >= 20) {
      00084B F8 08                 2342 	ldhl	sp,	#8
      00084D 7E                    2343 	ld	a, (hl)
      00084E D6 14                 2344 	sub	a, #0x14
      000850 38 30                 2345 	jr	C, 00108$
                                   2346 ;main.c:126: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000852 F8 00                 2347 	ldhl	sp,	#0
      000854 4D                    2348 	ld	c, l
      000855 44                    2349 	ld	b, h
      000856 36 50                 2350 	ld	(hl), #0x50
      000858 69                    2351 	ld	l, c
                                   2352 ;	spillPairReg hl
                                   2353 ;	spillPairReg hl
      000859 60                    2354 	ld	h, b
                                   2355 ;	spillPairReg hl
                                   2356 ;	spillPairReg hl
      00085A 23                    2357 	inc	hl
      00085B 36 50                 2358 	ld	(hl), #0x50
      00085D 59                    2359 	ld	e, c
      00085E 50                    2360 	ld	d, b
      00085F 13                    2361 	inc	de
      000860 13                    2362 	inc	de
      000861 AF                    2363 	xor	a, a
      000862 12                    2364 	ld	(de), a
      000863 59                    2365 	ld	e, c
      000864 50                    2366 	ld	d, b
      000865 13                    2367 	inc	de
      000866 13                    2368 	inc	de
      000867 13                    2369 	inc	de
      000868 AF                    2370 	xor	a, a
      000869 12                    2371 	ld	(de), a
      00086A 21 04 00              2372 	ld	hl, #0x0004
      00086D 09                    2373 	add	hl, bc
      00086E 36 00                 2374 	ld	(hl), #0x00
                                   2375 ;main.c:127: set_win_tiles(5,row,5,1,blockmap);
      000870 C5                    2376 	push	bc
      000871 21 05 01              2377 	ld	hl, #0x105
      000874 E5                    2378 	push	hl
      000875 F8 0B                 2379 	ldhl	sp,	#11
      000877 66                    2380 	ld	h, (hl)
      000878 2E 05                 2381 	ld	l, #0x05
      00087A E5                    2382 	push	hl
      00087B CDr00r00              2383 	call	_set_win_tiles
      00087E E8 06                 2384 	add	sp, #6
                                   2385 ;main.c:128: return;
      000880 18 2E                 2386 	jr	00109$
      000882                       2387 00108$:
                                   2388 ;main.c:130: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000882 F8 00                 2389 	ldhl	sp,	#0
      000884 4D                    2390 	ld	c, l
      000885 44                    2391 	ld	b, h
      000886 36 50                 2392 	ld	(hl), #0x50
      000888 59                    2393 	ld	e, c
      000889 50                    2394 	ld	d, b
      00088A 13                    2395 	inc	de
      00088B AF                    2396 	xor	a, a
      00088C 12                    2397 	ld	(de), a
      00088D 59                    2398 	ld	e, c
      00088E 50                    2399 	ld	d, b
      00088F 13                    2400 	inc	de
      000890 13                    2401 	inc	de
      000891 AF                    2402 	xor	a, a
      000892 12                    2403 	ld	(de), a
      000893 59                    2404 	ld	e, c
      000894 50                    2405 	ld	d, b
      000895 13                    2406 	inc	de
      000896 13                    2407 	inc	de
      000897 13                    2408 	inc	de
      000898 AF                    2409 	xor	a, a
      000899 12                    2410 	ld	(de), a
      00089A 21 04 00              2411 	ld	hl, #0x0004
      00089D 09                    2412 	add	hl, bc
      00089E 36 00                 2413 	ld	(hl), #0x00
                                   2414 ;main.c:131: set_win_tiles(5,row,5,1,blockmap);
      0008A0 C5                    2415 	push	bc
      0008A1 21 05 01              2416 	ld	hl, #0x105
      0008A4 E5                    2417 	push	hl
      0008A5 F8 0B                 2418 	ldhl	sp,	#11
      0008A7 66                    2419 	ld	h, (hl)
      0008A8 2E 05                 2420 	ld	l, #0x05
      0008AA E5                    2421 	push	hl
      0008AB CDr00r00              2422 	call	_set_win_tiles
      0008AE E8 06                 2423 	add	sp, #6
                                   2424 ;main.c:132: return;
      0008B0                       2425 00109$:
                                   2426 ;main.c:134: }
      0008B0 E8 05                 2427 	add	sp, #5
      0008B2 C9                    2428 	ret
                                   2429 ;main.c:136: void updateScore() {
                                   2430 ;	---------------------------------
                                   2431 ; Function updateScore
                                   2432 ; ---------------------------------
      0008B3                       2433 _updateScore::
      0008B3 E8 F6                 2434 	add	sp, #-10
                                   2435 ;main.c:140: len = bcd2text(&bcd, 0x01, buf);
      0008B5 F8 00                 2436 	ldhl	sp,	#0
      0008B7 4D                    2437 	ld	c, l
      0008B8 44                    2438 	ld	b, h
      0008B9 59                    2439 	ld	e, c
      0008BA 50                    2440 	ld	d, b
      0008BB C5                    2441 	push	bc
      0008BC D5                    2442 	push	de
      0008BD 3E 01                 2443 	ld	a, #0x01
      0008BF F5                    2444 	push	af
      0008C0 33                    2445 	inc	sp
      0008C1 11r70r00              2446 	ld	de, #_bcd
      0008C4 D5                    2447 	push	de
      0008C5 CDr00r00              2448 	call	_bcd2text
      0008C8 E8 05                 2449 	add	sp, #5
      0008CA C1                    2450 	pop	bc
                                   2451 ;main.c:141: set_win_tiles(15, 1, 5, 1, buf+3);
      0008CB 03                    2452 	inc	bc
      0008CC 03                    2453 	inc	bc
      0008CD 03                    2454 	inc	bc
      0008CE C5                    2455 	push	bc
      0008CF 21 05 01              2456 	ld	hl, #0x105
      0008D2 E5                    2457 	push	hl
      0008D3 21 0F 01              2458 	ld	hl, #0x10f
      0008D6 E5                    2459 	push	hl
      0008D7 CDr00r00              2460 	call	_set_win_tiles
                                   2461 ;main.c:142: }
      0008DA E8 10                 2462 	add	sp, #16
      0008DC C9                    2463 	ret
                                   2464 ;main.c:144: void incrementScore() {
                                   2465 ;	---------------------------------
                                   2466 ; Function incrementScore
                                   2467 ; ---------------------------------
      0008DD                       2468 _incrementScore::
                                   2469 ;main.c:145: score += 1;
      0008DD 21r6Er00              2470 	ld	hl, #_score
      0008E0 2A                    2471 	ld	a, (hl+)
      0008E1 4F                    2472 	ld	c, a
      0008E2 3A                    2473 	ld	a, (hl-)
      0008E3 47                    2474 	ld	b, a
      0008E4 03                    2475 	inc	bc
      0008E5 79                    2476 	ld	a, c
      0008E6 22                    2477 	ld	(hl+), a
      0008E7 70                    2478 	ld	(hl), b
                                   2479 ;main.c:146: bcd_add(&bcd, &INCREMENT);
      0008E8 11r74r00              2480 	ld	de, #_INCREMENT
      0008EB D5                    2481 	push	de
      0008EC 11r70r00              2482 	ld	de, #_bcd
      0008EF D5                    2483 	push	de
      0008F0 CDr00r00              2484 	call	_bcd_add
      0008F3 E8 04                 2485 	add	sp, #4
                                   2486 ;main.c:147: }
      0008F5 C9                    2487 	ret
                                   2488 ;main.c:149: void updateDirection() {
                                   2489 ;	---------------------------------
                                   2490 ; Function updateDirection
                                   2491 ; ---------------------------------
      0008F6                       2492 _updateDirection::
      0008F6 E8 FC                 2493 	add	sp, #-4
                                   2494 ;main.c:153: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      0008F8 21r8Cr00              2495 	ld	hl, #_joydata
      0008FB 5E                    2496 	ld	e, (hl)
      0008FC 7B                    2497 	ld	a, e
      0008FD E6 01                 2498 	and	a, #0x01
      0008FF F8 00                 2499 	ldhl	sp,	#0
      000901 22                    2500 	ld	(hl+), a
      000902 AF                    2501 	xor	a, a
      000903 22                    2502 	ld	(hl+), a
      000904 7B                    2503 	ld	a, e
      000905 E6 04                 2504 	and	a, #0x04
      000907 22                    2505 	ld	(hl+), a
      000908 AF                    2506 	xor	a, a
      000909 32                    2507 	ld	(hl-), a
      00090A 2B                    2508 	dec	hl
      00090B 7B                    2509 	ld	a, e
      00090C E6 08                 2510 	and	a, #0x08
      00090E 4F                    2511 	ld	c, a
      00090F 06 00                 2512 	ld	b, #0x00
      000911 3A                    2513 	ld	a, (hl-)
      000912 B6                    2514 	or	a, (hl)
      000913 28 14                 2515 	jr	Z, 00102$
      000915 F8 03                 2516 	ldhl	sp,	#3
      000917 3A                    2517 	ld	a, (hl-)
      000918 B6                    2518 	or	a, (hl)
      000919 20 0E                 2519 	jr	NZ, 00102$
      00091B 78                    2520 	ld	a, b
      00091C B1                    2521 	or	a, c
      00091D 20 0A                 2522 	jr	NZ, 00102$
                                   2523 ;main.c:154: xDir = 1;
      00091F 21r56r00              2524 	ld	hl, #_xDir
      000922 36 01                 2525 	ld	(hl), #0x01
                                   2526 ;main.c:155: yDir = 0;
      000924 21r57r00              2527 	ld	hl, #_yDir
      000927 36 00                 2528 	ld	(hl), #0x00
      000929                       2529 00102$:
                                   2530 ;main.c:157: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000929 7B                    2531 	ld	a, e
      00092A E6 02                 2532 	and	a, #0x02
      00092C 5F                    2533 	ld	e, a
      00092D 16 00                 2534 	ld	d, #0x00
      00092F 7A                    2535 	ld	a, d
      000930 B3                    2536 	or	a, e
      000931 28 14                 2537 	jr	Z, 00106$
      000933 F8 03                 2538 	ldhl	sp,	#3
      000935 3A                    2539 	ld	a, (hl-)
      000936 B6                    2540 	or	a, (hl)
      000937 20 0E                 2541 	jr	NZ, 00106$
      000939 78                    2542 	ld	a, b
      00093A B1                    2543 	or	a, c
      00093B 20 0A                 2544 	jr	NZ, 00106$
                                   2545 ;main.c:158: xDir = -1;
      00093D 21r56r00              2546 	ld	hl, #_xDir
      000940 36 FF                 2547 	ld	(hl), #0xff
                                   2548 ;main.c:159: yDir = 0;
      000942 21r57r00              2549 	ld	hl, #_yDir
      000945 36 00                 2550 	ld	(hl), #0x00
      000947                       2551 00106$:
                                   2552 ;main.c:161: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000947 F8 03                 2553 	ldhl	sp,	#3
      000949 3A                    2554 	ld	a, (hl-)
      00094A B6                    2555 	or	a, (hl)
      00094B 28 13                 2556 	jr	Z, 00110$
      00094D 7A                    2557 	ld	a, d
      00094E B3                    2558 	or	a, e
      00094F 20 0F                 2559 	jr	NZ, 00110$
      000951 2B                    2560 	dec	hl
      000952 3A                    2561 	ld	a, (hl-)
      000953 B6                    2562 	or	a, (hl)
      000954 20 0A                 2563 	jr	NZ, 00110$
                                   2564 ;main.c:162: xDir = 0;
      000956 21r56r00              2565 	ld	hl, #_xDir
      000959 36 00                 2566 	ld	(hl), #0x00
                                   2567 ;main.c:163: yDir = -1;
      00095B 21r57r00              2568 	ld	hl, #_yDir
      00095E 36 FF                 2569 	ld	(hl), #0xff
      000960                       2570 00110$:
                                   2571 ;main.c:165: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000960 78                    2572 	ld	a, b
      000961 B1                    2573 	or	a, c
      000962 28 14                 2574 	jr	Z, 00114$
      000964 7A                    2575 	ld	a, d
      000965 B3                    2576 	or	a, e
      000966 20 10                 2577 	jr	NZ, 00114$
      000968 F8 01                 2578 	ldhl	sp,	#1
      00096A 3A                    2579 	ld	a, (hl-)
      00096B B6                    2580 	or	a, (hl)
      00096C 20 0A                 2581 	jr	NZ, 00114$
                                   2582 ;main.c:166: xDir = 0;
      00096E 21r56r00              2583 	ld	hl, #_xDir
      000971 36 00                 2584 	ld	(hl), #0x00
                                   2585 ;main.c:167: yDir = 1;
      000973 21r57r00              2586 	ld	hl, #_yDir
      000976 36 01                 2587 	ld	(hl), #0x01
      000978                       2588 00114$:
                                   2589 ;main.c:171: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000978 F8 03                 2590 	ldhl	sp,	#3
      00097A 3A                    2591 	ld	a, (hl-)
      00097B B6                    2592 	or	a, (hl)
      00097C 28 0F                 2593 	jr	Z, 00118$
      00097E 2B                    2594 	dec	hl
      00097F 3A                    2595 	ld	a, (hl-)
      000980 B6                    2596 	or	a, (hl)
      000981 28 0A                 2597 	jr	Z, 00118$
                                   2598 ;main.c:172: xDir = 1;
      000983 21r56r00              2599 	ld	hl, #_xDir
      000986 36 01                 2600 	ld	(hl), #0x01
                                   2601 ;main.c:173: yDir = -1;
      000988 21r57r00              2602 	ld	hl, #_yDir
      00098B 36 FF                 2603 	ld	(hl), #0xff
      00098D                       2604 00118$:
                                   2605 ;main.c:175: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      00098D F8 03                 2606 	ldhl	sp,	#3
      00098F 3A                    2607 	ld	a, (hl-)
      000990 B6                    2608 	or	a, (hl)
      000991 28 0E                 2609 	jr	Z, 00121$
      000993 7A                    2610 	ld	a, d
      000994 B3                    2611 	or	a, e
      000995 28 0A                 2612 	jr	Z, 00121$
                                   2613 ;main.c:176: xDir = -1;
      000997 21r56r00              2614 	ld	hl, #_xDir
      00099A 36 FF                 2615 	ld	(hl), #0xff
                                   2616 ;main.c:177: yDir = -1;
      00099C 21r57r00              2617 	ld	hl, #_yDir
      00099F 36 FF                 2618 	ld	(hl), #0xff
      0009A1                       2619 00121$:
                                   2620 ;main.c:179: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      0009A1 78                    2621 	ld	a, b
      0009A2 B1                    2622 	or	a, c
      0009A3 28 10                 2623 	jr	Z, 00124$
      0009A5 F8 01                 2624 	ldhl	sp,	#1
      0009A7 3A                    2625 	ld	a, (hl-)
      0009A8 B6                    2626 	or	a, (hl)
      0009A9 28 0A                 2627 	jr	Z, 00124$
                                   2628 ;main.c:180: xDir = 1;
      0009AB 21r56r00              2629 	ld	hl, #_xDir
      0009AE 36 01                 2630 	ld	(hl), #0x01
                                   2631 ;main.c:181: yDir = 1;
      0009B0 21r57r00              2632 	ld	hl, #_yDir
      0009B3 36 01                 2633 	ld	(hl), #0x01
      0009B5                       2634 00124$:
                                   2635 ;main.c:183: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      0009B5 78                    2636 	ld	a, b
      0009B6 B1                    2637 	or	a, c
      0009B7 28 0E                 2638 	jr	Z, 00127$
      0009B9 7A                    2639 	ld	a, d
      0009BA B3                    2640 	or	a, e
      0009BB 28 0A                 2641 	jr	Z, 00127$
                                   2642 ;main.c:184: xDir = -1;
      0009BD 21r56r00              2643 	ld	hl, #_xDir
      0009C0 36 FF                 2644 	ld	(hl), #0xff
                                   2645 ;main.c:185: yDir = 1;
      0009C2 21r57r00              2646 	ld	hl, #_yDir
      0009C5 36 01                 2647 	ld	(hl), #0x01
      0009C7                       2648 00127$:
                                   2649 ;main.c:190: if (xDir == 0 && yDir == 0) {
      0009C7 FAr56r00              2650 	ld	a, (#_xDir)
      0009CA B7                    2651 	or	a, a
      0009CB 20 07                 2652 	jr	NZ, 00130$
      0009CD FAr57r00              2653 	ld	a, (#_yDir)
      0009D0 B7                    2654 	or	a, a
                                   2655 ;main.c:191: return;
      0009D1 CAr1Dr0B              2656 	jp	Z,00195$
      0009D4                       2657 00130$:
                                   2658 ;main.c:223: if (xDir == 0 && yDir > 0) {
      0009D4 21r57r00              2659 	ld	hl, #_yDir
      0009D7 5E                    2660 	ld	e, (hl)
      0009D8 AF                    2661 	xor	a, a
      0009D9 57                    2662 	ld	d, a
      0009DA 96                    2663 	sub	a, (hl)
      0009DB CB 7B                 2664 	bit	7, e
      0009DD 28 07                 2665 	jr	Z, 00387$
      0009DF CB 7A                 2666 	bit	7, d
      0009E1 20 08                 2667 	jr	NZ, 00388$
      0009E3 BF                    2668 	cp	a, a
      0009E4 18 05                 2669 	jr	00388$
      0009E6                       2670 00387$:
      0009E6 CB 7A                 2671 	bit	7, d
      0009E8 28 01                 2672 	jr	Z, 00388$
      0009EA 37                    2673 	scf
      0009EB                       2674 00388$:
      0009EB 3E 00                 2675 	ld	a, #0x00
      0009ED 17                    2676 	rla
      0009EE 4F                    2677 	ld	c, a
      0009EF FAr56r00              2678 	ld	a, (#_xDir)
      0009F2 B7                    2679 	or	a,a
      0009F3 20 1A                 2680 	jr	NZ, 00160$
      0009F5 B1                    2681 	or	a,c
      0009F6 28 17                 2682 	jr	Z, 00160$
                                   2683 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0009F8 21r02r00              2684 	ld	hl, #(_shadow_OAM + 2)
      0009FB 36 00                 2685 	ld	(hl), #0x00
      0009FD 21r06r00              2686 	ld	hl, #(_shadow_OAM + 6)
      000A00 36 02                 2687 	ld	(hl), #0x02
                                   2688 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000A02 21r03r00              2689 	ld	hl, #(_shadow_OAM + 3)
      000A05 36 40                 2690 	ld	(hl), #0x40
      000A07 21r07r00              2691 	ld	hl, #(_shadow_OAM + 7)
      000A0A 36 40                 2692 	ld	(hl), #0x40
                                   2693 ;main.c:227: set_sprite_prop(1, S_FLIPY); 
      000A0C C3r1Dr0B              2694 	jp	00195$
      000A0F                       2695 00160$:
                                   2696 ;main.c:229: else if (xDir == 0 && yDir < 0) {
      000A0F FAr57r00              2697 	ld	a, (#_yDir)
      000A12 07                    2698 	rlca
      000A13 E6 01                 2699 	and	a,#0x01
      000A15 F8 02                 2700 	ldhl	sp,	#2
      000A17 77                    2701 	ld	(hl), a
      000A18 FAr56r00              2702 	ld	a, (#_xDir)
      000A1B B7                    2703 	or	a, a
      000A1C 20 1D                 2704 	jr	NZ, 00156$
      000A1E F8 02                 2705 	ldhl	sp,	#2
      000A20 7E                    2706 	ld	a, (hl)
      000A21 B7                    2707 	or	a, a
      000A22 28 17                 2708 	jr	Z, 00156$
                                   2709 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000A24 21r02r00              2710 	ld	hl, #(_shadow_OAM + 2)
      000A27 36 00                 2711 	ld	(hl), #0x00
      000A29 21r06r00              2712 	ld	hl, #(_shadow_OAM + 6)
      000A2C 36 02                 2713 	ld	(hl), #0x02
                                   2714 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000A2E 21r03r00              2715 	ld	hl, #(_shadow_OAM + 3)
      000A31 36 00                 2716 	ld	(hl), #0x00
      000A33 21r07r00              2717 	ld	hl, #(_shadow_OAM + 7)
      000A36 36 00                 2718 	ld	(hl), #0x00
                                   2719 ;main.c:233: set_sprite_prop(1, 0); 
      000A38 C3r1Dr0B              2720 	jp	00195$
      000A3B                       2721 00156$:
                                   2722 ;main.c:235: else if (xDir > 0 && yDir == 0) {
      000A3B 21r56r00              2723 	ld	hl, #_xDir
      000A3E 5E                    2724 	ld	e, (hl)
      000A3F AF                    2725 	xor	a, a
      000A40 57                    2726 	ld	d, a
      000A41 96                    2727 	sub	a, (hl)
      000A42 CB 7B                 2728 	bit	7, e
      000A44 28 07                 2729 	jr	Z, 00389$
      000A46 CB 7A                 2730 	bit	7, d
      000A48 20 08                 2731 	jr	NZ, 00390$
      000A4A BF                    2732 	cp	a, a
      000A4B 18 05                 2733 	jr	00390$
      000A4D                       2734 00389$:
      000A4D CB 7A                 2735 	bit	7, d
      000A4F 28 01                 2736 	jr	Z, 00390$
      000A51 37                    2737 	scf
      000A52                       2738 00390$:
      000A52 3E 00                 2739 	ld	a, #0x00
      000A54 17                    2740 	rla
      000A55 47                    2741 	ld	b, a
      000A56 B7                    2742 	or	a, a
      000A57 28 1D                 2743 	jr	Z, 00152$
      000A59 FAr57r00              2744 	ld	a, (#_yDir)
      000A5C B7                    2745 	or	a, a
      000A5D 20 17                 2746 	jr	NZ, 00152$
                                   2747 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000A5F 21r02r00              2748 	ld	hl, #(_shadow_OAM + 2)
      000A62 36 04                 2749 	ld	(hl), #0x04
      000A64 21r06r00              2750 	ld	hl, #(_shadow_OAM + 6)
      000A67 36 06                 2751 	ld	(hl), #0x06
                                   2752 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000A69 21r03r00              2753 	ld	hl, #(_shadow_OAM + 3)
      000A6C 36 00                 2754 	ld	(hl), #0x00
      000A6E 21r07r00              2755 	ld	hl, #(_shadow_OAM + 7)
      000A71 36 00                 2756 	ld	(hl), #0x00
                                   2757 ;main.c:239: set_sprite_prop(1, 0); 
      000A73 C3r1Dr0B              2758 	jp	00195$
      000A76                       2759 00152$:
                                   2760 ;main.c:241: else if (xDir < 0 && yDir == 0) {
      000A76 FAr56r00              2761 	ld	a, (#_xDir)
      000A79 07                    2762 	rlca
      000A7A E6 01                 2763 	and	a,#0x01
      000A7C F8 03                 2764 	ldhl	sp,	#3
      000A7E 77                    2765 	ld	(hl), a
      000A7F 7E                    2766 	ld	a, (hl)
      000A80 B7                    2767 	or	a, a
      000A81 28 1D                 2768 	jr	Z, 00148$
      000A83 FAr57r00              2769 	ld	a, (#_yDir)
      000A86 B7                    2770 	or	a, a
      000A87 20 17                 2771 	jr	NZ, 00148$
                                   2772 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000A89 21r02r00              2773 	ld	hl, #(_shadow_OAM + 2)
      000A8C 36 04                 2774 	ld	(hl), #0x04
      000A8E 21r06r00              2775 	ld	hl, #(_shadow_OAM + 6)
      000A91 36 06                 2776 	ld	(hl), #0x06
                                   2777 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000A93 21r03r00              2778 	ld	hl, #(_shadow_OAM + 3)
      000A96 36 20                 2779 	ld	(hl), #0x20
      000A98 21r07r00              2780 	ld	hl, #(_shadow_OAM + 7)
      000A9B 36 20                 2781 	ld	(hl), #0x20
                                   2782 ;main.c:245: set_sprite_prop(1, S_FLIPX); 
      000A9D C3r1Dr0B              2783 	jp	00195$
      000AA0                       2784 00148$:
                                   2785 ;main.c:247: else if (xDir > 0 && yDir < 0) {
      000AA0 78                    2786 	ld	a, b
      000AA1 B7                    2787 	or	a, a
      000AA2 28 1C                 2788 	jr	Z, 00144$
      000AA4 F8 02                 2789 	ldhl	sp,	#2
      000AA6 7E                    2790 	ld	a, (hl)
      000AA7 B7                    2791 	or	a, a
      000AA8 28 16                 2792 	jr	Z, 00144$
                                   2793 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000AAA 21r02r00              2794 	ld	hl, #(_shadow_OAM + 2)
      000AAD 36 08                 2795 	ld	(hl), #0x08
      000AAF 21r06r00              2796 	ld	hl, #(_shadow_OAM + 6)
      000AB2 36 0A                 2797 	ld	(hl), #0x0a
                                   2798 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000AB4 21r03r00              2799 	ld	hl, #(_shadow_OAM + 3)
      000AB7 36 00                 2800 	ld	(hl), #0x00
      000AB9 21r07r00              2801 	ld	hl, #(_shadow_OAM + 7)
      000ABC 36 00                 2802 	ld	(hl), #0x00
                                   2803 ;main.c:251: set_sprite_prop(1, 0); 
      000ABE 18 5D                 2804 	jr	00195$
      000AC0                       2805 00144$:
                                   2806 ;main.c:253: else if (xDir > 0 && yDir > 0) {
      000AC0 78                    2807 	ld	a, b
      000AC1 B7                    2808 	or	a, a
      000AC2 28 1A                 2809 	jr	Z, 00140$
      000AC4 79                    2810 	ld	a, c
      000AC5 B7                    2811 	or	a, a
      000AC6 28 16                 2812 	jr	Z, 00140$
                                   2813 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000AC8 21r02r00              2814 	ld	hl, #(_shadow_OAM + 2)
      000ACB 36 08                 2815 	ld	(hl), #0x08
      000ACD 21r06r00              2816 	ld	hl, #(_shadow_OAM + 6)
      000AD0 36 0A                 2817 	ld	(hl), #0x0a
                                   2818 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000AD2 21r03r00              2819 	ld	hl, #(_shadow_OAM + 3)
      000AD5 36 40                 2820 	ld	(hl), #0x40
      000AD7 21r07r00              2821 	ld	hl, #(_shadow_OAM + 7)
      000ADA 36 40                 2822 	ld	(hl), #0x40
                                   2823 ;main.c:257: set_sprite_prop(1, S_FLIPY); 
      000ADC 18 3F                 2824 	jr	00195$
      000ADE                       2825 00140$:
                                   2826 ;main.c:259: else if (xDir < 0 && yDir > 0) {
      000ADE F8 03                 2827 	ldhl	sp,	#3
      000AE0 7E                    2828 	ld	a, (hl)
      000AE1 B7                    2829 	or	a, a
      000AE2 28 1A                 2830 	jr	Z, 00136$
      000AE4 79                    2831 	ld	a, c
      000AE5 B7                    2832 	or	a, a
      000AE6 28 16                 2833 	jr	Z, 00136$
                                   2834 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000AE8 21r02r00              2835 	ld	hl, #(_shadow_OAM + 2)
      000AEB 36 08                 2836 	ld	(hl), #0x08
      000AED 21r06r00              2837 	ld	hl, #(_shadow_OAM + 6)
      000AF0 36 0A                 2838 	ld	(hl), #0x0a
                                   2839 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000AF2 21r03r00              2840 	ld	hl, #(_shadow_OAM + 3)
      000AF5 36 60                 2841 	ld	(hl), #0x60
      000AF7 21r07r00              2842 	ld	hl, #(_shadow_OAM + 7)
      000AFA 36 60                 2843 	ld	(hl), #0x60
                                   2844 ;main.c:263: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000AFC 18 1F                 2845 	jr	00195$
      000AFE                       2846 00136$:
                                   2847 ;main.c:265: else if (xDir < 0 && yDir < 0) {
      000AFE F8 03                 2848 	ldhl	sp,	#3
      000B00 7E                    2849 	ld	a, (hl)
      000B01 B7                    2850 	or	a, a
      000B02 28 19                 2851 	jr	Z, 00195$
      000B04 2B                    2852 	dec	hl
      000B05 7E                    2853 	ld	a, (hl)
      000B06 B7                    2854 	or	a, a
      000B07 28 14                 2855 	jr	Z, 00195$
                                   2856 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B09 21r02r00              2857 	ld	hl, #(_shadow_OAM + 2)
      000B0C 36 08                 2858 	ld	(hl), #0x08
      000B0E 21r06r00              2859 	ld	hl, #(_shadow_OAM + 6)
      000B11 36 0A                 2860 	ld	(hl), #0x0a
                                   2861 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B13 21r03r00              2862 	ld	hl, #(_shadow_OAM + 3)
      000B16 36 20                 2863 	ld	(hl), #0x20
      000B18 21r07r00              2864 	ld	hl, #(_shadow_OAM + 7)
      000B1B 36 20                 2865 	ld	(hl), #0x20
                                   2866 ;main.c:269: set_sprite_prop(1, S_FLIPX); 
      000B1D                       2867 00195$:
                                   2868 ;main.c:271: }
      000B1D E8 04                 2869 	add	sp, #4
      000B1F C9                    2870 	ret
                                   2871 ;main.c:300: void playSound(uint8_t type) {
                                   2872 ;	---------------------------------
                                   2873 ; Function playSound
                                   2874 ; ---------------------------------
      000B20                       2875 _playSound::
                                   2876 ;main.c:301: if (type == 20) { //singlegun
      000B20 F8 02                 2877 	ldhl	sp,	#2
      000B22 7E                    2878 	ld	a, (hl)
      000B23 D6 14                 2879 	sub	a, #0x14
      000B25 20 13                 2880 	jr	NZ, 00102$
                                   2881 ;main.c:302: NR10_REG = 0x00;
      000B27 AF                    2882 	xor	a, a
      000B28 E0r00                 2883 	ldh	(_NR10_REG + 0), a
                                   2884 ;main.c:303: NR11_REG = 0x81;
      000B2A 3E 81                 2885 	ld	a, #0x81
      000B2C E0r00                 2886 	ldh	(_NR11_REG + 0), a
                                   2887 ;main.c:304: NR12_REG = 0x43;
      000B2E 3E 43                 2888 	ld	a, #0x43
      000B30 E0r00                 2889 	ldh	(_NR12_REG + 0), a
                                   2890 ;main.c:305: NR13_REG = 0X00;//0x6D;
      000B32 AF                    2891 	xor	a, a
      000B33 E0r00                 2892 	ldh	(_NR13_REG + 0), a
                                   2893 ;main.c:306: NR14_REG = 0x86;
      000B35 3E 86                 2894 	ld	a, #0x86
      000B37 E0r00                 2895 	ldh	(_NR14_REG + 0), a
                                   2896 ;main.c:307: return;
      000B39 C9                    2897 	ret
      000B3A                       2898 00102$:
                                   2899 ;main.c:309: if (type == 23) {
      000B3A F8 02                 2900 	ldhl	sp,	#2
      000B3C 7E                    2901 	ld	a, (hl)
      000B3D D6 17                 2902 	sub	a, #0x17
      000B3F 20 12                 2903 	jr	NZ, 00104$
                                   2904 ;main.c:310: NR10_REG = 0x00;
      000B41 AF                    2905 	xor	a, a
      000B42 E0r00                 2906 	ldh	(_NR10_REG + 0), a
                                   2907 ;main.c:311: NR11_REG = 0x81;
      000B44 3E 81                 2908 	ld	a, #0x81
      000B46 E0r00                 2909 	ldh	(_NR11_REG + 0), a
                                   2910 ;main.c:312: NR12_REG = 0x53;
      000B48 3E 53                 2911 	ld	a, #0x53
      000B4A E0r00                 2912 	ldh	(_NR12_REG + 0), a
                                   2913 ;main.c:313: NR13_REG = 0X00;//0x6D;
      000B4C AF                    2914 	xor	a, a
      000B4D E0r00                 2915 	ldh	(_NR13_REG + 0), a
                                   2916 ;main.c:314: NR14_REG = 0x86;
      000B4F 3E 86                 2917 	ld	a, #0x86
      000B51 E0r00                 2918 	ldh	(_NR14_REG + 0), a
      000B53                       2919 00104$:
                                   2920 ;main.c:316: if (type == 26) {
      000B53 F8 02                 2921 	ldhl	sp,	#2
      000B55 7E                    2922 	ld	a, (hl)
      000B56 D6 1A                 2923 	sub	a, #0x1a
      000B58 20 13                 2924 	jr	NZ, 00106$
                                   2925 ;main.c:317: NR10_REG = 0x00;
      000B5A AF                    2926 	xor	a, a
      000B5B E0r00                 2927 	ldh	(_NR10_REG + 0), a
                                   2928 ;main.c:318: NR11_REG = 0x89;
      000B5D 3E 89                 2929 	ld	a, #0x89
      000B5F E0r00                 2930 	ldh	(_NR11_REG + 0), a
                                   2931 ;main.c:319: NR12_REG = 0x55;
      000B61 3E 55                 2932 	ld	a, #0x55
      000B63 E0r00                 2933 	ldh	(_NR12_REG + 0), a
                                   2934 ;main.c:320: NR13_REG = 0x70;//0Xbe;//0x6D;
      000B65 3E 70                 2935 	ld	a, #0x70
      000B67 E0r00                 2936 	ldh	(_NR13_REG + 0), a
                                   2937 ;main.c:321: NR14_REG = 0x84;
      000B69 3E 84                 2938 	ld	a, #0x84
      000B6B E0r00                 2939 	ldh	(_NR14_REG + 0), a
      000B6D                       2940 00106$:
                                   2941 ;main.c:323: if (type == 0) {  // explosion
      000B6D F8 02                 2942 	ldhl	sp,	#2
      000B6F 7E                    2943 	ld	a, (hl)
      000B70 B7                    2944 	or	a, a
      000B71 C0                    2945 	ret	NZ
                                   2946 ;main.c:324: NR41_REG = 0x20;  
      000B72 3E 20                 2947 	ld	a, #0x20
      000B74 E0r00                 2948 	ldh	(_NR41_REG + 0), a
                                   2949 ;main.c:325: NR42_REG = 0xa2;//0xa3;  
      000B76 3E A2                 2950 	ld	a, #0xa2
      000B78 E0r00                 2951 	ldh	(_NR42_REG + 0), a
                                   2952 ;main.c:326: NR43_REG = 0x57;  
      000B7A 3E 57                 2953 	ld	a, #0x57
      000B7C E0r00                 2954 	ldh	(_NR43_REG + 0), a
                                   2955 ;main.c:327: NR44_REG = 0x80;  
      000B7E 3E 80                 2956 	ld	a, #0x80
      000B80 E0r00                 2957 	ldh	(_NR44_REG + 0), a
                                   2958 ;main.c:333: }
      000B82 C9                    2959 	ret
                                   2960 ;main.c:335: void initEnemies(uint8_t loadSprites) {
                                   2961 ;	---------------------------------
                                   2962 ; Function initEnemies
                                   2963 ; ---------------------------------
      000B83                       2964 _initEnemies::
      000B83 E8 F9                 2965 	add	sp, #-7
                                   2966 ;main.c:337: if (loadSprites) {
      000B85 F8 09                 2967 	ldhl	sp,	#9
      000B87 7E                    2968 	ld	a, (hl)
      000B88 B7                    2969 	or	a, a
      000B89 28 1A                 2970 	jr	Z, 00102$
                                   2971 ;main.c:339: set_sprite_data(0x40, 1, enemy1);
      000B8B 11r17r05              2972 	ld	de, #_enemy1
      000B8E D5                    2973 	push	de
      000B8F 21 40 01              2974 	ld	hl, #0x140
      000B92 E5                    2975 	push	hl
      000B93 CDr00r00              2976 	call	_set_sprite_data
      000B96 E8 04                 2977 	add	sp, #4
                                   2978 ;main.c:340: set_sprite_data(0x50, 4, largeenemies);
      000B98 11r27r05              2979 	ld	de, #_largeenemies
      000B9B D5                    2980 	push	de
      000B9C 21 50 04              2981 	ld	hl, #0x450
      000B9F E5                    2982 	push	hl
      000BA0 CDr00r00              2983 	call	_set_sprite_data
      000BA3 E8 04                 2984 	add	sp, #4
      000BA5                       2985 00102$:
                                   2986 ;main.c:343: struct Enemy *eptr = enemies;
      000BA5 01r00r00              2987 	ld	bc, #_enemies+0
                                   2988 ;main.c:345: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000BA8 F8 06                 2989 	ldhl	sp,	#6
      000BAA 36 00                 2990 	ld	(hl), #0x00
      000BAC                       2991 00116$:
      000BAC 21r8Cr07              2992 	ld	hl, #_ENEMYCOUNT
      000BAF 5E                    2993 	ld	e, (hl)
      000BB0 F8 06                 2994 	ldhl	sp,	#6
      000BB2 7E                    2995 	ld	a, (hl)
      000BB3 93                    2996 	sub	a, e
      000BB4 D2rCEr0C              2997 	jp	NC, 00118$
                                   2998 ;main.c:346: if (eptr->alive == 0) {
      000BB7 21 09 00              2999 	ld	hl, #0x0009
      000BBA 09                    3000 	add	hl, bc
      000BBB 7E                    3001 	ld	a, (hl)
      000BBC B7                    3002 	or	a, a
      000BBD C2rC2r0C              3003 	jp	NZ, 00107$
                                   3004 ;main.c:347: (*eptr) = bigblob;
      000BC0 59                    3005 	ld	e, c
      000BC1 50                    3006 	ld	d, b
      000BC2 C5                    3007 	push	bc
      000BC3 21 10 00              3008 	ld	hl, #0x0010
      000BC6 E5                    3009 	push	hl
      000BC7 21r20r00              3010 	ld	hl, #_bigblob
      000BCA E5                    3011 	push	hl
      000BCB D5                    3012 	push	de
      000BCC CDr00r00              3013 	call	___memcpy
      000BCF E8 06                 3014 	add	sp, #6
      000BD1 CDr00r00              3015 	call	_rand
      000BD4 7B                    3016 	ld	a, e
      000BD5 C1                    3017 	pop	bc
      000BD6 E6 07                 3018 	and	a, #0x07
      000BD8 F8 05                 3019 	ldhl	sp,	#5
      000BDA 77                    3020 	ld	(hl), a
                                   3021 ;main.c:350: eptr->x = xSpawnPositions[posIndex];
      000BDB 11r8Dr07              3022 	ld	de, #_xSpawnPositions
      000BDE 6E                    3023 	ld	l, (hl)
      000BDF 26 00                 3024 	ld	h, #0x00
      000BE1 19                    3025 	add	hl, de
      000BE2 5D                    3026 	ld	e, l
      000BE3 54                    3027 	ld	d, h
      000BE4 1A                    3028 	ld	a, (de)
      000BE5 5F                    3029 	ld	e, a
      000BE6 16 00                 3030 	ld	d, #0x00
      000BE8 69                    3031 	ld	l, c
      000BE9 60                    3032 	ld	h, b
      000BEA 7B                    3033 	ld	a, e
      000BEB 22                    3034 	ld	(hl+), a
      000BEC 72                    3035 	ld	(hl), d
                                   3036 ;main.c:351: eptr->y = ySpawnPositions[posIndex];
      000BED 21 02 00              3037 	ld	hl, #0x0002
      000BF0 09                    3038 	add	hl, bc
      000BF1 33                    3039 	inc	sp
      000BF2 33                    3040 	inc	sp
      000BF3 E5                    3041 	push	hl
      000BF4 F8 05                 3042 	ldhl	sp,	#5
      000BF6 5E                    3043 	ld	e, (hl)
      000BF7 16 00                 3044 	ld	d, #0x00
      000BF9 21r95r07              3045 	ld	hl, #_ySpawnPositions
      000BFC 19                    3046 	add	hl, de
      000BFD 5D                    3047 	ld	e, l
      000BFE 54                    3048 	ld	d, h
      000BFF 1A                    3049 	ld	a, (de)
      000C00 F8 04                 3050 	ldhl	sp,	#4
      000C02 22                    3051 	ld	(hl+), a
      000C03 AF                    3052 	xor	a, a
      000C04 32                    3053 	ld	(hl-), a
      000C05 D1                    3054 	pop	de
      000C06 D5                    3055 	push	de
      000C07 2A                    3056 	ld	a, (hl+)
      000C08 12                    3057 	ld	(de), a
      000C09 13                    3058 	inc	de
      000C0A 7E                    3059 	ld	a, (hl)
      000C0B 12                    3060 	ld	(de), a
                                   3061 ;main.c:353: if (eptr->spriteCount == 1) {
      000C0C 21 08 00              3062 	ld	hl, #0x0008
      000C0F 09                    3063 	add	hl, bc
      000C10 7E                    3064 	ld	a, (hl)
      000C11 F8 05                 3065 	ldhl	sp,	#5
      000C13 77                    3066 	ld	(hl), a
                                   3067 ;main.c:354: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000C14 21 06 00              3068 	ld	hl, #0x0006
      000C17 09                    3069 	add	hl, bc
      000C18 5D                    3070 	ld	e, l
      000C19 54                    3071 	ld	d, h
      000C1A F8 06                 3072 	ldhl	sp,	#6
      000C1C 6E                    3073 	ld	l, (hl)
                                   3074 ;	spillPairReg hl
                                   3075 ;	spillPairReg hl
      000C1D 1A                    3076 	ld	a, (de)
      000C1E 5F                    3077 	ld	e, a
      000C1F 7D                    3078 	ld	a, l
      000C20 87                    3079 	add	a, a
      000C21 F8 02                 3080 	ldhl	sp,	#2
      000C23 77                    3081 	ld	(hl), a
      000C24 2A                    3082 	ld	a, (hl+)
      000C25 C6 0A                 3083 	add	a, #0x0a
                                   3084 ;main.c:353: if (eptr->spriteCount == 1) {
      000C27 22                    3085 	ld	(hl+), a
      000C28 23                    3086 	inc	hl
      000C29 7E                    3087 	ld	a, (hl)
      000C2A 3D                    3088 	dec	a
      000C2B 20 30                 3089 	jr	NZ, 00104$
                                   3090 ;main.c:354: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000C2D F8 03                 3091 	ldhl	sp,	#3
      000C2F 56                    3092 	ld	d, (hl)
                                   3093 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C30 6A                    3094 	ld	l, d
                                   3095 ;	spillPairReg hl
                                   3096 ;	spillPairReg hl
      000C31 26 00                 3097 	ld	h, #0x00
                                   3098 ;	spillPairReg hl
                                   3099 ;	spillPairReg hl
      000C33 29                    3100 	add	hl, hl
      000C34 29                    3101 	add	hl, hl
      000C35 D5                    3102 	push	de
      000C36 11r00r00              3103 	ld	de, #_shadow_OAM
      000C39 19                    3104 	add	hl, de
      000C3A 23                    3105 	inc	hl
      000C3B 23                    3106 	inc	hl
      000C3C D1                    3107 	pop	de
      000C3D 73                    3108 	ld	(hl), e
                                   3109 ;main.c:355: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000C3E D1                    3110 	pop	de
      000C3F D5                    3111 	push	de
      000C40 1A                    3112 	ld	a, (de)
      000C41 F8 05                 3113 	ldhl	sp,	#5
      000C43 32                    3114 	ld	(hl-), a
      000C44 0A                    3115 	ld	a, (bc)
      000C45 32                    3116 	ld	(hl-), a
      000C46 5E                    3117 	ld	e, (hl)
                                   3118 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000C47 26 00                 3119 	ld	h, #0x00
                                   3120 ;	spillPairReg hl
                                   3121 ;	spillPairReg hl
      000C49 6B                    3122 	ld	l, e
      000C4A 29                    3123 	add	hl, hl
      000C4B 29                    3124 	add	hl, hl
      000C4C 7D                    3125 	ld	a, l
      000C4D C6r00                 3126 	add	a, #<(_shadow_OAM)
      000C4F 5F                    3127 	ld	e, a
      000C50 7C                    3128 	ld	a, h
      000C51 CEs00                 3129 	adc	a, #>(_shadow_OAM)
      000C53 57                    3130 	ld	d, a
                                   3131 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000C54 F8 05                 3132 	ldhl	sp,	#5
      000C56 3A                    3133 	ld	a, (hl-)
      000C57 12                    3134 	ld	(de), a
      000C58 13                    3135 	inc	de
      000C59 7E                    3136 	ld	a, (hl)
      000C5A 12                    3137 	ld	(de), a
                                   3138 ;main.c:355: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000C5B 18 65                 3139 	jr	00107$
      000C5D                       3140 00104$:
                                   3141 ;main.c:358: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000C5D F8 03                 3142 	ldhl	sp,	#3
      000C5F 56                    3143 	ld	d, (hl)
                                   3144 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C60 26 00                 3145 	ld	h, #0x00
                                   3146 ;	spillPairReg hl
                                   3147 ;	spillPairReg hl
      000C62 6A                    3148 	ld	l, d
      000C63 29                    3149 	add	hl, hl
      000C64 29                    3150 	add	hl, hl
      000C65 D5                    3151 	push	de
      000C66 11r00r00              3152 	ld	de, #_shadow_OAM
      000C69 19                    3153 	add	hl, de
      000C6A 23                    3154 	inc	hl
      000C6B 23                    3155 	inc	hl
      000C6C D1                    3156 	pop	de
      000C6D 73                    3157 	ld	(hl), e
                                   3158 ;main.c:359: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000C6E D1                    3159 	pop	de
      000C6F D5                    3160 	push	de
      000C70 1A                    3161 	ld	a, (de)
      000C71 F8 04                 3162 	ldhl	sp,	#4
      000C73 22                    3163 	ld	(hl+), a
      000C74 0A                    3164 	ld	a, (bc)
      000C75 32                    3165 	ld	(hl-), a
      000C76 2B                    3166 	dec	hl
      000C77 5E                    3167 	ld	e, (hl)
                                   3168 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000C78 26 00                 3169 	ld	h, #0x00
                                   3170 ;	spillPairReg hl
                                   3171 ;	spillPairReg hl
      000C7A 6B                    3172 	ld	l, e
      000C7B 29                    3173 	add	hl, hl
      000C7C 29                    3174 	add	hl, hl
      000C7D 11r00r00              3175 	ld	de, #_shadow_OAM
      000C80 19                    3176 	add	hl, de
      000C81 5D                    3177 	ld	e, l
      000C82 54                    3178 	ld	d, h
                                   3179 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000C83 F8 04                 3180 	ldhl	sp,	#4
      000C85 2A                    3181 	ld	a, (hl+)
      000C86 12                    3182 	ld	(de), a
      000C87 13                    3183 	inc	de
      000C88 7E                    3184 	ld	a, (hl)
      000C89 12                    3185 	ld	(de), a
                                   3186 ;main.c:361: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      000C8A 21 07 00              3187 	ld	hl, #0x0007
      000C8D 09                    3188 	add	hl, bc
      000C8E 5E                    3189 	ld	e, (hl)
      000C8F F8 02                 3190 	ldhl	sp,	#2
      000C91 7E                    3191 	ld	a, (hl)
      000C92 C6 0B                 3192 	add	a, #0x0b
      000C94 F8 05                 3193 	ldhl	sp,	#5
      000C96 77                    3194 	ld	(hl), a
      000C97 56                    3195 	ld	d, (hl)
                                   3196 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C98 26 00                 3197 	ld	h, #0x00
                                   3198 ;	spillPairReg hl
                                   3199 ;	spillPairReg hl
      000C9A 6A                    3200 	ld	l, d
      000C9B 29                    3201 	add	hl, hl
      000C9C 29                    3202 	add	hl, hl
      000C9D D5                    3203 	push	de
      000C9E 11r00r00              3204 	ld	de, #_shadow_OAM
      000CA1 19                    3205 	add	hl, de
      000CA2 23                    3206 	inc	hl
      000CA3 23                    3207 	inc	hl
      000CA4 D1                    3208 	pop	de
      000CA5 73                    3209 	ld	(hl), e
                                   3210 ;main.c:362: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000CA6 D1                    3211 	pop	de
      000CA7 D5                    3212 	push	de
      000CA8 1A                    3213 	ld	a, (de)
      000CA9 F8 04                 3214 	ldhl	sp,	#4
      000CAB 32                    3215 	ld	(hl-), a
      000CAC 0A                    3216 	ld	a, (bc)
      000CAD 22                    3217 	ld	(hl+), a
      000CAE 23                    3218 	inc	hl
      000CAF 5E                    3219 	ld	e, (hl)
                                   3220 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000CB0 26 00                 3221 	ld	h, #0x00
                                   3222 ;	spillPairReg hl
                                   3223 ;	spillPairReg hl
      000CB2 6B                    3224 	ld	l, e
      000CB3 29                    3225 	add	hl, hl
      000CB4 29                    3226 	add	hl, hl
      000CB5 11r00r00              3227 	ld	de, #_shadow_OAM
      000CB8 19                    3228 	add	hl, de
      000CB9 5D                    3229 	ld	e, l
      000CBA 54                    3230 	ld	d, h
                                   3231 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000CBB F8 04                 3232 	ldhl	sp,	#4
      000CBD 3A                    3233 	ld	a, (hl-)
      000CBE 12                    3234 	ld	(de), a
      000CBF 13                    3235 	inc	de
      000CC0 7E                    3236 	ld	a, (hl)
      000CC1 12                    3237 	ld	(de), a
                                   3238 ;main.c:362: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000CC2                       3239 00107$:
                                   3240 ;main.c:367: eptr++;
      000CC2 21 10 00              3241 	ld	hl, #0x0010
      000CC5 09                    3242 	add	hl, bc
      000CC6 4D                    3243 	ld	c, l
      000CC7 44                    3244 	ld	b, h
                                   3245 ;main.c:345: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000CC8 F8 06                 3246 	ldhl	sp,	#6
      000CCA 34                    3247 	inc	(hl)
      000CCB C3rACr0B              3248 	jp	00116$
      000CCE                       3249 00118$:
                                   3250 ;main.c:370: }
      000CCE E8 07                 3251 	add	sp, #7
      000CD0 C9                    3252 	ret
                                   3253 ;main.c:373: void updateEnemyPositions() {
                                   3254 ;	---------------------------------
                                   3255 ; Function updateEnemyPositions
                                   3256 ; ---------------------------------
      000CD1                       3257 _updateEnemyPositions::
      000CD1 E8 F0                 3258 	add	sp, #-16
                                   3259 ;main.c:376: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000CD3 F8 0F                 3260 	ldhl	sp,	#15
      000CD5 36 00                 3261 	ld	(hl), #0x00
      000CD7                       3262 00196$:
      000CD7 21r8Cr07              3263 	ld	hl, #_ENEMYCOUNT
      000CDA 4E                    3264 	ld	c, (hl)
      000CDB F8 0F                 3265 	ldhl	sp,	#15
      000CDD 7E                    3266 	ld	a, (hl)
      000CDE 91                    3267 	sub	a, c
      000CDF D2r8Er11              3268 	jp	NC, 00134$
                                   3269 ;main.c:377: if (!enemies[i].alive) {
      000CE2 3A                    3270 	ld	a, (hl-)
      000CE3 2B                    3271 	dec	hl
      000CE4 22                    3272 	ld	(hl+), a
      000CE5 36 00                 3273 	ld	(hl), #0x00
      000CE7 3E 04                 3274 	ld	a, #0x04
      000CE9                       3275 00407$:
      000CE9 F8 0D                 3276 	ldhl	sp,	#13
      000CEB CB 26                 3277 	sla	(hl)
      000CED 23                    3278 	inc	hl
      000CEE CB 16                 3279 	rl	(hl)
      000CF0 3D                    3280 	dec	a
      000CF1 20 F6                 3281 	jr	NZ, 00407$
      000CF3 2B                    3282 	dec	hl
      000CF4 2A                    3283 	ld	a, (hl+)
      000CF5 5F                    3284 	ld	e, a
      000CF6 56                    3285 	ld	d, (hl)
      000CF7 21r00r00              3286 	ld	hl, #_enemies
      000CFA 19                    3287 	add	hl, de
      000CFB E5                    3288 	push	hl
      000CFC 7D                    3289 	ld	a, l
      000CFD F8 04                 3290 	ldhl	sp,	#4
      000CFF 77                    3291 	ld	(hl), a
      000D00 E1                    3292 	pop	hl
      000D01 7C                    3293 	ld	a, h
      000D02 F8 03                 3294 	ldhl	sp,	#3
      000D04 32                    3295 	ld	(hl-), a
      000D05 2A                    3296 	ld	a, (hl+)
      000D06 5F                    3297 	ld	e, a
      000D07 56                    3298 	ld	d, (hl)
      000D08 21 09 00              3299 	ld	hl, #0x0009
      000D0B 19                    3300 	add	hl, de
      000D0C 4D                    3301 	ld	c, l
      000D0D 44                    3302 	ld	b, h
      000D0E 0A                    3303 	ld	a, (bc)
      000D0F B7                    3304 	or	a, a
      000D10 CAr88r11              3305 	jp	Z, 00133$
                                   3306 ;main.c:380: enemies[i].x -= xOverflow;
      000D13 F8 02                 3307 	ldhl	sp,#2
      000D15 2A                    3308 	ld	a, (hl+)
      000D16 5F                    3309 	ld	e, a
      000D17 56                    3310 	ld	d, (hl)
      000D18 1A                    3311 	ld	a, (de)
      000D19 4F                    3312 	ld	c, a
      000D1A 13                    3313 	inc	de
      000D1B 1A                    3314 	ld	a, (de)
      000D1C 47                    3315 	ld	b, a
      000D1D 21r64r00              3316 	ld	hl, #_xOverflow
      000D20 2A                    3317 	ld	a, (hl+)
      000D21 5F                    3318 	ld	e, a
      000D22 56                    3319 	ld	d, (hl)
      000D23 79                    3320 	ld	a, c
      000D24 93                    3321 	sub	a, e
      000D25 5F                    3322 	ld	e, a
      000D26 78                    3323 	ld	a, b
      000D27 9A                    3324 	sbc	a, d
      000D28 F8 0E                 3325 	ldhl	sp,	#14
      000D2A 32                    3326 	ld	(hl-), a
      000D2B 73                    3327 	ld	(hl), e
      000D2C F8 02                 3328 	ldhl	sp,#2
      000D2E 2A                    3329 	ld	a, (hl+)
      000D2F 5F                    3330 	ld	e, a
      000D30 56                    3331 	ld	d, (hl)
      000D31 F8 0D                 3332 	ldhl	sp,	#13
      000D33 2A                    3333 	ld	a, (hl+)
      000D34 12                    3334 	ld	(de), a
      000D35 13                    3335 	inc	de
      000D36 7E                    3336 	ld	a, (hl)
      000D37 12                    3337 	ld	(de), a
                                   3338 ;main.c:381: enemies[i].y -= yOverflow;
      000D38 F8 02                 3339 	ldhl	sp,#2
      000D3A 2A                    3340 	ld	a, (hl+)
      000D3B 5F                    3341 	ld	e, a
      000D3C 56                    3342 	ld	d, (hl)
      000D3D 21 02 00              3343 	ld	hl, #0x0002
      000D40 19                    3344 	add	hl, de
      000D41 E5                    3345 	push	hl
      000D42 7D                    3346 	ld	a, l
      000D43 F8 06                 3347 	ldhl	sp,	#6
      000D45 77                    3348 	ld	(hl), a
      000D46 E1                    3349 	pop	hl
      000D47 7C                    3350 	ld	a, h
      000D48 F8 05                 3351 	ldhl	sp,	#5
      000D4A 32                    3352 	ld	(hl-), a
      000D4B 2A                    3353 	ld	a, (hl+)
      000D4C 5F                    3354 	ld	e, a
      000D4D 56                    3355 	ld	d, (hl)
      000D4E 1A                    3356 	ld	a, (de)
      000D4F 4F                    3357 	ld	c, a
      000D50 13                    3358 	inc	de
      000D51 1A                    3359 	ld	a, (de)
      000D52 47                    3360 	ld	b, a
      000D53 79                    3361 	ld	a, c
      000D54 21r66r00              3362 	ld	hl, #_yOverflow
      000D57 96                    3363 	sub	a, (hl)
      000D58 23                    3364 	inc	hl
      000D59 4F                    3365 	ld	c, a
      000D5A 78                    3366 	ld	a, b
      000D5B 9E                    3367 	sbc	a, (hl)
      000D5C 47                    3368 	ld	b, a
      000D5D F8 04                 3369 	ldhl	sp,	#4
      000D5F 2A                    3370 	ld	a,	(hl+)
      000D60 66                    3371 	ld	h, (hl)
      000D61 6F                    3372 	ld	l, a
      000D62 79                    3373 	ld	a, c
      000D63 22                    3374 	ld	(hl+), a
      000D64 70                    3375 	ld	(hl), b
                                   3376 ;main.c:384: if (abs(enemies[i].x - playerDrawX) > 8) {
      000D65 F8 0D                 3377 	ldhl	sp,	#13
      000D67 7E                    3378 	ld	a, (hl)
      000D68 21r5Er00              3379 	ld	hl, #_playerDrawX
      000D6B 4E                    3380 	ld	c, (hl)
      000D6C 91                    3381 	sub	a, c
      000D6D 4F                    3382 	ld	c, a
                                   3383 ;main.c:295: if (value >= 0) return value;
      000D6E CB 79                 3384 	bit	7, c
      000D70 20 03                 3385 	jr	NZ, 00169$
      000D72 41                    3386 	ld	b, c
      000D73 18 03                 3387 	jr	00171$
      000D75                       3388 00169$:
                                   3389 ;main.c:296: else return - value;
      000D75 AF                    3390 	xor	a, a
      000D76 91                    3391 	sub	a, c
      000D77 47                    3392 	ld	b, a
                                   3393 ;main.c:384: if (abs(enemies[i].x - playerDrawX) > 8) {
      000D78                       3394 00171$:
                                   3395 ;main.c:393: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000D78 F8 02                 3396 	ldhl	sp,#2
      000D7A 2A                    3397 	ld	a, (hl+)
      000D7B 5F                    3398 	ld	e, a
      000D7C 56                    3399 	ld	d, (hl)
      000D7D 21 0E 00              3400 	ld	hl, #0x000e
      000D80 19                    3401 	add	hl, de
      000D81 E5                    3402 	push	hl
      000D82 7D                    3403 	ld	a, l
      000D83 F8 08                 3404 	ldhl	sp,	#8
      000D85 77                    3405 	ld	(hl), a
      000D86 E1                    3406 	pop	hl
      000D87 7C                    3407 	ld	a, h
      000D88 F8 07                 3408 	ldhl	sp,	#7
      000D8A 32                    3409 	ld	(hl-), a
      000D8B 2A                    3410 	ld	a, (hl+)
      000D8C 5F                    3411 	ld	e, a
      000D8D 56                    3412 	ld	d, (hl)
      000D8E 1A                    3413 	ld	a, (de)
      000D8F 4F                    3414 	ld	c, a
                                   3415 ;main.c:386: enemies[i].xSpeed += enemies[i].accel;
      000D90 F8 02                 3416 	ldhl	sp,#2
      000D92 2A                    3417 	ld	a, (hl+)
      000D93 5F                    3418 	ld	e, a
      000D94 56                    3419 	ld	d, (hl)
      000D95 21 0D 00              3420 	ld	hl, #0x000d
      000D98 19                    3421 	add	hl, de
      000D99 33                    3422 	inc	sp
      000D9A 33                    3423 	inc	sp
      000D9B E5                    3424 	push	hl
                                   3425 ;main.c:384: if (abs(enemies[i].x - playerDrawX) > 8) {
      000D9C 58                    3426 	ld	e, b
      000D9D 3E 08                 3427 	ld	a,#0x08
      000D9F 57                    3428 	ld	d,a
      000DA0 90                    3429 	sub	a, b
      000DA1 CB 7B                 3430 	bit	7, e
      000DA3 28 07                 3431 	jr	Z, 00408$
      000DA5 CB 7A                 3432 	bit	7, d
      000DA7 20 08                 3433 	jr	NZ, 00409$
      000DA9 BF                    3434 	cp	a, a
      000DAA 18 05                 3435 	jr	00409$
      000DAC                       3436 00408$:
      000DAC CB 7A                 3437 	bit	7, d
      000DAE 28 01                 3438 	jr	Z, 00409$
      000DB0 37                    3439 	scf
      000DB1                       3440 00409$:
      000DB1 30 4E                 3441 	jr	NC, 00111$
                                   3442 ;main.c:385: if (enemies[i].x < playerDrawX) {
      000DB3 F8 02                 3443 	ldhl	sp,#2
      000DB5 2A                    3444 	ld	a, (hl+)
      000DB6 5F                    3445 	ld	e, a
      000DB7 56                    3446 	ld	d, (hl)
      000DB8 1A                    3447 	ld	a, (de)
      000DB9 F8 0B                 3448 	ldhl	sp,	#11
      000DBB 22                    3449 	ld	(hl+), a
      000DBC 13                    3450 	inc	de
      000DBD 1A                    3451 	ld	a, (de)
      000DBE 77                    3452 	ld	(hl), a
      000DBF FAr5Er00              3453 	ld	a, (#_playerDrawX)
      000DC2 F8 0D                 3454 	ldhl	sp,	#13
      000DC4 22                    3455 	ld	(hl+), a
      000DC5 36 00                 3456 	ld	(hl), #0x00
                                   3457 ;main.c:386: enemies[i].xSpeed += enemies[i].accel;
      000DC7 D1                    3458 	pop	de
      000DC8 D5                    3459 	push	de
      000DC9 1A                    3460 	ld	a, (de)
      000DCA 47                    3461 	ld	b, a
                                   3462 ;main.c:385: if (enemies[i].x < playerDrawX) {
      000DCB F8 0B                 3463 	ldhl	sp,	#11
      000DCD 5D                    3464 	ld	e, l
      000DCE 54                    3465 	ld	d, h
      000DCF F8 0D                 3466 	ldhl	sp,	#13
      000DD1 1A                    3467 	ld	a, (de)
      000DD2 13                    3468 	inc	de
      000DD3 96                    3469 	sub	a, (hl)
      000DD4 23                    3470 	inc	hl
      000DD5 1A                    3471 	ld	a, (de)
      000DD6 9E                    3472 	sbc	a, (hl)
      000DD7 1A                    3473 	ld	a, (de)
      000DD8 57                    3474 	ld	d, a
      000DD9 CB 7E                 3475 	bit	7, (hl)
      000DDB 28 07                 3476 	jr	Z, 00410$
      000DDD CB 7A                 3477 	bit	7, d
      000DDF 20 08                 3478 	jr	NZ, 00411$
      000DE1 BF                    3479 	cp	a, a
      000DE2 18 05                 3480 	jr	00411$
      000DE4                       3481 00410$:
      000DE4 CB 7A                 3482 	bit	7, d
      000DE6 28 01                 3483 	jr	Z, 00411$
      000DE8 37                    3484 	scf
      000DE9                       3485 00411$:
      000DE9 30 0B                 3486 	jr	NC, 00104$
                                   3487 ;main.c:386: enemies[i].xSpeed += enemies[i].accel;
      000DEB 79                    3488 	ld	a, c
      000DEC 80                    3489 	add	a, b
      000DED 4F                    3490 	ld	c, a
      000DEE F8 06                 3491 	ldhl	sp,	#6
      000DF0 2A                    3492 	ld	a,	(hl+)
      000DF1 66                    3493 	ld	h, (hl)
      000DF2 6F                    3494 	ld	l, a
      000DF3 71                    3495 	ld	(hl), c
      000DF4 18 38                 3496 	jr	00112$
      000DF6                       3497 00104$:
                                   3498 ;main.c:389: enemies[i].xSpeed -= enemies[i].accel;
      000DF6 79                    3499 	ld	a, c
      000DF7 90                    3500 	sub	a, b
      000DF8 4F                    3501 	ld	c, a
      000DF9 F8 06                 3502 	ldhl	sp,	#6
      000DFB 2A                    3503 	ld	a,	(hl+)
      000DFC 66                    3504 	ld	h, (hl)
      000DFD 6F                    3505 	ld	l, a
      000DFE 71                    3506 	ld	(hl), c
      000DFF 18 2D                 3507 	jr	00112$
      000E01                       3508 00111$:
                                   3509 ;main.c:393: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000E01 59                    3510 	ld	e, c
      000E02 AF                    3511 	xor	a, a
      000E03 57                    3512 	ld	d, a
      000E04 91                    3513 	sub	a, c
      000E05 CB 7B                 3514 	bit	7, e
      000E07 28 07                 3515 	jr	Z, 00412$
      000E09 CB 7A                 3516 	bit	7, d
      000E0B 20 08                 3517 	jr	NZ, 00413$
      000E0D BF                    3518 	cp	a, a
      000E0E 18 05                 3519 	jr	00413$
      000E10                       3520 00412$:
      000E10 CB 7A                 3521 	bit	7, d
      000E12 28 01                 3522 	jr	Z, 00413$
      000E14 37                    3523 	scf
      000E15                       3524 00413$:
      000E15 30 07                 3525 	jr	NC, 00107$
      000E17 0D                    3526 	dec	c
      000E18 F8 06                 3527 	ldhl	sp,	#6
      000E1A 2A                    3528 	ld	a,	(hl+)
      000E1B 66                    3529 	ld	h, (hl)
      000E1C 6F                    3530 	ld	l, a
      000E1D 71                    3531 	ld	(hl), c
      000E1E                       3532 00107$:
      000E1E F8 06                 3533 	ldhl	sp,#6
      000E20 2A                    3534 	ld	a, (hl+)
      000E21 5F                    3535 	ld	e, a
      000E22 56                    3536 	ld	d, (hl)
      000E23 1A                    3537 	ld	a, (de)
      000E24 4F                    3538 	ld	c, a
                                   3539 ;main.c:394: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      000E25 CB 79                 3540 	bit	7, c
      000E27 28 05                 3541 	jr	Z, 00112$
      000E29 0C                    3542 	inc	c
      000E2A 3A                    3543 	ld	a, (hl-)
      000E2B 6E                    3544 	ld	l, (hl)
      000E2C 67                    3545 	ld	h, a
      000E2D 71                    3546 	ld	(hl), c
      000E2E                       3547 00112$:
                                   3548 ;main.c:397: if (abs(enemies[i].y - playerDrawY) > 8) {
      000E2E F8 04                 3549 	ldhl	sp,#4
      000E30 2A                    3550 	ld	a, (hl+)
      000E31 5F                    3551 	ld	e, a
      000E32 56                    3552 	ld	d, (hl)
      000E33 1A                    3553 	ld	a, (de)
      000E34 4F                    3554 	ld	c, a
      000E35 13                    3555 	inc	de
      000E36 1A                    3556 	ld	a, (de)
      000E37 47                    3557 	ld	b, a
      000E38 79                    3558 	ld	a, c
      000E39 21r5Fr00              3559 	ld	hl, #_playerDrawY
      000E3C 5E                    3560 	ld	e, (hl)
      000E3D 93                    3561 	sub	a, e
      000E3E 6F                    3562 	ld	l, a
                                   3563 ;	spillPairReg hl
                                   3564 ;	spillPairReg hl
                                   3565 ;main.c:295: if (value >= 0) return value;
      000E3F CB 7D                 3566 	bit	7, l
      000E41 20 06                 3567 	jr	NZ, 00173$
      000E43 7D                    3568 	ld	a, l
      000E44 F8 0E                 3569 	ldhl	sp,	#14
      000E46 77                    3570 	ld	(hl), a
      000E47 18 06                 3571 	jr	00175$
      000E49                       3572 00173$:
                                   3573 ;main.c:296: else return - value;
      000E49 AF                    3574 	xor	a, a
      000E4A 95                    3575 	sub	a, l
      000E4B 5F                    3576 	ld	e, a
      000E4C F8 0E                 3577 	ldhl	sp,	#14
      000E4E 73                    3578 	ld	(hl), e
                                   3579 ;main.c:397: if (abs(enemies[i].y - playerDrawY) > 8) {
      000E4F                       3580 00175$:
                                   3581 ;main.c:399: enemies[i].ySpeed += enemies[i].accel;
      000E4F F8 02                 3582 	ldhl	sp,#2
      000E51 2A                    3583 	ld	a, (hl+)
      000E52 5F                    3584 	ld	e, a
      000E53 56                    3585 	ld	d, (hl)
      000E54 21 0F 00              3586 	ld	hl, #0x000f
      000E57 19                    3587 	add	hl, de
      000E58 E5                    3588 	push	hl
      000E59 7D                    3589 	ld	a, l
      000E5A F8 0A                 3590 	ldhl	sp,	#10
      000E5C 77                    3591 	ld	(hl), a
      000E5D E1                    3592 	pop	hl
      000E5E 7C                    3593 	ld	a, h
      000E5F F8 09                 3594 	ldhl	sp,	#9
                                   3595 ;main.c:406: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      000E61 32                    3596 	ld	(hl-), a
      000E62 2A                    3597 	ld	a, (hl+)
      000E63 5F                    3598 	ld	e, a
      000E64 2A                    3599 	ld	a, (hl+)
      000E65 23                    3600 	inc	hl
      000E66 57                    3601 	ld	d, a
      000E67 1A                    3602 	ld	a, (de)
      000E68 77                    3603 	ld	(hl), a
                                   3604 ;main.c:397: if (abs(enemies[i].y - playerDrawY) > 8) {
      000E69 F8 0E                 3605 	ldhl	sp,	#14
      000E6B 5E                    3606 	ld	e, (hl)
      000E6C 3E 08                 3607 	ld	a,#0x08
      000E6E 57                    3608 	ld	d,a
      000E6F 96                    3609 	sub	a, (hl)
      000E70 CB 7B                 3610 	bit	7, e
      000E72 28 07                 3611 	jr	Z, 00414$
      000E74 CB 7A                 3612 	bit	7, d
      000E76 20 08                 3613 	jr	NZ, 00415$
      000E78 BF                    3614 	cp	a, a
      000E79 18 05                 3615 	jr	00415$
      000E7B                       3616 00414$:
      000E7B CB 7A                 3617 	bit	7, d
      000E7D 28 01                 3618 	jr	Z, 00415$
      000E7F 37                    3619 	scf
      000E80                       3620 00415$:
      000E80 30 44                 3621 	jr	NC, 00121$
                                   3622 ;main.c:398: if (enemies[i].y < playerDrawY) {
      000E82 FAr5Fr00              3623 	ld	a, (#_playerDrawY)
      000E85 F8 0C                 3624 	ldhl	sp,	#12
      000E87 22                    3625 	ld	(hl+), a
                                   3626 ;main.c:399: enemies[i].ySpeed += enemies[i].accel;
      000E88 AF                    3627 	xor	a, a
      000E89 22                    3628 	ld	(hl+), a
      000E8A D1                    3629 	pop	de
      000E8B D5                    3630 	push	de
      000E8C 1A                    3631 	ld	a, (de)
                                   3632 ;main.c:398: if (enemies[i].y < playerDrawY) {
      000E8D 32                    3633 	ld	(hl-), a
      000E8E 2B                    3634 	dec	hl
      000E8F 79                    3635 	ld	a, c
      000E90 96                    3636 	sub	a, (hl)
      000E91 23                    3637 	inc	hl
      000E92 78                    3638 	ld	a, b
      000E93 9E                    3639 	sbc	a, (hl)
      000E94 78                    3640 	ld	a, b
      000E95 57                    3641 	ld	d, a
      000E96 CB 7E                 3642 	bit	7, (hl)
      000E98 28 07                 3643 	jr	Z, 00416$
      000E9A CB 7A                 3644 	bit	7, d
      000E9C 20 08                 3645 	jr	NZ, 00417$
      000E9E BF                    3646 	cp	a, a
      000E9F 18 05                 3647 	jr	00417$
      000EA1                       3648 00416$:
      000EA1 CB 7A                 3649 	bit	7, d
      000EA3 28 01                 3650 	jr	Z, 00417$
      000EA5 37                    3651 	scf
      000EA6                       3652 00417$:
      000EA6 30 0F                 3653 	jr	NC, 00114$
                                   3654 ;main.c:399: enemies[i].ySpeed += enemies[i].accel;
      000EA8 F8 0B                 3655 	ldhl	sp,	#11
      000EAA 7E                    3656 	ld	a, (hl)
      000EAB F8 0E                 3657 	ldhl	sp,	#14
      000EAD 86                    3658 	add	a, (hl)
      000EAE 4F                    3659 	ld	c, a
      000EAF F8 08                 3660 	ldhl	sp,	#8
      000EB1 2A                    3661 	ld	a,	(hl+)
      000EB2 66                    3662 	ld	h, (hl)
      000EB3 6F                    3663 	ld	l, a
      000EB4 71                    3664 	ld	(hl), c
      000EB5 18 41                 3665 	jr	00122$
      000EB7                       3666 00114$:
                                   3667 ;main.c:402: enemies[i].ySpeed -= enemies[i].accel;
      000EB7 F8 0B                 3668 	ldhl	sp,	#11
      000EB9 7E                    3669 	ld	a, (hl)
      000EBA F8 0E                 3670 	ldhl	sp,	#14
      000EBC 96                    3671 	sub	a, (hl)
      000EBD 4F                    3672 	ld	c, a
      000EBE F8 08                 3673 	ldhl	sp,	#8
      000EC0 2A                    3674 	ld	a,	(hl+)
      000EC1 66                    3675 	ld	h, (hl)
      000EC2 6F                    3676 	ld	l, a
      000EC3 71                    3677 	ld	(hl), c
      000EC4 18 32                 3678 	jr	00122$
      000EC6                       3679 00121$:
                                   3680 ;main.c:406: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      000EC6 F8 0B                 3681 	ldhl	sp,	#11
      000EC8 5E                    3682 	ld	e, (hl)
      000EC9 AF                    3683 	xor	a, a
      000ECA 57                    3684 	ld	d, a
      000ECB 96                    3685 	sub	a, (hl)
      000ECC CB 7B                 3686 	bit	7, e
      000ECE 28 07                 3687 	jr	Z, 00418$
      000ED0 CB 7A                 3688 	bit	7, d
      000ED2 20 08                 3689 	jr	NZ, 00419$
      000ED4 BF                    3690 	cp	a, a
      000ED5 18 05                 3691 	jr	00419$
      000ED7                       3692 00418$:
      000ED7 CB 7A                 3693 	bit	7, d
      000ED9 28 01                 3694 	jr	Z, 00419$
      000EDB 37                    3695 	scf
      000EDC                       3696 00419$:
      000EDC 30 0A                 3697 	jr	NC, 00117$
      000EDE F8 0B                 3698 	ldhl	sp,	#11
      000EE0 4E                    3699 	ld	c, (hl)
      000EE1 0D                    3700 	dec	c
      000EE2 F8 08                 3701 	ldhl	sp,	#8
      000EE4 2A                    3702 	ld	a,	(hl+)
      000EE5 66                    3703 	ld	h, (hl)
      000EE6 6F                    3704 	ld	l, a
      000EE7 71                    3705 	ld	(hl), c
      000EE8                       3706 00117$:
      000EE8 F8 08                 3707 	ldhl	sp,#8
      000EEA 2A                    3708 	ld	a, (hl+)
      000EEB 5F                    3709 	ld	e, a
      000EEC 56                    3710 	ld	d, (hl)
      000EED 1A                    3711 	ld	a, (de)
      000EEE 4F                    3712 	ld	c, a
                                   3713 ;main.c:407: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      000EEF CB 79                 3714 	bit	7, c
      000EF1 28 05                 3715 	jr	Z, 00122$
      000EF3 0C                    3716 	inc	c
      000EF4 3A                    3717 	ld	a, (hl-)
      000EF5 6E                    3718 	ld	l, (hl)
      000EF6 67                    3719 	ld	h, a
      000EF7 71                    3720 	ld	(hl), c
      000EF8                       3721 00122$:
                                   3722 ;main.c:411: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000EF8 F8 02                 3723 	ldhl	sp,#2
      000EFA 2A                    3724 	ld	a, (hl+)
      000EFB 5F                    3725 	ld	e, a
      000EFC 56                    3726 	ld	d, (hl)
      000EFD 21 0C 00              3727 	ld	hl, #0x000c
      000F00 19                    3728 	add	hl, de
      000F01 E5                    3729 	push	hl
      000F02 7D                    3730 	ld	a, l
      000F03 F8 0C                 3731 	ldhl	sp,	#12
      000F05 77                    3732 	ld	(hl), a
      000F06 E1                    3733 	pop	hl
      000F07 7C                    3734 	ld	a, h
      000F08 F8 0B                 3735 	ldhl	sp,	#11
      000F0A 32                    3736 	ld	(hl-), a
      000F0B 2A                    3737 	ld	a, (hl+)
      000F0C 5F                    3738 	ld	e, a
      000F0D 2A                    3739 	ld	a, (hl+)
      000F0E 57                    3740 	ld	d, a
      000F0F 1A                    3741 	ld	a, (de)
      000F10 4F                    3742 	ld	c, a
      000F11 22                    3743 	ld	(hl+), a
      000F12 AF                    3744 	xor	a, a
      000F13 91                    3745 	sub	a, c
      000F14 77                    3746 	ld	(hl), a
      000F15 F8 06                 3747 	ldhl	sp,#6
      000F17 2A                    3748 	ld	a, (hl+)
      000F18 5F                    3749 	ld	e, a
      000F19 56                    3750 	ld	d, (hl)
      000F1A 1A                    3751 	ld	a, (de)
      000F1B F8 0E                 3752 	ldhl	sp,	#14
                                   3753 ;main.c:276: return (value < min) ? min : (value > max) ? max : value;
      000F1D 32                    3754 	ld	(hl-), a
      000F1E 2A                    3755 	ld	a, (hl+)
      000F1F 5F                    3756 	ld	e, a
      000F20 56                    3757 	ld	d, (hl)
      000F21 3A                    3758 	ld	a, (hl-)
      000F22 96                    3759 	sub	a, (hl)
      000F23 CB 7B                 3760 	bit	7, e
      000F25 28 07                 3761 	jr	Z, 00420$
      000F27 CB 7A                 3762 	bit	7, d
      000F29 20 08                 3763 	jr	NZ, 00421$
      000F2B BF                    3764 	cp	a, a
      000F2C 18 05                 3765 	jr	00421$
      000F2E                       3766 00420$:
      000F2E CB 7A                 3767 	bit	7, d
      000F30 28 01                 3768 	jr	Z, 00421$
      000F32 37                    3769 	scf
      000F33                       3770 00421$:
      000F33 30 06                 3771 	jr	NC, 00202$
      000F35 F8 0D                 3772 	ldhl	sp,	#13
      000F37 2A                    3773 	ld	a, (hl+)
      000F38 77                    3774 	ld	(hl), a
      000F39 18 26                 3775 	jr	00203$
      000F3B                       3776 00202$:
      000F3B F8 0E                 3777 	ldhl	sp,	#14
      000F3D 3A                    3778 	ld	a, (hl-)
      000F3E 2B                    3779 	dec	hl
      000F3F 5F                    3780 	ld	e, a
      000F40 56                    3781 	ld	d, (hl)
      000F41 2A                    3782 	ld	a, (hl+)
      000F42 23                    3783 	inc	hl
      000F43 96                    3784 	sub	a, (hl)
      000F44 CB 7B                 3785 	bit	7, e
      000F46 28 07                 3786 	jr	Z, 00422$
      000F48 CB 7A                 3787 	bit	7, d
      000F4A 20 08                 3788 	jr	NZ, 00423$
      000F4C BF                    3789 	cp	a, a
      000F4D 18 05                 3790 	jr	00423$
      000F4F                       3791 00422$:
      000F4F CB 7A                 3792 	bit	7, d
      000F51 28 01                 3793 	jr	Z, 00423$
      000F53 37                    3794 	scf
      000F54                       3795 00423$:
      000F54 30 05                 3796 	jr	NC, 00204$
      000F56 F8 0C                 3797 	ldhl	sp,	#12
      000F58 5E                    3798 	ld	e, (hl)
      000F59 18 03                 3799 	jr	00205$
      000F5B                       3800 00204$:
      000F5B F8 0E                 3801 	ldhl	sp,	#14
      000F5D 5E                    3802 	ld	e, (hl)
      000F5E                       3803 00205$:
      000F5E F8 0E                 3804 	ldhl	sp,	#14
      000F60 73                    3805 	ld	(hl), e
      000F61                       3806 00203$:
      000F61 F8 0E                 3807 	ldhl	sp,	#14
      000F63 4E                    3808 	ld	c, (hl)
                                   3809 ;main.c:411: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000F64 F8 06                 3810 	ldhl	sp,	#6
      000F66 2A                    3811 	ld	a,	(hl+)
      000F67 66                    3812 	ld	h, (hl)
      000F68 6F                    3813 	ld	l, a
      000F69 71                    3814 	ld	(hl), c
                                   3815 ;main.c:412: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000F6A F8 0A                 3816 	ldhl	sp,#10
      000F6C 2A                    3817 	ld	a, (hl+)
      000F6D 5F                    3818 	ld	e, a
      000F6E 3A                    3819 	ld	a, (hl-)
      000F6F 2B                    3820 	dec	hl
      000F70 2B                    3821 	dec	hl
      000F71 57                    3822 	ld	d, a
      000F72 1A                    3823 	ld	a, (de)
      000F73 47                    3824 	ld	b, a
      000F74 48                    3825 	ld	c, b
      000F75 AF                    3826 	xor	a, a
      000F76 90                    3827 	sub	a, b
      000F77 47                    3828 	ld	b, a
      000F78 2A                    3829 	ld	a, (hl+)
      000F79 5F                    3830 	ld	e, a
      000F7A 56                    3831 	ld	d, (hl)
      000F7B 1A                    3832 	ld	a, (de)
      000F7C 6F                    3833 	ld	l, a
                                   3834 ;	spillPairReg hl
                                   3835 ;	spillPairReg hl
                                   3836 ;main.c:276: return (value < min) ? min : (value > max) ? max : value;
      000F7D 58                    3837 	ld	e, b
      000F7E 7D                    3838 	ld	a,l
      000F7F 57                    3839 	ld	d,a
      000F80 90                    3840 	sub	a, b
      000F81 CB 7B                 3841 	bit	7, e
      000F83 28 07                 3842 	jr	Z, 00424$
      000F85 CB 7A                 3843 	bit	7, d
      000F87 20 08                 3844 	jr	NZ, 00425$
      000F89 BF                    3845 	cp	a, a
      000F8A 18 05                 3846 	jr	00425$
      000F8C                       3847 00424$:
      000F8C CB 7A                 3848 	bit	7, d
      000F8E 28 01                 3849 	jr	Z, 00425$
      000F90 37                    3850 	scf
      000F91                       3851 00425$:
      000F91 30 03                 3852 	jr	NC, 00206$
      000F93 48                    3853 	ld	c, b
      000F94 18 17                 3854 	jr	00207$
      000F96                       3855 00206$:
      000F96 5D                    3856 	ld	e, l
      000F97 79                    3857 	ld	a,c
      000F98 57                    3858 	ld	d,a
      000F99 95                    3859 	sub	a, l
      000F9A CB 7B                 3860 	bit	7, e
      000F9C 28 07                 3861 	jr	Z, 00426$
      000F9E CB 7A                 3862 	bit	7, d
      000FA0 20 08                 3863 	jr	NZ, 00427$
      000FA2 BF                    3864 	cp	a, a
      000FA3 18 05                 3865 	jr	00427$
      000FA5                       3866 00426$:
      000FA5 CB 7A                 3867 	bit	7, d
      000FA7 28 01                 3868 	jr	Z, 00427$
      000FA9 37                    3869 	scf
      000FAA                       3870 00427$:
      000FAA 38 01                 3871 	jr	C, 00209$
      000FAC 4D                    3872 	ld	c, l
      000FAD                       3873 00209$:
      000FAD                       3874 00207$:
                                   3875 ;main.c:412: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000FAD F8 08                 3876 	ldhl	sp,	#8
      000FAF 2A                    3877 	ld	a,	(hl+)
      000FB0 66                    3878 	ld	h, (hl)
      000FB1 6F                    3879 	ld	l, a
      000FB2 71                    3880 	ld	(hl), c
                                   3881 ;main.c:415: enemies[i].xReserve += enemies[i].xSpeed;
      000FB3 F8 02                 3882 	ldhl	sp,#2
      000FB5 2A                    3883 	ld	a, (hl+)
      000FB6 5F                    3884 	ld	e, a
      000FB7 56                    3885 	ld	d, (hl)
      000FB8 21 04 00              3886 	ld	hl, #0x0004
      000FBB 19                    3887 	add	hl, de
      000FBC E5                    3888 	push	hl
      000FBD 7D                    3889 	ld	a, l
      000FBE F8 0F                 3890 	ldhl	sp,	#15
      000FC0 77                    3891 	ld	(hl), a
      000FC1 E1                    3892 	pop	hl
      000FC2 7C                    3893 	ld	a, h
      000FC3 F8 0E                 3894 	ldhl	sp,	#14
      000FC5 32                    3895 	ld	(hl-), a
      000FC6 2A                    3896 	ld	a, (hl+)
      000FC7 5F                    3897 	ld	e, a
      000FC8 56                    3898 	ld	d, (hl)
      000FC9 1A                    3899 	ld	a, (de)
      000FCA 47                    3900 	ld	b, a
      000FCB F8 06                 3901 	ldhl	sp,#6
      000FCD 2A                    3902 	ld	a, (hl+)
      000FCE 5F                    3903 	ld	e, a
      000FCF 56                    3904 	ld	d, (hl)
      000FD0 1A                    3905 	ld	a, (de)
      000FD1 80                    3906 	add	a, b
      000FD2 47                    3907 	ld	b, a
      000FD3 F8 0D                 3908 	ldhl	sp,	#13
      000FD5 2A                    3909 	ld	a,	(hl+)
      000FD6 66                    3910 	ld	h, (hl)
      000FD7 6F                    3911 	ld	l, a
      000FD8 70                    3912 	ld	(hl), b
                                   3913 ;main.c:416: enemies[i].yReserve += enemies[i].ySpeed;
      000FD9 F8 02                 3914 	ldhl	sp,#2
      000FDB 2A                    3915 	ld	a, (hl+)
      000FDC 5F                    3916 	ld	e, a
      000FDD 56                    3917 	ld	d, (hl)
      000FDE 21 05 00              3918 	ld	hl, #0x0005
      000FE1 19                    3919 	add	hl, de
      000FE2 E5                    3920 	push	hl
      000FE3 7D                    3921 	ld	a, l
      000FE4 F8 0C                 3922 	ldhl	sp,	#12
      000FE6 77                    3923 	ld	(hl), a
      000FE7 E1                    3924 	pop	hl
      000FE8 7C                    3925 	ld	a, h
      000FE9 F8 0B                 3926 	ldhl	sp,	#11
      000FEB 32                    3927 	ld	(hl-), a
      000FEC 2A                    3928 	ld	a, (hl+)
      000FED 5F                    3929 	ld	e, a
      000FEE 56                    3930 	ld	d, (hl)
      000FEF 1A                    3931 	ld	a, (de)
      000FF0 81                    3932 	add	a, c
      000FF1 4F                    3933 	ld	c, a
      000FF2 3A                    3934 	ld	a, (hl-)
      000FF3 6E                    3935 	ld	l, (hl)
      000FF4 67                    3936 	ld	h, a
      000FF5 71                    3937 	ld	(hl), c
                                   3938 ;main.c:420: if (enemies[i].xReserve >> 3 > 0) {
      000FF6 F8 0D                 3939 	ldhl	sp,#13
      000FF8 2A                    3940 	ld	a, (hl+)
      000FF9 5F                    3941 	ld	e, a
      000FFA 3A                    3942 	ld	a, (hl-)
      000FFB 2B                    3943 	dec	hl
      000FFC 57                    3944 	ld	d, a
      000FFD 1A                    3945 	ld	a, (de)
      000FFE 77                    3946 	ld	(hl), a
      000FFF CB 28                 3947 	sra	b
      001001 CB 28                 3948 	sra	b
      001003 CB 28                 3949 	sra	b
      001005 58                    3950 	ld	e, b
      001006 AF                    3951 	xor	a, a
      001007 57                    3952 	ld	d, a
      001008 90                    3953 	sub	a, b
      001009 CB 7B                 3954 	bit	7, e
      00100B 28 07                 3955 	jr	Z, 00428$
      00100D CB 7A                 3956 	bit	7, d
      00100F 20 08                 3957 	jr	NZ, 00429$
      001011 BF                    3958 	cp	a, a
      001012 18 05                 3959 	jr	00429$
      001014                       3960 00428$:
      001014 CB 7A                 3961 	bit	7, d
      001016 28 01                 3962 	jr	Z, 00429$
      001018 37                    3963 	scf
      001019                       3964 00429$:
      001019 30 3F                 3965 	jr	NC, 00126$
                                   3966 ;main.c:421: int8_t xMovement = enemies[i].xReserve >> 3;
      00101B F8 0C                 3967 	ldhl	sp,	#12
      00101D 7E                    3968 	ld	a, (hl)
      00101E CB 2F                 3969 	sra	a
      001020 CB 2F                 3970 	sra	a
      001022 CB 2F                 3971 	sra	a
      001024 77                    3972 	ld	(hl), a
                                   3973 ;main.c:422: enemies[i].x += xMovement;
      001025 F8 02                 3974 	ldhl	sp,#2
      001027 2A                    3975 	ld	a, (hl+)
      001028 5F                    3976 	ld	e, a
      001029 56                    3977 	ld	d, (hl)
      00102A 1A                    3978 	ld	a, (de)
      00102B 4F                    3979 	ld	c, a
      00102C 13                    3980 	inc	de
      00102D 1A                    3981 	ld	a, (de)
      00102E 47                    3982 	ld	b, a
      00102F F8 0C                 3983 	ldhl	sp,	#12
      001031 7E                    3984 	ld	a, (hl)
      001032 5F                    3985 	ld	e, a
      001033 07                    3986 	rlca
      001034 9F                    3987 	sbc	a, a
      001035 57                    3988 	ld	d, a
      001036 69                    3989 	ld	l, c
                                   3990 ;	spillPairReg hl
                                   3991 ;	spillPairReg hl
      001037 60                    3992 	ld	h, b
                                   3993 ;	spillPairReg hl
                                   3994 ;	spillPairReg hl
      001038 19                    3995 	add	hl, de
      001039 4D                    3996 	ld	c, l
      00103A 44                    3997 	ld	b, h
      00103B F8 02                 3998 	ldhl	sp,	#2
      00103D 2A                    3999 	ld	a,	(hl+)
      00103E 66                    4000 	ld	h, (hl)
      00103F 6F                    4001 	ld	l, a
      001040 79                    4002 	ld	a, c
      001041 22                    4003 	ld	(hl+), a
      001042 70                    4004 	ld	(hl), b
                                   4005 ;main.c:423: enemies[i].xReserve -=  xMovement << 3;
      001043 F8 0D                 4006 	ldhl	sp,#13
      001045 2A                    4007 	ld	a, (hl+)
      001046 5F                    4008 	ld	e, a
      001047 3A                    4009 	ld	a, (hl-)
      001048 2B                    4010 	dec	hl
      001049 57                    4011 	ld	d, a
      00104A 1A                    4012 	ld	a, (de)
      00104B F5                    4013 	push	af
      00104C 2A                    4014 	ld	a, (hl+)
      00104D 87                    4015 	add	a, a
      00104E 87                    4016 	add	a, a
      00104F 87                    4017 	add	a, a
      001050 4F                    4018 	ld	c, a
      001051 F1                    4019 	pop	af
      001052 91                    4020 	sub	a, c
      001053 4F                    4021 	ld	c, a
      001054 2A                    4022 	ld	a,	(hl+)
      001055 66                    4023 	ld	h, (hl)
      001056 6F                    4024 	ld	l, a
      001057 71                    4025 	ld	(hl), c
      001058 18 69                 4026 	jr	00127$
      00105A                       4027 00126$:
                                   4028 ;main.c:426: else if ((-enemies[i].xReserve) >> 3 > 0){
      00105A F8 0C                 4029 	ldhl	sp,	#12
      00105C 7E                    4030 	ld	a, (hl)
      00105D 4F                    4031 	ld	c, a
      00105E 07                    4032 	rlca
      00105F 9F                    4033 	sbc	a, a
      001060 47                    4034 	ld	b, a
      001061 AF                    4035 	xor	a, a
      001062 91                    4036 	sub	a, c
      001063 4F                    4037 	ld	c, a
      001064 9F                    4038 	sbc	a, a
      001065 90                    4039 	sub	a, b
      001066 47                    4040 	ld	b, a
      001067 CB 28                 4041 	sra	b
      001069 CB 19                 4042 	rr	c
      00106B CB 28                 4043 	sra	b
      00106D CB 19                 4044 	rr	c
      00106F CB 28                 4045 	sra	b
      001071 CB 19                 4046 	rr	c
      001073 58                    4047 	ld	e, b
      001074 AF                    4048 	xor	a, a
      001075 57                    4049 	ld	d, a
      001076 B9                    4050 	cp	a, c
      001077 98                    4051 	sbc	a, b
      001078 CB 7B                 4052 	bit	7, e
      00107A 28 07                 4053 	jr	Z, 00430$
      00107C CB 7A                 4054 	bit	7, d
      00107E 20 08                 4055 	jr	NZ, 00431$
      001080 BF                    4056 	cp	a, a
      001081 18 05                 4057 	jr	00431$
      001083                       4058 00430$:
      001083 CB 7A                 4059 	bit	7, d
      001085 28 01                 4060 	jr	Z, 00431$
      001087 37                    4061 	scf
      001088                       4062 00431$:
      001088 30 39                 4063 	jr	NC, 00127$
                                   4064 ;main.c:427: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      00108A AF                    4065 	xor	a, a
      00108B 91                    4066 	sub	a, c
      00108C 4F                    4067 	ld	c, a
      00108D F8 0C                 4068 	ldhl	sp,	#12
      00108F 71                    4069 	ld	(hl), c
                                   4070 ;main.c:428: enemies[i].x += xMovement;
      001090 F8 02                 4071 	ldhl	sp,#2
      001092 2A                    4072 	ld	a, (hl+)
      001093 5F                    4073 	ld	e, a
      001094 56                    4074 	ld	d, (hl)
      001095 1A                    4075 	ld	a, (de)
      001096 4F                    4076 	ld	c, a
      001097 13                    4077 	inc	de
      001098 1A                    4078 	ld	a, (de)
      001099 47                    4079 	ld	b, a
      00109A F8 0C                 4080 	ldhl	sp,	#12
      00109C 7E                    4081 	ld	a, (hl)
      00109D 5F                    4082 	ld	e, a
      00109E 07                    4083 	rlca
      00109F 9F                    4084 	sbc	a, a
      0010A0 57                    4085 	ld	d, a
      0010A1 69                    4086 	ld	l, c
                                   4087 ;	spillPairReg hl
                                   4088 ;	spillPairReg hl
      0010A2 60                    4089 	ld	h, b
                                   4090 ;	spillPairReg hl
                                   4091 ;	spillPairReg hl
      0010A3 19                    4092 	add	hl, de
      0010A4 4D                    4093 	ld	c, l
      0010A5 44                    4094 	ld	b, h
      0010A6 F8 02                 4095 	ldhl	sp,	#2
      0010A8 2A                    4096 	ld	a,	(hl+)
      0010A9 66                    4097 	ld	h, (hl)
      0010AA 6F                    4098 	ld	l, a
      0010AB 79                    4099 	ld	a, c
      0010AC 22                    4100 	ld	(hl+), a
      0010AD 70                    4101 	ld	(hl), b
                                   4102 ;main.c:429: enemies[i].xReserve +=  (-xMovement) << 3;
      0010AE F8 0D                 4103 	ldhl	sp,#13
      0010B0 2A                    4104 	ld	a, (hl+)
      0010B1 5F                    4105 	ld	e, a
      0010B2 3A                    4106 	ld	a, (hl-)
      0010B3 2B                    4107 	dec	hl
      0010B4 57                    4108 	ld	d, a
      0010B5 1A                    4109 	ld	a, (de)
      0010B6 4F                    4110 	ld	c, a
      0010B7 AF                    4111 	xor	a, a
      0010B8 96                    4112 	sub	a, (hl)
      0010B9 23                    4113 	inc	hl
      0010BA 87                    4114 	add	a, a
      0010BB 87                    4115 	add	a, a
      0010BC 87                    4116 	add	a, a
      0010BD 81                    4117 	add	a, c
      0010BE 4F                    4118 	ld	c, a
      0010BF 2A                    4119 	ld	a,	(hl+)
      0010C0 66                    4120 	ld	h, (hl)
      0010C1 6F                    4121 	ld	l, a
      0010C2 71                    4122 	ld	(hl), c
      0010C3                       4123 00127$:
                                   4124 ;main.c:416: enemies[i].yReserve += enemies[i].ySpeed;
      0010C3 F8 0A                 4125 	ldhl	sp,#10
      0010C5 2A                    4126 	ld	a, (hl+)
      0010C6 5F                    4127 	ld	e, a
      0010C7 56                    4128 	ld	d, (hl)
      0010C8 1A                    4129 	ld	a, (de)
      0010C9 4F                    4130 	ld	c, a
                                   4131 ;main.c:432: if (enemies[i].yReserve >> 3 > 0) {
      0010CA 41                    4132 	ld	b, c
      0010CB CB 28                 4133 	sra	b
      0010CD CB 28                 4134 	sra	b
      0010CF CB 28                 4135 	sra	b
      0010D1 58                    4136 	ld	e, b
      0010D2 AF                    4137 	xor	a, a
      0010D3 57                    4138 	ld	d, a
      0010D4 90                    4139 	sub	a, b
      0010D5 CB 7B                 4140 	bit	7, e
      0010D7 28 07                 4141 	jr	Z, 00432$
      0010D9 CB 7A                 4142 	bit	7, d
      0010DB 20 08                 4143 	jr	NZ, 00433$
      0010DD BF                    4144 	cp	a, a
      0010DE 18 05                 4145 	jr	00433$
      0010E0                       4146 00432$:
      0010E0 CB 7A                 4147 	bit	7, d
      0010E2 28 01                 4148 	jr	Z, 00433$
      0010E4 37                    4149 	scf
      0010E5                       4150 00433$:
      0010E5 30 3A                 4151 	jr	NC, 00131$
                                   4152 ;main.c:433: int8_t yMovement = enemies[i].yReserve >> 3;
      0010E7 F8 0E                 4153 	ldhl	sp,	#14
      0010E9 70                    4154 	ld	(hl), b
                                   4155 ;main.c:434: enemies[i].y += yMovement;
      0010EA F8 04                 4156 	ldhl	sp,#4
      0010EC 2A                    4157 	ld	a, (hl+)
      0010ED 5F                    4158 	ld	e, a
      0010EE 56                    4159 	ld	d, (hl)
      0010EF 1A                    4160 	ld	a, (de)
      0010F0 4F                    4161 	ld	c, a
      0010F1 13                    4162 	inc	de
      0010F2 1A                    4163 	ld	a, (de)
      0010F3 47                    4164 	ld	b, a
      0010F4 F8 0E                 4165 	ldhl	sp,	#14
      0010F6 7E                    4166 	ld	a, (hl)
      0010F7 5F                    4167 	ld	e, a
      0010F8 07                    4168 	rlca
      0010F9 9F                    4169 	sbc	a, a
      0010FA 57                    4170 	ld	d, a
      0010FB 69                    4171 	ld	l, c
                                   4172 ;	spillPairReg hl
                                   4173 ;	spillPairReg hl
      0010FC 60                    4174 	ld	h, b
                                   4175 ;	spillPairReg hl
                                   4176 ;	spillPairReg hl
      0010FD 19                    4177 	add	hl, de
      0010FE 4D                    4178 	ld	c, l
      0010FF 44                    4179 	ld	b, h
      001100 F8 04                 4180 	ldhl	sp,	#4
      001102 2A                    4181 	ld	a,	(hl+)
      001103 66                    4182 	ld	h, (hl)
      001104 6F                    4183 	ld	l, a
      001105 79                    4184 	ld	a, c
      001106 22                    4185 	ld	(hl+), a
      001107 70                    4186 	ld	(hl), b
                                   4187 ;main.c:435: enemies[i].yReserve -=  yMovement << 3;
      001108 F8 0A                 4188 	ldhl	sp,#10
      00110A 2A                    4189 	ld	a, (hl+)
      00110B 5F                    4190 	ld	e, a
      00110C 56                    4191 	ld	d, (hl)
      00110D 1A                    4192 	ld	a, (de)
      00110E F5                    4193 	push	af
      00110F F8 10                 4194 	ldhl	sp,	#16
      001111 7E                    4195 	ld	a, (hl)
      001112 87                    4196 	add	a, a
      001113 87                    4197 	add	a, a
      001114 87                    4198 	add	a, a
      001115 4F                    4199 	ld	c, a
      001116 F1                    4200 	pop	af
      001117 91                    4201 	sub	a, c
      001118 4F                    4202 	ld	c, a
      001119 F8 0A                 4203 	ldhl	sp,	#10
      00111B 2A                    4204 	ld	a,	(hl+)
      00111C 66                    4205 	ld	h, (hl)
      00111D 6F                    4206 	ld	l, a
      00111E 71                    4207 	ld	(hl), c
      00111F 18 67                 4208 	jr	00133$
      001121                       4209 00131$:
                                   4210 ;main.c:437: else if ((-enemies[i].yReserve) >> 3 > 0){
      001121 79                    4211 	ld	a, c
      001122 07                    4212 	rlca
      001123 9F                    4213 	sbc	a, a
      001124 47                    4214 	ld	b, a
      001125 AF                    4215 	xor	a, a
      001126 91                    4216 	sub	a, c
      001127 4F                    4217 	ld	c, a
      001128 9F                    4218 	sbc	a, a
      001129 90                    4219 	sub	a, b
      00112A 47                    4220 	ld	b, a
      00112B CB 28                 4221 	sra	b
      00112D CB 19                 4222 	rr	c
      00112F CB 28                 4223 	sra	b
      001131 CB 19                 4224 	rr	c
      001133 CB 28                 4225 	sra	b
      001135 CB 19                 4226 	rr	c
      001137 58                    4227 	ld	e, b
      001138 AF                    4228 	xor	a, a
      001139 57                    4229 	ld	d, a
      00113A B9                    4230 	cp	a, c
      00113B 98                    4231 	sbc	a, b
      00113C CB 7B                 4232 	bit	7, e
      00113E 28 07                 4233 	jr	Z, 00434$
      001140 CB 7A                 4234 	bit	7, d
      001142 20 08                 4235 	jr	NZ, 00435$
      001144 BF                    4236 	cp	a, a
      001145 18 05                 4237 	jr	00435$
      001147                       4238 00434$:
      001147 CB 7A                 4239 	bit	7, d
      001149 28 01                 4240 	jr	Z, 00435$
      00114B 37                    4241 	scf
      00114C                       4242 00435$:
      00114C 30 3A                 4243 	jr	NC, 00133$
                                   4244 ;main.c:438: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      00114E AF                    4245 	xor	a, a
      00114F 91                    4246 	sub	a, c
      001150 4F                    4247 	ld	c, a
      001151 F8 0E                 4248 	ldhl	sp,	#14
      001153 71                    4249 	ld	(hl), c
                                   4250 ;main.c:439: enemies[i].y += yMovement;
      001154 F8 04                 4251 	ldhl	sp,#4
      001156 2A                    4252 	ld	a, (hl+)
      001157 5F                    4253 	ld	e, a
      001158 56                    4254 	ld	d, (hl)
      001159 1A                    4255 	ld	a, (de)
      00115A 4F                    4256 	ld	c, a
      00115B 13                    4257 	inc	de
      00115C 1A                    4258 	ld	a, (de)
      00115D 47                    4259 	ld	b, a
      00115E F8 0E                 4260 	ldhl	sp,	#14
      001160 7E                    4261 	ld	a, (hl)
      001161 5F                    4262 	ld	e, a
      001162 07                    4263 	rlca
      001163 9F                    4264 	sbc	a, a
      001164 57                    4265 	ld	d, a
      001165 69                    4266 	ld	l, c
      001166 60                    4267 	ld	h, b
      001167 19                    4268 	add	hl, de
      001168 4D                    4269 	ld	c, l
      001169 44                    4270 	ld	b, h
      00116A F8 04                 4271 	ldhl	sp,	#4
      00116C 2A                    4272 	ld	a,	(hl+)
      00116D 66                    4273 	ld	h, (hl)
      00116E 6F                    4274 	ld	l, a
      00116F 79                    4275 	ld	a, c
      001170 22                    4276 	ld	(hl+), a
      001171 70                    4277 	ld	(hl), b
                                   4278 ;main.c:440: enemies[i].yReserve +=  (-yMovement) << 3;
      001172 F8 0A                 4279 	ldhl	sp,#10
      001174 2A                    4280 	ld	a, (hl+)
      001175 5F                    4281 	ld	e, a
      001176 56                    4282 	ld	d, (hl)
      001177 1A                    4283 	ld	a, (de)
      001178 4F                    4284 	ld	c, a
      001179 AF                    4285 	xor	a, a
      00117A F8 0E                 4286 	ldhl	sp,	#14
      00117C 96                    4287 	sub	a, (hl)
      00117D 87                    4288 	add	a, a
      00117E 87                    4289 	add	a, a
      00117F 87                    4290 	add	a, a
      001180 81                    4291 	add	a, c
      001181 4F                    4292 	ld	c, a
      001182 F8 0A                 4293 	ldhl	sp,	#10
      001184 2A                    4294 	ld	a,	(hl+)
      001185 66                    4295 	ld	h, (hl)
      001186 6F                    4296 	ld	l, a
      001187 71                    4297 	ld	(hl), c
      001188                       4298 00133$:
                                   4299 ;main.c:376: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001188 F8 0F                 4300 	ldhl	sp,	#15
      00118A 34                    4301 	inc	(hl)
      00118B C3rD7r0C              4302 	jp	00196$
      00118E                       4303 00134$:
                                   4304 ;main.c:447: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00118E F8 0F                 4305 	ldhl	sp,	#15
      001190 36 00                 4306 	ld	(hl), #0x00
      001192                       4307 00198$:
      001192 21r8Cr07              4308 	ld	hl, #_ENEMYCOUNT
      001195 4E                    4309 	ld	c, (hl)
      001196 F8 0F                 4310 	ldhl	sp,	#15
      001198 7E                    4311 	ld	a, (hl)
      001199 91                    4312 	sub	a, c
      00119A D2r3Dr15              4313 	jp	NC, 00200$
                                   4314 ;main.c:449: if (enemies[i].alive) {
      00119D 7E                    4315 	ld	a, (hl)
      00119E 16 00                 4316 	ld	d, #0x00
      0011A0 87                    4317 	add	a, a
      0011A1 CB 12                 4318 	rl	d
      0011A3 87                    4319 	add	a, a
      0011A4 CB 12                 4320 	rl	d
      0011A6 87                    4321 	add	a, a
      0011A7 CB 12                 4322 	rl	d
      0011A9 87                    4323 	add	a, a
      0011AA CB 12                 4324 	rl	d
      0011AC 5F                    4325 	ld	e, a
      0011AD 21r00r00              4326 	ld	hl, #_enemies
      0011B0 19                    4327 	add	hl, de
      0011B1 E5                    4328 	push	hl
      0011B2 7D                    4329 	ld	a, l
      0011B3 F8 03                 4330 	ldhl	sp,	#3
      0011B5 77                    4331 	ld	(hl), a
      0011B6 E1                    4332 	pop	hl
      0011B7 7C                    4333 	ld	a, h
      0011B8 F8 02                 4334 	ldhl	sp,	#2
      0011BA 32                    4335 	ld	(hl-), a
      0011BB 2A                    4336 	ld	a, (hl+)
      0011BC 5F                    4337 	ld	e, a
      0011BD 56                    4338 	ld	d, (hl)
      0011BE 21 09 00              4339 	ld	hl, #0x0009
      0011C1 19                    4340 	add	hl, de
      0011C2 E5                    4341 	push	hl
      0011C3 7D                    4342 	ld	a, l
      0011C4 F8 05                 4343 	ldhl	sp,	#5
      0011C6 77                    4344 	ld	(hl), a
      0011C7 E1                    4345 	pop	hl
      0011C8 7C                    4346 	ld	a, h
      0011C9 F8 04                 4347 	ldhl	sp,	#4
      0011CB 32                    4348 	ld	(hl-), a
      0011CC 2A                    4349 	ld	a, (hl+)
      0011CD 5F                    4350 	ld	e, a
      0011CE 56                    4351 	ld	d, (hl)
      0011CF 1A                    4352 	ld	a, (de)
      0011D0 F8 0E                 4353 	ldhl	sp,	#14
      0011D2 77                    4354 	ld	(hl), a
      0011D3 7E                    4355 	ld	a, (hl)
      0011D4 B7                    4356 	or	a, a
      0011D5 CArCBr13              4357 	jp	Z, 00157$
                                   4358 ;main.c:450: if (enemies[i].visible == 1) {
      0011D8 F8 01                 4359 	ldhl	sp,#1
      0011DA 2A                    4360 	ld	a, (hl+)
      0011DB 5F                    4361 	ld	e, a
      0011DC 56                    4362 	ld	d, (hl)
      0011DD 21 0A 00              4363 	ld	hl, #0x000a
      0011E0 19                    4364 	add	hl, de
      0011E1 E5                    4365 	push	hl
      0011E2 7D                    4366 	ld	a, l
      0011E3 F8 07                 4367 	ldhl	sp,	#7
      0011E5 77                    4368 	ld	(hl), a
      0011E6 E1                    4369 	pop	hl
      0011E7 7C                    4370 	ld	a, h
      0011E8 F8 06                 4371 	ldhl	sp,	#6
      0011EA 32                    4372 	ld	(hl-), a
      0011EB 2A                    4373 	ld	a, (hl+)
      0011EC 5F                    4374 	ld	e, a
      0011ED 2A                    4375 	ld	a, (hl+)
      0011EE 57                    4376 	ld	d, a
      0011EF 1A                    4377 	ld	a, (de)
      0011F0 77                    4378 	ld	(hl), a
                                   4379 ;main.c:451: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0011F1 F8 01                 4380 	ldhl	sp,#1
      0011F3 2A                    4381 	ld	a, (hl+)
      0011F4 5F                    4382 	ld	e, a
      0011F5 56                    4383 	ld	d, (hl)
      0011F6 1A                    4384 	ld	a, (de)
      0011F7 F8 08                 4385 	ldhl	sp,	#8
      0011F9 22                    4386 	ld	(hl+), a
      0011FA 13                    4387 	inc	de
      0011FB 1A                    4388 	ld	a, (de)
      0011FC 77                    4389 	ld	(hl), a
      0011FD F8 01                 4390 	ldhl	sp,	#1
      0011FF 2A                    4391 	ld	a, (hl+)
      001200 4F                    4392 	ld	c, a
      001201 46                    4393 	ld	b, (hl)
      001202 03                    4394 	inc	bc
      001203 03                    4395 	inc	bc
                                   4396 ;main.c:453: set_sprite_tile(10+(i<<1), 0x7f);
      001204 F8 0F                 4397 	ldhl	sp,	#15
      001206 5E                    4398 	ld	e, (hl)
                                   4399 ;main.c:451: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001207 F8 08                 4400 	ldhl	sp,	#8
      001209 2A                    4401 	ld	a, (hl+)
      00120A 23                    4402 	inc	hl
      00120B 32                    4403 	ld	(hl-), a
      00120C 2A                    4404 	ld	a, (hl+)
      00120D 23                    4405 	inc	hl
                                   4406 ;main.c:453: set_sprite_tile(10+(i<<1), 0x7f);
      00120E 22                    4407 	ld	(hl+), a
      00120F 7B                    4408 	ld	a, e
      001210 87                    4409 	add	a, a
                                   4410 ;main.c:451: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001211 32                    4411 	ld	(hl-), a
      001212 2A                    4412 	ld	a, (hl+)
      001213 23                    4413 	inc	hl
      001214 07                    4414 	rlca
      001215 E6 01                 4415 	and	a,#0x01
                                   4416 ;main.c:453: set_sprite_tile(10+(i<<1), 0x7f);
      001217 32                    4417 	ld	(hl-), a
      001218 2A                    4418 	ld	a, (hl+)
      001219 23                    4419 	inc	hl
      00121A C6 0A                 4420 	add	a, #0x0a
      00121C 77                    4421 	ld	(hl), a
                                   4422 ;main.c:450: if (enemies[i].visible == 1) {
      00121D F8 07                 4423 	ldhl	sp,	#7
      00121F 7E                    4424 	ld	a, (hl)
      001220 3D                    4425 	dec	a
      001221 20 74                 4426 	jr	NZ, 00154$
                                   4427 ;main.c:451: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001223 F8 0D                 4428 	ldhl	sp,	#13
      001225 7E                    4429 	ld	a, (hl)
      001226 B7                    4430 	or	a, a
      001227 20 43                 4431 	jr	NZ, 00135$
      001229 F8 0A                 4432 	ldhl	sp,	#10
      00122B 3E AC                 4433 	ld	a, #0xac
      00122D 96                    4434 	sub	a, (hl)
      00122E 23                    4435 	inc	hl
      00122F 3E 00                 4436 	ld	a, #0x00
      001231 9E                    4437 	sbc	a, (hl)
      001232 3E 00                 4438 	ld	a, #0x00
      001234 57                    4439 	ld	d, a
      001235 CB 7E                 4440 	bit	7, (hl)
      001237 28 07                 4441 	jr	Z, 00439$
      001239 CB 7A                 4442 	bit	7, d
      00123B 20 08                 4443 	jr	NZ, 00440$
      00123D BF                    4444 	cp	a, a
      00123E 18 05                 4445 	jr	00440$
      001240                       4446 00439$:
      001240 CB 7A                 4447 	bit	7, d
      001242 28 01                 4448 	jr	Z, 00440$
      001244 37                    4449 	scf
      001245                       4450 00440$:
      001245 38 25                 4451 	jr	C, 00135$
      001247 69                    4452 	ld	l, c
      001248 60                    4453 	ld	h, b
      001249 2A                    4454 	ld	a, (hl+)
      00124A 4F                    4455 	ld	c, a
      00124B 46                    4456 	ld	b, (hl)
      00124C CB 78                 4457 	bit	7, b
      00124E 20 1C                 4458 	jr	NZ, 00135$
      001250 58                    4459 	ld	e, b
      001251 16 00                 4460 	ld	d, #0x00
      001253 3E 98                 4461 	ld	a, #0x98
      001255 B9                    4462 	cp	a, c
      001256 3E 00                 4463 	ld	a, #0x00
      001258 98                    4464 	sbc	a, b
      001259 CB 7B                 4465 	bit	7, e
      00125B 28 07                 4466 	jr	Z, 00441$
      00125D CB 7A                 4467 	bit	7, d
      00125F 20 08                 4468 	jr	NZ, 00442$
      001261 BF                    4469 	cp	a, a
      001262 18 05                 4470 	jr	00442$
      001264                       4471 00441$:
      001264 CB 7A                 4472 	bit	7, d
      001266 28 01                 4473 	jr	Z, 00442$
      001268 37                    4474 	scf
      001269                       4475 00442$:
      001269 D2rCBr13              4476 	jp	NC, 00157$
      00126C                       4477 00135$:
                                   4478 ;main.c:452: enemies[i].visible = 0;
      00126C F8 05                 4479 	ldhl	sp,	#5
      00126E 2A                    4480 	ld	a,	(hl+)
      00126F 66                    4481 	ld	h, (hl)
      001270 6F                    4482 	ld	l, a
      001271 36 00                 4483 	ld	(hl), #0x00
                                   4484 ;main.c:453: set_sprite_tile(10+(i<<1), 0x7f);
      001273 F8 0E                 4485 	ldhl	sp,	#14
                                   4486 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001275 6E                    4487 	ld	l, (hl)
      001276 01r00r00              4488 	ld	bc, #_shadow_OAM+0
                                   4489 ;	spillPairReg hl
                                   4490 ;	spillPairReg hl
      001279 26 00                 4491 	ld	h, #0x00
                                   4492 ;	spillPairReg hl
                                   4493 ;	spillPairReg hl
      00127B 29                    4494 	add	hl, hl
      00127C 29                    4495 	add	hl, hl
      00127D 09                    4496 	add	hl, bc
      00127E 23                    4497 	inc	hl
      00127F 23                    4498 	inc	hl
      001280 36 7F                 4499 	ld	(hl), #0x7f
                                   4500 ;main.c:454: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001282 F8 0C                 4501 	ldhl	sp,	#12
      001284 7E                    4502 	ld	a, (hl)
      001285 C6 0B                 4503 	add	a, #0x0b
                                   4504 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001287 6F                    4505 	ld	l, a
      001288 01r00r00              4506 	ld	bc, #_shadow_OAM+0
                                   4507 ;	spillPairReg hl
                                   4508 ;	spillPairReg hl
      00128B 26 00                 4509 	ld	h, #0x00
                                   4510 ;	spillPairReg hl
                                   4511 ;	spillPairReg hl
      00128D 29                    4512 	add	hl, hl
      00128E 29                    4513 	add	hl, hl
      00128F 09                    4514 	add	hl, bc
      001290 23                    4515 	inc	hl
      001291 23                    4516 	inc	hl
      001292 36 7F                 4517 	ld	(hl), #0x7f
                                   4518 ;main.c:454: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001294 C3rCBr13              4519 	jp	00157$
      001297                       4520 00154$:
                                   4521 ;main.c:458: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      001297 F8 0D                 4522 	ldhl	sp,	#13
      001299 CB 46                 4523 	bit	0, (hl)
      00129B C2r36r13              4524 	jp	NZ, 00148$
      00129E F8 0A                 4525 	ldhl	sp,	#10
      0012A0 2A                    4526 	ld	a, (hl+)
      0012A1 D6 AC                 4527 	sub	a, #0xac
      0012A3 7E                    4528 	ld	a, (hl)
      0012A4 DE 00                 4529 	sbc	a, #0x00
      0012A6 56                    4530 	ld	d, (hl)
      0012A7 3E 00                 4531 	ld	a, #0x00
      0012A9 CB 7F                 4532 	bit	7,a
      0012AB 28 07                 4533 	jr	Z, 00443$
      0012AD CB 7A                 4534 	bit	7, d
      0012AF 20 08                 4535 	jr	NZ, 00444$
      0012B1 BF                    4536 	cp	a, a
      0012B2 18 05                 4537 	jr	00444$
      0012B4                       4538 00443$:
      0012B4 CB 7A                 4539 	bit	7, d
      0012B6 28 01                 4540 	jr	Z, 00444$
      0012B8 37                    4541 	scf
      0012B9                       4542 00444$:
      0012B9 30 7B                 4543 	jr	NC, 00148$
      0012BB 69                    4544 	ld	l, c
      0012BC 60                    4545 	ld	h, b
      0012BD 2A                    4546 	ld	a,	(hl+)
      0012BE 66                    4547 	ld	h, (hl)
                                   4548 ;	spillPairReg hl
      0012BF 6F                    4549 	ld	l, a
                                   4550 ;	spillPairReg hl
                                   4551 ;	spillPairReg hl
      0012C0 5C                    4552 	ld	e, h
      0012C1 AF                    4553 	xor	a, a
      0012C2 57                    4554 	ld	d, a
      0012C3 BD                    4555 	cp	a, l
      0012C4 9C                    4556 	sbc	a, h
      0012C5 CB 7B                 4557 	bit	7, e
      0012C7 28 07                 4558 	jr	Z, 00445$
      0012C9 CB 7A                 4559 	bit	7, d
      0012CB 20 08                 4560 	jr	NZ, 00446$
      0012CD BF                    4561 	cp	a, a
      0012CE 18 05                 4562 	jr	00446$
      0012D0                       4563 00445$:
      0012D0 CB 7A                 4564 	bit	7, d
      0012D2 28 01                 4565 	jr	Z, 00446$
      0012D4 37                    4566 	scf
      0012D5                       4567 00446$:
      0012D5 30 5F                 4568 	jr	NC, 00148$
      0012D7 7D                    4569 	ld	a, l
      0012D8 D6 98                 4570 	sub	a, #0x98
      0012DA 7C                    4571 	ld	a, h
      0012DB 17                    4572 	rla
      0012DC 3F                    4573 	ccf
      0012DD 1F                    4574 	rra
      0012DE DE 80                 4575 	sbc	a, #0x80
      0012E0 30 54                 4576 	jr	NC, 00148$
                                   4577 ;main.c:459: enemies[i].visible = 1;
      0012E2 F8 05                 4578 	ldhl	sp,	#5
      0012E4 2A                    4579 	ld	a,	(hl+)
      0012E5 66                    4580 	ld	h, (hl)
      0012E6 6F                    4581 	ld	l, a
      0012E7 36 01                 4582 	ld	(hl), #0x01
                                   4583 ;main.c:460: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      0012E9 F8 01                 4584 	ldhl	sp,#1
      0012EB 2A                    4585 	ld	a, (hl+)
      0012EC 5F                    4586 	ld	e, a
      0012ED 56                    4587 	ld	d, (hl)
      0012EE 21 06 00              4588 	ld	hl, #0x0006
      0012F1 19                    4589 	add	hl, de
      0012F2 4D                    4590 	ld	c, l
      0012F3 44                    4591 	ld	b, h
      0012F4 0A                    4592 	ld	a, (bc)
      0012F5 4F                    4593 	ld	c, a
      0012F6 F8 0E                 4594 	ldhl	sp,	#14
                                   4595 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0012F8 6E                    4596 	ld	l, (hl)
                                   4597 ;	spillPairReg hl
                                   4598 ;	spillPairReg hl
      0012F9 26 00                 4599 	ld	h, #0x00
                                   4600 ;	spillPairReg hl
                                   4601 ;	spillPairReg hl
      0012FB 29                    4602 	add	hl, hl
      0012FC 29                    4603 	add	hl, hl
      0012FD 11r00r00              4604 	ld	de, #_shadow_OAM
      001300 19                    4605 	add	hl, de
      001301 23                    4606 	inc	hl
      001302 23                    4607 	inc	hl
      001303 71                    4608 	ld	(hl), c
                                   4609 ;main.c:461: if (enemies[i].spriteCount == 2) {
      001304 F8 01                 4610 	ldhl	sp,#1
      001306 2A                    4611 	ld	a, (hl+)
      001307 5F                    4612 	ld	e, a
      001308 56                    4613 	ld	d, (hl)
      001309 21 08 00              4614 	ld	hl, #0x0008
      00130C 19                    4615 	add	hl, de
      00130D 4D                    4616 	ld	c, l
      00130E 44                    4617 	ld	b, h
      00130F 0A                    4618 	ld	a, (bc)
      001310 D6 02                 4619 	sub	a, #0x02
      001312 C2rCBr13              4620 	jp	NZ,00157$
                                   4621 ;main.c:462: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001315 F8 01                 4622 	ldhl	sp,#1
      001317 2A                    4623 	ld	a, (hl+)
      001318 5F                    4624 	ld	e, a
      001319 56                    4625 	ld	d, (hl)
      00131A 21 07 00              4626 	ld	hl, #0x0007
      00131D 19                    4627 	add	hl, de
      00131E 4D                    4628 	ld	c, l
      00131F 44                    4629 	ld	b, h
      001320 0A                    4630 	ld	a, (bc)
      001321 4F                    4631 	ld	c, a
      001322 F8 0C                 4632 	ldhl	sp,	#12
      001324 7E                    4633 	ld	a, (hl)
      001325 C6 0B                 4634 	add	a, #0x0b
                                   4635 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001327 6F                    4636 	ld	l, a
                                   4637 ;	spillPairReg hl
                                   4638 ;	spillPairReg hl
      001328 26 00                 4639 	ld	h, #0x00
                                   4640 ;	spillPairReg hl
                                   4641 ;	spillPairReg hl
      00132A 29                    4642 	add	hl, hl
      00132B 29                    4643 	add	hl, hl
      00132C 11r00r00              4644 	ld	de, #_shadow_OAM
      00132F 19                    4645 	add	hl, de
      001330 23                    4646 	inc	hl
      001331 23                    4647 	inc	hl
      001332 71                    4648 	ld	(hl), c
                                   4649 ;main.c:462: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001333 C3rCBr13              4650 	jp	00157$
      001336                       4651 00148$:
                                   4652 ;main.c:465: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      001336 F8 08                 4653 	ldhl	sp,	#8
      001338 2A                    4654 	ld	a, (hl+)
      001339 D6 9C                 4655 	sub	a, #0x9c
      00133B 7E                    4656 	ld	a, (hl)
      00133C DE FF                 4657 	sbc	a, #0xff
      00133E 56                    4658 	ld	d, (hl)
      00133F 3E FF                 4659 	ld	a, #0xff
      001341 CB 7F                 4660 	bit	7,a
      001343 28 07                 4661 	jr	Z, 00449$
      001345 CB 7A                 4662 	bit	7, d
      001347 20 08                 4663 	jr	NZ, 00450$
      001349 BF                    4664 	cp	a, a
      00134A 18 05                 4665 	jr	00450$
      00134C                       4666 00449$:
      00134C CB 7A                 4667 	bit	7, d
      00134E 28 01                 4668 	jr	Z, 00450$
      001350 37                    4669 	scf
      001351                       4670 00450$:
      001351 38 49                 4671 	jr	C, 00142$
      001353 F8 0A                 4672 	ldhl	sp,	#10
      001355 3E 10                 4673 	ld	a, #0x10
      001357 96                    4674 	sub	a, (hl)
      001358 23                    4675 	inc	hl
      001359 3E 01                 4676 	ld	a, #0x01
      00135B 9E                    4677 	sbc	a, (hl)
      00135C 3E 01                 4678 	ld	a, #0x01
      00135E 57                    4679 	ld	d, a
      00135F CB 7E                 4680 	bit	7, (hl)
      001361 28 07                 4681 	jr	Z, 00451$
      001363 CB 7A                 4682 	bit	7, d
      001365 20 08                 4683 	jr	NZ, 00452$
      001367 BF                    4684 	cp	a, a
      001368 18 05                 4685 	jr	00452$
      00136A                       4686 00451$:
      00136A CB 7A                 4687 	bit	7, d
      00136C 28 01                 4688 	jr	Z, 00452$
      00136E 37                    4689 	scf
      00136F                       4690 00452$:
      00136F 38 2B                 4691 	jr	C, 00142$
      001371 69                    4692 	ld	l, c
      001372 60                    4693 	ld	h, b
      001373 2A                    4694 	ld	a, (hl+)
      001374 4F                    4695 	ld	c, a
      001375 46                    4696 	ld	b, (hl)
      001376 79                    4697 	ld	a, c
      001377 D6 9C                 4698 	sub	a, #0x9c
      001379 78                    4699 	ld	a, b
      00137A 17                    4700 	rla
      00137B 3F                    4701 	ccf
      00137C 1F                    4702 	rra
      00137D DE 7F                 4703 	sbc	a, #0x7f
      00137F 38 1B                 4704 	jr	C, 00142$
      001381 58                    4705 	ld	e, b
      001382 16 00                 4706 	ld	d, #0x00
      001384 3E FC                 4707 	ld	a, #0xfc
      001386 B9                    4708 	cp	a, c
      001387 3E 00                 4709 	ld	a, #0x00
      001389 98                    4710 	sbc	a, b
      00138A CB 7B                 4711 	bit	7, e
      00138C 28 07                 4712 	jr	Z, 00453$
      00138E CB 7A                 4713 	bit	7, d
      001390 20 08                 4714 	jr	NZ, 00454$
      001392 BF                    4715 	cp	a, a
      001393 18 05                 4716 	jr	00454$
      001395                       4717 00453$:
      001395 CB 7A                 4718 	bit	7, d
      001397 28 01                 4719 	jr	Z, 00454$
      001399 37                    4720 	scf
      00139A                       4721 00454$:
      00139A 30 2F                 4722 	jr	NC, 00157$
      00139C                       4723 00142$:
                                   4724 ;main.c:466: enemies[i].alive = 0;
      00139C F8 03                 4725 	ldhl	sp,	#3
      00139E 2A                    4726 	ld	a,	(hl+)
      00139F 66                    4727 	ld	h, (hl)
      0013A0 6F                    4728 	ld	l, a
      0013A1 36 00                 4729 	ld	(hl), #0x00
                                   4730 ;main.c:467: set_sprite_tile(10+(i<<1), 0x7f);
      0013A3 F8 0E                 4731 	ldhl	sp,	#14
                                   4732 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0013A5 6E                    4733 	ld	l, (hl)
      0013A6 01r00r00              4734 	ld	bc, #_shadow_OAM+0
                                   4735 ;	spillPairReg hl
                                   4736 ;	spillPairReg hl
      0013A9 26 00                 4737 	ld	h, #0x00
                                   4738 ;	spillPairReg hl
                                   4739 ;	spillPairReg hl
      0013AB 29                    4740 	add	hl, hl
      0013AC 29                    4741 	add	hl, hl
      0013AD 09                    4742 	add	hl, bc
      0013AE 23                    4743 	inc	hl
      0013AF 23                    4744 	inc	hl
      0013B0 36 7F                 4745 	ld	(hl), #0x7f
                                   4746 ;main.c:468: set_sprite_tile(10+(i<<1)+1, 0x7f);
      0013B2 F8 0C                 4747 	ldhl	sp,	#12
      0013B4 7E                    4748 	ld	a, (hl)
      0013B5 C6 0B                 4749 	add	a, #0x0b
                                   4750 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0013B7 6F                    4751 	ld	l, a
      0013B8 01r00r00              4752 	ld	bc, #_shadow_OAM+0
                                   4753 ;	spillPairReg hl
                                   4754 ;	spillPairReg hl
      0013BB 26 00                 4755 	ld	h, #0x00
                                   4756 ;	spillPairReg hl
                                   4757 ;	spillPairReg hl
      0013BD 29                    4758 	add	hl, hl
      0013BE 29                    4759 	add	hl, hl
      0013BF 09                    4760 	add	hl, bc
      0013C0 23                    4761 	inc	hl
      0013C1 23                    4762 	inc	hl
      0013C2 36 7F                 4763 	ld	(hl), #0x7f
                                   4764 ;main.c:469: initEnemies(0);
      0013C4 AF                    4765 	xor	a, a
      0013C5 F5                    4766 	push	af
      0013C6 33                    4767 	inc	sp
      0013C7 CDr83r0B              4768 	call	_initEnemies
      0013CA 33                    4769 	inc	sp
      0013CB                       4770 00157$:
                                   4771 ;main.c:473: if (enemies[i].spriteCount == 1) {
      0013CB F8 0F                 4772 	ldhl	sp,	#15
      0013CD 6E                    4773 	ld	l, (hl)
      0013CE 26 00                 4774 	ld	h, #0x00
      0013D0 29                    4775 	add	hl, hl
      0013D1 29                    4776 	add	hl, hl
      0013D2 29                    4777 	add	hl, hl
      0013D3 29                    4778 	add	hl, hl
      0013D4 7D                    4779 	ld	a, l
      0013D5 C6r00                 4780 	add	a, #<(_enemies)
      0013D7 4F                    4781 	ld	c, a
      0013D8 7C                    4782 	ld	a, h
      0013D9 CEs00                 4783 	adc	a, #>(_enemies)
      0013DB 47                    4784 	ld	b, a
      0013DC 21 08 00              4785 	ld	hl, #0x0008
      0013DF 09                    4786 	add	hl, bc
      0013E0 5E                    4787 	ld	e, (hl)
                                   4788 ;main.c:453: set_sprite_tile(10+(i<<1), 0x7f);
      0013E1 F8 0F                 4789 	ldhl	sp,	#15
      0013E3 3A                    4790 	ld	a, (hl-)
      0013E4 87                    4791 	add	a, a
      0013E5 77                    4792 	ld	(hl), a
      0013E6 7E                    4793 	ld	a, (hl)
      0013E7 C6 0A                 4794 	add	a, #0x0a
      0013E9 F8 0A                 4795 	ldhl	sp,	#10
      0013EB 77                    4796 	ld	(hl), a
                                   4797 ;main.c:473: if (enemies[i].spriteCount == 1) {
      0013EC 1D                    4798 	dec	e
      0013ED 20 52                 4799 	jr	NZ, 00165$
                                   4800 ;main.c:474: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      0013EF 59                    4801 	ld	e, c
      0013F0 50                    4802 	ld	d, b
      0013F1 13                    4803 	inc	de
      0013F2 13                    4804 	inc	de
      0013F3 1A                    4805 	ld	a, (de)
      0013F4 C6 0C                 4806 	add	a, #0x0c
      0013F6 5F                    4807 	ld	e, a
      0013F7 0A                    4808 	ld	a, (bc)
      0013F8 C6 04                 4809 	add	a, #0x04
      0013FA F8 0E                 4810 	ldhl	sp,	#14
      0013FC 77                    4811 	ld	(hl), a
      0013FD F8 0A                 4812 	ldhl	sp,	#10
      0013FF 56                    4813 	ld	d, (hl)
                                   4814 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001400 6A                    4815 	ld	l, d
                                   4816 ;	spillPairReg hl
                                   4817 ;	spillPairReg hl
      001401 26 00                 4818 	ld	h, #0x00
                                   4819 ;	spillPairReg hl
                                   4820 ;	spillPairReg hl
      001403 29                    4821 	add	hl, hl
      001404 29                    4822 	add	hl, hl
      001405 D5                    4823 	push	de
      001406 11r00r00              4824 	ld	de, #_shadow_OAM
      001409 19                    4825 	add	hl, de
      00140A D1                    4826 	pop	de
                                   4827 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00140B 7B                    4828 	ld	a, e
      00140C 22                    4829 	ld	(hl+), a
      00140D 5D                    4830 	ld	e, l
      00140E 54                    4831 	ld	d, h
      00140F F8 0E                 4832 	ldhl	sp,	#14
      001411 7E                    4833 	ld	a, (hl)
      001412 12                    4834 	ld	(de), a
                                   4835 ;main.c:475: if (enemies[i].xSpeed >= 0) {
      001413 21 0E 00              4836 	ld	hl, #0x000e
      001416 09                    4837 	add	hl, bc
      001417 CB 7E                 4838 	bit	7, (hl)
      001419 20 13                 4839 	jr	NZ, 00159$
                                   4840 ;main.c:476: set_sprite_prop(10+(i<<1), 0);
      00141B F8 0A                 4841 	ldhl	sp,	#10
                                   4842 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00141D 6E                    4843 	ld	l, (hl)
      00141E 01r00r00              4844 	ld	bc, #_shadow_OAM+0
                                   4845 ;	spillPairReg hl
                                   4846 ;	spillPairReg hl
      001421 26 00                 4847 	ld	h, #0x00
                                   4848 ;	spillPairReg hl
                                   4849 ;	spillPairReg hl
      001423 29                    4850 	add	hl, hl
      001424 29                    4851 	add	hl, hl
      001425 09                    4852 	add	hl, bc
      001426 23                    4853 	inc	hl
      001427 23                    4854 	inc	hl
      001428 23                    4855 	inc	hl
      001429 36 00                 4856 	ld	(hl), #0x00
                                   4857 ;main.c:476: set_sprite_prop(10+(i<<1), 0);
      00142B C3r37r15              4858 	jp	00199$
      00142E                       4859 00159$:
                                   4860 ;main.c:479: set_sprite_prop(10+(i<<1), S_FLIPX);
      00142E F8 0A                 4861 	ldhl	sp,	#10
                                   4862 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001430 6E                    4863 	ld	l, (hl)
      001431 01r00r00              4864 	ld	bc, #_shadow_OAM+0
                                   4865 ;	spillPairReg hl
                                   4866 ;	spillPairReg hl
      001434 26 00                 4867 	ld	h, #0x00
                                   4868 ;	spillPairReg hl
                                   4869 ;	spillPairReg hl
      001436 29                    4870 	add	hl, hl
      001437 29                    4871 	add	hl, hl
      001438 09                    4872 	add	hl, bc
      001439 23                    4873 	inc	hl
      00143A 23                    4874 	inc	hl
      00143B 23                    4875 	inc	hl
      00143C 36 20                 4876 	ld	(hl), #0x20
                                   4877 ;main.c:479: set_sprite_prop(10+(i<<1), S_FLIPX);
      00143E C3r37r15              4878 	jp	00199$
      001441                       4879 00165$:
                                   4880 ;main.c:484: if (enemies[i].xSpeed >= 0) {
      001441 21 0E 00              4881 	ld	hl, #0x000e
      001444 09                    4882 	add	hl, bc
      001445 E5                    4883 	push	hl
      001446 7D                    4884 	ld	a, l
      001447 F8 0E                 4885 	ldhl	sp,	#14
      001449 77                    4886 	ld	(hl), a
      00144A E1                    4887 	pop	hl
      00144B 7C                    4888 	ld	a, h
      00144C F8 0D                 4889 	ldhl	sp,	#13
      00144E 32                    4890 	ld	(hl-), a
      00144F 2A                    4891 	ld	a, (hl+)
      001450 5F                    4892 	ld	e, a
      001451 56                    4893 	ld	d, (hl)
      001452 1A                    4894 	ld	a, (de)
                                   4895 ;	spillPairReg hl
                                   4896 ;	spillPairReg hl
      001453 CB 7F                 4897 	bit	7,a
      001455 20 70                 4898 	jr	NZ, 00162$
                                   4899 ;main.c:485: set_sprite_prop(10+(i<<1), 0);
      001457 F8 0A                 4900 	ldhl	sp,	#10
                                   4901 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001459 6E                    4902 	ld	l, (hl)
                                   4903 ;	spillPairReg hl
                                   4904 ;	spillPairReg hl
      00145A 26 00                 4905 	ld	h, #0x00
                                   4906 ;	spillPairReg hl
                                   4907 ;	spillPairReg hl
      00145C 29                    4908 	add	hl, hl
      00145D 29                    4909 	add	hl, hl
      00145E 11r00r00              4910 	ld	de, #_shadow_OAM
      001461 19                    4911 	add	hl, de
      001462 23                    4912 	inc	hl
      001463 23                    4913 	inc	hl
      001464 23                    4914 	inc	hl
      001465 36 00                 4915 	ld	(hl), #0x00
                                   4916 ;main.c:486: set_sprite_prop(10+(i<<1)+1, 0);
      001467 F8 0E                 4917 	ldhl	sp,	#14
      001469 7E                    4918 	ld	a, (hl)
      00146A C6 0B                 4919 	add	a, #0x0b
      00146C F8 0B                 4920 	ldhl	sp,	#11
      00146E 77                    4921 	ld	(hl), a
                                   4922 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00146F 6E                    4923 	ld	l, (hl)
                                   4924 ;	spillPairReg hl
                                   4925 ;	spillPairReg hl
      001470 26 00                 4926 	ld	h, #0x00
                                   4927 ;	spillPairReg hl
                                   4928 ;	spillPairReg hl
      001472 29                    4929 	add	hl, hl
      001473 29                    4930 	add	hl, hl
      001474 11r00r00              4931 	ld	de, #_shadow_OAM
      001477 19                    4932 	add	hl, de
      001478 23                    4933 	inc	hl
      001479 23                    4934 	inc	hl
      00147A 23                    4935 	inc	hl
      00147B 36 00                 4936 	ld	(hl), #0x00
                                   4937 ;main.c:487: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      00147D 21 02 00              4938 	ld	hl, #0x0002
      001480 09                    4939 	add	hl, bc
      001481 E5                    4940 	push	hl
      001482 7D                    4941 	ld	a, l
      001483 F8 0E                 4942 	ldhl	sp,	#14
      001485 77                    4943 	ld	(hl), a
      001486 E1                    4944 	pop	hl
      001487 7C                    4945 	ld	a, h
      001488 F8 0D                 4946 	ldhl	sp,	#13
      00148A 32                    4947 	ld	(hl-), a
      00148B 2A                    4948 	ld	a, (hl+)
      00148C 5F                    4949 	ld	e, a
      00148D 2A                    4950 	ld	a, (hl+)
      00148E 57                    4951 	ld	d, a
      00148F 1A                    4952 	ld	a, (de)
      001490 C6 08                 4953 	add	a, #0x08
      001492 5F                    4954 	ld	e, a
      001493 0A                    4955 	ld	a, (bc)
      001494 77                    4956 	ld	(hl), a
      001495 F8 0A                 4957 	ldhl	sp,	#10
      001497 56                    4958 	ld	d, (hl)
                                   4959 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001498 6A                    4960 	ld	l, d
                                   4961 ;	spillPairReg hl
                                   4962 ;	spillPairReg hl
      001499 26 00                 4963 	ld	h, #0x00
                                   4964 ;	spillPairReg hl
                                   4965 ;	spillPairReg hl
      00149B 29                    4966 	add	hl, hl
      00149C 29                    4967 	add	hl, hl
      00149D D5                    4968 	push	de
      00149E 11r00r00              4969 	ld	de, #_shadow_OAM
      0014A1 19                    4970 	add	hl, de
      0014A2 D1                    4971 	pop	de
                                   4972 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0014A3 7B                    4973 	ld	a, e
      0014A4 22                    4974 	ld	(hl+), a
      0014A5 5D                    4975 	ld	e, l
      0014A6 54                    4976 	ld	d, h
      0014A7 F8 0E                 4977 	ldhl	sp,	#14
                                   4978 ;main.c:488: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      0014A9 3A                    4979 	ld	a, (hl-)
      0014AA 2B                    4980 	dec	hl
      0014AB 12                    4981 	ld	(de), a
      0014AC 2A                    4982 	ld	a, (hl+)
      0014AD 5F                    4983 	ld	e, a
      0014AE 3A                    4984 	ld	a, (hl-)
      0014AF 2B                    4985 	dec	hl
      0014B0 57                    4986 	ld	d, a
      0014B1 1A                    4987 	ld	a, (de)
      0014B2 C6 08                 4988 	add	a, #0x08
      0014B4 57                    4989 	ld	d, a
      0014B5 0A                    4990 	ld	a, (bc)
      0014B6 C6 08                 4991 	add	a, #0x08
      0014B8 5F                    4992 	ld	e, a
                                   4993 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0014B9 6E                    4994 	ld	l, (hl)
                                   4995 ;	spillPairReg hl
                                   4996 ;	spillPairReg hl
      0014BA 26 00                 4997 	ld	h, #0x00
                                   4998 ;	spillPairReg hl
                                   4999 ;	spillPairReg hl
      0014BC 29                    5000 	add	hl, hl
      0014BD 29                    5001 	add	hl, hl
      0014BE 01r00r00              5002 	ld	bc, #_shadow_OAM
      0014C1 09                    5003 	add	hl, bc
                                   5004 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0014C2 7A                    5005 	ld	a, d
      0014C3 22                    5006 	ld	(hl+), a
      0014C4 73                    5007 	ld	(hl), e
                                   5008 ;main.c:488: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      0014C5 18 70                 5009 	jr	00199$
      0014C7                       5010 00162$:
                                   5011 ;main.c:491: set_sprite_prop(10+(i<<1), S_FLIPX);
      0014C7 F8 0A                 5012 	ldhl	sp,	#10
      0014C9 5E                    5013 	ld	e, (hl)
                                   5014 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0014CA 26 00                 5015 	ld	h, #0x00
                                   5016 ;	spillPairReg hl
                                   5017 ;	spillPairReg hl
      0014CC 6B                    5018 	ld	l, e
      0014CD 29                    5019 	add	hl, hl
      0014CE 29                    5020 	add	hl, hl
      0014CF 11r00r00              5021 	ld	de, #_shadow_OAM
      0014D2 19                    5022 	add	hl, de
      0014D3 23                    5023 	inc	hl
      0014D4 23                    5024 	inc	hl
      0014D5 23                    5025 	inc	hl
      0014D6 36 20                 5026 	ld	(hl), #0x20
                                   5027 ;main.c:492: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      0014D8 F8 0E                 5028 	ldhl	sp,	#14
      0014DA 7E                    5029 	ld	a, (hl)
      0014DB C6 0B                 5030 	add	a, #0x0b
      0014DD F8 0B                 5031 	ldhl	sp,	#11
      0014DF 77                    5032 	ld	(hl), a
      0014E0 5E                    5033 	ld	e, (hl)
                                   5034 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0014E1 26 00                 5035 	ld	h, #0x00
                                   5036 ;	spillPairReg hl
                                   5037 ;	spillPairReg hl
      0014E3 6B                    5038 	ld	l, e
      0014E4 29                    5039 	add	hl, hl
      0014E5 29                    5040 	add	hl, hl
      0014E6 11r00r00              5041 	ld	de, #_shadow_OAM
      0014E9 19                    5042 	add	hl, de
      0014EA 23                    5043 	inc	hl
      0014EB 23                    5044 	inc	hl
      0014EC 23                    5045 	inc	hl
      0014ED 36 20                 5046 	ld	(hl), #0x20
                                   5047 ;main.c:493: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      0014EF 21 02 00              5048 	ld	hl, #0x0002
      0014F2 09                    5049 	add	hl, bc
      0014F3 E5                    5050 	push	hl
      0014F4 7D                    5051 	ld	a, l
      0014F5 F8 0E                 5052 	ldhl	sp,	#14
      0014F7 77                    5053 	ld	(hl), a
      0014F8 E1                    5054 	pop	hl
      0014F9 7C                    5055 	ld	a, h
      0014FA F8 0D                 5056 	ldhl	sp,	#13
      0014FC 32                    5057 	ld	(hl-), a
      0014FD 2A                    5058 	ld	a, (hl+)
      0014FE 5F                    5059 	ld	e, a
      0014FF 2A                    5060 	ld	a, (hl+)
      001500 57                    5061 	ld	d, a
      001501 1A                    5062 	ld	a, (de)
      001502 C6 08                 5063 	add	a, #0x08
      001504 5F                    5064 	ld	e, a
      001505 0A                    5065 	ld	a, (bc)
      001506 C6 08                 5066 	add	a, #0x08
      001508 77                    5067 	ld	(hl), a
      001509 F8 0A                 5068 	ldhl	sp,	#10
      00150B 56                    5069 	ld	d, (hl)
                                   5070 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00150C 6A                    5071 	ld	l, d
                                   5072 ;	spillPairReg hl
                                   5073 ;	spillPairReg hl
      00150D 26 00                 5074 	ld	h, #0x00
                                   5075 ;	spillPairReg hl
                                   5076 ;	spillPairReg hl
      00150F 29                    5077 	add	hl, hl
      001510 29                    5078 	add	hl, hl
      001511 D5                    5079 	push	de
      001512 11r00r00              5080 	ld	de, #_shadow_OAM
      001515 19                    5081 	add	hl, de
      001516 D1                    5082 	pop	de
                                   5083 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001517 7B                    5084 	ld	a, e
      001518 22                    5085 	ld	(hl+), a
      001519 5D                    5086 	ld	e, l
      00151A 54                    5087 	ld	d, h
      00151B F8 0E                 5088 	ldhl	sp,	#14
                                   5089 ;main.c:494: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      00151D 3A                    5090 	ld	a, (hl-)
      00151E 2B                    5091 	dec	hl
      00151F 12                    5092 	ld	(de), a
      001520 2A                    5093 	ld	a, (hl+)
      001521 5F                    5094 	ld	e, a
      001522 3A                    5095 	ld	a, (hl-)
      001523 2B                    5096 	dec	hl
      001524 57                    5097 	ld	d, a
      001525 1A                    5098 	ld	a, (de)
      001526 C6 08                 5099 	add	a, #0x08
      001528 57                    5100 	ld	d, a
      001529 0A                    5101 	ld	a, (bc)
      00152A 5F                    5102 	ld	e, a
                                   5103 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00152B 6E                    5104 	ld	l, (hl)
                                   5105 ;	spillPairReg hl
                                   5106 ;	spillPairReg hl
      00152C 26 00                 5107 	ld	h, #0x00
                                   5108 ;	spillPairReg hl
                                   5109 ;	spillPairReg hl
      00152E 29                    5110 	add	hl, hl
      00152F 29                    5111 	add	hl, hl
      001530 01r00r00              5112 	ld	bc, #_shadow_OAM
      001533 09                    5113 	add	hl, bc
                                   5114 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001534 7A                    5115 	ld	a, d
      001535 22                    5116 	ld	(hl+), a
      001536 73                    5117 	ld	(hl), e
                                   5118 ;main.c:494: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      001537                       5119 00199$:
                                   5120 ;main.c:447: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001537 F8 0F                 5121 	ldhl	sp,	#15
      001539 34                    5122 	inc	(hl)
      00153A C3r92r11              5123 	jp	00198$
      00153D                       5124 00200$:
                                   5125 ;main.c:500: }
      00153D E8 10                 5126 	add	sp, #16
      00153F C9                    5127 	ret
                                   5128 ;main.c:505: void move() {
                                   5129 ;	---------------------------------
                                   5130 ; Function move
                                   5131 ; ---------------------------------
      001540                       5132 _move::
      001540 E8 F8                 5133 	add	sp, #-8
                                   5134 ;main.c:509: if (joydata & J_A) {
      001542 FAr8Cr00              5135 	ld	a, (#_joydata)
      001545 CB 67                 5136 	bit	4, a
      001547 28 16                 5137 	jr	Z, 00102$
                                   5138 ;main.c:510: xSpeed += xDir + xDir + xDir;
      001549 21r56r00              5139 	ld	hl, #_xDir
      00154C 7E                    5140 	ld	a, (hl)
      00154D 87                    5141 	add	a, a
      00154E 86                    5142 	add	a, (hl)
      00154F 21r58r00              5143 	ld	hl, #_xSpeed
      001552 86                    5144 	add	a, (hl)
      001553 77                    5145 	ld	(hl), a
                                   5146 ;main.c:511: ySpeed += yDir + yDir + yDir;
      001554 21r57r00              5147 	ld	hl, #_yDir
      001557 7E                    5148 	ld	a, (hl)
      001558 87                    5149 	add	a, a
      001559 86                    5150 	add	a, (hl)
      00155A 21r59r00              5151 	ld	hl, #_ySpeed
      00155D 86                    5152 	add	a, (hl)
      00155E 77                    5153 	ld	(hl), a
      00155F                       5154 00102$:
                                   5155 ;main.c:515: xSpeed = clamp(xSpeed, -100, 100);
      00155F 21r58r00              5156 	ld	hl, #_xSpeed
      001562 4E                    5157 	ld	c, (hl)
                                   5158 ;main.c:276: return (value < min) ? min : (value > max) ? max : value;
      001563 79                    5159 	ld	a, c
      001564 EE 80                 5160 	xor	a, #0x80
      001566 D6 1C                 5161 	sub	a, #0x1c
      001568 30 04                 5162 	jr	NC, 00165$
      00156A 0E 9C                 5163 	ld	c, #0x9c
      00156C 18 19                 5164 	jr	00166$
      00156E                       5165 00165$:
      00156E 59                    5166 	ld	e, c
      00156F 3E 64                 5167 	ld	a,#0x64
      001571 57                    5168 	ld	d,a
      001572 91                    5169 	sub	a, c
      001573 CB 7B                 5170 	bit	7, e
      001575 28 07                 5171 	jr	Z, 00342$
      001577 CB 7A                 5172 	bit	7, d
      001579 20 08                 5173 	jr	NZ, 00343$
      00157B BF                    5174 	cp	a, a
      00157C 18 05                 5175 	jr	00343$
      00157E                       5176 00342$:
      00157E CB 7A                 5177 	bit	7, d
      001580 28 01                 5178 	jr	Z, 00343$
      001582 37                    5179 	scf
      001583                       5180 00343$:
      001583 30 02                 5181 	jr	NC, 00167$
      001585 0E 64                 5182 	ld	c, #0x64
      001587                       5183 00167$:
      001587                       5184 00166$:
      001587 21r58r00              5185 	ld	hl, #_xSpeed
      00158A 71                    5186 	ld	(hl), c
                                   5187 ;main.c:516: ySpeed = clamp(ySpeed, -100, 100);
      00158B 21r59r00              5188 	ld	hl, #_ySpeed
      00158E 4E                    5189 	ld	c, (hl)
                                   5190 ;main.c:276: return (value < min) ? min : (value > max) ? max : value;
      00158F 79                    5191 	ld	a, c
      001590 EE 80                 5192 	xor	a, #0x80
      001592 D6 1C                 5193 	sub	a, #0x1c
      001594 30 04                 5194 	jr	NC, 00169$
      001596 0E 9C                 5195 	ld	c, #0x9c
      001598 18 19                 5196 	jr	00170$
      00159A                       5197 00169$:
      00159A 59                    5198 	ld	e, c
      00159B 3E 64                 5199 	ld	a,#0x64
      00159D 57                    5200 	ld	d,a
      00159E 91                    5201 	sub	a, c
      00159F CB 7B                 5202 	bit	7, e
      0015A1 28 07                 5203 	jr	Z, 00344$
      0015A3 CB 7A                 5204 	bit	7, d
      0015A5 20 08                 5205 	jr	NZ, 00345$
      0015A7 BF                    5206 	cp	a, a
      0015A8 18 05                 5207 	jr	00345$
      0015AA                       5208 00344$:
      0015AA CB 7A                 5209 	bit	7, d
      0015AC 28 01                 5210 	jr	Z, 00345$
      0015AE 37                    5211 	scf
      0015AF                       5212 00345$:
      0015AF 30 02                 5213 	jr	NC, 00171$
      0015B1 0E 64                 5214 	ld	c, #0x64
      0015B3                       5215 00171$:
      0015B3                       5216 00170$:
      0015B3 21r59r00              5217 	ld	hl, #_ySpeed
      0015B6 71                    5218 	ld	(hl), c
                                   5219 ;main.c:518: xOverflow = 0;
      0015B7 AF                    5220 	xor	a, a
      0015B8 21r64r00              5221 	ld	hl, #_xOverflow
      0015BB 22                    5222 	ld	(hl+), a
      0015BC 77                    5223 	ld	(hl), a
                                   5224 ;main.c:519: yOverflow = 0;
      0015BD AF                    5225 	xor	a, a
      0015BE 21r66r00              5226 	ld	hl, #_yOverflow
      0015C1 22                    5227 	ld	(hl+), a
      0015C2 77                    5228 	ld	(hl), a
                                   5229 ;main.c:524: uint8_t xCollisionPoint = playerDrawX; 
      0015C3 21r5Er00              5230 	ld	hl, #_playerDrawX
      0015C6 4E                    5231 	ld	c, (hl)
                                   5232 ;main.c:527: xCollisionPoint = playerDrawX +8; //right edge
      0015C7 46                    5233 	ld	b, (hl)
                                   5234 ;main.c:526: if (xSpeed > 0) {
      0015C8 21r58r00              5235 	ld	hl, #_xSpeed
      0015CB 5E                    5236 	ld	e, (hl)
      0015CC AF                    5237 	xor	a, a
      0015CD 57                    5238 	ld	d, a
      0015CE 96                    5239 	sub	a, (hl)
      0015CF CB 7B                 5240 	bit	7, e
      0015D1 28 07                 5241 	jr	Z, 00346$
      0015D3 CB 7A                 5242 	bit	7, d
      0015D5 20 08                 5243 	jr	NZ, 00347$
      0015D7 BF                    5244 	cp	a, a
      0015D8 18 05                 5245 	jr	00347$
      0015DA                       5246 00346$:
      0015DA CB 7A                 5247 	bit	7, d
      0015DC 28 01                 5248 	jr	Z, 00347$
      0015DE 37                    5249 	scf
      0015DF                       5250 00347$:
      0015DF 30 04                 5251 	jr	NC, 00104$
                                   5252 ;main.c:527: xCollisionPoint = playerDrawX +8; //right edge
      0015E1 78                    5253 	ld	a, b
      0015E2 C6 08                 5254 	add	a, #0x08
      0015E4 4F                    5255 	ld	c, a
      0015E5                       5256 00104$:
                                   5257 ;main.c:529: if (xSpeed < 0) {
      0015E5 FAr58r00              5258 	ld	a, (#_xSpeed)
      0015E8 CB 7F                 5259 	bit	7, a
      0015EA 28 04                 5260 	jr	Z, 00106$
                                   5261 ;main.c:530: xCollisionPoint = playerDrawX -8; //left edge
      0015EC 78                    5262 	ld	a, b
      0015ED C6 F8                 5263 	add	a, #0xf8
      0015EF 4F                    5264 	ld	c, a
      0015F0                       5265 00106$:
                                   5266 ;main.c:534: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      0015F0 06 00                 5267 	ld	b, #0x00
      0015F2 79                    5268 	ld	a, c
      0015F3 21r60r00              5269 	ld	hl, #_bgX
      0015F6 86                    5270 	add	a, (hl)
      0015F7 23                    5271 	inc	hl
      0015F8 4F                    5272 	ld	c, a
      0015F9 78                    5273 	ld	a, b
      0015FA 8E                    5274 	adc	a, (hl)
      0015FB 47                    5275 	ld	b, a
      0015FC CB 28                 5276 	sra	b
      0015FE CB 19                 5277 	rr	c
      001600 CB 28                 5278 	sra	b
      001602 CB 19                 5279 	rr	c
      001604 CB 28                 5280 	sra	b
      001606 CB 19                 5281 	rr	c
      001608 11 20 00              5282 	ld	de, #0x0020
      00160B D5                    5283 	push	de
      00160C C5                    5284 	push	bc
      00160D CDr00r00              5285 	call	__modsint
      001610 E8 04                 5286 	add	sp, #4
                                   5287 ;main.c:538: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001612 21r5Fr00              5288 	ld	hl, #_playerDrawY
      001615 4E                    5289 	ld	c, (hl)
      001616 06 00                 5290 	ld	b, #0x00
      001618 79                    5291 	ld	a, c
      001619 21r62r00              5292 	ld	hl, #_bgY
      00161C 86                    5293 	add	a, (hl)
      00161D 23                    5294 	inc	hl
      00161E 4F                    5295 	ld	c, a
      00161F 78                    5296 	ld	a, b
      001620 8E                    5297 	adc	a, (hl)
      001621 47                    5298 	ld	b, a
      001622 CB 28                 5299 	sra	b
      001624 CB 19                 5300 	rr	c
      001626 CB 28                 5301 	sra	b
      001628 CB 19                 5302 	rr	c
      00162A CB 28                 5303 	sra	b
      00162C CB 19                 5304 	rr	c
      00162E D5                    5305 	push	de
      00162F 21 20 00              5306 	ld	hl, #0x0020
      001632 E5                    5307 	push	hl
      001633 C5                    5308 	push	bc
      001634 CDr00r00              5309 	call	__modsint
      001637 E8 04                 5310 	add	sp, #4
      001639 6B                    5311 	ld	l, e
                                   5312 ;	spillPairReg hl
                                   5313 ;	spillPairReg hl
                                   5314 ;	spillPairReg hl
                                   5315 ;	spillPairReg hl
      00163A D1                    5316 	pop	de
                                   5317 ;main.c:541: uint16_t ind = 32*bgindY + bgindX;
      00163B 26 00                 5318 	ld	h, #0x00
                                   5319 ;	spillPairReg hl
                                   5320 ;	spillPairReg hl
      00163D 29                    5321 	add	hl, hl
      00163E 29                    5322 	add	hl, hl
      00163F 29                    5323 	add	hl, hl
      001640 29                    5324 	add	hl, hl
      001641 29                    5325 	add	hl, hl
      001642 19                    5326 	add	hl, de
      001643 5D                    5327 	ld	e, l
      001644 54                    5328 	ld	d, h
                                   5329 ;main.c:542: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001645 0E 01                 5330 	ld	c, #0x01
                                   5331 ;main.c:543: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001647 21r87r00              5332 	ld	hl, #_background1
      00164A 19                    5333 	add	hl, de
      00164B 46                    5334 	ld	b, (hl)
      00164C 1E 00                 5335 	ld	e, #0x00
      00164E                       5336 00158$:
      00164E FAr87r07              5337 	ld	a, (#_BLANKSIZE)
      001651 F8 02                 5338 	ldhl	sp,	#2
      001653 77                    5339 	ld	(hl), a
      001654 7B                    5340 	ld	a, e
      001655 96                    5341 	sub	a, (hl)
      001656 30 11                 5342 	jr	NC, 00109$
                                   5343 ;main.c:544: if (background1[ind] == BLANK[i] ) {
      001658 21r88r07              5344 	ld	hl, #_BLANK
      00165B 16 00                 5345 	ld	d, #0x00
      00165D 19                    5346 	add	hl, de
      00165E 56                    5347 	ld	d, (hl)
      00165F 78                    5348 	ld	a, b
                                   5349 ;main.c:545: result = 0;
      001660 92                    5350 	sub	a,d
      001661 20 03                 5351 	jr	NZ, 00159$
      001663 4F                    5352 	ld	c,a
                                   5353 ;main.c:546: break;
      001664 18 03                 5354 	jr	00109$
      001666                       5355 00159$:
                                   5356 ;main.c:543: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001666 1C                    5357 	inc	e
      001667 18 E5                 5358 	jr	00158$
      001669                       5359 00109$:
                                   5360 ;main.c:550: if (result == 0) {
      001669 79                    5361 	ld	a, c
      00166A B7                    5362 	or	a, a
      00166B C2r39r17              5363 	jp	NZ, 00114$
                                   5364 ;main.c:551: playerX+=xSpeed;
      00166E FAr58r00              5365 	ld	a, (#_xSpeed)
      001671 4F                    5366 	ld	c, a
      001672 07                    5367 	rlca
      001673 9F                    5368 	sbc	a, a
      001674 47                    5369 	ld	b, a
      001675 21r5Ar00              5370 	ld	hl, #_playerX
      001678 6E                    5371 	ld	l, (hl)
                                   5372 ;	spillPairReg hl
                                   5373 ;	spillPairReg hl
      001679 FAr5Br00              5374 	ld	a, (_playerX + 1)
      00167C 67                    5375 	ld	h, a
                                   5376 ;	spillPairReg hl
                                   5377 ;	spillPairReg hl
      00167D 09                    5378 	add	hl, bc
      00167E 4D                    5379 	ld	c, l
      00167F 44                    5380 	ld	b, h
      001680 21r5Ar00              5381 	ld	hl, #_playerX
      001683 79                    5382 	ld	a, c
      001684 22                    5383 	ld	(hl+), a
                                   5384 ;main.c:553: uint16_t limitedPlayerX = u16Clamp(playerX, 58<<5, 110<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001685 78                    5385 	ld	a, b
      001686 32                    5386 	ld	(hl-), a
      001687 2A                    5387 	ld	a, (hl+)
      001688 4F                    5388 	ld	c, a
      001689 46                    5389 	ld	b, (hl)
      00168A 79                    5390 	ld	a, c
      00168B D6 40                 5391 	sub	a, #0x40
      00168D 78                    5392 	ld	a, b
      00168E DE 07                 5393 	sbc	a, #0x07
      001690 30 05                 5394 	jr	NC, 00173$
      001692 01 40 07              5395 	ld	bc, #0x0740
      001695 18 0B                 5396 	jr	00174$
      001697                       5397 00173$:
      001697 3E C0                 5398 	ld	a, #0xc0
      001699 B9                    5399 	cp	a, c
      00169A 3E 0D                 5400 	ld	a, #0x0d
      00169C 98                    5401 	sbc	a, b
      00169D 30 03                 5402 	jr	NC, 00175$
      00169F 01 C0 0D              5403 	ld	bc, #0x0dc0
      0016A2                       5404 00175$:
      0016A2                       5405 00174$:
      0016A2 59                    5406 	ld	e,c
      0016A3 50                    5407 	ld	d,b
                                   5408 ;main.c:555: xOverflow = (playerX - limitedPlayerX);
      0016A4 FAr5Ar00              5409 	ld	a, (#_playerX)
      0016A7 93                    5410 	sub	a, e
      0016A8 EAr64r00              5411 	ld	(#_xOverflow),a
      0016AB FAr5Br00              5412 	ld	a, (#_playerX + 1)
      0016AE 9A                    5413 	sbc	a, d
      0016AF 21r65r00              5414 	ld	hl, #_xOverflow + 1
                                   5415 ;main.c:556: if (xOverflow >= 0) {
      0016B2 32                    5416 	ld	(hl-), a
      0016B3 6E                    5417 	ld	l, (hl)
                                   5418 ;	spillPairReg hl
                                   5419 ;	spillPairReg hl
      0016B4 FAr65r00              5420 	ld	a, (_xOverflow + 1)
                                   5421 ;	spillPairReg hl
                                   5422 ;	spillPairReg hl
      0016B7 CB 7F                 5423 	bit	7,a
      0016B9 20 22                 5424 	jr	NZ, 00111$
                                   5425 ;main.c:557: xOverflow = xOverflow >> 5;
      0016BB 21r65r00              5426 	ld	hl, #_xOverflow + 1
      0016BE CB 2E                 5427 	sra	(hl)
      0016C0 2B                    5428 	dec	hl
      0016C1 CB 1E                 5429 	rr	(hl)
      0016C3 23                    5430 	inc	hl
      0016C4 CB 2E                 5431 	sra	(hl)
      0016C6 2B                    5432 	dec	hl
      0016C7 CB 1E                 5433 	rr	(hl)
      0016C9 23                    5434 	inc	hl
      0016CA CB 2E                 5435 	sra	(hl)
      0016CC 2B                    5436 	dec	hl
      0016CD CB 1E                 5437 	rr	(hl)
      0016CF 23                    5438 	inc	hl
      0016D0 CB 2E                 5439 	sra	(hl)
      0016D2 2B                    5440 	dec	hl
      0016D3 CB 1E                 5441 	rr	(hl)
      0016D5 23                    5442 	inc	hl
      0016D6 CB 2E                 5443 	sra	(hl)
      0016D8 2B                    5444 	dec	hl
      0016D9 CB 1E                 5445 	rr	(hl)
      0016DB 18 25                 5446 	jr	00112$
      0016DD                       5447 00111$:
                                   5448 ;main.c:560: xOverflow = -((-xOverflow) >> 5);
      0016DD AF                    5449 	xor	a, a
      0016DE 21r64r00              5450 	ld	hl, #_xOverflow
      0016E1 96                    5451 	sub	a, (hl)
      0016E2 23                    5452 	inc	hl
      0016E3 5F                    5453 	ld	e, a
      0016E4 9F                    5454 	sbc	a, a
      0016E5 96                    5455 	sub	a, (hl)
      0016E6 2B                    5456 	dec	hl
      0016E7 57                    5457 	ld	d, a
      0016E8 CB 2A                 5458 	sra	d
      0016EA CB 1B                 5459 	rr	e
      0016EC CB 2A                 5460 	sra	d
      0016EE CB 1B                 5461 	rr	e
      0016F0 CB 2A                 5462 	sra	d
      0016F2 CB 1B                 5463 	rr	e
      0016F4 CB 2A                 5464 	sra	d
      0016F6 CB 1B                 5465 	rr	e
      0016F8 CB 2A                 5466 	sra	d
      0016FA CB 1B                 5467 	rr	e
      0016FC AF                    5468 	xor	a, a
      0016FD 93                    5469 	sub	a, e
      0016FE 22                    5470 	ld	(hl+), a
      0016FF 9F                    5471 	sbc	a, a
      001700 92                    5472 	sub	a, d
      001701 77                    5473 	ld	(hl), a
      001702                       5474 00112$:
                                   5475 ;main.c:562: bgX += xOverflow;
      001702 FAr60r00              5476 	ld	a, (#_bgX)
      001705 21r64r00              5477 	ld	hl, #_xOverflow
      001708 86                    5478 	add	a, (hl)
      001709 21r60r00              5479 	ld	hl, #_bgX
      00170C 22                    5480 	ld	(hl+), a
      00170D 7E                    5481 	ld	a, (hl)
      00170E 21r65r00              5482 	ld	hl, #_xOverflow + 1
      001711 8E                    5483 	adc	a, (hl)
      001712 EAr61r00              5484 	ld	(#_bgX + 1),a
                                   5485 ;main.c:563: playerX = limitedPlayerX;
      001715 21r5Ar00              5486 	ld	hl, #_playerX
      001718 79                    5487 	ld	a, c
      001719 22                    5488 	ld	(hl+), a
                                   5489 ;main.c:564: playerDrawX=playerX >> 5;
      00171A 78                    5490 	ld	a, b
      00171B 32                    5491 	ld	(hl-), a
      00171C 2A                    5492 	ld	a, (hl+)
      00171D 4F                    5493 	ld	c, a
      00171E 46                    5494 	ld	b, (hl)
      00171F CB 38                 5495 	srl	b
      001721 CB 19                 5496 	rr	c
      001723 CB 38                 5497 	srl	b
      001725 CB 19                 5498 	rr	c
      001727 CB 38                 5499 	srl	b
      001729 CB 19                 5500 	rr	c
      00172B CB 38                 5501 	srl	b
      00172D CB 19                 5502 	rr	c
      00172F CB 38                 5503 	srl	b
      001731 CB 19                 5504 	rr	c
      001733 21r5Er00              5505 	ld	hl, #_playerDrawX
      001736 71                    5506 	ld	(hl), c
      001737 18 05                 5507 	jr	00115$
      001739                       5508 00114$:
                                   5509 ;main.c:572: xSpeed = 0;
      001739 21r58r00              5510 	ld	hl, #_xSpeed
      00173C 36 00                 5511 	ld	(hl), #0x00
      00173E                       5512 00115$:
                                   5513 ;main.c:580: uint8_t yCollisionPoint = playerDrawY; 
      00173E FAr5Fr00              5514 	ld	a, (#_playerDrawY)
      001741 F8 07                 5515 	ldhl	sp,	#7
      001743 77                    5516 	ld	(hl), a
                                   5517 ;main.c:583: yCollisionPoint = playerDrawY +8; //bottom edge
      001744 21r5Fr00              5518 	ld	hl, #_playerDrawY
      001747 4E                    5519 	ld	c, (hl)
                                   5520 ;main.c:582: if (ySpeed > 0) {
      001748 21r59r00              5521 	ld	hl, #_ySpeed
      00174B 5E                    5522 	ld	e, (hl)
      00174C AF                    5523 	xor	a, a
      00174D 57                    5524 	ld	d, a
      00174E 96                    5525 	sub	a, (hl)
      00174F CB 7B                 5526 	bit	7, e
      001751 28 07                 5527 	jr	Z, 00350$
      001753 CB 7A                 5528 	bit	7, d
      001755 20 08                 5529 	jr	NZ, 00351$
      001757 BF                    5530 	cp	a, a
      001758 18 05                 5531 	jr	00351$
      00175A                       5532 00350$:
      00175A CB 7A                 5533 	bit	7, d
      00175C 28 01                 5534 	jr	Z, 00351$
      00175E 37                    5535 	scf
      00175F                       5536 00351$:
      00175F 30 06                 5537 	jr	NC, 00117$
                                   5538 ;main.c:583: yCollisionPoint = playerDrawY +8; //bottom edge
      001761 79                    5539 	ld	a, c
      001762 C6 08                 5540 	add	a, #0x08
      001764 F8 07                 5541 	ldhl	sp,	#7
      001766 77                    5542 	ld	(hl), a
      001767                       5543 00117$:
                                   5544 ;main.c:585: if (ySpeed < 0) {
      001767 FAr59r00              5545 	ld	a, (#_ySpeed)
      00176A CB 7F                 5546 	bit	7, a
      00176C 28 06                 5547 	jr	Z, 00119$
                                   5548 ;main.c:586: yCollisionPoint = playerDrawY -8; //top edge, 
      00176E 79                    5549 	ld	a, c
      00176F C6 F8                 5550 	add	a, #0xf8
      001771 F8 07                 5551 	ldhl	sp,	#7
      001773 77                    5552 	ld	(hl), a
      001774                       5553 00119$:
                                   5554 ;main.c:590: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001774 FAr5Er00              5555 	ld	a, (#_playerDrawX)
      001777 0E 00                 5556 	ld	c, #0x00
      001779 F8 03                 5557 	ldhl	sp,	#3
      00177B 22                    5558 	ld	(hl+), a
      00177C 79                    5559 	ld	a, c
      00177D 32                    5560 	ld	(hl-), a
      00177E 2A                    5561 	ld	a, (hl+)
      00177F 5F                    5562 	ld	e, a
      001780 56                    5563 	ld	d, (hl)
      001781 21r60r00              5564 	ld	hl, #_bgX
      001784 2A                    5565 	ld	a,	(hl+)
      001785 66                    5566 	ld	h, (hl)
      001786 6F                    5567 	ld	l, a
      001787 19                    5568 	add	hl, de
      001788 E5                    5569 	push	hl
      001789 7D                    5570 	ld	a, l
      00178A F8 07                 5571 	ldhl	sp,	#7
      00178C 77                    5572 	ld	(hl), a
      00178D E1                    5573 	pop	hl
      00178E 7C                    5574 	ld	a, h
      00178F F8 06                 5575 	ldhl	sp,	#6
      001791 77                    5576 	ld	(hl), a
      001792 CB 2E                 5577 	sra	(hl)
      001794 2B                    5578 	dec	hl
      001795 CB 1E                 5579 	rr	(hl)
      001797 23                    5580 	inc	hl
      001798 CB 2E                 5581 	sra	(hl)
      00179A 2B                    5582 	dec	hl
      00179B CB 1E                 5583 	rr	(hl)
      00179D 23                    5584 	inc	hl
      00179E CB 2E                 5585 	sra	(hl)
      0017A0 2B                    5586 	dec	hl
      0017A1 CB 1E                 5587 	rr	(hl)
      0017A3 11 20 00              5588 	ld	de, #0x0020
      0017A6 D5                    5589 	push	de
      0017A7 2A                    5590 	ld	a, (hl+)
      0017A8 5F                    5591 	ld	e, a
      0017A9 56                    5592 	ld	d, (hl)
      0017AA D5                    5593 	push	de
      0017AB CDr00r00              5594 	call	__modsint
      0017AE E8 04                 5595 	add	sp, #4
      0017B0 F8 05                 5596 	ldhl	sp,	#5
      0017B2 7B                    5597 	ld	a, e
      0017B3 22                    5598 	ld	(hl+), a
      0017B4 72                    5599 	ld	(hl), d
      0017B5 F8 05                 5600 	ldhl	sp,	#5
      0017B7 7E                    5601 	ld	a, (hl)
      0017B8 F8 00                 5602 	ldhl	sp,	#0
      0017BA 77                    5603 	ld	(hl), a
      0017BB F8 06                 5604 	ldhl	sp,	#6
      0017BD 7E                    5605 	ld	a, (hl)
      0017BE F8 01                 5606 	ldhl	sp,	#1
      0017C0 77                    5607 	ld	(hl), a
                                   5608 ;main.c:593: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      0017C1 F8 07                 5609 	ldhl	sp,	#7
      0017C3 3A                    5610 	ld	a, (hl-)
      0017C4 22                    5611 	ld	(hl+), a
      0017C5 AF                    5612 	xor	a, a
      0017C6 32                    5613 	ld	(hl-), a
      0017C7 3A                    5614 	ld	a, (hl-)
      0017C8 2B                    5615 	dec	hl
      0017C9 77                    5616 	ld	(hl), a
      0017CA F8 07                 5617 	ldhl	sp,	#7
      0017CC 3A                    5618 	ld	a, (hl-)
      0017CD 2B                    5619 	dec	hl
      0017CE 32                    5620 	ld	(hl-), a
      0017CF 2A                    5621 	ld	a, (hl+)
      0017D0 5F                    5622 	ld	e, a
      0017D1 56                    5623 	ld	d, (hl)
      0017D2 21r62r00              5624 	ld	hl, #_bgY
      0017D5 2A                    5625 	ld	a,	(hl+)
      0017D6 66                    5626 	ld	h, (hl)
      0017D7 6F                    5627 	ld	l, a
      0017D8 19                    5628 	add	hl, de
      0017D9 E5                    5629 	push	hl
      0017DA 7D                    5630 	ld	a, l
      0017DB F8 08                 5631 	ldhl	sp,	#8
      0017DD 77                    5632 	ld	(hl), a
      0017DE E1                    5633 	pop	hl
      0017DF 7C                    5634 	ld	a, h
      0017E0 F8 07                 5635 	ldhl	sp,	#7
      0017E2 77                    5636 	ld	(hl), a
      0017E3 CB 2E                 5637 	sra	(hl)
      0017E5 2B                    5638 	dec	hl
      0017E6 CB 1E                 5639 	rr	(hl)
      0017E8 23                    5640 	inc	hl
      0017E9 CB 2E                 5641 	sra	(hl)
      0017EB 2B                    5642 	dec	hl
      0017EC CB 1E                 5643 	rr	(hl)
      0017EE 23                    5644 	inc	hl
      0017EF CB 2E                 5645 	sra	(hl)
      0017F1 2B                    5646 	dec	hl
      0017F2 CB 1E                 5647 	rr	(hl)
      0017F4 11 20 00              5648 	ld	de, #0x0020
      0017F7 D5                    5649 	push	de
      0017F8 2A                    5650 	ld	a, (hl+)
      0017F9 5F                    5651 	ld	e, a
      0017FA 56                    5652 	ld	d, (hl)
      0017FB D5                    5653 	push	de
      0017FC CDr00r00              5654 	call	__modsint
      0017FF E8 04                 5655 	add	sp, #4
      001801 F8 06                 5656 	ldhl	sp,	#6
      001803 7B                    5657 	ld	a, e
      001804 22                    5658 	ld	(hl+), a
      001805 72                    5659 	ld	(hl), d
      001806 F8 06                 5660 	ldhl	sp,	#6
      001808 2A                    5661 	ld	a, (hl+)
      001809 77                    5662 	ld	(hl), a
                                   5663 ;main.c:596: ind = 32*bgindY + bgindX;
      00180A 3A                    5664 	ld	a, (hl-)
      00180B 22                    5665 	ld	(hl+), a
      00180C 36 00                 5666 	ld	(hl), #0x00
      00180E 3E 05                 5667 	ld	a, #0x05
      001810                       5668 00352$:
      001810 F8 06                 5669 	ldhl	sp,	#6
      001812 CB 26                 5670 	sla	(hl)
      001814 23                    5671 	inc	hl
      001815 CB 16                 5672 	rl	(hl)
      001817 3D                    5673 	dec	a
      001818 20 F6                 5674 	jr	NZ, 00352$
      00181A 2B                    5675 	dec	hl
      00181B 3A                    5676 	ld	a, (hl-)
      00181C 2B                    5677 	dec	hl
      00181D 77                    5678 	ld	(hl), a
      00181E F8 07                 5679 	ldhl	sp,	#7
      001820 3A                    5680 	ld	a, (hl-)
      001821 2B                    5681 	dec	hl
      001822 77                    5682 	ld	(hl), a
      001823 D1                    5683 	pop	de
      001824 D5                    5684 	push	de
      001825 3A                    5685 	ld	a, (hl-)
      001826 6E                    5686 	ld	l, (hl)
      001827 67                    5687 	ld	h, a
      001828 19                    5688 	add	hl, de
      001829 E5                    5689 	push	hl
      00182A 7D                    5690 	ld	a, l
      00182B F8 08                 5691 	ldhl	sp,	#8
      00182D 77                    5692 	ld	(hl), a
      00182E E1                    5693 	pop	hl
      00182F 7C                    5694 	ld	a, h
      001830 F8 07                 5695 	ldhl	sp,	#7
      001832 77                    5696 	ld	(hl), a
                                   5697 ;main.c:597: result = 1;
      001833 F8 03                 5698 	ldhl	sp,	#3
      001835 36 01                 5699 	ld	(hl), #0x01
                                   5700 ;main.c:598: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001837 F8 06                 5701 	ldhl	sp,#6
      001839 2A                    5702 	ld	a, (hl+)
      00183A 5F                    5703 	ld	e, a
      00183B 56                    5704 	ld	d, (hl)
      00183C 21r87r00              5705 	ld	hl, #_background1
      00183F 19                    5706 	add	hl, de
      001840 4D                    5707 	ld	c, l
      001841 44                    5708 	ld	b, h
      001842 0A                    5709 	ld	a, (bc)
      001843 F8 04                 5710 	ldhl	sp,	#4
      001845 77                    5711 	ld	(hl), a
      001846 F8 07                 5712 	ldhl	sp,	#7
      001848 36 00                 5713 	ld	(hl), #0x00
      00184A                       5714 00161$:
      00184A F8 07                 5715 	ldhl	sp,	#7
      00184C 7E                    5716 	ld	a, (hl)
      00184D F8 02                 5717 	ldhl	sp,	#2
      00184F 96                    5718 	sub	a, (hl)
      001850 30 29                 5719 	jr	NC, 00122$
                                   5720 ;main.c:599: if (background1[ind] == BLANK[j] ) {
      001852 11r88r07              5721 	ld	de, #_BLANK
      001855 F8 07                 5722 	ldhl	sp,	#7
      001857 6E                    5723 	ld	l, (hl)
      001858 26 00                 5724 	ld	h, #0x00
      00185A 19                    5725 	add	hl, de
      00185B E5                    5726 	push	hl
      00185C 7D                    5727 	ld	a, l
      00185D F8 07                 5728 	ldhl	sp,	#7
      00185F 77                    5729 	ld	(hl), a
      001860 E1                    5730 	pop	hl
      001861 7C                    5731 	ld	a, h
      001862 F8 06                 5732 	ldhl	sp,	#6
      001864 32                    5733 	ld	(hl-), a
      001865 2A                    5734 	ld	a, (hl+)
      001866 5F                    5735 	ld	e, a
      001867 3A                    5736 	ld	a, (hl-)
      001868 2B                    5737 	dec	hl
      001869 57                    5738 	ld	d, a
      00186A 1A                    5739 	ld	a, (de)
      00186B 4F                    5740 	ld	c, a
      00186C 7E                    5741 	ld	a, (hl)
      00186D 91                    5742 	sub	a, c
      00186E 20 06                 5743 	jr	NZ, 00162$
                                   5744 ;main.c:600: result = 0;
      001870 F8 03                 5745 	ldhl	sp,	#3
      001872 36 00                 5746 	ld	(hl), #0x00
                                   5747 ;main.c:601: break;
      001874 18 05                 5748 	jr	00122$
      001876                       5749 00162$:
                                   5750 ;main.c:598: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001876 F8 07                 5751 	ldhl	sp,	#7
      001878 34                    5752 	inc	(hl)
      001879 18 CF                 5753 	jr	00161$
      00187B                       5754 00122$:
                                   5755 ;main.c:604: if (result == 0) {
      00187B F8 03                 5756 	ldhl	sp,	#3
      00187D 7E                    5757 	ld	a, (hl)
      00187E B7                    5758 	or	a, a
      00187F C2r4Cr19              5759 	jp	NZ, 00127$
                                   5760 ;main.c:605: playerY += ySpeed;
      001882 FAr59r00              5761 	ld	a, (#_ySpeed)
      001885 4F                    5762 	ld	c, a
      001886 07                    5763 	rlca
      001887 9F                    5764 	sbc	a, a
      001888 21r5Cr00              5765 	ld	hl, #_playerY
      00188B 5E                    5766 	ld	e, (hl)
      00188C 23                    5767 	inc	hl
      00188D 56                    5768 	ld	d, (hl)
      00188E 2B                    5769 	dec	hl
      00188F 47                    5770 	ld	b, a
      001890 79                    5771 	ld	a, c
      001891 83                    5772 	add	a, e
      001892 4F                    5773 	ld	c, a
      001893 78                    5774 	ld	a, b
      001894 8A                    5775 	adc	a, d
      001895 47                    5776 	ld	b, a
      001896 79                    5777 	ld	a, c
      001897 22                    5778 	ld	(hl+), a
                                   5779 ;main.c:607: uint16_t limitedPlayerY = u16Clamp(playerY, 61<<5, 107<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001898 78                    5780 	ld	a, b
      001899 32                    5781 	ld	(hl-), a
      00189A 2A                    5782 	ld	a, (hl+)
      00189B 5F                    5783 	ld	e, a
      00189C 56                    5784 	ld	d, (hl)
      00189D 7B                    5785 	ld	a, e
      00189E D6 A0                 5786 	sub	a, #0xa0
      0018A0 7A                    5787 	ld	a, d
      0018A1 DE 07                 5788 	sbc	a, #0x07
      0018A3 30 05                 5789 	jr	NC, 00177$
      0018A5 11 A0 07              5790 	ld	de, #0x07a0
      0018A8 18 0B                 5791 	jr	00178$
      0018AA                       5792 00177$:
      0018AA 3E 60                 5793 	ld	a, #0x60
      0018AC BB                    5794 	cp	a, e
      0018AD 3E 0D                 5795 	ld	a, #0x0d
      0018AF 9A                    5796 	sbc	a, d
      0018B0 30 03                 5797 	jr	NC, 00179$
      0018B2 11 60 0D              5798 	ld	de, #0x0d60
      0018B5                       5799 00179$:
      0018B5                       5800 00178$:
      0018B5 4B                    5801 	ld	c, e
      0018B6 42                    5802 	ld	b, d
                                   5803 ;main.c:609: yOverflow = (playerY - limitedPlayerY);
      0018B7 FAr5Cr00              5804 	ld	a, (#_playerY)
      0018BA 93                    5805 	sub	a, e
      0018BB EAr66r00              5806 	ld	(#_yOverflow),a
      0018BE FAr5Dr00              5807 	ld	a, (#_playerY + 1)
      0018C1 9A                    5808 	sbc	a, d
      0018C2 21r67r00              5809 	ld	hl, #_yOverflow + 1
                                   5810 ;main.c:610: if (yOverflow >= 0) {
      0018C5 32                    5811 	ld	(hl-), a
      0018C6 6E                    5812 	ld	l, (hl)
                                   5813 ;	spillPairReg hl
                                   5814 ;	spillPairReg hl
      0018C7 FAr67r00              5815 	ld	a, (_yOverflow + 1)
                                   5816 ;	spillPairReg hl
                                   5817 ;	spillPairReg hl
      0018CA CB 7F                 5818 	bit	7,a
      0018CC 20 22                 5819 	jr	NZ, 00124$
                                   5820 ;main.c:611: yOverflow = yOverflow >> 5;
      0018CE 21r67r00              5821 	ld	hl, #_yOverflow + 1
      0018D1 CB 2E                 5822 	sra	(hl)
      0018D3 2B                    5823 	dec	hl
      0018D4 CB 1E                 5824 	rr	(hl)
      0018D6 23                    5825 	inc	hl
      0018D7 CB 2E                 5826 	sra	(hl)
      0018D9 2B                    5827 	dec	hl
      0018DA CB 1E                 5828 	rr	(hl)
      0018DC 23                    5829 	inc	hl
      0018DD CB 2E                 5830 	sra	(hl)
      0018DF 2B                    5831 	dec	hl
      0018E0 CB 1E                 5832 	rr	(hl)
      0018E2 23                    5833 	inc	hl
      0018E3 CB 2E                 5834 	sra	(hl)
      0018E5 2B                    5835 	dec	hl
      0018E6 CB 1E                 5836 	rr	(hl)
      0018E8 23                    5837 	inc	hl
      0018E9 CB 2E                 5838 	sra	(hl)
      0018EB 2B                    5839 	dec	hl
      0018EC CB 1E                 5840 	rr	(hl)
      0018EE 18 25                 5841 	jr	00125$
      0018F0                       5842 00124$:
                                   5843 ;main.c:614: yOverflow = -((-yOverflow) >> 5);
      0018F0 AF                    5844 	xor	a, a
      0018F1 21r66r00              5845 	ld	hl, #_yOverflow
      0018F4 96                    5846 	sub	a, (hl)
      0018F5 23                    5847 	inc	hl
      0018F6 5F                    5848 	ld	e, a
      0018F7 9F                    5849 	sbc	a, a
      0018F8 96                    5850 	sub	a, (hl)
      0018F9 2B                    5851 	dec	hl
      0018FA 57                    5852 	ld	d, a
      0018FB CB 2A                 5853 	sra	d
      0018FD CB 1B                 5854 	rr	e
      0018FF CB 2A                 5855 	sra	d
      001901 CB 1B                 5856 	rr	e
      001903 CB 2A                 5857 	sra	d
      001905 CB 1B                 5858 	rr	e
      001907 CB 2A                 5859 	sra	d
      001909 CB 1B                 5860 	rr	e
      00190B CB 2A                 5861 	sra	d
      00190D CB 1B                 5862 	rr	e
      00190F AF                    5863 	xor	a, a
      001910 93                    5864 	sub	a, e
      001911 22                    5865 	ld	(hl+), a
      001912 9F                    5866 	sbc	a, a
      001913 92                    5867 	sub	a, d
      001914 77                    5868 	ld	(hl), a
      001915                       5869 00125$:
                                   5870 ;main.c:616: bgY += yOverflow;
      001915 FAr62r00              5871 	ld	a, (#_bgY)
      001918 21r66r00              5872 	ld	hl, #_yOverflow
      00191B 86                    5873 	add	a, (hl)
      00191C 21r62r00              5874 	ld	hl, #_bgY
      00191F 22                    5875 	ld	(hl+), a
      001920 7E                    5876 	ld	a, (hl)
      001921 21r67r00              5877 	ld	hl, #_yOverflow + 1
      001924 8E                    5878 	adc	a, (hl)
      001925 EAr63r00              5879 	ld	(#_bgY + 1),a
                                   5880 ;main.c:617: playerY = limitedPlayerY;
      001928 21r5Cr00              5881 	ld	hl, #_playerY
      00192B 79                    5882 	ld	a, c
      00192C 22                    5883 	ld	(hl+), a
                                   5884 ;main.c:618: playerDrawY=playerY >> 5;
      00192D 78                    5885 	ld	a, b
      00192E 32                    5886 	ld	(hl-), a
      00192F 2A                    5887 	ld	a, (hl+)
      001930 4F                    5888 	ld	c, a
      001931 46                    5889 	ld	b, (hl)
      001932 CB 38                 5890 	srl	b
      001934 CB 19                 5891 	rr	c
      001936 CB 38                 5892 	srl	b
      001938 CB 19                 5893 	rr	c
      00193A CB 38                 5894 	srl	b
      00193C CB 19                 5895 	rr	c
      00193E CB 38                 5896 	srl	b
      001940 CB 19                 5897 	rr	c
      001942 CB 38                 5898 	srl	b
      001944 CB 19                 5899 	rr	c
      001946 21r5Fr00              5900 	ld	hl, #_playerDrawY
      001949 71                    5901 	ld	(hl), c
      00194A 18 05                 5902 	jr	00128$
      00194C                       5903 00127$:
                                   5904 ;main.c:623: ySpeed = 0;
      00194C 21r59r00              5905 	ld	hl, #_ySpeed
      00194F 36 00                 5906 	ld	(hl), #0x00
      001951                       5907 00128$:
                                   5908 ;main.c:524: uint8_t xCollisionPoint = playerDrawX; 
      001951 FAr5Er00              5909 	ld	a, (#_playerDrawX)
      001954 F8 07                 5910 	ldhl	sp,	#7
      001956 77                    5911 	ld	(hl), a
                                   5912 ;main.c:583: yCollisionPoint = playerDrawY +8; //bottom edge
      001957 FAr5Fr00              5913 	ld	a, (#_playerDrawY)
      00195A C6 08                 5914 	add	a, #0x08
      00195C F8 06                 5915 	ldhl	sp,	#6
      00195E 77                    5916 	ld	(hl), a
                                   5917 ;main.c:626: if (xDir >= 0) {
      00195F FAr56r00              5918 	ld	a, (#_xDir)
      001962 CB 7F                 5919 	bit	7, a
      001964 20 2A                 5920 	jr	NZ, 00130$
                                   5921 ;main.c:627: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   5922 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   5923 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001966 11r00r00              5924 	ld	de, #_shadow_OAM
      001969 F8 06                 5925 	ldhl	sp,	#6
      00196B 2A                    5926 	ld	a, (hl+)
      00196C 12                    5927 	ld	(de), a
      00196D 11r01r00              5928 	ld	de, #(_shadow_OAM + 1)
      001970 7E                    5929 	ld	a, (hl)
      001971 12                    5930 	ld	(de), a
                                   5931 ;main.c:629: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001972 FAr5Fr00              5932 	ld	a, (#_playerDrawY)
      001975 F8 07                 5933 	ldhl	sp,	#7
      001977 77                    5934 	ld	(hl), a
      001978 3A                    5935 	ld	a, (hl-)
      001979 C6 08                 5936 	add	a, #0x08
      00197B 77                    5937 	ld	(hl), a
      00197C FAr5Er00              5938 	ld	a, (#_playerDrawX)
      00197F C6 08                 5939 	add	a, #0x08
      001981 F8 07                 5940 	ldhl	sp,	#7
                                   5941 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   5942 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001983 32                    5943 	ld	(hl-), a
      001984 11r04r00              5944 	ld	de, #(_shadow_OAM + 4)
      001987 2A                    5945 	ld	a, (hl+)
      001988 12                    5946 	ld	(de), a
      001989 11r05r00              5947 	ld	de, #(_shadow_OAM + 5)
      00198C 7E                    5948 	ld	a, (hl)
      00198D 12                    5949 	ld	(de), a
                                   5950 ;main.c:629: move_sprite(1, playerDrawX +8, playerDrawY +8);
      00198E 18 28                 5951 	jr	00131$
      001990                       5952 00130$:
                                   5953 ;main.c:632: move_sprite(1, playerDrawX , playerDrawY +8);
                                   5954 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001990 01r04r00              5955 	ld	bc, #(_shadow_OAM + 4)
                                   5956 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001993 F8 06                 5957 	ldhl	sp,	#6
      001995 2A                    5958 	ld	a, (hl+)
      001996 02                    5959 	ld	(bc), a
      001997 03                    5960 	inc	bc
      001998 7E                    5961 	ld	a, (hl)
      001999 02                    5962 	ld	(bc), a
                                   5963 ;main.c:634: move_sprite(0, playerDrawX +8, playerDrawY +8);
      00199A FAr5Fr00              5964 	ld	a, (#_playerDrawY)
      00199D F8 07                 5965 	ldhl	sp,	#7
      00199F 77                    5966 	ld	(hl), a
      0019A0 3A                    5967 	ld	a, (hl-)
      0019A1 C6 08                 5968 	add	a, #0x08
      0019A3 77                    5969 	ld	(hl), a
      0019A4 FAr5Er00              5970 	ld	a, (#_playerDrawX)
      0019A7 F8 07                 5971 	ldhl	sp,	#7
      0019A9 77                    5972 	ld	(hl), a
      0019AA 7E                    5973 	ld	a, (hl)
      0019AB C6 08                 5974 	add	a, #0x08
                                   5975 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   5976 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0019AD 32                    5977 	ld	(hl-), a
      0019AE 11r00r00              5978 	ld	de, #_shadow_OAM
      0019B1 2A                    5979 	ld	a, (hl+)
      0019B2 12                    5980 	ld	(de), a
      0019B3 11r01r00              5981 	ld	de, #(_shadow_OAM + 1)
      0019B6 7E                    5982 	ld	a, (hl)
      0019B7 12                    5983 	ld	(de), a
                                   5984 ;main.c:634: move_sprite(0, playerDrawX +8, playerDrawY +8);
      0019B8                       5985 00131$:
                                   5986 ;main.c:639: if (bgX >= 256) {
      0019B8 21r60r00              5987 	ld	hl, #_bgX
      0019BB 2A                    5988 	ld	a, (hl+)
      0019BC 4F                    5989 	ld	c, a
      0019BD 46                    5990 	ld	b, (hl)
      0019BE 78                    5991 	ld	a, b
      0019BF EE 80                 5992 	xor	a, #0x80
      0019C1 D6 81                 5993 	sub	a, #0x81
      0019C3 38 0F                 5994 	jr	C, 00133$
                                   5995 ;main.c:640: bgX = bgX % 256;
      0019C5 AF                    5996 	xor	a, a
      0019C6 3C                    5997 	inc	a
      0019C7 F5                    5998 	push	af
      0019C8 C5                    5999 	push	bc
      0019C9 CDr00r00              6000 	call	__modsint
      0019CC E8 04                 6001 	add	sp, #4
      0019CE 21r60r00              6002 	ld	hl, #_bgX
      0019D1 7B                    6003 	ld	a, e
      0019D2 22                    6004 	ld	(hl+), a
      0019D3 72                    6005 	ld	(hl), d
      0019D4                       6006 00133$:
                                   6007 ;main.c:642: if (bgX < 0) {
      0019D4 21r60r00              6008 	ld	hl, #_bgX
      0019D7 2A                    6009 	ld	a, (hl+)
      0019D8 4F                    6010 	ld	c, a
      0019D9 46                    6011 	ld	b, (hl)
      0019DA CB 78                 6012 	bit	7, b
      0019DC 28 15                 6013 	jr	Z, 00135$
                                   6014 ;main.c:643: bgX = 255 - (bgX % 256);
      0019DE AF                    6015 	xor	a, a
      0019DF 3C                    6016 	inc	a
      0019E0 F5                    6017 	push	af
      0019E1 C5                    6018 	push	bc
      0019E2 CDr00r00              6019 	call	__modsint
      0019E5 E8 04                 6020 	add	sp, #4
      0019E7 3E FF                 6021 	ld	a, #0xff
      0019E9 93                    6022 	sub	a, e
      0019EA 4F                    6023 	ld	c, a
      0019EB 9F                    6024 	sbc	a, a
      0019EC 92                    6025 	sub	a, d
      0019ED 21r60r00              6026 	ld	hl, #_bgX
      0019F0 71                    6027 	ld	(hl), c
      0019F1 23                    6028 	inc	hl
      0019F2 77                    6029 	ld	(hl), a
      0019F3                       6030 00135$:
                                   6031 ;main.c:645: if (bgY >= 256) {
      0019F3 21r62r00              6032 	ld	hl, #_bgY
      0019F6 2A                    6033 	ld	a, (hl+)
      0019F7 4F                    6034 	ld	c, a
      0019F8 46                    6035 	ld	b, (hl)
      0019F9 78                    6036 	ld	a, b
      0019FA EE 80                 6037 	xor	a, #0x80
      0019FC D6 81                 6038 	sub	a, #0x81
      0019FE 38 0F                 6039 	jr	C, 00137$
                                   6040 ;main.c:646: bgY = bgY % 256;
      001A00 AF                    6041 	xor	a, a
      001A01 3C                    6042 	inc	a
      001A02 F5                    6043 	push	af
      001A03 C5                    6044 	push	bc
      001A04 CDr00r00              6045 	call	__modsint
      001A07 E8 04                 6046 	add	sp, #4
      001A09 21r62r00              6047 	ld	hl, #_bgY
      001A0C 7B                    6048 	ld	a, e
      001A0D 22                    6049 	ld	(hl+), a
      001A0E 72                    6050 	ld	(hl), d
      001A0F                       6051 00137$:
                                   6052 ;main.c:648: if (bgY < 0) {
      001A0F 21r62r00              6053 	ld	hl, #_bgY
      001A12 2A                    6054 	ld	a, (hl+)
      001A13 4F                    6055 	ld	c, a
      001A14 46                    6056 	ld	b, (hl)
      001A15 CB 78                 6057 	bit	7, b
      001A17 28 15                 6058 	jr	Z, 00139$
                                   6059 ;main.c:649: bgY = 255 - (bgY % 256);
      001A19 AF                    6060 	xor	a, a
      001A1A 3C                    6061 	inc	a
      001A1B F5                    6062 	push	af
      001A1C C5                    6063 	push	bc
      001A1D CDr00r00              6064 	call	__modsint
      001A20 E8 04                 6065 	add	sp, #4
      001A22 3E FF                 6066 	ld	a, #0xff
      001A24 93                    6067 	sub	a, e
      001A25 4F                    6068 	ld	c, a
      001A26 9F                    6069 	sbc	a, a
      001A27 92                    6070 	sub	a, d
      001A28 21r62r00              6071 	ld	hl, #_bgY
      001A2B 71                    6072 	ld	(hl), c
      001A2C 23                    6073 	inc	hl
      001A2D 77                    6074 	ld	(hl), a
      001A2E                       6075 00139$:
                                   6076 ;main.c:652: move_bkg(bgX, bgY);
      001A2E 21r62r00              6077 	ld	hl, #_bgY
      001A31 4E                    6078 	ld	c, (hl)
      001A32 FAr60r00              6079 	ld	a, (#_bgX)
      001A35 E0r00                 6080 	ldh	(_SCX_REG + 0), a
                                   6081 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001A37 79                    6082 	ld	a, c
      001A38 E0r00                 6083 	ldh	(_SCY_REG + 0), a
                                   6084 ;main.c:655: if (ySpeed > 0) ySpeed--;
      001A3A 21r59r00              6085 	ld	hl, #_ySpeed
      001A3D 5E                    6086 	ld	e, (hl)
      001A3E AF                    6087 	xor	a, a
      001A3F 57                    6088 	ld	d, a
      001A40 96                    6089 	sub	a, (hl)
      001A41 CB 7B                 6090 	bit	7, e
      001A43 28 07                 6091 	jr	Z, 00355$
      001A45 CB 7A                 6092 	bit	7, d
      001A47 20 08                 6093 	jr	NZ, 00356$
      001A49 BF                    6094 	cp	a, a
      001A4A 18 05                 6095 	jr	00356$
      001A4C                       6096 00355$:
      001A4C CB 7A                 6097 	bit	7, d
      001A4E 28 01                 6098 	jr	Z, 00356$
      001A50 37                    6099 	scf
      001A51                       6100 00356$:
      001A51 30 04                 6101 	jr	NC, 00141$
      001A53 21r59r00              6102 	ld	hl, #_ySpeed
      001A56 35                    6103 	dec	(hl)
      001A57                       6104 00141$:
                                   6105 ;main.c:656: if (ySpeed < 0) ySpeed++;
      001A57 21r59r00              6106 	ld	hl, #_ySpeed
      001A5A CB 7E                 6107 	bit	7, (hl)
      001A5C 28 01                 6108 	jr	Z, 00143$
      001A5E 34                    6109 	inc	(hl)
      001A5F                       6110 00143$:
                                   6111 ;main.c:657: if (xSpeed > 0) xSpeed--;
      001A5F 21r58r00              6112 	ld	hl, #_xSpeed
      001A62 5E                    6113 	ld	e, (hl)
      001A63 AF                    6114 	xor	a, a
      001A64 57                    6115 	ld	d, a
      001A65 96                    6116 	sub	a, (hl)
      001A66 CB 7B                 6117 	bit	7, e
      001A68 28 07                 6118 	jr	Z, 00357$
      001A6A CB 7A                 6119 	bit	7, d
      001A6C 20 08                 6120 	jr	NZ, 00358$
      001A6E BF                    6121 	cp	a, a
      001A6F 18 05                 6122 	jr	00358$
      001A71                       6123 00357$:
      001A71 CB 7A                 6124 	bit	7, d
      001A73 28 01                 6125 	jr	Z, 00358$
      001A75 37                    6126 	scf
      001A76                       6127 00358$:
      001A76 30 04                 6128 	jr	NC, 00145$
      001A78 21r58r00              6129 	ld	hl, #_xSpeed
      001A7B 35                    6130 	dec	(hl)
      001A7C                       6131 00145$:
                                   6132 ;main.c:658: if (xSpeed < 0) xSpeed++;
      001A7C 21r58r00              6133 	ld	hl, #_xSpeed
      001A7F CB 7E                 6134 	bit	7, (hl)
      001A81 28 01                 6135 	jr	Z, 00163$
      001A83 34                    6136 	inc	(hl)
      001A84                       6137 00163$:
                                   6138 ;main.c:662: }
      001A84 E8 08                 6139 	add	sp, #8
      001A86 C9                    6140 	ret
                                   6141 ;main.c:664: void takeDamage(int16_t amount) {
                                   6142 ;	---------------------------------
                                   6143 ; Function takeDamage
                                   6144 ; ---------------------------------
      001A87                       6145 _takeDamage::
      001A87 3B                    6146 	dec	sp
                                   6147 ;main.c:665: if (amount > shield) {
      001A88 FAr8Er00              6148 	ld	a, (#_shield)
      001A8B 4F                    6149 	ld	c, a
      001A8C 07                    6150 	rlca
      001A8D 9F                    6151 	sbc	a, a
      001A8E 47                    6152 	ld	b, a
                                   6153 ;main.c:667: hull -= (amount - shield);
      001A8F F8 03                 6154 	ldhl	sp,	#3
      001A91 7E                    6155 	ld	a, (hl)
      001A92 F8 00                 6156 	ldhl	sp,	#0
      001A94 77                    6157 	ld	(hl), a
                                   6158 ;main.c:665: if (amount > shield) {
      001A95 F8 03                 6159 	ldhl	sp,	#3
      001A97 79                    6160 	ld	a, c
      001A98 96                    6161 	sub	a, (hl)
      001A99 23                    6162 	inc	hl
      001A9A 78                    6163 	ld	a, b
      001A9B 9E                    6164 	sbc	a, (hl)
      001A9C 78                    6165 	ld	a, b
      001A9D 57                    6166 	ld	d, a
      001A9E CB 7E                 6167 	bit	7, (hl)
      001AA0 28 07                 6168 	jr	Z, 00111$
      001AA2 CB 7A                 6169 	bit	7, d
      001AA4 20 08                 6170 	jr	NZ, 00112$
      001AA6 BF                    6171 	cp	a, a
      001AA7 18 05                 6172 	jr	00112$
      001AA9                       6173 00111$:
      001AA9 CB 7A                 6174 	bit	7, d
      001AAB 28 01                 6175 	jr	Z, 00112$
      001AAD 37                    6176 	scf
      001AAE                       6177 00112$:
      001AAE 30 10                 6178 	jr	NC, 00102$
                                   6179 ;main.c:666: shield = 0;
      001AB0 21r8Er00              6180 	ld	hl, #_shield
      001AB3 36 00                 6181 	ld	(hl), #0x00
                                   6182 ;main.c:667: hull -= (amount - shield);
      001AB5 FAr8Dr00              6183 	ld	a, (#_hull)
      001AB8 F8 00                 6184 	ldhl	sp,	#0
      001ABA 96                    6185 	sub	a, (hl)
      001ABB EAr8Dr00              6186 	ld	(#_hull),a
      001ABE 18 09                 6187 	jr	00104$
      001AC0                       6188 00102$:
                                   6189 ;main.c:670: shield -= amount;
      001AC0 FAr8Er00              6190 	ld	a, (#_shield)
      001AC3 F8 00                 6191 	ldhl	sp,	#0
      001AC5 96                    6192 	sub	a, (hl)
      001AC6 EAr8Er00              6193 	ld	(#_shield),a
      001AC9                       6194 00104$:
                                   6195 ;main.c:672: }
      001AC9 33                    6196 	inc	sp
      001ACA C9                    6197 	ret
                                   6198 ;main.c:674: void checkCollision() {
                                   6199 ;	---------------------------------
                                   6200 ; Function checkCollision
                                   6201 ; ---------------------------------
      001ACB                       6202 _checkCollision::
      001ACB E8 F1                 6203 	add	sp, #-15
                                   6204 ;main.c:681: struct Enemy *eptr = enemies + enemyCollisionCount;
      001ACD 01r00r00              6205 	ld	bc, #_enemies+0
      001AD0 21r68r00              6206 	ld	hl, #_enemyCollisionCount
      001AD3 6E                    6207 	ld	l, (hl)
                                   6208 ;	spillPairReg hl
                                   6209 ;	spillPairReg hl
      001AD4 26 00                 6210 	ld	h, #0x00
                                   6211 ;	spillPairReg hl
                                   6212 ;	spillPairReg hl
      001AD6 29                    6213 	add	hl, hl
      001AD7 29                    6214 	add	hl, hl
      001AD8 29                    6215 	add	hl, hl
      001AD9 29                    6216 	add	hl, hl
      001ADA 09                    6217 	add	hl, bc
      001ADB 4D                    6218 	ld	c, l
      001ADC 7C                    6219 	ld	a, h
      001ADD F8 00                 6220 	ldhl	sp,	#0
      001ADF 71                    6221 	ld	(hl), c
      001AE0 23                    6222 	inc	hl
      001AE1 77                    6223 	ld	(hl), a
                                   6224 ;main.c:682: uint8_t i = enemyCollisionCount;
      001AE2 FAr68r00              6225 	ld	a, (#_enemyCollisionCount)
      001AE5 F8 02                 6226 	ldhl	sp,	#2
      001AE7 77                    6227 	ld	(hl), a
                                   6228 ;main.c:684: if (eptr->visible && eptr->alive) {
      001AE8 D1                    6229 	pop	de
      001AE9 D5                    6230 	push	de
      001AEA 21 0A 00              6231 	ld	hl, #0x000a
      001AED 19                    6232 	add	hl, de
      001AEE 4D                    6233 	ld	c, l
      001AEF 44                    6234 	ld	b, h
      001AF0 0A                    6235 	ld	a, (bc)
      001AF1 B7                    6236 	or	a, a
      001AF2 CAr06r1E              6237 	jp	Z, 00127$
      001AF5 D1                    6238 	pop	de
      001AF6 D5                    6239 	push	de
      001AF7 21 09 00              6240 	ld	hl, #0x0009
      001AFA 19                    6241 	add	hl, de
      001AFB 4D                    6242 	ld	c, l
      001AFC 44                    6243 	ld	b, h
      001AFD 0A                    6244 	ld	a, (bc)
      001AFE B7                    6245 	or	a, a
      001AFF CAr06r1E              6246 	jp	Z, 00127$
                                   6247 ;main.c:686: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001B02 D1                    6248 	pop	de
      001B03 D5                    6249 	push	de
      001B04 21 08 00              6250 	ld	hl, #0x0008
      001B07 19                    6251 	add	hl, de
      001B08 4D                    6252 	ld	c, l
      001B09 44                    6253 	ld	b, h
      001B0A 0A                    6254 	ld	a, (bc)
      001B0B 4F                    6255 	ld	c, a
      001B0C 3D                    6256 	dec	a
      001B0D 3E 01                 6257 	ld	a, #0x01
      001B0F 28 01                 6258 	jr	Z, 00283$
      001B11 AF                    6259 	xor	a, a
      001B12                       6260 00283$:
      001B12 F8 0B                 6261 	ldhl	sp,	#11
      001B14 77                    6262 	ld	(hl), a
      001B15 FAr5Er00              6263 	ld	a, (#_playerDrawX)
      001B18 F8 0C                 6264 	ldhl	sp,	#12
      001B1A 77                    6265 	ld	(hl), a
                                   6266 ;main.c:687: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001B1B 79                    6267 	ld	a, c
      001B1C D6 02                 6268 	sub	a, #0x02
      001B1E 3E 01                 6269 	ld	a, #0x01
      001B20 28 01                 6270 	jr	Z, 00285$
      001B22 AF                    6271 	xor	a, a
      001B23                       6272 00285$:
      001B23 F8 0D                 6273 	ldhl	sp,	#13
                                   6274 ;main.c:686: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001B25 32                    6275 	ld	(hl-), a
      001B26 2B                    6276 	dec	hl
      001B27 7E                    6277 	ld	a, (hl)
      001B28 B7                    6278 	or	a, a
      001B29 28 2E                 6279 	jr	Z, 00110$
      001B2B D1                    6280 	pop	de
      001B2C D5                    6281 	push	de
      001B2D 1A                    6282 	ld	a, (de)
      001B2E F8 0E                 6283 	ldhl	sp,	#14
      001B30 77                    6284 	ld	(hl), a
      001B31 3A                    6285 	ld	a, (hl-)
      001B32 2B                    6286 	dec	hl
      001B33 96                    6287 	sub	a, (hl)
      001B34 23                    6288 	inc	hl
      001B35 23                    6289 	inc	hl
      001B36 77                    6290 	ld	(hl), a
                                   6291 ;main.c:295: if (value >= 0) return value;
      001B37 CB 7E                 6292 	bit	7, (hl)
      001B39 28 05                 6293 	jr	Z, 00135$
                                   6294 ;main.c:296: else return - value;
      001B3B AF                    6295 	xor	a, a
      001B3C F8 0E                 6296 	ldhl	sp,	#14
      001B3E 96                    6297 	sub	a, (hl)
      001B3F 77                    6298 	ld	(hl), a
                                   6299 ;main.c:686: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001B40                       6300 00135$:
      001B40 F8 0E                 6301 	ldhl	sp,	#14
      001B42 5E                    6302 	ld	e, (hl)
      001B43 3E 08                 6303 	ld	a,#0x08
      001B45 57                    6304 	ld	d,a
      001B46 96                    6305 	sub	a, (hl)
      001B47 CB 7B                 6306 	bit	7, e
      001B49 28 07                 6307 	jr	Z, 00286$
      001B4B CB 7A                 6308 	bit	7, d
      001B4D 20 08                 6309 	jr	NZ, 00287$
      001B4F BF                    6310 	cp	a, a
      001B50 18 05                 6311 	jr	00287$
      001B52                       6312 00286$:
      001B52 CB 7A                 6313 	bit	7, d
      001B54 28 01                 6314 	jr	Z, 00287$
      001B56 37                    6315 	scf
      001B57                       6316 00287$:
      001B57 30 33                 6317 	jr	NC, 00106$
      001B59                       6318 00110$:
                                   6319 ;main.c:687: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001B59 F8 0D                 6320 	ldhl	sp,	#13
      001B5B 7E                    6321 	ld	a, (hl)
      001B5C B7                    6322 	or	a, a
      001B5D CAr40r1C              6323 	jp	Z, 00107$
      001B60 2B                    6324 	dec	hl
      001B61 D1                    6325 	pop	de
      001B62 D5                    6326 	push	de
      001B63 1A                    6327 	ld	a, (de)
      001B64 96                    6328 	sub	a, (hl)
      001B65 23                    6329 	inc	hl
      001B66 23                    6330 	inc	hl
      001B67 77                    6331 	ld	(hl), a
                                   6332 ;main.c:295: if (value >= 0) return value;
      001B68 CB 7E                 6333 	bit	7, (hl)
      001B6A 28 06                 6334 	jr	Z, 00139$
                                   6335 ;main.c:296: else return - value;
      001B6C AF                    6336 	xor	a, a
      001B6D F8 0E                 6337 	ldhl	sp,	#14
      001B6F 96                    6338 	sub	a, (hl)
      001B70 4F                    6339 	ld	c, a
      001B71 71                    6340 	ld	(hl), c
                                   6341 ;main.c:687: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001B72                       6342 00139$:
      001B72 F8 0E                 6343 	ldhl	sp,	#14
      001B74 5E                    6344 	ld	e, (hl)
      001B75 3E 10                 6345 	ld	a,#0x10
      001B77 57                    6346 	ld	d,a
      001B78 96                    6347 	sub	a, (hl)
      001B79 CB 7B                 6348 	bit	7, e
      001B7B 28 07                 6349 	jr	Z, 00288$
      001B7D CB 7A                 6350 	bit	7, d
      001B7F 20 08                 6351 	jr	NZ, 00289$
      001B81 BF                    6352 	cp	a, a
      001B82 18 05                 6353 	jr	00289$
      001B84                       6354 00288$:
      001B84 CB 7A                 6355 	bit	7, d
      001B86 28 01                 6356 	jr	Z, 00289$
      001B88 37                    6357 	scf
      001B89                       6358 00289$:
      001B89 DAr40r1C              6359 	jp	C, 00107$
      001B8C                       6360 00106$:
                                   6361 ;main.c:688: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001B8C C1                    6362 	pop	bc
      001B8D C5                    6363 	push	bc
      001B8E 03                    6364 	inc	bc
      001B8F 03                    6365 	inc	bc
      001B90 FAr5Fr00              6366 	ld	a, (#_playerDrawY)
      001B93 F8 0E                 6367 	ldhl	sp,	#14
      001B95 77                    6368 	ld	(hl), a
      001B96 F8 0B                 6369 	ldhl	sp,	#11
      001B98 7E                    6370 	ld	a, (hl)
      001B99 B7                    6371 	or	a, a
      001B9A 28 23                 6372 	jr	Z, 00105$
      001B9C 0A                    6373 	ld	a, (bc)
      001B9D F8 0E                 6374 	ldhl	sp,	#14
      001B9F 96                    6375 	sub	a, (hl)
      001BA0 6F                    6376 	ld	l, a
                                   6377 ;	spillPairReg hl
                                   6378 ;	spillPairReg hl
                                   6379 ;main.c:295: if (value >= 0) return value;
      001BA1 CB 7D                 6380 	bit	7, l
      001BA3 28 03                 6381 	jr	Z, 00143$
                                   6382 ;main.c:296: else return - value;
      001BA5 AF                    6383 	xor	a, a
      001BA6 95                    6384 	sub	a, l
      001BA7 6F                    6385 	ld	l, a
                                   6386 ;	spillPairReg hl
                                   6387 ;	spillPairReg hl
                                   6388 ;main.c:688: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001BA8                       6389 00143$:
      001BA8 5D                    6390 	ld	e, l
      001BA9 3E 08                 6391 	ld	a,#0x08
      001BAB 57                    6392 	ld	d,a
      001BAC 95                    6393 	sub	a, l
      001BAD CB 7B                 6394 	bit	7, e
      001BAF 28 07                 6395 	jr	Z, 00290$
      001BB1 CB 7A                 6396 	bit	7, d
      001BB3 20 08                 6397 	jr	NZ, 00291$
      001BB5 BF                    6398 	cp	a, a
      001BB6 18 05                 6399 	jr	00291$
      001BB8                       6400 00290$:
      001BB8 CB 7A                 6401 	bit	7, d
      001BBA 28 01                 6402 	jr	Z, 00291$
      001BBC 37                    6403 	scf
      001BBD                       6404 00291$:
      001BBD 30 28                 6405 	jr	NC, 00101$
      001BBF                       6406 00105$:
                                   6407 ;main.c:689: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001BBF F8 0D                 6408 	ldhl	sp,	#13
      001BC1 7E                    6409 	ld	a, (hl)
      001BC2 B7                    6410 	or	a, a
      001BC3 28 7B                 6411 	jr	Z, 00107$
      001BC5 23                    6412 	inc	hl
      001BC6 0A                    6413 	ld	a, (bc)
      001BC7 96                    6414 	sub	a, (hl)
      001BC8 4F                    6415 	ld	c, a
                                   6416 ;main.c:295: if (value >= 0) return value;
      001BC9 CB 79                 6417 	bit	7, c
      001BCB 28 03                 6418 	jr	Z, 00147$
                                   6419 ;main.c:296: else return - value;
      001BCD AF                    6420 	xor	a, a
      001BCE 91                    6421 	sub	a, c
      001BCF 4F                    6422 	ld	c, a
                                   6423 ;main.c:689: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001BD0                       6424 00147$:
      001BD0 59                    6425 	ld	e, c
      001BD1 3E 10                 6426 	ld	a,#0x10
      001BD3 57                    6427 	ld	d,a
      001BD4 91                    6428 	sub	a, c
      001BD5 CB 7B                 6429 	bit	7, e
      001BD7 28 07                 6430 	jr	Z, 00292$
      001BD9 CB 7A                 6431 	bit	7, d
      001BDB 20 08                 6432 	jr	NZ, 00293$
      001BDD BF                    6433 	cp	a, a
      001BDE 18 05                 6434 	jr	00293$
      001BE0                       6435 00292$:
      001BE0 CB 7A                 6436 	bit	7, d
      001BE2 28 01                 6437 	jr	Z, 00293$
      001BE4 37                    6438 	scf
      001BE5                       6439 00293$:
      001BE5 38 59                 6440 	jr	C, 00107$
      001BE7                       6441 00101$:
                                   6442 ;main.c:691: set_sprite_tile(10+(i<<1), 0x7f);
      001BE7 F8 02                 6443 	ldhl	sp,	#2
      001BE9 7E                    6444 	ld	a, (hl)
      001BEA 87                    6445 	add	a, a
      001BEB C6 0A                 6446 	add	a, #0x0a
                                   6447 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001BED 6F                    6448 	ld	l, a
      001BEE 01r00r00              6449 	ld	bc, #_shadow_OAM+0
                                   6450 ;	spillPairReg hl
                                   6451 ;	spillPairReg hl
      001BF1 26 00                 6452 	ld	h, #0x00
                                   6453 ;	spillPairReg hl
                                   6454 ;	spillPairReg hl
      001BF3 29                    6455 	add	hl, hl
      001BF4 29                    6456 	add	hl, hl
      001BF5 09                    6457 	add	hl, bc
      001BF6 23                    6458 	inc	hl
      001BF7 23                    6459 	inc	hl
      001BF8 36 7F                 6460 	ld	(hl), #0x7f
                                   6461 ;main.c:692: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001BFA F8 02                 6462 	ldhl	sp,	#2
      001BFC 7E                    6463 	ld	a, (hl)
      001BFD 87                    6464 	add	a, a
      001BFE C6 0B                 6465 	add	a, #0x0b
                                   6466 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001C00 6F                    6467 	ld	l, a
      001C01 01r00r00              6468 	ld	bc, #_shadow_OAM+0
                                   6469 ;	spillPairReg hl
                                   6470 ;	spillPairReg hl
      001C04 26 00                 6471 	ld	h, #0x00
                                   6472 ;	spillPairReg hl
                                   6473 ;	spillPairReg hl
      001C06 29                    6474 	add	hl, hl
      001C07 29                    6475 	add	hl, hl
      001C08 09                    6476 	add	hl, bc
      001C09 23                    6477 	inc	hl
      001C0A 23                    6478 	inc	hl
      001C0B 36 7F                 6479 	ld	(hl), #0x7f
                                   6480 ;main.c:693: eptr->alive = 0;
      001C0D D1                    6481 	pop	de
      001C0E D5                    6482 	push	de
      001C0F 21 09 00              6483 	ld	hl, #0x0009
      001C12 19                    6484 	add	hl, de
      001C13 4D                    6485 	ld	c, l
      001C14 44                    6486 	ld	b, h
      001C15 AF                    6487 	xor	a, a
      001C16 02                    6488 	ld	(bc), a
                                   6489 ;main.c:694: eptr->visible = 0;
      001C17 D1                    6490 	pop	de
      001C18 D5                    6491 	push	de
      001C19 21 0A 00              6492 	ld	hl, #0x000a
      001C1C 19                    6493 	add	hl, de
      001C1D 4D                    6494 	ld	c, l
      001C1E 44                    6495 	ld	b, h
      001C1F AF                    6496 	xor	a, a
      001C20 02                    6497 	ld	(bc), a
                                   6498 ;main.c:695: takeDamage(eptr->damage);
      001C21 D1                    6499 	pop	de
      001C22 D5                    6500 	push	de
      001C23 21 0B 00              6501 	ld	hl, #0x000b
      001C26 19                    6502 	add	hl, de
      001C27 4D                    6503 	ld	c, l
      001C28 44                    6504 	ld	b, h
      001C29 0A                    6505 	ld	a, (bc)
      001C2A 06 00                 6506 	ld	b, #0x00
      001C2C 4F                    6507 	ld	c, a
      001C2D C5                    6508 	push	bc
      001C2E CDr87r1A              6509 	call	_takeDamage
      001C31 E1                    6510 	pop	hl
                                   6511 ;main.c:696: initEnemies(0);
      001C32 AF                    6512 	xor	a, a
      001C33 F5                    6513 	push	af
      001C34 33                    6514 	inc	sp
      001C35 CDr83r0B              6515 	call	_initEnemies
      001C38 33                    6516 	inc	sp
                                   6517 ;main.c:697: playSound(0);
      001C39 AF                    6518 	xor	a, a
      001C3A F5                    6519 	push	af
      001C3B 33                    6520 	inc	sp
      001C3C CDr20r0B              6521 	call	_playSound
      001C3F 33                    6522 	inc	sp
      001C40                       6523 00107$:
                                   6524 ;main.c:703: struct Projectile *pptr = projectiles;
      001C40 F8 0C                 6525 	ldhl	sp,	#12
      001C42 3Er50                 6526 	ld	a, #<(_projectiles)
      001C44 22                    6527 	ld	(hl+), a
      001C45 36s00                 6528 	ld	(hl), #>(_projectiles)
                                   6529 ;main.c:705: while (j < PROJECTILECOUNT) {
      001C47 D1                    6530 	pop	de
      001C48 D5                    6531 	push	de
      001C49 21 02 00              6532 	ld	hl, #0x0002
      001C4C 19                    6533 	add	hl, de
      001C4D E5                    6534 	push	hl
      001C4E 7D                    6535 	ld	a, l
      001C4F F8 05                 6536 	ldhl	sp,	#5
      001C51 77                    6537 	ld	(hl), a
      001C52 E1                    6538 	pop	hl
      001C53 7C                    6539 	ld	a, h
      001C54 F8 04                 6540 	ldhl	sp,	#4
      001C56 77                    6541 	ld	(hl), a
      001C57 D1                    6542 	pop	de
      001C58 D5                    6543 	push	de
      001C59 21 08 00              6544 	ld	hl, #0x0008
      001C5C 19                    6545 	add	hl, de
      001C5D E5                    6546 	push	hl
      001C5E 7D                    6547 	ld	a, l
      001C5F F8 07                 6548 	ldhl	sp,	#7
      001C61 77                    6549 	ld	(hl), a
      001C62 E1                    6550 	pop	hl
      001C63 7C                    6551 	ld	a, h
      001C64 F8 06                 6552 	ldhl	sp,	#6
      001C66 77                    6553 	ld	(hl), a
      001C67 F8 03                 6554 	ldhl	sp,	#3
      001C69 7E                    6555 	ld	a, (hl)
      001C6A F8 07                 6556 	ldhl	sp,	#7
      001C6C 77                    6557 	ld	(hl), a
      001C6D F8 04                 6558 	ldhl	sp,	#4
      001C6F 7E                    6559 	ld	a, (hl)
      001C70 F8 08                 6560 	ldhl	sp,	#8
      001C72 77                    6561 	ld	(hl), a
      001C73 F8 0E                 6562 	ldhl	sp,	#14
      001C75 36 00                 6563 	ld	(hl), #0x00
      001C77                       6564 00123$:
      001C77 21r9Dr07              6565 	ld	hl, #_PROJECTILECOUNT
      001C7A 4E                    6566 	ld	c, (hl)
      001C7B F8 0E                 6567 	ldhl	sp,	#14
      001C7D 7E                    6568 	ld	a, (hl)
      001C7E 91                    6569 	sub	a, c
      001C7F D2r06r1E              6570 	jp	NC, 00127$
                                   6571 ;main.c:706: if (pptr->active) {
      001C82 2B                    6572 	dec	hl
      001C83 2B                    6573 	dec	hl
      001C84 2A                    6574 	ld	a, (hl+)
      001C85 5F                    6575 	ld	e, a
      001C86 56                    6576 	ld	d, (hl)
      001C87 21 09 00              6577 	ld	hl, #0x0009
      001C8A 19                    6578 	add	hl, de
      001C8B 4D                    6579 	ld	c, l
      001C8C 44                    6580 	ld	b, h
      001C8D 0A                    6581 	ld	a, (bc)
      001C8E B7                    6582 	or	a, a
      001C8F CArEDr1D              6583 	jp	Z, 00122$
                                   6584 ;main.c:710: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001C92 F8 05                 6585 	ldhl	sp,#5
      001C94 2A                    6586 	ld	a, (hl+)
      001C95 5F                    6587 	ld	e, a
      001C96 56                    6588 	ld	d, (hl)
      001C97 1A                    6589 	ld	a, (de)
      001C98 4F                    6590 	ld	c, a
      001C99 3D                    6591 	dec	a
      001C9A 3E 01                 6592 	ld	a, #0x01
      001C9C 28 01                 6593 	jr	Z, 00295$
      001C9E AF                    6594 	xor	a, a
      001C9F                       6595 00295$:
      001C9F F8 09                 6596 	ldhl	sp,	#9
      001CA1 77                    6597 	ld	(hl), a
                                   6598 ;main.c:711: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001CA2 79                    6599 	ld	a, c
      001CA3 D6 02                 6600 	sub	a, #0x02
      001CA5 3E 01                 6601 	ld	a, #0x01
      001CA7 28 01                 6602 	jr	Z, 00297$
      001CA9 AF                    6603 	xor	a, a
      001CAA                       6604 00297$:
      001CAA F8 0A                 6605 	ldhl	sp,	#10
                                   6606 ;main.c:710: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001CAC 32                    6607 	ld	(hl-), a
      001CAD 7E                    6608 	ld	a, (hl)
      001CAE B7                    6609 	or	a, a
      001CAF 28 2C                 6610 	jr	Z, 00120$
      001CB1 D1                    6611 	pop	de
      001CB2 D5                    6612 	push	de
      001CB3 1A                    6613 	ld	a, (de)
      001CB4 F8 0C                 6614 	ldhl	sp,#12
      001CB6 5E                    6615 	ld	e, (hl)
      001CB7 23                    6616 	inc	hl
      001CB8 56                    6617 	ld	d, (hl)
      001CB9 F5                    6618 	push	af
      001CBA 1A                    6619 	ld	a, (de)
      001CBB 4F                    6620 	ld	c, a
      001CBC F1                    6621 	pop	af
      001CBD 91                    6622 	sub	a, c
      001CBE 4F                    6623 	ld	c, a
                                   6624 ;main.c:295: if (value >= 0) return value;
      001CBF CB 79                 6625 	bit	7, c
      001CC1 28 03                 6626 	jr	Z, 00153$
                                   6627 ;main.c:296: else return - value;
      001CC3 AF                    6628 	xor	a, a
      001CC4 91                    6629 	sub	a, c
      001CC5 4F                    6630 	ld	c, a
                                   6631 ;main.c:710: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001CC6                       6632 00153$:
      001CC6 59                    6633 	ld	e, c
      001CC7 3E 08                 6634 	ld	a,#0x08
      001CC9 57                    6635 	ld	d,a
      001CCA 91                    6636 	sub	a, c
      001CCB CB 7B                 6637 	bit	7, e
      001CCD 28 07                 6638 	jr	Z, 00298$
      001CCF CB 7A                 6639 	bit	7, d
      001CD1 20 08                 6640 	jr	NZ, 00299$
      001CD3 BF                    6641 	cp	a, a
      001CD4 18 05                 6642 	jr	00299$
      001CD6                       6643 00298$:
      001CD6 CB 7A                 6644 	bit	7, d
      001CD8 28 01                 6645 	jr	Z, 00299$
      001CDA 37                    6646 	scf
      001CDB                       6647 00299$:
      001CDB 30 3B                 6648 	jr	NC, 00116$
      001CDD                       6649 00120$:
                                   6650 ;main.c:711: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001CDD F8 0A                 6651 	ldhl	sp,	#10
      001CDF 7E                    6652 	ld	a, (hl)
      001CE0 B7                    6653 	or	a, a
      001CE1 CArEDr1D              6654 	jp	Z, 00122$
      001CE4 D1                    6655 	pop	de
      001CE5 D5                    6656 	push	de
      001CE6 1A                    6657 	ld	a, (de)
      001CE7 F8 0C                 6658 	ldhl	sp,#12
      001CE9 5E                    6659 	ld	e, (hl)
      001CEA 23                    6660 	inc	hl
      001CEB 56                    6661 	ld	d, (hl)
      001CEC 2B                    6662 	dec	hl
      001CED 2B                    6663 	dec	hl
      001CEE F5                    6664 	push	af
      001CEF 1A                    6665 	ld	a, (de)
      001CF0 4F                    6666 	ld	c, a
      001CF1 F1                    6667 	pop	af
      001CF2 91                    6668 	sub	a, c
      001CF3 77                    6669 	ld	(hl), a
                                   6670 ;main.c:295: if (value >= 0) return value;
      001CF4 CB 7E                 6671 	bit	7, (hl)
      001CF6 20 03                 6672 	jr	NZ, 00155$
      001CF8 4E                    6673 	ld	c, (hl)
      001CF9 18 05                 6674 	jr	00157$
      001CFB                       6675 00155$:
                                   6676 ;main.c:296: else return - value;
      001CFB AF                    6677 	xor	a, a
      001CFC F8 0B                 6678 	ldhl	sp,	#11
      001CFE 96                    6679 	sub	a, (hl)
      001CFF 4F                    6680 	ld	c, a
                                   6681 ;main.c:711: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001D00                       6682 00157$:
      001D00 59                    6683 	ld	e, c
      001D01 3E 10                 6684 	ld	a,#0x10
      001D03 57                    6685 	ld	d,a
      001D04 91                    6686 	sub	a, c
      001D05 CB 7B                 6687 	bit	7, e
      001D07 28 07                 6688 	jr	Z, 00300$
      001D09 CB 7A                 6689 	bit	7, d
      001D0B 20 08                 6690 	jr	NZ, 00301$
      001D0D BF                    6691 	cp	a, a
      001D0E 18 05                 6692 	jr	00301$
      001D10                       6693 00300$:
      001D10 CB 7A                 6694 	bit	7, d
      001D12 28 01                 6695 	jr	Z, 00301$
      001D14 37                    6696 	scf
      001D15                       6697 00301$:
      001D15 DArEDr1D              6698 	jp	C, 00122$
      001D18                       6699 00116$:
                                   6700 ;main.c:712: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001D18 F8 0C                 6701 	ldhl	sp,	#12
      001D1A 2A                    6702 	ld	a, (hl+)
      001D1B 4F                    6703 	ld	c, a
      001D1C 46                    6704 	ld	b, (hl)
      001D1D 03                    6705 	inc	bc
      001D1E 03                    6706 	inc	bc
      001D1F F8 09                 6707 	ldhl	sp,	#9
      001D21 7E                    6708 	ld	a, (hl)
      001D22 B7                    6709 	or	a, a
      001D23 28 2A                 6710 	jr	Z, 00115$
      001D25 2B                    6711 	dec	hl
      001D26 2B                    6712 	dec	hl
      001D27 2A                    6713 	ld	a, (hl+)
      001D28 5F                    6714 	ld	e, a
      001D29 56                    6715 	ld	d, (hl)
      001D2A 1A                    6716 	ld	a, (de)
      001D2B F5                    6717 	push	af
      001D2C 0A                    6718 	ld	a, (bc)
      001D2D 5F                    6719 	ld	e, a
      001D2E F1                    6720 	pop	af
      001D2F 93                    6721 	sub	a, e
      001D30 6F                    6722 	ld	l, a
                                   6723 ;	spillPairReg hl
                                   6724 ;	spillPairReg hl
                                   6725 ;main.c:295: if (value >= 0) return value;
      001D31 CB 7D                 6726 	bit	7, l
      001D33 28 03                 6727 	jr	Z, 00161$
                                   6728 ;main.c:296: else return - value;
      001D35 AF                    6729 	xor	a, a
      001D36 95                    6730 	sub	a, l
      001D37 6F                    6731 	ld	l, a
                                   6732 ;	spillPairReg hl
                                   6733 ;	spillPairReg hl
                                   6734 ;main.c:712: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001D38                       6735 00161$:
      001D38 5D                    6736 	ld	e, l
      001D39 3E 08                 6737 	ld	a,#0x08
      001D3B 57                    6738 	ld	d,a
      001D3C 95                    6739 	sub	a, l
      001D3D CB 7B                 6740 	bit	7, e
      001D3F 28 07                 6741 	jr	Z, 00302$
      001D41 CB 7A                 6742 	bit	7, d
      001D43 20 08                 6743 	jr	NZ, 00303$
      001D45 BF                    6744 	cp	a, a
      001D46 18 05                 6745 	jr	00303$
      001D48                       6746 00302$:
      001D48 CB 7A                 6747 	bit	7, d
      001D4A 28 01                 6748 	jr	Z, 00303$
      001D4C 37                    6749 	scf
      001D4D                       6750 00303$:
      001D4D 30 31                 6751 	jr	NC, 00111$
      001D4F                       6752 00115$:
                                   6753 ;main.c:713: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001D4F F8 0A                 6754 	ldhl	sp,	#10
      001D51 7E                    6755 	ld	a, (hl)
      001D52 B7                    6756 	or	a, a
      001D53 CArEDr1D              6757 	jp	Z, 00122$
      001D56 F8 03                 6758 	ldhl	sp,#3
      001D58 2A                    6759 	ld	a, (hl+)
      001D59 5F                    6760 	ld	e, a
      001D5A 56                    6761 	ld	d, (hl)
      001D5B 1A                    6762 	ld	a, (de)
      001D5C F5                    6763 	push	af
      001D5D 0A                    6764 	ld	a, (bc)
      001D5E 4F                    6765 	ld	c, a
      001D5F F1                    6766 	pop	af
      001D60 91                    6767 	sub	a, c
      001D61 4F                    6768 	ld	c, a
                                   6769 ;main.c:295: if (value >= 0) return value;
      001D62 CB 79                 6770 	bit	7, c
      001D64 28 03                 6771 	jr	Z, 00165$
                                   6772 ;main.c:296: else return - value;
      001D66 AF                    6773 	xor	a, a
      001D67 91                    6774 	sub	a, c
      001D68 4F                    6775 	ld	c, a
                                   6776 ;main.c:713: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001D69                       6777 00165$:
      001D69 59                    6778 	ld	e, c
      001D6A 3E 10                 6779 	ld	a,#0x10
      001D6C 57                    6780 	ld	d,a
      001D6D 91                    6781 	sub	a, c
      001D6E CB 7B                 6782 	bit	7, e
      001D70 28 07                 6783 	jr	Z, 00304$
      001D72 CB 7A                 6784 	bit	7, d
      001D74 20 08                 6785 	jr	NZ, 00305$
      001D76 BF                    6786 	cp	a, a
      001D77 18 05                 6787 	jr	00305$
      001D79                       6788 00304$:
      001D79 CB 7A                 6789 	bit	7, d
      001D7B 28 01                 6790 	jr	Z, 00305$
      001D7D 37                    6791 	scf
      001D7E                       6792 00305$:
      001D7E 38 6D                 6793 	jr	C, 00122$
      001D80                       6794 00111$:
                                   6795 ;main.c:716: set_sprite_tile(10+(i<<1), 0x7f);
      001D80 F8 02                 6796 	ldhl	sp,	#2
      001D82 7E                    6797 	ld	a, (hl)
      001D83 87                    6798 	add	a, a
      001D84 4F                    6799 	ld	c, a
      001D85 C6 0A                 6800 	add	a, #0x0a
                                   6801 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001D87 6F                    6802 	ld	l, a
                                   6803 ;	spillPairReg hl
                                   6804 ;	spillPairReg hl
      001D88 26 00                 6805 	ld	h, #0x00
                                   6806 ;	spillPairReg hl
                                   6807 ;	spillPairReg hl
      001D8A 29                    6808 	add	hl, hl
      001D8B 29                    6809 	add	hl, hl
      001D8C 11r00r00              6810 	ld	de, #_shadow_OAM
      001D8F 19                    6811 	add	hl, de
      001D90 23                    6812 	inc	hl
      001D91 23                    6813 	inc	hl
      001D92 36 7F                 6814 	ld	(hl), #0x7f
                                   6815 ;main.c:717: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001D94 79                    6816 	ld	a, c
      001D95 C6 0B                 6817 	add	a, #0x0b
      001D97 4F                    6818 	ld	c, a
                                   6819 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001D98 26 00                 6820 	ld	h, #0x00
                                   6821 ;	spillPairReg hl
                                   6822 ;	spillPairReg hl
      001D9A 69                    6823 	ld	l, c
      001D9B 29                    6824 	add	hl, hl
      001D9C 29                    6825 	add	hl, hl
      001D9D 11r00r00              6826 	ld	de, #_shadow_OAM
      001DA0 19                    6827 	add	hl, de
      001DA1 23                    6828 	inc	hl
      001DA2 23                    6829 	inc	hl
      001DA3 36 7F                 6830 	ld	(hl), #0x7f
                                   6831 ;main.c:718: eptr->alive = 0;
      001DA5 D1                    6832 	pop	de
      001DA6 D5                    6833 	push	de
      001DA7 21 09 00              6834 	ld	hl, #0x0009
      001DAA 19                    6835 	add	hl, de
      001DAB 4D                    6836 	ld	c, l
      001DAC 44                    6837 	ld	b, h
      001DAD AF                    6838 	xor	a, a
      001DAE 02                    6839 	ld	(bc), a
                                   6840 ;main.c:719: eptr->visible = 0;
      001DAF D1                    6841 	pop	de
      001DB0 D5                    6842 	push	de
      001DB1 21 0A 00              6843 	ld	hl, #0x000a
      001DB4 19                    6844 	add	hl, de
      001DB5 4D                    6845 	ld	c, l
      001DB6 44                    6846 	ld	b, h
      001DB7 AF                    6847 	xor	a, a
      001DB8 02                    6848 	ld	(bc), a
                                   6849 ;main.c:720: initEnemies(0);
      001DB9 AF                    6850 	xor	a, a
      001DBA F5                    6851 	push	af
      001DBB 33                    6852 	inc	sp
      001DBC CDr83r0B              6853 	call	_initEnemies
      001DBF 33                    6854 	inc	sp
                                   6855 ;main.c:721: set_sprite_tile(30+j, 0x7f);
      001DC0 F8 0E                 6856 	ldhl	sp,	#14
      001DC2 7E                    6857 	ld	a, (hl)
      001DC3 C6 1E                 6858 	add	a, #0x1e
      001DC5 4F                    6859 	ld	c, a
                                   6860 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001DC6 26 00                 6861 	ld	h, #0x00
                                   6862 ;	spillPairReg hl
                                   6863 ;	spillPairReg hl
      001DC8 69                    6864 	ld	l, c
      001DC9 29                    6865 	add	hl, hl
      001DCA 29                    6866 	add	hl, hl
      001DCB 11r00r00              6867 	ld	de, #_shadow_OAM
      001DCE 19                    6868 	add	hl, de
      001DCF 23                    6869 	inc	hl
      001DD0 23                    6870 	inc	hl
      001DD1 36 7F                 6871 	ld	(hl), #0x7f
                                   6872 ;main.c:722: playSound(0);
      001DD3 AF                    6873 	xor	a, a
      001DD4 F5                    6874 	push	af
      001DD5 33                    6875 	inc	sp
      001DD6 CDr20r0B              6876 	call	_playSound
      001DD9 33                    6877 	inc	sp
                                   6878 ;main.c:723: pptr->active = 0;
      001DDA F8 0C                 6879 	ldhl	sp,#12
      001DDC 2A                    6880 	ld	a, (hl+)
      001DDD 5F                    6881 	ld	e, a
      001DDE 56                    6882 	ld	d, (hl)
      001DDF 21 09 00              6883 	ld	hl, #0x0009
      001DE2 19                    6884 	add	hl, de
      001DE3 4D                    6885 	ld	c, l
      001DE4 44                    6886 	ld	b, h
      001DE5 AF                    6887 	xor	a, a
      001DE6 02                    6888 	ld	(bc), a
                                   6889 ;main.c:724: incrementScore();
      001DE7 CDrDDr08              6890 	call	_incrementScore
                                   6891 ;main.c:725: updateScore();
      001DEA CDrB3r08              6892 	call	_updateScore
      001DED                       6893 00122$:
                                   6894 ;main.c:730: j++;
      001DED F8 0E                 6895 	ldhl	sp,	#14
      001DEF 34                    6896 	inc	(hl)
                                   6897 ;main.c:731: pptr++;
      001DF0 2B                    6898 	dec	hl
      001DF1 2B                    6899 	dec	hl
      001DF2 2A                    6900 	ld	a, (hl+)
      001DF3 5F                    6901 	ld	e, a
      001DF4 56                    6902 	ld	d, (hl)
      001DF5 21 0C 00              6903 	ld	hl, #0x000c
      001DF8 19                    6904 	add	hl, de
      001DF9 E5                    6905 	push	hl
      001DFA 7D                    6906 	ld	a, l
      001DFB F8 0E                 6907 	ldhl	sp,	#14
      001DFD 77                    6908 	ld	(hl), a
      001DFE E1                    6909 	pop	hl
      001DFF 7C                    6910 	ld	a, h
      001E00 F8 0D                 6911 	ldhl	sp,	#13
      001E02 77                    6912 	ld	(hl), a
      001E03 C3r77r1C              6913 	jp	00123$
      001E06                       6914 00127$:
                                   6915 ;main.c:735: if (enemyCollisionCount == 0) {
      001E06 FAr68r00              6916 	ld	a, (#_enemyCollisionCount)
      001E09 B7                    6917 	or	a, a
      001E0A 20 09                 6918 	jr	NZ, 00130$
                                   6919 ;main.c:736: enemyCollisionCount = ENEMYCOUNT - 1;
      001E0C FAr8Cr07              6920 	ld	a, (#_ENEMYCOUNT)
      001E0F 3D                    6921 	dec	a
      001E10 EAr68r00              6922 	ld	(#_enemyCollisionCount),a
      001E13 18 04                 6923 	jr	00169$
      001E15                       6924 00130$:
                                   6925 ;main.c:739: enemyCollisionCount--;
      001E15 21r68r00              6926 	ld	hl, #_enemyCollisionCount
      001E18 35                    6927 	dec	(hl)
      001E19                       6928 00169$:
                                   6929 ;main.c:744: }
      001E19 E8 0F                 6930 	add	sp, #15
      001E1B C9                    6931 	ret
                                   6932 ;main.c:747: void setGunIcon() {
                                   6933 ;	---------------------------------
                                   6934 ; Function setGunIcon
                                   6935 ; ---------------------------------
      001E1C                       6936 _setGunIcon::
                                   6937 ;main.c:750: set_win_tiles(15, 0,1,1,gunMap+currentGun);
      001E1C 01r6Br00              6938 	ld	bc, #_gunMap+0
      001E1F 79                    6939 	ld	a, c
      001E20 21r69r00              6940 	ld	hl, #_currentGun
      001E23 86                    6941 	add	a, (hl)
      001E24 4F                    6942 	ld	c, a
      001E25 30 01                 6943 	jr	NC, 00103$
      001E27 04                    6944 	inc	b
      001E28                       6945 00103$:
      001E28 C5                    6946 	push	bc
      001E29 21 01 01              6947 	ld	hl, #0x101
      001E2C E5                    6948 	push	hl
      001E2D 21 0F 00              6949 	ld	hl, #0x0f
      001E30 E5                    6950 	push	hl
      001E31 CDr00r00              6951 	call	_set_win_tiles
      001E34 E8 06                 6952 	add	sp, #6
                                   6953 ;main.c:752: }
      001E36 C9                    6954 	ret
                                   6955 ;main.c:762: void fire() {
                                   6956 ;	---------------------------------
                                   6957 ; Function fire
                                   6958 ; ---------------------------------
      001E37                       6959 _fire::
      001E37 E8 FA                 6960 	add	sp, #-6
                                   6961 ;main.c:764: oldestProjectile += 1;
      001E39 21r54r00              6962 	ld	hl, #_oldestProjectile
      001E3C 34                    6963 	inc	(hl)
      001E3D 7E                    6964 	ld	a, (hl)
                                   6965 ;main.c:765: if (oldestProjectile >= PROJECTILECOUNT) {
      001E3E 21r9Dr07              6966 	ld	hl, #_PROJECTILECOUNT
      001E41 4E                    6967 	ld	c, (hl)
      001E42 21r54r00              6968 	ld	hl, #_oldestProjectile
      001E45 7E                    6969 	ld	a, (hl)
      001E46 91                    6970 	sub	a, c
      001E47 38 02                 6971 	jr	C, 00102$
                                   6972 ;main.c:766: oldestProjectile = 0;
      001E49 36 00                 6973 	ld	(hl), #0x00
      001E4B                       6974 00102$:
                                   6975 ;main.c:769: if (currentGun == 0) {
      001E4B FAr69r00              6976 	ld	a, (#_currentGun)
      001E4E B7                    6977 	or	a, a
      001E4F 20 1E                 6978 	jr	NZ, 00104$
                                   6979 ;main.c:770: projectiles[oldestProjectile] = singleGun;
      001E51 21r54r00              6980 	ld	hl, #_oldestProjectile
      001E54 4E                    6981 	ld	c, (hl)
      001E55 06 00                 6982 	ld	b, #0x00
      001E57 69                    6983 	ld	l, c
      001E58 60                    6984 	ld	h, b
      001E59 29                    6985 	add	hl, hl
      001E5A 09                    6986 	add	hl, bc
      001E5B 29                    6987 	add	hl, hl
      001E5C 29                    6988 	add	hl, hl
      001E5D 01r50r00              6989 	ld	bc,#_projectiles
      001E60 09                    6990 	add	hl,bc
      001E61 11 0C 00              6991 	ld	de, #0x000c
      001E64 D5                    6992 	push	de
      001E65 11r30r00              6993 	ld	de, #_singleGun
      001E68 D5                    6994 	push	de
      001E69 E5                    6995 	push	hl
      001E6A CDr00r00              6996 	call	___memcpy
      001E6D E8 06                 6997 	add	sp, #6
      001E6F                       6998 00104$:
                                   6999 ;main.c:772: if (currentGun == 1) {
      001E6F FAr69r00              7000 	ld	a, (#_currentGun)
      001E72 3D                    7001 	dec	a
      001E73 20 1E                 7002 	jr	NZ, 00106$
                                   7003 ;main.c:773: projectiles[oldestProjectile] = doubleGun;
      001E75 21r54r00              7004 	ld	hl, #_oldestProjectile
      001E78 4E                    7005 	ld	c, (hl)
      001E79 06 00                 7006 	ld	b, #0x00
      001E7B 69                    7007 	ld	l, c
      001E7C 60                    7008 	ld	h, b
      001E7D 29                    7009 	add	hl, hl
      001E7E 09                    7010 	add	hl, bc
      001E7F 29                    7011 	add	hl, hl
      001E80 29                    7012 	add	hl, hl
      001E81 01r50r00              7013 	ld	bc,#_projectiles
      001E84 09                    7014 	add	hl,bc
      001E85 11 0C 00              7015 	ld	de, #0x000c
      001E88 D5                    7016 	push	de
      001E89 11r3Cr00              7017 	ld	de, #_doubleGun
      001E8C D5                    7018 	push	de
      001E8D E5                    7019 	push	hl
      001E8E CDr00r00              7020 	call	___memcpy
      001E91 E8 06                 7021 	add	sp, #6
      001E93                       7022 00106$:
                                   7023 ;main.c:775: if (currentGun == 2) {
      001E93 FAr69r00              7024 	ld	a, (#_currentGun)
      001E96 D6 02                 7025 	sub	a, #0x02
      001E98 20 1E                 7026 	jr	NZ, 00108$
                                   7027 ;main.c:776: projectiles[oldestProjectile] = missile;
      001E9A 21r54r00              7028 	ld	hl, #_oldestProjectile
      001E9D 4E                    7029 	ld	c, (hl)
      001E9E 06 00                 7030 	ld	b, #0x00
      001EA0 69                    7031 	ld	l, c
      001EA1 60                    7032 	ld	h, b
      001EA2 29                    7033 	add	hl, hl
      001EA3 09                    7034 	add	hl, bc
      001EA4 29                    7035 	add	hl, hl
      001EA5 29                    7036 	add	hl, hl
      001EA6 01r50r00              7037 	ld	bc,#_projectiles
      001EA9 09                    7038 	add	hl,bc
      001EAA 11 0C 00              7039 	ld	de, #0x000c
      001EAD D5                    7040 	push	de
      001EAE 11r48r00              7041 	ld	de, #_missile
      001EB1 D5                    7042 	push	de
      001EB2 E5                    7043 	push	hl
      001EB3 CDr00r00              7044 	call	___memcpy
      001EB6 E8 06                 7045 	add	sp, #6
      001EB8                       7046 00108$:
                                   7047 ;main.c:778: projectiles[oldestProjectile].x = playerDrawX;
      001EB8 21r54r00              7048 	ld	hl, #_oldestProjectile
      001EBB 4E                    7049 	ld	c, (hl)
      001EBC 06 00                 7050 	ld	b, #0x00
      001EBE 69                    7051 	ld	l, c
      001EBF 60                    7052 	ld	h, b
      001EC0 29                    7053 	add	hl, hl
      001EC1 09                    7054 	add	hl, bc
      001EC2 29                    7055 	add	hl, hl
      001EC3 29                    7056 	add	hl, hl
      001EC4 01r50r00              7057 	ld	bc,#_projectiles
      001EC7 09                    7058 	add	hl,bc
      001EC8 E5                    7059 	push	hl
      001EC9 FAr5Er00              7060 	ld	a, (#_playerDrawX)
      001ECC E1                    7061 	pop	hl
      001ECD 0E 00                 7062 	ld	c, #0x00
      001ECF 22                    7063 	ld	(hl+), a
      001ED0 71                    7064 	ld	(hl), c
                                   7065 ;main.c:779: projectiles[oldestProjectile].y = playerDrawY;
      001ED1 21r54r00              7066 	ld	hl, #_oldestProjectile
      001ED4 4E                    7067 	ld	c, (hl)
      001ED5 06 00                 7068 	ld	b, #0x00
      001ED7 69                    7069 	ld	l, c
      001ED8 60                    7070 	ld	h, b
      001ED9 29                    7071 	add	hl, hl
      001EDA 09                    7072 	add	hl, bc
      001EDB 29                    7073 	add	hl, hl
      001EDC 29                    7074 	add	hl, hl
      001EDD 01r50r00              7075 	ld	bc,#_projectiles
      001EE0 09                    7076 	add	hl,bc
      001EE1 23                    7077 	inc	hl
      001EE2 23                    7078 	inc	hl
      001EE3 E5                    7079 	push	hl
      001EE4 FAr5Fr00              7080 	ld	a, (#_playerDrawY)
      001EE7 E1                    7081 	pop	hl
      001EE8 0E 00                 7082 	ld	c, #0x00
      001EEA 22                    7083 	ld	(hl+), a
      001EEB 71                    7084 	ld	(hl), c
                                   7085 ;main.c:780: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      001EEC 21r54r00              7086 	ld	hl, #_oldestProjectile
      001EEF 4E                    7087 	ld	c, (hl)
      001EF0 06 00                 7088 	ld	b, #0x00
      001EF2 69                    7089 	ld	l, c
      001EF3 60                    7090 	ld	h, b
      001EF4 29                    7091 	add	hl, hl
      001EF5 09                    7092 	add	hl, bc
      001EF6 29                    7093 	add	hl, hl
      001EF7 29                    7094 	add	hl, hl
      001EF8 01r50r00              7095 	ld	bc,#_projectiles
      001EFB 09                    7096 	add	hl,bc
      001EFC 5D                    7097 	ld	e, l
      001EFD 54                    7098 	ld	d, h
      001EFE 21 05 00              7099 	ld	hl, #0x0005
      001F01 19                    7100 	add	hl, de
      001F02 4D                    7101 	ld	c, l
      001F03 44                    7102 	ld	b, h
      001F04 21 07 00              7103 	ld	hl, #0x0007
      001F07 19                    7104 	add	hl, de
      001F08 7E                    7105 	ld	a, (hl)
      001F09 C5                    7106 	push	bc
      001F0A F5                    7107 	push	af
      001F0B 33                    7108 	inc	sp
      001F0C FAr56r00              7109 	ld	a, (#_xDir)
      001F0F F5                    7110 	push	af
      001F10 33                    7111 	inc	sp
      001F11 CDr00r00              7112 	call	__muluschar
      001F14 E1                    7113 	pop	hl
      001F15 7B                    7114 	ld	a, e
      001F16 C1                    7115 	pop	bc
      001F17 02                    7116 	ld	(bc), a
                                   7117 ;main.c:781: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      001F18 21r54r00              7118 	ld	hl, #_oldestProjectile
      001F1B 4E                    7119 	ld	c, (hl)
      001F1C 06 00                 7120 	ld	b, #0x00
      001F1E 69                    7121 	ld	l, c
      001F1F 60                    7122 	ld	h, b
      001F20 29                    7123 	add	hl, hl
      001F21 09                    7124 	add	hl, bc
      001F22 29                    7125 	add	hl, hl
      001F23 29                    7126 	add	hl, hl
      001F24 01r50r00              7127 	ld	bc,#_projectiles
      001F27 09                    7128 	add	hl,bc
      001F28 5D                    7129 	ld	e, l
      001F29 54                    7130 	ld	d, h
      001F2A 21 06 00              7131 	ld	hl, #0x0006
      001F2D 19                    7132 	add	hl, de
      001F2E 4D                    7133 	ld	c, l
      001F2F 44                    7134 	ld	b, h
      001F30 21 07 00              7135 	ld	hl, #0x0007
      001F33 19                    7136 	add	hl, de
      001F34 7E                    7137 	ld	a, (hl)
      001F35 C5                    7138 	push	bc
      001F36 F5                    7139 	push	af
      001F37 33                    7140 	inc	sp
      001F38 FAr57r00              7141 	ld	a, (#_yDir)
      001F3B F5                    7142 	push	af
      001F3C 33                    7143 	inc	sp
      001F3D CDr00r00              7144 	call	__muluschar
      001F40 E1                    7145 	pop	hl
      001F41 7B                    7146 	ld	a, e
      001F42 C1                    7147 	pop	bc
      001F43 02                    7148 	ld	(bc), a
                                   7149 ;main.c:764: oldestProjectile += 1;
      001F44 FAr54r00              7150 	ld	a, (#_oldestProjectile)
      001F47 F8 05                 7151 	ldhl	sp,	#5
      001F49 77                    7152 	ld	(hl), a
                                   7153 ;main.c:770: projectiles[oldestProjectile] = singleGun;
      001F4A 21r54r00              7154 	ld	hl, #_oldestProjectile
      001F4D 4E                    7155 	ld	c, (hl)
      001F4E 06 00                 7156 	ld	b, #0x00
      001F50 69                    7157 	ld	l, c
      001F51 60                    7158 	ld	h, b
      001F52 29                    7159 	add	hl, hl
      001F53 09                    7160 	add	hl, bc
      001F54 29                    7161 	add	hl, hl
      001F55 29                    7162 	add	hl, hl
                                   7163 ;main.c:786: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      001F56 01r50r00              7164 	ld	bc,#_projectiles
      001F59 09                    7165 	add	hl,bc
      001F5A 4D                    7166 	ld	c, l
      001F5B 44                    7167 	ld	b, h
      001F5C F8 05                 7168 	ldhl	sp,	#5
      001F5E 7E                    7169 	ld	a, (hl)
      001F5F C6 1E                 7170 	add	a, #0x1e
      001F61 77                    7171 	ld	(hl), a
      001F62 21 0B 00              7172 	ld	hl, #0x000b
      001F65 09                    7173 	add	hl, bc
      001F66 7E                    7174 	ld	a, (hl)
      001F67 F8 04                 7175 	ldhl	sp,	#4
      001F69 77                    7176 	ld	(hl), a
                                   7177 ;main.c:785: if (yDir != 0 && xDir == 0) {
      001F6A FAr57r00              7178 	ld	a, (#_yDir)
      001F6D B7                    7179 	or	a, a
      001F6E CArAEr20              7180 	jp	Z, 00135$
      001F71 FAr56r00              7181 	ld	a, (#_xDir)
      001F74 B7                    7182 	or	a, a
      001F75 C2rAEr20              7183 	jp	NZ, 00135$
                                   7184 ;main.c:786: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
                                   7185 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001F78 F8 05                 7186 	ldhl	sp,	#5
      001F7A 7E                    7187 	ld	a, (hl)
      001F7B F8 02                 7188 	ldhl	sp,	#2
      001F7D 22                    7189 	ld	(hl+), a
      001F7E 36 00                 7190 	ld	(hl), #0x00
      001F80 3E 02                 7191 	ld	a, #0x02
      001F82                       7192 00245$:
      001F82 F8 02                 7193 	ldhl	sp,	#2
      001F84 CB 26                 7194 	sla	(hl)
      001F86 23                    7195 	inc	hl
      001F87 CB 16                 7196 	rl	(hl)
      001F89 3D                    7197 	dec	a
      001F8A 20 F6                 7198 	jr	NZ, 00245$
      001F8C 2B                    7199 	dec	hl
      001F8D 2A                    7200 	ld	a, (hl+)
      001F8E 5F                    7201 	ld	e, a
      001F8F 56                    7202 	ld	d, (hl)
      001F90 21r00r00              7203 	ld	hl, #_shadow_OAM
      001F93 19                    7204 	add	hl, de
      001F94 33                    7205 	inc	sp
      001F95 33                    7206 	inc	sp
      001F96 5D                    7207 	ld	e, l
      001F97 54                    7208 	ld	d, h
      001F98 D5                    7209 	push	de
      001F99 21 02 00              7210 	ld	hl, #0x0002
      001F9C 19                    7211 	add	hl, de
      001F9D E5                    7212 	push	hl
      001F9E 7D                    7213 	ld	a, l
      001F9F F8 04                 7214 	ldhl	sp,	#4
      001FA1 77                    7215 	ld	(hl), a
      001FA2 E1                    7216 	pop	hl
      001FA3 7C                    7217 	ld	a, h
      001FA4 F8 03                 7218 	ldhl	sp,	#3
      001FA6 32                    7219 	ld	(hl-), a
      001FA7 2A                    7220 	ld	a, (hl+)
      001FA8 5F                    7221 	ld	e, a
      001FA9 2A                    7222 	ld	a, (hl+)
      001FAA 57                    7223 	ld	d, a
      001FAB 7E                    7224 	ld	a, (hl)
      001FAC 12                    7225 	ld	(de), a
                                   7226 ;main.c:764: oldestProjectile += 1;
      001FAD FAr54r00              7227 	ld	a, (#_oldestProjectile)
                                   7228 ;main.c:786: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      001FB0 C6 1E                 7229 	add	a, #0x1e
      001FB2 F8 05                 7230 	ldhl	sp,	#5
      001FB4 77                    7231 	ld	(hl), a
                                   7232 ;main.c:787: if (yDir == 1) {
      001FB5 FAr57r00              7233 	ld	a, (#_yDir)
      001FB8 3D                    7234 	dec	a
      001FB9 20 7A                 7235 	jr	NZ, 00110$
                                   7236 ;main.c:788: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   7237 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001FBB F8 05                 7238 	ldhl	sp,	#5
      001FBD 3A                    7239 	ld	a, (hl-)
      001FBE 22                    7240 	ld	(hl+), a
      001FBF 36 00                 7241 	ld	(hl), #0x00
      001FC1 3E 02                 7242 	ld	a, #0x02
      001FC3                       7243 00248$:
      001FC3 F8 04                 7244 	ldhl	sp,	#4
      001FC5 CB 26                 7245 	sla	(hl)
      001FC7 23                    7246 	inc	hl
      001FC8 CB 16                 7247 	rl	(hl)
      001FCA 3D                    7248 	dec	a
      001FCB 20 F6                 7249 	jr	NZ, 00248$
      001FCD 2B                    7250 	dec	hl
      001FCE 2A                    7251 	ld	a, (hl+)
      001FCF 5F                    7252 	ld	e, a
      001FD0 56                    7253 	ld	d, (hl)
      001FD1 21r00r00              7254 	ld	hl, #_shadow_OAM
      001FD4 19                    7255 	add	hl, de
      001FD5 E5                    7256 	push	hl
      001FD6 7D                    7257 	ld	a, l
      001FD7 F8 04                 7258 	ldhl	sp,	#4
      001FD9 77                    7259 	ld	(hl), a
      001FDA E1                    7260 	pop	hl
      001FDB 7C                    7261 	ld	a, h
      001FDC F8 03                 7262 	ldhl	sp,	#3
      001FDE 32                    7263 	ld	(hl-), a
      001FDF 2A                    7264 	ld	a, (hl+)
      001FE0 5F                    7265 	ld	e, a
      001FE1 56                    7266 	ld	d, (hl)
      001FE2 21 03 00              7267 	ld	hl, #0x0003
      001FE5 19                    7268 	add	hl, de
      001FE6 E5                    7269 	push	hl
      001FE7 7D                    7270 	ld	a, l
      001FE8 F8 06                 7271 	ldhl	sp,	#6
      001FEA 77                    7272 	ld	(hl), a
      001FEB E1                    7273 	pop	hl
      001FEC 7C                    7274 	ld	a, h
      001FED F8 05                 7275 	ldhl	sp,	#5
      001FEF 32                    7276 	ld	(hl-), a
      001FF0 2A                    7277 	ld	a,	(hl+)
      001FF1 66                    7278 	ld	h, (hl)
      001FF2 6F                    7279 	ld	l, a
      001FF3 36 40                 7280 	ld	(hl), #0x40
                                   7281 ;main.c:789: projectiles[oldestProjectile].offset = 4;
      001FF5 21r54r00              7282 	ld	hl, #_oldestProjectile
      001FF8 4E                    7283 	ld	c, (hl)
      001FF9 06 00                 7284 	ld	b, #0x00
      001FFB 69                    7285 	ld	l, c
      001FFC 60                    7286 	ld	h, b
      001FFD 29                    7287 	add	hl, hl
      001FFE 09                    7288 	add	hl, bc
      001FFF 29                    7289 	add	hl, hl
      002000 29                    7290 	add	hl, hl
      002001 E5                    7291 	push	hl
      002002 7D                    7292 	ld	a, l
      002003 F8 06                 7293 	ldhl	sp,	#6
      002005 77                    7294 	ld	(hl), a
      002006 E1                    7295 	pop	hl
      002007 7C                    7296 	ld	a, h
      002008 F8 05                 7297 	ldhl	sp,	#5
      00200A 32                    7298 	ld	(hl-), a
      00200B 2A                    7299 	ld	a, (hl+)
      00200C 5F                    7300 	ld	e, a
      00200D 56                    7301 	ld	d, (hl)
      00200E 21r50r00              7302 	ld	hl, #_projectiles
      002011 19                    7303 	add	hl, de
      002012 E5                    7304 	push	hl
      002013 7D                    7305 	ld	a, l
      002014 F8 04                 7306 	ldhl	sp,	#4
      002016 77                    7307 	ld	(hl), a
      002017 E1                    7308 	pop	hl
      002018 7C                    7309 	ld	a, h
      002019 F8 03                 7310 	ldhl	sp,	#3
      00201B 32                    7311 	ld	(hl-), a
      00201C 2A                    7312 	ld	a, (hl+)
      00201D 5F                    7313 	ld	e, a
      00201E 56                    7314 	ld	d, (hl)
      00201F 21 04 00              7315 	ld	hl, #0x0004
      002022 19                    7316 	add	hl, de
      002023 E5                    7317 	push	hl
      002024 7D                    7318 	ld	a, l
      002025 F8 06                 7319 	ldhl	sp,	#6
      002027 77                    7320 	ld	(hl), a
      002028 E1                    7321 	pop	hl
      002029 7C                    7322 	ld	a, h
      00202A F8 05                 7323 	ldhl	sp,	#5
      00202C 32                    7324 	ld	(hl-), a
      00202D 2A                    7325 	ld	a,	(hl+)
      00202E 66                    7326 	ld	h, (hl)
      00202F 6F                    7327 	ld	l, a
      002030 36 04                 7328 	ld	(hl), #0x04
      002032 C3rDFr23              7329 	jp	00136$
      002035                       7330 00110$:
                                   7331 ;main.c:792: set_sprite_prop(30+oldestProjectile, 0); 
                                   7332 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002035 F8 05                 7333 	ldhl	sp,	#5
      002037 3A                    7334 	ld	a, (hl-)
      002038 22                    7335 	ld	(hl+), a
      002039 36 00                 7336 	ld	(hl), #0x00
      00203B 3E 02                 7337 	ld	a, #0x02
      00203D                       7338 00249$:
      00203D F8 04                 7339 	ldhl	sp,	#4
      00203F CB 26                 7340 	sla	(hl)
      002041 23                    7341 	inc	hl
      002042 CB 16                 7342 	rl	(hl)
      002044 3D                    7343 	dec	a
      002045 20 F6                 7344 	jr	NZ, 00249$
      002047 11r00r00              7345 	ld	de, #_shadow_OAM
      00204A 3A                    7346 	ld	a, (hl-)
      00204B 6E                    7347 	ld	l, (hl)
      00204C 67                    7348 	ld	h, a
      00204D 19                    7349 	add	hl, de
      00204E E5                    7350 	push	hl
      00204F 7D                    7351 	ld	a, l
      002050 F8 04                 7352 	ldhl	sp,	#4
      002052 77                    7353 	ld	(hl), a
      002053 E1                    7354 	pop	hl
      002054 7C                    7355 	ld	a, h
      002055 F8 03                 7356 	ldhl	sp,	#3
      002057 32                    7357 	ld	(hl-), a
      002058 2A                    7358 	ld	a, (hl+)
      002059 5F                    7359 	ld	e, a
      00205A 56                    7360 	ld	d, (hl)
      00205B 21 03 00              7361 	ld	hl, #0x0003
      00205E 19                    7362 	add	hl, de
      00205F E5                    7363 	push	hl
      002060 7D                    7364 	ld	a, l
      002061 F8 06                 7365 	ldhl	sp,	#6
      002063 77                    7366 	ld	(hl), a
      002064 E1                    7367 	pop	hl
      002065 7C                    7368 	ld	a, h
      002066 F8 05                 7369 	ldhl	sp,	#5
      002068 32                    7370 	ld	(hl-), a
      002069 2A                    7371 	ld	a,	(hl+)
      00206A 66                    7372 	ld	h, (hl)
      00206B 6F                    7373 	ld	l, a
      00206C 36 00                 7374 	ld	(hl), #0x00
                                   7375 ;main.c:793: projectiles[oldestProjectile].offset = 12;
      00206E 21r54r00              7376 	ld	hl, #_oldestProjectile
      002071 4E                    7377 	ld	c, (hl)
      002072 06 00                 7378 	ld	b, #0x00
      002074 69                    7379 	ld	l, c
      002075 60                    7380 	ld	h, b
      002076 29                    7381 	add	hl, hl
      002077 09                    7382 	add	hl, bc
      002078 29                    7383 	add	hl, hl
      002079 29                    7384 	add	hl, hl
      00207A E5                    7385 	push	hl
      00207B 7D                    7386 	ld	a, l
      00207C F8 06                 7387 	ldhl	sp,	#6
      00207E 77                    7388 	ld	(hl), a
      00207F E1                    7389 	pop	hl
      002080 7C                    7390 	ld	a, h
      002081 F8 05                 7391 	ldhl	sp,	#5
      002083 32                    7392 	ld	(hl-), a
      002084 2A                    7393 	ld	a, (hl+)
      002085 5F                    7394 	ld	e, a
      002086 56                    7395 	ld	d, (hl)
      002087 21r50r00              7396 	ld	hl, #_projectiles
      00208A 19                    7397 	add	hl, de
      00208B E5                    7398 	push	hl
      00208C 7D                    7399 	ld	a, l
      00208D F8 04                 7400 	ldhl	sp,	#4
      00208F 77                    7401 	ld	(hl), a
      002090 E1                    7402 	pop	hl
      002091 7C                    7403 	ld	a, h
      002092 F8 03                 7404 	ldhl	sp,	#3
      002094 32                    7405 	ld	(hl-), a
      002095 2A                    7406 	ld	a, (hl+)
      002096 5F                    7407 	ld	e, a
      002097 56                    7408 	ld	d, (hl)
      002098 21 04 00              7409 	ld	hl, #0x0004
      00209B 19                    7410 	add	hl, de
      00209C E5                    7411 	push	hl
      00209D 7D                    7412 	ld	a, l
      00209E F8 06                 7413 	ldhl	sp,	#6
      0020A0 77                    7414 	ld	(hl), a
      0020A1 E1                    7415 	pop	hl
      0020A2 7C                    7416 	ld	a, h
      0020A3 F8 05                 7417 	ldhl	sp,	#5
      0020A5 32                    7418 	ld	(hl-), a
      0020A6 2A                    7419 	ld	a,	(hl+)
      0020A7 66                    7420 	ld	h, (hl)
      0020A8 6F                    7421 	ld	l, a
      0020A9 36 0C                 7422 	ld	(hl), #0x0c
      0020AB C3rDFr23              7423 	jp	00136$
      0020AE                       7424 00135$:
                                   7425 ;main.c:797: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   7426 ;main.c:796: else if (xDir != 0 && yDir == 0) {
      0020AE FAr56r00              7427 	ld	a, (#_xDir)
      0020B1 B7                    7428 	or	a, a
      0020B2 CArF6r21              7429 	jp	Z, 00131$
      0020B5 FAr57r00              7430 	ld	a, (#_yDir)
      0020B8 B7                    7431 	or	a, a
      0020B9 C2rF6r21              7432 	jp	NZ, 00131$
                                   7433 ;main.c:797: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      0020BC F8 04                 7434 	ldhl	sp,	#4
      0020BE 34                    7435 	inc	(hl)
      0020BF 34                    7436 	inc	(hl)
                                   7437 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0020C0 23                    7438 	inc	hl
      0020C1 7E                    7439 	ld	a, (hl)
      0020C2 F8 02                 7440 	ldhl	sp,	#2
      0020C4 22                    7441 	ld	(hl+), a
      0020C5 36 00                 7442 	ld	(hl), #0x00
      0020C7 3E 02                 7443 	ld	a, #0x02
      0020C9                       7444 00250$:
      0020C9 F8 02                 7445 	ldhl	sp,	#2
      0020CB CB 26                 7446 	sla	(hl)
      0020CD 23                    7447 	inc	hl
      0020CE CB 16                 7448 	rl	(hl)
      0020D0 3D                    7449 	dec	a
      0020D1 20 F6                 7450 	jr	NZ, 00250$
      0020D3 2B                    7451 	dec	hl
      0020D4 2A                    7452 	ld	a, (hl+)
      0020D5 5F                    7453 	ld	e, a
      0020D6 56                    7454 	ld	d, (hl)
      0020D7 21r00r00              7455 	ld	hl, #_shadow_OAM
      0020DA 19                    7456 	add	hl, de
      0020DB 33                    7457 	inc	sp
      0020DC 33                    7458 	inc	sp
      0020DD 5D                    7459 	ld	e, l
      0020DE 54                    7460 	ld	d, h
      0020DF D5                    7461 	push	de
      0020E0 21 02 00              7462 	ld	hl, #0x0002
      0020E3 19                    7463 	add	hl, de
      0020E4 E5                    7464 	push	hl
      0020E5 7D                    7465 	ld	a, l
      0020E6 F8 04                 7466 	ldhl	sp,	#4
      0020E8 77                    7467 	ld	(hl), a
      0020E9 E1                    7468 	pop	hl
      0020EA 7C                    7469 	ld	a, h
      0020EB F8 03                 7470 	ldhl	sp,	#3
      0020ED 32                    7471 	ld	(hl-), a
      0020EE 2A                    7472 	ld	a, (hl+)
      0020EF 5F                    7473 	ld	e, a
      0020F0 2A                    7474 	ld	a, (hl+)
      0020F1 57                    7475 	ld	d, a
      0020F2 7E                    7476 	ld	a, (hl)
      0020F3 12                    7477 	ld	(de), a
                                   7478 ;main.c:764: oldestProjectile += 1;
      0020F4 FAr54r00              7479 	ld	a, (#_oldestProjectile)
                                   7480 ;main.c:786: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0020F7 C6 1E                 7481 	add	a, #0x1e
      0020F9 F8 05                 7482 	ldhl	sp,	#5
      0020FB 77                    7483 	ld	(hl), a
                                   7484 ;main.c:798: if (xDir == 1) {
      0020FC FAr56r00              7485 	ld	a, (#_xDir)
      0020FF 3D                    7486 	dec	a
      002100 20 7A                 7487 	jr	NZ, 00113$
                                   7488 ;main.c:799: set_sprite_prop(30+oldestProjectile, 0);
                                   7489 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002102 F8 05                 7490 	ldhl	sp,	#5
      002104 3A                    7491 	ld	a, (hl-)
      002105 22                    7492 	ld	(hl+), a
      002106 36 00                 7493 	ld	(hl), #0x00
      002108 3E 02                 7494 	ld	a, #0x02
      00210A                       7495 00253$:
      00210A F8 04                 7496 	ldhl	sp,	#4
      00210C CB 26                 7497 	sla	(hl)
      00210E 23                    7498 	inc	hl
      00210F CB 16                 7499 	rl	(hl)
      002111 3D                    7500 	dec	a
      002112 20 F6                 7501 	jr	NZ, 00253$
      002114 2B                    7502 	dec	hl
      002115 2A                    7503 	ld	a, (hl+)
      002116 5F                    7504 	ld	e, a
      002117 56                    7505 	ld	d, (hl)
      002118 21r00r00              7506 	ld	hl, #_shadow_OAM
      00211B 19                    7507 	add	hl, de
      00211C E5                    7508 	push	hl
      00211D 7D                    7509 	ld	a, l
      00211E F8 04                 7510 	ldhl	sp,	#4
      002120 77                    7511 	ld	(hl), a
      002121 E1                    7512 	pop	hl
      002122 7C                    7513 	ld	a, h
      002123 F8 03                 7514 	ldhl	sp,	#3
      002125 32                    7515 	ld	(hl-), a
      002126 2A                    7516 	ld	a, (hl+)
      002127 5F                    7517 	ld	e, a
      002128 56                    7518 	ld	d, (hl)
      002129 21 03 00              7519 	ld	hl, #0x0003
      00212C 19                    7520 	add	hl, de
      00212D E5                    7521 	push	hl
      00212E 7D                    7522 	ld	a, l
      00212F F8 06                 7523 	ldhl	sp,	#6
      002131 77                    7524 	ld	(hl), a
      002132 E1                    7525 	pop	hl
      002133 7C                    7526 	ld	a, h
      002134 F8 05                 7527 	ldhl	sp,	#5
      002136 32                    7528 	ld	(hl-), a
      002137 2A                    7529 	ld	a,	(hl+)
      002138 66                    7530 	ld	h, (hl)
      002139 6F                    7531 	ld	l, a
      00213A 36 00                 7532 	ld	(hl), #0x00
                                   7533 ;main.c:800: projectiles[oldestProjectile].offset = 12;
      00213C 21r54r00              7534 	ld	hl, #_oldestProjectile
      00213F 4E                    7535 	ld	c, (hl)
      002140 06 00                 7536 	ld	b, #0x00
      002142 69                    7537 	ld	l, c
      002143 60                    7538 	ld	h, b
      002144 29                    7539 	add	hl, hl
      002145 09                    7540 	add	hl, bc
      002146 29                    7541 	add	hl, hl
      002147 29                    7542 	add	hl, hl
      002148 E5                    7543 	push	hl
      002149 7D                    7544 	ld	a, l
      00214A F8 06                 7545 	ldhl	sp,	#6
      00214C 77                    7546 	ld	(hl), a
      00214D E1                    7547 	pop	hl
      00214E 7C                    7548 	ld	a, h
      00214F F8 05                 7549 	ldhl	sp,	#5
      002151 32                    7550 	ld	(hl-), a
      002152 2A                    7551 	ld	a, (hl+)
      002153 5F                    7552 	ld	e, a
      002154 56                    7553 	ld	d, (hl)
      002155 21r50r00              7554 	ld	hl, #_projectiles
      002158 19                    7555 	add	hl, de
      002159 E5                    7556 	push	hl
      00215A 7D                    7557 	ld	a, l
      00215B F8 04                 7558 	ldhl	sp,	#4
      00215D 77                    7559 	ld	(hl), a
      00215E E1                    7560 	pop	hl
      00215F 7C                    7561 	ld	a, h
      002160 F8 03                 7562 	ldhl	sp,	#3
      002162 32                    7563 	ld	(hl-), a
      002163 2A                    7564 	ld	a, (hl+)
      002164 5F                    7565 	ld	e, a
      002165 56                    7566 	ld	d, (hl)
      002166 21 04 00              7567 	ld	hl, #0x0004
      002169 19                    7568 	add	hl, de
      00216A E5                    7569 	push	hl
      00216B 7D                    7570 	ld	a, l
      00216C F8 06                 7571 	ldhl	sp,	#6
      00216E 77                    7572 	ld	(hl), a
      00216F E1                    7573 	pop	hl
      002170 7C                    7574 	ld	a, h
      002171 F8 05                 7575 	ldhl	sp,	#5
      002173 32                    7576 	ld	(hl-), a
      002174 2A                    7577 	ld	a,	(hl+)
      002175 66                    7578 	ld	h, (hl)
      002176 6F                    7579 	ld	l, a
      002177 36 0C                 7580 	ld	(hl), #0x0c
      002179 C3rDFr23              7581 	jp	00136$
      00217C                       7582 00113$:
                                   7583 ;main.c:803: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
                                   7584 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00217C F8 05                 7585 	ldhl	sp,	#5
      00217E 3A                    7586 	ld	a, (hl-)
      00217F 22                    7587 	ld	(hl+), a
      002180 36 00                 7588 	ld	(hl), #0x00
      002182 3E 02                 7589 	ld	a, #0x02
      002184                       7590 00254$:
      002184 F8 04                 7591 	ldhl	sp,	#4
      002186 CB 26                 7592 	sla	(hl)
      002188 23                    7593 	inc	hl
      002189 CB 16                 7594 	rl	(hl)
      00218B 3D                    7595 	dec	a
      00218C 20 F6                 7596 	jr	NZ, 00254$
      00218E 2B                    7597 	dec	hl
      00218F 2A                    7598 	ld	a, (hl+)
      002190 5F                    7599 	ld	e, a
      002191 56                    7600 	ld	d, (hl)
      002192 21r00r00              7601 	ld	hl, #_shadow_OAM
      002195 19                    7602 	add	hl, de
      002196 E5                    7603 	push	hl
      002197 7D                    7604 	ld	a, l
      002198 F8 04                 7605 	ldhl	sp,	#4
      00219A 77                    7606 	ld	(hl), a
      00219B E1                    7607 	pop	hl
      00219C 7C                    7608 	ld	a, h
      00219D F8 03                 7609 	ldhl	sp,	#3
      00219F 32                    7610 	ld	(hl-), a
      0021A0 2A                    7611 	ld	a, (hl+)
      0021A1 5F                    7612 	ld	e, a
      0021A2 56                    7613 	ld	d, (hl)
      0021A3 21 03 00              7614 	ld	hl, #0x0003
      0021A6 19                    7615 	add	hl, de
      0021A7 E5                    7616 	push	hl
      0021A8 7D                    7617 	ld	a, l
      0021A9 F8 06                 7618 	ldhl	sp,	#6
      0021AB 77                    7619 	ld	(hl), a
      0021AC E1                    7620 	pop	hl
      0021AD 7C                    7621 	ld	a, h
      0021AE F8 05                 7622 	ldhl	sp,	#5
      0021B0 32                    7623 	ld	(hl-), a
      0021B1 2A                    7624 	ld	a,	(hl+)
      0021B2 66                    7625 	ld	h, (hl)
      0021B3 6F                    7626 	ld	l, a
      0021B4 36 20                 7627 	ld	(hl), #0x20
                                   7628 ;main.c:804: projectiles[oldestProjectile].offset = 12;
      0021B6 21r54r00              7629 	ld	hl, #_oldestProjectile
      0021B9 4E                    7630 	ld	c, (hl)
      0021BA 06 00                 7631 	ld	b, #0x00
      0021BC 69                    7632 	ld	l, c
      0021BD 60                    7633 	ld	h, b
      0021BE 29                    7634 	add	hl, hl
      0021BF 09                    7635 	add	hl, bc
      0021C0 29                    7636 	add	hl, hl
      0021C1 29                    7637 	add	hl, hl
      0021C2 E5                    7638 	push	hl
      0021C3 7D                    7639 	ld	a, l
      0021C4 F8 06                 7640 	ldhl	sp,	#6
      0021C6 77                    7641 	ld	(hl), a
      0021C7 E1                    7642 	pop	hl
      0021C8 7C                    7643 	ld	a, h
      0021C9 F8 05                 7644 	ldhl	sp,	#5
      0021CB 32                    7645 	ld	(hl-), a
      0021CC 2A                    7646 	ld	a, (hl+)
      0021CD 5F                    7647 	ld	e, a
      0021CE 56                    7648 	ld	d, (hl)
      0021CF 21r50r00              7649 	ld	hl, #_projectiles
      0021D2 19                    7650 	add	hl, de
      0021D3 E5                    7651 	push	hl
      0021D4 7D                    7652 	ld	a, l
      0021D5 F8 04                 7653 	ldhl	sp,	#4
      0021D7 77                    7654 	ld	(hl), a
      0021D8 E1                    7655 	pop	hl
      0021D9 7C                    7656 	ld	a, h
      0021DA F8 03                 7657 	ldhl	sp,	#3
      0021DC 32                    7658 	ld	(hl-), a
      0021DD 2A                    7659 	ld	a, (hl+)
      0021DE 5F                    7660 	ld	e, a
      0021DF 56                    7661 	ld	d, (hl)
      0021E0 21 04 00              7662 	ld	hl, #0x0004
      0021E3 19                    7663 	add	hl, de
      0021E4 E5                    7664 	push	hl
      0021E5 7D                    7665 	ld	a, l
      0021E6 F8 06                 7666 	ldhl	sp,	#6
      0021E8 77                    7667 	ld	(hl), a
      0021E9 E1                    7668 	pop	hl
      0021EA 7C                    7669 	ld	a, h
      0021EB F8 05                 7670 	ldhl	sp,	#5
      0021ED 32                    7671 	ld	(hl-), a
      0021EE 2A                    7672 	ld	a,	(hl+)
      0021EF 66                    7673 	ld	h, (hl)
      0021F0 6F                    7674 	ld	l, a
      0021F1 36 0C                 7675 	ld	(hl), #0x0c
      0021F3 C3rDFr23              7676 	jp	00136$
      0021F6                       7677 00131$:
                                   7678 ;main.c:808: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      0021F6 F8 04                 7679 	ldhl	sp,	#4
      0021F8 7E                    7680 	ld	a, (hl)
      0021F9 C6 04                 7681 	add	a, #0x04
      0021FB F8 01                 7682 	ldhl	sp,	#1
      0021FD 77                    7683 	ld	(hl), a
                                   7684 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0021FE F8 05                 7685 	ldhl	sp,	#5
      002200 3A                    7686 	ld	a, (hl-)
      002201 22                    7687 	ld	(hl+), a
      002202 36 00                 7688 	ld	(hl), #0x00
      002204 3E 02                 7689 	ld	a, #0x02
      002206                       7690 00255$:
      002206 F8 04                 7691 	ldhl	sp,	#4
      002208 CB 26                 7692 	sla	(hl)
      00220A 23                    7693 	inc	hl
      00220B CB 16                 7694 	rl	(hl)
      00220D 3D                    7695 	dec	a
      00220E 20 F6                 7696 	jr	NZ, 00255$
      002210 2B                    7697 	dec	hl
      002211 2A                    7698 	ld	a, (hl+)
      002212 5F                    7699 	ld	e, a
      002213 56                    7700 	ld	d, (hl)
      002214 21r00r00              7701 	ld	hl, #_shadow_OAM
      002217 19                    7702 	add	hl, de
      002218 E5                    7703 	push	hl
      002219 7D                    7704 	ld	a, l
      00221A F8 04                 7705 	ldhl	sp,	#4
      00221C 77                    7706 	ld	(hl), a
      00221D E1                    7707 	pop	hl
      00221E 7C                    7708 	ld	a, h
      00221F F8 03                 7709 	ldhl	sp,	#3
      002221 32                    7710 	ld	(hl-), a
      002222 2A                    7711 	ld	a, (hl+)
      002223 5F                    7712 	ld	e, a
      002224 56                    7713 	ld	d, (hl)
      002225 21 02 00              7714 	ld	hl, #0x0002
      002228 19                    7715 	add	hl, de
      002229 E5                    7716 	push	hl
      00222A 7D                    7717 	ld	a, l
      00222B F8 06                 7718 	ldhl	sp,	#6
      00222D 77                    7719 	ld	(hl), a
      00222E E1                    7720 	pop	hl
      00222F 7C                    7721 	ld	a, h
      002230 F8 05                 7722 	ldhl	sp,	#5
      002232 32                    7723 	ld	(hl-), a
      002233 2A                    7724 	ld	a, (hl+)
      002234 5F                    7725 	ld	e, a
      002235 56                    7726 	ld	d, (hl)
      002236 F8 01                 7727 	ldhl	sp,	#1
      002238 7E                    7728 	ld	a, (hl)
      002239 12                    7729 	ld	(de), a
                                   7730 ;main.c:809: if (xDir == 1 && yDir == -1) {
      00223A FAr56r00              7731 	ld	a, (#_xDir)
      00223D 3D                    7732 	dec	a
      00223E 3E 01                 7733 	ld	a, #0x01
      002240 28 01                 7734 	jr	Z, 00257$
      002242 AF                    7735 	xor	a, a
      002243                       7736 00257$:
      002243 F8 02                 7737 	ldhl	sp,	#2
      002245 77                    7738 	ld	(hl), a
                                   7739 ;main.c:764: oldestProjectile += 1;
      002246 FAr54r00              7740 	ld	a, (#_oldestProjectile)
      002249 F8 05                 7741 	ldhl	sp,	#5
      00224B 77                    7742 	ld	(hl), a
                                   7743 ;main.c:809: if (xDir == 1 && yDir == -1) {
      00224C FAr57r00              7744 	ld	a, (#_yDir)
      00224F 3C                    7745 	inc	a
      002250 3E 01                 7746 	ld	a, #0x01
      002252 28 01                 7747 	jr	Z, 00259$
      002254 AF                    7748 	xor	a, a
      002255                       7749 00259$:
      002255 F8 03                 7750 	ldhl	sp,	#3
                                   7751 ;main.c:786: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002257 22                    7752 	ld	(hl+), a
      002258 23                    7753 	inc	hl
      002259 3A                    7754 	ld	a, (hl-)
      00225A C6 1E                 7755 	add	a, #0x1e
                                   7756 ;main.c:809: if (xDir == 1 && yDir == -1) {
      00225C 32                    7757 	ld	(hl-), a
      00225D 2B                    7758 	dec	hl
      00225E 7E                    7759 	ld	a, (hl)
      00225F B7                    7760 	or	a, a
      002260 CArE3r22              7761 	jp	Z, 00127$
      002263 23                    7762 	inc	hl
      002264 7E                    7763 	ld	a, (hl)
      002265 B7                    7764 	or	a, a
      002266 28 7B                 7765 	jr	Z, 00127$
                                   7766 ;main.c:810: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      002268 23                    7767 	inc	hl
      002269 2A                    7768 	ld	a, (hl+)
      00226A 77                    7769 	ld	(hl), a
                                   7770 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00226B 3A                    7771 	ld	a, (hl-)
      00226C 22                    7772 	ld	(hl+), a
      00226D 36 00                 7773 	ld	(hl), #0x00
      00226F 3E 02                 7774 	ld	a, #0x02
      002271                       7775 00260$:
      002271 F8 04                 7776 	ldhl	sp,	#4
      002273 CB 26                 7777 	sla	(hl)
      002275 23                    7778 	inc	hl
      002276 CB 16                 7779 	rl	(hl)
      002278 3D                    7780 	dec	a
      002279 20 F6                 7781 	jr	NZ, 00260$
      00227B 2B                    7782 	dec	hl
      00227C 2A                    7783 	ld	a, (hl+)
      00227D 5F                    7784 	ld	e, a
      00227E 56                    7785 	ld	d, (hl)
      00227F 21r00r00              7786 	ld	hl, #_shadow_OAM
      002282 19                    7787 	add	hl, de
      002283 E5                    7788 	push	hl
      002284 7D                    7789 	ld	a, l
      002285 F8 04                 7790 	ldhl	sp,	#4
      002287 77                    7791 	ld	(hl), a
      002288 E1                    7792 	pop	hl
      002289 7C                    7793 	ld	a, h
      00228A F8 03                 7794 	ldhl	sp,	#3
      00228C 32                    7795 	ld	(hl-), a
      00228D 2A                    7796 	ld	a, (hl+)
      00228E 5F                    7797 	ld	e, a
      00228F 56                    7798 	ld	d, (hl)
      002290 21 03 00              7799 	ld	hl, #0x0003
      002293 19                    7800 	add	hl, de
      002294 E5                    7801 	push	hl
      002295 7D                    7802 	ld	a, l
      002296 F8 06                 7803 	ldhl	sp,	#6
      002298 77                    7804 	ld	(hl), a
      002299 E1                    7805 	pop	hl
      00229A 7C                    7806 	ld	a, h
      00229B F8 05                 7807 	ldhl	sp,	#5
      00229D 32                    7808 	ld	(hl-), a
      00229E 2A                    7809 	ld	a,	(hl+)
      00229F 66                    7810 	ld	h, (hl)
      0022A0 6F                    7811 	ld	l, a
      0022A1 36 00                 7812 	ld	(hl), #0x00
                                   7813 ;main.c:811: projectiles[oldestProjectile].offset = 12;
      0022A3 21r54r00              7814 	ld	hl, #_oldestProjectile
      0022A6 4E                    7815 	ld	c, (hl)
      0022A7 06 00                 7816 	ld	b, #0x00
      0022A9 69                    7817 	ld	l, c
      0022AA 60                    7818 	ld	h, b
      0022AB 29                    7819 	add	hl, hl
      0022AC 09                    7820 	add	hl, bc
      0022AD 29                    7821 	add	hl, hl
      0022AE 29                    7822 	add	hl, hl
      0022AF E5                    7823 	push	hl
      0022B0 7D                    7824 	ld	a, l
      0022B1 F8 06                 7825 	ldhl	sp,	#6
      0022B3 77                    7826 	ld	(hl), a
      0022B4 E1                    7827 	pop	hl
      0022B5 7C                    7828 	ld	a, h
      0022B6 F8 05                 7829 	ldhl	sp,	#5
      0022B8 32                    7830 	ld	(hl-), a
      0022B9 2A                    7831 	ld	a, (hl+)
      0022BA 5F                    7832 	ld	e, a
      0022BB 56                    7833 	ld	d, (hl)
      0022BC 21r50r00              7834 	ld	hl, #_projectiles
      0022BF 19                    7835 	add	hl, de
      0022C0 E5                    7836 	push	hl
      0022C1 7D                    7837 	ld	a, l
      0022C2 F8 04                 7838 	ldhl	sp,	#4
      0022C4 77                    7839 	ld	(hl), a
      0022C5 E1                    7840 	pop	hl
      0022C6 7C                    7841 	ld	a, h
      0022C7 F8 03                 7842 	ldhl	sp,	#3
      0022C9 32                    7843 	ld	(hl-), a
      0022CA 2A                    7844 	ld	a, (hl+)
      0022CB 5F                    7845 	ld	e, a
      0022CC 56                    7846 	ld	d, (hl)
      0022CD 21 04 00              7847 	ld	hl, #0x0004
      0022D0 19                    7848 	add	hl, de
      0022D1 E5                    7849 	push	hl
      0022D2 7D                    7850 	ld	a, l
      0022D3 F8 06                 7851 	ldhl	sp,	#6
      0022D5 77                    7852 	ld	(hl), a
      0022D6 E1                    7853 	pop	hl
      0022D7 7C                    7854 	ld	a, h
      0022D8 F8 05                 7855 	ldhl	sp,	#5
      0022DA 32                    7856 	ld	(hl-), a
      0022DB 2A                    7857 	ld	a,	(hl+)
      0022DC 66                    7858 	ld	h, (hl)
      0022DD 6F                    7859 	ld	l, a
      0022DE 36 0C                 7860 	ld	(hl), #0x0c
      0022E0 C3rDFr23              7861 	jp	00136$
      0022E3                       7862 00127$:
                                   7863 ;main.c:787: if (yDir == 1) {
      0022E3 FAr57r00              7864 	ld	a, (#_yDir)
      0022E6 3D                    7865 	dec	a
      0022E7 3E 01                 7866 	ld	a, #0x01
      0022E9 28 01                 7867 	jr	Z, 00262$
      0022EB AF                    7868 	xor	a, a
      0022EC                       7869 00262$:
      0022EC F8 05                 7870 	ldhl	sp,	#5
      0022EE 77                    7871 	ld	(hl), a
                                   7872 ;main.c:813: else if (xDir == 1 && yDir == 1) {
      0022EF F8 02                 7873 	ldhl	sp,	#2
      0022F1 7E                    7874 	ld	a, (hl)
      0022F2 B7                    7875 	or	a, a
      0022F3 CAr76r23              7876 	jp	Z, 00123$
      0022F6 F8 05                 7877 	ldhl	sp,	#5
      0022F8 7E                    7878 	ld	a, (hl)
      0022F9 B7                    7879 	or	a, a
      0022FA 28 7A                 7880 	jr	Z, 00123$
                                   7881 ;main.c:814: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      0022FC 2B                    7882 	dec	hl
      0022FD 2A                    7883 	ld	a, (hl+)
      0022FE 77                    7884 	ld	(hl), a
                                   7885 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0022FF 3A                    7886 	ld	a, (hl-)
      002300 22                    7887 	ld	(hl+), a
      002301 36 00                 7888 	ld	(hl), #0x00
      002303 3E 02                 7889 	ld	a, #0x02
      002305                       7890 00263$:
      002305 F8 04                 7891 	ldhl	sp,	#4
      002307 CB 26                 7892 	sla	(hl)
      002309 23                    7893 	inc	hl
      00230A CB 16                 7894 	rl	(hl)
      00230C 3D                    7895 	dec	a
      00230D 20 F6                 7896 	jr	NZ, 00263$
      00230F 2B                    7897 	dec	hl
      002310 2A                    7898 	ld	a, (hl+)
      002311 5F                    7899 	ld	e, a
      002312 56                    7900 	ld	d, (hl)
      002313 21r00r00              7901 	ld	hl, #_shadow_OAM
      002316 19                    7902 	add	hl, de
      002317 E5                    7903 	push	hl
      002318 7D                    7904 	ld	a, l
      002319 F8 04                 7905 	ldhl	sp,	#4
      00231B 77                    7906 	ld	(hl), a
      00231C E1                    7907 	pop	hl
      00231D 7C                    7908 	ld	a, h
      00231E F8 03                 7909 	ldhl	sp,	#3
      002320 32                    7910 	ld	(hl-), a
      002321 2A                    7911 	ld	a, (hl+)
      002322 5F                    7912 	ld	e, a
      002323 56                    7913 	ld	d, (hl)
      002324 21 03 00              7914 	ld	hl, #0x0003
      002327 19                    7915 	add	hl, de
      002328 E5                    7916 	push	hl
      002329 7D                    7917 	ld	a, l
      00232A F8 06                 7918 	ldhl	sp,	#6
      00232C 77                    7919 	ld	(hl), a
      00232D E1                    7920 	pop	hl
      00232E 7C                    7921 	ld	a, h
      00232F F8 05                 7922 	ldhl	sp,	#5
      002331 32                    7923 	ld	(hl-), a
      002332 2A                    7924 	ld	a,	(hl+)
      002333 66                    7925 	ld	h, (hl)
      002334 6F                    7926 	ld	l, a
      002335 36 40                 7927 	ld	(hl), #0x40
                                   7928 ;main.c:815: projectiles[oldestProjectile].offset = 4;
      002337 21r54r00              7929 	ld	hl, #_oldestProjectile
      00233A 4E                    7930 	ld	c, (hl)
      00233B 06 00                 7931 	ld	b, #0x00
      00233D 69                    7932 	ld	l, c
      00233E 60                    7933 	ld	h, b
      00233F 29                    7934 	add	hl, hl
      002340 09                    7935 	add	hl, bc
      002341 29                    7936 	add	hl, hl
      002342 29                    7937 	add	hl, hl
      002343 E5                    7938 	push	hl
      002344 7D                    7939 	ld	a, l
      002345 F8 06                 7940 	ldhl	sp,	#6
      002347 77                    7941 	ld	(hl), a
      002348 E1                    7942 	pop	hl
      002349 7C                    7943 	ld	a, h
      00234A F8 05                 7944 	ldhl	sp,	#5
      00234C 32                    7945 	ld	(hl-), a
      00234D 2A                    7946 	ld	a, (hl+)
      00234E 5F                    7947 	ld	e, a
      00234F 56                    7948 	ld	d, (hl)
      002350 21r50r00              7949 	ld	hl, #_projectiles
      002353 19                    7950 	add	hl, de
      002354 E5                    7951 	push	hl
      002355 7D                    7952 	ld	a, l
      002356 F8 04                 7953 	ldhl	sp,	#4
      002358 77                    7954 	ld	(hl), a
      002359 E1                    7955 	pop	hl
      00235A 7C                    7956 	ld	a, h
      00235B F8 03                 7957 	ldhl	sp,	#3
      00235D 32                    7958 	ld	(hl-), a
      00235E 2A                    7959 	ld	a, (hl+)
      00235F 5F                    7960 	ld	e, a
      002360 56                    7961 	ld	d, (hl)
      002361 21 04 00              7962 	ld	hl, #0x0004
      002364 19                    7963 	add	hl, de
      002365 E5                    7964 	push	hl
      002366 7D                    7965 	ld	a, l
      002367 F8 06                 7966 	ldhl	sp,	#6
      002369 77                    7967 	ld	(hl), a
      00236A E1                    7968 	pop	hl
      00236B 7C                    7969 	ld	a, h
      00236C F8 05                 7970 	ldhl	sp,	#5
      00236E 32                    7971 	ld	(hl-), a
      00236F 2A                    7972 	ld	a,	(hl+)
      002370 66                    7973 	ld	h, (hl)
      002371 6F                    7974 	ld	l, a
      002372 36 04                 7975 	ld	(hl), #0x04
      002374 18 69                 7976 	jr	00136$
      002376                       7977 00123$:
                                   7978 ;main.c:817: else if (xDir == -1 && yDir == 1) {
      002376 FAr56r00              7979 	ld	a, (#_xDir)
      002379 3C                    7980 	inc	a
      00237A 3E 01                 7981 	ld	a, #0x01
      00237C 28 01                 7982 	jr	Z, 00265$
      00237E AF                    7983 	xor	a, a
      00237F                       7984 00265$:
      00237F 4F                    7985 	ld	c, a
      002380 B7                    7986 	or	a, a
      002381 28 2D                 7987 	jr	Z, 00119$
      002383 F8 05                 7988 	ldhl	sp,	#5
      002385 7E                    7989 	ld	a, (hl)
      002386 B7                    7990 	or	a, a
      002387 28 27                 7991 	jr	Z, 00119$
                                   7992 ;main.c:818: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      002389 2B                    7993 	dec	hl
                                   7994 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00238A 6E                    7995 	ld	l, (hl)
      00238B 01r00r00              7996 	ld	bc, #_shadow_OAM+0
                                   7997 ;	spillPairReg hl
                                   7998 ;	spillPairReg hl
      00238E 26 00                 7999 	ld	h, #0x00
                                   8000 ;	spillPairReg hl
                                   8001 ;	spillPairReg hl
      002390 29                    8002 	add	hl, hl
      002391 29                    8003 	add	hl, hl
      002392 09                    8004 	add	hl, bc
      002393 23                    8005 	inc	hl
      002394 23                    8006 	inc	hl
      002395 23                    8007 	inc	hl
      002396 36 60                 8008 	ld	(hl), #0x60
                                   8009 ;main.c:819: projectiles[oldestProjectile].offset = 4;
      002398 21r54r00              8010 	ld	hl, #_oldestProjectile
      00239B 4E                    8011 	ld	c, (hl)
      00239C 06 00                 8012 	ld	b, #0x00
      00239E 69                    8013 	ld	l, c
      00239F 60                    8014 	ld	h, b
      0023A0 29                    8015 	add	hl, hl
      0023A1 09                    8016 	add	hl, bc
      0023A2 29                    8017 	add	hl, hl
      0023A3 29                    8018 	add	hl, hl
      0023A4 01r50r00              8019 	ld	bc,#_projectiles
      0023A7 09                    8020 	add	hl,bc
      0023A8 01 04 00              8021 	ld	bc, #0x0004
      0023AB 09                    8022 	add	hl, bc
      0023AC 36 04                 8023 	ld	(hl), #0x04
      0023AE 18 2F                 8024 	jr	00136$
      0023B0                       8025 00119$:
                                   8026 ;main.c:821: else if (xDir == -1 && yDir == -1) {
      0023B0 79                    8027 	ld	a, c
      0023B1 B7                    8028 	or	a, a
      0023B2 28 2B                 8029 	jr	Z, 00136$
      0023B4 F8 03                 8030 	ldhl	sp,	#3
      0023B6 7E                    8031 	ld	a, (hl)
      0023B7 B7                    8032 	or	a, a
      0023B8 28 25                 8033 	jr	Z, 00136$
                                   8034 ;main.c:822: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      0023BA 23                    8035 	inc	hl
                                   8036 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0023BB 6E                    8037 	ld	l, (hl)
      0023BC 01r00r00              8038 	ld	bc, #_shadow_OAM+0
                                   8039 ;	spillPairReg hl
                                   8040 ;	spillPairReg hl
      0023BF 26 00                 8041 	ld	h, #0x00
                                   8042 ;	spillPairReg hl
                                   8043 ;	spillPairReg hl
      0023C1 29                    8044 	add	hl, hl
      0023C2 29                    8045 	add	hl, hl
      0023C3 09                    8046 	add	hl, bc
      0023C4 23                    8047 	inc	hl
      0023C5 23                    8048 	inc	hl
      0023C6 23                    8049 	inc	hl
      0023C7 36 20                 8050 	ld	(hl), #0x20
                                   8051 ;main.c:823: projectiles[oldestProjectile].offset = 12;
      0023C9 21r54r00              8052 	ld	hl, #_oldestProjectile
      0023CC 4E                    8053 	ld	c, (hl)
      0023CD 06 00                 8054 	ld	b, #0x00
      0023CF 69                    8055 	ld	l, c
      0023D0 60                    8056 	ld	h, b
      0023D1 29                    8057 	add	hl, hl
      0023D2 09                    8058 	add	hl, bc
      0023D3 29                    8059 	add	hl, hl
      0023D4 29                    8060 	add	hl, hl
      0023D5 01r50r00              8061 	ld	bc,#_projectiles
      0023D8 09                    8062 	add	hl,bc
      0023D9 01 04 00              8063 	ld	bc, #0x0004
      0023DC 09                    8064 	add	hl, bc
      0023DD 36 0C                 8065 	ld	(hl), #0x0c
      0023DF                       8066 00136$:
                                   8067 ;main.c:827: fireCooldown = projectiles[oldestProjectile].delay;
      0023DF 21r54r00              8068 	ld	hl, #_oldestProjectile
      0023E2 4E                    8069 	ld	c, (hl)
      0023E3 06 00                 8070 	ld	b, #0x00
      0023E5 69                    8071 	ld	l, c
      0023E6 60                    8072 	ld	h, b
      0023E7 29                    8073 	add	hl, hl
      0023E8 09                    8074 	add	hl, bc
      0023E9 29                    8075 	add	hl, hl
      0023EA 29                    8076 	add	hl, hl
      0023EB 01r50r00              8077 	ld	bc,#_projectiles
      0023EE 09                    8078 	add	hl,bc
      0023EF 4D                    8079 	ld	c, l
      0023F0 44                    8080 	ld	b, h
      0023F1 21 0A 00              8081 	ld	hl, #0x000a
      0023F4 09                    8082 	add	hl, bc
      0023F5 7E                    8083 	ld	a, (hl)
      0023F6 EAr55r00              8084 	ld	(#_fireCooldown),a
                                   8085 ;main.c:829: playSound(projectiles[oldestProjectile].type);
      0023F9 21 0B 00              8086 	ld	hl, #0x000b
      0023FC 09                    8087 	add	hl, bc
      0023FD 7E                    8088 	ld	a, (hl)
      0023FE F5                    8089 	push	af
      0023FF 33                    8090 	inc	sp
      002400 CDr20r0B              8091 	call	_playSound
                                   8092 ;main.c:833: }
      002403 E8 07                 8093 	add	sp, #7
      002405 C9                    8094 	ret
                                   8095 ;main.c:836: void moveProjectiles() {
                                   8096 ;	---------------------------------
                                   8097 ; Function moveProjectiles
                                   8098 ; ---------------------------------
      002406                       8099 _moveProjectiles::
      002406 E8 F9                 8100 	add	sp, #-7
                                   8101 ;main.c:837: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002408 F8 06                 8102 	ldhl	sp,	#6
      00240A 36 00                 8103 	ld	(hl), #0x00
      00240C                       8104 00112$:
      00240C 21r9Dr07              8105 	ld	hl, #_PROJECTILECOUNT
      00240F 4E                    8106 	ld	c, (hl)
      002410 F8 06                 8107 	ldhl	sp,	#6
      002412 7E                    8108 	ld	a, (hl)
      002413 91                    8109 	sub	a, c
      002414 D2r62r25              8110 	jp	NC, 00114$
                                   8111 ;main.c:838: projectiles[i].x -= xOverflow;
      002417 4E                    8112 	ld	c, (hl)
      002418 06 00                 8113 	ld	b, #0x00
      00241A 69                    8114 	ld	l, c
      00241B 60                    8115 	ld	h, b
      00241C 29                    8116 	add	hl, hl
      00241D 09                    8117 	add	hl, bc
      00241E 29                    8118 	add	hl, hl
      00241F 29                    8119 	add	hl, hl
      002420 01r50r00              8120 	ld	bc,#_projectiles
      002423 09                    8121 	add	hl,bc
      002424 33                    8122 	inc	sp
      002425 33                    8123 	inc	sp
      002426 5D                    8124 	ld	e, l
      002427 54                    8125 	ld	d, h
      002428 D5                    8126 	push	de
      002429 1A                    8127 	ld	a, (de)
      00242A 4F                    8128 	ld	c, a
      00242B 13                    8129 	inc	de
      00242C 1A                    8130 	ld	a, (de)
      00242D 47                    8131 	ld	b, a
      00242E 79                    8132 	ld	a, c
      00242F 21r64r00              8133 	ld	hl, #_xOverflow
      002432 96                    8134 	sub	a, (hl)
      002433 23                    8135 	inc	hl
      002434 4F                    8136 	ld	c, a
      002435 78                    8137 	ld	a, b
      002436 9E                    8138 	sbc	a, (hl)
      002437 47                    8139 	ld	b, a
      002438 E1                    8140 	pop	hl
      002439 E5                    8141 	push	hl
      00243A 79                    8142 	ld	a, c
      00243B 22                    8143 	ld	(hl+), a
      00243C 70                    8144 	ld	(hl), b
                                   8145 ;main.c:839: projectiles[i].y -= yOverflow;
      00243D D1                    8146 	pop	de
      00243E D5                    8147 	push	de
      00243F 21 02 00              8148 	ld	hl, #0x0002
      002442 19                    8149 	add	hl, de
      002443 E5                    8150 	push	hl
      002444 7D                    8151 	ld	a, l
      002445 F8 04                 8152 	ldhl	sp,	#4
      002447 77                    8153 	ld	(hl), a
      002448 E1                    8154 	pop	hl
      002449 7C                    8155 	ld	a, h
      00244A F8 03                 8156 	ldhl	sp,	#3
      00244C 32                    8157 	ld	(hl-), a
      00244D 2A                    8158 	ld	a, (hl+)
      00244E 5F                    8159 	ld	e, a
      00244F 56                    8160 	ld	d, (hl)
      002450 1A                    8161 	ld	a, (de)
      002451 4F                    8162 	ld	c, a
      002452 13                    8163 	inc	de
      002453 1A                    8164 	ld	a, (de)
      002454 47                    8165 	ld	b, a
      002455 79                    8166 	ld	a, c
      002456 21r66r00              8167 	ld	hl, #_yOverflow
      002459 96                    8168 	sub	a, (hl)
      00245A 23                    8169 	inc	hl
      00245B 4F                    8170 	ld	c, a
      00245C 78                    8171 	ld	a, b
      00245D 9E                    8172 	sbc	a, (hl)
      00245E 47                    8173 	ld	b, a
      00245F F8 02                 8174 	ldhl	sp,	#2
      002461 2A                    8175 	ld	a,	(hl+)
      002462 66                    8176 	ld	h, (hl)
      002463 6F                    8177 	ld	l, a
      002464 79                    8178 	ld	a, c
      002465 22                    8179 	ld	(hl+), a
      002466 70                    8180 	ld	(hl), b
                                   8181 ;main.c:841: if (projectiles[i].active) {
      002467 D1                    8182 	pop	de
      002468 D5                    8183 	push	de
      002469 21 09 00              8184 	ld	hl, #0x0009
      00246C 19                    8185 	add	hl, de
      00246D 4D                    8186 	ld	c, l
      00246E 44                    8187 	ld	b, h
      00246F 0A                    8188 	ld	a, (bc)
      002470 B7                    8189 	or	a, a
      002471 CAr5Cr25              8190 	jp	Z, 00113$
                                   8191 ;main.c:842: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      002474 F8 02                 8192 	ldhl	sp,#2
      002476 2A                    8193 	ld	a, (hl+)
      002477 5F                    8194 	ld	e, a
      002478 56                    8195 	ld	d, (hl)
      002479 1A                    8196 	ld	a, (de)
      00247A 4F                    8197 	ld	c, a
      00247B 13                    8198 	inc	de
      00247C 1A                    8199 	ld	a, (de)
      00247D 47                    8200 	ld	b, a
      00247E D1                    8201 	pop	de
      00247F D5                    8202 	push	de
      002480 21 06 00              8203 	ld	hl, #0x0006
      002483 19                    8204 	add	hl, de
      002484 5D                    8205 	ld	e, l
      002485 54                    8206 	ld	d, h
      002486 1A                    8207 	ld	a, (de)
      002487 6F                    8208 	ld	l, a
                                   8209 ;	spillPairReg hl
                                   8210 ;	spillPairReg hl
      002488 07                    8211 	rlca
      002489 9F                    8212 	sbc	a, a
      00248A 67                    8213 	ld	h, a
                                   8214 ;	spillPairReg hl
                                   8215 ;	spillPairReg hl
      00248B 09                    8216 	add	hl, bc
      00248C 4D                    8217 	ld	c, l
      00248D 44                    8218 	ld	b, h
      00248E F8 04                 8219 	ldhl	sp,	#4
      002490 79                    8220 	ld	a, c
      002491 22                    8221 	ld	(hl+), a
      002492 70                    8222 	ld	(hl), b
                                   8223 ;main.c:843: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      002493 D1                    8224 	pop	de
      002494 D5                    8225 	push	de
      002495 1A                    8226 	ld	a, (de)
      002496 4F                    8227 	ld	c, a
      002497 13                    8228 	inc	de
      002498 1A                    8229 	ld	a, (de)
      002499 47                    8230 	ld	b, a
      00249A D1                    8231 	pop	de
      00249B D5                    8232 	push	de
      00249C 21 05 00              8233 	ld	hl, #0x0005
      00249F 19                    8234 	add	hl, de
      0024A0 5D                    8235 	ld	e, l
      0024A1 54                    8236 	ld	d, h
      0024A2 1A                    8237 	ld	a, (de)
      0024A3 6F                    8238 	ld	l, a
                                   8239 ;	spillPairReg hl
                                   8240 ;	spillPairReg hl
      0024A4 07                    8241 	rlca
      0024A5 9F                    8242 	sbc	a, a
      0024A6 67                    8243 	ld	h, a
                                   8244 ;	spillPairReg hl
                                   8245 ;	spillPairReg hl
      0024A7 09                    8246 	add	hl, bc
      0024A8 4D                    8247 	ld	c, l
      0024A9 44                    8248 	ld	b, h
                                   8249 ;main.c:846: projectiles[i].y = newY;
      0024AA F8 02                 8250 	ldhl	sp,#2
      0024AC 2A                    8251 	ld	a, (hl+)
      0024AD 5F                    8252 	ld	e, a
      0024AE 2A                    8253 	ld	a, (hl+)
      0024AF 57                    8254 	ld	d, a
      0024B0 2A                    8255 	ld	a, (hl+)
      0024B1 12                    8256 	ld	(de), a
      0024B2 13                    8257 	inc	de
      0024B3 7E                    8258 	ld	a, (hl)
      0024B4 12                    8259 	ld	(de), a
                                   8260 ;main.c:847: projectiles[i].x = newX;
      0024B5 E1                    8261 	pop	hl
      0024B6 E5                    8262 	push	hl
      0024B7 79                    8263 	ld	a, c
      0024B8 22                    8264 	ld	(hl+), a
      0024B9 70                    8265 	ld	(hl), b
                                   8266 ;main.c:851: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      0024BA F8 04                 8267 	ldhl	sp,	#4
      0024BC 2A                    8268 	ld	a, (hl+)
      0024BD 77                    8269 	ld	(hl), a
      0024BE D1                    8270 	pop	de
      0024BF D5                    8271 	push	de
      0024C0 21 04 00              8272 	ld	hl, #0x0004
      0024C3 19                    8273 	add	hl, de
      0024C4 5D                    8274 	ld	e, l
      0024C5 54                    8275 	ld	d, h
      0024C6 1A                    8276 	ld	a, (de)
      0024C7 F8 05                 8277 	ldhl	sp,	#5
      0024C9 86                    8278 	add	a, (hl)
      0024CA 2B                    8279 	dec	hl
      0024CB 5F                    8280 	ld	e, a
      0024CC 79                    8281 	ld	a, c
      0024CD C6 04                 8282 	add	a, #0x04
      0024CF 22                    8283 	ld	(hl+), a
      0024D0 23                    8284 	inc	hl
      0024D1 3A                    8285 	ld	a, (hl-)
      0024D2 C6 1E                 8286 	add	a, #0x1e
      0024D4 77                    8287 	ld	(hl), a
      0024D5 56                    8288 	ld	d, (hl)
                                   8289 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0024D6 26 00                 8290 	ld	h, #0x00
                                   8291 ;	spillPairReg hl
                                   8292 ;	spillPairReg hl
      0024D8 6A                    8293 	ld	l, d
      0024D9 29                    8294 	add	hl, hl
      0024DA 29                    8295 	add	hl, hl
      0024DB D5                    8296 	push	de
      0024DC 11r00r00              8297 	ld	de, #_shadow_OAM
      0024DF 19                    8298 	add	hl, de
      0024E0 D1                    8299 	pop	de
                                   8300 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0024E1 7B                    8301 	ld	a, e
      0024E2 22                    8302 	ld	(hl+), a
      0024E3 5D                    8303 	ld	e, l
      0024E4 54                    8304 	ld	d, h
      0024E5 F8 04                 8305 	ldhl	sp,	#4
      0024E7 7E                    8306 	ld	a, (hl)
      0024E8 12                    8307 	ld	(de), a
                                   8308 ;main.c:855: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      0024E9 D1                    8309 	pop	de
      0024EA D5                    8310 	push	de
      0024EB 1A                    8311 	ld	a, (de)
      0024EC 6F                    8312 	ld	l, a
                                   8313 ;	spillPairReg hl
                                   8314 ;	spillPairReg hl
      0024ED 13                    8315 	inc	de
      0024EE 1A                    8316 	ld	a, (de)
      0024EF 67                    8317 	ld	h, a
                                   8318 ;	spillPairReg hl
                                   8319 ;	spillPairReg hl
      0024F0 CB 78                 8320 	bit	7, b
      0024F2 20 44                 8321 	jr	NZ, 00101$
      0024F4 5C                    8322 	ld	e, h
      0024F5 16 00                 8323 	ld	d, #0x00
      0024F7 3E AA                 8324 	ld	a, #0xaa
      0024F9 BD                    8325 	cp	a, l
      0024FA 3E 00                 8326 	ld	a, #0x00
      0024FC 9C                    8327 	sbc	a, h
      0024FD CB 7B                 8328 	bit	7, e
      0024FF 28 07                 8329 	jr	Z, 00147$
      002501 CB 7A                 8330 	bit	7, d
      002503 20 08                 8331 	jr	NZ, 00148$
      002505 BF                    8332 	cp	a, a
      002506 18 05                 8333 	jr	00148$
      002508                       8334 00147$:
      002508 CB 7A                 8335 	bit	7, d
      00250A 28 01                 8336 	jr	Z, 00148$
      00250C 37                    8337 	scf
      00250D                       8338 00148$:
      00250D 38 29                 8339 	jr	C, 00101$
                                   8340 ;main.c:839: projectiles[i].y -= yOverflow;
      00250F F8 02                 8341 	ldhl	sp,#2
      002511 2A                    8342 	ld	a, (hl+)
      002512 5F                    8343 	ld	e, a
      002513 56                    8344 	ld	d, (hl)
      002514 1A                    8345 	ld	a, (de)
      002515 4F                    8346 	ld	c, a
      002516 13                    8347 	inc	de
      002517 1A                    8348 	ld	a, (de)
                                   8349 ;main.c:855: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002518 47                    8350 	ld	b, a
      002519 CB 78                 8351 	bit	7, b
      00251B 20 1B                 8352 	jr	NZ, 00101$
      00251D 58                    8353 	ld	e, b
      00251E 16 00                 8354 	ld	d, #0x00
      002520 3E 9A                 8355 	ld	a, #0x9a
      002522 B9                    8356 	cp	a, c
      002523 3E 00                 8357 	ld	a, #0x00
      002525 98                    8358 	sbc	a, b
      002526 CB 7B                 8359 	bit	7, e
      002528 28 07                 8360 	jr	Z, 00149$
      00252A CB 7A                 8361 	bit	7, d
      00252C 20 08                 8362 	jr	NZ, 00150$
      00252E BF                    8363 	cp	a, a
      00252F 18 05                 8364 	jr	00150$
      002531                       8365 00149$:
      002531 CB 7A                 8366 	bit	7, d
      002533 28 01                 8367 	jr	Z, 00150$
      002535 37                    8368 	scf
      002536                       8369 00150$:
      002536 30 24                 8370 	jr	NC, 00113$
      002538                       8371 00101$:
                                   8372 ;main.c:857: projectiles[i].active = 0;
      002538 F8 06                 8373 	ldhl	sp,	#6
      00253A 4E                    8374 	ld	c, (hl)
      00253B 06 00                 8375 	ld	b, #0x00
      00253D 69                    8376 	ld	l, c
      00253E 60                    8377 	ld	h, b
      00253F 29                    8378 	add	hl, hl
      002540 09                    8379 	add	hl, bc
      002541 29                    8380 	add	hl, hl
      002542 29                    8381 	add	hl, hl
      002543 11r50r00              8382 	ld	de, #_projectiles
      002546 19                    8383 	add	hl, de
      002547 01 09 00              8384 	ld	bc, #0x0009
      00254A 09                    8385 	add	hl, bc
      00254B 36 00                 8386 	ld	(hl), #0x00
                                   8387 ;main.c:858: set_sprite_tile(30+i, 0x7f);
      00254D F8 05                 8388 	ldhl	sp,	#5
                                   8389 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00254F 6E                    8390 	ld	l, (hl)
                                   8391 ;	spillPairReg hl
                                   8392 ;	spillPairReg hl
      002550 26 00                 8393 	ld	h, #0x00
                                   8394 ;	spillPairReg hl
                                   8395 ;	spillPairReg hl
      002552 29                    8396 	add	hl, hl
      002553 29                    8397 	add	hl, hl
      002554 11r00r00              8398 	ld	de, #_shadow_OAM
      002557 19                    8399 	add	hl, de
      002558 23                    8400 	inc	hl
      002559 23                    8401 	inc	hl
      00255A 36 7F                 8402 	ld	(hl), #0x7f
                                   8403 ;main.c:858: set_sprite_tile(30+i, 0x7f);
      00255C                       8404 00113$:
                                   8405 ;main.c:837: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      00255C F8 06                 8406 	ldhl	sp,	#6
      00255E 34                    8407 	inc	(hl)
      00255F C3r0Cr24              8408 	jp	00112$
      002562                       8409 00114$:
                                   8410 ;main.c:863: }
      002562 E8 07                 8411 	add	sp, #7
      002564 C9                    8412 	ret
                                   8413 ;main.c:866: void initProjectiles() {
                                   8414 ;	---------------------------------
                                   8415 ; Function initProjectiles
                                   8416 ; ---------------------------------
      002565                       8417 _initProjectiles::
                                   8418 ;main.c:867: set_sprite_data(0x20, 17, ProjectileTiles); //TODO NOSTA MÄÄRÄÄ
      002565 11r67r05              8419 	ld	de, #_ProjectileTiles
      002568 D5                    8420 	push	de
      002569 21 20 11              8421 	ld	hl, #0x1120
      00256C E5                    8422 	push	hl
      00256D CDr00r00              8423 	call	_set_sprite_data
      002570 E8 04                 8424 	add	sp, #4
                                   8425 ;main.c:869: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002572 AF                    8426 	xor	a, a
      002573                       8427 00103$:
      002573 21r9Dr07              8428 	ld	hl, #_PROJECTILECOUNT
      002576 4E                    8429 	ld	c, (hl)
      002577 B9                    8430 	cp	a, c
      002578 D0                    8431 	ret	NC
      002579 3C                    8432 	inc	a
                                   8433 ;main.c:873: }
      00257A 18 F7                 8434 	jr	00103$
                                   8435 ;main.c:875: void initGame() {
                                   8436 ;	---------------------------------
                                   8437 ; Function initGame
                                   8438 ; ---------------------------------
      00257C                       8439 _initGame::
                                   8440 ;main.c:878: xDir = 0;
      00257C 21r56r00              8441 	ld	hl, #_xDir
      00257F 36 00                 8442 	ld	(hl), #0x00
                                   8443 ;main.c:879: yDir = -1;
      002581 21r57r00              8444 	ld	hl, #_yDir
      002584 36 FF                 8445 	ld	(hl), #0xff
                                   8446 ;main.c:880: xSpeed = 0;
      002586 21r58r00              8447 	ld	hl, #_xSpeed
      002589 36 00                 8448 	ld	(hl), #0x00
                                   8449 ;main.c:881: ySpeed = 0;
      00258B 21r59r00              8450 	ld	hl, #_ySpeed
      00258E 36 00                 8451 	ld	(hl), #0x00
                                   8452 ;main.c:884: playerX = 80<<5;
      002590 21r5Ar00              8453 	ld	hl, #_playerX
      002593 36 00                 8454 	ld	(hl), #0x00
      002595 23                    8455 	inc	hl
      002596 36 0A                 8456 	ld	(hl), #0x0a
                                   8457 ;main.c:885: playerY = 80<<5;
      002598 21r5Cr00              8458 	ld	hl, #_playerY
      00259B 36 00                 8459 	ld	(hl), #0x00
      00259D 23                    8460 	inc	hl
      00259E 36 0A                 8461 	ld	(hl), #0x0a
                                   8462 ;main.c:887: playerDrawX = 80;
      0025A0 21r5Er00              8463 	ld	hl, #_playerDrawX
      0025A3 36 50                 8464 	ld	(hl), #0x50
                                   8465 ;main.c:888: playerDrawY = 80;
      0025A5 21r5Fr00              8466 	ld	hl, #_playerDrawY
      0025A8 36 50                 8467 	ld	(hl), #0x50
                                   8468 ;main.c:891: bgX = 0;
      0025AA AF                    8469 	xor	a, a
      0025AB 21r60r00              8470 	ld	hl, #_bgX
      0025AE 22                    8471 	ld	(hl+), a
      0025AF 77                    8472 	ld	(hl), a
                                   8473 ;main.c:892: bgY = 0;
      0025B0 AF                    8474 	xor	a, a
      0025B1 21r62r00              8475 	ld	hl, #_bgY
      0025B4 22                    8476 	ld	(hl+), a
      0025B5 77                    8477 	ld	(hl), a
                                   8478 ;main.c:894: hull = maxHull;
      0025B6 FAr9Fr07              8479 	ld	a, (#_maxHull)
      0025B9 EAr8Dr00              8480 	ld	(#_hull),a
                                   8481 ;main.c:895: shield = maxShield;
      0025BC FArA0r07              8482 	ld	a, (#_maxShield)
      0025BF EAr8Er00              8483 	ld	(#_shield),a
                                   8484 ;main.c:897: DISPLAY_ON;
      0025C2 F0r00                 8485 	ldh	a, (_LCDC_REG + 0)
      0025C4 F6 80                 8486 	or	a, #0x80
      0025C6 E0r00                 8487 	ldh	(_LCDC_REG + 0), a
                                   8488 ;main.c:898: SPRITES_8x16;
      0025C8 F0r00                 8489 	ldh	a, (_LCDC_REG + 0)
      0025CA F6 04                 8490 	or	a, #0x04
      0025CC E0r00                 8491 	ldh	(_LCDC_REG + 0), a
                                   8492 ;main.c:899: set_sprite_data(0, 12, Player1);
      0025CE 11r87r06              8493 	ld	de, #_Player1
      0025D1 D5                    8494 	push	de
      0025D2 21 00 0C              8495 	ld	hl, #0xc00
      0025D5 E5                    8496 	push	hl
      0025D6 CDr00r00              8497 	call	_set_sprite_data
      0025D9 E8 04                 8498 	add	sp, #4
                                   8499 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0025DB 21r02r00              8500 	ld	hl, #(_shadow_OAM + 2)
      0025DE 36 00                 8501 	ld	(hl), #0x00
      0025E0 21r06r00              8502 	ld	hl, #(_shadow_OAM + 6)
      0025E3 36 02                 8503 	ld	(hl), #0x02
                                   8504 ;main.c:905: SHOW_SPRITES;
      0025E5 F0r00                 8505 	ldh	a, (_LCDC_REG + 0)
      0025E7 F6 02                 8506 	or	a, #0x02
      0025E9 E0r00                 8507 	ldh	(_LCDC_REG + 0), a
                                   8508 ;main.c:909: font_init();
      0025EB CDr00r00              8509 	call	_font_init
                                   8510 ;main.c:911: min_font = font_load(font_min); // 36 tiles of characters
      0025EE 11r00r00              8511 	ld	de, #_font_min
      0025F1 D5                    8512 	push	de
      0025F2 CDr00r00              8513 	call	_font_load
      0025F5 E1                    8514 	pop	hl
      0025F6 21r8Fr00              8515 	ld	hl, #_min_font
      0025F9 7B                    8516 	ld	a, e
      0025FA 22                    8517 	ld	(hl+), a
                                   8518 ;main.c:912: font_set(min_font);
      0025FB 7A                    8519 	ld	a, d
      0025FC 32                    8520 	ld	(hl-), a
      0025FD 2A                    8521 	ld	a, (hl+)
      0025FE 5F                    8522 	ld	e, a
      0025FF 56                    8523 	ld	d, (hl)
      002600 D5                    8524 	push	de
      002601 CDr00r00              8525 	call	_font_set
      002604 E1                    8526 	pop	hl
                                   8527 ;main.c:913: set_win_tiles(1,0,4,1,hullabel);
      002605 11r00r00              8528 	ld	de, #_hullabel
      002608 D5                    8529 	push	de
      002609 21 04 01              8530 	ld	hl, #0x104
      00260C E5                    8531 	push	hl
      00260D 21 01 00              8532 	ld	hl, #0x01
      002610 E5                    8533 	push	hl
      002611 CDr00r00              8534 	call	_set_win_tiles
      002614 E8 06                 8535 	add	sp, #6
                                   8536 ;main.c:914: set_win_tiles(1,1,4,1,shieldlabel);
      002616 11r04r00              8537 	ld	de, #_shieldlabel
      002619 D5                    8538 	push	de
      00261A 21 04 01              8539 	ld	hl, #0x104
      00261D E5                    8540 	push	hl
      00261E 21 01 01              8541 	ld	hl, #0x101
      002621 E5                    8542 	push	hl
      002622 CDr00r00              8543 	call	_set_win_tiles
      002625 E8 06                 8544 	add	sp, #6
                                   8545 ;main.c:919: set_bkg_data(0x50,1,healthblock);
      002627 11r07r05              8546 	ld	de, #_healthblock
      00262A D5                    8547 	push	de
      00262B 21 50 01              8548 	ld	hl, #0x150
      00262E E5                    8549 	push	hl
      00262F CDr00r00              8550 	call	_set_bkg_data
      002632 E8 04                 8551 	add	sp, #4
                                   8552 ;main.c:921: setHealthBar(0, hull);
      002634 FAr8Dr00              8553 	ld	a, (#_hull)
      002637 67                    8554 	ld	h, a
      002638 2E 00                 8555 	ld	l, #0x00
      00263A E5                    8556 	push	hl
      00263B CDrA2r07              8557 	call	_setHealthBar
      00263E E1                    8558 	pop	hl
                                   8559 ;main.c:922: setHealthBar(1, shield);
      00263F FAr8Er00              8560 	ld	a, (#_shield)
      002642 67                    8561 	ld	h, a
      002643 2E 01                 8562 	ld	l, #0x01
      002645 E5                    8563 	push	hl
      002646 CDrA2r07              8564 	call	_setHealthBar
      002649 E1                    8565 	pop	hl
                                   8566 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      00264A 3E 07                 8567 	ld	a, #0x07
      00264C E0r00                 8568 	ldh	(_WX_REG + 0), a
      00264E 3E 7E                 8569 	ld	a, #0x7e
      002650 E0r00                 8570 	ldh	(_WY_REG + 0), a
                                   8571 ;main.c:929: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      002652 11r87r04              8572 	ld	de, #_backgroundtiles
      002655 D5                    8573 	push	de
      002656 21 25 08              8574 	ld	hl, #0x825
      002659 E5                    8575 	push	hl
      00265A CDr00r00              8576 	call	_set_bkg_data
      00265D E8 04                 8577 	add	sp, #4
                                   8578 ;main.c:930: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      00265F 11r87r00              8579 	ld	de, #_background1
      002662 D5                    8580 	push	de
      002663 21 20 20              8581 	ld	hl, #0x2020
      002666 E5                    8582 	push	hl
      002667 AF                    8583 	xor	a, a
      002668 0F                    8584 	rrca
      002669 F5                    8585 	push	af
      00266A CDr00r00              8586 	call	_set_bkg_tiles
      00266D E8 06                 8587 	add	sp, #6
                                   8588 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      00266F AF                    8589 	xor	a, a
      002670 E0r00                 8590 	ldh	(_SCX_REG + 0), a
      002672 AF                    8591 	xor	a, a
      002673 E0r00                 8592 	ldh	(_SCY_REG + 0), a
                                   8593 ;main.c:933: set_bkg_data(0x51, 18, ProjectileTiles);
      002675 11r67r05              8594 	ld	de, #_ProjectileTiles
      002678 D5                    8595 	push	de
      002679 21 51 12              8596 	ld	hl, #0x1251
      00267C E5                    8597 	push	hl
      00267D CDr00r00              8598 	call	_set_bkg_data
      002680 E8 04                 8599 	add	sp, #4
                                   8600 ;main.c:935: set_win_tiles(10, 0,4,1,weaponlabel);
      002682 11r08r00              8601 	ld	de, #_weaponlabel
      002685 D5                    8602 	push	de
      002686 21 04 01              8603 	ld	hl, #0x104
      002689 E5                    8604 	push	hl
      00268A 21 0A 00              8605 	ld	hl, #0x0a
      00268D E5                    8606 	push	hl
      00268E CDr00r00              8607 	call	_set_win_tiles
      002691 E8 06                 8608 	add	sp, #6
                                   8609 ;main.c:936: set_win_tiles(10, 1,4,1,scorelabel);
      002693 11r0Cr00              8610 	ld	de, #_scorelabel
      002696 D5                    8611 	push	de
      002697 21 04 01              8612 	ld	hl, #0x104
      00269A E5                    8613 	push	hl
      00269B 21 0A 01              8614 	ld	hl, #0x10a
      00269E E5                    8615 	push	hl
      00269F CDr00r00              8616 	call	_set_win_tiles
      0026A2 E8 06                 8617 	add	sp, #6
                                   8618 ;main.c:938: setGunIcon();
      0026A4 CDr1Cr1E              8619 	call	_setGunIcon
                                   8620 ;main.c:939: SHOW_BKG;
      0026A7 F0r00                 8621 	ldh	a, (_LCDC_REG + 0)
      0026A9 F6 01                 8622 	or	a, #0x01
      0026AB E0r00                 8623 	ldh	(_LCDC_REG + 0), a
                                   8624 ;main.c:940: SHOW_WIN;;
      0026AD F0r00                 8625 	ldh	a, (_LCDC_REG + 0)
      0026AF F6 20                 8626 	or	a, #0x20
      0026B1 E0r00                 8627 	ldh	(_LCDC_REG + 0), a
                                   8628 ;main.c:942: bcd = MAKE_BCD(00000);
      0026B3 AF                    8629 	xor	a, a
      0026B4 21r70r00              8630 	ld	hl, #_bcd
      0026B7 22                    8631 	ld	(hl+), a
      0026B8 22                    8632 	ld	(hl+), a
      0026B9 22                    8633 	ld	(hl+), a
      0026BA 77                    8634 	ld	(hl), a
                                   8635 ;main.c:943: updateScore();
                                   8636 ;main.c:946: }
      0026BB C3rB3r08              8637 	jp	_updateScore
                                   8638 ;main.c:948: void main(){
                                   8639 ;	---------------------------------
                                   8640 ; Function main
                                   8641 ; ---------------------------------
      0026BE                       8642 _main::
                                   8643 ;main.c:951: STAT_REG = 0x45;
      0026BE 3E 45                 8644 	ld	a, #0x45
      0026C0 E0r00                 8645 	ldh	(_STAT_REG + 0), a
                                   8646 ;main.c:952: LYC_REG = 0x7e; //line 126
      0026C2 3E 7E                 8647 	ld	a, #0x7e
      0026C4 E0r00                 8648 	ldh	(_LYC_REG + 0), a
                                   8649 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      0026C6 F3                    8650 	di
                                   8651 ;main.c:954: add_LCD(interruptLCD);
      0026C7 11r00r00              8652 	ld	de, #_interruptLCD
      0026CA D5                    8653 	push	de
      0026CB CDr00r00              8654 	call	_add_LCD
      0026CE 33                    8655 	inc	sp
      0026CF 33                    8656 	inc	sp
                                   8657 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      0026D0 FB                    8658 	ei
                                   8659 ;main.c:956: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      0026D1 3E 03                 8660 	ld	a, #0x03
      0026D3 F5                    8661 	push	af
      0026D4 33                    8662 	inc	sp
      0026D5 CDr00r00              8663 	call	_set_interrupts
      0026D8 33                    8664 	inc	sp
                                   8665 ;main.c:960: NR52_REG = 0x80; // sound on 
      0026D9 3E 80                 8666 	ld	a, #0x80
      0026DB E0r00                 8667 	ldh	(_NR52_REG + 0), a
                                   8668 ;main.c:961: NR50_REG = 0x77; // volume
      0026DD 3E 77                 8669 	ld	a, #0x77
      0026DF E0r00                 8670 	ldh	(_NR50_REG + 0), a
                                   8671 ;main.c:962: NR51_REG = 0xFF; // all channels
      0026E1 3E FF                 8672 	ld	a, #0xff
      0026E3 E0r00                 8673 	ldh	(_NR51_REG + 0), a
                                   8674 ;main.c:966: waitpad(J_A);
      0026E5 3E 10                 8675 	ld	a, #0x10
      0026E7 F5                    8676 	push	af
      0026E8 33                    8677 	inc	sp
      0026E9 CDr00r00              8678 	call	_waitpad
      0026EC 33                    8679 	inc	sp
                                   8680 ;main.c:967: uint16_t seed = LY_REG;
      0026ED F0r00                 8681 	ldh	a, (_LY_REG + 0)
      0026EF 4F                    8682 	ld	c, a
      0026F0 06 00                 8683 	ld	b, #0x00
                                   8684 ;main.c:968: seed |= (uint16_t)DIV_REG << 8;
      0026F2 F0r00                 8685 	ldh	a, (_DIV_REG + 0)
      0026F4 5F                    8686 	ld	e, a
      0026F5 AF                    8687 	xor	a, a
      0026F6 B1                    8688 	or	a, c
      0026F7 4F                    8689 	ld	c, a
      0026F8 7B                    8690 	ld	a, e
      0026F9 B0                    8691 	or	a, b
      0026FA 47                    8692 	ld	b, a
                                   8693 ;main.c:969: initrand(seed);
      0026FB C5                    8694 	push	bc
      0026FC CDr00r00              8695 	call	_initrand
      0026FF E1                    8696 	pop	hl
                                   8697 ;main.c:974: initGame();
      002700 CDr7Cr25              8698 	call	_initGame
                                   8699 ;main.c:975: initEnemies(1);
      002703 3E 01                 8700 	ld	a, #0x01
      002705 F5                    8701 	push	af
      002706 33                    8702 	inc	sp
      002707 CDr83r0B              8703 	call	_initEnemies
      00270A 33                    8704 	inc	sp
                                   8705 ;main.c:976: initProjectiles();
      00270B CDr65r25              8706 	call	_initProjectiles
                                   8707 ;main.c:978: while(1) {
      00270E                       8708 00114$:
                                   8709 ;main.c:979: SHOW_SPRITES;
      00270E F0r00                 8710 	ldh	a, (_LCDC_REG + 0)
      002710 F6 02                 8711 	or	a, #0x02
      002712 E0r00                 8712 	ldh	(_LCDC_REG + 0), a
                                   8713 ;main.c:981: joydata = joypad(); // query for button states
      002714 CDr00r00              8714 	call	_joypad
      002717 21r8Cr00              8715 	ld	hl, #_joydata
      00271A 73                    8716 	ld	(hl), e
                                   8717 ;main.c:983: updateDirection(); // set player direction
      00271B CDrF6r08              8718 	call	_updateDirection
                                   8719 ;main.c:986: move(); 
      00271E CDr40r15              8720 	call	_move
                                   8721 ;main.c:988: updateEnemyPositions();
      002721 CDrD1r0C              8722 	call	_updateEnemyPositions
                                   8723 ;main.c:991: checkCollision(); 
      002724 CDrCBr1A              8724 	call	_checkCollision
                                   8725 ;main.c:755: if (shield < maxShield) {
      002727 21rA0r07              8726 	ld	hl, #_maxShield
      00272A 4E                    8727 	ld	c, (hl)
      00272B 59                    8728 	ld	e, c
      00272C 21r8Er00              8729 	ld	hl, #_shield
      00272F 56                    8730 	ld	d, (hl)
      002730 7E                    8731 	ld	a, (hl)
      002731 91                    8732 	sub	a, c
      002732 CB 7B                 8733 	bit	7, e
      002734 28 07                 8734 	jr	Z, 00171$
      002736 CB 7A                 8735 	bit	7, d
      002738 20 08                 8736 	jr	NZ, 00172$
      00273A BF                    8737 	cp	a, a
      00273B 18 05                 8738 	jr	00172$
      00273D                       8739 00171$:
      00273D CB 7A                 8740 	bit	7, d
      00273F 28 01                 8741 	jr	Z, 00172$
      002741 37                    8742 	scf
      002742                       8743 00172$:
      002742 30 04                 8744 	jr	NC, 00122$
                                   8745 ;main.c:756: shield += 1;
      002744 21r8Er00              8746 	ld	hl, #_shield
      002747 34                    8747 	inc	(hl)
      002748                       8748 00122$:
                                   8749 ;main.c:758: setHealthBar(0, hull);
      002748 FAr8Dr00              8750 	ld	a, (#_hull)
      00274B 67                    8751 	ld	h, a
      00274C 2E 00                 8752 	ld	l, #0x00
      00274E E5                    8753 	push	hl
      00274F CDrA2r07              8754 	call	_setHealthBar
      002752 E1                    8755 	pop	hl
                                   8756 ;main.c:759: setHealthBar(1, shield);
      002753 FAr8Er00              8757 	ld	a, (#_shield)
      002756 67                    8758 	ld	h, a
      002757 2E 01                 8759 	ld	l, #0x01
      002759 E5                    8760 	push	hl
      00275A CDrA2r07              8761 	call	_setHealthBar
      00275D E1                    8762 	pop	hl
                                   8763 ;main.c:996: if (joydata & J_B && fireCooldown == 0) {
      00275E FAr8Cr00              8764 	ld	a, (#_joydata)
      002761 CB 6F                 8765 	bit	5, a
      002763 28 09                 8766 	jr	Z, 00102$
      002765 FAr55r00              8767 	ld	a, (#_fireCooldown)
      002768 B7                    8768 	or	a, a
      002769 20 03                 8769 	jr	NZ, 00102$
                                   8770 ;main.c:997: fire();
      00276B CDr37r1E              8771 	call	_fire
      00276E                       8772 00102$:
                                   8773 ;main.c:999: if (fireCooldown > 0) {
      00276E 21r55r00              8774 	ld	hl, #_fireCooldown
      002771 7E                    8775 	ld	a, (hl)
      002772 B7                    8776 	or	a, a
      002773 28 01                 8777 	jr	Z, 00105$
                                   8778 ;main.c:1000: --fireCooldown;
      002775 35                    8779 	dec	(hl)
      002776                       8780 00105$:
                                   8781 ;main.c:1003: if (joydata & J_SELECT && switchDelay == 0) {
      002776 FAr8Cr00              8782 	ld	a, (#_joydata)
      002779 CB 77                 8783 	bit	6, a
      00277B 28 1F                 8784 	jr	Z, 00109$
      00277D FAr6Ar00              8785 	ld	a, (#_switchDelay)
      002780 B7                    8786 	or	a, a
      002781 20 19                 8787 	jr	NZ, 00109$
                                   8788 ;main.c:1004: currentGun++;
      002783 21r69r00              8789 	ld	hl, #_currentGun
      002786 34                    8790 	inc	(hl)
                                   8791 ;main.c:1005: if (currentGun >= GUNCOUNT) {
      002787 21rA1r07              8792 	ld	hl, #_GUNCOUNT
      00278A 4E                    8793 	ld	c, (hl)
      00278B 21r69r00              8794 	ld	hl, #_currentGun
      00278E 7E                    8795 	ld	a, (hl)
      00278F 91                    8796 	sub	a, c
      002790 38 02                 8797 	jr	C, 00107$
                                   8798 ;main.c:1006: currentGun = 0;
      002792 36 00                 8799 	ld	(hl), #0x00
      002794                       8800 00107$:
                                   8801 ;main.c:1008: setGunIcon();
      002794 CDr1Cr1E              8802 	call	_setGunIcon
                                   8803 ;main.c:1009: switchDelay = 30;
      002797 21r6Ar00              8804 	ld	hl, #_switchDelay
      00279A 36 1E                 8805 	ld	(hl), #0x1e
      00279C                       8806 00109$:
                                   8807 ;main.c:1011: if (switchDelay != 0) {
      00279C 21r6Ar00              8808 	ld	hl, #_switchDelay
      00279F 7E                    8809 	ld	a, (hl)
      0027A0 B7                    8810 	or	a, a
      0027A1 28 01                 8811 	jr	Z, 00112$
                                   8812 ;main.c:1012: switchDelay--;
      0027A3 35                    8813 	dec	(hl)
      0027A4                       8814 00112$:
                                   8815 ;main.c:1014: moveProjectiles();
      0027A4 CDr06r24              8816 	call	_moveProjectiles
                                   8817 ;main.c:1026: SHOW_WIN;	
      0027A7 F0r00                 8818 	ldh	a, (_LCDC_REG + 0)
      0027A9 F6 20                 8819 	or	a, #0x20
      0027AB E0r00                 8820 	ldh	(_LCDC_REG + 0), a
                                   8821 ;main.c:1027: wait_vbl_done(); // Idle until next frame
      0027AD CDr00r00              8822 	call	_wait_vbl_done
                                   8823 ;main.c:1032: }
      0027B0 C3r0Er27              8824 	jp	00114$
                                   8825 	.area _CODE
                                   8826 	.area _INITIALIZER
      000000                       8827 __xinit__hullabel:
      000000 12                    8828 	.db #0x12	; 18
      000001 1F                    8829 	.db #0x1f	; 31
      000002 16                    8830 	.db #0x16	; 22
      000003 16                    8831 	.db #0x16	; 22
      000004                       8832 __xinit__shieldlabel:
      000004 1D                    8833 	.db #0x1d	; 29
      000005 12                    8834 	.db #0x12	; 18
      000006 16                    8835 	.db #0x16	; 22
      000007 0E                    8836 	.db #0x0e	; 14
      000008                       8837 __xinit__weaponlabel:
      000008 21                    8838 	.db #0x21	; 33
      000009 0F                    8839 	.db #0x0f	; 15
      00000A 1A                    8840 	.db #0x1a	; 26
      00000B 18                    8841 	.db #0x18	; 24
      00000C                       8842 __xinit__scorelabel:
      00000C 1D                    8843 	.db #0x1d	; 29
      00000D 0D                    8844 	.db #0x0d	; 13
      00000E 1C                    8845 	.db #0x1c	; 28
      00000F 0F                    8846 	.db #0x0f	; 15
      000010                       8847 __xinit__blob:
      000010 00 00                 8848 	.dw #0x0000
      000012 00 00                 8849 	.dw #0x0000
      000014 00                    8850 	.db #0x00	;  0
      000015 00                    8851 	.db #0x00	;  0
      000016 40                    8852 	.db #0x40	; 64
      000017 00                    8853 	.db #0x00	; 0
      000018 01                    8854 	.db #0x01	; 1
      000019 01                    8855 	.db #0x01	; 1
      00001A 01                    8856 	.db #0x01	; 1
      00001B 32                    8857 	.db #0x32	; 50	'2'
      00001C 03                    8858 	.db #0x03	;  3
      00001D 01                    8859 	.db #0x01	; 1
      00001E 00                    8860 	.db #0x00	;  0
      00001F 00                    8861 	.db #0x00	;  0
      000020                       8862 __xinit__bigblob:
      000020 00 00                 8863 	.dw #0x0000
      000022 00 00                 8864 	.dw #0x0000
      000024 00                    8865 	.db #0x00	;  0
      000025 00                    8866 	.db #0x00	;  0
      000026 50                    8867 	.db #0x50	; 80	'P'
      000027 52                    8868 	.db #0x52	; 82	'R'
      000028 02                    8869 	.db #0x02	; 2
      000029 01                    8870 	.db #0x01	; 1
      00002A 01                    8871 	.db #0x01	; 1
      00002B 32                    8872 	.db #0x32	; 50	'2'
      00002C 03                    8873 	.db #0x03	;  3
      00002D 01                    8874 	.db #0x01	; 1
      00002E 00                    8875 	.db #0x00	;  0
      00002F 00                    8876 	.db #0x00	;  0
      000030                       8877 __xinit__singleGun:
      000030 00 00                 8878 	.dw #0x0000
      000032 00 00                 8879 	.dw #0x0000
      000034 00                    8880 	.db #0x00	;  0
      000035 00                    8881 	.db #0x00	;  0
      000036 FF                    8882 	.db #0xff	; -1
      000037 02                    8883 	.db #0x02	; 2
      000038 00                    8884 	.db #0x00	; 0
      000039 01                    8885 	.db #0x01	; 1
      00003A 0F                    8886 	.db #0x0f	; 15
      00003B 20                    8887 	.db #0x20	; 32
      00003C                       8888 __xinit__doubleGun:
      00003C 00 00                 8889 	.dw #0x0000
      00003E 00 00                 8890 	.dw #0x0000
      000040 00                    8891 	.db #0x00	;  0
      000041 00                    8892 	.db #0x00	;  0
      000042 FF                    8893 	.db #0xff	; -1
      000043 02                    8894 	.db #0x02	; 2
      000044 00                    8895 	.db #0x00	; 0
      000045 01                    8896 	.db #0x01	; 1
      000046 0F                    8897 	.db #0x0f	; 15
      000047 26                    8898 	.db #0x26	; 38
      000048                       8899 __xinit__missile:
      000048 00 00                 8900 	.dw #0x0000
      00004A 00 00                 8901 	.dw #0x0000
      00004C 00                    8902 	.db #0x00	;  0
      00004D 00                    8903 	.db #0x00	;  0
      00004E FF                    8904 	.db #0xff	; -1
      00004F 01                    8905 	.db #0x01	; 1
      000050 00                    8906 	.db #0x00	; 0
      000051 01                    8907 	.db #0x01	; 1
      000052 1E                    8908 	.db #0x1e	; 30
      000053 2C                    8909 	.db #0x2c	; 44
      000054                       8910 __xinit__oldestProjectile:
      000054 00                    8911 	.db #0x00	; 0
      000055                       8912 __xinit__fireCooldown:
      000055 00                    8913 	.db #0x00	; 0
      000056                       8914 __xinit__xDir:
      000056 00                    8915 	.db #0x00	;  0
      000057                       8916 __xinit__yDir:
      000057 FF                    8917 	.db #0xff	; -1
      000058                       8918 __xinit__xSpeed:
      000058 00                    8919 	.db #0x00	;  0
      000059                       8920 __xinit__ySpeed:
      000059 00                    8921 	.db #0x00	;  0
      00005A                       8922 __xinit__playerX:
      00005A 00 0A                 8923 	.dw #0x0a00
      00005C                       8924 __xinit__playerY:
      00005C 00 0A                 8925 	.dw #0x0a00
      00005E                       8926 __xinit__playerDrawX:
      00005E 50                    8927 	.db #0x50	; 80	'P'
      00005F                       8928 __xinit__playerDrawY:
      00005F 50                    8929 	.db #0x50	; 80	'P'
      000060                       8930 __xinit__bgX:
      000060 00 00                 8931 	.dw #0x0000
      000062                       8932 __xinit__bgY:
      000062 00 00                 8933 	.dw #0x0000
      000064                       8934 __xinit__xOverflow:
      000064 00 00                 8935 	.dw #0x0000
      000066                       8936 __xinit__yOverflow:
      000066 00 00                 8937 	.dw #0x0000
      000068                       8938 __xinit__enemyCollisionCount:
      000068 00                    8939 	.db #0x00	; 0
      000069                       8940 __xinit__currentGun:
      000069 00                    8941 	.db #0x00	; 0
      00006A                       8942 __xinit__switchDelay:
      00006A 00                    8943 	.db #0x00	; 0
      00006B                       8944 __xinit__gunMap:
      00006B 53                    8945 	.db #0x53	; 83	'S'
      00006C 5B                    8946 	.db #0x5b	; 91
      00006D 61                    8947 	.db #0x61	; 97	'a'
      00006E                       8948 __xinit__score:
      00006E 00 00                 8949 	.dw #0x0000
      000070                       8950 __xinit__bcd:
      000070 00 00 00 00           8951 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      000074                       8952 __xinit__INCREMENT:
      000074 01 00 00 00           8953 	.byte #0x01, #0x00, #0x00, #0x00	; 1
                                   8954 	.area _CABS (ABS)
