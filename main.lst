                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _updateShieldsAndHull
                                     14 	.globl _checkCollision
                                     15 	.globl _takeDamage
                                     16 	.globl _move
                                     17 	.globl _initEnemies
                                     18 	.globl _updateEnemyPositions
                                     19 	.globl _moveEnemiesWithBackground
                                     20 	.globl _abs
                                     21 	.globl _i16Clamp
                                     22 	.globl _u16Clamp
                                     23 	.globl _uClamp
                                     24 	.globl _clamp
                                     25 	.globl _updateDirection
                                     26 	.globl _setHealthBar
                                     27 	.globl _interruptLCD
                                     28 	.globl _rand
                                     29 	.globl _initrand
                                     30 	.globl _font_set
                                     31 	.globl _font_load
                                     32 	.globl _font_init
                                     33 	.globl _set_sprite_data
                                     34 	.globl _set_win_tiles
                                     35 	.globl _set_bkg_tiles
                                     36 	.globl _set_bkg_data
                                     37 	.globl _wait_vbl_done
                                     38 	.globl _waitpad
                                     39 	.globl _joypad
                                     40 	.globl _maxShield
                                     41 	.globl _maxHull
                                     42 	.globl _bgY
                                     43 	.globl _bgX
                                     44 	.globl _playerDrawY
                                     45 	.globl _playerDrawX
                                     46 	.globl _playerY
                                     47 	.globl _playerX
                                     48 	.globl _ySpeed
                                     49 	.globl _xSpeed
                                     50 	.globl _yDir
                                     51 	.globl _xDir
                                     52 	.globl _PLAYERSIZE
                                     53 	.globl _blob
                                     54 	.globl _shieldlabel
                                     55 	.globl _hullabel
                                     56 	.globl _min_font
                                     57 	.globl _shield
                                     58 	.globl _hull
                                     59 	.globl _joydata
                                     60 	.globl _enemies
                                     61 	.globl _ySpawnPositions
                                     62 	.globl _xSpawnPositions
                                     63 	.globl _ENEMYCOUNT
                                     64 	.globl _EMPTYSPRITE
                                     65 	.globl _BLANK
                                     66 	.globl _enemy1
                                     67 	.globl _healthblock
                                     68 	.globl _backgroundtiles
                                     69 	.globl _background1
                                     70 	.globl _cross
                                     71 ;--------------------------------------------------------
                                     72 ; special function registers
                                     73 ;--------------------------------------------------------
                                     74 ;--------------------------------------------------------
                                     75 ; ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area _DATA
      000000                         78 _enemies::
      000000                         79 	.ds 100
      000064                         80 _joydata::
      000064                         81 	.ds 1
      000065                         82 _hull::
      000065                         83 	.ds 1
      000066                         84 _shield::
      000066                         85 	.ds 1
      000067                         86 _min_font::
      000067                         87 	.ds 2
                                     88 ;--------------------------------------------------------
                                     89 ; ram data
                                     90 ;--------------------------------------------------------
                                     91 	.area _INITIALIZED
      000000                         92 _hullabel::
      000000                         93 	.ds 4
      000004                         94 _shieldlabel::
      000004                         95 	.ds 4
      000008                         96 _blob::
      000008                         97 	.ds 20
      00001C                         98 _PLAYERSIZE::
      00001C                         99 	.ds 1
      00001D                        100 _xDir::
      00001D                        101 	.ds 1
      00001E                        102 _yDir::
      00001E                        103 	.ds 1
      00001F                        104 _xSpeed::
      00001F                        105 	.ds 1
      000020                        106 _ySpeed::
      000020                        107 	.ds 1
      000021                        108 _playerX::
      000021                        109 	.ds 2
      000023                        110 _playerY::
      000023                        111 	.ds 2
      000025                        112 _playerDrawX::
      000025                        113 	.ds 1
      000026                        114 _playerDrawY::
      000026                        115 	.ds 1
      000027                        116 _bgX::
      000027                        117 	.ds 2
      000029                        118 _bgY::
      000029                        119 	.ds 2
      00002B                        120 _maxHull::
      00002B                        121 	.ds 1
      00002C                        122 _maxShield::
      00002C                        123 	.ds 1
                                    124 ;--------------------------------------------------------
                                    125 ; absolute external ram data
                                    126 ;--------------------------------------------------------
                                    127 	.area _DABS (ABS)
                                    128 ;--------------------------------------------------------
                                    129 ; global & static initialisations
                                    130 ;--------------------------------------------------------
                                    131 	.area _HOME
                                    132 	.area _GSINIT
                                    133 	.area _GSFINAL
                                    134 	.area _GSINIT
                                    135 ;--------------------------------------------------------
                                    136 ; Home
                                    137 ;--------------------------------------------------------
                                    138 	.area _HOME
                                    139 	.area _HOME
                                    140 ;--------------------------------------------------------
                                    141 ; code
                                    142 ;--------------------------------------------------------
                                    143 	.area _CODE
                                    144 ;main.c:65: void interruptLCD(){
                                    145 ;	---------------------------------
                                    146 ; Function interruptLCD
                                    147 ; ---------------------------------
      000000                        148 _interruptLCD::
                                    149 ;main.c:66: HIDE_WIN;
      000000 F0r00                  150 	ldh	a, (_LCDC_REG + 0)
      000002 E6 DF                  151 	and	a, #0xdf
      000004 E0r00                  152 	ldh	(_LCDC_REG + 0), a
                                    153 ;main.c:67: }
      000006 C9                     154 	ret
      000007                        155 _cross:
      000007 18                     156 	.db #0x18	; 24
      000008 18                     157 	.db #0x18	; 24
      000009 18                     158 	.db #0x18	; 24
      00000A 18                     159 	.db #0x18	; 24
      00000B 3C                     160 	.db #0x3c	; 60
      00000C 3C                     161 	.db #0x3c	; 60
      00000D 3C                     162 	.db #0x3c	; 60
      00000E 3C                     163 	.db #0x3c	; 60
      00000F 7E                     164 	.db #0x7e	; 126
      000010 7E                     165 	.db #0x7e	; 126
      000011 7E                     166 	.db #0x7e	; 126
      000012 7E                     167 	.db #0x7e	; 126
      000013 FF                     168 	.db #0xff	; 255
      000014 FF                     169 	.db #0xff	; 255
      000015 FF                     170 	.db #0xff	; 255
      000016 FF                     171 	.db #0xff	; 255
      000017 0F                     172 	.db #0x0f	; 15
      000018 0F                     173 	.db #0x0f	; 15
      000019 3F                     174 	.db #0x3f	; 63
      00001A 3F                     175 	.db #0x3f	; 63
      00001B FF                     176 	.db #0xff	; 255
      00001C FF                     177 	.db #0xff	; 255
      00001D FF                     178 	.db #0xff	; 255
      00001E FF                     179 	.db #0xff	; 255
      00001F 7E                     180 	.db #0x7e	; 126
      000020 7E                     181 	.db #0x7e	; 126
      000021 3E                     182 	.db #0x3e	; 62
      000022 3E                     183 	.db #0x3e	; 62
      000023 1C                     184 	.db #0x1c	; 28
      000024 1C                     185 	.db #0x1c	; 28
      000025 0C                     186 	.db #0x0c	; 12
      000026 0C                     187 	.db #0x0c	; 12
      000027 C0                     188 	.db #0xc0	; 192
      000028 C0                     189 	.db #0xc0	; 192
      000029 F0                     190 	.db #0xf0	; 240
      00002A F0                     191 	.db #0xf0	; 240
      00002B FC                     192 	.db #0xfc	; 252
      00002C FC                     193 	.db #0xfc	; 252
      00002D FF                     194 	.db #0xff	; 255
      00002E FF                     195 	.db #0xff	; 255
      00002F FF                     196 	.db #0xff	; 255
      000030 FF                     197 	.db #0xff	; 255
      000031 FC                     198 	.db #0xfc	; 252
      000032 FC                     199 	.db #0xfc	; 252
      000033 F0                     200 	.db #0xf0	; 240
      000034 F0                     201 	.db #0xf0	; 240
      000035 C0                     202 	.db #0xc0	; 192
      000036 C0                     203 	.db #0xc0	; 192
      000037 0C                     204 	.db #0x0c	; 12
      000038 0C                     205 	.db #0x0c	; 12
      000039 1C                     206 	.db #0x1c	; 28
      00003A 1C                     207 	.db #0x1c	; 28
      00003B 3E                     208 	.db #0x3e	; 62
      00003C 3E                     209 	.db #0x3e	; 62
      00003D 7E                     210 	.db #0x7e	; 126
      00003E 7E                     211 	.db #0x7e	; 126
      00003F FF                     212 	.db #0xff	; 255
      000040 FF                     213 	.db #0xff	; 255
      000041 FF                     214 	.db #0xff	; 255
      000042 FF                     215 	.db #0xff	; 255
      000043 3F                     216 	.db #0x3f	; 63
      000044 3F                     217 	.db #0x3f	; 63
      000045 0F                     218 	.db #0x0f	; 15
      000046 0F                     219 	.db #0x0f	; 15
      000047 FF                     220 	.db #0xff	; 255
      000048 FF                     221 	.db #0xff	; 255
      000049 FF                     222 	.db #0xff	; 255
      00004A FF                     223 	.db #0xff	; 255
      00004B 7E                     224 	.db #0x7e	; 126
      00004C 7E                     225 	.db #0x7e	; 126
      00004D 7E                     226 	.db #0x7e	; 126
      00004E 7E                     227 	.db #0x7e	; 126
      00004F 3C                     228 	.db #0x3c	; 60
      000050 3C                     229 	.db #0x3c	; 60
      000051 3C                     230 	.db #0x3c	; 60
      000052 3C                     231 	.db #0x3c	; 60
      000053 18                     232 	.db #0x18	; 24
      000054 18                     233 	.db #0x18	; 24
      000055 18                     234 	.db #0x18	; 24
      000056 18                     235 	.db #0x18	; 24
      000057 30                     236 	.db #0x30	; 48	'0'
      000058 30                     237 	.db #0x30	; 48	'0'
      000059 38                     238 	.db #0x38	; 56	'8'
      00005A 38                     239 	.db #0x38	; 56	'8'
      00005B 7C                     240 	.db #0x7c	; 124
      00005C 7C                     241 	.db #0x7c	; 124
      00005D 7E                     242 	.db #0x7e	; 126
      00005E 7E                     243 	.db #0x7e	; 126
      00005F FF                     244 	.db #0xff	; 255
      000060 FF                     245 	.db #0xff	; 255
      000061 FF                     246 	.db #0xff	; 255
      000062 FF                     247 	.db #0xff	; 255
      000063 FC                     248 	.db #0xfc	; 252
      000064 FC                     249 	.db #0xfc	; 252
      000065 F0                     250 	.db #0xf0	; 240
      000066 F0                     251 	.db #0xf0	; 240
      000067 03                     252 	.db #0x03	; 3
      000068 03                     253 	.db #0x03	; 3
      000069 0F                     254 	.db #0x0f	; 15
      00006A 0F                     255 	.db #0x0f	; 15
      00006B 3F                     256 	.db #0x3f	; 63
      00006C 3F                     257 	.db #0x3f	; 63
      00006D FF                     258 	.db #0xff	; 255
      00006E FF                     259 	.db #0xff	; 255
      00006F FF                     260 	.db #0xff	; 255
      000070 FF                     261 	.db #0xff	; 255
      000071 3F                     262 	.db #0x3f	; 63
      000072 3F                     263 	.db #0x3f	; 63
      000073 0F                     264 	.db #0x0f	; 15
      000074 0F                     265 	.db #0x0f	; 15
      000075 03                     266 	.db #0x03	; 3
      000076 03                     267 	.db #0x03	; 3
      000077 F0                     268 	.db #0xf0	; 240
      000078 F0                     269 	.db #0xf0	; 240
      000079 FC                     270 	.db #0xfc	; 252
      00007A FC                     271 	.db #0xfc	; 252
      00007B FF                     272 	.db #0xff	; 255
      00007C FF                     273 	.db #0xff	; 255
      00007D FF                     274 	.db #0xff	; 255
      00007E FF                     275 	.db #0xff	; 255
      00007F 7E                     276 	.db #0x7e	; 126
      000080 7E                     277 	.db #0x7e	; 126
      000081 7C                     278 	.db #0x7c	; 124
      000082 7C                     279 	.db #0x7c	; 124
      000083 38                     280 	.db #0x38	; 56	'8'
      000084 38                     281 	.db #0x38	; 56	'8'
      000085 30                     282 	.db #0x30	; 48	'0'
      000086 30                     283 	.db #0x30	; 48	'0'
      000087                        284 _background1:
      000087 26                     285 	.db #0x26	; 38
      000088 26                     286 	.db #0x26	; 38
      000089 26                     287 	.db #0x26	; 38
      00008A 26                     288 	.db #0x26	; 38
      00008B 26                     289 	.db #0x26	; 38
      00008C 26                     290 	.db #0x26	; 38
      00008D 26                     291 	.db #0x26	; 38
      00008E 26                     292 	.db #0x26	; 38
      00008F 26                     293 	.db #0x26	; 38
      000090 26                     294 	.db #0x26	; 38
      000091 26                     295 	.db #0x26	; 38
      000092 2A                     296 	.db #0x2a	; 42
      000093 29                     297 	.db #0x29	; 41
      000094 26                     298 	.db #0x26	; 38
      000095 26                     299 	.db #0x26	; 38
      000096 26                     300 	.db #0x26	; 38
      000097 26                     301 	.db #0x26	; 38
      000098 26                     302 	.db #0x26	; 38
      000099 26                     303 	.db #0x26	; 38
      00009A 26                     304 	.db #0x26	; 38
      00009B 26                     305 	.db #0x26	; 38
      00009C 26                     306 	.db #0x26	; 38
      00009D 26                     307 	.db #0x26	; 38
      00009E 26                     308 	.db #0x26	; 38
      00009F 26                     309 	.db #0x26	; 38
      0000A0 26                     310 	.db #0x26	; 38
      0000A1 26                     311 	.db #0x26	; 38
      0000A2 26                     312 	.db #0x26	; 38
      0000A3 26                     313 	.db #0x26	; 38
      0000A4 26                     314 	.db #0x26	; 38
      0000A5 26                     315 	.db #0x26	; 38
      0000A6 26                     316 	.db #0x26	; 38
      0000A7 26                     317 	.db #0x26	; 38
      0000A8 26                     318 	.db #0x26	; 38
      0000A9 26                     319 	.db #0x26	; 38
      0000AA 26                     320 	.db #0x26	; 38
      0000AB 26                     321 	.db #0x26	; 38
      0000AC 26                     322 	.db #0x26	; 38
      0000AD 26                     323 	.db #0x26	; 38
      0000AE 26                     324 	.db #0x26	; 38
      0000AF 26                     325 	.db #0x26	; 38
      0000B0 26                     326 	.db #0x26	; 38
      0000B1 26                     327 	.db #0x26	; 38
      0000B2 25                     328 	.db #0x25	; 37
      0000B3 26                     329 	.db #0x26	; 38
      0000B4 26                     330 	.db #0x26	; 38
      0000B5 26                     331 	.db #0x26	; 38
      0000B6 26                     332 	.db #0x26	; 38
      0000B7 26                     333 	.db #0x26	; 38
      0000B8 26                     334 	.db #0x26	; 38
      0000B9 26                     335 	.db #0x26	; 38
      0000BA 26                     336 	.db #0x26	; 38
      0000BB 26                     337 	.db #0x26	; 38
      0000BC 26                     338 	.db #0x26	; 38
      0000BD 26                     339 	.db #0x26	; 38
      0000BE 26                     340 	.db #0x26	; 38
      0000BF 26                     341 	.db #0x26	; 38
      0000C0 26                     342 	.db #0x26	; 38
      0000C1 26                     343 	.db #0x26	; 38
      0000C2 26                     344 	.db #0x26	; 38
      0000C3 26                     345 	.db #0x26	; 38
      0000C4 26                     346 	.db #0x26	; 38
      0000C5 26                     347 	.db #0x26	; 38
      0000C6 26                     348 	.db #0x26	; 38
      0000C7 26                     349 	.db #0x26	; 38
      0000C8 26                     350 	.db #0x26	; 38
      0000C9 26                     351 	.db #0x26	; 38
      0000CA 26                     352 	.db #0x26	; 38
      0000CB 26                     353 	.db #0x26	; 38
      0000CC 26                     354 	.db #0x26	; 38
      0000CD 26                     355 	.db #0x26	; 38
      0000CE 26                     356 	.db #0x26	; 38
      0000CF 26                     357 	.db #0x26	; 38
      0000D0 26                     358 	.db #0x26	; 38
      0000D1 26                     359 	.db #0x26	; 38
      0000D2 26                     360 	.db #0x26	; 38
      0000D3 26                     361 	.db #0x26	; 38
      0000D4 26                     362 	.db #0x26	; 38
      0000D5 26                     363 	.db #0x26	; 38
      0000D6 26                     364 	.db #0x26	; 38
      0000D7 26                     365 	.db #0x26	; 38
      0000D8 26                     366 	.db #0x26	; 38
      0000D9 26                     367 	.db #0x26	; 38
      0000DA 26                     368 	.db #0x26	; 38
      0000DB 26                     369 	.db #0x26	; 38
      0000DC 26                     370 	.db #0x26	; 38
      0000DD 26                     371 	.db #0x26	; 38
      0000DE 26                     372 	.db #0x26	; 38
      0000DF 26                     373 	.db #0x26	; 38
      0000E0 26                     374 	.db #0x26	; 38
      0000E1 26                     375 	.db #0x26	; 38
      0000E2 26                     376 	.db #0x26	; 38
      0000E3 26                     377 	.db #0x26	; 38
      0000E4 26                     378 	.db #0x26	; 38
      0000E5 26                     379 	.db #0x26	; 38
      0000E6 26                     380 	.db #0x26	; 38
      0000E7 26                     381 	.db #0x26	; 38
      0000E8 26                     382 	.db #0x26	; 38
      0000E9 26                     383 	.db #0x26	; 38
      0000EA 26                     384 	.db #0x26	; 38
      0000EB 26                     385 	.db #0x26	; 38
      0000EC 26                     386 	.db #0x26	; 38
      0000ED 26                     387 	.db #0x26	; 38
      0000EE 26                     388 	.db #0x26	; 38
      0000EF 26                     389 	.db #0x26	; 38
      0000F0 26                     390 	.db #0x26	; 38
      0000F1 26                     391 	.db #0x26	; 38
      0000F2 26                     392 	.db #0x26	; 38
      0000F3 26                     393 	.db #0x26	; 38
      0000F4 26                     394 	.db #0x26	; 38
      0000F5 26                     395 	.db #0x26	; 38
      0000F6 26                     396 	.db #0x26	; 38
      0000F7 26                     397 	.db #0x26	; 38
      0000F8 26                     398 	.db #0x26	; 38
      0000F9 26                     399 	.db #0x26	; 38
      0000FA 26                     400 	.db #0x26	; 38
      0000FB 26                     401 	.db #0x26	; 38
      0000FC 26                     402 	.db #0x26	; 38
      0000FD 26                     403 	.db #0x26	; 38
      0000FE 26                     404 	.db #0x26	; 38
      0000FF 26                     405 	.db #0x26	; 38
      000100 26                     406 	.db #0x26	; 38
      000101 26                     407 	.db #0x26	; 38
      000102 26                     408 	.db #0x26	; 38
      000103 26                     409 	.db #0x26	; 38
      000104 26                     410 	.db #0x26	; 38
      000105 26                     411 	.db #0x26	; 38
      000106 26                     412 	.db #0x26	; 38
      000107 26                     413 	.db #0x26	; 38
      000108 26                     414 	.db #0x26	; 38
      000109 26                     415 	.db #0x26	; 38
      00010A 26                     416 	.db #0x26	; 38
      00010B 26                     417 	.db #0x26	; 38
      00010C 26                     418 	.db #0x26	; 38
      00010D 26                     419 	.db #0x26	; 38
      00010E 26                     420 	.db #0x26	; 38
      00010F 26                     421 	.db #0x26	; 38
      000110 26                     422 	.db #0x26	; 38
      000111 26                     423 	.db #0x26	; 38
      000112 26                     424 	.db #0x26	; 38
      000113 26                     425 	.db #0x26	; 38
      000114 26                     426 	.db #0x26	; 38
      000115 26                     427 	.db #0x26	; 38
      000116 26                     428 	.db #0x26	; 38
      000117 26                     429 	.db #0x26	; 38
      000118 26                     430 	.db #0x26	; 38
      000119 26                     431 	.db #0x26	; 38
      00011A 26                     432 	.db #0x26	; 38
      00011B 26                     433 	.db #0x26	; 38
      00011C 26                     434 	.db #0x26	; 38
      00011D 26                     435 	.db #0x26	; 38
      00011E 26                     436 	.db #0x26	; 38
      00011F 26                     437 	.db #0x26	; 38
      000120 26                     438 	.db #0x26	; 38
      000121 26                     439 	.db #0x26	; 38
      000122 26                     440 	.db #0x26	; 38
      000123 26                     441 	.db #0x26	; 38
      000124 26                     442 	.db #0x26	; 38
      000125 26                     443 	.db #0x26	; 38
      000126 26                     444 	.db #0x26	; 38
      000127 26                     445 	.db #0x26	; 38
      000128 26                     446 	.db #0x26	; 38
      000129 26                     447 	.db #0x26	; 38
      00012A 26                     448 	.db #0x26	; 38
      00012B 26                     449 	.db #0x26	; 38
      00012C 26                     450 	.db #0x26	; 38
      00012D 26                     451 	.db #0x26	; 38
      00012E 26                     452 	.db #0x26	; 38
      00012F 26                     453 	.db #0x26	; 38
      000130 26                     454 	.db #0x26	; 38
      000131 26                     455 	.db #0x26	; 38
      000132 26                     456 	.db #0x26	; 38
      000133 26                     457 	.db #0x26	; 38
      000134 26                     458 	.db #0x26	; 38
      000135 26                     459 	.db #0x26	; 38
      000136 26                     460 	.db #0x26	; 38
      000137 26                     461 	.db #0x26	; 38
      000138 26                     462 	.db #0x26	; 38
      000139 26                     463 	.db #0x26	; 38
      00013A 26                     464 	.db #0x26	; 38
      00013B 26                     465 	.db #0x26	; 38
      00013C 26                     466 	.db #0x26	; 38
      00013D 26                     467 	.db #0x26	; 38
      00013E 26                     468 	.db #0x26	; 38
      00013F 26                     469 	.db #0x26	; 38
      000140 26                     470 	.db #0x26	; 38
      000141 26                     471 	.db #0x26	; 38
      000142 26                     472 	.db #0x26	; 38
      000143 26                     473 	.db #0x26	; 38
      000144 26                     474 	.db #0x26	; 38
      000145 26                     475 	.db #0x26	; 38
      000146 26                     476 	.db #0x26	; 38
      000147 26                     477 	.db #0x26	; 38
      000148 26                     478 	.db #0x26	; 38
      000149 26                     479 	.db #0x26	; 38
      00014A 26                     480 	.db #0x26	; 38
      00014B 26                     481 	.db #0x26	; 38
      00014C 26                     482 	.db #0x26	; 38
      00014D 26                     483 	.db #0x26	; 38
      00014E 26                     484 	.db #0x26	; 38
      00014F 26                     485 	.db #0x26	; 38
      000150 26                     486 	.db #0x26	; 38
      000151 26                     487 	.db #0x26	; 38
      000152 26                     488 	.db #0x26	; 38
      000153 26                     489 	.db #0x26	; 38
      000154 26                     490 	.db #0x26	; 38
      000155 26                     491 	.db #0x26	; 38
      000156 26                     492 	.db #0x26	; 38
      000157 26                     493 	.db #0x26	; 38
      000158 26                     494 	.db #0x26	; 38
      000159 26                     495 	.db #0x26	; 38
      00015A 26                     496 	.db #0x26	; 38
      00015B 26                     497 	.db #0x26	; 38
      00015C 26                     498 	.db #0x26	; 38
      00015D 26                     499 	.db #0x26	; 38
      00015E 26                     500 	.db #0x26	; 38
      00015F 26                     501 	.db #0x26	; 38
      000160 26                     502 	.db #0x26	; 38
      000161 26                     503 	.db #0x26	; 38
      000162 26                     504 	.db #0x26	; 38
      000163 26                     505 	.db #0x26	; 38
      000164 26                     506 	.db #0x26	; 38
      000165 26                     507 	.db #0x26	; 38
      000166 26                     508 	.db #0x26	; 38
      000167 26                     509 	.db #0x26	; 38
      000168 26                     510 	.db #0x26	; 38
      000169 26                     511 	.db #0x26	; 38
      00016A 26                     512 	.db #0x26	; 38
      00016B 26                     513 	.db #0x26	; 38
      00016C 26                     514 	.db #0x26	; 38
      00016D 26                     515 	.db #0x26	; 38
      00016E 26                     516 	.db #0x26	; 38
      00016F 26                     517 	.db #0x26	; 38
      000170 26                     518 	.db #0x26	; 38
      000171 26                     519 	.db #0x26	; 38
      000172 26                     520 	.db #0x26	; 38
      000173 26                     521 	.db #0x26	; 38
      000174 26                     522 	.db #0x26	; 38
      000175 26                     523 	.db #0x26	; 38
      000176 26                     524 	.db #0x26	; 38
      000177 26                     525 	.db #0x26	; 38
      000178 26                     526 	.db #0x26	; 38
      000179 26                     527 	.db #0x26	; 38
      00017A 26                     528 	.db #0x26	; 38
      00017B 26                     529 	.db #0x26	; 38
      00017C 26                     530 	.db #0x26	; 38
      00017D 26                     531 	.db #0x26	; 38
      00017E 26                     532 	.db #0x26	; 38
      00017F 26                     533 	.db #0x26	; 38
      000180 26                     534 	.db #0x26	; 38
      000181 26                     535 	.db #0x26	; 38
      000182 26                     536 	.db #0x26	; 38
      000183 26                     537 	.db #0x26	; 38
      000184 26                     538 	.db #0x26	; 38
      000185 26                     539 	.db #0x26	; 38
      000186 26                     540 	.db #0x26	; 38
      000187 26                     541 	.db #0x26	; 38
      000188 26                     542 	.db #0x26	; 38
      000189 26                     543 	.db #0x26	; 38
      00018A 26                     544 	.db #0x26	; 38
      00018B 26                     545 	.db #0x26	; 38
      00018C 26                     546 	.db #0x26	; 38
      00018D 26                     547 	.db #0x26	; 38
      00018E 26                     548 	.db #0x26	; 38
      00018F 26                     549 	.db #0x26	; 38
      000190 26                     550 	.db #0x26	; 38
      000191 26                     551 	.db #0x26	; 38
      000192 26                     552 	.db #0x26	; 38
      000193 26                     553 	.db #0x26	; 38
      000194 26                     554 	.db #0x26	; 38
      000195 26                     555 	.db #0x26	; 38
      000196 26                     556 	.db #0x26	; 38
      000197 26                     557 	.db #0x26	; 38
      000198 26                     558 	.db #0x26	; 38
      000199 26                     559 	.db #0x26	; 38
      00019A 26                     560 	.db #0x26	; 38
      00019B 26                     561 	.db #0x26	; 38
      00019C 26                     562 	.db #0x26	; 38
      00019D 26                     563 	.db #0x26	; 38
      00019E 26                     564 	.db #0x26	; 38
      00019F 26                     565 	.db #0x26	; 38
      0001A0 26                     566 	.db #0x26	; 38
      0001A1 26                     567 	.db #0x26	; 38
      0001A2 26                     568 	.db #0x26	; 38
      0001A3 26                     569 	.db #0x26	; 38
      0001A4 26                     570 	.db #0x26	; 38
      0001A5 26                     571 	.db #0x26	; 38
      0001A6 26                     572 	.db #0x26	; 38
      0001A7 26                     573 	.db #0x26	; 38
      0001A8 26                     574 	.db #0x26	; 38
      0001A9 26                     575 	.db #0x26	; 38
      0001AA 26                     576 	.db #0x26	; 38
      0001AB 26                     577 	.db #0x26	; 38
      0001AC 26                     578 	.db #0x26	; 38
      0001AD 26                     579 	.db #0x26	; 38
      0001AE 26                     580 	.db #0x26	; 38
      0001AF 26                     581 	.db #0x26	; 38
      0001B0 26                     582 	.db #0x26	; 38
      0001B1 26                     583 	.db #0x26	; 38
      0001B2 26                     584 	.db #0x26	; 38
      0001B3 26                     585 	.db #0x26	; 38
      0001B4 26                     586 	.db #0x26	; 38
      0001B5 26                     587 	.db #0x26	; 38
      0001B6 26                     588 	.db #0x26	; 38
      0001B7 26                     589 	.db #0x26	; 38
      0001B8 26                     590 	.db #0x26	; 38
      0001B9 26                     591 	.db #0x26	; 38
      0001BA 25                     592 	.db #0x25	; 37
      0001BB 26                     593 	.db #0x26	; 38
      0001BC 26                     594 	.db #0x26	; 38
      0001BD 26                     595 	.db #0x26	; 38
      0001BE 26                     596 	.db #0x26	; 38
      0001BF 26                     597 	.db #0x26	; 38
      0001C0 26                     598 	.db #0x26	; 38
      0001C1 26                     599 	.db #0x26	; 38
      0001C2 26                     600 	.db #0x26	; 38
      0001C3 26                     601 	.db #0x26	; 38
      0001C4 26                     602 	.db #0x26	; 38
      0001C5 26                     603 	.db #0x26	; 38
      0001C6 26                     604 	.db #0x26	; 38
      0001C7 26                     605 	.db #0x26	; 38
      0001C8 26                     606 	.db #0x26	; 38
      0001C9 26                     607 	.db #0x26	; 38
      0001CA 26                     608 	.db #0x26	; 38
      0001CB 26                     609 	.db #0x26	; 38
      0001CC 26                     610 	.db #0x26	; 38
      0001CD 26                     611 	.db #0x26	; 38
      0001CE 26                     612 	.db #0x26	; 38
      0001CF 26                     613 	.db #0x26	; 38
      0001D0 26                     614 	.db #0x26	; 38
      0001D1 26                     615 	.db #0x26	; 38
      0001D2 26                     616 	.db #0x26	; 38
      0001D3 26                     617 	.db #0x26	; 38
      0001D4 26                     618 	.db #0x26	; 38
      0001D5 26                     619 	.db #0x26	; 38
      0001D6 26                     620 	.db #0x26	; 38
      0001D7 26                     621 	.db #0x26	; 38
      0001D8 26                     622 	.db #0x26	; 38
      0001D9 26                     623 	.db #0x26	; 38
      0001DA 27                     624 	.db #0x27	; 39
      0001DB 28                     625 	.db #0x28	; 40
      0001DC 26                     626 	.db #0x26	; 38
      0001DD 26                     627 	.db #0x26	; 38
      0001DE 26                     628 	.db #0x26	; 38
      0001DF 26                     629 	.db #0x26	; 38
      0001E0 26                     630 	.db #0x26	; 38
      0001E1 26                     631 	.db #0x26	; 38
      0001E2 26                     632 	.db #0x26	; 38
      0001E3 26                     633 	.db #0x26	; 38
      0001E4 26                     634 	.db #0x26	; 38
      0001E5 26                     635 	.db #0x26	; 38
      0001E6 26                     636 	.db #0x26	; 38
      0001E7 26                     637 	.db #0x26	; 38
      0001E8 26                     638 	.db #0x26	; 38
      0001E9 26                     639 	.db #0x26	; 38
      0001EA 26                     640 	.db #0x26	; 38
      0001EB 26                     641 	.db #0x26	; 38
      0001EC 26                     642 	.db #0x26	; 38
      0001ED 26                     643 	.db #0x26	; 38
      0001EE 25                     644 	.db #0x25	; 37
      0001EF 26                     645 	.db #0x26	; 38
      0001F0 26                     646 	.db #0x26	; 38
      0001F1 26                     647 	.db #0x26	; 38
      0001F2 26                     648 	.db #0x26	; 38
      0001F3 26                     649 	.db #0x26	; 38
      0001F4 26                     650 	.db #0x26	; 38
      0001F5 26                     651 	.db #0x26	; 38
      0001F6 26                     652 	.db #0x26	; 38
      0001F7 26                     653 	.db #0x26	; 38
      0001F8 26                     654 	.db #0x26	; 38
      0001F9 26                     655 	.db #0x26	; 38
      0001FA 2A                     656 	.db #0x2a	; 42
      0001FB 29                     657 	.db #0x29	; 41
      0001FC 26                     658 	.db #0x26	; 38
      0001FD 26                     659 	.db #0x26	; 38
      0001FE 26                     660 	.db #0x26	; 38
      0001FF 26                     661 	.db #0x26	; 38
      000200 26                     662 	.db #0x26	; 38
      000201 26                     663 	.db #0x26	; 38
      000202 26                     664 	.db #0x26	; 38
      000203 26                     665 	.db #0x26	; 38
      000204 26                     666 	.db #0x26	; 38
      000205 26                     667 	.db #0x26	; 38
      000206 26                     668 	.db #0x26	; 38
      000207 26                     669 	.db #0x26	; 38
      000208 26                     670 	.db #0x26	; 38
      000209 26                     671 	.db #0x26	; 38
      00020A 26                     672 	.db #0x26	; 38
      00020B 26                     673 	.db #0x26	; 38
      00020C 26                     674 	.db #0x26	; 38
      00020D 26                     675 	.db #0x26	; 38
      00020E 27                     676 	.db #0x27	; 39
      00020F 28                     677 	.db #0x28	; 40
      000210 26                     678 	.db #0x26	; 38
      000211 26                     679 	.db #0x26	; 38
      000212 26                     680 	.db #0x26	; 38
      000213 26                     681 	.db #0x26	; 38
      000214 26                     682 	.db #0x26	; 38
      000215 26                     683 	.db #0x26	; 38
      000216 26                     684 	.db #0x26	; 38
      000217 26                     685 	.db #0x26	; 38
      000218 26                     686 	.db #0x26	; 38
      000219 26                     687 	.db #0x26	; 38
      00021A 26                     688 	.db #0x26	; 38
      00021B 26                     689 	.db #0x26	; 38
      00021C 26                     690 	.db #0x26	; 38
      00021D 26                     691 	.db #0x26	; 38
      00021E 26                     692 	.db #0x26	; 38
      00021F 26                     693 	.db #0x26	; 38
      000220 26                     694 	.db #0x26	; 38
      000221 26                     695 	.db #0x26	; 38
      000222 26                     696 	.db #0x26	; 38
      000223 26                     697 	.db #0x26	; 38
      000224 26                     698 	.db #0x26	; 38
      000225 26                     699 	.db #0x26	; 38
      000226 26                     700 	.db #0x26	; 38
      000227 26                     701 	.db #0x26	; 38
      000228 26                     702 	.db #0x26	; 38
      000229 26                     703 	.db #0x26	; 38
      00022A 26                     704 	.db #0x26	; 38
      00022B 26                     705 	.db #0x26	; 38
      00022C 26                     706 	.db #0x26	; 38
      00022D 26                     707 	.db #0x26	; 38
      00022E 2A                     708 	.db #0x2a	; 42
      00022F 29                     709 	.db #0x29	; 41
      000230 26                     710 	.db #0x26	; 38
      000231 26                     711 	.db #0x26	; 38
      000232 26                     712 	.db #0x26	; 38
      000233 26                     713 	.db #0x26	; 38
      000234 26                     714 	.db #0x26	; 38
      000235 26                     715 	.db #0x26	; 38
      000236 26                     716 	.db #0x26	; 38
      000237 26                     717 	.db #0x26	; 38
      000238 26                     718 	.db #0x26	; 38
      000239 26                     719 	.db #0x26	; 38
      00023A 26                     720 	.db #0x26	; 38
      00023B 26                     721 	.db #0x26	; 38
      00023C 26                     722 	.db #0x26	; 38
      00023D 26                     723 	.db #0x26	; 38
      00023E 26                     724 	.db #0x26	; 38
      00023F 26                     725 	.db #0x26	; 38
      000240 26                     726 	.db #0x26	; 38
      000241 26                     727 	.db #0x26	; 38
      000242 26                     728 	.db #0x26	; 38
      000243 26                     729 	.db #0x26	; 38
      000244 26                     730 	.db #0x26	; 38
      000245 26                     731 	.db #0x26	; 38
      000246 26                     732 	.db #0x26	; 38
      000247 26                     733 	.db #0x26	; 38
      000248 26                     734 	.db #0x26	; 38
      000249 26                     735 	.db #0x26	; 38
      00024A 26                     736 	.db #0x26	; 38
      00024B 26                     737 	.db #0x26	; 38
      00024C 26                     738 	.db #0x26	; 38
      00024D 26                     739 	.db #0x26	; 38
      00024E 26                     740 	.db #0x26	; 38
      00024F 26                     741 	.db #0x26	; 38
      000250 26                     742 	.db #0x26	; 38
      000251 26                     743 	.db #0x26	; 38
      000252 26                     744 	.db #0x26	; 38
      000253 26                     745 	.db #0x26	; 38
      000254 26                     746 	.db #0x26	; 38
      000255 26                     747 	.db #0x26	; 38
      000256 26                     748 	.db #0x26	; 38
      000257 26                     749 	.db #0x26	; 38
      000258 26                     750 	.db #0x26	; 38
      000259 26                     751 	.db #0x26	; 38
      00025A 26                     752 	.db #0x26	; 38
      00025B 26                     753 	.db #0x26	; 38
      00025C 26                     754 	.db #0x26	; 38
      00025D 26                     755 	.db #0x26	; 38
      00025E 26                     756 	.db #0x26	; 38
      00025F 26                     757 	.db #0x26	; 38
      000260 26                     758 	.db #0x26	; 38
      000261 26                     759 	.db #0x26	; 38
      000262 26                     760 	.db #0x26	; 38
      000263 26                     761 	.db #0x26	; 38
      000264 26                     762 	.db #0x26	; 38
      000265 26                     763 	.db #0x26	; 38
      000266 26                     764 	.db #0x26	; 38
      000267 26                     765 	.db #0x26	; 38
      000268 26                     766 	.db #0x26	; 38
      000269 26                     767 	.db #0x26	; 38
      00026A 26                     768 	.db #0x26	; 38
      00026B 26                     769 	.db #0x26	; 38
      00026C 26                     770 	.db #0x26	; 38
      00026D 26                     771 	.db #0x26	; 38
      00026E 26                     772 	.db #0x26	; 38
      00026F 26                     773 	.db #0x26	; 38
      000270 26                     774 	.db #0x26	; 38
      000271 26                     775 	.db #0x26	; 38
      000272 26                     776 	.db #0x26	; 38
      000273 26                     777 	.db #0x26	; 38
      000274 26                     778 	.db #0x26	; 38
      000275 26                     779 	.db #0x26	; 38
      000276 26                     780 	.db #0x26	; 38
      000277 26                     781 	.db #0x26	; 38
      000278 26                     782 	.db #0x26	; 38
      000279 26                     783 	.db #0x26	; 38
      00027A 26                     784 	.db #0x26	; 38
      00027B 26                     785 	.db #0x26	; 38
      00027C 26                     786 	.db #0x26	; 38
      00027D 26                     787 	.db #0x26	; 38
      00027E 26                     788 	.db #0x26	; 38
      00027F 26                     789 	.db #0x26	; 38
      000280 26                     790 	.db #0x26	; 38
      000281 26                     791 	.db #0x26	; 38
      000282 26                     792 	.db #0x26	; 38
      000283 26                     793 	.db #0x26	; 38
      000284 26                     794 	.db #0x26	; 38
      000285 26                     795 	.db #0x26	; 38
      000286 26                     796 	.db #0x26	; 38
      000287 25                     797 	.db #0x25	; 37
      000288 26                     798 	.db #0x26	; 38
      000289 26                     799 	.db #0x26	; 38
      00028A 26                     800 	.db #0x26	; 38
      00028B 26                     801 	.db #0x26	; 38
      00028C 26                     802 	.db #0x26	; 38
      00028D 26                     803 	.db #0x26	; 38
      00028E 26                     804 	.db #0x26	; 38
      00028F 26                     805 	.db #0x26	; 38
      000290 26                     806 	.db #0x26	; 38
      000291 26                     807 	.db #0x26	; 38
      000292 26                     808 	.db #0x26	; 38
      000293 26                     809 	.db #0x26	; 38
      000294 26                     810 	.db #0x26	; 38
      000295 26                     811 	.db #0x26	; 38
      000296 26                     812 	.db #0x26	; 38
      000297 26                     813 	.db #0x26	; 38
      000298 26                     814 	.db #0x26	; 38
      000299 26                     815 	.db #0x26	; 38
      00029A 26                     816 	.db #0x26	; 38
      00029B 26                     817 	.db #0x26	; 38
      00029C 26                     818 	.db #0x26	; 38
      00029D 26                     819 	.db #0x26	; 38
      00029E 26                     820 	.db #0x26	; 38
      00029F 26                     821 	.db #0x26	; 38
      0002A0 26                     822 	.db #0x26	; 38
      0002A1 26                     823 	.db #0x26	; 38
      0002A2 26                     824 	.db #0x26	; 38
      0002A3 26                     825 	.db #0x26	; 38
      0002A4 26                     826 	.db #0x26	; 38
      0002A5 26                     827 	.db #0x26	; 38
      0002A6 26                     828 	.db #0x26	; 38
      0002A7 28                     829 	.db #0x28	; 40
      0002A8 26                     830 	.db #0x26	; 38
      0002A9 26                     831 	.db #0x26	; 38
      0002AA 26                     832 	.db #0x26	; 38
      0002AB 26                     833 	.db #0x26	; 38
      0002AC 26                     834 	.db #0x26	; 38
      0002AD 26                     835 	.db #0x26	; 38
      0002AE 26                     836 	.db #0x26	; 38
      0002AF 26                     837 	.db #0x26	; 38
      0002B0 26                     838 	.db #0x26	; 38
      0002B1 26                     839 	.db #0x26	; 38
      0002B2 26                     840 	.db #0x26	; 38
      0002B3 26                     841 	.db #0x26	; 38
      0002B4 26                     842 	.db #0x26	; 38
      0002B5 26                     843 	.db #0x26	; 38
      0002B6 26                     844 	.db #0x26	; 38
      0002B7 26                     845 	.db #0x26	; 38
      0002B8 26                     846 	.db #0x26	; 38
      0002B9 26                     847 	.db #0x26	; 38
      0002BA 26                     848 	.db #0x26	; 38
      0002BB 26                     849 	.db #0x26	; 38
      0002BC 26                     850 	.db #0x26	; 38
      0002BD 26                     851 	.db #0x26	; 38
      0002BE 26                     852 	.db #0x26	; 38
      0002BF 26                     853 	.db #0x26	; 38
      0002C0 26                     854 	.db #0x26	; 38
      0002C1 26                     855 	.db #0x26	; 38
      0002C2 26                     856 	.db #0x26	; 38
      0002C3 26                     857 	.db #0x26	; 38
      0002C4 26                     858 	.db #0x26	; 38
      0002C5 26                     859 	.db #0x26	; 38
      0002C6 27                     860 	.db #0x27	; 39
      0002C7 29                     861 	.db #0x29	; 41
      0002C8 26                     862 	.db #0x26	; 38
      0002C9 26                     863 	.db #0x26	; 38
      0002CA 26                     864 	.db #0x26	; 38
      0002CB 26                     865 	.db #0x26	; 38
      0002CC 26                     866 	.db #0x26	; 38
      0002CD 26                     867 	.db #0x26	; 38
      0002CE 26                     868 	.db #0x26	; 38
      0002CF 26                     869 	.db #0x26	; 38
      0002D0 26                     870 	.db #0x26	; 38
      0002D1 26                     871 	.db #0x26	; 38
      0002D2 26                     872 	.db #0x26	; 38
      0002D3 26                     873 	.db #0x26	; 38
      0002D4 26                     874 	.db #0x26	; 38
      0002D5 26                     875 	.db #0x26	; 38
      0002D6 26                     876 	.db #0x26	; 38
      0002D7 26                     877 	.db #0x26	; 38
      0002D8 26                     878 	.db #0x26	; 38
      0002D9 26                     879 	.db #0x26	; 38
      0002DA 26                     880 	.db #0x26	; 38
      0002DB 26                     881 	.db #0x26	; 38
      0002DC 26                     882 	.db #0x26	; 38
      0002DD 26                     883 	.db #0x26	; 38
      0002DE 26                     884 	.db #0x26	; 38
      0002DF 26                     885 	.db #0x26	; 38
      0002E0 26                     886 	.db #0x26	; 38
      0002E1 26                     887 	.db #0x26	; 38
      0002E2 26                     888 	.db #0x26	; 38
      0002E3 26                     889 	.db #0x26	; 38
      0002E4 26                     890 	.db #0x26	; 38
      0002E5 26                     891 	.db #0x26	; 38
      0002E6 2A                     892 	.db #0x2a	; 42
      0002E7 26                     893 	.db #0x26	; 38
      0002E8 26                     894 	.db #0x26	; 38
      0002E9 26                     895 	.db #0x26	; 38
      0002EA 26                     896 	.db #0x26	; 38
      0002EB 26                     897 	.db #0x26	; 38
      0002EC 26                     898 	.db #0x26	; 38
      0002ED 26                     899 	.db #0x26	; 38
      0002EE 26                     900 	.db #0x26	; 38
      0002EF 26                     901 	.db #0x26	; 38
      0002F0 26                     902 	.db #0x26	; 38
      0002F1 26                     903 	.db #0x26	; 38
      0002F2 26                     904 	.db #0x26	; 38
      0002F3 26                     905 	.db #0x26	; 38
      0002F4 26                     906 	.db #0x26	; 38
      0002F5 26                     907 	.db #0x26	; 38
      0002F6 26                     908 	.db #0x26	; 38
      0002F7 26                     909 	.db #0x26	; 38
      0002F8 26                     910 	.db #0x26	; 38
      0002F9 26                     911 	.db #0x26	; 38
      0002FA 26                     912 	.db #0x26	; 38
      0002FB 26                     913 	.db #0x26	; 38
      0002FC 26                     914 	.db #0x26	; 38
      0002FD 26                     915 	.db #0x26	; 38
      0002FE 26                     916 	.db #0x26	; 38
      0002FF 26                     917 	.db #0x26	; 38
      000300 26                     918 	.db #0x26	; 38
      000301 26                     919 	.db #0x26	; 38
      000302 26                     920 	.db #0x26	; 38
      000303 26                     921 	.db #0x26	; 38
      000304 26                     922 	.db #0x26	; 38
      000305 26                     923 	.db #0x26	; 38
      000306 26                     924 	.db #0x26	; 38
      000307 26                     925 	.db #0x26	; 38
      000308 26                     926 	.db #0x26	; 38
      000309 26                     927 	.db #0x26	; 38
      00030A 26                     928 	.db #0x26	; 38
      00030B 26                     929 	.db #0x26	; 38
      00030C 26                     930 	.db #0x26	; 38
      00030D 26                     931 	.db #0x26	; 38
      00030E 26                     932 	.db #0x26	; 38
      00030F 26                     933 	.db #0x26	; 38
      000310 26                     934 	.db #0x26	; 38
      000311 26                     935 	.db #0x26	; 38
      000312 26                     936 	.db #0x26	; 38
      000313 26                     937 	.db #0x26	; 38
      000314 26                     938 	.db #0x26	; 38
      000315 26                     939 	.db #0x26	; 38
      000316 26                     940 	.db #0x26	; 38
      000317 26                     941 	.db #0x26	; 38
      000318 26                     942 	.db #0x26	; 38
      000319 26                     943 	.db #0x26	; 38
      00031A 26                     944 	.db #0x26	; 38
      00031B 26                     945 	.db #0x26	; 38
      00031C 26                     946 	.db #0x26	; 38
      00031D 26                     947 	.db #0x26	; 38
      00031E 26                     948 	.db #0x26	; 38
      00031F 26                     949 	.db #0x26	; 38
      000320 26                     950 	.db #0x26	; 38
      000321 26                     951 	.db #0x26	; 38
      000322 26                     952 	.db #0x26	; 38
      000323 26                     953 	.db #0x26	; 38
      000324 26                     954 	.db #0x26	; 38
      000325 26                     955 	.db #0x26	; 38
      000326 26                     956 	.db #0x26	; 38
      000327 26                     957 	.db #0x26	; 38
      000328 26                     958 	.db #0x26	; 38
      000329 26                     959 	.db #0x26	; 38
      00032A 26                     960 	.db #0x26	; 38
      00032B 26                     961 	.db #0x26	; 38
      00032C 26                     962 	.db #0x26	; 38
      00032D 26                     963 	.db #0x26	; 38
      00032E 26                     964 	.db #0x26	; 38
      00032F 26                     965 	.db #0x26	; 38
      000330 26                     966 	.db #0x26	; 38
      000331 26                     967 	.db #0x26	; 38
      000332 26                     968 	.db #0x26	; 38
      000333 26                     969 	.db #0x26	; 38
      000334 26                     970 	.db #0x26	; 38
      000335 26                     971 	.db #0x26	; 38
      000336 26                     972 	.db #0x26	; 38
      000337 26                     973 	.db #0x26	; 38
      000338 26                     974 	.db #0x26	; 38
      000339 26                     975 	.db #0x26	; 38
      00033A 26                     976 	.db #0x26	; 38
      00033B 26                     977 	.db #0x26	; 38
      00033C 26                     978 	.db #0x26	; 38
      00033D 26                     979 	.db #0x26	; 38
      00033E 26                     980 	.db #0x26	; 38
      00033F 26                     981 	.db #0x26	; 38
      000340 26                     982 	.db #0x26	; 38
      000341 26                     983 	.db #0x26	; 38
      000342 26                     984 	.db #0x26	; 38
      000343 26                     985 	.db #0x26	; 38
      000344 26                     986 	.db #0x26	; 38
      000345 26                     987 	.db #0x26	; 38
      000346 26                     988 	.db #0x26	; 38
      000347 26                     989 	.db #0x26	; 38
      000348 26                     990 	.db #0x26	; 38
      000349 26                     991 	.db #0x26	; 38
      00034A 26                     992 	.db #0x26	; 38
      00034B 26                     993 	.db #0x26	; 38
      00034C 26                     994 	.db #0x26	; 38
      00034D 26                     995 	.db #0x26	; 38
      00034E 26                     996 	.db #0x26	; 38
      00034F 26                     997 	.db #0x26	; 38
      000350 26                     998 	.db #0x26	; 38
      000351 26                     999 	.db #0x26	; 38
      000352 26                    1000 	.db #0x26	; 38
      000353 26                    1001 	.db #0x26	; 38
      000354 26                    1002 	.db #0x26	; 38
      000355 26                    1003 	.db #0x26	; 38
      000356 26                    1004 	.db #0x26	; 38
      000357 26                    1005 	.db #0x26	; 38
      000358 26                    1006 	.db #0x26	; 38
      000359 26                    1007 	.db #0x26	; 38
      00035A 26                    1008 	.db #0x26	; 38
      00035B 26                    1009 	.db #0x26	; 38
      00035C 26                    1010 	.db #0x26	; 38
      00035D 26                    1011 	.db #0x26	; 38
      00035E 26                    1012 	.db #0x26	; 38
      00035F 26                    1013 	.db #0x26	; 38
      000360 26                    1014 	.db #0x26	; 38
      000361 26                    1015 	.db #0x26	; 38
      000362 26                    1016 	.db #0x26	; 38
      000363 26                    1017 	.db #0x26	; 38
      000364 26                    1018 	.db #0x26	; 38
      000365 26                    1019 	.db #0x26	; 38
      000366 26                    1020 	.db #0x26	; 38
      000367 26                    1021 	.db #0x26	; 38
      000368 26                    1022 	.db #0x26	; 38
      000369 26                    1023 	.db #0x26	; 38
      00036A 26                    1024 	.db #0x26	; 38
      00036B 26                    1025 	.db #0x26	; 38
      00036C 26                    1026 	.db #0x26	; 38
      00036D 26                    1027 	.db #0x26	; 38
      00036E 26                    1028 	.db #0x26	; 38
      00036F 26                    1029 	.db #0x26	; 38
      000370 26                    1030 	.db #0x26	; 38
      000371 26                    1031 	.db #0x26	; 38
      000372 26                    1032 	.db #0x26	; 38
      000373 26                    1033 	.db #0x26	; 38
      000374 26                    1034 	.db #0x26	; 38
      000375 26                    1035 	.db #0x26	; 38
      000376 26                    1036 	.db #0x26	; 38
      000377 26                    1037 	.db #0x26	; 38
      000378 25                    1038 	.db #0x25	; 37
      000379 26                    1039 	.db #0x26	; 38
      00037A 26                    1040 	.db #0x26	; 38
      00037B 26                    1041 	.db #0x26	; 38
      00037C 26                    1042 	.db #0x26	; 38
      00037D 26                    1043 	.db #0x26	; 38
      00037E 26                    1044 	.db #0x26	; 38
      00037F 26                    1045 	.db #0x26	; 38
      000380 26                    1046 	.db #0x26	; 38
      000381 26                    1047 	.db #0x26	; 38
      000382 26                    1048 	.db #0x26	; 38
      000383 26                    1049 	.db #0x26	; 38
      000384 26                    1050 	.db #0x26	; 38
      000385 26                    1051 	.db #0x26	; 38
      000386 26                    1052 	.db #0x26	; 38
      000387 26                    1053 	.db #0x26	; 38
      000388 26                    1054 	.db #0x26	; 38
      000389 26                    1055 	.db #0x26	; 38
      00038A 26                    1056 	.db #0x26	; 38
      00038B 26                    1057 	.db #0x26	; 38
      00038C 26                    1058 	.db #0x26	; 38
      00038D 26                    1059 	.db #0x26	; 38
      00038E 26                    1060 	.db #0x26	; 38
      00038F 26                    1061 	.db #0x26	; 38
      000390 26                    1062 	.db #0x26	; 38
      000391 26                    1063 	.db #0x26	; 38
      000392 26                    1064 	.db #0x26	; 38
      000393 26                    1065 	.db #0x26	; 38
      000394 26                    1066 	.db #0x26	; 38
      000395 26                    1067 	.db #0x26	; 38
      000396 26                    1068 	.db #0x26	; 38
      000397 26                    1069 	.db #0x26	; 38
      000398 27                    1070 	.db #0x27	; 39
      000399 28                    1071 	.db #0x28	; 40
      00039A 26                    1072 	.db #0x26	; 38
      00039B 26                    1073 	.db #0x26	; 38
      00039C 26                    1074 	.db #0x26	; 38
      00039D 26                    1075 	.db #0x26	; 38
      00039E 26                    1076 	.db #0x26	; 38
      00039F 26                    1077 	.db #0x26	; 38
      0003A0 26                    1078 	.db #0x26	; 38
      0003A1 26                    1079 	.db #0x26	; 38
      0003A2 26                    1080 	.db #0x26	; 38
      0003A3 26                    1081 	.db #0x26	; 38
      0003A4 26                    1082 	.db #0x26	; 38
      0003A5 26                    1083 	.db #0x26	; 38
      0003A6 26                    1084 	.db #0x26	; 38
      0003A7 26                    1085 	.db #0x26	; 38
      0003A8 26                    1086 	.db #0x26	; 38
      0003A9 26                    1087 	.db #0x26	; 38
      0003AA 26                    1088 	.db #0x26	; 38
      0003AB 26                    1089 	.db #0x26	; 38
      0003AC 26                    1090 	.db #0x26	; 38
      0003AD 26                    1091 	.db #0x26	; 38
      0003AE 26                    1092 	.db #0x26	; 38
      0003AF 26                    1093 	.db #0x26	; 38
      0003B0 26                    1094 	.db #0x26	; 38
      0003B1 26                    1095 	.db #0x26	; 38
      0003B2 26                    1096 	.db #0x26	; 38
      0003B3 26                    1097 	.db #0x26	; 38
      0003B4 26                    1098 	.db #0x26	; 38
      0003B5 26                    1099 	.db #0x26	; 38
      0003B6 26                    1100 	.db #0x26	; 38
      0003B7 26                    1101 	.db #0x26	; 38
      0003B8 2A                    1102 	.db #0x2a	; 42
      0003B9 29                    1103 	.db #0x29	; 41
      0003BA 26                    1104 	.db #0x26	; 38
      0003BB 26                    1105 	.db #0x26	; 38
      0003BC 26                    1106 	.db #0x26	; 38
      0003BD 26                    1107 	.db #0x26	; 38
      0003BE 26                    1108 	.db #0x26	; 38
      0003BF 26                    1109 	.db #0x26	; 38
      0003C0 26                    1110 	.db #0x26	; 38
      0003C1 26                    1111 	.db #0x26	; 38
      0003C2 26                    1112 	.db #0x26	; 38
      0003C3 26                    1113 	.db #0x26	; 38
      0003C4 26                    1114 	.db #0x26	; 38
      0003C5 26                    1115 	.db #0x26	; 38
      0003C6 26                    1116 	.db #0x26	; 38
      0003C7 26                    1117 	.db #0x26	; 38
      0003C8 26                    1118 	.db #0x26	; 38
      0003C9 26                    1119 	.db #0x26	; 38
      0003CA 26                    1120 	.db #0x26	; 38
      0003CB 26                    1121 	.db #0x26	; 38
      0003CC 26                    1122 	.db #0x26	; 38
      0003CD 26                    1123 	.db #0x26	; 38
      0003CE 26                    1124 	.db #0x26	; 38
      0003CF 26                    1125 	.db #0x26	; 38
      0003D0 26                    1126 	.db #0x26	; 38
      0003D1 26                    1127 	.db #0x26	; 38
      0003D2 26                    1128 	.db #0x26	; 38
      0003D3 26                    1129 	.db #0x26	; 38
      0003D4 26                    1130 	.db #0x26	; 38
      0003D5 26                    1131 	.db #0x26	; 38
      0003D6 26                    1132 	.db #0x26	; 38
      0003D7 26                    1133 	.db #0x26	; 38
      0003D8 26                    1134 	.db #0x26	; 38
      0003D9 26                    1135 	.db #0x26	; 38
      0003DA 26                    1136 	.db #0x26	; 38
      0003DB 26                    1137 	.db #0x26	; 38
      0003DC 26                    1138 	.db #0x26	; 38
      0003DD 26                    1139 	.db #0x26	; 38
      0003DE 26                    1140 	.db #0x26	; 38
      0003DF 26                    1141 	.db #0x26	; 38
      0003E0 26                    1142 	.db #0x26	; 38
      0003E1 26                    1143 	.db #0x26	; 38
      0003E2 26                    1144 	.db #0x26	; 38
      0003E3 26                    1145 	.db #0x26	; 38
      0003E4 26                    1146 	.db #0x26	; 38
      0003E5 26                    1147 	.db #0x26	; 38
      0003E6 26                    1148 	.db #0x26	; 38
      0003E7 26                    1149 	.db #0x26	; 38
      0003E8 26                    1150 	.db #0x26	; 38
      0003E9 26                    1151 	.db #0x26	; 38
      0003EA 26                    1152 	.db #0x26	; 38
      0003EB 26                    1153 	.db #0x26	; 38
      0003EC 26                    1154 	.db #0x26	; 38
      0003ED 26                    1155 	.db #0x26	; 38
      0003EE 26                    1156 	.db #0x26	; 38
      0003EF 26                    1157 	.db #0x26	; 38
      0003F0 26                    1158 	.db #0x26	; 38
      0003F1 26                    1159 	.db #0x26	; 38
      0003F2 26                    1160 	.db #0x26	; 38
      0003F3 26                    1161 	.db #0x26	; 38
      0003F4 26                    1162 	.db #0x26	; 38
      0003F5 26                    1163 	.db #0x26	; 38
      0003F6 26                    1164 	.db #0x26	; 38
      0003F7 26                    1165 	.db #0x26	; 38
      0003F8 26                    1166 	.db #0x26	; 38
      0003F9 26                    1167 	.db #0x26	; 38
      0003FA 26                    1168 	.db #0x26	; 38
      0003FB 26                    1169 	.db #0x26	; 38
      0003FC 26                    1170 	.db #0x26	; 38
      0003FD 26                    1171 	.db #0x26	; 38
      0003FE 26                    1172 	.db #0x26	; 38
      0003FF 26                    1173 	.db #0x26	; 38
      000400 26                    1174 	.db #0x26	; 38
      000401 26                    1175 	.db #0x26	; 38
      000402 26                    1176 	.db #0x26	; 38
      000403 26                    1177 	.db #0x26	; 38
      000404 26                    1178 	.db #0x26	; 38
      000405 26                    1179 	.db #0x26	; 38
      000406 26                    1180 	.db #0x26	; 38
      000407 26                    1181 	.db #0x26	; 38
      000408 26                    1182 	.db #0x26	; 38
      000409 26                    1183 	.db #0x26	; 38
      00040A 26                    1184 	.db #0x26	; 38
      00040B 26                    1185 	.db #0x26	; 38
      00040C 26                    1186 	.db #0x26	; 38
      00040D 26                    1187 	.db #0x26	; 38
      00040E 26                    1188 	.db #0x26	; 38
      00040F 26                    1189 	.db #0x26	; 38
      000410 26                    1190 	.db #0x26	; 38
      000411 26                    1191 	.db #0x26	; 38
      000412 26                    1192 	.db #0x26	; 38
      000413 26                    1193 	.db #0x26	; 38
      000414 26                    1194 	.db #0x26	; 38
      000415 26                    1195 	.db #0x26	; 38
      000416 26                    1196 	.db #0x26	; 38
      000417 26                    1197 	.db #0x26	; 38
      000418 26                    1198 	.db #0x26	; 38
      000419 26                    1199 	.db #0x26	; 38
      00041A 26                    1200 	.db #0x26	; 38
      00041B 26                    1201 	.db #0x26	; 38
      00041C 26                    1202 	.db #0x26	; 38
      00041D 26                    1203 	.db #0x26	; 38
      00041E 26                    1204 	.db #0x26	; 38
      00041F 26                    1205 	.db #0x26	; 38
      000420 26                    1206 	.db #0x26	; 38
      000421 26                    1207 	.db #0x26	; 38
      000422 26                    1208 	.db #0x26	; 38
      000423 26                    1209 	.db #0x26	; 38
      000424 26                    1210 	.db #0x26	; 38
      000425 26                    1211 	.db #0x26	; 38
      000426 26                    1212 	.db #0x26	; 38
      000427 26                    1213 	.db #0x26	; 38
      000428 26                    1214 	.db #0x26	; 38
      000429 26                    1215 	.db #0x26	; 38
      00042A 26                    1216 	.db #0x26	; 38
      00042B 26                    1217 	.db #0x26	; 38
      00042C 26                    1218 	.db #0x26	; 38
      00042D 26                    1219 	.db #0x26	; 38
      00042E 26                    1220 	.db #0x26	; 38
      00042F 26                    1221 	.db #0x26	; 38
      000430 26                    1222 	.db #0x26	; 38
      000431 26                    1223 	.db #0x26	; 38
      000432 26                    1224 	.db #0x26	; 38
      000433 26                    1225 	.db #0x26	; 38
      000434 26                    1226 	.db #0x26	; 38
      000435 26                    1227 	.db #0x26	; 38
      000436 26                    1228 	.db #0x26	; 38
      000437 26                    1229 	.db #0x26	; 38
      000438 26                    1230 	.db #0x26	; 38
      000439 26                    1231 	.db #0x26	; 38
      00043A 26                    1232 	.db #0x26	; 38
      00043B 26                    1233 	.db #0x26	; 38
      00043C 26                    1234 	.db #0x26	; 38
      00043D 26                    1235 	.db #0x26	; 38
      00043E 26                    1236 	.db #0x26	; 38
      00043F 26                    1237 	.db #0x26	; 38
      000440 26                    1238 	.db #0x26	; 38
      000441 26                    1239 	.db #0x26	; 38
      000442 26                    1240 	.db #0x26	; 38
      000443 26                    1241 	.db #0x26	; 38
      000444 26                    1242 	.db #0x26	; 38
      000445 26                    1243 	.db #0x26	; 38
      000446 26                    1244 	.db #0x26	; 38
      000447 26                    1245 	.db #0x26	; 38
      000448 26                    1246 	.db #0x26	; 38
      000449 26                    1247 	.db #0x26	; 38
      00044A 26                    1248 	.db #0x26	; 38
      00044B 26                    1249 	.db #0x26	; 38
      00044C 26                    1250 	.db #0x26	; 38
      00044D 26                    1251 	.db #0x26	; 38
      00044E 26                    1252 	.db #0x26	; 38
      00044F 26                    1253 	.db #0x26	; 38
      000450 26                    1254 	.db #0x26	; 38
      000451 26                    1255 	.db #0x26	; 38
      000452 26                    1256 	.db #0x26	; 38
      000453 26                    1257 	.db #0x26	; 38
      000454 26                    1258 	.db #0x26	; 38
      000455 26                    1259 	.db #0x26	; 38
      000456 26                    1260 	.db #0x26	; 38
      000457 26                    1261 	.db #0x26	; 38
      000458 26                    1262 	.db #0x26	; 38
      000459 26                    1263 	.db #0x26	; 38
      00045A 26                    1264 	.db #0x26	; 38
      00045B 26                    1265 	.db #0x26	; 38
      00045C 26                    1266 	.db #0x26	; 38
      00045D 26                    1267 	.db #0x26	; 38
      00045E 26                    1268 	.db #0x26	; 38
      00045F 26                    1269 	.db #0x26	; 38
      000460 26                    1270 	.db #0x26	; 38
      000461 26                    1271 	.db #0x26	; 38
      000462 26                    1272 	.db #0x26	; 38
      000463 26                    1273 	.db #0x26	; 38
      000464 26                    1274 	.db #0x26	; 38
      000465 26                    1275 	.db #0x26	; 38
      000466 26                    1276 	.db #0x26	; 38
      000467 26                    1277 	.db #0x26	; 38
      000468 26                    1278 	.db #0x26	; 38
      000469 26                    1279 	.db #0x26	; 38
      00046A 26                    1280 	.db #0x26	; 38
      00046B 26                    1281 	.db #0x26	; 38
      00046C 26                    1282 	.db #0x26	; 38
      00046D 26                    1283 	.db #0x26	; 38
      00046E 26                    1284 	.db #0x26	; 38
      00046F 26                    1285 	.db #0x26	; 38
      000470 26                    1286 	.db #0x26	; 38
      000471 26                    1287 	.db #0x26	; 38
      000472 27                    1288 	.db #0x27	; 39
      000473 28                    1289 	.db #0x28	; 40
      000474 26                    1290 	.db #0x26	; 38
      000475 26                    1291 	.db #0x26	; 38
      000476 26                    1292 	.db #0x26	; 38
      000477 26                    1293 	.db #0x26	; 38
      000478 26                    1294 	.db #0x26	; 38
      000479 26                    1295 	.db #0x26	; 38
      00047A 26                    1296 	.db #0x26	; 38
      00047B 26                    1297 	.db #0x26	; 38
      00047C 26                    1298 	.db #0x26	; 38
      00047D 26                    1299 	.db #0x26	; 38
      00047E 26                    1300 	.db #0x26	; 38
      00047F 26                    1301 	.db #0x26	; 38
      000480 26                    1302 	.db #0x26	; 38
      000481 26                    1303 	.db #0x26	; 38
      000482 26                    1304 	.db #0x26	; 38
      000483 26                    1305 	.db #0x26	; 38
      000484 26                    1306 	.db #0x26	; 38
      000485 26                    1307 	.db #0x26	; 38
      000486 26                    1308 	.db #0x26	; 38
      000487                       1309 _backgroundtiles:
      000487 00                    1310 	.db #0x00	; 0
      000488 00                    1311 	.db #0x00	; 0
      000489 00                    1312 	.db #0x00	; 0
      00048A 00                    1313 	.db #0x00	; 0
      00048B 00                    1314 	.db #0x00	; 0
      00048C 00                    1315 	.db #0x00	; 0
      00048D 18                    1316 	.db #0x18	; 24
      00048E 18                    1317 	.db #0x18	; 24
      00048F 18                    1318 	.db #0x18	; 24
      000490 18                    1319 	.db #0x18	; 24
      000491 00                    1320 	.db #0x00	; 0
      000492 00                    1321 	.db #0x00	; 0
      000493 00                    1322 	.db #0x00	; 0
      000494 00                    1323 	.db #0x00	; 0
      000495 00                    1324 	.db #0x00	; 0
      000496 00                    1325 	.db #0x00	; 0
      000497 00                    1326 	.db #0x00	; 0
      000498 00                    1327 	.db #0x00	; 0
      000499 00                    1328 	.db #0x00	; 0
      00049A 00                    1329 	.db #0x00	; 0
      00049B 00                    1330 	.db #0x00	; 0
      00049C 00                    1331 	.db #0x00	; 0
      00049D 00                    1332 	.db #0x00	; 0
      00049E 00                    1333 	.db #0x00	; 0
      00049F 00                    1334 	.db #0x00	; 0
      0004A0 00                    1335 	.db #0x00	; 0
      0004A1 00                    1336 	.db #0x00	; 0
      0004A2 00                    1337 	.db #0x00	; 0
      0004A3 00                    1338 	.db #0x00	; 0
      0004A4 00                    1339 	.db #0x00	; 0
      0004A5 00                    1340 	.db #0x00	; 0
      0004A6 00                    1341 	.db #0x00	; 0
      0004A7 1F                    1342 	.db #0x1f	; 31
      0004A8 1F                    1343 	.db #0x1f	; 31
      0004A9 3F                    1344 	.db #0x3f	; 63
      0004AA 3F                    1345 	.db #0x3f	; 63
      0004AB 7F                    1346 	.db #0x7f	; 127
      0004AC 7F                    1347 	.db #0x7f	; 127
      0004AD FF                    1348 	.db #0xff	; 255
      0004AE FF                    1349 	.db #0xff	; 255
      0004AF FF                    1350 	.db #0xff	; 255
      0004B0 FF                    1351 	.db #0xff	; 255
      0004B1 FF                    1352 	.db #0xff	; 255
      0004B2 FF                    1353 	.db #0xff	; 255
      0004B3 FF                    1354 	.db #0xff	; 255
      0004B4 FF                    1355 	.db #0xff	; 255
      0004B5 FF                    1356 	.db #0xff	; 255
      0004B6 FF                    1357 	.db #0xff	; 255
      0004B7 F8                    1358 	.db #0xf8	; 248
      0004B8 F8                    1359 	.db #0xf8	; 248
      0004B9 FC                    1360 	.db #0xfc	; 252
      0004BA FC                    1361 	.db #0xfc	; 252
      0004BB FE                    1362 	.db #0xfe	; 254
      0004BC FE                    1363 	.db #0xfe	; 254
      0004BD FF                    1364 	.db #0xff	; 255
      0004BE FF                    1365 	.db #0xff	; 255
      0004BF FF                    1366 	.db #0xff	; 255
      0004C0 FF                    1367 	.db #0xff	; 255
      0004C1 FF                    1368 	.db #0xff	; 255
      0004C2 FF                    1369 	.db #0xff	; 255
      0004C3 FF                    1370 	.db #0xff	; 255
      0004C4 FF                    1371 	.db #0xff	; 255
      0004C5 FF                    1372 	.db #0xff	; 255
      0004C6 FF                    1373 	.db #0xff	; 255
      0004C7 FF                    1374 	.db #0xff	; 255
      0004C8 FF                    1375 	.db #0xff	; 255
      0004C9 FF                    1376 	.db #0xff	; 255
      0004CA FF                    1377 	.db #0xff	; 255
      0004CB FF                    1378 	.db #0xff	; 255
      0004CC FF                    1379 	.db #0xff	; 255
      0004CD FF                    1380 	.db #0xff	; 255
      0004CE FF                    1381 	.db #0xff	; 255
      0004CF FF                    1382 	.db #0xff	; 255
      0004D0 FF                    1383 	.db #0xff	; 255
      0004D1 FE                    1384 	.db #0xfe	; 254
      0004D2 FE                    1385 	.db #0xfe	; 254
      0004D3 FC                    1386 	.db #0xfc	; 252
      0004D4 FC                    1387 	.db #0xfc	; 252
      0004D5 F8                    1388 	.db #0xf8	; 248
      0004D6 F8                    1389 	.db #0xf8	; 248
      0004D7 FF                    1390 	.db #0xff	; 255
      0004D8 FF                    1391 	.db #0xff	; 255
      0004D9 FF                    1392 	.db #0xff	; 255
      0004DA FF                    1393 	.db #0xff	; 255
      0004DB FF                    1394 	.db #0xff	; 255
      0004DC FF                    1395 	.db #0xff	; 255
      0004DD FF                    1396 	.db #0xff	; 255
      0004DE FF                    1397 	.db #0xff	; 255
      0004DF FF                    1398 	.db #0xff	; 255
      0004E0 FF                    1399 	.db #0xff	; 255
      0004E1 7F                    1400 	.db #0x7f	; 127
      0004E2 7F                    1401 	.db #0x7f	; 127
      0004E3 3F                    1402 	.db #0x3f	; 63
      0004E4 3F                    1403 	.db #0x3f	; 63
      0004E5 1F                    1404 	.db #0x1f	; 31
      0004E6 1F                    1405 	.db #0x1f	; 31
      0004E7                       1406 _healthblock:
      0004E7 FE                    1407 	.db #0xfe	; 254
      0004E8 FE                    1408 	.db #0xfe	; 254
      0004E9 FE                    1409 	.db #0xfe	; 254
      0004EA FE                    1410 	.db #0xfe	; 254
      0004EB FE                    1411 	.db #0xfe	; 254
      0004EC FE                    1412 	.db #0xfe	; 254
      0004ED FE                    1413 	.db #0xfe	; 254
      0004EE FE                    1414 	.db #0xfe	; 254
      0004EF FE                    1415 	.db #0xfe	; 254
      0004F0 FE                    1416 	.db #0xfe	; 254
      0004F1 FE                    1417 	.db #0xfe	; 254
      0004F2 FE                    1418 	.db #0xfe	; 254
      0004F3 FE                    1419 	.db #0xfe	; 254
      0004F4 FE                    1420 	.db #0xfe	; 254
      0004F5 00                    1421 	.db #0x00	; 0
      0004F6 00                    1422 	.db #0x00	; 0
      0004F7                       1423 _enemy1:
      0004F7 3C                    1424 	.db #0x3c	; 60
      0004F8 3C                    1425 	.db #0x3c	; 60
      0004F9 7E                    1426 	.db #0x7e	; 126
      0004FA 7E                    1427 	.db #0x7e	; 126
      0004FB FF                    1428 	.db #0xff	; 255
      0004FC FF                    1429 	.db #0xff	; 255
      0004FD FF                    1430 	.db #0xff	; 255
      0004FE FF                    1431 	.db #0xff	; 255
      0004FF FF                    1432 	.db #0xff	; 255
      000500 FF                    1433 	.db #0xff	; 255
      000501 FF                    1434 	.db #0xff	; 255
      000502 FF                    1435 	.db #0xff	; 255
      000503 7E                    1436 	.db #0x7e	; 126
      000504 7E                    1437 	.db #0x7e	; 126
      000505 3C                    1438 	.db #0x3c	; 60
      000506 3C                    1439 	.db #0x3c	; 60
      000507                       1440 _BLANK:
      000507 26                    1441 	.db #0x26	; 38
      000508                       1442 _EMPTYSPRITE:
      000508 50                    1443 	.db #0x50	; 80	'P'
      000509                       1444 _ENEMYCOUNT:
      000509 05                    1445 	.db #0x05	; 5
      00050A                       1446 _xSpawnPositions:
      00050A 00                    1447 	.db #0x00	; 0
      00050B 60                    1448 	.db #0x60	; 96
      00050C B0                    1449 	.db #0xb0	; 176
      00050D 00                    1450 	.db #0x00	; 0
      00050E B0                    1451 	.db #0xb0	; 176
      00050F 00                    1452 	.db #0x00	; 0
      000510 60                    1453 	.db #0x60	; 96
      000511 B0                    1454 	.db #0xb0	; 176
      000512                       1455 _ySpawnPositions:
      000512 00                    1456 	.db #0x00	; 0
      000513 00                    1457 	.db #0x00	; 0
      000514 00                    1458 	.db #0x00	; 0
      000515 5C                    1459 	.db #0x5c	; 92
      000516 5C                    1460 	.db #0x5c	; 92
      000517 A0                    1461 	.db #0xa0	; 160
      000518 A0                    1462 	.db #0xa0	; 160
      000519 A0                    1463 	.db #0xa0	; 160
                                   1464 ;main.c:69: void setHealthBar(uint8_t row, uint8_t hp) {
                                   1465 ;	---------------------------------
                                   1466 ; Function setHealthBar
                                   1467 ; ---------------------------------
      00051A                       1468 _setHealthBar::
      00051A E8 FB                 1469 	add	sp, #-5
                                   1470 ;main.c:70: if (hp >= 80) {
      00051C F8 08                 1471 	ldhl	sp,	#8
      00051E 7E                    1472 	ld	a, (hl)
      00051F D6 50                 1473 	sub	a, #0x50
      000521 38 31                 1474 	jr	C, 00102$
                                   1475 ;main.c:71: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      000523 F8 00                 1476 	ldhl	sp,	#0
      000525 4D                    1477 	ld	c, l
      000526 44                    1478 	ld	b, h
      000527 36 50                 1479 	ld	(hl), #0x50
      000529 69                    1480 	ld	l, c
                                   1481 ;	spillPairReg hl
                                   1482 ;	spillPairReg hl
      00052A 60                    1483 	ld	h, b
                                   1484 ;	spillPairReg hl
                                   1485 ;	spillPairReg hl
      00052B 23                    1486 	inc	hl
      00052C 36 50                 1487 	ld	(hl), #0x50
      00052E 69                    1488 	ld	l, c
                                   1489 ;	spillPairReg hl
                                   1490 ;	spillPairReg hl
      00052F 60                    1491 	ld	h, b
                                   1492 ;	spillPairReg hl
                                   1493 ;	spillPairReg hl
      000530 23                    1494 	inc	hl
      000531 23                    1495 	inc	hl
      000532 36 50                 1496 	ld	(hl), #0x50
      000534 69                    1497 	ld	l, c
                                   1498 ;	spillPairReg hl
                                   1499 ;	spillPairReg hl
      000535 60                    1500 	ld	h, b
                                   1501 ;	spillPairReg hl
                                   1502 ;	spillPairReg hl
      000536 23                    1503 	inc	hl
      000537 23                    1504 	inc	hl
      000538 23                    1505 	inc	hl
      000539 36 50                 1506 	ld	(hl), #0x50
      00053B 21 04 00              1507 	ld	hl, #0x0004
      00053E 09                    1508 	add	hl, bc
      00053F 36 50                 1509 	ld	(hl), #0x50
                                   1510 ;main.c:72: set_win_tiles(5,row,5,1,blockmap);
      000541 C5                    1511 	push	bc
      000542 21 05 01              1512 	ld	hl, #0x105
      000545 E5                    1513 	push	hl
      000546 F8 0B                 1514 	ldhl	sp,	#11
      000548 66                    1515 	ld	h, (hl)
      000549 2E 05                 1516 	ld	l, #0x05
      00054B E5                    1517 	push	hl
      00054C CDr00r00              1518 	call	_set_win_tiles
      00054F E8 06                 1519 	add	sp, #6
                                   1520 ;main.c:73: return;
      000551 C3r28r06              1521 	jp	00109$
      000554                       1522 00102$:
                                   1523 ;main.c:75: if (hp >= 60) {
      000554 F8 08                 1524 	ldhl	sp,	#8
      000556 7E                    1525 	ld	a, (hl)
      000557 D6 3C                 1526 	sub	a, #0x3c
      000559 38 31                 1527 	jr	C, 00104$
                                   1528 ;main.c:76: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      00055B F8 00                 1529 	ldhl	sp,	#0
      00055D 4D                    1530 	ld	c, l
      00055E 44                    1531 	ld	b, h
      00055F 36 50                 1532 	ld	(hl), #0x50
      000561 69                    1533 	ld	l, c
                                   1534 ;	spillPairReg hl
                                   1535 ;	spillPairReg hl
      000562 60                    1536 	ld	h, b
                                   1537 ;	spillPairReg hl
                                   1538 ;	spillPairReg hl
      000563 23                    1539 	inc	hl
      000564 36 50                 1540 	ld	(hl), #0x50
      000566 69                    1541 	ld	l, c
                                   1542 ;	spillPairReg hl
                                   1543 ;	spillPairReg hl
      000567 60                    1544 	ld	h, b
                                   1545 ;	spillPairReg hl
                                   1546 ;	spillPairReg hl
      000568 23                    1547 	inc	hl
      000569 23                    1548 	inc	hl
      00056A 36 50                 1549 	ld	(hl), #0x50
      00056C 69                    1550 	ld	l, c
                                   1551 ;	spillPairReg hl
                                   1552 ;	spillPairReg hl
      00056D 60                    1553 	ld	h, b
                                   1554 ;	spillPairReg hl
                                   1555 ;	spillPairReg hl
      00056E 23                    1556 	inc	hl
      00056F 23                    1557 	inc	hl
      000570 23                    1558 	inc	hl
      000571 36 50                 1559 	ld	(hl), #0x50
      000573 21 04 00              1560 	ld	hl, #0x0004
      000576 09                    1561 	add	hl, bc
      000577 36 00                 1562 	ld	(hl), #0x00
                                   1563 ;main.c:77: set_win_tiles(5,row,5,1,blockmap);
      000579 C5                    1564 	push	bc
      00057A 21 05 01              1565 	ld	hl, #0x105
      00057D E5                    1566 	push	hl
      00057E F8 0B                 1567 	ldhl	sp,	#11
      000580 66                    1568 	ld	h, (hl)
      000581 2E 05                 1569 	ld	l, #0x05
      000583 E5                    1570 	push	hl
      000584 CDr00r00              1571 	call	_set_win_tiles
      000587 E8 06                 1572 	add	sp, #6
                                   1573 ;main.c:78: return;
      000589 C3r28r06              1574 	jp	00109$
      00058C                       1575 00104$:
                                   1576 ;main.c:80: if (hp >= 40) {
      00058C F8 08                 1577 	ldhl	sp,	#8
      00058E 7E                    1578 	ld	a, (hl)
      00058F D6 28                 1579 	sub	a, #0x28
      000591 38 30                 1580 	jr	C, 00106$
                                   1581 ;main.c:81: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000593 F8 00                 1582 	ldhl	sp,	#0
      000595 4D                    1583 	ld	c, l
      000596 44                    1584 	ld	b, h
      000597 36 50                 1585 	ld	(hl), #0x50
      000599 69                    1586 	ld	l, c
                                   1587 ;	spillPairReg hl
                                   1588 ;	spillPairReg hl
      00059A 60                    1589 	ld	h, b
                                   1590 ;	spillPairReg hl
                                   1591 ;	spillPairReg hl
      00059B 23                    1592 	inc	hl
      00059C 36 50                 1593 	ld	(hl), #0x50
      00059E 69                    1594 	ld	l, c
                                   1595 ;	spillPairReg hl
                                   1596 ;	spillPairReg hl
      00059F 60                    1597 	ld	h, b
                                   1598 ;	spillPairReg hl
                                   1599 ;	spillPairReg hl
      0005A0 23                    1600 	inc	hl
      0005A1 23                    1601 	inc	hl
      0005A2 36 50                 1602 	ld	(hl), #0x50
      0005A4 59                    1603 	ld	e, c
      0005A5 50                    1604 	ld	d, b
      0005A6 13                    1605 	inc	de
      0005A7 13                    1606 	inc	de
      0005A8 13                    1607 	inc	de
      0005A9 AF                    1608 	xor	a, a
      0005AA 12                    1609 	ld	(de), a
      0005AB 21 04 00              1610 	ld	hl, #0x0004
      0005AE 09                    1611 	add	hl, bc
      0005AF 36 00                 1612 	ld	(hl), #0x00
                                   1613 ;main.c:82: set_win_tiles(5,row,5,1,blockmap);
      0005B1 C5                    1614 	push	bc
      0005B2 21 05 01              1615 	ld	hl, #0x105
      0005B5 E5                    1616 	push	hl
      0005B6 F8 0B                 1617 	ldhl	sp,	#11
      0005B8 66                    1618 	ld	h, (hl)
      0005B9 2E 05                 1619 	ld	l, #0x05
      0005BB E5                    1620 	push	hl
      0005BC CDr00r00              1621 	call	_set_win_tiles
      0005BF E8 06                 1622 	add	sp, #6
                                   1623 ;main.c:83: return;
      0005C1 18 65                 1624 	jr	00109$
      0005C3                       1625 00106$:
                                   1626 ;main.c:85: if (hp >= 20) {
      0005C3 F8 08                 1627 	ldhl	sp,	#8
      0005C5 7E                    1628 	ld	a, (hl)
      0005C6 D6 14                 1629 	sub	a, #0x14
      0005C8 38 30                 1630 	jr	C, 00108$
                                   1631 ;main.c:86: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      0005CA F8 00                 1632 	ldhl	sp,	#0
      0005CC 4D                    1633 	ld	c, l
      0005CD 44                    1634 	ld	b, h
      0005CE 36 50                 1635 	ld	(hl), #0x50
      0005D0 69                    1636 	ld	l, c
                                   1637 ;	spillPairReg hl
                                   1638 ;	spillPairReg hl
      0005D1 60                    1639 	ld	h, b
                                   1640 ;	spillPairReg hl
                                   1641 ;	spillPairReg hl
      0005D2 23                    1642 	inc	hl
      0005D3 36 50                 1643 	ld	(hl), #0x50
      0005D5 59                    1644 	ld	e, c
      0005D6 50                    1645 	ld	d, b
      0005D7 13                    1646 	inc	de
      0005D8 13                    1647 	inc	de
      0005D9 AF                    1648 	xor	a, a
      0005DA 12                    1649 	ld	(de), a
      0005DB 59                    1650 	ld	e, c
      0005DC 50                    1651 	ld	d, b
      0005DD 13                    1652 	inc	de
      0005DE 13                    1653 	inc	de
      0005DF 13                    1654 	inc	de
      0005E0 AF                    1655 	xor	a, a
      0005E1 12                    1656 	ld	(de), a
      0005E2 21 04 00              1657 	ld	hl, #0x0004
      0005E5 09                    1658 	add	hl, bc
      0005E6 36 00                 1659 	ld	(hl), #0x00
                                   1660 ;main.c:87: set_win_tiles(5,row,5,1,blockmap);
      0005E8 C5                    1661 	push	bc
      0005E9 21 05 01              1662 	ld	hl, #0x105
      0005EC E5                    1663 	push	hl
      0005ED F8 0B                 1664 	ldhl	sp,	#11
      0005EF 66                    1665 	ld	h, (hl)
      0005F0 2E 05                 1666 	ld	l, #0x05
      0005F2 E5                    1667 	push	hl
      0005F3 CDr00r00              1668 	call	_set_win_tiles
      0005F6 E8 06                 1669 	add	sp, #6
                                   1670 ;main.c:88: return;
      0005F8 18 2E                 1671 	jr	00109$
      0005FA                       1672 00108$:
                                   1673 ;main.c:90: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      0005FA F8 00                 1674 	ldhl	sp,	#0
      0005FC 4D                    1675 	ld	c, l
      0005FD 44                    1676 	ld	b, h
      0005FE 36 50                 1677 	ld	(hl), #0x50
      000600 59                    1678 	ld	e, c
      000601 50                    1679 	ld	d, b
      000602 13                    1680 	inc	de
      000603 AF                    1681 	xor	a, a
      000604 12                    1682 	ld	(de), a
      000605 59                    1683 	ld	e, c
      000606 50                    1684 	ld	d, b
      000607 13                    1685 	inc	de
      000608 13                    1686 	inc	de
      000609 AF                    1687 	xor	a, a
      00060A 12                    1688 	ld	(de), a
      00060B 59                    1689 	ld	e, c
      00060C 50                    1690 	ld	d, b
      00060D 13                    1691 	inc	de
      00060E 13                    1692 	inc	de
      00060F 13                    1693 	inc	de
      000610 AF                    1694 	xor	a, a
      000611 12                    1695 	ld	(de), a
      000612 21 04 00              1696 	ld	hl, #0x0004
      000615 09                    1697 	add	hl, bc
      000616 36 00                 1698 	ld	(hl), #0x00
                                   1699 ;main.c:91: set_win_tiles(5,row,5,1,blockmap);
      000618 C5                    1700 	push	bc
      000619 21 05 01              1701 	ld	hl, #0x105
      00061C E5                    1702 	push	hl
      00061D F8 0B                 1703 	ldhl	sp,	#11
      00061F 66                    1704 	ld	h, (hl)
      000620 2E 05                 1705 	ld	l, #0x05
      000622 E5                    1706 	push	hl
      000623 CDr00r00              1707 	call	_set_win_tiles
      000626 E8 06                 1708 	add	sp, #6
                                   1709 ;main.c:92: return;
      000628                       1710 00109$:
                                   1711 ;main.c:94: }
      000628 E8 05                 1712 	add	sp, #5
      00062A C9                    1713 	ret
                                   1714 ;main.c:96: void updateDirection() {
                                   1715 ;	---------------------------------
                                   1716 ; Function updateDirection
                                   1717 ; ---------------------------------
      00062B                       1718 _updateDirection::
      00062B E8 FC                 1719 	add	sp, #-4
                                   1720 ;main.c:100: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      00062D 21r64r00              1721 	ld	hl, #_joydata
      000630 5E                    1722 	ld	e, (hl)
      000631 7B                    1723 	ld	a, e
      000632 E6 01                 1724 	and	a, #0x01
      000634 F8 00                 1725 	ldhl	sp,	#0
      000636 22                    1726 	ld	(hl+), a
      000637 AF                    1727 	xor	a, a
      000638 22                    1728 	ld	(hl+), a
      000639 7B                    1729 	ld	a, e
      00063A E6 04                 1730 	and	a, #0x04
      00063C 22                    1731 	ld	(hl+), a
      00063D AF                    1732 	xor	a, a
      00063E 32                    1733 	ld	(hl-), a
      00063F 2B                    1734 	dec	hl
      000640 7B                    1735 	ld	a, e
      000641 E6 08                 1736 	and	a, #0x08
      000643 4F                    1737 	ld	c, a
      000644 06 00                 1738 	ld	b, #0x00
      000646 3A                    1739 	ld	a, (hl-)
      000647 B6                    1740 	or	a, (hl)
      000648 28 14                 1741 	jr	Z, 00102$
      00064A F8 03                 1742 	ldhl	sp,	#3
      00064C 3A                    1743 	ld	a, (hl-)
      00064D B6                    1744 	or	a, (hl)
      00064E 20 0E                 1745 	jr	NZ, 00102$
      000650 78                    1746 	ld	a, b
      000651 B1                    1747 	or	a, c
      000652 20 0A                 1748 	jr	NZ, 00102$
                                   1749 ;main.c:101: xDir = 1;
      000654 21r1Dr00              1750 	ld	hl, #_xDir
      000657 36 01                 1751 	ld	(hl), #0x01
                                   1752 ;main.c:102: yDir = 0;
      000659 21r1Er00              1753 	ld	hl, #_yDir
      00065C 36 00                 1754 	ld	(hl), #0x00
      00065E                       1755 00102$:
                                   1756 ;main.c:104: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      00065E 7B                    1757 	ld	a, e
      00065F E6 02                 1758 	and	a, #0x02
      000661 5F                    1759 	ld	e, a
      000662 16 00                 1760 	ld	d, #0x00
      000664 7A                    1761 	ld	a, d
      000665 B3                    1762 	or	a, e
      000666 28 14                 1763 	jr	Z, 00106$
      000668 F8 03                 1764 	ldhl	sp,	#3
      00066A 3A                    1765 	ld	a, (hl-)
      00066B B6                    1766 	or	a, (hl)
      00066C 20 0E                 1767 	jr	NZ, 00106$
      00066E 78                    1768 	ld	a, b
      00066F B1                    1769 	or	a, c
      000670 20 0A                 1770 	jr	NZ, 00106$
                                   1771 ;main.c:105: xDir = -1;
      000672 21r1Dr00              1772 	ld	hl, #_xDir
      000675 36 FF                 1773 	ld	(hl), #0xff
                                   1774 ;main.c:106: yDir = 0;
      000677 21r1Er00              1775 	ld	hl, #_yDir
      00067A 36 00                 1776 	ld	(hl), #0x00
      00067C                       1777 00106$:
                                   1778 ;main.c:108: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      00067C F8 03                 1779 	ldhl	sp,	#3
      00067E 3A                    1780 	ld	a, (hl-)
      00067F B6                    1781 	or	a, (hl)
      000680 28 13                 1782 	jr	Z, 00110$
      000682 7A                    1783 	ld	a, d
      000683 B3                    1784 	or	a, e
      000684 20 0F                 1785 	jr	NZ, 00110$
      000686 2B                    1786 	dec	hl
      000687 3A                    1787 	ld	a, (hl-)
      000688 B6                    1788 	or	a, (hl)
      000689 20 0A                 1789 	jr	NZ, 00110$
                                   1790 ;main.c:109: xDir = 0;
      00068B 21r1Dr00              1791 	ld	hl, #_xDir
      00068E 36 00                 1792 	ld	(hl), #0x00
                                   1793 ;main.c:110: yDir = -1;
      000690 21r1Er00              1794 	ld	hl, #_yDir
      000693 36 FF                 1795 	ld	(hl), #0xff
      000695                       1796 00110$:
                                   1797 ;main.c:112: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000695 78                    1798 	ld	a, b
      000696 B1                    1799 	or	a, c
      000697 28 14                 1800 	jr	Z, 00114$
      000699 7A                    1801 	ld	a, d
      00069A B3                    1802 	or	a, e
      00069B 20 10                 1803 	jr	NZ, 00114$
      00069D F8 01                 1804 	ldhl	sp,	#1
      00069F 3A                    1805 	ld	a, (hl-)
      0006A0 B6                    1806 	or	a, (hl)
      0006A1 20 0A                 1807 	jr	NZ, 00114$
                                   1808 ;main.c:113: xDir = 0;
      0006A3 21r1Dr00              1809 	ld	hl, #_xDir
      0006A6 36 00                 1810 	ld	(hl), #0x00
                                   1811 ;main.c:114: yDir = 1;
      0006A8 21r1Er00              1812 	ld	hl, #_yDir
      0006AB 36 01                 1813 	ld	(hl), #0x01
      0006AD                       1814 00114$:
                                   1815 ;main.c:118: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      0006AD F8 03                 1816 	ldhl	sp,	#3
      0006AF 3A                    1817 	ld	a, (hl-)
      0006B0 B6                    1818 	or	a, (hl)
      0006B1 28 0F                 1819 	jr	Z, 00118$
      0006B3 2B                    1820 	dec	hl
      0006B4 3A                    1821 	ld	a, (hl-)
      0006B5 B6                    1822 	or	a, (hl)
      0006B6 28 0A                 1823 	jr	Z, 00118$
                                   1824 ;main.c:119: xDir = 1;
      0006B8 21r1Dr00              1825 	ld	hl, #_xDir
      0006BB 36 01                 1826 	ld	(hl), #0x01
                                   1827 ;main.c:120: yDir = -1;
      0006BD 21r1Er00              1828 	ld	hl, #_yDir
      0006C0 36 FF                 1829 	ld	(hl), #0xff
      0006C2                       1830 00118$:
                                   1831 ;main.c:122: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      0006C2 F8 03                 1832 	ldhl	sp,	#3
      0006C4 3A                    1833 	ld	a, (hl-)
      0006C5 B6                    1834 	or	a, (hl)
      0006C6 28 0E                 1835 	jr	Z, 00121$
      0006C8 7A                    1836 	ld	a, d
      0006C9 B3                    1837 	or	a, e
      0006CA 28 0A                 1838 	jr	Z, 00121$
                                   1839 ;main.c:123: xDir = -1;
      0006CC 21r1Dr00              1840 	ld	hl, #_xDir
      0006CF 36 FF                 1841 	ld	(hl), #0xff
                                   1842 ;main.c:124: yDir = -1;
      0006D1 21r1Er00              1843 	ld	hl, #_yDir
      0006D4 36 FF                 1844 	ld	(hl), #0xff
      0006D6                       1845 00121$:
                                   1846 ;main.c:126: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      0006D6 78                    1847 	ld	a, b
      0006D7 B1                    1848 	or	a, c
      0006D8 28 10                 1849 	jr	Z, 00124$
      0006DA F8 01                 1850 	ldhl	sp,	#1
      0006DC 3A                    1851 	ld	a, (hl-)
      0006DD B6                    1852 	or	a, (hl)
      0006DE 28 0A                 1853 	jr	Z, 00124$
                                   1854 ;main.c:127: xDir = 1;
      0006E0 21r1Dr00              1855 	ld	hl, #_xDir
      0006E3 36 01                 1856 	ld	(hl), #0x01
                                   1857 ;main.c:128: yDir = 1;
      0006E5 21r1Er00              1858 	ld	hl, #_yDir
      0006E8 36 01                 1859 	ld	(hl), #0x01
      0006EA                       1860 00124$:
                                   1861 ;main.c:130: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      0006EA 78                    1862 	ld	a, b
      0006EB B1                    1863 	or	a, c
      0006EC 28 0E                 1864 	jr	Z, 00127$
      0006EE 7A                    1865 	ld	a, d
      0006EF B3                    1866 	or	a, e
      0006F0 28 0A                 1867 	jr	Z, 00127$
                                   1868 ;main.c:131: xDir = -1;
      0006F2 21r1Dr00              1869 	ld	hl, #_xDir
      0006F5 36 FF                 1870 	ld	(hl), #0xff
                                   1871 ;main.c:132: yDir = 1;
      0006F7 21r1Er00              1872 	ld	hl, #_yDir
      0006FA 36 01                 1873 	ld	(hl), #0x01
      0006FC                       1874 00127$:
                                   1875 ;main.c:137: if (xDir == 0 && yDir == 0) {
      0006FC FAr1Dr00              1876 	ld	a, (#_xDir)
      0006FF B7                    1877 	or	a, a
      000700 20 07                 1878 	jr	NZ, 00130$
      000702 FAr1Er00              1879 	ld	a, (#_yDir)
      000705 B7                    1880 	or	a, a
                                   1881 ;main.c:138: return;
      000706 CArB7r07              1882 	jp	Z,00157$
      000709                       1883 00130$:
                                   1884 ;main.c:141: uint8_t direction = 0;
      000709 0E 00                 1885 	ld	c, #0x00
                                   1886 ;main.c:143: if (xDir == 0 && yDir < 0) {
      00070B FAr1Er00              1887 	ld	a, (#_yDir)
      00070E 07                    1888 	rlca
      00070F E6 01                 1889 	and	a,#0x01
      000711 F8 02                 1890 	ldhl	sp,	#2
      000713 77                    1891 	ld	(hl), a
      000714 FAr1Dr00              1892 	ld	a, (#_xDir)
      000717 B7                    1893 	or	a, a
      000718 20 08                 1894 	jr	NZ, 00133$
      00071A F8 02                 1895 	ldhl	sp,	#2
      00071C 7E                    1896 	ld	a, (hl)
      00071D B7                    1897 	or	a, a
      00071E 28 02                 1898 	jr	Z, 00133$
                                   1899 ;main.c:144: direction = 0;
      000720 0E 00                 1900 	ld	c, #0x00
      000722                       1901 00133$:
                                   1902 ;main.c:146: if (xDir > 0 && yDir < 0) {
      000722 21r1Dr00              1903 	ld	hl, #_xDir
      000725 5E                    1904 	ld	e, (hl)
      000726 AF                    1905 	xor	a, a
      000727 57                    1906 	ld	d, a
      000728 96                    1907 	sub	a, (hl)
      000729 CB 7B                 1908 	bit	7, e
      00072B 28 07                 1909 	jr	Z, 00349$
      00072D CB 7A                 1910 	bit	7, d
      00072F 20 08                 1911 	jr	NZ, 00350$
      000731 BF                    1912 	cp	a, a
      000732 18 05                 1913 	jr	00350$
      000734                       1914 00349$:
      000734 CB 7A                 1915 	bit	7, d
      000736 28 01                 1916 	jr	Z, 00350$
      000738 37                    1917 	scf
      000739                       1918 00350$:
      000739 3E 00                 1919 	ld	a, #0x00
      00073B 17                    1920 	rla
      00073C 47                    1921 	ld	b, a
      00073D B7                    1922 	or	a, a
      00073E 28 08                 1923 	jr	Z, 00136$
      000740 F8 02                 1924 	ldhl	sp,	#2
      000742 7E                    1925 	ld	a, (hl)
      000743 B7                    1926 	or	a, a
      000744 28 02                 1927 	jr	Z, 00136$
                                   1928 ;main.c:147: direction = 1;
      000746 0E 01                 1929 	ld	c, #0x01
      000748                       1930 00136$:
                                   1931 ;main.c:149: if (xDir > 0 && yDir == 0) {
      000748 78                    1932 	ld	a, b
      000749 B7                    1933 	or	a, a
      00074A 28 08                 1934 	jr	Z, 00139$
      00074C FAr1Er00              1935 	ld	a, (#_yDir)
      00074F B7                    1936 	or	a, a
      000750 20 02                 1937 	jr	NZ, 00139$
                                   1938 ;main.c:150: direction = 2;
      000752 0E 02                 1939 	ld	c, #0x02
      000754                       1940 00139$:
                                   1941 ;main.c:152: if (xDir > 0 && yDir > 0) {
      000754 21r1Er00              1942 	ld	hl, #_yDir
      000757 5E                    1943 	ld	e, (hl)
      000758 AF                    1944 	xor	a, a
      000759 57                    1945 	ld	d, a
      00075A 96                    1946 	sub	a, (hl)
      00075B CB 7B                 1947 	bit	7, e
      00075D 28 07                 1948 	jr	Z, 00351$
      00075F CB 7A                 1949 	bit	7, d
      000761 20 08                 1950 	jr	NZ, 00352$
      000763 BF                    1951 	cp	a, a
      000764 18 05                 1952 	jr	00352$
      000766                       1953 00351$:
      000766 CB 7A                 1954 	bit	7, d
      000768 28 01                 1955 	jr	Z, 00352$
      00076A 37                    1956 	scf
      00076B                       1957 00352$:
      00076B 3E 00                 1958 	ld	a, #0x00
      00076D 17                    1959 	rla
      00076E F8 03                 1960 	ldhl	sp,	#3
      000770 77                    1961 	ld	(hl), a
      000771 78                    1962 	ld	a, b
      000772 B7                    1963 	or	a, a
      000773 28 06                 1964 	jr	Z, 00142$
      000775 7E                    1965 	ld	a, (hl)
      000776 B7                    1966 	or	a, a
      000777 28 02                 1967 	jr	Z, 00142$
                                   1968 ;main.c:153: direction = 3;
      000779 0E 03                 1969 	ld	c, #0x03
      00077B                       1970 00142$:
                                   1971 ;main.c:155: if (xDir == 0 && yDir > 0) {
      00077B FAr1Dr00              1972 	ld	a, (#_xDir)
      00077E B7                    1973 	or	a, a
      00077F 20 08                 1974 	jr	NZ, 00145$
      000781 F8 03                 1975 	ldhl	sp,	#3
      000783 7E                    1976 	ld	a, (hl)
      000784 B7                    1977 	or	a, a
      000785 28 02                 1978 	jr	Z, 00145$
                                   1979 ;main.c:156: direction = 4;
      000787 0E 04                 1980 	ld	c, #0x04
      000789                       1981 00145$:
                                   1982 ;main.c:158: if (xDir < 0 && yDir > 0) {
      000789 FAr1Dr00              1983 	ld	a, (#_xDir)
      00078C 07                    1984 	rlca
      00078D E6 01                 1985 	and	a,#0x01
      00078F 47                    1986 	ld	b, a
      000790 B7                    1987 	or	a, a
      000791 28 08                 1988 	jr	Z, 00148$
      000793 F8 03                 1989 	ldhl	sp,	#3
      000795 7E                    1990 	ld	a, (hl)
      000796 B7                    1991 	or	a, a
      000797 28 02                 1992 	jr	Z, 00148$
                                   1993 ;main.c:159: direction = 5;
      000799 0E 05                 1994 	ld	c, #0x05
      00079B                       1995 00148$:
                                   1996 ;main.c:161: if (xDir < 0 && yDir == 0) {
      00079B 78                    1997 	ld	a, b
      00079C B7                    1998 	or	a, a
      00079D 28 08                 1999 	jr	Z, 00151$
      00079F FAr1Er00              2000 	ld	a, (#_yDir)
      0007A2 B7                    2001 	or	a, a
      0007A3 20 02                 2002 	jr	NZ, 00151$
                                   2003 ;main.c:162: direction = 6;
      0007A5 0E 06                 2004 	ld	c, #0x06
      0007A7                       2005 00151$:
                                   2006 ;main.c:164: if (xDir < 0 && yDir < 0) {
      0007A7 78                    2007 	ld	a, b
      0007A8 B7                    2008 	or	a, a
      0007A9 28 08                 2009 	jr	Z, 00154$
      0007AB F8 02                 2010 	ldhl	sp,	#2
      0007AD 7E                    2011 	ld	a, (hl)
      0007AE B7                    2012 	or	a, a
      0007AF 28 02                 2013 	jr	Z, 00154$
                                   2014 ;main.c:165: direction = 7;
      0007B1 0E 07                 2015 	ld	c, #0x07
      0007B3                       2016 00154$:
                                   2017 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0007B3 21r02r00              2018 	ld	hl, #(_shadow_OAM + 2)
      0007B6 71                    2019 	ld	(hl), c
                                   2020 ;main.c:168: set_sprite_tile(0, direction);
      0007B7                       2021 00157$:
                                   2022 ;main.c:169: }
      0007B7 E8 04                 2023 	add	sp, #4
      0007B9 C9                    2024 	ret
                                   2025 ;main.c:172: int8_t clamp( int8_t value, int8_t min, int8_t max )
                                   2026 ;	---------------------------------
                                   2027 ; Function clamp
                                   2028 ; ---------------------------------
      0007BA                       2029 _clamp::
                                   2030 ;main.c:174: return (value < min) ? min : (value > max) ? max : value;
      0007BA F8 03                 2031 	ldhl	sp,	#3
      0007BC 3A                    2032 	ld	a, (hl-)
      0007BD 5F                    2033 	ld	e, a
      0007BE 56                    2034 	ld	d, (hl)
      0007BF 2A                    2035 	ld	a, (hl+)
      0007C0 96                    2036 	sub	a, (hl)
      0007C1 CB 7B                 2037 	bit	7, e
      0007C3 28 07                 2038 	jr	Z, 00117$
      0007C5 CB 7A                 2039 	bit	7, d
      0007C7 20 08                 2040 	jr	NZ, 00118$
      0007C9 BF                    2041 	cp	a, a
      0007CA 18 05                 2042 	jr	00118$
      0007CC                       2043 00117$:
      0007CC CB 7A                 2044 	bit	7, d
      0007CE 28 01                 2045 	jr	Z, 00118$
      0007D0 37                    2046 	scf
      0007D1                       2047 00118$:
      0007D1 30 04                 2048 	jr	NC, 00103$
      0007D3 F8 03                 2049 	ldhl	sp,	#3
      0007D5 5E                    2050 	ld	e, (hl)
      0007D6 C9                    2051 	ret
      0007D7                       2052 00103$:
      0007D7 F8 02                 2053 	ldhl	sp,	#2
      0007D9 2A                    2054 	ld	a, (hl+)
      0007DA 23                    2055 	inc	hl
      0007DB 5F                    2056 	ld	e, a
      0007DC 56                    2057 	ld	d, (hl)
      0007DD 3A                    2058 	ld	a, (hl-)
      0007DE 2B                    2059 	dec	hl
      0007DF 96                    2060 	sub	a, (hl)
      0007E0 CB 7B                 2061 	bit	7, e
      0007E2 28 07                 2062 	jr	Z, 00119$
      0007E4 CB 7A                 2063 	bit	7, d
      0007E6 20 08                 2064 	jr	NZ, 00120$
      0007E8 BF                    2065 	cp	a, a
      0007E9 18 05                 2066 	jr	00120$
      0007EB                       2067 00119$:
      0007EB CB 7A                 2068 	bit	7, d
      0007ED 28 01                 2069 	jr	Z, 00120$
      0007EF 37                    2070 	scf
      0007F0                       2071 00120$:
      0007F0 30 04                 2072 	jr	NC, 00105$
      0007F2 F8 04                 2073 	ldhl	sp,	#4
      0007F4 5E                    2074 	ld	e, (hl)
      0007F5 C9                    2075 	ret
      0007F6                       2076 00105$:
      0007F6 F8 02                 2077 	ldhl	sp,	#2
      0007F8 5E                    2078 	ld	e, (hl)
                                   2079 ;main.c:175: }
      0007F9 C9                    2080 	ret
                                   2081 ;main.c:178: uint8_t uClamp( uint8_t value, uint8_t min, uint8_t max )
                                   2082 ;	---------------------------------
                                   2083 ; Function uClamp
                                   2084 ; ---------------------------------
      0007FA                       2085 _uClamp::
                                   2086 ;main.c:180: return (value < min) ? min : (value > max) ? max : value;
      0007FA F8 02                 2087 	ldhl	sp,	#2
      0007FC 2A                    2088 	ld	a, (hl+)
      0007FD 96                    2089 	sub	a, (hl)
      0007FE 30 02                 2090 	jr	NC, 00103$
      000800 5E                    2091 	ld	e, (hl)
      000801 C9                    2092 	ret
      000802                       2093 00103$:
      000802 F8 04                 2094 	ldhl	sp,	#4
      000804 3A                    2095 	ld	a, (hl-)
      000805 2B                    2096 	dec	hl
      000806 96                    2097 	sub	a, (hl)
      000807 30 04                 2098 	jr	NC, 00105$
      000809 23                    2099 	inc	hl
      00080A 23                    2100 	inc	hl
      00080B 5E                    2101 	ld	e, (hl)
      00080C C9                    2102 	ret
      00080D                       2103 00105$:
      00080D F8 02                 2104 	ldhl	sp,	#2
      00080F 5E                    2105 	ld	e, (hl)
                                   2106 ;main.c:181: }
      000810 C9                    2107 	ret
                                   2108 ;main.c:183: uint16_t u16Clamp( uint16_t value, uint16_t min, uint16_t max )
                                   2109 ;	---------------------------------
                                   2110 ; Function u16Clamp
                                   2111 ; ---------------------------------
      000811                       2112 _u16Clamp::
                                   2113 ;main.c:185: return (value < min) ? min : (value > max) ? max : value;
      000811 F8 02                 2114 	ldhl	sp,	#2
      000813 5D                    2115 	ld	e, l
      000814 54                    2116 	ld	d, h
      000815 F8 04                 2117 	ldhl	sp,	#4
      000817 1A                    2118 	ld	a, (de)
      000818 13                    2119 	inc	de
      000819 96                    2120 	sub	a, (hl)
      00081A 23                    2121 	inc	hl
      00081B 1A                    2122 	ld	a, (de)
      00081C 9E                    2123 	sbc	a, (hl)
      00081D 30 06                 2124 	jr	NC, 00103$
      00081F F8 04                 2125 	ldhl	sp,	#4
      000821 2A                    2126 	ld	a, (hl+)
      000822 5F                    2127 	ld	e, a
      000823 56                    2128 	ld	d, (hl)
      000824 C9                    2129 	ret
      000825                       2130 00103$:
      000825 F8 06                 2131 	ldhl	sp,	#6
      000827 5D                    2132 	ld	e, l
      000828 54                    2133 	ld	d, h
      000829 F8 02                 2134 	ldhl	sp,	#2
      00082B 1A                    2135 	ld	a, (de)
      00082C 13                    2136 	inc	de
      00082D 96                    2137 	sub	a, (hl)
      00082E 23                    2138 	inc	hl
      00082F 1A                    2139 	ld	a, (de)
      000830 9E                    2140 	sbc	a, (hl)
      000831 30 06                 2141 	jr	NC, 00105$
      000833 F8 06                 2142 	ldhl	sp,	#6
      000835 2A                    2143 	ld	a, (hl+)
      000836 5F                    2144 	ld	e, a
      000837 56                    2145 	ld	d, (hl)
      000838 C9                    2146 	ret
      000839                       2147 00105$:
      000839 F8 02                 2148 	ldhl	sp,	#2
      00083B 2A                    2149 	ld	a, (hl+)
      00083C 5F                    2150 	ld	e, a
      00083D 56                    2151 	ld	d, (hl)
                                   2152 ;main.c:186: }
      00083E C9                    2153 	ret
                                   2154 ;main.c:188: int16_t i16Clamp( int16_t value, int16_t min, int16_t max )
                                   2155 ;	---------------------------------
                                   2156 ; Function i16Clamp
                                   2157 ; ---------------------------------
      00083F                       2158 _i16Clamp::
                                   2159 ;main.c:190: return (value < min) ? min : (value > max) ? max : value;
      00083F F8 02                 2160 	ldhl	sp,	#2
      000841 5D                    2161 	ld	e, l
      000842 54                    2162 	ld	d, h
      000843 F8 04                 2163 	ldhl	sp,	#4
      000845 1A                    2164 	ld	a, (de)
      000846 13                    2165 	inc	de
      000847 96                    2166 	sub	a, (hl)
      000848 23                    2167 	inc	hl
      000849 1A                    2168 	ld	a, (de)
      00084A 9E                    2169 	sbc	a, (hl)
      00084B 1A                    2170 	ld	a, (de)
      00084C 57                    2171 	ld	d, a
      00084D CB 7E                 2172 	bit	7, (hl)
      00084F 28 07                 2173 	jr	Z, 00117$
      000851 CB 7A                 2174 	bit	7, d
      000853 20 08                 2175 	jr	NZ, 00118$
      000855 BF                    2176 	cp	a, a
      000856 18 05                 2177 	jr	00118$
      000858                       2178 00117$:
      000858 CB 7A                 2179 	bit	7, d
      00085A 28 01                 2180 	jr	Z, 00118$
      00085C 37                    2181 	scf
      00085D                       2182 00118$:
      00085D 30 06                 2183 	jr	NC, 00103$
      00085F F8 04                 2184 	ldhl	sp,	#4
      000861 2A                    2185 	ld	a, (hl+)
      000862 5F                    2186 	ld	e, a
      000863 56                    2187 	ld	d, (hl)
      000864 C9                    2188 	ret
      000865                       2189 00103$:
      000865 F8 06                 2190 	ldhl	sp,	#6
      000867 5D                    2191 	ld	e, l
      000868 54                    2192 	ld	d, h
      000869 F8 02                 2193 	ldhl	sp,	#2
      00086B 1A                    2194 	ld	a, (de)
      00086C 13                    2195 	inc	de
      00086D 96                    2196 	sub	a, (hl)
      00086E 23                    2197 	inc	hl
      00086F 1A                    2198 	ld	a, (de)
      000870 9E                    2199 	sbc	a, (hl)
      000871 1A                    2200 	ld	a, (de)
      000872 57                    2201 	ld	d, a
      000873 CB 7E                 2202 	bit	7, (hl)
      000875 28 07                 2203 	jr	Z, 00119$
      000877 CB 7A                 2204 	bit	7, d
      000879 20 08                 2205 	jr	NZ, 00120$
      00087B BF                    2206 	cp	a, a
      00087C 18 05                 2207 	jr	00120$
      00087E                       2208 00119$:
      00087E CB 7A                 2209 	bit	7, d
      000880 28 01                 2210 	jr	Z, 00120$
      000882 37                    2211 	scf
      000883                       2212 00120$:
      000883 30 06                 2213 	jr	NC, 00105$
      000885 F8 06                 2214 	ldhl	sp,	#6
      000887 2A                    2215 	ld	a, (hl+)
      000888 5F                    2216 	ld	e, a
      000889 56                    2217 	ld	d, (hl)
      00088A C9                    2218 	ret
      00088B                       2219 00105$:
      00088B F8 02                 2220 	ldhl	sp,	#2
      00088D 2A                    2221 	ld	a, (hl+)
      00088E 5F                    2222 	ld	e, a
      00088F 56                    2223 	ld	d, (hl)
                                   2224 ;main.c:191: }
      000890 C9                    2225 	ret
                                   2226 ;main.c:192: int8_t abs(int8_t value) {
                                   2227 ;	---------------------------------
                                   2228 ; Function abs
                                   2229 ; ---------------------------------
      000891                       2230 _abs::
                                   2231 ;main.c:193: if (value >= 0) return value;
      000891 F8 02                 2232 	ldhl	sp,	#2
      000893 CB 7E                 2233 	bit	7, (hl)
      000895 20 02                 2234 	jr	NZ, 00102$
      000897 5E                    2235 	ld	e, (hl)
      000898 C9                    2236 	ret
      000899                       2237 00102$:
                                   2238 ;main.c:194: else return - value;
      000899 AF                    2239 	xor	a, a
      00089A F8 02                 2240 	ldhl	sp,	#2
      00089C 96                    2241 	sub	a, (hl)
      00089D 5F                    2242 	ld	e, a
                                   2243 ;main.c:195: }
      00089E C9                    2244 	ret
                                   2245 ;main.c:197: void moveEnemiesWithBackground(int16_t x, int16_t y) {
                                   2246 ;	---------------------------------
                                   2247 ; Function moveEnemiesWithBackground
                                   2248 ; ---------------------------------
      00089F                       2249 _moveEnemiesWithBackground::
      00089F E8 FB                 2250 	add	sp, #-5
                                   2251 ;main.c:198: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0008A1 F8 04                 2252 	ldhl	sp,	#4
      0008A3 36 00                 2253 	ld	(hl), #0x00
      0008A5                       2254 00103$:
      0008A5 21r09r05              2255 	ld	hl, #_ENEMYCOUNT
      0008A8 4E                    2256 	ld	c, (hl)
      0008A9 F8 04                 2257 	ldhl	sp,	#4
      0008AB 7E                    2258 	ld	a, (hl)
      0008AC 91                    2259 	sub	a, c
      0008AD 30 57                 2260 	jr	NC, 00105$
                                   2261 ;main.c:199: enemies[i].x -= x;
      0008AF 4E                    2262 	ld	c, (hl)
      0008B0 06 00                 2263 	ld	b, #0x00
      0008B2 69                    2264 	ld	l, c
      0008B3 60                    2265 	ld	h, b
      0008B4 29                    2266 	add	hl, hl
      0008B5 29                    2267 	add	hl, hl
      0008B6 09                    2268 	add	hl, bc
      0008B7 29                    2269 	add	hl, hl
      0008B8 29                    2270 	add	hl, hl
      0008B9 01r00r00              2271 	ld	bc,#_enemies
      0008BC 09                    2272 	add	hl,bc
      0008BD 4D                    2273 	ld	c, l
      0008BE 44                    2274 	ld	b, h
      0008BF 59                    2275 	ld	e, c
      0008C0 50                    2276 	ld	d, b
      0008C1 1A                    2277 	ld	a, (de)
      0008C2 F8 00                 2278 	ldhl	sp,	#0
      0008C4 22                    2279 	ld	(hl+), a
      0008C5 13                    2280 	inc	de
      0008C6 1A                    2281 	ld	a, (de)
      0008C7 77                    2282 	ld	(hl), a
      0008C8 D1                    2283 	pop	de
      0008C9 D5                    2284 	push	de
      0008CA F8 07                 2285 	ldhl	sp,	#7
      0008CC 2A                    2286 	ld	a,	(hl+)
      0008CD 66                    2287 	ld	h, (hl)
      0008CE 6F                    2288 	ld	l, a
      0008CF 7B                    2289 	ld	a, e
      0008D0 95                    2290 	sub	a, l
      0008D1 5F                    2291 	ld	e, a
      0008D2 7A                    2292 	ld	a, d
      0008D3 9C                    2293 	sbc	a, h
      0008D4 F8 03                 2294 	ldhl	sp,	#3
      0008D6 32                    2295 	ld	(hl-), a
      0008D7 73                    2296 	ld	(hl), e
      0008D8 59                    2297 	ld	e, c
      0008D9 50                    2298 	ld	d, b
      0008DA 2A                    2299 	ld	a, (hl+)
      0008DB 12                    2300 	ld	(de), a
      0008DC 13                    2301 	inc	de
                                   2302 ;main.c:200: enemies[i].y -= y;
      0008DD 3A                    2303 	ld	a, (hl-)
      0008DE 12                    2304 	ld	(de), a
      0008DF 03                    2305 	inc	bc
      0008E0 03                    2306 	inc	bc
      0008E1 79                    2307 	ld	a, c
      0008E2 22                    2308 	ld	(hl+), a
      0008E3 78                    2309 	ld	a, b
      0008E4 32                    2310 	ld	(hl-), a
      0008E5 2A                    2311 	ld	a, (hl+)
      0008E6 5F                    2312 	ld	e, a
      0008E7 56                    2313 	ld	d, (hl)
      0008E8 1A                    2314 	ld	a, (de)
      0008E9 4F                    2315 	ld	c, a
      0008EA 13                    2316 	inc	de
      0008EB 1A                    2317 	ld	a, (de)
      0008EC 47                    2318 	ld	b, a
      0008ED F8 09                 2319 	ldhl	sp,#9
      0008EF 2A                    2320 	ld	a, (hl+)
      0008F0 5F                    2321 	ld	e, a
      0008F1 56                    2322 	ld	d, (hl)
      0008F2 79                    2323 	ld	a, c
      0008F3 93                    2324 	sub	a, e
      0008F4 5F                    2325 	ld	e, a
      0008F5 78                    2326 	ld	a, b
      0008F6 9A                    2327 	sbc	a, d
      0008F7 47                    2328 	ld	b, a
      0008F8 4B                    2329 	ld	c, e
      0008F9 F8 02                 2330 	ldhl	sp,	#2
      0008FB 2A                    2331 	ld	a,	(hl+)
      0008FC 66                    2332 	ld	h, (hl)
      0008FD 6F                    2333 	ld	l, a
      0008FE 79                    2334 	ld	a, c
      0008FF 22                    2335 	ld	(hl+), a
      000900 70                    2336 	ld	(hl), b
                                   2337 ;main.c:198: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000901 F8 04                 2338 	ldhl	sp,	#4
      000903 34                    2339 	inc	(hl)
      000904 18 9F                 2340 	jr	00103$
      000906                       2341 00105$:
                                   2342 ;main.c:202: }
      000906 E8 05                 2343 	add	sp, #5
      000908 C9                    2344 	ret
                                   2345 ;main.c:204: void updateEnemyPositions() {
                                   2346 ;	---------------------------------
                                   2347 ; Function updateEnemyPositions
                                   2348 ; ---------------------------------
      000909                       2349 _updateEnemyPositions::
      000909 E8 F1                 2350 	add	sp, #-15
                                   2351 ;main.c:207: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00090B F8 0E                 2352 	ldhl	sp,	#14
      00090D 36 00                 2353 	ld	(hl), #0x00
      00090F                       2354 00138$:
      00090F 21r09r05              2355 	ld	hl, #_ENEMYCOUNT
      000912 4E                    2356 	ld	c, (hl)
      000913 F8 0E                 2357 	ldhl	sp,	#14
      000915 7E                    2358 	ld	a, (hl)
      000916 91                    2359 	sub	a, c
      000917 D2rB1r0C              2360 	jp	NC, 00117$
                                   2361 ;main.c:208: if (enemies[i].x < playerDrawX) {
      00091A 4E                    2362 	ld	c, (hl)
      00091B 06 00                 2363 	ld	b, #0x00
      00091D 69                    2364 	ld	l, c
      00091E 60                    2365 	ld	h, b
      00091F 29                    2366 	add	hl, hl
      000920 29                    2367 	add	hl, hl
      000921 09                    2368 	add	hl, bc
      000922 29                    2369 	add	hl, hl
      000923 29                    2370 	add	hl, hl
      000924 01r00r00              2371 	ld	bc,#_enemies
      000927 09                    2372 	add	hl,bc
      000928 33                    2373 	inc	sp
      000929 33                    2374 	inc	sp
      00092A 5D                    2375 	ld	e, l
      00092B 54                    2376 	ld	d, h
      00092C D5                    2377 	push	de
      00092D 1A                    2378 	ld	a, (de)
      00092E F8 06                 2379 	ldhl	sp,	#6
      000930 22                    2380 	ld	(hl+), a
      000931 13                    2381 	inc	de
      000932 1A                    2382 	ld	a, (de)
      000933 77                    2383 	ld	(hl), a
      000934 FAr25r00              2384 	ld	a, (#_playerDrawX)
      000937 F8 08                 2385 	ldhl	sp,	#8
      000939 22                    2386 	ld	(hl+), a
      00093A 36 00                 2387 	ld	(hl), #0x00
                                   2388 ;main.c:215: enemies[i].ySpeed += enemies[i].accel;
      00093C D1                    2389 	pop	de
      00093D D5                    2390 	push	de
      00093E 21 0F 00              2391 	ld	hl, #0x000f
      000941 19                    2392 	add	hl, de
      000942 E5                    2393 	push	hl
      000943 7D                    2394 	ld	a, l
      000944 F8 0E                 2395 	ldhl	sp,	#14
      000946 77                    2396 	ld	(hl), a
      000947 E1                    2397 	pop	hl
      000948 7C                    2398 	ld	a, h
      000949 F8 0D                 2399 	ldhl	sp,	#13
      00094B 77                    2400 	ld	(hl), a
                                   2401 ;main.c:209: enemies[i].xSpeed += enemies[i].accel;
      00094C D1                    2402 	pop	de
      00094D D5                    2403 	push	de
      00094E 21 10 00              2404 	ld	hl, #0x0010
      000951 19                    2405 	add	hl, de
      000952 E5                    2406 	push	hl
      000953 7D                    2407 	ld	a, l
      000954 F8 04                 2408 	ldhl	sp,	#4
      000956 77                    2409 	ld	(hl), a
      000957 E1                    2410 	pop	hl
      000958 7C                    2411 	ld	a, h
      000959 F8 03                 2412 	ldhl	sp,	#3
      00095B 77                    2413 	ld	(hl), a
      00095C F8 0C                 2414 	ldhl	sp,#12
      00095E 2A                    2415 	ld	a, (hl+)
      00095F 5F                    2416 	ld	e, a
      000960 56                    2417 	ld	d, (hl)
      000961 1A                    2418 	ld	a, (de)
      000962 4F                    2419 	ld	c, a
                                   2420 ;main.c:221: enemies[i].xSpeed = i16Clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000963 F8 02                 2421 	ldhl	sp,#2
      000965 2A                    2422 	ld	a, (hl+)
      000966 5F                    2423 	ld	e, a
      000967 56                    2424 	ld	d, (hl)
      000968 1A                    2425 	ld	a, (de)
      000969 F8 0A                 2426 	ldhl	sp,	#10
      00096B 22                    2427 	ld	(hl+), a
      00096C 13                    2428 	inc	de
      00096D 1A                    2429 	ld	a, (de)
      00096E 77                    2430 	ld	(hl), a
                                   2431 ;main.c:209: enemies[i].xSpeed += enemies[i].accel;
      00096F 06 00                 2432 	ld	b, #0x00
                                   2433 ;main.c:208: if (enemies[i].x < playerDrawX) {
      000971 F8 06                 2434 	ldhl	sp,	#6
      000973 5D                    2435 	ld	e, l
      000974 54                    2436 	ld	d, h
      000975 F8 08                 2437 	ldhl	sp,	#8
      000977 1A                    2438 	ld	a, (de)
      000978 13                    2439 	inc	de
      000979 96                    2440 	sub	a, (hl)
      00097A 23                    2441 	inc	hl
      00097B 1A                    2442 	ld	a, (de)
      00097C 9E                    2443 	sbc	a, (hl)
      00097D 1A                    2444 	ld	a, (de)
      00097E 57                    2445 	ld	d, a
      00097F CB 7E                 2446 	bit	7, (hl)
      000981 28 07                 2447 	jr	Z, 00242$
      000983 CB 7A                 2448 	bit	7, d
      000985 20 08                 2449 	jr	NZ, 00243$
      000987 BF                    2450 	cp	a, a
      000988 18 05                 2451 	jr	00243$
      00098A                       2452 00242$:
      00098A CB 7A                 2453 	bit	7, d
      00098C 28 01                 2454 	jr	Z, 00243$
      00098E 37                    2455 	scf
      00098F                       2456 00243$:
      00098F 30 12                 2457 	jr	NC, 00102$
                                   2458 ;main.c:209: enemies[i].xSpeed += enemies[i].accel;
      000991 F8 0A                 2459 	ldhl	sp,	#10
      000993 2A                    2460 	ld	a,	(hl+)
      000994 66                    2461 	ld	h, (hl)
      000995 6F                    2462 	ld	l, a
      000996 09                    2463 	add	hl, bc
      000997 4D                    2464 	ld	c, l
      000998 44                    2465 	ld	b, h
      000999 F8 02                 2466 	ldhl	sp,	#2
      00099B 2A                    2467 	ld	a,	(hl+)
      00099C 66                    2468 	ld	h, (hl)
      00099D 6F                    2469 	ld	l, a
      00099E 79                    2470 	ld	a, c
      00099F 22                    2471 	ld	(hl+), a
      0009A0 70                    2472 	ld	(hl), b
      0009A1 18 14                 2473 	jr	00103$
      0009A3                       2474 00102$:
                                   2475 ;main.c:212: enemies[i].xSpeed -= enemies[i].accel;
      0009A3 F8 0A                 2476 	ldhl	sp,#10
      0009A5 2A                    2477 	ld	a, (hl+)
      0009A6 5F                    2478 	ld	e, a
      0009A7 56                    2479 	ld	d, (hl)
      0009A8 7B                    2480 	ld	a, e
      0009A9 91                    2481 	sub	a, c
      0009AA 5F                    2482 	ld	e, a
      0009AB 7A                    2483 	ld	a, d
      0009AC 98                    2484 	sbc	a, b
      0009AD 4B                    2485 	ld	c, e
      0009AE 47                    2486 	ld	b, a
      0009AF F8 02                 2487 	ldhl	sp,	#2
      0009B1 2A                    2488 	ld	a,	(hl+)
      0009B2 66                    2489 	ld	h, (hl)
      0009B3 6F                    2490 	ld	l, a
      0009B4 79                    2491 	ld	a, c
      0009B5 22                    2492 	ld	(hl+), a
      0009B6 70                    2493 	ld	(hl), b
      0009B7                       2494 00103$:
                                   2495 ;main.c:244: enemies[i].y += yMovement;
      0009B7 D1                    2496 	pop	de
      0009B8 D5                    2497 	push	de
      0009B9 21 02 00              2498 	ld	hl, #0x0002
      0009BC 19                    2499 	add	hl, de
      0009BD E5                    2500 	push	hl
      0009BE 7D                    2501 	ld	a, l
      0009BF F8 06                 2502 	ldhl	sp,	#6
      0009C1 77                    2503 	ld	(hl), a
      0009C2 E1                    2504 	pop	hl
      0009C3 7C                    2505 	ld	a, h
      0009C4 F8 05                 2506 	ldhl	sp,	#5
                                   2507 ;main.c:214: if (enemies[i].y < playerDrawY) {
      0009C6 32                    2508 	ld	(hl-), a
      0009C7 2A                    2509 	ld	a, (hl+)
      0009C8 5F                    2510 	ld	e, a
      0009C9 56                    2511 	ld	d, (hl)
      0009CA 1A                    2512 	ld	a, (de)
      0009CB F8 08                 2513 	ldhl	sp,	#8
      0009CD 22                    2514 	ld	(hl+), a
      0009CE 13                    2515 	inc	de
      0009CF 1A                    2516 	ld	a, (de)
      0009D0 77                    2517 	ld	(hl), a
      0009D1 FAr26r00              2518 	ld	a, (#_playerDrawY)
      0009D4 F8 0A                 2519 	ldhl	sp,	#10
      0009D6 22                    2520 	ld	(hl+), a
      0009D7 36 00                 2521 	ld	(hl), #0x00
                                   2522 ;main.c:215: enemies[i].ySpeed += enemies[i].accel;
      0009D9 D1                    2523 	pop	de
      0009DA D5                    2524 	push	de
      0009DB 21 12 00              2525 	ld	hl, #0x0012
      0009DE 19                    2526 	add	hl, de
      0009DF E5                    2527 	push	hl
      0009E0 7D                    2528 	ld	a, l
      0009E1 F8 08                 2529 	ldhl	sp,	#8
      0009E3 77                    2530 	ld	(hl), a
      0009E4 E1                    2531 	pop	hl
      0009E5 7C                    2532 	ld	a, h
      0009E6 F8 07                 2533 	ldhl	sp,	#7
      0009E8 77                    2534 	ld	(hl), a
                                   2535 ;main.c:209: enemies[i].xSpeed += enemies[i].accel;
      0009E9 F8 0C                 2536 	ldhl	sp,#12
      0009EB 2A                    2537 	ld	a, (hl+)
      0009EC 5F                    2538 	ld	e, a
      0009ED 56                    2539 	ld	d, (hl)
      0009EE 1A                    2540 	ld	a, (de)
      0009EF 47                    2541 	ld	b, a
                                   2542 ;main.c:215: enemies[i].ySpeed += enemies[i].accel;
      0009F0 F8 06                 2543 	ldhl	sp,#6
      0009F2 2A                    2544 	ld	a, (hl+)
      0009F3 5F                    2545 	ld	e, a
      0009F4 56                    2546 	ld	d, (hl)
      0009F5 1A                    2547 	ld	a, (de)
      0009F6 4F                    2548 	ld	c, a
      0009F7 13                    2549 	inc	de
      0009F8 1A                    2550 	ld	a, (de)
                                   2551 ;main.c:209: enemies[i].xSpeed += enemies[i].accel;
      0009F9 F8 0C                 2552 	ldhl	sp,	#12
      0009FB 70                    2553 	ld	(hl), b
      0009FC 23                    2554 	inc	hl
      0009FD 36 00                 2555 	ld	(hl), #0x00
                                   2556 ;main.c:215: enemies[i].ySpeed += enemies[i].accel;
      0009FF 47                    2557 	ld	b, a
                                   2558 ;main.c:214: if (enemies[i].y < playerDrawY) {
      000A00 F8 08                 2559 	ldhl	sp,	#8
      000A02 5D                    2560 	ld	e, l
      000A03 54                    2561 	ld	d, h
      000A04 F8 0A                 2562 	ldhl	sp,	#10
      000A06 1A                    2563 	ld	a, (de)
      000A07 13                    2564 	inc	de
      000A08 96                    2565 	sub	a, (hl)
      000A09 23                    2566 	inc	hl
      000A0A 1A                    2567 	ld	a, (de)
      000A0B 9E                    2568 	sbc	a, (hl)
      000A0C 1A                    2569 	ld	a, (de)
      000A0D 57                    2570 	ld	d, a
      000A0E CB 7E                 2571 	bit	7, (hl)
      000A10 28 07                 2572 	jr	Z, 00244$
      000A12 CB 7A                 2573 	bit	7, d
      000A14 20 08                 2574 	jr	NZ, 00245$
      000A16 BF                    2575 	cp	a, a
      000A17 18 05                 2576 	jr	00245$
      000A19                       2577 00244$:
      000A19 CB 7A                 2578 	bit	7, d
      000A1B 28 01                 2579 	jr	Z, 00245$
      000A1D 37                    2580 	scf
      000A1E                       2581 00245$:
      000A1E 30 12                 2582 	jr	NC, 00105$
                                   2583 ;main.c:215: enemies[i].ySpeed += enemies[i].accel;
      000A20 F8 0C                 2584 	ldhl	sp,	#12
      000A22 2A                    2585 	ld	a,	(hl+)
      000A23 66                    2586 	ld	h, (hl)
      000A24 6F                    2587 	ld	l, a
      000A25 09                    2588 	add	hl, bc
      000A26 4D                    2589 	ld	c, l
      000A27 44                    2590 	ld	b, h
      000A28 F8 06                 2591 	ldhl	sp,	#6
      000A2A 2A                    2592 	ld	a,	(hl+)
      000A2B 66                    2593 	ld	h, (hl)
      000A2C 6F                    2594 	ld	l, a
      000A2D 79                    2595 	ld	a, c
      000A2E 22                    2596 	ld	(hl+), a
      000A2F 70                    2597 	ld	(hl), b
      000A30 18 14                 2598 	jr	00106$
      000A32                       2599 00105$:
                                   2600 ;main.c:218: enemies[i].ySpeed -= enemies[i].accel;
      000A32 F8 0C                 2601 	ldhl	sp,#12
      000A34 2A                    2602 	ld	a, (hl+)
      000A35 5F                    2603 	ld	e, a
      000A36 56                    2604 	ld	d, (hl)
      000A37 79                    2605 	ld	a, c
      000A38 93                    2606 	sub	a, e
      000A39 5F                    2607 	ld	e, a
      000A3A 78                    2608 	ld	a, b
      000A3B 9A                    2609 	sbc	a, d
      000A3C 4B                    2610 	ld	c, e
      000A3D 47                    2611 	ld	b, a
      000A3E F8 06                 2612 	ldhl	sp,	#6
      000A40 2A                    2613 	ld	a,	(hl+)
      000A41 66                    2614 	ld	h, (hl)
      000A42 6F                    2615 	ld	l, a
      000A43 79                    2616 	ld	a, c
      000A44 22                    2617 	ld	(hl+), a
      000A45 70                    2618 	ld	(hl), b
      000A46                       2619 00106$:
                                   2620 ;main.c:221: enemies[i].xSpeed = i16Clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000A46 D1                    2621 	pop	de
      000A47 D5                    2622 	push	de
      000A48 21 0D 00              2623 	ld	hl, #0x000d
      000A4B 19                    2624 	add	hl, de
      000A4C E5                    2625 	push	hl
      000A4D 7D                    2626 	ld	a, l
      000A4E F8 0A                 2627 	ldhl	sp,	#10
      000A50 77                    2628 	ld	(hl), a
      000A51 E1                    2629 	pop	hl
      000A52 7C                    2630 	ld	a, h
      000A53 F8 09                 2631 	ldhl	sp,	#9
      000A55 32                    2632 	ld	(hl-), a
      000A56 2A                    2633 	ld	a, (hl+)
      000A57 5F                    2634 	ld	e, a
      000A58 2A                    2635 	ld	a, (hl+)
      000A59 23                    2636 	inc	hl
      000A5A 57                    2637 	ld	d, a
      000A5B 1A                    2638 	ld	a, (de)
      000A5C 4F                    2639 	ld	c, a
      000A5D 13                    2640 	inc	de
      000A5E 1A                    2641 	ld	a, (de)
      000A5F 47                    2642 	ld	b, a
      000A60 11 00 00              2643 	ld	de, #0x0000
      000A63 7B                    2644 	ld	a, e
      000A64 91                    2645 	sub	a, c
      000A65 5F                    2646 	ld	e, a
      000A66 7A                    2647 	ld	a, d
      000A67 98                    2648 	sbc	a, b
      000A68 32                    2649 	ld	(hl-), a
      000A69 73                    2650 	ld	(hl), e
      000A6A F8 02                 2651 	ldhl	sp,#2
      000A6C 2A                    2652 	ld	a, (hl+)
      000A6D 5F                    2653 	ld	e, a
      000A6E 56                    2654 	ld	d, (hl)
      000A6F 1A                    2655 	ld	a, (de)
      000A70 F8 0C                 2656 	ldhl	sp,	#12
      000A72 22                    2657 	ld	(hl+), a
      000A73 13                    2658 	inc	de
      000A74 1A                    2659 	ld	a, (de)
      000A75 77                    2660 	ld	(hl), a
      000A76 C5                    2661 	push	bc
      000A77 F8 0C                 2662 	ldhl	sp,	#12
      000A79 2A                    2663 	ld	a, (hl+)
      000A7A 5F                    2664 	ld	e, a
      000A7B 2A                    2665 	ld	a, (hl+)
      000A7C 57                    2666 	ld	d, a
      000A7D D5                    2667 	push	de
      000A7E 2A                    2668 	ld	a, (hl+)
      000A7F 5F                    2669 	ld	e, a
      000A80 56                    2670 	ld	d, (hl)
      000A81 D5                    2671 	push	de
      000A82 CDr3Fr08              2672 	call	_i16Clamp
      000A85 E8 06                 2673 	add	sp, #6
      000A87 4B                    2674 	ld	c, e
      000A88 42                    2675 	ld	b, d
      000A89 F8 02                 2676 	ldhl	sp,	#2
      000A8B 2A                    2677 	ld	a,	(hl+)
      000A8C 66                    2678 	ld	h, (hl)
      000A8D 6F                    2679 	ld	l, a
      000A8E 79                    2680 	ld	a, c
      000A8F 22                    2681 	ld	(hl+), a
      000A90 70                    2682 	ld	(hl), b
                                   2683 ;main.c:222: enemies[i].ySpeed = i16Clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000A91 F8 08                 2684 	ldhl	sp,#8
      000A93 2A                    2685 	ld	a, (hl+)
      000A94 5F                    2686 	ld	e, a
      000A95 2A                    2687 	ld	a, (hl+)
      000A96 23                    2688 	inc	hl
      000A97 57                    2689 	ld	d, a
      000A98 1A                    2690 	ld	a, (de)
      000A99 4F                    2691 	ld	c, a
      000A9A 13                    2692 	inc	de
      000A9B 1A                    2693 	ld	a, (de)
      000A9C 47                    2694 	ld	b, a
      000A9D 11 00 00              2695 	ld	de, #0x0000
      000AA0 7B                    2696 	ld	a, e
      000AA1 91                    2697 	sub	a, c
      000AA2 5F                    2698 	ld	e, a
      000AA3 7A                    2699 	ld	a, d
      000AA4 98                    2700 	sbc	a, b
      000AA5 32                    2701 	ld	(hl-), a
      000AA6 73                    2702 	ld	(hl), e
      000AA7 F8 06                 2703 	ldhl	sp,#6
      000AA9 2A                    2704 	ld	a, (hl+)
      000AAA 5F                    2705 	ld	e, a
      000AAB 56                    2706 	ld	d, (hl)
      000AAC 1A                    2707 	ld	a, (de)
      000AAD F8 0C                 2708 	ldhl	sp,	#12
      000AAF 22                    2709 	ld	(hl+), a
      000AB0 13                    2710 	inc	de
      000AB1 1A                    2711 	ld	a, (de)
      000AB2 77                    2712 	ld	(hl), a
      000AB3 C5                    2713 	push	bc
      000AB4 F8 0C                 2714 	ldhl	sp,	#12
      000AB6 2A                    2715 	ld	a, (hl+)
      000AB7 5F                    2716 	ld	e, a
      000AB8 2A                    2717 	ld	a, (hl+)
      000AB9 57                    2718 	ld	d, a
      000ABA D5                    2719 	push	de
      000ABB 2A                    2720 	ld	a, (hl+)
      000ABC 5F                    2721 	ld	e, a
      000ABD 56                    2722 	ld	d, (hl)
      000ABE D5                    2723 	push	de
      000ABF CDr3Fr08              2724 	call	_i16Clamp
      000AC2 E8 06                 2725 	add	sp, #6
      000AC4 4B                    2726 	ld	c, e
      000AC5 42                    2727 	ld	b, d
      000AC6 F8 06                 2728 	ldhl	sp,	#6
      000AC8 2A                    2729 	ld	a,	(hl+)
      000AC9 66                    2730 	ld	h, (hl)
      000ACA 6F                    2731 	ld	l, a
      000ACB 79                    2732 	ld	a, c
      000ACC 22                    2733 	ld	(hl+), a
      000ACD 70                    2734 	ld	(hl), b
                                   2735 ;main.c:225: enemies[i].xReserve += enemies[i].xSpeed;
      000ACE D1                    2736 	pop	de
      000ACF D5                    2737 	push	de
      000AD0 21 04 00              2738 	ld	hl, #0x0004
      000AD3 19                    2739 	add	hl, de
      000AD4 E5                    2740 	push	hl
      000AD5 7D                    2741 	ld	a, l
      000AD6 F8 0E                 2742 	ldhl	sp,	#14
      000AD8 77                    2743 	ld	(hl), a
      000AD9 E1                    2744 	pop	hl
      000ADA 7C                    2745 	ld	a, h
      000ADB F8 0D                 2746 	ldhl	sp,	#13
      000ADD 32                    2747 	ld	(hl-), a
      000ADE 2A                    2748 	ld	a, (hl+)
      000ADF 5F                    2749 	ld	e, a
      000AE0 56                    2750 	ld	d, (hl)
      000AE1 1A                    2751 	ld	a, (de)
      000AE2 F8 02                 2752 	ldhl	sp,#2
      000AE4 5E                    2753 	ld	e, (hl)
      000AE5 23                    2754 	inc	hl
      000AE6 56                    2755 	ld	d, (hl)
      000AE7 F5                    2756 	push	af
      000AE8 1A                    2757 	ld	a, (de)
      000AE9 6F                    2758 	ld	l, a
                                   2759 ;	spillPairReg hl
                                   2760 ;	spillPairReg hl
      000AEA F1                    2761 	pop	af
      000AEB 85                    2762 	add	a, l
      000AEC F8 0B                 2763 	ldhl	sp,	#11
      000AEE 22                    2764 	ld	(hl+), a
      000AEF 2A                    2765 	ld	a, (hl+)
      000AF0 5F                    2766 	ld	e, a
      000AF1 3A                    2767 	ld	a, (hl-)
      000AF2 2B                    2768 	dec	hl
      000AF3 57                    2769 	ld	d, a
      000AF4 7E                    2770 	ld	a, (hl)
      000AF5 12                    2771 	ld	(de), a
                                   2772 ;main.c:226: enemies[i].yReserve += enemies[i].ySpeed;
      000AF6 D1                    2773 	pop	de
      000AF7 D5                    2774 	push	de
      000AF8 21 05 00              2775 	ld	hl, #0x0005
      000AFB 19                    2776 	add	hl, de
      000AFC E5                    2777 	push	hl
      000AFD 7D                    2778 	ld	a, l
      000AFE F8 0B                 2779 	ldhl	sp,	#11
      000B00 77                    2780 	ld	(hl), a
      000B01 E1                    2781 	pop	hl
      000B02 7C                    2782 	ld	a, h
      000B03 F8 0A                 2783 	ldhl	sp,	#10
      000B05 32                    2784 	ld	(hl-), a
      000B06 2A                    2785 	ld	a, (hl+)
      000B07 5F                    2786 	ld	e, a
      000B08 56                    2787 	ld	d, (hl)
      000B09 1A                    2788 	ld	a, (de)
      000B0A 81                    2789 	add	a, c
      000B0B 4F                    2790 	ld	c, a
      000B0C 3A                    2791 	ld	a, (hl-)
      000B0D 6E                    2792 	ld	l, (hl)
      000B0E 67                    2793 	ld	h, a
      000B0F 71                    2794 	ld	(hl), c
                                   2795 ;main.c:230: if (enemies[i].xReserve >> 3 > 0) {
      000B10 F8 0B                 2796 	ldhl	sp,	#11
                                   2797 ;main.c:225: enemies[i].xReserve += enemies[i].xSpeed;
      000B12 2A                    2798 	ld	a, (hl+)
      000B13 4F                    2799 	ld	c, a
      000B14 CB 29                 2800 	sra	c
      000B16 CB 29                 2801 	sra	c
      000B18 CB 29                 2802 	sra	c
      000B1A 2A                    2803 	ld	a, (hl+)
      000B1B 5F                    2804 	ld	e, a
      000B1C 3A                    2805 	ld	a, (hl-)
      000B1D 2B                    2806 	dec	hl
      000B1E 57                    2807 	ld	d, a
      000B1F 1A                    2808 	ld	a, (de)
      000B20 77                    2809 	ld	(hl), a
                                   2810 ;main.c:230: if (enemies[i].xReserve >> 3 > 0) {
      000B21 59                    2811 	ld	e, c
      000B22 AF                    2812 	xor	a, a
      000B23 57                    2813 	ld	d, a
      000B24 91                    2814 	sub	a, c
      000B25 CB 7B                 2815 	bit	7, e
      000B27 28 07                 2816 	jr	Z, 00246$
      000B29 CB 7A                 2817 	bit	7, d
      000B2B 20 08                 2818 	jr	NZ, 00247$
      000B2D BF                    2819 	cp	a, a
      000B2E 18 05                 2820 	jr	00247$
      000B30                       2821 00246$:
      000B30 CB 7A                 2822 	bit	7, d
      000B32 28 01                 2823 	jr	Z, 00247$
      000B34 37                    2824 	scf
      000B35                       2825 00247$:
      000B35 30 37                 2826 	jr	NC, 00110$
                                   2827 ;main.c:231: int8_t xMovement = enemies[i].xReserve >> 3;
      000B37 F8 0B                 2828 	ldhl	sp,	#11
      000B39 7E                    2829 	ld	a, (hl)
      000B3A CB 2F                 2830 	sra	a
      000B3C CB 2F                 2831 	sra	a
      000B3E CB 2F                 2832 	sra	a
      000B40 77                    2833 	ld	(hl), a
                                   2834 ;main.c:232: enemies[i].x += xMovement;
      000B41 D1                    2835 	pop	de
      000B42 D5                    2836 	push	de
      000B43 1A                    2837 	ld	a, (de)
      000B44 4F                    2838 	ld	c, a
      000B45 13                    2839 	inc	de
      000B46 1A                    2840 	ld	a, (de)
      000B47 47                    2841 	ld	b, a
      000B48 7E                    2842 	ld	a, (hl)
      000B49 5F                    2843 	ld	e, a
      000B4A 07                    2844 	rlca
      000B4B 9F                    2845 	sbc	a, a
      000B4C 57                    2846 	ld	d, a
      000B4D 69                    2847 	ld	l, c
                                   2848 ;	spillPairReg hl
                                   2849 ;	spillPairReg hl
      000B4E 60                    2850 	ld	h, b
                                   2851 ;	spillPairReg hl
                                   2852 ;	spillPairReg hl
      000B4F 19                    2853 	add	hl, de
      000B50 4D                    2854 	ld	c, l
      000B51 44                    2855 	ld	b, h
      000B52 E1                    2856 	pop	hl
      000B53 E5                    2857 	push	hl
      000B54 79                    2858 	ld	a, c
      000B55 22                    2859 	ld	(hl+), a
      000B56 70                    2860 	ld	(hl), b
                                   2861 ;main.c:233: enemies[i].xReserve -=  xMovement << 3;
      000B57 F8 0C                 2862 	ldhl	sp,#12
      000B59 2A                    2863 	ld	a, (hl+)
      000B5A 5F                    2864 	ld	e, a
      000B5B 3A                    2865 	ld	a, (hl-)
      000B5C 2B                    2866 	dec	hl
      000B5D 57                    2867 	ld	d, a
      000B5E 1A                    2868 	ld	a, (de)
      000B5F F5                    2869 	push	af
      000B60 2A                    2870 	ld	a, (hl+)
      000B61 87                    2871 	add	a, a
      000B62 87                    2872 	add	a, a
      000B63 87                    2873 	add	a, a
      000B64 4F                    2874 	ld	c, a
      000B65 F1                    2875 	pop	af
      000B66 91                    2876 	sub	a, c
      000B67 4F                    2877 	ld	c, a
      000B68 2A                    2878 	ld	a,	(hl+)
      000B69 66                    2879 	ld	h, (hl)
      000B6A 6F                    2880 	ld	l, a
      000B6B 71                    2881 	ld	(hl), c
      000B6C 18 61                 2882 	jr	00111$
      000B6E                       2883 00110$:
                                   2884 ;main.c:236: else if ((-enemies[i].xReserve) >> 3 > 0){
      000B6E F8 0B                 2885 	ldhl	sp,	#11
      000B70 7E                    2886 	ld	a, (hl)
      000B71 4F                    2887 	ld	c, a
      000B72 07                    2888 	rlca
      000B73 9F                    2889 	sbc	a, a
      000B74 47                    2890 	ld	b, a
      000B75 AF                    2891 	xor	a, a
      000B76 91                    2892 	sub	a, c
      000B77 4F                    2893 	ld	c, a
      000B78 9F                    2894 	sbc	a, a
      000B79 90                    2895 	sub	a, b
      000B7A 47                    2896 	ld	b, a
      000B7B CB 28                 2897 	sra	b
      000B7D CB 19                 2898 	rr	c
      000B7F CB 28                 2899 	sra	b
      000B81 CB 19                 2900 	rr	c
      000B83 CB 28                 2901 	sra	b
      000B85 CB 19                 2902 	rr	c
      000B87 58                    2903 	ld	e, b
      000B88 AF                    2904 	xor	a, a
      000B89 57                    2905 	ld	d, a
      000B8A B9                    2906 	cp	a, c
      000B8B 98                    2907 	sbc	a, b
      000B8C CB 7B                 2908 	bit	7, e
      000B8E 28 07                 2909 	jr	Z, 00248$
      000B90 CB 7A                 2910 	bit	7, d
      000B92 20 08                 2911 	jr	NZ, 00249$
      000B94 BF                    2912 	cp	a, a
      000B95 18 05                 2913 	jr	00249$
      000B97                       2914 00248$:
      000B97 CB 7A                 2915 	bit	7, d
      000B99 28 01                 2916 	jr	Z, 00249$
      000B9B 37                    2917 	scf
      000B9C                       2918 00249$:
      000B9C 30 31                 2919 	jr	NC, 00111$
                                   2920 ;main.c:237: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      000B9E AF                    2921 	xor	a, a
      000B9F 91                    2922 	sub	a, c
      000BA0 4F                    2923 	ld	c, a
      000BA1 F8 0B                 2924 	ldhl	sp,	#11
      000BA3 71                    2925 	ld	(hl), c
                                   2926 ;main.c:238: enemies[i].x += xMovement;
      000BA4 D1                    2927 	pop	de
      000BA5 D5                    2928 	push	de
      000BA6 1A                    2929 	ld	a, (de)
      000BA7 4F                    2930 	ld	c, a
      000BA8 13                    2931 	inc	de
      000BA9 1A                    2932 	ld	a, (de)
      000BAA 47                    2933 	ld	b, a
      000BAB 7E                    2934 	ld	a, (hl)
      000BAC 5F                    2935 	ld	e, a
      000BAD 07                    2936 	rlca
      000BAE 9F                    2937 	sbc	a, a
      000BAF 57                    2938 	ld	d, a
      000BB0 69                    2939 	ld	l, c
                                   2940 ;	spillPairReg hl
                                   2941 ;	spillPairReg hl
      000BB1 60                    2942 	ld	h, b
                                   2943 ;	spillPairReg hl
                                   2944 ;	spillPairReg hl
      000BB2 19                    2945 	add	hl, de
      000BB3 4D                    2946 	ld	c, l
      000BB4 44                    2947 	ld	b, h
      000BB5 E1                    2948 	pop	hl
      000BB6 E5                    2949 	push	hl
      000BB7 79                    2950 	ld	a, c
      000BB8 22                    2951 	ld	(hl+), a
      000BB9 70                    2952 	ld	(hl), b
                                   2953 ;main.c:239: enemies[i].xReserve +=  (-xMovement) << 3;
      000BBA F8 0C                 2954 	ldhl	sp,#12
      000BBC 2A                    2955 	ld	a, (hl+)
      000BBD 5F                    2956 	ld	e, a
      000BBE 3A                    2957 	ld	a, (hl-)
      000BBF 2B                    2958 	dec	hl
      000BC0 57                    2959 	ld	d, a
      000BC1 1A                    2960 	ld	a, (de)
      000BC2 4F                    2961 	ld	c, a
      000BC3 AF                    2962 	xor	a, a
      000BC4 96                    2963 	sub	a, (hl)
      000BC5 23                    2964 	inc	hl
      000BC6 87                    2965 	add	a, a
      000BC7 87                    2966 	add	a, a
      000BC8 87                    2967 	add	a, a
      000BC9 81                    2968 	add	a, c
      000BCA 4F                    2969 	ld	c, a
      000BCB 2A                    2970 	ld	a,	(hl+)
      000BCC 66                    2971 	ld	h, (hl)
      000BCD 6F                    2972 	ld	l, a
      000BCE 71                    2973 	ld	(hl), c
      000BCF                       2974 00111$:
                                   2975 ;main.c:242: if (enemies[i].yReserve >> 3 > 0) {
      000BCF F8 09                 2976 	ldhl	sp,#9
      000BD1 2A                    2977 	ld	a, (hl+)
      000BD2 5F                    2978 	ld	e, a
      000BD3 56                    2979 	ld	d, (hl)
      000BD4 1A                    2980 	ld	a, (de)
      000BD5 F8 0D                 2981 	ldhl	sp,	#13
      000BD7 77                    2982 	ld	(hl), a
      000BD8 3A                    2983 	ld	a, (hl-)
      000BD9 CB 2F                 2984 	sra	a
      000BDB CB 2F                 2985 	sra	a
      000BDD CB 2F                 2986 	sra	a
      000BDF 77                    2987 	ld	(hl), a
      000BE0 5E                    2988 	ld	e, (hl)
      000BE1 AF                    2989 	xor	a, a
      000BE2 57                    2990 	ld	d, a
      000BE3 96                    2991 	sub	a, (hl)
      000BE4 CB 7B                 2992 	bit	7, e
      000BE6 28 07                 2993 	jr	Z, 00250$
      000BE8 CB 7A                 2994 	bit	7, d
      000BEA 20 08                 2995 	jr	NZ, 00251$
      000BEC BF                    2996 	cp	a, a
      000BED 18 05                 2997 	jr	00251$
      000BEF                       2998 00250$:
      000BEF CB 7A                 2999 	bit	7, d
      000BF1 28 01                 3000 	jr	Z, 00251$
      000BF3 37                    3001 	scf
      000BF4                       3002 00251$:
      000BF4 30 3B                 3003 	jr	NC, 00115$
                                   3004 ;main.c:243: int8_t yMovement = enemies[i].yReserve >> 3;
      000BF6 F8 0C                 3005 	ldhl	sp,	#12
      000BF8 2A                    3006 	ld	a, (hl+)
      000BF9 77                    3007 	ld	(hl), a
                                   3008 ;main.c:244: enemies[i].y += yMovement;
      000BFA F8 04                 3009 	ldhl	sp,#4
      000BFC 2A                    3010 	ld	a, (hl+)
      000BFD 5F                    3011 	ld	e, a
      000BFE 56                    3012 	ld	d, (hl)
      000BFF 1A                    3013 	ld	a, (de)
      000C00 4F                    3014 	ld	c, a
      000C01 13                    3015 	inc	de
      000C02 1A                    3016 	ld	a, (de)
      000C03 47                    3017 	ld	b, a
      000C04 F8 0D                 3018 	ldhl	sp,	#13
      000C06 7E                    3019 	ld	a, (hl)
      000C07 5F                    3020 	ld	e, a
      000C08 07                    3021 	rlca
      000C09 9F                    3022 	sbc	a, a
      000C0A 57                    3023 	ld	d, a
      000C0B 69                    3024 	ld	l, c
                                   3025 ;	spillPairReg hl
                                   3026 ;	spillPairReg hl
      000C0C 60                    3027 	ld	h, b
                                   3028 ;	spillPairReg hl
                                   3029 ;	spillPairReg hl
      000C0D 19                    3030 	add	hl, de
      000C0E 4D                    3031 	ld	c, l
      000C0F 44                    3032 	ld	b, h
      000C10 F8 04                 3033 	ldhl	sp,	#4
      000C12 2A                    3034 	ld	a,	(hl+)
      000C13 66                    3035 	ld	h, (hl)
      000C14 6F                    3036 	ld	l, a
      000C15 79                    3037 	ld	a, c
      000C16 22                    3038 	ld	(hl+), a
      000C17 70                    3039 	ld	(hl), b
                                   3040 ;main.c:245: enemies[i].yReserve -=  yMovement << 3;
      000C18 F8 09                 3041 	ldhl	sp,#9
      000C1A 2A                    3042 	ld	a, (hl+)
      000C1B 5F                    3043 	ld	e, a
      000C1C 56                    3044 	ld	d, (hl)
      000C1D 1A                    3045 	ld	a, (de)
      000C1E F5                    3046 	push	af
      000C1F F8 0F                 3047 	ldhl	sp,	#15
      000C21 7E                    3048 	ld	a, (hl)
      000C22 87                    3049 	add	a, a
      000C23 87                    3050 	add	a, a
      000C24 87                    3051 	add	a, a
      000C25 4F                    3052 	ld	c, a
      000C26 F1                    3053 	pop	af
      000C27 91                    3054 	sub	a, c
      000C28 4F                    3055 	ld	c, a
      000C29 F8 09                 3056 	ldhl	sp,	#9
      000C2B 2A                    3057 	ld	a,	(hl+)
      000C2C 66                    3058 	ld	h, (hl)
      000C2D 6F                    3059 	ld	l, a
      000C2E 71                    3060 	ld	(hl), c
      000C2F 18 7A                 3061 	jr	00139$
      000C31                       3062 00115$:
                                   3063 ;main.c:247: else if ((-enemies[i].yReserve) >> 3 > 0){
      000C31 F8 0D                 3064 	ldhl	sp,	#13
      000C33 7E                    3065 	ld	a, (hl)
      000C34 F8 07                 3066 	ldhl	sp,	#7
      000C36 22                    3067 	ld	(hl+), a
      000C37 07                    3068 	rlca
      000C38 9F                    3069 	sbc	a, a
      000C39 77                    3070 	ld	(hl), a
      000C3A 11 00 00              3071 	ld	de, #0x0000
      000C3D 3A                    3072 	ld	a, (hl-)
      000C3E 6E                    3073 	ld	l, (hl)
      000C3F 67                    3074 	ld	h, a
      000C40 7B                    3075 	ld	a, e
      000C41 95                    3076 	sub	a, l
      000C42 5F                    3077 	ld	e, a
      000C43 7A                    3078 	ld	a, d
      000C44 9C                    3079 	sbc	a, h
      000C45 F8 0D                 3080 	ldhl	sp,	#13
      000C47 32                    3081 	ld	(hl-), a
      000C48 7B                    3082 	ld	a, e
      000C49 22                    3083 	ld	(hl+), a
      000C4A 2B                    3084 	dec	hl
      000C4B 2A                    3085 	ld	a, (hl+)
      000C4C 4F                    3086 	ld	c, a
      000C4D 46                    3087 	ld	b, (hl)
      000C4E CB 28                 3088 	sra	b
      000C50 CB 19                 3089 	rr	c
      000C52 CB 28                 3090 	sra	b
      000C54 CB 19                 3091 	rr	c
      000C56 CB 28                 3092 	sra	b
      000C58 CB 19                 3093 	rr	c
      000C5A 58                    3094 	ld	e, b
      000C5B AF                    3095 	xor	a, a
      000C5C 57                    3096 	ld	d, a
      000C5D B9                    3097 	cp	a, c
      000C5E 98                    3098 	sbc	a, b
      000C5F CB 7B                 3099 	bit	7, e
      000C61 28 07                 3100 	jr	Z, 00252$
      000C63 CB 7A                 3101 	bit	7, d
      000C65 20 08                 3102 	jr	NZ, 00253$
      000C67 BF                    3103 	cp	a, a
      000C68 18 05                 3104 	jr	00253$
      000C6A                       3105 00252$:
      000C6A CB 7A                 3106 	bit	7, d
      000C6C 28 01                 3107 	jr	Z, 00253$
      000C6E 37                    3108 	scf
      000C6F                       3109 00253$:
      000C6F 30 3A                 3110 	jr	NC, 00139$
                                   3111 ;main.c:248: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      000C71 AF                    3112 	xor	a, a
      000C72 91                    3113 	sub	a, c
      000C73 4F                    3114 	ld	c, a
      000C74 F8 0D                 3115 	ldhl	sp,	#13
      000C76 71                    3116 	ld	(hl), c
                                   3117 ;main.c:249: enemies[i].y += yMovement;
      000C77 F8 04                 3118 	ldhl	sp,#4
      000C79 2A                    3119 	ld	a, (hl+)
      000C7A 5F                    3120 	ld	e, a
      000C7B 56                    3121 	ld	d, (hl)
      000C7C 1A                    3122 	ld	a, (de)
      000C7D 4F                    3123 	ld	c, a
      000C7E 13                    3124 	inc	de
      000C7F 1A                    3125 	ld	a, (de)
      000C80 47                    3126 	ld	b, a
      000C81 F8 0D                 3127 	ldhl	sp,	#13
      000C83 7E                    3128 	ld	a, (hl)
      000C84 5F                    3129 	ld	e, a
      000C85 07                    3130 	rlca
      000C86 9F                    3131 	sbc	a, a
      000C87 57                    3132 	ld	d, a
      000C88 69                    3133 	ld	l, c
                                   3134 ;	spillPairReg hl
                                   3135 ;	spillPairReg hl
      000C89 60                    3136 	ld	h, b
                                   3137 ;	spillPairReg hl
                                   3138 ;	spillPairReg hl
      000C8A 19                    3139 	add	hl, de
      000C8B 4D                    3140 	ld	c, l
      000C8C 44                    3141 	ld	b, h
      000C8D F8 04                 3142 	ldhl	sp,	#4
      000C8F 2A                    3143 	ld	a,	(hl+)
      000C90 66                    3144 	ld	h, (hl)
      000C91 6F                    3145 	ld	l, a
      000C92 79                    3146 	ld	a, c
      000C93 22                    3147 	ld	(hl+), a
      000C94 70                    3148 	ld	(hl), b
                                   3149 ;main.c:250: enemies[i].yReserve +=  (-yMovement) << 3;
      000C95 F8 09                 3150 	ldhl	sp,#9
      000C97 2A                    3151 	ld	a, (hl+)
      000C98 5F                    3152 	ld	e, a
      000C99 56                    3153 	ld	d, (hl)
      000C9A 1A                    3154 	ld	a, (de)
      000C9B 4F                    3155 	ld	c, a
      000C9C AF                    3156 	xor	a, a
      000C9D F8 0D                 3157 	ldhl	sp,	#13
      000C9F 96                    3158 	sub	a, (hl)
      000CA0 87                    3159 	add	a, a
      000CA1 87                    3160 	add	a, a
      000CA2 87                    3161 	add	a, a
      000CA3 81                    3162 	add	a, c
      000CA4 4F                    3163 	ld	c, a
      000CA5 F8 09                 3164 	ldhl	sp,	#9
      000CA7 2A                    3165 	ld	a,	(hl+)
      000CA8 66                    3166 	ld	h, (hl)
      000CA9 6F                    3167 	ld	l, a
      000CAA 71                    3168 	ld	(hl), c
      000CAB                       3169 00139$:
                                   3170 ;main.c:207: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000CAB F8 0E                 3171 	ldhl	sp,	#14
      000CAD 34                    3172 	inc	(hl)
      000CAE C3r0Fr09              3173 	jp	00138$
      000CB1                       3174 00117$:
                                   3175 ;main.c:261: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000CB1 F8 0E                 3176 	ldhl	sp,	#14
      000CB3 36 00                 3177 	ld	(hl), #0x00
      000CB5                       3178 00141$:
      000CB5 21r09r05              3179 	ld	hl, #_ENEMYCOUNT
      000CB8 4E                    3180 	ld	c, (hl)
      000CB9 F8 0E                 3181 	ldhl	sp,	#14
      000CBB 7E                    3182 	ld	a, (hl)
      000CBC 91                    3183 	sub	a, c
      000CBD D2r27r0E              3184 	jp	NC, 00143$
                                   3185 ;main.c:263: if (enemies[i].alive) {
      000CC0 4E                    3186 	ld	c, (hl)
      000CC1 06 00                 3187 	ld	b, #0x00
      000CC3 69                    3188 	ld	l, c
      000CC4 60                    3189 	ld	h, b
      000CC5 29                    3190 	add	hl, hl
      000CC6 29                    3191 	add	hl, hl
      000CC7 09                    3192 	add	hl, bc
      000CC8 29                    3193 	add	hl, hl
      000CC9 29                    3194 	add	hl, hl
      000CCA 01r00r00              3195 	ld	bc,#_enemies
      000CCD 09                    3196 	add	hl,bc
      000CCE E5                    3197 	push	hl
      000CCF 7D                    3198 	ld	a, l
      000CD0 F8 08                 3199 	ldhl	sp,	#8
      000CD2 77                    3200 	ld	(hl), a
      000CD3 E1                    3201 	pop	hl
      000CD4 7C                    3202 	ld	a, h
      000CD5 F8 07                 3203 	ldhl	sp,	#7
      000CD7 32                    3204 	ld	(hl-), a
      000CD8 2A                    3205 	ld	a, (hl+)
      000CD9 5F                    3206 	ld	e, a
      000CDA 56                    3207 	ld	d, (hl)
      000CDB 21 0A 00              3208 	ld	hl, #0x000a
      000CDE 19                    3209 	add	hl, de
      000CDF 4D                    3210 	ld	c, l
      000CE0 44                    3211 	ld	b, h
      000CE1 0A                    3212 	ld	a, (bc)
      000CE2 F8 0D                 3213 	ldhl	sp,	#13
      000CE4 77                    3214 	ld	(hl), a
      000CE5 7E                    3215 	ld	a, (hl)
      000CE6 B7                    3216 	or	a, a
      000CE7 CArF9r0D              3217 	jp	Z, 00132$
                                   3218 ;main.c:264: if (enemies[i].visible == 1) {
      000CEA F8 06                 3219 	ldhl	sp,#6
      000CEC 2A                    3220 	ld	a, (hl+)
      000CED 5F                    3221 	ld	e, a
      000CEE 56                    3222 	ld	d, (hl)
      000CEF 21 0B 00              3223 	ld	hl, #0x000b
      000CF2 19                    3224 	add	hl, de
      000CF3 E5                    3225 	push	hl
      000CF4 7D                    3226 	ld	a, l
      000CF5 F8 0A                 3227 	ldhl	sp,	#10
      000CF7 77                    3228 	ld	(hl), a
      000CF8 E1                    3229 	pop	hl
      000CF9 7C                    3230 	ld	a, h
      000CFA F8 09                 3231 	ldhl	sp,	#9
      000CFC 32                    3232 	ld	(hl-), a
      000CFD 2A                    3233 	ld	a, (hl+)
      000CFE 5F                    3234 	ld	e, a
      000CFF 2A                    3235 	ld	a, (hl+)
      000D00 57                    3236 	ld	d, a
      000D01 1A                    3237 	ld	a, (de)
      000D02 77                    3238 	ld	(hl), a
                                   3239 ;main.c:265: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D03 F8 06                 3240 	ldhl	sp,#6
      000D05 2A                    3241 	ld	a, (hl+)
      000D06 5F                    3242 	ld	e, a
      000D07 56                    3243 	ld	d, (hl)
      000D08 1A                    3244 	ld	a, (de)
      000D09 F8 04                 3245 	ldhl	sp,	#4
      000D0B 22                    3246 	ld	(hl+), a
      000D0C 13                    3247 	inc	de
      000D0D 1A                    3248 	ld	a, (de)
      000D0E 22                    3249 	ld	(hl+), a
      000D0F 2A                    3250 	ld	a, (hl+)
      000D10 5F                    3251 	ld	e, a
      000D11 56                    3252 	ld	d, (hl)
      000D12 21 02 00              3253 	ld	hl, #0x0002
      000D15 19                    3254 	add	hl, de
      000D16 E5                    3255 	push	hl
      000D17 7D                    3256 	ld	a, l
      000D18 F8 0D                 3257 	ldhl	sp,	#13
      000D1A 77                    3258 	ld	(hl), a
      000D1B E1                    3259 	pop	hl
      000D1C 7C                    3260 	ld	a, h
      000D1D F8 0C                 3261 	ldhl	sp,	#12
                                   3262 ;main.c:267: set_sprite_tile(10+i, EMPTYSPRITE);
      000D1F 22                    3263 	ld	(hl+), a
      000D20 23                    3264 	inc	hl
      000D21 7E                    3265 	ld	a, (hl)
                                   3266 ;main.c:265: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D22 F8 04                 3267 	ldhl	sp,	#4
      000D24 4E                    3268 	ld	c, (hl)
      000D25 23                    3269 	inc	hl
      000D26 46                    3270 	ld	b, (hl)
                                   3271 ;main.c:267: set_sprite_tile(10+i, EMPTYSPRITE);
      000D27 C6 0A                 3272 	add	a, #0x0a
      000D29 F8 0D                 3273 	ldhl	sp,	#13
      000D2B 77                    3274 	ld	(hl), a
                                   3275 ;main.c:265: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D2C 78                    3276 	ld	a, b
      000D2D 07                    3277 	rlca
      000D2E E6 01                 3278 	and	a,#0x01
      000D30 6F                    3279 	ld	l, a
                                   3280 ;	spillPairReg hl
                                   3281 ;	spillPairReg hl
                                   3282 ;main.c:264: if (enemies[i].visible == 1) {
      000D31 E5                    3283 	push	hl
      000D32 F8 0C                 3284 	ldhl	sp,	#12
      000D34 7E                    3285 	ld	a, (hl)
      000D35 3D                    3286 	dec	a
      000D36 E1                    3287 	pop	hl
      000D37 20 63                 3288 	jr	NZ, 00129$
                                   3289 ;main.c:265: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D39 7D                    3290 	ld	a, l
      000D3A B7                    3291 	or	a, a
      000D3B 20 44                 3292 	jr	NZ, 00118$
      000D3D 58                    3293 	ld	e, b
      000D3E 16 00                 3294 	ld	d, #0x00
      000D40 3E AC                 3295 	ld	a, #0xac
      000D42 B9                    3296 	cp	a, c
      000D43 3E 00                 3297 	ld	a, #0x00
      000D45 98                    3298 	sbc	a, b
      000D46 CB 7B                 3299 	bit	7, e
      000D48 28 07                 3300 	jr	Z, 00256$
      000D4A CB 7A                 3301 	bit	7, d
      000D4C 20 08                 3302 	jr	NZ, 00257$
      000D4E BF                    3303 	cp	a, a
      000D4F 18 05                 3304 	jr	00257$
      000D51                       3305 00256$:
      000D51 CB 7A                 3306 	bit	7, d
      000D53 28 01                 3307 	jr	Z, 00257$
      000D55 37                    3308 	scf
      000D56                       3309 00257$:
      000D56 38 29                 3310 	jr	C, 00118$
      000D58 F8 0B                 3311 	ldhl	sp,#11
      000D5A 2A                    3312 	ld	a, (hl+)
      000D5B 5F                    3313 	ld	e, a
      000D5C 56                    3314 	ld	d, (hl)
      000D5D 1A                    3315 	ld	a, (de)
      000D5E 4F                    3316 	ld	c, a
      000D5F 13                    3317 	inc	de
      000D60 1A                    3318 	ld	a, (de)
      000D61 47                    3319 	ld	b, a
      000D62 CB 78                 3320 	bit	7, b
      000D64 20 1B                 3321 	jr	NZ, 00118$
      000D66 58                    3322 	ld	e, b
      000D67 16 00                 3323 	ld	d, #0x00
      000D69 3E 98                 3324 	ld	a, #0x98
      000D6B B9                    3325 	cp	a, c
      000D6C 3E 00                 3326 	ld	a, #0x00
      000D6E 98                    3327 	sbc	a, b
      000D6F CB 7B                 3328 	bit	7, e
      000D71 28 07                 3329 	jr	Z, 00258$
      000D73 CB 7A                 3330 	bit	7, d
      000D75 20 08                 3331 	jr	NZ, 00259$
      000D77 BF                    3332 	cp	a, a
      000D78 18 05                 3333 	jr	00259$
      000D7A                       3334 00258$:
      000D7A CB 7A                 3335 	bit	7, d
      000D7C 28 01                 3336 	jr	Z, 00259$
      000D7E 37                    3337 	scf
      000D7F                       3338 00259$:
      000D7F 30 78                 3339 	jr	NC, 00132$
      000D81                       3340 00118$:
                                   3341 ;main.c:266: enemies[i].visible = 0;
      000D81 F8 08                 3342 	ldhl	sp,	#8
      000D83 2A                    3343 	ld	a,	(hl+)
      000D84 66                    3344 	ld	h, (hl)
      000D85 6F                    3345 	ld	l, a
      000D86 36 00                 3346 	ld	(hl), #0x00
                                   3347 ;main.c:267: set_sprite_tile(10+i, EMPTYSPRITE);
      000D88 21r08r05              3348 	ld	hl, #_EMPTYSPRITE
      000D8B 4E                    3349 	ld	c, (hl)
      000D8C F8 0D                 3350 	ldhl	sp,	#13
                                   3351 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000D8E 6E                    3352 	ld	l, (hl)
                                   3353 ;	spillPairReg hl
                                   3354 ;	spillPairReg hl
      000D8F 26 00                 3355 	ld	h, #0x00
                                   3356 ;	spillPairReg hl
                                   3357 ;	spillPairReg hl
      000D91 29                    3358 	add	hl, hl
      000D92 29                    3359 	add	hl, hl
      000D93 11r00r00              3360 	ld	de, #_shadow_OAM
      000D96 19                    3361 	add	hl, de
      000D97 23                    3362 	inc	hl
      000D98 23                    3363 	inc	hl
      000D99 71                    3364 	ld	(hl), c
                                   3365 ;main.c:267: set_sprite_tile(10+i, EMPTYSPRITE);
      000D9A 18 5D                 3366 	jr	00132$
      000D9C                       3367 00129$:
                                   3368 ;main.c:271: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      000D9C CB 45                 3369 	bit	0, l
      000D9E 20 59                 3370 	jr	NZ, 00132$
      000DA0 79                    3371 	ld	a, c
      000DA1 D6 AC                 3372 	sub	a, #0xac
      000DA3 78                    3373 	ld	a, b
      000DA4 17                    3374 	rla
      000DA5 3F                    3375 	ccf
      000DA6 1F                    3376 	rra
      000DA7 DE 80                 3377 	sbc	a, #0x80
      000DA9 30 4E                 3378 	jr	NC, 00132$
      000DAB F8 0B                 3379 	ldhl	sp,#11
      000DAD 2A                    3380 	ld	a, (hl+)
      000DAE 5F                    3381 	ld	e, a
      000DAF 56                    3382 	ld	d, (hl)
      000DB0 1A                    3383 	ld	a, (de)
      000DB1 4F                    3384 	ld	c, a
      000DB2 13                    3385 	inc	de
      000DB3 1A                    3386 	ld	a, (de)
      000DB4 47                    3387 	ld	b, a
      000DB5 58                    3388 	ld	e, b
      000DB6 AF                    3389 	xor	a, a
      000DB7 57                    3390 	ld	d, a
      000DB8 B9                    3391 	cp	a, c
      000DB9 98                    3392 	sbc	a, b
      000DBA CB 7B                 3393 	bit	7, e
      000DBC 28 07                 3394 	jr	Z, 00260$
      000DBE CB 7A                 3395 	bit	7, d
      000DC0 20 08                 3396 	jr	NZ, 00261$
      000DC2 BF                    3397 	cp	a, a
      000DC3 18 05                 3398 	jr	00261$
      000DC5                       3399 00260$:
      000DC5 CB 7A                 3400 	bit	7, d
      000DC7 28 01                 3401 	jr	Z, 00261$
      000DC9 37                    3402 	scf
      000DCA                       3403 00261$:
      000DCA 30 2D                 3404 	jr	NC, 00132$
      000DCC 79                    3405 	ld	a, c
      000DCD D6 98                 3406 	sub	a, #0x98
      000DCF 78                    3407 	ld	a, b
      000DD0 17                    3408 	rla
      000DD1 3F                    3409 	ccf
      000DD2 1F                    3410 	rra
      000DD3 DE 80                 3411 	sbc	a, #0x80
      000DD5 30 22                 3412 	jr	NC, 00132$
                                   3413 ;main.c:272: enemies[i].visible = 1;
      000DD7 F8 08                 3414 	ldhl	sp,	#8
      000DD9 2A                    3415 	ld	a,	(hl+)
      000DDA 66                    3416 	ld	h, (hl)
      000DDB 6F                    3417 	ld	l, a
      000DDC 36 01                 3418 	ld	(hl), #0x01
                                   3419 ;main.c:273: set_sprite_tile(10+i, enemies[i].sprite0);
      000DDE F8 06                 3420 	ldhl	sp,#6
      000DE0 2A                    3421 	ld	a, (hl+)
      000DE1 5F                    3422 	ld	e, a
      000DE2 56                    3423 	ld	d, (hl)
      000DE3 21 06 00              3424 	ld	hl, #0x0006
      000DE6 19                    3425 	add	hl, de
      000DE7 4D                    3426 	ld	c, l
      000DE8 44                    3427 	ld	b, h
      000DE9 0A                    3428 	ld	a, (bc)
      000DEA 4F                    3429 	ld	c, a
      000DEB F8 0D                 3430 	ldhl	sp,	#13
                                   3431 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DED 6E                    3432 	ld	l, (hl)
      000DEE 11r00r00              3433 	ld	de, #_shadow_OAM+0
                                   3434 ;	spillPairReg hl
                                   3435 ;	spillPairReg hl
      000DF1 26 00                 3436 	ld	h, #0x00
                                   3437 ;	spillPairReg hl
                                   3438 ;	spillPairReg hl
      000DF3 29                    3439 	add	hl, hl
      000DF4 29                    3440 	add	hl, hl
      000DF5 19                    3441 	add	hl, de
      000DF6 23                    3442 	inc	hl
      000DF7 23                    3443 	inc	hl
      000DF8 71                    3444 	ld	(hl), c
                                   3445 ;main.c:273: set_sprite_tile(10+i, enemies[i].sprite0);
      000DF9                       3446 00132$:
                                   3447 ;main.c:278: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000DF9 F8 0E                 3448 	ldhl	sp,	#14
      000DFB 4E                    3449 	ld	c, (hl)
      000DFC 06 00                 3450 	ld	b, #0x00
      000DFE 69                    3451 	ld	l, c
      000DFF 60                    3452 	ld	h, b
      000E00 29                    3453 	add	hl, hl
      000E01 29                    3454 	add	hl, hl
      000E02 09                    3455 	add	hl, bc
      000E03 29                    3456 	add	hl, hl
      000E04 29                    3457 	add	hl, hl
      000E05 11r00r00              3458 	ld	de, #_enemies
      000E08 19                    3459 	add	hl, de
      000E09 4D                    3460 	ld	c, l
      000E0A 44                    3461 	ld	b, h
      000E0B 03                    3462 	inc	bc
      000E0C 03                    3463 	inc	bc
      000E0D 0A                    3464 	ld	a, (bc)
      000E0E 47                    3465 	ld	b, a
      000E0F 4E                    3466 	ld	c, (hl)
      000E10 F8 0E                 3467 	ldhl	sp,	#14
      000E12 7E                    3468 	ld	a, (hl)
      000E13 C6 0A                 3469 	add	a, #0x0a
                                   3470 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E15 6F                    3471 	ld	l, a
                                   3472 ;	spillPairReg hl
                                   3473 ;	spillPairReg hl
      000E16 26 00                 3474 	ld	h, #0x00
                                   3475 ;	spillPairReg hl
                                   3476 ;	spillPairReg hl
      000E18 29                    3477 	add	hl, hl
      000E19 29                    3478 	add	hl, hl
      000E1A 11r00r00              3479 	ld	de, #_shadow_OAM
      000E1D 19                    3480 	add	hl, de
                                   3481 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E1E 78                    3482 	ld	a, b
      000E1F 22                    3483 	ld	(hl+), a
      000E20 71                    3484 	ld	(hl), c
                                   3485 ;main.c:261: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E21 F8 0E                 3486 	ldhl	sp,	#14
      000E23 34                    3487 	inc	(hl)
      000E24 C3rB5r0C              3488 	jp	00141$
      000E27                       3489 00143$:
                                   3490 ;main.c:280: }
      000E27 E8 0F                 3491 	add	sp, #15
      000E29 C9                    3492 	ret
                                   3493 ;main.c:282: void initEnemies(uint8_t loadSprites) {
                                   3494 ;	---------------------------------
                                   3495 ; Function initEnemies
                                   3496 ; ---------------------------------
      000E2A                       3497 _initEnemies::
      000E2A E8 F5                 3498 	add	sp, #-11
                                   3499 ;main.c:284: if (loadSprites) {
      000E2C F8 0D                 3500 	ldhl	sp,	#13
      000E2E 7E                    3501 	ld	a, (hl)
      000E2F B7                    3502 	or	a, a
      000E30 28 0D                 3503 	jr	Z, 00116$
                                   3504 ;main.c:286: set_sprite_data(9, 1, enemy1);
      000E32 11rF7r04              3505 	ld	de, #_enemy1
      000E35 D5                    3506 	push	de
      000E36 21 09 01              3507 	ld	hl, #0x109
      000E39 E5                    3508 	push	hl
      000E3A CDr00r00              3509 	call	_set_sprite_data
      000E3D E8 04                 3510 	add	sp, #4
                                   3511 ;main.c:291: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E3F                       3512 00116$:
      000E3F F8 0A                 3513 	ldhl	sp,	#10
      000E41 36 00                 3514 	ld	(hl), #0x00
      000E43                       3515 00109$:
      000E43 21r09r05              3516 	ld	hl, #_ENEMYCOUNT
      000E46 4E                    3517 	ld	c, (hl)
      000E47 F8 0A                 3518 	ldhl	sp,	#10
      000E49 7E                    3519 	ld	a, (hl)
      000E4A 91                    3520 	sub	a, c
      000E4B D2rD2r0F              3521 	jp	NC, 00111$
                                   3522 ;main.c:292: if (enemies[i].alive == 0) {
      000E4E 4E                    3523 	ld	c, (hl)
      000E4F 06 00                 3524 	ld	b, #0x00
      000E51 69                    3525 	ld	l, c
      000E52 60                    3526 	ld	h, b
      000E53 29                    3527 	add	hl, hl
      000E54 29                    3528 	add	hl, hl
      000E55 09                    3529 	add	hl, bc
      000E56 29                    3530 	add	hl, hl
      000E57 29                    3531 	add	hl, hl
      000E58 01r00r00              3532 	ld	bc,#_enemies
      000E5B 09                    3533 	add	hl,bc
      000E5C E5                    3534 	push	hl
      000E5D 7D                    3535 	ld	a, l
      000E5E F8 08                 3536 	ldhl	sp,	#8
      000E60 77                    3537 	ld	(hl), a
      000E61 E1                    3538 	pop	hl
      000E62 7C                    3539 	ld	a, h
      000E63 F8 07                 3540 	ldhl	sp,	#7
      000E65 32                    3541 	ld	(hl-), a
      000E66 2A                    3542 	ld	a, (hl+)
      000E67 5F                    3543 	ld	e, a
      000E68 56                    3544 	ld	d, (hl)
      000E69 21 0A 00              3545 	ld	hl, #0x000a
      000E6C 19                    3546 	add	hl, de
      000E6D E5                    3547 	push	hl
      000E6E 7D                    3548 	ld	a, l
      000E6F F8 0A                 3549 	ldhl	sp,	#10
      000E71 77                    3550 	ld	(hl), a
      000E72 E1                    3551 	pop	hl
      000E73 7C                    3552 	ld	a, h
      000E74 F8 09                 3553 	ldhl	sp,	#9
      000E76 32                    3554 	ld	(hl-), a
      000E77 2A                    3555 	ld	a, (hl+)
      000E78 5F                    3556 	ld	e, a
      000E79 56                    3557 	ld	d, (hl)
      000E7A 1A                    3558 	ld	a, (de)
      000E7B F8 05                 3559 	ldhl	sp,	#5
      000E7D 77                    3560 	ld	(hl), a
      000E7E 7E                    3561 	ld	a, (hl)
      000E7F B7                    3562 	or	a, a
      000E80 C2rCCr0F              3563 	jp	NZ, 00110$
                                   3564 ;main.c:293: uint8_t posIndex =  ((uint8_t)rand()) % (uint8_t)8;//(rand() & 8);
      000E83 CDr00r00              3565 	call	_rand
      000E86 7B                    3566 	ld	a, e
      000E87 E6 07                 3567 	and	a, #0x07
      000E89 4F                    3568 	ld	c, a
                                   3569 ;main.c:294: enemies[i].x = xSpawnPositions[posIndex];
      000E8A 21r0Ar05              3570 	ld	hl, #_xSpawnPositions
      000E8D 06 00                 3571 	ld	b, #0x00
      000E8F 09                    3572 	add	hl, bc
      000E90 7E                    3573 	ld	a, (hl)
      000E91 F8 00                 3574 	ldhl	sp,	#0
      000E93 22                    3575 	ld	(hl+), a
      000E94 36 00                 3576 	ld	(hl), #0x00
      000E96 F8 06                 3577 	ldhl	sp,#6
      000E98 2A                    3578 	ld	a, (hl+)
      000E99 5F                    3579 	ld	e, a
      000E9A 56                    3580 	ld	d, (hl)
      000E9B F8 00                 3581 	ldhl	sp,	#0
      000E9D 2A                    3582 	ld	a, (hl+)
      000E9E 12                    3583 	ld	(de), a
      000E9F 13                    3584 	inc	de
      000EA0 7E                    3585 	ld	a, (hl)
      000EA1 12                    3586 	ld	(de), a
                                   3587 ;main.c:295: enemies[i].y = ySpawnPositions[posIndex];
      000EA2 F8 06                 3588 	ldhl	sp,	#6
      000EA4 2A                    3589 	ld	a, (hl+)
      000EA5 5F                    3590 	ld	e, a
      000EA6 56                    3591 	ld	d, (hl)
      000EA7 13                    3592 	inc	de
      000EA8 13                    3593 	inc	de
      000EA9 21r12r05              3594 	ld	hl, #_ySpawnPositions
      000EAC 06 00                 3595 	ld	b, #0x00
      000EAE 09                    3596 	add	hl, bc
      000EAF 7E                    3597 	ld	a, (hl)
      000EB0 F8 02                 3598 	ldhl	sp,	#2
      000EB2 22                    3599 	ld	(hl+), a
      000EB3 AF                    3600 	xor	a, a
      000EB4 32                    3601 	ld	(hl-), a
      000EB5 2A                    3602 	ld	a, (hl+)
      000EB6 12                    3603 	ld	(de), a
      000EB7 13                    3604 	inc	de
      000EB8 7E                    3605 	ld	a, (hl)
      000EB9 12                    3606 	ld	(de), a
                                   3607 ;main.c:297: enemies[i].sprite0 = 9;
      000EBA F8 06                 3608 	ldhl	sp,#6
      000EBC 2A                    3609 	ld	a, (hl+)
      000EBD 5F                    3610 	ld	e, a
      000EBE 56                    3611 	ld	d, (hl)
      000EBF 21 06 00              3612 	ld	hl, #0x0006
      000EC2 19                    3613 	add	hl, de
      000EC3 4D                    3614 	ld	c, l
      000EC4 44                    3615 	ld	b, h
      000EC5 36 09                 3616 	ld	(hl), #0x09
                                   3617 ;main.c:298: enemies[i].spriteCount = 1;
      000EC7 F8 06                 3618 	ldhl	sp,#6
      000EC9 2A                    3619 	ld	a, (hl+)
      000ECA 5F                    3620 	ld	e, a
      000ECB 56                    3621 	ld	d, (hl)
      000ECC 21 08 00              3622 	ld	hl, #0x0008
      000ECF 19                    3623 	add	hl, de
      000ED0 5D                    3624 	ld	e, l
      000ED1 54                    3625 	ld	d, h
      000ED2 36 01                 3626 	ld	(hl), #0x01
      000ED4 13                    3627 	inc	de
      000ED5 AF                    3628 	xor	a, a
      000ED6 12                    3629 	ld	(de), a
                                   3630 ;main.c:299: enemies[i].alive = 1;
      000ED7 F8 08                 3631 	ldhl	sp,	#8
      000ED9 2A                    3632 	ld	a,	(hl+)
      000EDA 66                    3633 	ld	h, (hl)
      000EDB 6F                    3634 	ld	l, a
      000EDC 36 01                 3635 	ld	(hl), #0x01
                                   3636 ;main.c:300: enemies[i].visible = 1;
      000EDE F8 06                 3637 	ldhl	sp,#6
      000EE0 2A                    3638 	ld	a, (hl+)
      000EE1 5F                    3639 	ld	e, a
      000EE2 56                    3640 	ld	d, (hl)
      000EE3 21 0B 00              3641 	ld	hl, #0x000b
      000EE6 19                    3642 	add	hl, de
      000EE7 36 01                 3643 	ld	(hl), #0x01
                                   3644 ;main.c:301: enemies[i].damage = 50;
      000EE9 F8 06                 3645 	ldhl	sp,#6
      000EEB 2A                    3646 	ld	a, (hl+)
      000EEC 5F                    3647 	ld	e, a
      000EED 56                    3648 	ld	d, (hl)
      000EEE 21 0C 00              3649 	ld	hl, #0x000c
      000EF1 19                    3650 	add	hl, de
      000EF2 36 32                 3651 	ld	(hl), #0x32
                                   3652 ;main.c:302: enemies[i].speed = 10;
      000EF4 F8 06                 3653 	ldhl	sp,#6
      000EF6 2A                    3654 	ld	a, (hl+)
      000EF7 5F                    3655 	ld	e, a
      000EF8 56                    3656 	ld	d, (hl)
      000EF9 21 0D 00              3657 	ld	hl, #0x000d
      000EFC 19                    3658 	add	hl, de
      000EFD 5D                    3659 	ld	e, l
      000EFE 54                    3660 	ld	d, h
      000EFF 36 0A                 3661 	ld	(hl), #0x0a
      000F01 13                    3662 	inc	de
      000F02 AF                    3663 	xor	a, a
      000F03 12                    3664 	ld	(de), a
                                   3665 ;main.c:303: enemies[i].accel = 1;
      000F04 F8 06                 3666 	ldhl	sp,#6
      000F06 2A                    3667 	ld	a, (hl+)
      000F07 5F                    3668 	ld	e, a
      000F08 56                    3669 	ld	d, (hl)
      000F09 21 0F 00              3670 	ld	hl, #0x000f
      000F0C 19                    3671 	add	hl, de
      000F0D 36 01                 3672 	ld	(hl), #0x01
                                   3673 ;main.c:304: enemies[i].xSpeed = 0;
      000F0F F8 06                 3674 	ldhl	sp,#6
      000F11 2A                    3675 	ld	a, (hl+)
      000F12 5F                    3676 	ld	e, a
      000F13 56                    3677 	ld	d, (hl)
      000F14 21 10 00              3678 	ld	hl, #0x0010
      000F17 19                    3679 	add	hl, de
      000F18 5D                    3680 	ld	e, l
      000F19 54                    3681 	ld	d, h
      000F1A AF                    3682 	xor	a, a
      000F1B 12                    3683 	ld	(de), a
      000F1C 13                    3684 	inc	de
      000F1D 12                    3685 	ld	(de), a
                                   3686 ;main.c:305: enemies[i].ySpeed = 0;
      000F1E F8 06                 3687 	ldhl	sp,#6
      000F20 2A                    3688 	ld	a, (hl+)
      000F21 5F                    3689 	ld	e, a
      000F22 56                    3690 	ld	d, (hl)
      000F23 21 12 00              3691 	ld	hl, #0x0012
      000F26 19                    3692 	add	hl, de
      000F27 5D                    3693 	ld	e, l
      000F28 54                    3694 	ld	d, h
      000F29 AF                    3695 	xor	a, a
      000F2A 12                    3696 	ld	(de), a
      000F2B 13                    3697 	inc	de
      000F2C 12                    3698 	ld	(de), a
                                   3699 ;main.c:310: set_sprite_tile(10+i, enemies[i].sprite0);
      000F2D 0A                    3700 	ld	a, (bc)
      000F2E F8 04                 3701 	ldhl	sp,	#4
      000F30 77                    3702 	ld	(hl), a
      000F31 F8 0A                 3703 	ldhl	sp,	#10
      000F33 7E                    3704 	ld	a, (hl)
      000F34 C6 0A                 3705 	add	a, #0x0a
      000F36 F8 05                 3706 	ldhl	sp,	#5
      000F38 77                    3707 	ld	(hl), a
      000F39 4E                    3708 	ld	c, (hl)
                                   3709 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F3A F8 08                 3710 	ldhl	sp,	#8
      000F3C 79                    3711 	ld	a, c
      000F3D 22                    3712 	ld	(hl+), a
      000F3E 36 00                 3713 	ld	(hl), #0x00
      000F40 3E 02                 3714 	ld	a, #0x02
      000F42                       3715 00134$:
      000F42 F8 08                 3716 	ldhl	sp,	#8
      000F44 CB 26                 3717 	sla	(hl)
      000F46 23                    3718 	inc	hl
      000F47 CB 16                 3719 	rl	(hl)
      000F49 3D                    3720 	dec	a
      000F4A 20 F6                 3721 	jr	NZ, 00134$
      000F4C 11r00r00              3722 	ld	de, #_shadow_OAM
      000F4F 3A                    3723 	ld	a, (hl-)
      000F50 6E                    3724 	ld	l, (hl)
      000F51 67                    3725 	ld	h, a
      000F52 19                    3726 	add	hl, de
      000F53 E5                    3727 	push	hl
      000F54 7D                    3728 	ld	a, l
      000F55 F8 08                 3729 	ldhl	sp,	#8
      000F57 77                    3730 	ld	(hl), a
      000F58 E1                    3731 	pop	hl
      000F59 7C                    3732 	ld	a, h
      000F5A F8 07                 3733 	ldhl	sp,	#7
      000F5C 32                    3734 	ld	(hl-), a
      000F5D 2A                    3735 	ld	a, (hl+)
      000F5E 5F                    3736 	ld	e, a
      000F5F 56                    3737 	ld	d, (hl)
      000F60 21 02 00              3738 	ld	hl, #0x0002
      000F63 19                    3739 	add	hl, de
      000F64 E5                    3740 	push	hl
      000F65 7D                    3741 	ld	a, l
      000F66 F8 0A                 3742 	ldhl	sp,	#10
      000F68 77                    3743 	ld	(hl), a
      000F69 E1                    3744 	pop	hl
      000F6A 7C                    3745 	ld	a, h
      000F6B F8 09                 3746 	ldhl	sp,	#9
      000F6D 32                    3747 	ld	(hl-), a
      000F6E 2A                    3748 	ld	a, (hl+)
      000F6F 5F                    3749 	ld	e, a
      000F70 56                    3750 	ld	d, (hl)
      000F71 F8 04                 3751 	ldhl	sp,	#4
                                   3752 ;main.c:311: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000F73 3A                    3753 	ld	a, (hl-)
      000F74 2B                    3754 	dec	hl
      000F75 12                    3755 	ld	(de), a
      000F76 7E                    3756 	ld	a, (hl)
      000F77 F8 09                 3757 	ldhl	sp,	#9
      000F79 77                    3758 	ld	(hl), a
      000F7A F8 00                 3759 	ldhl	sp,	#0
      000F7C 7E                    3760 	ld	a, (hl)
      000F7D F8 08                 3761 	ldhl	sp,	#8
      000F7F 77                    3762 	ld	(hl), a
      000F80 F8 05                 3763 	ldhl	sp,	#5
      000F82 2A                    3764 	ld	a, (hl+)
      000F83 23                    3765 	inc	hl
      000F84 77                    3766 	ld	(hl), a
                                   3767 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000F85 3A                    3768 	ld	a, (hl-)
      000F86 22                    3769 	ld	(hl+), a
      000F87 36 00                 3770 	ld	(hl), #0x00
      000F89 3E 02                 3771 	ld	a, #0x02
      000F8B                       3772 00135$:
      000F8B F8 06                 3773 	ldhl	sp,	#6
      000F8D CB 26                 3774 	sla	(hl)
      000F8F 23                    3775 	inc	hl
      000F90 CB 16                 3776 	rl	(hl)
      000F92 3D                    3777 	dec	a
      000F93 20 F6                 3778 	jr	NZ, 00135$
      000F95 11r00r00              3779 	ld	de, #_shadow_OAM
      000F98 3A                    3780 	ld	a, (hl-)
      000F99 6E                    3781 	ld	l, (hl)
      000F9A 67                    3782 	ld	h, a
      000F9B 19                    3783 	add	hl, de
      000F9C E5                    3784 	push	hl
      000F9D 7D                    3785 	ld	a, l
      000F9E F8 06                 3786 	ldhl	sp,	#6
      000FA0 77                    3787 	ld	(hl), a
      000FA1 E1                    3788 	pop	hl
      000FA2 7C                    3789 	ld	a, h
      000FA3 F8 05                 3790 	ldhl	sp,	#5
      000FA5 32                    3791 	ld	(hl-), a
      000FA6 2A                    3792 	ld	a, (hl+)
      000FA7 23                    3793 	inc	hl
      000FA8 32                    3794 	ld	(hl-), a
      000FA9 2A                    3795 	ld	a, (hl+)
      000FAA 23                    3796 	inc	hl
                                   3797 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000FAB 32                    3798 	ld	(hl-), a
      000FAC 2A                    3799 	ld	a, (hl+)
      000FAD 5F                    3800 	ld	e, a
      000FAE 2A                    3801 	ld	a, (hl+)
      000FAF 23                    3802 	inc	hl
      000FB0 57                    3803 	ld	d, a
      000FB1 3A                    3804 	ld	a, (hl-)
      000FB2 2B                    3805 	dec	hl
      000FB3 2B                    3806 	dec	hl
      000FB4 12                    3807 	ld	(de), a
      000FB5 2A                    3808 	ld	a, (hl+)
      000FB6 5F                    3809 	ld	e, a
      000FB7 56                    3810 	ld	d, (hl)
      000FB8 6B                    3811 	ld	l, e
      000FB9 62                    3812 	ld	h, d
      000FBA 23                    3813 	inc	hl
      000FBB E5                    3814 	push	hl
      000FBC 7D                    3815 	ld	a, l
      000FBD F8 06                 3816 	ldhl	sp,	#6
      000FBF 77                    3817 	ld	(hl), a
      000FC0 E1                    3818 	pop	hl
      000FC1 7C                    3819 	ld	a, h
      000FC2 F8 05                 3820 	ldhl	sp,	#5
      000FC4 32                    3821 	ld	(hl-), a
      000FC5 2A                    3822 	ld	a, (hl+)
      000FC6 5F                    3823 	ld	e, a
      000FC7 56                    3824 	ld	d, (hl)
      000FC8 F8 08                 3825 	ldhl	sp,	#8
      000FCA 7E                    3826 	ld	a, (hl)
      000FCB 12                    3827 	ld	(de), a
                                   3828 ;main.c:311: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000FCC                       3829 00110$:
                                   3830 ;main.c:291: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000FCC F8 0A                 3831 	ldhl	sp,	#10
      000FCE 34                    3832 	inc	(hl)
      000FCF C3r43r0E              3833 	jp	00109$
      000FD2                       3834 00111$:
                                   3835 ;main.c:314: }
      000FD2 E8 0B                 3836 	add	sp, #11
      000FD4 C9                    3837 	ret
                                   3838 ;main.c:317: void move() {
                                   3839 ;	---------------------------------
                                   3840 ; Function move
                                   3841 ; ---------------------------------
      000FD5                       3842 _move::
      000FD5 E8 F8                 3843 	add	sp, #-8
                                   3844 ;main.c:321: if (joydata & J_A) {
      000FD7 FAr64r00              3845 	ld	a, (#_joydata)
      000FDA CB 67                 3846 	bit	4, a
      000FDC 28 16                 3847 	jr	Z, 00102$
                                   3848 ;main.c:322: xSpeed += xDir + xDir + xDir;
      000FDE 21r1Dr00              3849 	ld	hl, #_xDir
      000FE1 7E                    3850 	ld	a, (hl)
      000FE2 87                    3851 	add	a, a
      000FE3 86                    3852 	add	a, (hl)
      000FE4 21r1Fr00              3853 	ld	hl, #_xSpeed
      000FE7 86                    3854 	add	a, (hl)
      000FE8 77                    3855 	ld	(hl), a
                                   3856 ;main.c:323: ySpeed += yDir + yDir + yDir;
      000FE9 21r1Er00              3857 	ld	hl, #_yDir
      000FEC 7E                    3858 	ld	a, (hl)
      000FED 87                    3859 	add	a, a
      000FEE 86                    3860 	add	a, (hl)
      000FEF 21r20r00              3861 	ld	hl, #_ySpeed
      000FF2 86                    3862 	add	a, (hl)
      000FF3 77                    3863 	ld	(hl), a
      000FF4                       3864 00102$:
                                   3865 ;main.c:327: xSpeed = clamp(xSpeed, -100, 100);
      000FF4 21 9C 64              3866 	ld	hl, #0x649c
      000FF7 E5                    3867 	push	hl
      000FF8 FAr1Fr00              3868 	ld	a, (#_xSpeed)
      000FFB F5                    3869 	push	af
      000FFC 33                    3870 	inc	sp
      000FFD CDrBAr07              3871 	call	_clamp
      001000 E8 03                 3872 	add	sp, #3
      001002 21r1Fr00              3873 	ld	hl, #_xSpeed
      001005 73                    3874 	ld	(hl), e
                                   3875 ;main.c:328: ySpeed = clamp(ySpeed, -100, 100);
      001006 21 9C 64              3876 	ld	hl, #0x649c
      001009 E5                    3877 	push	hl
      00100A FAr20r00              3878 	ld	a, (#_ySpeed)
      00100D F5                    3879 	push	af
      00100E 33                    3880 	inc	sp
      00100F CDrBAr07              3881 	call	_clamp
      001012 E8 03                 3882 	add	sp, #3
      001014 21r20r00              3883 	ld	hl, #_ySpeed
      001017 73                    3884 	ld	(hl), e
                                   3885 ;main.c:330: int16_t xOverflow = 0;
      001018 AF                    3886 	xor	a, a
      001019 F8 02                 3887 	ldhl	sp,	#2
      00101B 22                    3888 	ld	(hl+), a
      00101C 77                    3889 	ld	(hl), a
                                   3890 ;main.c:331: int16_t yOverflow = 0;
      00101D AF                    3891 	xor	a, a
      00101E F8 00                 3892 	ldhl	sp,	#0
      001020 22                    3893 	ld	(hl+), a
      001021 77                    3894 	ld	(hl), a
                                   3895 ;main.c:336: uint8_t xCollisionPoint = playerDrawX -4; 
      001022 21r25r00              3896 	ld	hl, #_playerDrawX
      001025 46                    3897 	ld	b, (hl)
      001026 78                    3898 	ld	a, b
      001027 C6 FC                 3899 	add	a, #0xfc
      001029 4F                    3900 	ld	c, a
                                   3901 ;main.c:338: if (xSpeed > 0) {
      00102A 21r1Fr00              3902 	ld	hl, #_xSpeed
      00102D 5E                    3903 	ld	e, (hl)
      00102E AF                    3904 	xor	a, a
      00102F 57                    3905 	ld	d, a
      001030 96                    3906 	sub	a, (hl)
      001031 CB 7B                 3907 	bit	7, e
      001033 28 07                 3908 	jr	Z, 00229$
      001035 CB 7A                 3909 	bit	7, d
      001037 20 08                 3910 	jr	NZ, 00230$
      001039 BF                    3911 	cp	a, a
      00103A 18 05                 3912 	jr	00230$
      00103C                       3913 00229$:
      00103C CB 7A                 3914 	bit	7, d
      00103E 28 01                 3915 	jr	Z, 00230$
      001040 37                    3916 	scf
      001041                       3917 00230$:
      001041 30 04                 3918 	jr	NC, 00104$
                                   3919 ;main.c:339: xCollisionPoint = playerDrawX; //right edge
      001043 21r25r00              3920 	ld	hl, #_playerDrawX
      001046 4E                    3921 	ld	c, (hl)
      001047                       3922 00104$:
                                   3923 ;main.c:341: if (xSpeed < 0) {
      001047 FAr1Fr00              3924 	ld	a, (#_xSpeed)
      00104A CB 7F                 3925 	bit	7, a
      00104C 28 04                 3926 	jr	Z, 00106$
                                   3927 ;main.c:342: xCollisionPoint = playerDrawX -8; //left edge
      00104E 78                    3928 	ld	a, b
      00104F C6 F8                 3929 	add	a, #0xf8
      001051 4F                    3930 	ld	c, a
      001052                       3931 00106$:
                                   3932 ;main.c:346: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      001052 06 00                 3933 	ld	b, #0x00
      001054 79                    3934 	ld	a, c
      001055 21r27r00              3935 	ld	hl, #_bgX
      001058 86                    3936 	add	a, (hl)
      001059 23                    3937 	inc	hl
      00105A 4F                    3938 	ld	c, a
      00105B 78                    3939 	ld	a, b
      00105C 8E                    3940 	adc	a, (hl)
      00105D 47                    3941 	ld	b, a
      00105E CB 28                 3942 	sra	b
      001060 CB 19                 3943 	rr	c
      001062 CB 28                 3944 	sra	b
      001064 CB 19                 3945 	rr	c
      001066 CB 28                 3946 	sra	b
      001068 CB 19                 3947 	rr	c
      00106A 11 20 00              3948 	ld	de, #0x0020
      00106D D5                    3949 	push	de
      00106E C5                    3950 	push	bc
      00106F CDr00r00              3951 	call	__modsint
      001072 E8 04                 3952 	add	sp, #4
                                   3953 ;main.c:350: uint8_t bgindY = ((playerDrawY-12 + bgY) >> 3)%32; 
      001074 FAr26r00              3954 	ld	a, (#_playerDrawY)
      001077 06 00                 3955 	ld	b, #0x00
      001079 C6 F4                 3956 	add	a, #0xf4
      00107B 4F                    3957 	ld	c, a
      00107C 78                    3958 	ld	a, b
      00107D CE FF                 3959 	adc	a, #0xff
      00107F 47                    3960 	ld	b, a
      001080 79                    3961 	ld	a, c
      001081 21r29r00              3962 	ld	hl, #_bgY
      001084 86                    3963 	add	a, (hl)
      001085 23                    3964 	inc	hl
      001086 4F                    3965 	ld	c, a
      001087 78                    3966 	ld	a, b
      001088 8E                    3967 	adc	a, (hl)
      001089 47                    3968 	ld	b, a
      00108A CB 28                 3969 	sra	b
      00108C CB 19                 3970 	rr	c
      00108E CB 28                 3971 	sra	b
      001090 CB 19                 3972 	rr	c
      001092 CB 28                 3973 	sra	b
      001094 CB 19                 3974 	rr	c
      001096 D5                    3975 	push	de
      001097 21 20 00              3976 	ld	hl, #0x0020
      00109A E5                    3977 	push	hl
      00109B C5                    3978 	push	bc
      00109C CDr00r00              3979 	call	__modsint
      00109F E8 04                 3980 	add	sp, #4
      0010A1 6B                    3981 	ld	l, e
                                   3982 ;	spillPairReg hl
                                   3983 ;	spillPairReg hl
                                   3984 ;	spillPairReg hl
                                   3985 ;	spillPairReg hl
      0010A2 D1                    3986 	pop	de
                                   3987 ;main.c:353: uint16_t ind = 32*bgindY + bgindX;
      0010A3 26 00                 3988 	ld	h, #0x00
                                   3989 ;	spillPairReg hl
                                   3990 ;	spillPairReg hl
      0010A5 29                    3991 	add	hl, hl
      0010A6 29                    3992 	add	hl, hl
      0010A7 29                    3993 	add	hl, hl
      0010A8 29                    3994 	add	hl, hl
      0010A9 29                    3995 	add	hl, hl
      0010AA 19                    3996 	add	hl, de
                                   3997 ;main.c:354: uint8_t result = background1[ind] != BLANK[0];
      0010AB 01r87r00              3998 	ld	bc,#_background1
      0010AE 09                    3999 	add	hl,bc
      0010AF 4E                    4000 	ld	c, (hl)
      0010B0 21r07r05              4001 	ld	hl, #_BLANK
      0010B3 46                    4002 	ld	b, (hl)
      0010B4 79                    4003 	ld	a, c
      0010B5 90                    4004 	sub	a, b
      0010B6 3E 01                 4005 	ld	a, #0x01
      0010B8 28 01                 4006 	jr	Z, 00232$
      0010BA AF                    4007 	xor	a, a
      0010BB                       4008 00232$:
                                   4009 ;main.c:355: if (result == 0) {
      0010BB EE 01                 4010 	xor	a,#0x01
      0010BD C2rA3r11              4011 	jp	NZ, 00111$
                                   4012 ;main.c:356: playerX+=xSpeed;
      0010C0 FAr1Fr00              4013 	ld	a, (#_xSpeed)
      0010C3 4F                    4014 	ld	c, a
      0010C4 07                    4015 	rlca
      0010C5 9F                    4016 	sbc	a, a
      0010C6 47                    4017 	ld	b, a
      0010C7 21r21r00              4018 	ld	hl, #_playerX
      0010CA 6E                    4019 	ld	l, (hl)
                                   4020 ;	spillPairReg hl
                                   4021 ;	spillPairReg hl
      0010CB FAr22r00              4022 	ld	a, (_playerX + 1)
      0010CE 67                    4023 	ld	h, a
                                   4024 ;	spillPairReg hl
                                   4025 ;	spillPairReg hl
      0010CF 09                    4026 	add	hl, bc
      0010D0 4D                    4027 	ld	c, l
      0010D1 7C                    4028 	ld	a, h
      0010D2 21r21r00              4029 	ld	hl, #_playerX
      0010D5 71                    4030 	ld	(hl), c
      0010D6 23                    4031 	inc	hl
                                   4032 ;main.c:358: uint16_t limitedPlayerX = u16Clamp(playerX, 58<<5, 110<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      0010D7 32                    4033 	ld	(hl-), a
      0010D8 11 C0 0D              4034 	ld	de, #0x0dc0
      0010DB D5                    4035 	push	de
      0010DC 11 40 07              4036 	ld	de, #0x0740
      0010DF D5                    4037 	push	de
      0010E0 2A                    4038 	ld	a, (hl+)
      0010E1 5F                    4039 	ld	e, a
      0010E2 56                    4040 	ld	d, (hl)
      0010E3 D5                    4041 	push	de
      0010E4 CDr11r08              4042 	call	_u16Clamp
      0010E7 E8 06                 4043 	add	sp, #6
      0010E9 4B                    4044 	ld	c, e
      0010EA 42                    4045 	ld	b, d
                                   4046 ;main.c:360: xOverflow = (playerX - limitedPlayerX);
      0010EB 21r21r00              4047 	ld	hl, #_playerX
      0010EE 2A                    4048 	ld	a, (hl+)
      0010EF 91                    4049 	sub	a, c
      0010F0 5F                    4050 	ld	e, a
      0010F1 7E                    4051 	ld	a, (hl)
      0010F2 98                    4052 	sbc	a, b
      0010F3 57                    4053 	ld	d, a
      0010F4 F8 04                 4054 	ldhl	sp,	#4
      0010F6 7B                    4055 	ld	a, e
      0010F7 22                    4056 	ld	(hl+), a
                                   4057 ;main.c:361: if (xOverflow >= 0) {
      0010F8 7A                    4058 	ld	a, d
      0010F9 32                    4059 	ld	(hl-), a
      0010FA 2A                    4060 	ld	a, (hl+)
      0010FB 23                    4061 	inc	hl
      0010FC 32                    4062 	ld	(hl-), a
      0010FD 2A                    4063 	ld	a, (hl+)
      0010FE 23                    4064 	inc	hl
      0010FF 77                    4065 	ld	(hl), a
      001100 CB 7E                 4066 	bit	7, (hl)
      001102 20 29                 4067 	jr	NZ, 00108$
                                   4068 ;main.c:362: xOverflow = xOverflow >> 5;
      001104 F8 04                 4069 	ldhl	sp,	#4
      001106 3A                    4070 	ld	a, (hl-)
      001107 2B                    4071 	dec	hl
      001108 77                    4072 	ld	(hl), a
      001109 F8 05                 4073 	ldhl	sp,	#5
      00110B 3A                    4074 	ld	a, (hl-)
      00110C 2B                    4075 	dec	hl
      00110D 77                    4076 	ld	(hl), a
      00110E CB 2E                 4077 	sra	(hl)
      001110 2B                    4078 	dec	hl
      001111 CB 1E                 4079 	rr	(hl)
      001113 23                    4080 	inc	hl
      001114 CB 2E                 4081 	sra	(hl)
      001116 2B                    4082 	dec	hl
      001117 CB 1E                 4083 	rr	(hl)
      001119 23                    4084 	inc	hl
      00111A CB 2E                 4085 	sra	(hl)
      00111C 2B                    4086 	dec	hl
      00111D CB 1E                 4087 	rr	(hl)
      00111F 23                    4088 	inc	hl
      001120 CB 2E                 4089 	sra	(hl)
      001122 2B                    4090 	dec	hl
      001123 CB 1E                 4091 	rr	(hl)
      001125 23                    4092 	inc	hl
      001126 CB 2E                 4093 	sra	(hl)
      001128 2B                    4094 	dec	hl
      001129 CB 1E                 4095 	rr	(hl)
      00112B 18 3E                 4096 	jr	00109$
      00112D                       4097 00108$:
                                   4098 ;main.c:365: xOverflow = -((-xOverflow) >> 5);
      00112D 11 00 00              4099 	ld	de, #0x0000
      001130 F8 04                 4100 	ldhl	sp,	#4
      001132 2A                    4101 	ld	a,	(hl+)
      001133 66                    4102 	ld	h, (hl)
      001134 6F                    4103 	ld	l, a
      001135 7B                    4104 	ld	a, e
      001136 95                    4105 	sub	a, l
      001137 5F                    4106 	ld	e, a
      001138 7A                    4107 	ld	a, d
      001139 9C                    4108 	sbc	a, h
      00113A F8 07                 4109 	ldhl	sp,	#7
      00113C 32                    4110 	ld	(hl-), a
      00113D 7B                    4111 	ld	a, e
      00113E 22                    4112 	ld	(hl+), a
      00113F CB 2E                 4113 	sra	(hl)
      001141 2B                    4114 	dec	hl
      001142 CB 1E                 4115 	rr	(hl)
      001144 23                    4116 	inc	hl
      001145 CB 2E                 4117 	sra	(hl)
      001147 2B                    4118 	dec	hl
      001148 CB 1E                 4119 	rr	(hl)
      00114A 23                    4120 	inc	hl
      00114B CB 2E                 4121 	sra	(hl)
      00114D 2B                    4122 	dec	hl
      00114E CB 1E                 4123 	rr	(hl)
      001150 23                    4124 	inc	hl
      001151 CB 2E                 4125 	sra	(hl)
      001153 2B                    4126 	dec	hl
      001154 CB 1E                 4127 	rr	(hl)
      001156 23                    4128 	inc	hl
      001157 CB 2E                 4129 	sra	(hl)
      001159 2B                    4130 	dec	hl
      00115A CB 1E                 4131 	rr	(hl)
      00115C 11 00 00              4132 	ld	de, #0x0000
      00115F 2A                    4133 	ld	a,	(hl+)
      001160 66                    4134 	ld	h, (hl)
      001161 6F                    4135 	ld	l, a
      001162 7B                    4136 	ld	a, e
      001163 95                    4137 	sub	a, l
      001164 5F                    4138 	ld	e, a
      001165 7A                    4139 	ld	a, d
      001166 9C                    4140 	sbc	a, h
      001167 F8 03                 4141 	ldhl	sp,	#3
      001169 32                    4142 	ld	(hl-), a
      00116A 73                    4143 	ld	(hl), e
      00116B                       4144 00109$:
                                   4145 ;main.c:367: bgX += xOverflow;
      00116B 21r27r00              4146 	ld	hl, #_bgX
      00116E 2A                    4147 	ld	a, (hl+)
      00116F 5F                    4148 	ld	e, a
      001170 56                    4149 	ld	d, (hl)
      001171 F8 02                 4150 	ldhl	sp,	#2
      001173 2A                    4151 	ld	a,	(hl+)
      001174 66                    4152 	ld	h, (hl)
      001175 6F                    4153 	ld	l, a
      001176 19                    4154 	add	hl, de
      001177 5D                    4155 	ld	e, l
      001178 54                    4156 	ld	d, h
      001179 21r27r00              4157 	ld	hl, #_bgX
      00117C 7B                    4158 	ld	a, e
      00117D 22                    4159 	ld	(hl+), a
      00117E 72                    4160 	ld	(hl), d
                                   4161 ;main.c:368: playerX = limitedPlayerX;
      00117F 21r21r00              4162 	ld	hl, #_playerX
      001182 79                    4163 	ld	a, c
      001183 22                    4164 	ld	(hl+), a
                                   4165 ;main.c:369: playerDrawX=playerX >> 5;
      001184 78                    4166 	ld	a, b
      001185 32                    4167 	ld	(hl-), a
      001186 2A                    4168 	ld	a, (hl+)
      001187 4F                    4169 	ld	c, a
      001188 46                    4170 	ld	b, (hl)
      001189 CB 38                 4171 	srl	b
      00118B CB 19                 4172 	rr	c
      00118D CB 38                 4173 	srl	b
      00118F CB 19                 4174 	rr	c
      001191 CB 38                 4175 	srl	b
      001193 CB 19                 4176 	rr	c
      001195 CB 38                 4177 	srl	b
      001197 CB 19                 4178 	rr	c
      001199 CB 38                 4179 	srl	b
      00119B CB 19                 4180 	rr	c
      00119D 21r25r00              4181 	ld	hl, #_playerDrawX
      0011A0 71                    4182 	ld	(hl), c
      0011A1 18 05                 4183 	jr	00112$
      0011A3                       4184 00111$:
                                   4185 ;main.c:377: xSpeed = 0;
      0011A3 21r1Fr00              4186 	ld	hl, #_xSpeed
      0011A6 36 00                 4187 	ld	(hl), #0x00
      0011A8                       4188 00112$:
                                   4189 ;main.c:385: uint8_t yCollisionPoint = playerDrawY -12; 
      0011A8 21r26r00              4190 	ld	hl, #_playerDrawY
      0011AB 46                    4191 	ld	b, (hl)
      0011AC 78                    4192 	ld	a, b
      0011AD C6 F4                 4193 	add	a, #0xf4
      0011AF 4F                    4194 	ld	c, a
                                   4195 ;main.c:387: if (ySpeed > 0) {
      0011B0 21r20r00              4196 	ld	hl, #_ySpeed
      0011B3 5E                    4197 	ld	e, (hl)
      0011B4 AF                    4198 	xor	a, a
      0011B5 57                    4199 	ld	d, a
      0011B6 96                    4200 	sub	a, (hl)
      0011B7 CB 7B                 4201 	bit	7, e
      0011B9 28 07                 4202 	jr	Z, 00233$
      0011BB CB 7A                 4203 	bit	7, d
      0011BD 20 08                 4204 	jr	NZ, 00234$
      0011BF BF                    4205 	cp	a, a
      0011C0 18 05                 4206 	jr	00234$
      0011C2                       4207 00233$:
      0011C2 CB 7A                 4208 	bit	7, d
      0011C4 28 01                 4209 	jr	Z, 00234$
      0011C6 37                    4210 	scf
      0011C7                       4211 00234$:
      0011C7 30 04                 4212 	jr	NC, 00114$
                                   4213 ;main.c:388: yCollisionPoint = playerDrawY - 8; //bottom edge, only half the height, so -8
      0011C9 78                    4214 	ld	a, b
      0011CA C6 F8                 4215 	add	a, #0xf8
      0011CC 4F                    4216 	ld	c, a
      0011CD                       4217 00114$:
                                   4218 ;main.c:390: if (ySpeed < 0) {
      0011CD FAr20r00              4219 	ld	a, (#_ySpeed)
      0011D0 CB 7F                 4220 	bit	7, a
      0011D2 28 04                 4221 	jr	Z, 00116$
                                   4222 ;main.c:391: yCollisionPoint = playerDrawY -16; //top edge, 
      0011D4 78                    4223 	ld	a, b
      0011D5 C6 F0                 4224 	add	a, #0xf0
      0011D7 4F                    4225 	ld	c, a
      0011D8                       4226 00116$:
                                   4227 ;main.c:395: bgindX = ((playerDrawX -4 + bgX) >> 3)%32;
      0011D8 FAr25r00              4228 	ld	a, (#_playerDrawX)
      0011DB 06 00                 4229 	ld	b, #0x00
      0011DD C6 FC                 4230 	add	a, #0xfc
      0011DF 5F                    4231 	ld	e, a
      0011E0 78                    4232 	ld	a, b
      0011E1 CE FF                 4233 	adc	a, #0xff
      0011E3 57                    4234 	ld	d, a
      0011E4 7B                    4235 	ld	a, e
      0011E5 21r27r00              4236 	ld	hl, #_bgX
      0011E8 86                    4237 	add	a, (hl)
      0011E9 23                    4238 	inc	hl
      0011EA 5F                    4239 	ld	e, a
      0011EB 7A                    4240 	ld	a, d
      0011EC 8E                    4241 	adc	a, (hl)
      0011ED 57                    4242 	ld	d, a
      0011EE CB 2A                 4243 	sra	d
      0011F0 CB 1B                 4244 	rr	e
      0011F2 CB 2A                 4245 	sra	d
      0011F4 CB 1B                 4246 	rr	e
      0011F6 CB 2A                 4247 	sra	d
      0011F8 CB 1B                 4248 	rr	e
      0011FA C5                    4249 	push	bc
      0011FB 21 20 00              4250 	ld	hl, #0x0020
      0011FE E5                    4251 	push	hl
      0011FF D5                    4252 	push	de
      001200 CDr00r00              4253 	call	__modsint
      001203 E8 04                 4254 	add	sp, #4
      001205 C1                    4255 	pop	bc
                                   4256 ;main.c:398: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001206 06 00                 4257 	ld	b, #0x00
      001208 79                    4258 	ld	a, c
      001209 21r29r00              4259 	ld	hl, #_bgY
      00120C 86                    4260 	add	a, (hl)
      00120D 23                    4261 	inc	hl
      00120E 4F                    4262 	ld	c, a
      00120F 78                    4263 	ld	a, b
      001210 8E                    4264 	adc	a, (hl)
      001211 47                    4265 	ld	b, a
      001212 CB 28                 4266 	sra	b
      001214 CB 19                 4267 	rr	c
      001216 CB 28                 4268 	sra	b
      001218 CB 19                 4269 	rr	c
      00121A CB 28                 4270 	sra	b
      00121C CB 19                 4271 	rr	c
      00121E D5                    4272 	push	de
      00121F 21 20 00              4273 	ld	hl, #0x0020
      001222 E5                    4274 	push	hl
      001223 C5                    4275 	push	bc
      001224 CDr00r00              4276 	call	__modsint
      001227 E8 04                 4277 	add	sp, #4
      001229 6B                    4278 	ld	l, e
                                   4279 ;	spillPairReg hl
                                   4280 ;	spillPairReg hl
      00122A D1                    4281 	pop	de
                                   4282 ;main.c:401: ind = 32*bgindY + bgindX;
      00122B 26 00                 4283 	ld	h, #0x00
                                   4284 ;	spillPairReg hl
                                   4285 ;	spillPairReg hl
      00122D 29                    4286 	add	hl, hl
      00122E 29                    4287 	add	hl, hl
      00122F 29                    4288 	add	hl, hl
      001230 29                    4289 	add	hl, hl
      001231 29                    4290 	add	hl, hl
      001232 19                    4291 	add	hl, de
                                   4292 ;main.c:402: result = background1[ind] != BLANK[0];
      001233 11r87r00              4293 	ld	de, #_background1
      001236 19                    4294 	add	hl, de
      001237 4E                    4295 	ld	c, (hl)
      001238 21r07r05              4296 	ld	hl, #_BLANK
      00123B 46                    4297 	ld	b, (hl)
      00123C 79                    4298 	ld	a, c
      00123D 90                    4299 	sub	a, b
      00123E 3E 01                 4300 	ld	a, #0x01
      001240 28 01                 4301 	jr	Z, 00236$
      001242 AF                    4302 	xor	a, a
      001243                       4303 00236$:
                                   4304 ;main.c:403: if (result == 0) {
      001243 EE 01                 4305 	xor	a,#0x01
      001245 C2r27r13              4306 	jp	NZ, 00121$
                                   4307 ;main.c:404: playerY += ySpeed;
      001248 FAr20r00              4308 	ld	a, (#_ySpeed)
      00124B 4F                    4309 	ld	c, a
      00124C 07                    4310 	rlca
      00124D 9F                    4311 	sbc	a, a
      00124E 47                    4312 	ld	b, a
      00124F 21r23r00              4313 	ld	hl, #_playerY
      001252 6E                    4314 	ld	l, (hl)
                                   4315 ;	spillPairReg hl
                                   4316 ;	spillPairReg hl
      001253 FAr24r00              4317 	ld	a, (_playerY + 1)
      001256 67                    4318 	ld	h, a
                                   4319 ;	spillPairReg hl
                                   4320 ;	spillPairReg hl
      001257 09                    4321 	add	hl, bc
      001258 4D                    4322 	ld	c, l
      001259 44                    4323 	ld	b, h
      00125A 21r23r00              4324 	ld	hl, #_playerY
      00125D 79                    4325 	ld	a, c
      00125E 22                    4326 	ld	(hl+), a
                                   4327 ;main.c:406: uint16_t limitedPlayerY = u16Clamp(playerY, 61<<5, 107<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      00125F 78                    4328 	ld	a, b
      001260 32                    4329 	ld	(hl-), a
      001261 11 60 0D              4330 	ld	de, #0x0d60
      001264 D5                    4331 	push	de
      001265 11 A0 07              4332 	ld	de, #0x07a0
      001268 D5                    4333 	push	de
      001269 2A                    4334 	ld	a, (hl+)
      00126A 5F                    4335 	ld	e, a
      00126B 56                    4336 	ld	d, (hl)
      00126C D5                    4337 	push	de
      00126D CDr11r08              4338 	call	_u16Clamp
      001270 E8 06                 4339 	add	sp, #6
      001272 F8 04                 4340 	ldhl	sp,	#4
      001274 7B                    4341 	ld	a, e
      001275 22                    4342 	ld	(hl+), a
      001276 72                    4343 	ld	(hl), d
                                   4344 ;main.c:408: yOverflow = (playerY - limitedPlayerY);
      001277 21r23r00              4345 	ld	hl, #_playerY
      00127A 2A                    4346 	ld	a, (hl+)
      00127B 5F                    4347 	ld	e, a
      00127C 56                    4348 	ld	d, (hl)
      00127D F8 04                 4349 	ldhl	sp,	#4
      00127F 2A                    4350 	ld	a,	(hl+)
      001280 66                    4351 	ld	h, (hl)
      001281 6F                    4352 	ld	l, a
      001282 7B                    4353 	ld	a, e
      001283 95                    4354 	sub	a, l
      001284 5F                    4355 	ld	e, a
      001285 7A                    4356 	ld	a, d
      001286 9C                    4357 	sbc	a, h
      001287 47                    4358 	ld	b, a
      001288 4B                    4359 	ld	c, e
      001289 33                    4360 	inc	sp
      00128A 33                    4361 	inc	sp
      00128B C5                    4362 	push	bc
      00128C CB 78                 4363 	bit	7, b
      00128E 20 21                 4364 	jr	NZ, 00118$
                                   4365 ;main.c:410: yOverflow = yOverflow >> 5;
      001290 F8 01                 4366 	ldhl	sp,	#1
      001292 CB 2E                 4367 	sra	(hl)
      001294 2B                    4368 	dec	hl
      001295 CB 1E                 4369 	rr	(hl)
      001297 23                    4370 	inc	hl
      001298 CB 2E                 4371 	sra	(hl)
      00129A 2B                    4372 	dec	hl
      00129B CB 1E                 4373 	rr	(hl)
      00129D 23                    4374 	inc	hl
      00129E CB 2E                 4375 	sra	(hl)
      0012A0 2B                    4376 	dec	hl
      0012A1 CB 1E                 4377 	rr	(hl)
      0012A3 23                    4378 	inc	hl
      0012A4 CB 2E                 4379 	sra	(hl)
      0012A6 2B                    4380 	dec	hl
      0012A7 CB 1E                 4381 	rr	(hl)
      0012A9 23                    4382 	inc	hl
      0012AA CB 2E                 4383 	sra	(hl)
      0012AC 2B                    4384 	dec	hl
      0012AD CB 1E                 4385 	rr	(hl)
      0012AF 18 3B                 4386 	jr	00119$
      0012B1                       4387 00118$:
                                   4388 ;main.c:413: yOverflow = -((-yOverflow) >> 5);
      0012B1 11 00 00              4389 	ld	de, #0x0000
      0012B4 E1                    4390 	pop	hl
      0012B5 E5                    4391 	push	hl
      0012B6 7B                    4392 	ld	a, e
      0012B7 95                    4393 	sub	a, l
      0012B8 5F                    4394 	ld	e, a
      0012B9 7A                    4395 	ld	a, d
      0012BA 9C                    4396 	sbc	a, h
      0012BB F8 07                 4397 	ldhl	sp,	#7
      0012BD 32                    4398 	ld	(hl-), a
      0012BE 7B                    4399 	ld	a, e
      0012BF 22                    4400 	ld	(hl+), a
      0012C0 CB 2E                 4401 	sra	(hl)
      0012C2 2B                    4402 	dec	hl
      0012C3 CB 1E                 4403 	rr	(hl)
      0012C5 23                    4404 	inc	hl
      0012C6 CB 2E                 4405 	sra	(hl)
      0012C8 2B                    4406 	dec	hl
      0012C9 CB 1E                 4407 	rr	(hl)
      0012CB 23                    4408 	inc	hl
      0012CC CB 2E                 4409 	sra	(hl)
      0012CE 2B                    4410 	dec	hl
      0012CF CB 1E                 4411 	rr	(hl)
      0012D1 23                    4412 	inc	hl
      0012D2 CB 2E                 4413 	sra	(hl)
      0012D4 2B                    4414 	dec	hl
      0012D5 CB 1E                 4415 	rr	(hl)
      0012D7 23                    4416 	inc	hl
      0012D8 CB 2E                 4417 	sra	(hl)
      0012DA 2B                    4418 	dec	hl
      0012DB CB 1E                 4419 	rr	(hl)
      0012DD 11 00 00              4420 	ld	de, #0x0000
      0012E0 2A                    4421 	ld	a,	(hl+)
      0012E1 66                    4422 	ld	h, (hl)
      0012E2 6F                    4423 	ld	l, a
      0012E3 7B                    4424 	ld	a, e
      0012E4 95                    4425 	sub	a, l
      0012E5 5F                    4426 	ld	e, a
      0012E6 7A                    4427 	ld	a, d
      0012E7 9C                    4428 	sbc	a, h
      0012E8 F8 01                 4429 	ldhl	sp,	#1
      0012EA 32                    4430 	ld	(hl-), a
      0012EB 73                    4431 	ld	(hl), e
      0012EC                       4432 00119$:
                                   4433 ;main.c:415: bgY += yOverflow;
      0012EC 21r29r00              4434 	ld	hl, #_bgY
      0012EF 2A                    4435 	ld	a, (hl+)
      0012F0 5F                    4436 	ld	e, a
      0012F1 56                    4437 	ld	d, (hl)
      0012F2 E1                    4438 	pop	hl
      0012F3 E5                    4439 	push	hl
      0012F4 19                    4440 	add	hl, de
      0012F5 5D                    4441 	ld	e, l
      0012F6 54                    4442 	ld	d, h
      0012F7 21r29r00              4443 	ld	hl, #_bgY
      0012FA 7B                    4444 	ld	a, e
      0012FB 22                    4445 	ld	(hl+), a
      0012FC 72                    4446 	ld	(hl), d
                                   4447 ;main.c:416: playerY = limitedPlayerY;
      0012FD F8 04                 4448 	ldhl	sp,	#4
      0012FF 7E                    4449 	ld	a, (hl)
      001300 EAr23r00              4450 	ld	(#_playerY),a
      001303 F8 05                 4451 	ldhl	sp,	#5
      001305 7E                    4452 	ld	a, (hl)
      001306 21r24r00              4453 	ld	hl, #_playerY + 1
                                   4454 ;main.c:417: playerDrawY=playerY >> 5;
      001309 32                    4455 	ld	(hl-), a
      00130A 2A                    4456 	ld	a, (hl+)
      00130B 4F                    4457 	ld	c, a
      00130C 46                    4458 	ld	b, (hl)
      00130D CB 38                 4459 	srl	b
      00130F CB 19                 4460 	rr	c
      001311 CB 38                 4461 	srl	b
      001313 CB 19                 4462 	rr	c
      001315 CB 38                 4463 	srl	b
      001317 CB 19                 4464 	rr	c
      001319 CB 38                 4465 	srl	b
      00131B CB 19                 4466 	rr	c
      00131D CB 38                 4467 	srl	b
      00131F CB 19                 4468 	rr	c
      001321 21r26r00              4469 	ld	hl, #_playerDrawY
      001324 71                    4470 	ld	(hl), c
      001325 18 05                 4471 	jr	00122$
      001327                       4472 00121$:
                                   4473 ;main.c:422: ySpeed = 0;
      001327 21r20r00              4474 	ld	hl, #_ySpeed
      00132A 36 00                 4475 	ld	(hl), #0x00
      00132C                       4476 00122$:
                                   4477 ;main.c:426: move_sprite(0, playerDrawX, playerDrawY);
      00132C 21r26r00              4478 	ld	hl, #_playerDrawY
      00132F 4E                    4479 	ld	c, (hl)
      001330 21r25r00              4480 	ld	hl, #_playerDrawX
      001333 46                    4481 	ld	b, (hl)
                                   4482 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001334 21r00r00              4483 	ld	hl, #_shadow_OAM
                                   4484 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001337 79                    4485 	ld	a, c
      001338 22                    4486 	ld	(hl+), a
      001339 70                    4487 	ld	(hl), b
                                   4488 ;main.c:429: if (bgX >= 256) {
      00133A 21r27r00              4489 	ld	hl, #_bgX
      00133D 2A                    4490 	ld	a, (hl+)
      00133E 4F                    4491 	ld	c, a
      00133F 46                    4492 	ld	b, (hl)
      001340 78                    4493 	ld	a, b
      001341 EE 80                 4494 	xor	a, #0x80
      001343 D6 81                 4495 	sub	a, #0x81
      001345 38 0F                 4496 	jr	C, 00124$
                                   4497 ;main.c:430: bgX = bgX % 256;
      001347 AF                    4498 	xor	a, a
      001348 3C                    4499 	inc	a
      001349 F5                    4500 	push	af
      00134A C5                    4501 	push	bc
      00134B CDr00r00              4502 	call	__modsint
      00134E E8 04                 4503 	add	sp, #4
      001350 21r27r00              4504 	ld	hl, #_bgX
      001353 7B                    4505 	ld	a, e
      001354 22                    4506 	ld	(hl+), a
      001355 72                    4507 	ld	(hl), d
      001356                       4508 00124$:
                                   4509 ;main.c:432: if (bgX < 0) {
      001356 FAr27r00              4510 	ld	a, (#_bgX)
      001359 F8 06                 4511 	ldhl	sp,	#6
      00135B 77                    4512 	ld	(hl), a
      00135C FAr28r00              4513 	ld	a, (#_bgX + 1)
      00135F F8 07                 4514 	ldhl	sp,	#7
      001361 77                    4515 	ld	(hl), a
      001362 CB 7E                 4516 	bit	7, (hl)
      001364 28 2D                 4517 	jr	Z, 00126$
                                   4518 ;main.c:433: bgX = 255 - (bgX % 256);
      001366 2B                    4519 	dec	hl
      001367 AF                    4520 	xor	a, a
      001368 3C                    4521 	inc	a
      001369 F5                    4522 	push	af
      00136A 2A                    4523 	ld	a, (hl+)
      00136B 5F                    4524 	ld	e, a
      00136C 56                    4525 	ld	d, (hl)
      00136D D5                    4526 	push	de
      00136E CDr00r00              4527 	call	__modsint
      001371 E8 04                 4528 	add	sp, #4
      001373 F8 04                 4529 	ldhl	sp,	#4
      001375 7B                    4530 	ld	a, e
      001376 22                    4531 	ld	(hl+), a
      001377 72                    4532 	ld	(hl), d
      001378 11 FF 00              4533 	ld	de, #0x00ff
      00137B F8 04                 4534 	ldhl	sp,	#4
      00137D 2A                    4535 	ld	a,	(hl+)
      00137E 66                    4536 	ld	h, (hl)
      00137F 6F                    4537 	ld	l, a
      001380 7B                    4538 	ld	a, e
      001381 95                    4539 	sub	a, l
      001382 5F                    4540 	ld	e, a
      001383 7A                    4541 	ld	a, d
      001384 9C                    4542 	sbc	a, h
      001385 F8 07                 4543 	ldhl	sp,	#7
      001387 32                    4544 	ld	(hl-), a
      001388 73                    4545 	ld	(hl), e
      001389 7E                    4546 	ld	a, (hl)
      00138A EAr27r00              4547 	ld	(#_bgX),a
      00138D F8 07                 4548 	ldhl	sp,	#7
      00138F 7E                    4549 	ld	a, (hl)
      001390 EAr28r00              4550 	ld	(#_bgX + 1),a
      001393                       4551 00126$:
                                   4552 ;main.c:435: if (bgY >= 256) {
      001393 21r29r00              4553 	ld	hl, #_bgY
      001396 2A                    4554 	ld	a, (hl+)
      001397 4F                    4555 	ld	c, a
      001398 46                    4556 	ld	b, (hl)
      001399 78                    4557 	ld	a, b
      00139A EE 80                 4558 	xor	a, #0x80
      00139C D6 81                 4559 	sub	a, #0x81
      00139E 38 0F                 4560 	jr	C, 00128$
                                   4561 ;main.c:436: bgY = bgY % 256;
      0013A0 AF                    4562 	xor	a, a
      0013A1 3C                    4563 	inc	a
      0013A2 F5                    4564 	push	af
      0013A3 C5                    4565 	push	bc
      0013A4 CDr00r00              4566 	call	__modsint
      0013A7 E8 04                 4567 	add	sp, #4
      0013A9 21r29r00              4568 	ld	hl, #_bgY
      0013AC 7B                    4569 	ld	a, e
      0013AD 22                    4570 	ld	(hl+), a
      0013AE 72                    4571 	ld	(hl), d
      0013AF                       4572 00128$:
                                   4573 ;main.c:438: if (bgY < 0) {
      0013AF FAr29r00              4574 	ld	a, (#_bgY)
      0013B2 F8 06                 4575 	ldhl	sp,	#6
      0013B4 77                    4576 	ld	(hl), a
      0013B5 FAr2Ar00              4577 	ld	a, (#_bgY + 1)
      0013B8 F8 07                 4578 	ldhl	sp,	#7
      0013BA 77                    4579 	ld	(hl), a
      0013BB CB 7E                 4580 	bit	7, (hl)
      0013BD 28 2D                 4581 	jr	Z, 00130$
                                   4582 ;main.c:439: bgY = 255 - (bgY % 256);
      0013BF 2B                    4583 	dec	hl
      0013C0 AF                    4584 	xor	a, a
      0013C1 3C                    4585 	inc	a
      0013C2 F5                    4586 	push	af
      0013C3 2A                    4587 	ld	a, (hl+)
      0013C4 5F                    4588 	ld	e, a
      0013C5 56                    4589 	ld	d, (hl)
      0013C6 D5                    4590 	push	de
      0013C7 CDr00r00              4591 	call	__modsint
      0013CA E8 04                 4592 	add	sp, #4
      0013CC F8 04                 4593 	ldhl	sp,	#4
      0013CE 7B                    4594 	ld	a, e
      0013CF 22                    4595 	ld	(hl+), a
      0013D0 72                    4596 	ld	(hl), d
      0013D1 11 FF 00              4597 	ld	de, #0x00ff
      0013D4 F8 04                 4598 	ldhl	sp,	#4
      0013D6 2A                    4599 	ld	a,	(hl+)
      0013D7 66                    4600 	ld	h, (hl)
      0013D8 6F                    4601 	ld	l, a
      0013D9 7B                    4602 	ld	a, e
      0013DA 95                    4603 	sub	a, l
      0013DB 5F                    4604 	ld	e, a
      0013DC 7A                    4605 	ld	a, d
      0013DD 9C                    4606 	sbc	a, h
      0013DE F8 07                 4607 	ldhl	sp,	#7
      0013E0 32                    4608 	ld	(hl-), a
      0013E1 73                    4609 	ld	(hl), e
      0013E2 7E                    4610 	ld	a, (hl)
      0013E3 EAr29r00              4611 	ld	(#_bgY),a
      0013E6 F8 07                 4612 	ldhl	sp,	#7
      0013E8 7E                    4613 	ld	a, (hl)
      0013E9 EAr2Ar00              4614 	ld	(#_bgY + 1),a
      0013EC                       4615 00130$:
                                   4616 ;main.c:442: move_bkg(bgX, bgY);
      0013EC 21r29r00              4617 	ld	hl, #_bgY
      0013EF 4E                    4618 	ld	c, (hl)
      0013F0 FAr27r00              4619 	ld	a, (#_bgX)
      0013F3 E0r00                 4620 	ldh	(_SCX_REG + 0), a
                                   4621 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      0013F5 79                    4622 	ld	a, c
      0013F6 E0r00                 4623 	ldh	(_SCY_REG + 0), a
                                   4624 ;main.c:443: moveEnemiesWithBackground(xOverflow, yOverflow);
      0013F8 D1                    4625 	pop	de
      0013F9 D5                    4626 	push	de
      0013FA D5                    4627 	push	de
      0013FB F8 04                 4628 	ldhl	sp,	#4
      0013FD 2A                    4629 	ld	a, (hl+)
      0013FE 5F                    4630 	ld	e, a
      0013FF 56                    4631 	ld	d, (hl)
      001400 D5                    4632 	push	de
      001401 CDr9Fr08              4633 	call	_moveEnemiesWithBackground
      001404 E8 04                 4634 	add	sp, #4
                                   4635 ;main.c:446: if (ySpeed > 0) ySpeed--;
      001406 21r20r00              4636 	ld	hl, #_ySpeed
      001409 5E                    4637 	ld	e, (hl)
      00140A AF                    4638 	xor	a, a
      00140B 57                    4639 	ld	d, a
      00140C 96                    4640 	sub	a, (hl)
      00140D CB 7B                 4641 	bit	7, e
      00140F 28 07                 4642 	jr	Z, 00237$
      001411 CB 7A                 4643 	bit	7, d
      001413 20 08                 4644 	jr	NZ, 00238$
      001415 BF                    4645 	cp	a, a
      001416 18 05                 4646 	jr	00238$
      001418                       4647 00237$:
      001418 CB 7A                 4648 	bit	7, d
      00141A 28 01                 4649 	jr	Z, 00238$
      00141C 37                    4650 	scf
      00141D                       4651 00238$:
      00141D 30 04                 4652 	jr	NC, 00132$
      00141F 21r20r00              4653 	ld	hl, #_ySpeed
      001422 35                    4654 	dec	(hl)
      001423                       4655 00132$:
                                   4656 ;main.c:447: if (ySpeed < 0) ySpeed++;
      001423 21r20r00              4657 	ld	hl, #_ySpeed
      001426 CB 7E                 4658 	bit	7, (hl)
      001428 28 01                 4659 	jr	Z, 00134$
      00142A 34                    4660 	inc	(hl)
      00142B                       4661 00134$:
                                   4662 ;main.c:448: if (xSpeed > 0) xSpeed--;
      00142B 21r1Fr00              4663 	ld	hl, #_xSpeed
      00142E 5E                    4664 	ld	e, (hl)
      00142F AF                    4665 	xor	a, a
      001430 57                    4666 	ld	d, a
      001431 96                    4667 	sub	a, (hl)
      001432 CB 7B                 4668 	bit	7, e
      001434 28 07                 4669 	jr	Z, 00239$
      001436 CB 7A                 4670 	bit	7, d
      001438 20 08                 4671 	jr	NZ, 00240$
      00143A BF                    4672 	cp	a, a
      00143B 18 05                 4673 	jr	00240$
      00143D                       4674 00239$:
      00143D CB 7A                 4675 	bit	7, d
      00143F 28 01                 4676 	jr	Z, 00240$
      001441 37                    4677 	scf
      001442                       4678 00240$:
      001442 30 04                 4679 	jr	NC, 00136$
      001444 21r1Fr00              4680 	ld	hl, #_xSpeed
      001447 35                    4681 	dec	(hl)
      001448                       4682 00136$:
                                   4683 ;main.c:449: if (xSpeed < 0) xSpeed++;
      001448 21r1Fr00              4684 	ld	hl, #_xSpeed
      00144B CB 7E                 4685 	bit	7, (hl)
      00144D 28 01                 4686 	jr	Z, 00141$
      00144F 34                    4687 	inc	(hl)
      001450                       4688 00141$:
                                   4689 ;main.c:453: }
      001450 E8 08                 4690 	add	sp, #8
      001452 C9                    4691 	ret
                                   4692 ;main.c:455: void takeDamage(int16_t amount) {
                                   4693 ;	---------------------------------
                                   4694 ; Function takeDamage
                                   4695 ; ---------------------------------
      001453                       4696 _takeDamage::
      001453 3B                    4697 	dec	sp
                                   4698 ;main.c:456: if (amount > shield) {
      001454 FAr66r00              4699 	ld	a, (#_shield)
      001457 4F                    4700 	ld	c, a
      001458 07                    4701 	rlca
      001459 9F                    4702 	sbc	a, a
      00145A 47                    4703 	ld	b, a
                                   4704 ;main.c:458: hull -= (amount - shield);
      00145B F8 03                 4705 	ldhl	sp,	#3
      00145D 7E                    4706 	ld	a, (hl)
      00145E F8 00                 4707 	ldhl	sp,	#0
      001460 77                    4708 	ld	(hl), a
                                   4709 ;main.c:456: if (amount > shield) {
      001461 F8 03                 4710 	ldhl	sp,	#3
      001463 79                    4711 	ld	a, c
      001464 96                    4712 	sub	a, (hl)
      001465 23                    4713 	inc	hl
      001466 78                    4714 	ld	a, b
      001467 9E                    4715 	sbc	a, (hl)
      001468 78                    4716 	ld	a, b
      001469 57                    4717 	ld	d, a
      00146A CB 7E                 4718 	bit	7, (hl)
      00146C 28 07                 4719 	jr	Z, 00111$
      00146E CB 7A                 4720 	bit	7, d
      001470 20 08                 4721 	jr	NZ, 00112$
      001472 BF                    4722 	cp	a, a
      001473 18 05                 4723 	jr	00112$
      001475                       4724 00111$:
      001475 CB 7A                 4725 	bit	7, d
      001477 28 01                 4726 	jr	Z, 00112$
      001479 37                    4727 	scf
      00147A                       4728 00112$:
      00147A 30 10                 4729 	jr	NC, 00102$
                                   4730 ;main.c:457: shield = 0;
      00147C 21r66r00              4731 	ld	hl, #_shield
      00147F 36 00                 4732 	ld	(hl), #0x00
                                   4733 ;main.c:458: hull -= (amount - shield);
      001481 FAr65r00              4734 	ld	a, (#_hull)
      001484 F8 00                 4735 	ldhl	sp,	#0
      001486 96                    4736 	sub	a, (hl)
      001487 EAr65r00              4737 	ld	(#_hull),a
      00148A 18 09                 4738 	jr	00104$
      00148C                       4739 00102$:
                                   4740 ;main.c:461: shield -= amount;
      00148C FAr66r00              4741 	ld	a, (#_shield)
      00148F F8 00                 4742 	ldhl	sp,	#0
      001491 96                    4743 	sub	a, (hl)
      001492 EAr66r00              4744 	ld	(#_shield),a
      001495                       4745 00104$:
                                   4746 ;main.c:463: }
      001495 33                    4747 	inc	sp
      001496 C9                    4748 	ret
                                   4749 ;main.c:465: void checkCollision() {
                                   4750 ;	---------------------------------
                                   4751 ; Function checkCollision
                                   4752 ; ---------------------------------
      001497                       4753 _checkCollision::
      001497 E8 F2                 4754 	add	sp, #-14
                                   4755 ;main.c:468: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001499 F8 0D                 4756 	ldhl	sp,	#13
      00149B 36 00                 4757 	ld	(hl), #0x00
      00149D                       4758 00112$:
      00149D 21r09r05              4759 	ld	hl, #_ENEMYCOUNT
      0014A0 4E                    4760 	ld	c, (hl)
      0014A1 F8 0D                 4761 	ldhl	sp,	#13
      0014A3 7E                    4762 	ld	a, (hl)
      0014A4 91                    4763 	sub	a, c
      0014A5 D2r19r16              4764 	jp	NC, 00114$
                                   4765 ;main.c:469: if (enemies[i].visible && enemies[i].alive) {
      0014A8 4E                    4766 	ld	c, (hl)
      0014A9 06 00                 4767 	ld	b, #0x00
      0014AB 69                    4768 	ld	l, c
      0014AC 60                    4769 	ld	h, b
      0014AD 29                    4770 	add	hl, hl
      0014AE 29                    4771 	add	hl, hl
      0014AF 09                    4772 	add	hl, bc
      0014B0 29                    4773 	add	hl, hl
      0014B1 29                    4774 	add	hl, hl
      0014B2 01r00r00              4775 	ld	bc,#_enemies
      0014B5 09                    4776 	add	hl,bc
      0014B6 33                    4777 	inc	sp
      0014B7 33                    4778 	inc	sp
      0014B8 5D                    4779 	ld	e, l
      0014B9 54                    4780 	ld	d, h
      0014BA D5                    4781 	push	de
      0014BB 21 0B 00              4782 	ld	hl, #0x000b
      0014BE 19                    4783 	add	hl, de
      0014BF 4D                    4784 	ld	c, l
      0014C0 44                    4785 	ld	b, h
      0014C1 0A                    4786 	ld	a, (bc)
      0014C2 F8 0C                 4787 	ldhl	sp,	#12
      0014C4 77                    4788 	ld	(hl), a
      0014C5 7E                    4789 	ld	a, (hl)
      0014C6 B7                    4790 	or	a, a
      0014C7 CAr13r16              4791 	jp	Z, 00113$
      0014CA D1                    4792 	pop	de
      0014CB D5                    4793 	push	de
      0014CC 21 0A 00              4794 	ld	hl, #0x000a
      0014CF 19                    4795 	add	hl, de
      0014D0 E5                    4796 	push	hl
      0014D1 7D                    4797 	ld	a, l
      0014D2 F8 04                 4798 	ldhl	sp,	#4
      0014D4 77                    4799 	ld	(hl), a
      0014D5 E1                    4800 	pop	hl
      0014D6 7C                    4801 	ld	a, h
      0014D7 F8 03                 4802 	ldhl	sp,	#3
      0014D9 32                    4803 	ld	(hl-), a
      0014DA 2A                    4804 	ld	a, (hl+)
      0014DB 5F                    4805 	ld	e, a
      0014DC 56                    4806 	ld	d, (hl)
      0014DD 1A                    4807 	ld	a, (de)
      0014DE B7                    4808 	or	a, a
      0014DF CAr13r16              4809 	jp	Z, 00113$
                                   4810 ;main.c:470: uint8_t x = enemies[i].x;
                                   4811 ;main.c:471: uint8_t y = enemies[i].y;
      0014E2 23                    4812 	inc	hl
      0014E3 D1                    4813 	pop	de
      0014E4 D5                    4814 	push	de
      0014E5 1A                    4815 	ld	a, (de)
      0014E6 4F                    4816 	ld	c, a
      0014E7 D1                    4817 	pop	de
      0014E8 D5                    4818 	push	de
      0014E9 13                    4819 	inc	de
      0014EA 13                    4820 	inc	de
      0014EB 1A                    4821 	ld	a, (de)
      0014EC 77                    4822 	ld	(hl), a
                                   4823 ;main.c:473: if (x > playerDrawX - PLAYERSIZE && x - (8>>(enemies[i].spriteCount-1)) < playerDrawX
      0014ED FAr25r00              4824 	ld	a, (#_playerDrawX)
      0014F0 F8 0B                 4825 	ldhl	sp,	#11
      0014F2 22                    4826 	ld	(hl+), a
      0014F3 36 00                 4827 	ld	(hl), #0x00
      0014F5 FAr1Cr00              4828 	ld	a, (#_PLAYERSIZE)
      0014F8 F8 05                 4829 	ldhl	sp,	#5
      0014FA 22                    4830 	ld	(hl+), a
      0014FB 36 00                 4831 	ld	(hl), #0x00
      0014FD F8 0B                 4832 	ldhl	sp,#11
      0014FF 2A                    4833 	ld	a, (hl+)
      001500 5F                    4834 	ld	e, a
      001501 56                    4835 	ld	d, (hl)
      001502 F8 05                 4836 	ldhl	sp,	#5
      001504 2A                    4837 	ld	a,	(hl+)
      001505 66                    4838 	ld	h, (hl)
      001506 6F                    4839 	ld	l, a
      001507 7B                    4840 	ld	a, e
      001508 95                    4841 	sub	a, l
      001509 5F                    4842 	ld	e, a
      00150A 7A                    4843 	ld	a, d
      00150B 9C                    4844 	sbc	a, h
      00150C F8 0A                 4845 	ldhl	sp,	#10
      00150E 32                    4846 	ld	(hl-), a
      00150F 73                    4847 	ld	(hl), e
      001510 06 00                 4848 	ld	b, #0x00
      001512 2A                    4849 	ld	a, (hl+)
      001513 91                    4850 	sub	a, c
      001514 7E                    4851 	ld	a, (hl)
      001515 98                    4852 	sbc	a, b
      001516 56                    4853 	ld	d, (hl)
      001517 78                    4854 	ld	a, b
      001518 CB 7F                 4855 	bit	7,a
      00151A 28 07                 4856 	jr	Z, 00157$
      00151C CB 7A                 4857 	bit	7, d
      00151E 20 08                 4858 	jr	NZ, 00158$
      001520 BF                    4859 	cp	a, a
      001521 18 05                 4860 	jr	00158$
      001523                       4861 00157$:
      001523 CB 7A                 4862 	bit	7, d
      001525 28 01                 4863 	jr	Z, 00158$
      001527 37                    4864 	scf
      001528                       4865 00158$:
      001528 D2r13r16              4866 	jp	NC, 00113$
      00152B D1                    4867 	pop	de
      00152C D5                    4868 	push	de
      00152D 21 08 00              4869 	ld	hl, #0x0008
      001530 19                    4870 	add	hl, de
      001531 5D                    4871 	ld	e, l
      001532 54                    4872 	ld	d, h
      001533 1A                    4873 	ld	a, (de)
      001534 5F                    4874 	ld	e, a
      001535 1D                    4875 	dec	e
      001536 F8 07                 4876 	ldhl	sp,	#7
      001538 3E 08                 4877 	ld	a, #0x08
      00153A 22                    4878 	ld	(hl+), a
      00153B AF                    4879 	xor	a, a
      00153C 77                    4880 	ld	(hl), a
      00153D 1C                    4881 	inc	e
      00153E 18 07                 4882 	jr	00160$
      001540                       4883 00159$:
      001540 F8 08                 4884 	ldhl	sp,	#8
      001542 CB 2E                 4885 	sra	(hl)
      001544 2B                    4886 	dec	hl
      001545 CB 1E                 4887 	rr	(hl)
      001547                       4888 00160$:
      001547 1D                    4889 	dec	e
      001548 20 F6                 4890 	jr	NZ, 00159$
      00154A F8 07                 4891 	ldhl	sp,#7
      00154C 2A                    4892 	ld	a, (hl+)
      00154D 5F                    4893 	ld	e, a
      00154E 56                    4894 	ld	d, (hl)
      00154F 79                    4895 	ld	a, c
      001550 93                    4896 	sub	a, e
      001551 5F                    4897 	ld	e, a
      001552 78                    4898 	ld	a, b
      001553 9A                    4899 	sbc	a, d
      001554 47                    4900 	ld	b, a
      001555 4B                    4901 	ld	c, e
      001556 F8 0B                 4902 	ldhl	sp,	#11
      001558 79                    4903 	ld	a, c
      001559 96                    4904 	sub	a, (hl)
      00155A 23                    4905 	inc	hl
      00155B 78                    4906 	ld	a, b
      00155C 9E                    4907 	sbc	a, (hl)
      00155D 78                    4908 	ld	a, b
      00155E 57                    4909 	ld	d, a
      00155F CB 7E                 4910 	bit	7, (hl)
      001561 28 07                 4911 	jr	Z, 00161$
      001563 CB 7A                 4912 	bit	7, d
      001565 20 08                 4913 	jr	NZ, 00162$
      001567 BF                    4914 	cp	a, a
      001568 18 05                 4915 	jr	00162$
      00156A                       4916 00161$:
      00156A CB 7A                 4917 	bit	7, d
      00156C 28 01                 4918 	jr	Z, 00162$
      00156E 37                    4919 	scf
      00156F                       4920 00162$:
      00156F D2r13r16              4921 	jp	NC, 00113$
                                   4922 ;main.c:474: && y > playerDrawY - PLAYERSIZE && y -(8>>(enemies[i].spriteCount-1)) < playerDrawY ) 
      001572 FAr26r00              4923 	ld	a, (#_playerDrawY)
      001575 F8 09                 4924 	ldhl	sp,	#9
      001577 22                    4925 	ld	(hl+), a
      001578 AF                    4926 	xor	a, a
      001579 32                    4927 	ld	(hl-), a
      00157A 2A                    4928 	ld	a, (hl+)
      00157B 5F                    4929 	ld	e, a
      00157C 56                    4930 	ld	d, (hl)
      00157D F8 05                 4931 	ldhl	sp,	#5
      00157F 2A                    4932 	ld	a,	(hl+)
      001580 66                    4933 	ld	h, (hl)
      001581 6F                    4934 	ld	l, a
      001582 7B                    4935 	ld	a, e
      001583 95                    4936 	sub	a, l
      001584 5F                    4937 	ld	e, a
      001585 7A                    4938 	ld	a, d
      001586 9C                    4939 	sbc	a, h
      001587 F8 0C                 4940 	ldhl	sp,	#12
      001589 32                    4941 	ld	(hl-), a
      00158A 73                    4942 	ld	(hl), e
      00158B F8 04                 4943 	ldhl	sp,	#4
      00158D 4E                    4944 	ld	c, (hl)
      00158E 06 00                 4945 	ld	b, #0x00
      001590 F8 0B                 4946 	ldhl	sp,	#11
      001592 2A                    4947 	ld	a, (hl+)
      001593 91                    4948 	sub	a, c
      001594 7E                    4949 	ld	a, (hl)
      001595 98                    4950 	sbc	a, b
      001596 56                    4951 	ld	d, (hl)
      001597 78                    4952 	ld	a, b
      001598 CB 7F                 4953 	bit	7,a
      00159A 28 07                 4954 	jr	Z, 00163$
      00159C CB 7A                 4955 	bit	7, d
      00159E 20 08                 4956 	jr	NZ, 00164$
      0015A0 BF                    4957 	cp	a, a
      0015A1 18 05                 4958 	jr	00164$
      0015A3                       4959 00163$:
      0015A3 CB 7A                 4960 	bit	7, d
      0015A5 28 01                 4961 	jr	Z, 00164$
      0015A7 37                    4962 	scf
      0015A8                       4963 00164$:
      0015A8 30 69                 4964 	jr	NC, 00113$
      0015AA F8 07                 4965 	ldhl	sp,#7
      0015AC 2A                    4966 	ld	a, (hl+)
      0015AD 5F                    4967 	ld	e, a
      0015AE 2A                    4968 	ld	a, (hl+)
      0015AF 57                    4969 	ld	d, a
      0015B0 79                    4970 	ld	a, c
      0015B1 93                    4971 	sub	a, e
      0015B2 5F                    4972 	ld	e, a
      0015B3 78                    4973 	ld	a, b
      0015B4 9A                    4974 	sbc	a, d
      0015B5 47                    4975 	ld	b, a
      0015B6 7B                    4976 	ld	a, e
      0015B7 96                    4977 	sub	a, (hl)
      0015B8 23                    4978 	inc	hl
      0015B9 78                    4979 	ld	a, b
      0015BA 9E                    4980 	sbc	a, (hl)
      0015BB 78                    4981 	ld	a, b
      0015BC 57                    4982 	ld	d, a
      0015BD CB 7E                 4983 	bit	7, (hl)
      0015BF 28 07                 4984 	jr	Z, 00165$
      0015C1 CB 7A                 4985 	bit	7, d
      0015C3 20 08                 4986 	jr	NZ, 00166$
      0015C5 BF                    4987 	cp	a, a
      0015C6 18 05                 4988 	jr	00166$
      0015C8                       4989 00165$:
      0015C8 CB 7A                 4990 	bit	7, d
      0015CA 28 01                 4991 	jr	Z, 00166$
      0015CC 37                    4992 	scf
      0015CD                       4993 00166$:
      0015CD 30 44                 4994 	jr	NC, 00113$
                                   4995 ;main.c:476: set_sprite_tile(10+i, EMPTYSPRITE);
      0015CF 21r08r05              4996 	ld	hl, #_EMPTYSPRITE
      0015D2 4E                    4997 	ld	c, (hl)
      0015D3 F8 0D                 4998 	ldhl	sp,	#13
      0015D5 7E                    4999 	ld	a, (hl)
      0015D6 C6 0A                 5000 	add	a, #0x0a
                                   5001 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0015D8 6F                    5002 	ld	l, a
                                   5003 ;	spillPairReg hl
                                   5004 ;	spillPairReg hl
      0015D9 26 00                 5005 	ld	h, #0x00
                                   5006 ;	spillPairReg hl
                                   5007 ;	spillPairReg hl
      0015DB 29                    5008 	add	hl, hl
      0015DC 29                    5009 	add	hl, hl
      0015DD 11r00r00              5010 	ld	de, #_shadow_OAM
      0015E0 19                    5011 	add	hl, de
      0015E1 23                    5012 	inc	hl
      0015E2 23                    5013 	inc	hl
      0015E3 71                    5014 	ld	(hl), c
                                   5015 ;main.c:477: enemies[i].alive = 0;
      0015E4 F8 02                 5016 	ldhl	sp,	#2
      0015E6 2A                    5017 	ld	a,	(hl+)
      0015E7 66                    5018 	ld	h, (hl)
      0015E8 6F                    5019 	ld	l, a
      0015E9 36 00                 5020 	ld	(hl), #0x00
                                   5021 ;main.c:478: takeDamage(enemies[i].damage);
      0015EB D1                    5022 	pop	de
      0015EC D5                    5023 	push	de
      0015ED 21 0C 00              5024 	ld	hl, #0x000c
      0015F0 19                    5025 	add	hl, de
      0015F1 E5                    5026 	push	hl
      0015F2 7D                    5027 	ld	a, l
      0015F3 F8 0D                 5028 	ldhl	sp,	#13
      0015F5 77                    5029 	ld	(hl), a
      0015F6 E1                    5030 	pop	hl
      0015F7 7C                    5031 	ld	a, h
      0015F8 F8 0C                 5032 	ldhl	sp,	#12
      0015FA 32                    5033 	ld	(hl-), a
      0015FB 2A                    5034 	ld	a, (hl+)
      0015FC 5F                    5035 	ld	e, a
      0015FD 56                    5036 	ld	d, (hl)
      0015FE 1A                    5037 	ld	a, (de)
      0015FF 77                    5038 	ld	(hl), a
      001600 3A                    5039 	ld	a, (hl-)
      001601 22                    5040 	ld	(hl+), a
      001602 AF                    5041 	xor	a, a
      001603 32                    5042 	ld	(hl-), a
      001604 2A                    5043 	ld	a, (hl+)
      001605 5F                    5044 	ld	e, a
      001606 56                    5045 	ld	d, (hl)
      001607 D5                    5046 	push	de
      001608 CDr53r14              5047 	call	_takeDamage
      00160B E1                    5048 	pop	hl
                                   5049 ;main.c:479: initEnemies(0);
      00160C AF                    5050 	xor	a, a
      00160D F5                    5051 	push	af
      00160E 33                    5052 	inc	sp
      00160F CDr2Ar0E              5053 	call	_initEnemies
      001612 33                    5054 	inc	sp
      001613                       5055 00113$:
                                   5056 ;main.c:468: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001613 F8 0D                 5057 	ldhl	sp,	#13
      001615 34                    5058 	inc	(hl)
      001616 C3r9Dr14              5059 	jp	00112$
      001619                       5060 00114$:
                                   5061 ;main.c:486: }
      001619 E8 0E                 5062 	add	sp, #14
      00161B C9                    5063 	ret
                                   5064 ;main.c:489: void updateShieldsAndHull() {
                                   5065 ;	---------------------------------
                                   5066 ; Function updateShieldsAndHull
                                   5067 ; ---------------------------------
      00161C                       5068 _updateShieldsAndHull::
                                   5069 ;main.c:490: if (shield < maxShield) {
      00161C 21r2Cr00              5070 	ld	hl, #_maxShield
      00161F 5E                    5071 	ld	e, (hl)
      001620 FAr66r00              5072 	ld	a, (#_shield)
      001623 57                    5073 	ld	d,a
      001624 21r2Cr00              5074 	ld	hl, #_maxShield
      001627 96                    5075 	sub	a, (hl)
      001628 CB 7B                 5076 	bit	7, e
      00162A 28 07                 5077 	jr	Z, 00110$
      00162C CB 7A                 5078 	bit	7, d
      00162E 20 08                 5079 	jr	NZ, 00111$
      001630 BF                    5080 	cp	a, a
      001631 18 05                 5081 	jr	00111$
      001633                       5082 00110$:
      001633 CB 7A                 5083 	bit	7, d
      001635 28 01                 5084 	jr	Z, 00111$
      001637 37                    5085 	scf
      001638                       5086 00111$:
      001638 30 04                 5087 	jr	NC, 00102$
                                   5088 ;main.c:491: shield += 1;
      00163A 21r66r00              5089 	ld	hl, #_shield
      00163D 34                    5090 	inc	(hl)
      00163E                       5091 00102$:
                                   5092 ;main.c:493: setHealthBar(0, hull);
      00163E FAr65r00              5093 	ld	a, (#_hull)
      001641 67                    5094 	ld	h, a
      001642 2E 00                 5095 	ld	l, #0x00
      001644 E5                    5096 	push	hl
      001645 CDr1Ar05              5097 	call	_setHealthBar
      001648 E1                    5098 	pop	hl
                                   5099 ;main.c:494: setHealthBar(1, shield);
      001649 FAr66r00              5100 	ld	a, (#_shield)
      00164C 67                    5101 	ld	h, a
      00164D 2E 01                 5102 	ld	l, #0x01
      00164F E5                    5103 	push	hl
      001650 CDr1Ar05              5104 	call	_setHealthBar
      001653 E1                    5105 	pop	hl
                                   5106 ;main.c:495: }
      001654 C9                    5107 	ret
                                   5108 ;main.c:497: void initGame() {
                                   5109 ;	---------------------------------
                                   5110 ; Function initGame
                                   5111 ; ---------------------------------
      001655                       5112 _initGame::
                                   5113 ;main.c:500: xDir = 0;
      001655 21r1Dr00              5114 	ld	hl, #_xDir
      001658 36 00                 5115 	ld	(hl), #0x00
                                   5116 ;main.c:501: yDir = 0;
      00165A 21r1Er00              5117 	ld	hl, #_yDir
      00165D 36 00                 5118 	ld	(hl), #0x00
                                   5119 ;main.c:502: xSpeed = 0;
      00165F 21r1Fr00              5120 	ld	hl, #_xSpeed
      001662 36 00                 5121 	ld	(hl), #0x00
                                   5122 ;main.c:503: ySpeed = 0;
      001664 21r20r00              5123 	ld	hl, #_ySpeed
      001667 36 00                 5124 	ld	(hl), #0x00
                                   5125 ;main.c:506: playerX = 80<<5;
      001669 21r21r00              5126 	ld	hl, #_playerX
      00166C 36 00                 5127 	ld	(hl), #0x00
      00166E 23                    5128 	inc	hl
      00166F 36 0A                 5129 	ld	(hl), #0x0a
                                   5130 ;main.c:507: playerY = 80<<5;
      001671 21r23r00              5131 	ld	hl, #_playerY
      001674 36 00                 5132 	ld	(hl), #0x00
      001676 23                    5133 	inc	hl
      001677 36 0A                 5134 	ld	(hl), #0x0a
                                   5135 ;main.c:509: playerDrawX = 80;
      001679 21r25r00              5136 	ld	hl, #_playerDrawX
      00167C 36 50                 5137 	ld	(hl), #0x50
                                   5138 ;main.c:510: playerDrawY = 80;
      00167E 21r26r00              5139 	ld	hl, #_playerDrawY
      001681 36 50                 5140 	ld	(hl), #0x50
                                   5141 ;main.c:513: bgX = 0;
      001683 AF                    5142 	xor	a, a
      001684 21r27r00              5143 	ld	hl, #_bgX
      001687 22                    5144 	ld	(hl+), a
      001688 77                    5145 	ld	(hl), a
                                   5146 ;main.c:514: bgY = 0;
      001689 AF                    5147 	xor	a, a
      00168A 21r29r00              5148 	ld	hl, #_bgY
      00168D 22                    5149 	ld	(hl+), a
      00168E 77                    5150 	ld	(hl), a
                                   5151 ;main.c:516: hull = maxHull;
      00168F FAr2Br00              5152 	ld	a, (#_maxHull)
      001692 EAr65r00              5153 	ld	(#_hull),a
                                   5154 ;main.c:517: shield = maxShield;
      001695 FAr2Cr00              5155 	ld	a, (#_maxShield)
      001698 EAr66r00              5156 	ld	(#_shield),a
                                   5157 ;main.c:519: DISPLAY_ON;
      00169B F0r00                 5158 	ldh	a, (_LCDC_REG + 0)
      00169D F6 80                 5159 	or	a, #0x80
      00169F E0r00                 5160 	ldh	(_LCDC_REG + 0), a
                                   5161 ;main.c:520: SPRITES_8x8;
      0016A1 F0r00                 5162 	ldh	a, (_LCDC_REG + 0)
      0016A3 E6 FB                 5163 	and	a, #0xfb
      0016A5 E0r00                 5164 	ldh	(_LCDC_REG + 0), a
                                   5165 ;main.c:521: set_sprite_data(0, 8, cross);
      0016A7 11r07r00              5166 	ld	de, #_cross
      0016AA D5                    5167 	push	de
      0016AB 21 00 08              5168 	ld	hl, #0x800
      0016AE E5                    5169 	push	hl
      0016AF CDr00r00              5170 	call	_set_sprite_data
      0016B2 E8 04                 5171 	add	sp, #4
                                   5172 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0016B4 21r02r00              5173 	ld	hl, #(_shadow_OAM + 2)
      0016B7 36 00                 5174 	ld	(hl), #0x00
                                   5175 ;main.c:524: SHOW_SPRITES;
      0016B9 F0r00                 5176 	ldh	a, (_LCDC_REG + 0)
      0016BB F6 02                 5177 	or	a, #0x02
      0016BD E0r00                 5178 	ldh	(_LCDC_REG + 0), a
                                   5179 ;main.c:528: font_init();
      0016BF CDr00r00              5180 	call	_font_init
                                   5181 ;main.c:529: min_font = font_load(font_min); // 36 tiles of characters
      0016C2 11r00r00              5182 	ld	de, #_font_min
      0016C5 D5                    5183 	push	de
      0016C6 CDr00r00              5184 	call	_font_load
      0016C9 E1                    5185 	pop	hl
      0016CA 21r67r00              5186 	ld	hl, #_min_font
      0016CD 7B                    5187 	ld	a, e
      0016CE 22                    5188 	ld	(hl+), a
                                   5189 ;main.c:530: font_set(min_font);
      0016CF 7A                    5190 	ld	a, d
      0016D0 32                    5191 	ld	(hl-), a
      0016D1 2A                    5192 	ld	a, (hl+)
      0016D2 5F                    5193 	ld	e, a
      0016D3 56                    5194 	ld	d, (hl)
      0016D4 D5                    5195 	push	de
      0016D5 CDr00r00              5196 	call	_font_set
      0016D8 E1                    5197 	pop	hl
                                   5198 ;main.c:531: set_win_tiles(1,0,4,1,hullabel);
      0016D9 11r00r00              5199 	ld	de, #_hullabel
      0016DC D5                    5200 	push	de
      0016DD 21 04 01              5201 	ld	hl, #0x104
      0016E0 E5                    5202 	push	hl
      0016E1 21 01 00              5203 	ld	hl, #0x01
      0016E4 E5                    5204 	push	hl
      0016E5 CDr00r00              5205 	call	_set_win_tiles
      0016E8 E8 06                 5206 	add	sp, #6
                                   5207 ;main.c:532: set_win_tiles(1,1,5,1,shieldlabel);
      0016EA 11r04r00              5208 	ld	de, #_shieldlabel
      0016ED D5                    5209 	push	de
      0016EE 21 05 01              5210 	ld	hl, #0x105
      0016F1 E5                    5211 	push	hl
      0016F2 21 01 01              5212 	ld	hl, #0x101
      0016F5 E5                    5213 	push	hl
      0016F6 CDr00r00              5214 	call	_set_win_tiles
      0016F9 E8 06                 5215 	add	sp, #6
                                   5216 ;main.c:537: set_bkg_data(0x50,1,healthblock);
      0016FB 11rE7r04              5217 	ld	de, #_healthblock
      0016FE D5                    5218 	push	de
      0016FF 21 50 01              5219 	ld	hl, #0x150
      001702 E5                    5220 	push	hl
      001703 CDr00r00              5221 	call	_set_bkg_data
      001706 E8 04                 5222 	add	sp, #4
                                   5223 ;main.c:539: setHealthBar(0, hull);
      001708 FAr65r00              5224 	ld	a, (#_hull)
      00170B 67                    5225 	ld	h, a
      00170C 2E 00                 5226 	ld	l, #0x00
      00170E E5                    5227 	push	hl
      00170F CDr1Ar05              5228 	call	_setHealthBar
      001712 E1                    5229 	pop	hl
                                   5230 ;main.c:540: setHealthBar(1, shield);
      001713 FAr66r00              5231 	ld	a, (#_shield)
      001716 67                    5232 	ld	h, a
      001717 2E 01                 5233 	ld	l, #0x01
      001719 E5                    5234 	push	hl
      00171A CDr1Ar05              5235 	call	_setHealthBar
      00171D E1                    5236 	pop	hl
                                   5237 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      00171E 3E 07                 5238 	ld	a, #0x07
      001720 E0r00                 5239 	ldh	(_WX_REG + 0), a
      001722 3E 7C                 5240 	ld	a, #0x7c
      001724 E0r00                 5241 	ldh	(_WY_REG + 0), a
                                   5242 ;main.c:543: SHOW_WIN;;
      001726 F0r00                 5243 	ldh	a, (_LCDC_REG + 0)
      001728 F6 20                 5244 	or	a, #0x20
      00172A E0r00                 5245 	ldh	(_LCDC_REG + 0), a
                                   5246 ;main.c:548: set_bkg_data(0x25, 6, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      00172C 11r87r04              5247 	ld	de, #_backgroundtiles
      00172F D5                    5248 	push	de
      001730 21 25 06              5249 	ld	hl, #0x625
      001733 E5                    5250 	push	hl
      001734 CDr00r00              5251 	call	_set_bkg_data
      001737 E8 04                 5252 	add	sp, #4
                                   5253 ;main.c:549: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      001739 11r87r00              5254 	ld	de, #_background1
      00173C D5                    5255 	push	de
      00173D 21 20 20              5256 	ld	hl, #0x2020
      001740 E5                    5257 	push	hl
      001741 AF                    5258 	xor	a, a
      001742 0F                    5259 	rrca
      001743 F5                    5260 	push	af
      001744 CDr00r00              5261 	call	_set_bkg_tiles
      001747 E8 06                 5262 	add	sp, #6
                                   5263 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001749 AF                    5264 	xor	a, a
      00174A E0r00                 5265 	ldh	(_SCX_REG + 0), a
      00174C AF                    5266 	xor	a, a
      00174D E0r00                 5267 	ldh	(_SCY_REG + 0), a
                                   5268 ;main.c:551: SHOW_BKG;
      00174F F0r00                 5269 	ldh	a, (_LCDC_REG + 0)
      001751 F6 01                 5270 	or	a, #0x01
      001753 E0r00                 5271 	ldh	(_LCDC_REG + 0), a
                                   5272 ;main.c:557: }
      001755 C9                    5273 	ret
                                   5274 ;main.c:559: void main(){
                                   5275 ;	---------------------------------
                                   5276 ; Function main
                                   5277 ; ---------------------------------
      001756                       5278 _main::
                                   5279 ;main.c:571: waitpad(J_A);
      001756 3E 10                 5280 	ld	a, #0x10
      001758 F5                    5281 	push	af
      001759 33                    5282 	inc	sp
      00175A CDr00r00              5283 	call	_waitpad
      00175D 33                    5284 	inc	sp
                                   5285 ;main.c:572: uint16_t seed = LY_REG;
      00175E F0r00                 5286 	ldh	a, (_LY_REG + 0)
      001760 4F                    5287 	ld	c, a
      001761 06 00                 5288 	ld	b, #0x00
                                   5289 ;main.c:573: seed |= (uint16_t)DIV_REG << 8;
      001763 F0r00                 5290 	ldh	a, (_DIV_REG + 0)
      001765 5F                    5291 	ld	e, a
      001766 AF                    5292 	xor	a, a
      001767 B1                    5293 	or	a, c
      001768 4F                    5294 	ld	c, a
      001769 7B                    5295 	ld	a, e
      00176A B0                    5296 	or	a, b
      00176B 47                    5297 	ld	b, a
                                   5298 ;main.c:574: initrand(seed);
      00176C C5                    5299 	push	bc
      00176D CDr00r00              5300 	call	_initrand
      001770 E1                    5301 	pop	hl
                                   5302 ;main.c:579: initGame();
      001771 CDr55r16              5303 	call	_initGame
                                   5304 ;main.c:580: initEnemies(1);
      001774 3E 01                 5305 	ld	a, #0x01
      001776 F5                    5306 	push	af
      001777 33                    5307 	inc	sp
      001778 CDr2Ar0E              5308 	call	_initEnemies
      00177B 33                    5309 	inc	sp
                                   5310 ;main.c:582: while(1) {
      00177C                       5311 00102$:
                                   5312 ;main.c:583: joydata = joypad(); // query for button states
      00177C CDr00r00              5313 	call	_joypad
      00177F 21r64r00              5314 	ld	hl, #_joydata
      001782 73                    5315 	ld	(hl), e
                                   5316 ;main.c:585: updateDirection(); // set player direction
      001783 CDr2Br06              5317 	call	_updateDirection
                                   5318 ;main.c:588: move(); 
      001786 CDrD5r0F              5319 	call	_move
                                   5320 ;main.c:590: updateEnemyPositions();
      001789 CDr09r09              5321 	call	_updateEnemyPositions
                                   5322 ;main.c:593: checkCollision(); 
      00178C CDr97r14              5323 	call	_checkCollision
                                   5324 ;main.c:595: updateShieldsAndHull();
      00178F CDr1Cr16              5325 	call	_updateShieldsAndHull
                                   5326 ;main.c:597: SHOW_WIN;	
      001792 F0r00                 5327 	ldh	a, (_LCDC_REG + 0)
      001794 F6 20                 5328 	or	a, #0x20
      001796 E0r00                 5329 	ldh	(_LCDC_REG + 0), a
                                   5330 ;main.c:598: wait_vbl_done(); // Idle until next frame
      001798 CDr00r00              5331 	call	_wait_vbl_done
                                   5332 ;main.c:603: }
      00179B 18 DF                 5333 	jr	00102$
                                   5334 	.area _CODE
                                   5335 	.area _INITIALIZER
      000000                       5336 __xinit__hullabel:
      000000 12                    5337 	.db #0x12	; 18
      000001 1F                    5338 	.db #0x1f	; 31
      000002 16                    5339 	.db #0x16	; 22
      000003 16                    5340 	.db #0x16	; 22
      000004                       5341 __xinit__shieldlabel:
      000004 1D                    5342 	.db #0x1d	; 29
      000005 12                    5343 	.db #0x12	; 18
      000006 16                    5344 	.db #0x16	; 22
      000007 0E                    5345 	.db #0x0e	; 14
      000008                       5346 __xinit__blob:
      000008 0A 00                 5347 	.dw #0x000a
      00000A 0A 00                 5348 	.dw #0x000a
      00000C 00                    5349 	.db #0x00	;  0
      00000D 00                    5350 	.db #0x00	;  0
      00000E 01                    5351 	.db #0x01	; 1
      00000F 01                    5352 	.db #0x01	; 1
      000010 00 00                 5353 	.dw #0x0000
      000012 00                    5354 	.db #0x00	; 0
      000013 00                    5355 	.db #0x00	; 0
      000014 00                    5356 	.db #0x00	; 0
      000015 00 00                 5357 	.dw #0x0000
      000017 00                    5358 	.db #0x00	; 0
      000018 00 00                 5359 	.dw #0x0000
      00001A 00 00                 5360 	.dw #0x0000
      00001C                       5361 __xinit__PLAYERSIZE:
      00001C 08                    5362 	.db #0x08	; 8
      00001D                       5363 __xinit__xDir:
      00001D 00                    5364 	.db #0x00	;  0
      00001E                       5365 __xinit__yDir:
      00001E 00                    5366 	.db #0x00	;  0
      00001F                       5367 __xinit__xSpeed:
      00001F 00                    5368 	.db #0x00	;  0
      000020                       5369 __xinit__ySpeed:
      000020 00                    5370 	.db #0x00	;  0
      000021                       5371 __xinit__playerX:
      000021 00 0A                 5372 	.dw #0x0a00
      000023                       5373 __xinit__playerY:
      000023 00 0A                 5374 	.dw #0x0a00
      000025                       5375 __xinit__playerDrawX:
      000025 50                    5376 	.db #0x50	; 80	'P'
      000026                       5377 __xinit__playerDrawY:
      000026 50                    5378 	.db #0x50	; 80	'P'
      000027                       5379 __xinit__bgX:
      000027 00 00                 5380 	.dw #0x0000
      000029                       5381 __xinit__bgY:
      000029 00 00                 5382 	.dw #0x0000
      00002B                       5383 __xinit__maxHull:
      00002B 64                    5384 	.db #0x64	;  100	'd'
      00002C                       5385 __xinit__maxShield:
      00002C 64                    5386 	.db #0x64	;  100	'd'
                                   5387 	.area _CABS (ABS)
