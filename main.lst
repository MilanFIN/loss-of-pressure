                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _moveProjectiles
                                     15 	.globl _fire
                                     16 	.globl _checkCollision
                                     17 	.globl _takeDamage
                                     18 	.globl _move
                                     19 	.globl _initEnemies
                                     20 	.globl _updateEnemyPositions
                                     21 	.globl _updateDirection
                                     22 	.globl _setHealthBar
                                     23 	.globl _interruptLCD
                                     24 	.globl _rand
                                     25 	.globl _initrand
                                     26 	.globl _font_set
                                     27 	.globl _font_load
                                     28 	.globl _font_init
                                     29 	.globl _printf
                                     30 	.globl _set_sprite_data
                                     31 	.globl _set_win_tiles
                                     32 	.globl _set_bkg_tiles
                                     33 	.globl _set_bkg_data
                                     34 	.globl _wait_vbl_done
                                     35 	.globl _waitpad
                                     36 	.globl _joypad
                                     37 	.globl _enemyCollisionCount
                                     38 	.globl _yOverflow
                                     39 	.globl _xOverflow
                                     40 	.globl _bgY
                                     41 	.globl _bgX
                                     42 	.globl _playerDrawY
                                     43 	.globl _playerDrawX
                                     44 	.globl _playerY
                                     45 	.globl _playerX
                                     46 	.globl _ySpeed
                                     47 	.globl _xSpeed
                                     48 	.globl _yDir
                                     49 	.globl _xDir
                                     50 	.globl _fireCooldown
                                     51 	.globl _oldestProjectile
                                     52 	.globl _doubleGun
                                     53 	.globl _singleGun
                                     54 	.globl _blob
                                     55 	.globl _shieldlabel
                                     56 	.globl _hullabel
                                     57 	.globl _min_font
                                     58 	.globl _shield
                                     59 	.globl _hull
                                     60 	.globl _joydata
                                     61 	.globl _projectiles
                                     62 	.globl _enemies
                                     63 	.globl _maxShield
                                     64 	.globl _maxHull
                                     65 	.globl _PLAYERSIZE
                                     66 	.globl _PROJECTILECOUNT
                                     67 	.globl _ySpawnPositions
                                     68 	.globl _xSpawnPositions
                                     69 	.globl _ENEMYCOUNT
                                     70 	.globl _EMPTYSPRITE
                                     71 	.globl _BLANK
                                     72 	.globl _ProjectileTiles
                                     73 	.globl _projectile1
                                     74 	.globl _enemy1
                                     75 	.globl _healthblock
                                     76 	.globl _backgroundtiles
                                     77 	.globl _background1
                                     78 	.globl _cross
                                     79 ;--------------------------------------------------------
                                     80 ; special function registers
                                     81 ;--------------------------------------------------------
                                     82 ;--------------------------------------------------------
                                     83 ; ram data
                                     84 ;--------------------------------------------------------
                                     85 	.area _DATA
      000000                         86 _enemies::
      000000                         87 	.ds 80
      000050                         88 _projectiles::
      000050                         89 	.ds 55
      000087                         90 _joydata::
      000087                         91 	.ds 1
      000088                         92 _hull::
      000088                         93 	.ds 1
      000089                         94 _shield::
      000089                         95 	.ds 1
      00008A                         96 _min_font::
      00008A                         97 	.ds 2
                                     98 ;--------------------------------------------------------
                                     99 ; ram data
                                    100 ;--------------------------------------------------------
                                    101 	.area _INITIALIZED
      000000                        102 _hullabel::
      000000                        103 	.ds 4
      000004                        104 _shieldlabel::
      000004                        105 	.ds 4
      000008                        106 _blob::
      000008                        107 	.ds 16
      000018                        108 _singleGun::
      000018                        109 	.ds 11
      000023                        110 _doubleGun::
      000023                        111 	.ds 11
      00002E                        112 _oldestProjectile::
      00002E                        113 	.ds 1
      00002F                        114 _fireCooldown::
      00002F                        115 	.ds 1
      000030                        116 _xDir::
      000030                        117 	.ds 1
      000031                        118 _yDir::
      000031                        119 	.ds 1
      000032                        120 _xSpeed::
      000032                        121 	.ds 1
      000033                        122 _ySpeed::
      000033                        123 	.ds 1
      000034                        124 _playerX::
      000034                        125 	.ds 2
      000036                        126 _playerY::
      000036                        127 	.ds 2
      000038                        128 _playerDrawX::
      000038                        129 	.ds 1
      000039                        130 _playerDrawY::
      000039                        131 	.ds 1
      00003A                        132 _bgX::
      00003A                        133 	.ds 2
      00003C                        134 _bgY::
      00003C                        135 	.ds 2
      00003E                        136 _xOverflow::
      00003E                        137 	.ds 2
      000040                        138 _yOverflow::
      000040                        139 	.ds 2
      000042                        140 _enemyCollisionCount::
      000042                        141 	.ds 1
                                    142 ;--------------------------------------------------------
                                    143 ; absolute external ram data
                                    144 ;--------------------------------------------------------
                                    145 	.area _DABS (ABS)
                                    146 ;--------------------------------------------------------
                                    147 ; global & static initialisations
                                    148 ;--------------------------------------------------------
                                    149 	.area _HOME
                                    150 	.area _GSINIT
                                    151 	.area _GSFINAL
                                    152 	.area _GSINIT
                                    153 ;--------------------------------------------------------
                                    154 ; Home
                                    155 ;--------------------------------------------------------
                                    156 	.area _HOME
                                    157 	.area _HOME
                                    158 ;--------------------------------------------------------
                                    159 ; code
                                    160 ;--------------------------------------------------------
                                    161 	.area _CODE
                                    162 ;main.c:82: void interruptLCD(){
                                    163 ;	---------------------------------
                                    164 ; Function interruptLCD
                                    165 ; ---------------------------------
      000000                        166 _interruptLCD::
                                    167 ;main.c:83: HIDE_WIN;
      000000 F0r00                  168 	ldh	a, (_LCDC_REG + 0)
      000002 E6 DF                  169 	and	a, #0xdf
      000004 E0r00                  170 	ldh	(_LCDC_REG + 0), a
                                    171 ;main.c:84: }
      000006 C9                     172 	ret
      000007                        173 _cross:
      000007 18                     174 	.db #0x18	; 24
      000008 18                     175 	.db #0x18	; 24
      000009 18                     176 	.db #0x18	; 24
      00000A 18                     177 	.db #0x18	; 24
      00000B 3C                     178 	.db #0x3c	; 60
      00000C 3C                     179 	.db #0x3c	; 60
      00000D 3C                     180 	.db #0x3c	; 60
      00000E 3C                     181 	.db #0x3c	; 60
      00000F 7E                     182 	.db #0x7e	; 126
      000010 7E                     183 	.db #0x7e	; 126
      000011 7E                     184 	.db #0x7e	; 126
      000012 7E                     185 	.db #0x7e	; 126
      000013 FF                     186 	.db #0xff	; 255
      000014 FF                     187 	.db #0xff	; 255
      000015 FF                     188 	.db #0xff	; 255
      000016 FF                     189 	.db #0xff	; 255
      000017 0F                     190 	.db #0x0f	; 15
      000018 0F                     191 	.db #0x0f	; 15
      000019 3F                     192 	.db #0x3f	; 63
      00001A 3F                     193 	.db #0x3f	; 63
      00001B FF                     194 	.db #0xff	; 255
      00001C FF                     195 	.db #0xff	; 255
      00001D FF                     196 	.db #0xff	; 255
      00001E FF                     197 	.db #0xff	; 255
      00001F 7E                     198 	.db #0x7e	; 126
      000020 7E                     199 	.db #0x7e	; 126
      000021 3E                     200 	.db #0x3e	; 62
      000022 3E                     201 	.db #0x3e	; 62
      000023 1C                     202 	.db #0x1c	; 28
      000024 1C                     203 	.db #0x1c	; 28
      000025 0C                     204 	.db #0x0c	; 12
      000026 0C                     205 	.db #0x0c	; 12
      000027 C0                     206 	.db #0xc0	; 192
      000028 C0                     207 	.db #0xc0	; 192
      000029 F0                     208 	.db #0xf0	; 240
      00002A F0                     209 	.db #0xf0	; 240
      00002B FC                     210 	.db #0xfc	; 252
      00002C FC                     211 	.db #0xfc	; 252
      00002D FF                     212 	.db #0xff	; 255
      00002E FF                     213 	.db #0xff	; 255
      00002F FF                     214 	.db #0xff	; 255
      000030 FF                     215 	.db #0xff	; 255
      000031 FC                     216 	.db #0xfc	; 252
      000032 FC                     217 	.db #0xfc	; 252
      000033 F0                     218 	.db #0xf0	; 240
      000034 F0                     219 	.db #0xf0	; 240
      000035 C0                     220 	.db #0xc0	; 192
      000036 C0                     221 	.db #0xc0	; 192
      000037 0C                     222 	.db #0x0c	; 12
      000038 0C                     223 	.db #0x0c	; 12
      000039 1C                     224 	.db #0x1c	; 28
      00003A 1C                     225 	.db #0x1c	; 28
      00003B 3E                     226 	.db #0x3e	; 62
      00003C 3E                     227 	.db #0x3e	; 62
      00003D 7E                     228 	.db #0x7e	; 126
      00003E 7E                     229 	.db #0x7e	; 126
      00003F FF                     230 	.db #0xff	; 255
      000040 FF                     231 	.db #0xff	; 255
      000041 FF                     232 	.db #0xff	; 255
      000042 FF                     233 	.db #0xff	; 255
      000043 3F                     234 	.db #0x3f	; 63
      000044 3F                     235 	.db #0x3f	; 63
      000045 0F                     236 	.db #0x0f	; 15
      000046 0F                     237 	.db #0x0f	; 15
      000047 FF                     238 	.db #0xff	; 255
      000048 FF                     239 	.db #0xff	; 255
      000049 FF                     240 	.db #0xff	; 255
      00004A FF                     241 	.db #0xff	; 255
      00004B 7E                     242 	.db #0x7e	; 126
      00004C 7E                     243 	.db #0x7e	; 126
      00004D 7E                     244 	.db #0x7e	; 126
      00004E 7E                     245 	.db #0x7e	; 126
      00004F 3C                     246 	.db #0x3c	; 60
      000050 3C                     247 	.db #0x3c	; 60
      000051 3C                     248 	.db #0x3c	; 60
      000052 3C                     249 	.db #0x3c	; 60
      000053 18                     250 	.db #0x18	; 24
      000054 18                     251 	.db #0x18	; 24
      000055 18                     252 	.db #0x18	; 24
      000056 18                     253 	.db #0x18	; 24
      000057 30                     254 	.db #0x30	; 48	'0'
      000058 30                     255 	.db #0x30	; 48	'0'
      000059 38                     256 	.db #0x38	; 56	'8'
      00005A 38                     257 	.db #0x38	; 56	'8'
      00005B 7C                     258 	.db #0x7c	; 124
      00005C 7C                     259 	.db #0x7c	; 124
      00005D 7E                     260 	.db #0x7e	; 126
      00005E 7E                     261 	.db #0x7e	; 126
      00005F FF                     262 	.db #0xff	; 255
      000060 FF                     263 	.db #0xff	; 255
      000061 FF                     264 	.db #0xff	; 255
      000062 FF                     265 	.db #0xff	; 255
      000063 FC                     266 	.db #0xfc	; 252
      000064 FC                     267 	.db #0xfc	; 252
      000065 F0                     268 	.db #0xf0	; 240
      000066 F0                     269 	.db #0xf0	; 240
      000067 03                     270 	.db #0x03	; 3
      000068 03                     271 	.db #0x03	; 3
      000069 0F                     272 	.db #0x0f	; 15
      00006A 0F                     273 	.db #0x0f	; 15
      00006B 3F                     274 	.db #0x3f	; 63
      00006C 3F                     275 	.db #0x3f	; 63
      00006D FF                     276 	.db #0xff	; 255
      00006E FF                     277 	.db #0xff	; 255
      00006F FF                     278 	.db #0xff	; 255
      000070 FF                     279 	.db #0xff	; 255
      000071 3F                     280 	.db #0x3f	; 63
      000072 3F                     281 	.db #0x3f	; 63
      000073 0F                     282 	.db #0x0f	; 15
      000074 0F                     283 	.db #0x0f	; 15
      000075 03                     284 	.db #0x03	; 3
      000076 03                     285 	.db #0x03	; 3
      000077 F0                     286 	.db #0xf0	; 240
      000078 F0                     287 	.db #0xf0	; 240
      000079 FC                     288 	.db #0xfc	; 252
      00007A FC                     289 	.db #0xfc	; 252
      00007B FF                     290 	.db #0xff	; 255
      00007C FF                     291 	.db #0xff	; 255
      00007D FF                     292 	.db #0xff	; 255
      00007E FF                     293 	.db #0xff	; 255
      00007F 7E                     294 	.db #0x7e	; 126
      000080 7E                     295 	.db #0x7e	; 126
      000081 7C                     296 	.db #0x7c	; 124
      000082 7C                     297 	.db #0x7c	; 124
      000083 38                     298 	.db #0x38	; 56	'8'
      000084 38                     299 	.db #0x38	; 56	'8'
      000085 30                     300 	.db #0x30	; 48	'0'
      000086 30                     301 	.db #0x30	; 48	'0'
      000087                        302 _background1:
      000087 26                     303 	.db #0x26	; 38
      000088 26                     304 	.db #0x26	; 38
      000089 26                     305 	.db #0x26	; 38
      00008A 26                     306 	.db #0x26	; 38
      00008B 26                     307 	.db #0x26	; 38
      00008C 26                     308 	.db #0x26	; 38
      00008D 26                     309 	.db #0x26	; 38
      00008E 26                     310 	.db #0x26	; 38
      00008F 26                     311 	.db #0x26	; 38
      000090 26                     312 	.db #0x26	; 38
      000091 26                     313 	.db #0x26	; 38
      000092 2A                     314 	.db #0x2a	; 42
      000093 29                     315 	.db #0x29	; 41
      000094 26                     316 	.db #0x26	; 38
      000095 26                     317 	.db #0x26	; 38
      000096 26                     318 	.db #0x26	; 38
      000097 26                     319 	.db #0x26	; 38
      000098 26                     320 	.db #0x26	; 38
      000099 26                     321 	.db #0x26	; 38
      00009A 26                     322 	.db #0x26	; 38
      00009B 26                     323 	.db #0x26	; 38
      00009C 26                     324 	.db #0x26	; 38
      00009D 26                     325 	.db #0x26	; 38
      00009E 26                     326 	.db #0x26	; 38
      00009F 26                     327 	.db #0x26	; 38
      0000A0 26                     328 	.db #0x26	; 38
      0000A1 26                     329 	.db #0x26	; 38
      0000A2 26                     330 	.db #0x26	; 38
      0000A3 26                     331 	.db #0x26	; 38
      0000A4 26                     332 	.db #0x26	; 38
      0000A5 26                     333 	.db #0x26	; 38
      0000A6 26                     334 	.db #0x26	; 38
      0000A7 26                     335 	.db #0x26	; 38
      0000A8 26                     336 	.db #0x26	; 38
      0000A9 26                     337 	.db #0x26	; 38
      0000AA 26                     338 	.db #0x26	; 38
      0000AB 26                     339 	.db #0x26	; 38
      0000AC 26                     340 	.db #0x26	; 38
      0000AD 26                     341 	.db #0x26	; 38
      0000AE 26                     342 	.db #0x26	; 38
      0000AF 26                     343 	.db #0x26	; 38
      0000B0 26                     344 	.db #0x26	; 38
      0000B1 26                     345 	.db #0x26	; 38
      0000B2 25                     346 	.db #0x25	; 37
      0000B3 26                     347 	.db #0x26	; 38
      0000B4 26                     348 	.db #0x26	; 38
      0000B5 26                     349 	.db #0x26	; 38
      0000B6 26                     350 	.db #0x26	; 38
      0000B7 26                     351 	.db #0x26	; 38
      0000B8 26                     352 	.db #0x26	; 38
      0000B9 26                     353 	.db #0x26	; 38
      0000BA 26                     354 	.db #0x26	; 38
      0000BB 26                     355 	.db #0x26	; 38
      0000BC 26                     356 	.db #0x26	; 38
      0000BD 26                     357 	.db #0x26	; 38
      0000BE 26                     358 	.db #0x26	; 38
      0000BF 26                     359 	.db #0x26	; 38
      0000C0 26                     360 	.db #0x26	; 38
      0000C1 26                     361 	.db #0x26	; 38
      0000C2 26                     362 	.db #0x26	; 38
      0000C3 26                     363 	.db #0x26	; 38
      0000C4 26                     364 	.db #0x26	; 38
      0000C5 26                     365 	.db #0x26	; 38
      0000C6 26                     366 	.db #0x26	; 38
      0000C7 26                     367 	.db #0x26	; 38
      0000C8 26                     368 	.db #0x26	; 38
      0000C9 26                     369 	.db #0x26	; 38
      0000CA 26                     370 	.db #0x26	; 38
      0000CB 26                     371 	.db #0x26	; 38
      0000CC 26                     372 	.db #0x26	; 38
      0000CD 26                     373 	.db #0x26	; 38
      0000CE 26                     374 	.db #0x26	; 38
      0000CF 26                     375 	.db #0x26	; 38
      0000D0 26                     376 	.db #0x26	; 38
      0000D1 26                     377 	.db #0x26	; 38
      0000D2 26                     378 	.db #0x26	; 38
      0000D3 26                     379 	.db #0x26	; 38
      0000D4 26                     380 	.db #0x26	; 38
      0000D5 26                     381 	.db #0x26	; 38
      0000D6 26                     382 	.db #0x26	; 38
      0000D7 26                     383 	.db #0x26	; 38
      0000D8 26                     384 	.db #0x26	; 38
      0000D9 26                     385 	.db #0x26	; 38
      0000DA 26                     386 	.db #0x26	; 38
      0000DB 26                     387 	.db #0x26	; 38
      0000DC 26                     388 	.db #0x26	; 38
      0000DD 26                     389 	.db #0x26	; 38
      0000DE 26                     390 	.db #0x26	; 38
      0000DF 26                     391 	.db #0x26	; 38
      0000E0 26                     392 	.db #0x26	; 38
      0000E1 26                     393 	.db #0x26	; 38
      0000E2 26                     394 	.db #0x26	; 38
      0000E3 26                     395 	.db #0x26	; 38
      0000E4 26                     396 	.db #0x26	; 38
      0000E5 26                     397 	.db #0x26	; 38
      0000E6 26                     398 	.db #0x26	; 38
      0000E7 26                     399 	.db #0x26	; 38
      0000E8 26                     400 	.db #0x26	; 38
      0000E9 26                     401 	.db #0x26	; 38
      0000EA 26                     402 	.db #0x26	; 38
      0000EB 26                     403 	.db #0x26	; 38
      0000EC 26                     404 	.db #0x26	; 38
      0000ED 26                     405 	.db #0x26	; 38
      0000EE 26                     406 	.db #0x26	; 38
      0000EF 26                     407 	.db #0x26	; 38
      0000F0 26                     408 	.db #0x26	; 38
      0000F1 26                     409 	.db #0x26	; 38
      0000F2 26                     410 	.db #0x26	; 38
      0000F3 26                     411 	.db #0x26	; 38
      0000F4 26                     412 	.db #0x26	; 38
      0000F5 26                     413 	.db #0x26	; 38
      0000F6 26                     414 	.db #0x26	; 38
      0000F7 26                     415 	.db #0x26	; 38
      0000F8 26                     416 	.db #0x26	; 38
      0000F9 26                     417 	.db #0x26	; 38
      0000FA 26                     418 	.db #0x26	; 38
      0000FB 26                     419 	.db #0x26	; 38
      0000FC 26                     420 	.db #0x26	; 38
      0000FD 26                     421 	.db #0x26	; 38
      0000FE 26                     422 	.db #0x26	; 38
      0000FF 26                     423 	.db #0x26	; 38
      000100 26                     424 	.db #0x26	; 38
      000101 26                     425 	.db #0x26	; 38
      000102 26                     426 	.db #0x26	; 38
      000103 26                     427 	.db #0x26	; 38
      000104 26                     428 	.db #0x26	; 38
      000105 26                     429 	.db #0x26	; 38
      000106 26                     430 	.db #0x26	; 38
      000107 26                     431 	.db #0x26	; 38
      000108 26                     432 	.db #0x26	; 38
      000109 26                     433 	.db #0x26	; 38
      00010A 26                     434 	.db #0x26	; 38
      00010B 26                     435 	.db #0x26	; 38
      00010C 26                     436 	.db #0x26	; 38
      00010D 26                     437 	.db #0x26	; 38
      00010E 26                     438 	.db #0x26	; 38
      00010F 26                     439 	.db #0x26	; 38
      000110 26                     440 	.db #0x26	; 38
      000111 26                     441 	.db #0x26	; 38
      000112 26                     442 	.db #0x26	; 38
      000113 26                     443 	.db #0x26	; 38
      000114 26                     444 	.db #0x26	; 38
      000115 26                     445 	.db #0x26	; 38
      000116 26                     446 	.db #0x26	; 38
      000117 26                     447 	.db #0x26	; 38
      000118 26                     448 	.db #0x26	; 38
      000119 26                     449 	.db #0x26	; 38
      00011A 26                     450 	.db #0x26	; 38
      00011B 26                     451 	.db #0x26	; 38
      00011C 26                     452 	.db #0x26	; 38
      00011D 26                     453 	.db #0x26	; 38
      00011E 26                     454 	.db #0x26	; 38
      00011F 26                     455 	.db #0x26	; 38
      000120 26                     456 	.db #0x26	; 38
      000121 26                     457 	.db #0x26	; 38
      000122 26                     458 	.db #0x26	; 38
      000123 26                     459 	.db #0x26	; 38
      000124 26                     460 	.db #0x26	; 38
      000125 26                     461 	.db #0x26	; 38
      000126 26                     462 	.db #0x26	; 38
      000127 26                     463 	.db #0x26	; 38
      000128 26                     464 	.db #0x26	; 38
      000129 26                     465 	.db #0x26	; 38
      00012A 26                     466 	.db #0x26	; 38
      00012B 26                     467 	.db #0x26	; 38
      00012C 26                     468 	.db #0x26	; 38
      00012D 26                     469 	.db #0x26	; 38
      00012E 26                     470 	.db #0x26	; 38
      00012F 26                     471 	.db #0x26	; 38
      000130 26                     472 	.db #0x26	; 38
      000131 26                     473 	.db #0x26	; 38
      000132 26                     474 	.db #0x26	; 38
      000133 26                     475 	.db #0x26	; 38
      000134 26                     476 	.db #0x26	; 38
      000135 26                     477 	.db #0x26	; 38
      000136 26                     478 	.db #0x26	; 38
      000137 26                     479 	.db #0x26	; 38
      000138 26                     480 	.db #0x26	; 38
      000139 26                     481 	.db #0x26	; 38
      00013A 26                     482 	.db #0x26	; 38
      00013B 26                     483 	.db #0x26	; 38
      00013C 26                     484 	.db #0x26	; 38
      00013D 26                     485 	.db #0x26	; 38
      00013E 26                     486 	.db #0x26	; 38
      00013F 26                     487 	.db #0x26	; 38
      000140 26                     488 	.db #0x26	; 38
      000141 26                     489 	.db #0x26	; 38
      000142 26                     490 	.db #0x26	; 38
      000143 26                     491 	.db #0x26	; 38
      000144 26                     492 	.db #0x26	; 38
      000145 26                     493 	.db #0x26	; 38
      000146 26                     494 	.db #0x26	; 38
      000147 26                     495 	.db #0x26	; 38
      000148 26                     496 	.db #0x26	; 38
      000149 26                     497 	.db #0x26	; 38
      00014A 26                     498 	.db #0x26	; 38
      00014B 26                     499 	.db #0x26	; 38
      00014C 26                     500 	.db #0x26	; 38
      00014D 26                     501 	.db #0x26	; 38
      00014E 26                     502 	.db #0x26	; 38
      00014F 26                     503 	.db #0x26	; 38
      000150 26                     504 	.db #0x26	; 38
      000151 26                     505 	.db #0x26	; 38
      000152 26                     506 	.db #0x26	; 38
      000153 26                     507 	.db #0x26	; 38
      000154 26                     508 	.db #0x26	; 38
      000155 26                     509 	.db #0x26	; 38
      000156 26                     510 	.db #0x26	; 38
      000157 26                     511 	.db #0x26	; 38
      000158 26                     512 	.db #0x26	; 38
      000159 26                     513 	.db #0x26	; 38
      00015A 26                     514 	.db #0x26	; 38
      00015B 26                     515 	.db #0x26	; 38
      00015C 26                     516 	.db #0x26	; 38
      00015D 26                     517 	.db #0x26	; 38
      00015E 26                     518 	.db #0x26	; 38
      00015F 26                     519 	.db #0x26	; 38
      000160 26                     520 	.db #0x26	; 38
      000161 26                     521 	.db #0x26	; 38
      000162 26                     522 	.db #0x26	; 38
      000163 26                     523 	.db #0x26	; 38
      000164 26                     524 	.db #0x26	; 38
      000165 26                     525 	.db #0x26	; 38
      000166 26                     526 	.db #0x26	; 38
      000167 26                     527 	.db #0x26	; 38
      000168 26                     528 	.db #0x26	; 38
      000169 26                     529 	.db #0x26	; 38
      00016A 26                     530 	.db #0x26	; 38
      00016B 26                     531 	.db #0x26	; 38
      00016C 26                     532 	.db #0x26	; 38
      00016D 26                     533 	.db #0x26	; 38
      00016E 26                     534 	.db #0x26	; 38
      00016F 26                     535 	.db #0x26	; 38
      000170 26                     536 	.db #0x26	; 38
      000171 26                     537 	.db #0x26	; 38
      000172 26                     538 	.db #0x26	; 38
      000173 26                     539 	.db #0x26	; 38
      000174 26                     540 	.db #0x26	; 38
      000175 26                     541 	.db #0x26	; 38
      000176 26                     542 	.db #0x26	; 38
      000177 26                     543 	.db #0x26	; 38
      000178 26                     544 	.db #0x26	; 38
      000179 26                     545 	.db #0x26	; 38
      00017A 26                     546 	.db #0x26	; 38
      00017B 26                     547 	.db #0x26	; 38
      00017C 26                     548 	.db #0x26	; 38
      00017D 26                     549 	.db #0x26	; 38
      00017E 26                     550 	.db #0x26	; 38
      00017F 26                     551 	.db #0x26	; 38
      000180 26                     552 	.db #0x26	; 38
      000181 26                     553 	.db #0x26	; 38
      000182 26                     554 	.db #0x26	; 38
      000183 26                     555 	.db #0x26	; 38
      000184 26                     556 	.db #0x26	; 38
      000185 26                     557 	.db #0x26	; 38
      000186 26                     558 	.db #0x26	; 38
      000187 26                     559 	.db #0x26	; 38
      000188 26                     560 	.db #0x26	; 38
      000189 26                     561 	.db #0x26	; 38
      00018A 26                     562 	.db #0x26	; 38
      00018B 26                     563 	.db #0x26	; 38
      00018C 26                     564 	.db #0x26	; 38
      00018D 26                     565 	.db #0x26	; 38
      00018E 26                     566 	.db #0x26	; 38
      00018F 26                     567 	.db #0x26	; 38
      000190 26                     568 	.db #0x26	; 38
      000191 26                     569 	.db #0x26	; 38
      000192 26                     570 	.db #0x26	; 38
      000193 26                     571 	.db #0x26	; 38
      000194 26                     572 	.db #0x26	; 38
      000195 26                     573 	.db #0x26	; 38
      000196 26                     574 	.db #0x26	; 38
      000197 26                     575 	.db #0x26	; 38
      000198 26                     576 	.db #0x26	; 38
      000199 26                     577 	.db #0x26	; 38
      00019A 26                     578 	.db #0x26	; 38
      00019B 26                     579 	.db #0x26	; 38
      00019C 26                     580 	.db #0x26	; 38
      00019D 26                     581 	.db #0x26	; 38
      00019E 26                     582 	.db #0x26	; 38
      00019F 26                     583 	.db #0x26	; 38
      0001A0 26                     584 	.db #0x26	; 38
      0001A1 26                     585 	.db #0x26	; 38
      0001A2 26                     586 	.db #0x26	; 38
      0001A3 26                     587 	.db #0x26	; 38
      0001A4 26                     588 	.db #0x26	; 38
      0001A5 26                     589 	.db #0x26	; 38
      0001A6 26                     590 	.db #0x26	; 38
      0001A7 26                     591 	.db #0x26	; 38
      0001A8 26                     592 	.db #0x26	; 38
      0001A9 26                     593 	.db #0x26	; 38
      0001AA 26                     594 	.db #0x26	; 38
      0001AB 26                     595 	.db #0x26	; 38
      0001AC 26                     596 	.db #0x26	; 38
      0001AD 26                     597 	.db #0x26	; 38
      0001AE 26                     598 	.db #0x26	; 38
      0001AF 26                     599 	.db #0x26	; 38
      0001B0 26                     600 	.db #0x26	; 38
      0001B1 26                     601 	.db #0x26	; 38
      0001B2 26                     602 	.db #0x26	; 38
      0001B3 26                     603 	.db #0x26	; 38
      0001B4 26                     604 	.db #0x26	; 38
      0001B5 26                     605 	.db #0x26	; 38
      0001B6 26                     606 	.db #0x26	; 38
      0001B7 26                     607 	.db #0x26	; 38
      0001B8 26                     608 	.db #0x26	; 38
      0001B9 26                     609 	.db #0x26	; 38
      0001BA 25                     610 	.db #0x25	; 37
      0001BB 26                     611 	.db #0x26	; 38
      0001BC 26                     612 	.db #0x26	; 38
      0001BD 26                     613 	.db #0x26	; 38
      0001BE 26                     614 	.db #0x26	; 38
      0001BF 26                     615 	.db #0x26	; 38
      0001C0 26                     616 	.db #0x26	; 38
      0001C1 26                     617 	.db #0x26	; 38
      0001C2 26                     618 	.db #0x26	; 38
      0001C3 26                     619 	.db #0x26	; 38
      0001C4 26                     620 	.db #0x26	; 38
      0001C5 26                     621 	.db #0x26	; 38
      0001C6 26                     622 	.db #0x26	; 38
      0001C7 26                     623 	.db #0x26	; 38
      0001C8 26                     624 	.db #0x26	; 38
      0001C9 26                     625 	.db #0x26	; 38
      0001CA 26                     626 	.db #0x26	; 38
      0001CB 26                     627 	.db #0x26	; 38
      0001CC 26                     628 	.db #0x26	; 38
      0001CD 26                     629 	.db #0x26	; 38
      0001CE 26                     630 	.db #0x26	; 38
      0001CF 26                     631 	.db #0x26	; 38
      0001D0 26                     632 	.db #0x26	; 38
      0001D1 26                     633 	.db #0x26	; 38
      0001D2 26                     634 	.db #0x26	; 38
      0001D3 26                     635 	.db #0x26	; 38
      0001D4 26                     636 	.db #0x26	; 38
      0001D5 26                     637 	.db #0x26	; 38
      0001D6 26                     638 	.db #0x26	; 38
      0001D7 26                     639 	.db #0x26	; 38
      0001D8 26                     640 	.db #0x26	; 38
      0001D9 26                     641 	.db #0x26	; 38
      0001DA 27                     642 	.db #0x27	; 39
      0001DB 28                     643 	.db #0x28	; 40
      0001DC 26                     644 	.db #0x26	; 38
      0001DD 26                     645 	.db #0x26	; 38
      0001DE 26                     646 	.db #0x26	; 38
      0001DF 26                     647 	.db #0x26	; 38
      0001E0 26                     648 	.db #0x26	; 38
      0001E1 26                     649 	.db #0x26	; 38
      0001E2 26                     650 	.db #0x26	; 38
      0001E3 26                     651 	.db #0x26	; 38
      0001E4 26                     652 	.db #0x26	; 38
      0001E5 26                     653 	.db #0x26	; 38
      0001E6 26                     654 	.db #0x26	; 38
      0001E7 26                     655 	.db #0x26	; 38
      0001E8 26                     656 	.db #0x26	; 38
      0001E9 26                     657 	.db #0x26	; 38
      0001EA 26                     658 	.db #0x26	; 38
      0001EB 26                     659 	.db #0x26	; 38
      0001EC 26                     660 	.db #0x26	; 38
      0001ED 26                     661 	.db #0x26	; 38
      0001EE 25                     662 	.db #0x25	; 37
      0001EF 26                     663 	.db #0x26	; 38
      0001F0 26                     664 	.db #0x26	; 38
      0001F1 26                     665 	.db #0x26	; 38
      0001F2 26                     666 	.db #0x26	; 38
      0001F3 26                     667 	.db #0x26	; 38
      0001F4 26                     668 	.db #0x26	; 38
      0001F5 26                     669 	.db #0x26	; 38
      0001F6 26                     670 	.db #0x26	; 38
      0001F7 26                     671 	.db #0x26	; 38
      0001F8 26                     672 	.db #0x26	; 38
      0001F9 26                     673 	.db #0x26	; 38
      0001FA 2A                     674 	.db #0x2a	; 42
      0001FB 29                     675 	.db #0x29	; 41
      0001FC 26                     676 	.db #0x26	; 38
      0001FD 26                     677 	.db #0x26	; 38
      0001FE 26                     678 	.db #0x26	; 38
      0001FF 26                     679 	.db #0x26	; 38
      000200 26                     680 	.db #0x26	; 38
      000201 26                     681 	.db #0x26	; 38
      000202 26                     682 	.db #0x26	; 38
      000203 26                     683 	.db #0x26	; 38
      000204 26                     684 	.db #0x26	; 38
      000205 26                     685 	.db #0x26	; 38
      000206 26                     686 	.db #0x26	; 38
      000207 26                     687 	.db #0x26	; 38
      000208 26                     688 	.db #0x26	; 38
      000209 26                     689 	.db #0x26	; 38
      00020A 26                     690 	.db #0x26	; 38
      00020B 26                     691 	.db #0x26	; 38
      00020C 26                     692 	.db #0x26	; 38
      00020D 26                     693 	.db #0x26	; 38
      00020E 27                     694 	.db #0x27	; 39
      00020F 28                     695 	.db #0x28	; 40
      000210 26                     696 	.db #0x26	; 38
      000211 26                     697 	.db #0x26	; 38
      000212 26                     698 	.db #0x26	; 38
      000213 26                     699 	.db #0x26	; 38
      000214 26                     700 	.db #0x26	; 38
      000215 26                     701 	.db #0x26	; 38
      000216 26                     702 	.db #0x26	; 38
      000217 26                     703 	.db #0x26	; 38
      000218 26                     704 	.db #0x26	; 38
      000219 26                     705 	.db #0x26	; 38
      00021A 26                     706 	.db #0x26	; 38
      00021B 26                     707 	.db #0x26	; 38
      00021C 26                     708 	.db #0x26	; 38
      00021D 26                     709 	.db #0x26	; 38
      00021E 26                     710 	.db #0x26	; 38
      00021F 26                     711 	.db #0x26	; 38
      000220 26                     712 	.db #0x26	; 38
      000221 26                     713 	.db #0x26	; 38
      000222 26                     714 	.db #0x26	; 38
      000223 26                     715 	.db #0x26	; 38
      000224 26                     716 	.db #0x26	; 38
      000225 26                     717 	.db #0x26	; 38
      000226 26                     718 	.db #0x26	; 38
      000227 26                     719 	.db #0x26	; 38
      000228 26                     720 	.db #0x26	; 38
      000229 26                     721 	.db #0x26	; 38
      00022A 26                     722 	.db #0x26	; 38
      00022B 26                     723 	.db #0x26	; 38
      00022C 26                     724 	.db #0x26	; 38
      00022D 26                     725 	.db #0x26	; 38
      00022E 2A                     726 	.db #0x2a	; 42
      00022F 29                     727 	.db #0x29	; 41
      000230 26                     728 	.db #0x26	; 38
      000231 26                     729 	.db #0x26	; 38
      000232 26                     730 	.db #0x26	; 38
      000233 26                     731 	.db #0x26	; 38
      000234 26                     732 	.db #0x26	; 38
      000235 26                     733 	.db #0x26	; 38
      000236 26                     734 	.db #0x26	; 38
      000237 26                     735 	.db #0x26	; 38
      000238 26                     736 	.db #0x26	; 38
      000239 26                     737 	.db #0x26	; 38
      00023A 26                     738 	.db #0x26	; 38
      00023B 26                     739 	.db #0x26	; 38
      00023C 26                     740 	.db #0x26	; 38
      00023D 26                     741 	.db #0x26	; 38
      00023E 26                     742 	.db #0x26	; 38
      00023F 26                     743 	.db #0x26	; 38
      000240 26                     744 	.db #0x26	; 38
      000241 26                     745 	.db #0x26	; 38
      000242 26                     746 	.db #0x26	; 38
      000243 26                     747 	.db #0x26	; 38
      000244 26                     748 	.db #0x26	; 38
      000245 26                     749 	.db #0x26	; 38
      000246 26                     750 	.db #0x26	; 38
      000247 26                     751 	.db #0x26	; 38
      000248 26                     752 	.db #0x26	; 38
      000249 26                     753 	.db #0x26	; 38
      00024A 26                     754 	.db #0x26	; 38
      00024B 26                     755 	.db #0x26	; 38
      00024C 26                     756 	.db #0x26	; 38
      00024D 26                     757 	.db #0x26	; 38
      00024E 26                     758 	.db #0x26	; 38
      00024F 26                     759 	.db #0x26	; 38
      000250 26                     760 	.db #0x26	; 38
      000251 26                     761 	.db #0x26	; 38
      000252 26                     762 	.db #0x26	; 38
      000253 26                     763 	.db #0x26	; 38
      000254 26                     764 	.db #0x26	; 38
      000255 26                     765 	.db #0x26	; 38
      000256 26                     766 	.db #0x26	; 38
      000257 26                     767 	.db #0x26	; 38
      000258 26                     768 	.db #0x26	; 38
      000259 26                     769 	.db #0x26	; 38
      00025A 26                     770 	.db #0x26	; 38
      00025B 26                     771 	.db #0x26	; 38
      00025C 26                     772 	.db #0x26	; 38
      00025D 26                     773 	.db #0x26	; 38
      00025E 26                     774 	.db #0x26	; 38
      00025F 26                     775 	.db #0x26	; 38
      000260 26                     776 	.db #0x26	; 38
      000261 26                     777 	.db #0x26	; 38
      000262 26                     778 	.db #0x26	; 38
      000263 26                     779 	.db #0x26	; 38
      000264 26                     780 	.db #0x26	; 38
      000265 26                     781 	.db #0x26	; 38
      000266 26                     782 	.db #0x26	; 38
      000267 26                     783 	.db #0x26	; 38
      000268 26                     784 	.db #0x26	; 38
      000269 26                     785 	.db #0x26	; 38
      00026A 26                     786 	.db #0x26	; 38
      00026B 26                     787 	.db #0x26	; 38
      00026C 26                     788 	.db #0x26	; 38
      00026D 26                     789 	.db #0x26	; 38
      00026E 26                     790 	.db #0x26	; 38
      00026F 26                     791 	.db #0x26	; 38
      000270 26                     792 	.db #0x26	; 38
      000271 26                     793 	.db #0x26	; 38
      000272 26                     794 	.db #0x26	; 38
      000273 26                     795 	.db #0x26	; 38
      000274 26                     796 	.db #0x26	; 38
      000275 26                     797 	.db #0x26	; 38
      000276 26                     798 	.db #0x26	; 38
      000277 26                     799 	.db #0x26	; 38
      000278 26                     800 	.db #0x26	; 38
      000279 26                     801 	.db #0x26	; 38
      00027A 26                     802 	.db #0x26	; 38
      00027B 26                     803 	.db #0x26	; 38
      00027C 26                     804 	.db #0x26	; 38
      00027D 26                     805 	.db #0x26	; 38
      00027E 26                     806 	.db #0x26	; 38
      00027F 26                     807 	.db #0x26	; 38
      000280 26                     808 	.db #0x26	; 38
      000281 26                     809 	.db #0x26	; 38
      000282 26                     810 	.db #0x26	; 38
      000283 26                     811 	.db #0x26	; 38
      000284 26                     812 	.db #0x26	; 38
      000285 26                     813 	.db #0x26	; 38
      000286 26                     814 	.db #0x26	; 38
      000287 25                     815 	.db #0x25	; 37
      000288 26                     816 	.db #0x26	; 38
      000289 26                     817 	.db #0x26	; 38
      00028A 26                     818 	.db #0x26	; 38
      00028B 26                     819 	.db #0x26	; 38
      00028C 26                     820 	.db #0x26	; 38
      00028D 26                     821 	.db #0x26	; 38
      00028E 26                     822 	.db #0x26	; 38
      00028F 26                     823 	.db #0x26	; 38
      000290 26                     824 	.db #0x26	; 38
      000291 26                     825 	.db #0x26	; 38
      000292 26                     826 	.db #0x26	; 38
      000293 26                     827 	.db #0x26	; 38
      000294 26                     828 	.db #0x26	; 38
      000295 26                     829 	.db #0x26	; 38
      000296 26                     830 	.db #0x26	; 38
      000297 26                     831 	.db #0x26	; 38
      000298 26                     832 	.db #0x26	; 38
      000299 26                     833 	.db #0x26	; 38
      00029A 26                     834 	.db #0x26	; 38
      00029B 26                     835 	.db #0x26	; 38
      00029C 26                     836 	.db #0x26	; 38
      00029D 26                     837 	.db #0x26	; 38
      00029E 26                     838 	.db #0x26	; 38
      00029F 26                     839 	.db #0x26	; 38
      0002A0 26                     840 	.db #0x26	; 38
      0002A1 26                     841 	.db #0x26	; 38
      0002A2 26                     842 	.db #0x26	; 38
      0002A3 26                     843 	.db #0x26	; 38
      0002A4 26                     844 	.db #0x26	; 38
      0002A5 26                     845 	.db #0x26	; 38
      0002A6 26                     846 	.db #0x26	; 38
      0002A7 28                     847 	.db #0x28	; 40
      0002A8 26                     848 	.db #0x26	; 38
      0002A9 26                     849 	.db #0x26	; 38
      0002AA 26                     850 	.db #0x26	; 38
      0002AB 26                     851 	.db #0x26	; 38
      0002AC 26                     852 	.db #0x26	; 38
      0002AD 26                     853 	.db #0x26	; 38
      0002AE 26                     854 	.db #0x26	; 38
      0002AF 26                     855 	.db #0x26	; 38
      0002B0 26                     856 	.db #0x26	; 38
      0002B1 26                     857 	.db #0x26	; 38
      0002B2 26                     858 	.db #0x26	; 38
      0002B3 26                     859 	.db #0x26	; 38
      0002B4 26                     860 	.db #0x26	; 38
      0002B5 26                     861 	.db #0x26	; 38
      0002B6 26                     862 	.db #0x26	; 38
      0002B7 26                     863 	.db #0x26	; 38
      0002B8 26                     864 	.db #0x26	; 38
      0002B9 26                     865 	.db #0x26	; 38
      0002BA 26                     866 	.db #0x26	; 38
      0002BB 26                     867 	.db #0x26	; 38
      0002BC 26                     868 	.db #0x26	; 38
      0002BD 26                     869 	.db #0x26	; 38
      0002BE 26                     870 	.db #0x26	; 38
      0002BF 26                     871 	.db #0x26	; 38
      0002C0 26                     872 	.db #0x26	; 38
      0002C1 26                     873 	.db #0x26	; 38
      0002C2 26                     874 	.db #0x26	; 38
      0002C3 26                     875 	.db #0x26	; 38
      0002C4 26                     876 	.db #0x26	; 38
      0002C5 26                     877 	.db #0x26	; 38
      0002C6 27                     878 	.db #0x27	; 39
      0002C7 29                     879 	.db #0x29	; 41
      0002C8 26                     880 	.db #0x26	; 38
      0002C9 26                     881 	.db #0x26	; 38
      0002CA 26                     882 	.db #0x26	; 38
      0002CB 26                     883 	.db #0x26	; 38
      0002CC 26                     884 	.db #0x26	; 38
      0002CD 26                     885 	.db #0x26	; 38
      0002CE 26                     886 	.db #0x26	; 38
      0002CF 26                     887 	.db #0x26	; 38
      0002D0 26                     888 	.db #0x26	; 38
      0002D1 26                     889 	.db #0x26	; 38
      0002D2 26                     890 	.db #0x26	; 38
      0002D3 26                     891 	.db #0x26	; 38
      0002D4 26                     892 	.db #0x26	; 38
      0002D5 26                     893 	.db #0x26	; 38
      0002D6 26                     894 	.db #0x26	; 38
      0002D7 26                     895 	.db #0x26	; 38
      0002D8 26                     896 	.db #0x26	; 38
      0002D9 26                     897 	.db #0x26	; 38
      0002DA 26                     898 	.db #0x26	; 38
      0002DB 26                     899 	.db #0x26	; 38
      0002DC 26                     900 	.db #0x26	; 38
      0002DD 26                     901 	.db #0x26	; 38
      0002DE 26                     902 	.db #0x26	; 38
      0002DF 26                     903 	.db #0x26	; 38
      0002E0 26                     904 	.db #0x26	; 38
      0002E1 26                     905 	.db #0x26	; 38
      0002E2 26                     906 	.db #0x26	; 38
      0002E3 26                     907 	.db #0x26	; 38
      0002E4 26                     908 	.db #0x26	; 38
      0002E5 26                     909 	.db #0x26	; 38
      0002E6 2A                     910 	.db #0x2a	; 42
      0002E7 26                     911 	.db #0x26	; 38
      0002E8 26                     912 	.db #0x26	; 38
      0002E9 26                     913 	.db #0x26	; 38
      0002EA 26                     914 	.db #0x26	; 38
      0002EB 26                     915 	.db #0x26	; 38
      0002EC 26                     916 	.db #0x26	; 38
      0002ED 26                     917 	.db #0x26	; 38
      0002EE 26                     918 	.db #0x26	; 38
      0002EF 26                     919 	.db #0x26	; 38
      0002F0 26                     920 	.db #0x26	; 38
      0002F1 26                     921 	.db #0x26	; 38
      0002F2 26                     922 	.db #0x26	; 38
      0002F3 26                     923 	.db #0x26	; 38
      0002F4 26                     924 	.db #0x26	; 38
      0002F5 26                     925 	.db #0x26	; 38
      0002F6 26                     926 	.db #0x26	; 38
      0002F7 26                     927 	.db #0x26	; 38
      0002F8 26                     928 	.db #0x26	; 38
      0002F9 26                     929 	.db #0x26	; 38
      0002FA 26                     930 	.db #0x26	; 38
      0002FB 26                     931 	.db #0x26	; 38
      0002FC 26                     932 	.db #0x26	; 38
      0002FD 26                     933 	.db #0x26	; 38
      0002FE 26                     934 	.db #0x26	; 38
      0002FF 26                     935 	.db #0x26	; 38
      000300 26                     936 	.db #0x26	; 38
      000301 26                     937 	.db #0x26	; 38
      000302 26                     938 	.db #0x26	; 38
      000303 26                     939 	.db #0x26	; 38
      000304 26                     940 	.db #0x26	; 38
      000305 26                     941 	.db #0x26	; 38
      000306 26                     942 	.db #0x26	; 38
      000307 26                     943 	.db #0x26	; 38
      000308 26                     944 	.db #0x26	; 38
      000309 26                     945 	.db #0x26	; 38
      00030A 26                     946 	.db #0x26	; 38
      00030B 26                     947 	.db #0x26	; 38
      00030C 26                     948 	.db #0x26	; 38
      00030D 26                     949 	.db #0x26	; 38
      00030E 26                     950 	.db #0x26	; 38
      00030F 26                     951 	.db #0x26	; 38
      000310 26                     952 	.db #0x26	; 38
      000311 26                     953 	.db #0x26	; 38
      000312 26                     954 	.db #0x26	; 38
      000313 26                     955 	.db #0x26	; 38
      000314 26                     956 	.db #0x26	; 38
      000315 26                     957 	.db #0x26	; 38
      000316 26                     958 	.db #0x26	; 38
      000317 26                     959 	.db #0x26	; 38
      000318 26                     960 	.db #0x26	; 38
      000319 26                     961 	.db #0x26	; 38
      00031A 26                     962 	.db #0x26	; 38
      00031B 26                     963 	.db #0x26	; 38
      00031C 26                     964 	.db #0x26	; 38
      00031D 26                     965 	.db #0x26	; 38
      00031E 26                     966 	.db #0x26	; 38
      00031F 26                     967 	.db #0x26	; 38
      000320 26                     968 	.db #0x26	; 38
      000321 26                     969 	.db #0x26	; 38
      000322 26                     970 	.db #0x26	; 38
      000323 26                     971 	.db #0x26	; 38
      000324 26                     972 	.db #0x26	; 38
      000325 26                     973 	.db #0x26	; 38
      000326 26                     974 	.db #0x26	; 38
      000327 26                     975 	.db #0x26	; 38
      000328 26                     976 	.db #0x26	; 38
      000329 26                     977 	.db #0x26	; 38
      00032A 26                     978 	.db #0x26	; 38
      00032B 26                     979 	.db #0x26	; 38
      00032C 26                     980 	.db #0x26	; 38
      00032D 26                     981 	.db #0x26	; 38
      00032E 26                     982 	.db #0x26	; 38
      00032F 26                     983 	.db #0x26	; 38
      000330 26                     984 	.db #0x26	; 38
      000331 26                     985 	.db #0x26	; 38
      000332 26                     986 	.db #0x26	; 38
      000333 26                     987 	.db #0x26	; 38
      000334 26                     988 	.db #0x26	; 38
      000335 26                     989 	.db #0x26	; 38
      000336 26                     990 	.db #0x26	; 38
      000337 26                     991 	.db #0x26	; 38
      000338 26                     992 	.db #0x26	; 38
      000339 26                     993 	.db #0x26	; 38
      00033A 26                     994 	.db #0x26	; 38
      00033B 26                     995 	.db #0x26	; 38
      00033C 26                     996 	.db #0x26	; 38
      00033D 26                     997 	.db #0x26	; 38
      00033E 26                     998 	.db #0x26	; 38
      00033F 26                     999 	.db #0x26	; 38
      000340 26                    1000 	.db #0x26	; 38
      000341 26                    1001 	.db #0x26	; 38
      000342 26                    1002 	.db #0x26	; 38
      000343 26                    1003 	.db #0x26	; 38
      000344 26                    1004 	.db #0x26	; 38
      000345 26                    1005 	.db #0x26	; 38
      000346 26                    1006 	.db #0x26	; 38
      000347 26                    1007 	.db #0x26	; 38
      000348 26                    1008 	.db #0x26	; 38
      000349 26                    1009 	.db #0x26	; 38
      00034A 26                    1010 	.db #0x26	; 38
      00034B 26                    1011 	.db #0x26	; 38
      00034C 26                    1012 	.db #0x26	; 38
      00034D 26                    1013 	.db #0x26	; 38
      00034E 26                    1014 	.db #0x26	; 38
      00034F 26                    1015 	.db #0x26	; 38
      000350 26                    1016 	.db #0x26	; 38
      000351 26                    1017 	.db #0x26	; 38
      000352 26                    1018 	.db #0x26	; 38
      000353 26                    1019 	.db #0x26	; 38
      000354 26                    1020 	.db #0x26	; 38
      000355 26                    1021 	.db #0x26	; 38
      000356 26                    1022 	.db #0x26	; 38
      000357 26                    1023 	.db #0x26	; 38
      000358 26                    1024 	.db #0x26	; 38
      000359 26                    1025 	.db #0x26	; 38
      00035A 26                    1026 	.db #0x26	; 38
      00035B 26                    1027 	.db #0x26	; 38
      00035C 26                    1028 	.db #0x26	; 38
      00035D 26                    1029 	.db #0x26	; 38
      00035E 26                    1030 	.db #0x26	; 38
      00035F 26                    1031 	.db #0x26	; 38
      000360 26                    1032 	.db #0x26	; 38
      000361 26                    1033 	.db #0x26	; 38
      000362 26                    1034 	.db #0x26	; 38
      000363 26                    1035 	.db #0x26	; 38
      000364 26                    1036 	.db #0x26	; 38
      000365 26                    1037 	.db #0x26	; 38
      000366 26                    1038 	.db #0x26	; 38
      000367 26                    1039 	.db #0x26	; 38
      000368 26                    1040 	.db #0x26	; 38
      000369 26                    1041 	.db #0x26	; 38
      00036A 26                    1042 	.db #0x26	; 38
      00036B 26                    1043 	.db #0x26	; 38
      00036C 26                    1044 	.db #0x26	; 38
      00036D 26                    1045 	.db #0x26	; 38
      00036E 26                    1046 	.db #0x26	; 38
      00036F 26                    1047 	.db #0x26	; 38
      000370 26                    1048 	.db #0x26	; 38
      000371 26                    1049 	.db #0x26	; 38
      000372 26                    1050 	.db #0x26	; 38
      000373 26                    1051 	.db #0x26	; 38
      000374 26                    1052 	.db #0x26	; 38
      000375 26                    1053 	.db #0x26	; 38
      000376 26                    1054 	.db #0x26	; 38
      000377 26                    1055 	.db #0x26	; 38
      000378 25                    1056 	.db #0x25	; 37
      000379 26                    1057 	.db #0x26	; 38
      00037A 26                    1058 	.db #0x26	; 38
      00037B 26                    1059 	.db #0x26	; 38
      00037C 26                    1060 	.db #0x26	; 38
      00037D 26                    1061 	.db #0x26	; 38
      00037E 26                    1062 	.db #0x26	; 38
      00037F 26                    1063 	.db #0x26	; 38
      000380 26                    1064 	.db #0x26	; 38
      000381 26                    1065 	.db #0x26	; 38
      000382 26                    1066 	.db #0x26	; 38
      000383 26                    1067 	.db #0x26	; 38
      000384 26                    1068 	.db #0x26	; 38
      000385 26                    1069 	.db #0x26	; 38
      000386 26                    1070 	.db #0x26	; 38
      000387 26                    1071 	.db #0x26	; 38
      000388 26                    1072 	.db #0x26	; 38
      000389 26                    1073 	.db #0x26	; 38
      00038A 26                    1074 	.db #0x26	; 38
      00038B 26                    1075 	.db #0x26	; 38
      00038C 26                    1076 	.db #0x26	; 38
      00038D 26                    1077 	.db #0x26	; 38
      00038E 26                    1078 	.db #0x26	; 38
      00038F 26                    1079 	.db #0x26	; 38
      000390 26                    1080 	.db #0x26	; 38
      000391 26                    1081 	.db #0x26	; 38
      000392 26                    1082 	.db #0x26	; 38
      000393 26                    1083 	.db #0x26	; 38
      000394 26                    1084 	.db #0x26	; 38
      000395 26                    1085 	.db #0x26	; 38
      000396 26                    1086 	.db #0x26	; 38
      000397 26                    1087 	.db #0x26	; 38
      000398 27                    1088 	.db #0x27	; 39
      000399 28                    1089 	.db #0x28	; 40
      00039A 26                    1090 	.db #0x26	; 38
      00039B 26                    1091 	.db #0x26	; 38
      00039C 26                    1092 	.db #0x26	; 38
      00039D 26                    1093 	.db #0x26	; 38
      00039E 26                    1094 	.db #0x26	; 38
      00039F 26                    1095 	.db #0x26	; 38
      0003A0 26                    1096 	.db #0x26	; 38
      0003A1 26                    1097 	.db #0x26	; 38
      0003A2 26                    1098 	.db #0x26	; 38
      0003A3 26                    1099 	.db #0x26	; 38
      0003A4 26                    1100 	.db #0x26	; 38
      0003A5 26                    1101 	.db #0x26	; 38
      0003A6 26                    1102 	.db #0x26	; 38
      0003A7 26                    1103 	.db #0x26	; 38
      0003A8 26                    1104 	.db #0x26	; 38
      0003A9 26                    1105 	.db #0x26	; 38
      0003AA 26                    1106 	.db #0x26	; 38
      0003AB 26                    1107 	.db #0x26	; 38
      0003AC 26                    1108 	.db #0x26	; 38
      0003AD 26                    1109 	.db #0x26	; 38
      0003AE 26                    1110 	.db #0x26	; 38
      0003AF 26                    1111 	.db #0x26	; 38
      0003B0 26                    1112 	.db #0x26	; 38
      0003B1 26                    1113 	.db #0x26	; 38
      0003B2 26                    1114 	.db #0x26	; 38
      0003B3 26                    1115 	.db #0x26	; 38
      0003B4 26                    1116 	.db #0x26	; 38
      0003B5 26                    1117 	.db #0x26	; 38
      0003B6 26                    1118 	.db #0x26	; 38
      0003B7 26                    1119 	.db #0x26	; 38
      0003B8 2A                    1120 	.db #0x2a	; 42
      0003B9 29                    1121 	.db #0x29	; 41
      0003BA 26                    1122 	.db #0x26	; 38
      0003BB 26                    1123 	.db #0x26	; 38
      0003BC 26                    1124 	.db #0x26	; 38
      0003BD 26                    1125 	.db #0x26	; 38
      0003BE 26                    1126 	.db #0x26	; 38
      0003BF 26                    1127 	.db #0x26	; 38
      0003C0 26                    1128 	.db #0x26	; 38
      0003C1 26                    1129 	.db #0x26	; 38
      0003C2 26                    1130 	.db #0x26	; 38
      0003C3 26                    1131 	.db #0x26	; 38
      0003C4 26                    1132 	.db #0x26	; 38
      0003C5 26                    1133 	.db #0x26	; 38
      0003C6 26                    1134 	.db #0x26	; 38
      0003C7 26                    1135 	.db #0x26	; 38
      0003C8 26                    1136 	.db #0x26	; 38
      0003C9 26                    1137 	.db #0x26	; 38
      0003CA 26                    1138 	.db #0x26	; 38
      0003CB 26                    1139 	.db #0x26	; 38
      0003CC 26                    1140 	.db #0x26	; 38
      0003CD 26                    1141 	.db #0x26	; 38
      0003CE 26                    1142 	.db #0x26	; 38
      0003CF 26                    1143 	.db #0x26	; 38
      0003D0 26                    1144 	.db #0x26	; 38
      0003D1 26                    1145 	.db #0x26	; 38
      0003D2 26                    1146 	.db #0x26	; 38
      0003D3 26                    1147 	.db #0x26	; 38
      0003D4 26                    1148 	.db #0x26	; 38
      0003D5 26                    1149 	.db #0x26	; 38
      0003D6 26                    1150 	.db #0x26	; 38
      0003D7 26                    1151 	.db #0x26	; 38
      0003D8 26                    1152 	.db #0x26	; 38
      0003D9 26                    1153 	.db #0x26	; 38
      0003DA 26                    1154 	.db #0x26	; 38
      0003DB 26                    1155 	.db #0x26	; 38
      0003DC 26                    1156 	.db #0x26	; 38
      0003DD 26                    1157 	.db #0x26	; 38
      0003DE 26                    1158 	.db #0x26	; 38
      0003DF 26                    1159 	.db #0x26	; 38
      0003E0 26                    1160 	.db #0x26	; 38
      0003E1 26                    1161 	.db #0x26	; 38
      0003E2 26                    1162 	.db #0x26	; 38
      0003E3 26                    1163 	.db #0x26	; 38
      0003E4 26                    1164 	.db #0x26	; 38
      0003E5 26                    1165 	.db #0x26	; 38
      0003E6 26                    1166 	.db #0x26	; 38
      0003E7 26                    1167 	.db #0x26	; 38
      0003E8 26                    1168 	.db #0x26	; 38
      0003E9 26                    1169 	.db #0x26	; 38
      0003EA 26                    1170 	.db #0x26	; 38
      0003EB 26                    1171 	.db #0x26	; 38
      0003EC 26                    1172 	.db #0x26	; 38
      0003ED 26                    1173 	.db #0x26	; 38
      0003EE 26                    1174 	.db #0x26	; 38
      0003EF 26                    1175 	.db #0x26	; 38
      0003F0 26                    1176 	.db #0x26	; 38
      0003F1 26                    1177 	.db #0x26	; 38
      0003F2 26                    1178 	.db #0x26	; 38
      0003F3 26                    1179 	.db #0x26	; 38
      0003F4 26                    1180 	.db #0x26	; 38
      0003F5 26                    1181 	.db #0x26	; 38
      0003F6 26                    1182 	.db #0x26	; 38
      0003F7 26                    1183 	.db #0x26	; 38
      0003F8 26                    1184 	.db #0x26	; 38
      0003F9 26                    1185 	.db #0x26	; 38
      0003FA 26                    1186 	.db #0x26	; 38
      0003FB 26                    1187 	.db #0x26	; 38
      0003FC 26                    1188 	.db #0x26	; 38
      0003FD 26                    1189 	.db #0x26	; 38
      0003FE 26                    1190 	.db #0x26	; 38
      0003FF 26                    1191 	.db #0x26	; 38
      000400 26                    1192 	.db #0x26	; 38
      000401 26                    1193 	.db #0x26	; 38
      000402 26                    1194 	.db #0x26	; 38
      000403 26                    1195 	.db #0x26	; 38
      000404 26                    1196 	.db #0x26	; 38
      000405 26                    1197 	.db #0x26	; 38
      000406 26                    1198 	.db #0x26	; 38
      000407 26                    1199 	.db #0x26	; 38
      000408 26                    1200 	.db #0x26	; 38
      000409 26                    1201 	.db #0x26	; 38
      00040A 26                    1202 	.db #0x26	; 38
      00040B 26                    1203 	.db #0x26	; 38
      00040C 26                    1204 	.db #0x26	; 38
      00040D 26                    1205 	.db #0x26	; 38
      00040E 26                    1206 	.db #0x26	; 38
      00040F 26                    1207 	.db #0x26	; 38
      000410 26                    1208 	.db #0x26	; 38
      000411 26                    1209 	.db #0x26	; 38
      000412 26                    1210 	.db #0x26	; 38
      000413 26                    1211 	.db #0x26	; 38
      000414 26                    1212 	.db #0x26	; 38
      000415 26                    1213 	.db #0x26	; 38
      000416 26                    1214 	.db #0x26	; 38
      000417 26                    1215 	.db #0x26	; 38
      000418 26                    1216 	.db #0x26	; 38
      000419 26                    1217 	.db #0x26	; 38
      00041A 26                    1218 	.db #0x26	; 38
      00041B 26                    1219 	.db #0x26	; 38
      00041C 26                    1220 	.db #0x26	; 38
      00041D 26                    1221 	.db #0x26	; 38
      00041E 26                    1222 	.db #0x26	; 38
      00041F 26                    1223 	.db #0x26	; 38
      000420 26                    1224 	.db #0x26	; 38
      000421 26                    1225 	.db #0x26	; 38
      000422 26                    1226 	.db #0x26	; 38
      000423 26                    1227 	.db #0x26	; 38
      000424 26                    1228 	.db #0x26	; 38
      000425 26                    1229 	.db #0x26	; 38
      000426 26                    1230 	.db #0x26	; 38
      000427 26                    1231 	.db #0x26	; 38
      000428 26                    1232 	.db #0x26	; 38
      000429 26                    1233 	.db #0x26	; 38
      00042A 26                    1234 	.db #0x26	; 38
      00042B 26                    1235 	.db #0x26	; 38
      00042C 26                    1236 	.db #0x26	; 38
      00042D 26                    1237 	.db #0x26	; 38
      00042E 26                    1238 	.db #0x26	; 38
      00042F 26                    1239 	.db #0x26	; 38
      000430 26                    1240 	.db #0x26	; 38
      000431 26                    1241 	.db #0x26	; 38
      000432 26                    1242 	.db #0x26	; 38
      000433 26                    1243 	.db #0x26	; 38
      000434 26                    1244 	.db #0x26	; 38
      000435 26                    1245 	.db #0x26	; 38
      000436 26                    1246 	.db #0x26	; 38
      000437 26                    1247 	.db #0x26	; 38
      000438 26                    1248 	.db #0x26	; 38
      000439 26                    1249 	.db #0x26	; 38
      00043A 26                    1250 	.db #0x26	; 38
      00043B 26                    1251 	.db #0x26	; 38
      00043C 26                    1252 	.db #0x26	; 38
      00043D 26                    1253 	.db #0x26	; 38
      00043E 26                    1254 	.db #0x26	; 38
      00043F 26                    1255 	.db #0x26	; 38
      000440 26                    1256 	.db #0x26	; 38
      000441 26                    1257 	.db #0x26	; 38
      000442 26                    1258 	.db #0x26	; 38
      000443 26                    1259 	.db #0x26	; 38
      000444 26                    1260 	.db #0x26	; 38
      000445 26                    1261 	.db #0x26	; 38
      000446 26                    1262 	.db #0x26	; 38
      000447 26                    1263 	.db #0x26	; 38
      000448 26                    1264 	.db #0x26	; 38
      000449 26                    1265 	.db #0x26	; 38
      00044A 26                    1266 	.db #0x26	; 38
      00044B 26                    1267 	.db #0x26	; 38
      00044C 26                    1268 	.db #0x26	; 38
      00044D 26                    1269 	.db #0x26	; 38
      00044E 26                    1270 	.db #0x26	; 38
      00044F 26                    1271 	.db #0x26	; 38
      000450 26                    1272 	.db #0x26	; 38
      000451 26                    1273 	.db #0x26	; 38
      000452 26                    1274 	.db #0x26	; 38
      000453 26                    1275 	.db #0x26	; 38
      000454 26                    1276 	.db #0x26	; 38
      000455 26                    1277 	.db #0x26	; 38
      000456 26                    1278 	.db #0x26	; 38
      000457 26                    1279 	.db #0x26	; 38
      000458 26                    1280 	.db #0x26	; 38
      000459 26                    1281 	.db #0x26	; 38
      00045A 26                    1282 	.db #0x26	; 38
      00045B 26                    1283 	.db #0x26	; 38
      00045C 26                    1284 	.db #0x26	; 38
      00045D 26                    1285 	.db #0x26	; 38
      00045E 26                    1286 	.db #0x26	; 38
      00045F 26                    1287 	.db #0x26	; 38
      000460 26                    1288 	.db #0x26	; 38
      000461 26                    1289 	.db #0x26	; 38
      000462 26                    1290 	.db #0x26	; 38
      000463 26                    1291 	.db #0x26	; 38
      000464 26                    1292 	.db #0x26	; 38
      000465 26                    1293 	.db #0x26	; 38
      000466 26                    1294 	.db #0x26	; 38
      000467 26                    1295 	.db #0x26	; 38
      000468 26                    1296 	.db #0x26	; 38
      000469 26                    1297 	.db #0x26	; 38
      00046A 26                    1298 	.db #0x26	; 38
      00046B 26                    1299 	.db #0x26	; 38
      00046C 26                    1300 	.db #0x26	; 38
      00046D 26                    1301 	.db #0x26	; 38
      00046E 26                    1302 	.db #0x26	; 38
      00046F 26                    1303 	.db #0x26	; 38
      000470 26                    1304 	.db #0x26	; 38
      000471 26                    1305 	.db #0x26	; 38
      000472 27                    1306 	.db #0x27	; 39
      000473 28                    1307 	.db #0x28	; 40
      000474 26                    1308 	.db #0x26	; 38
      000475 26                    1309 	.db #0x26	; 38
      000476 26                    1310 	.db #0x26	; 38
      000477 26                    1311 	.db #0x26	; 38
      000478 26                    1312 	.db #0x26	; 38
      000479 26                    1313 	.db #0x26	; 38
      00047A 26                    1314 	.db #0x26	; 38
      00047B 26                    1315 	.db #0x26	; 38
      00047C 26                    1316 	.db #0x26	; 38
      00047D 26                    1317 	.db #0x26	; 38
      00047E 26                    1318 	.db #0x26	; 38
      00047F 26                    1319 	.db #0x26	; 38
      000480 26                    1320 	.db #0x26	; 38
      000481 26                    1321 	.db #0x26	; 38
      000482 26                    1322 	.db #0x26	; 38
      000483 26                    1323 	.db #0x26	; 38
      000484 26                    1324 	.db #0x26	; 38
      000485 26                    1325 	.db #0x26	; 38
      000486 26                    1326 	.db #0x26	; 38
      000487                       1327 _backgroundtiles:
      000487 00                    1328 	.db #0x00	; 0
      000488 00                    1329 	.db #0x00	; 0
      000489 00                    1330 	.db #0x00	; 0
      00048A 00                    1331 	.db #0x00	; 0
      00048B 00                    1332 	.db #0x00	; 0
      00048C 00                    1333 	.db #0x00	; 0
      00048D 18                    1334 	.db #0x18	; 24
      00048E 18                    1335 	.db #0x18	; 24
      00048F 18                    1336 	.db #0x18	; 24
      000490 18                    1337 	.db #0x18	; 24
      000491 00                    1338 	.db #0x00	; 0
      000492 00                    1339 	.db #0x00	; 0
      000493 00                    1340 	.db #0x00	; 0
      000494 00                    1341 	.db #0x00	; 0
      000495 00                    1342 	.db #0x00	; 0
      000496 00                    1343 	.db #0x00	; 0
      000497 00                    1344 	.db #0x00	; 0
      000498 00                    1345 	.db #0x00	; 0
      000499 00                    1346 	.db #0x00	; 0
      00049A 00                    1347 	.db #0x00	; 0
      00049B 00                    1348 	.db #0x00	; 0
      00049C 00                    1349 	.db #0x00	; 0
      00049D 00                    1350 	.db #0x00	; 0
      00049E 00                    1351 	.db #0x00	; 0
      00049F 00                    1352 	.db #0x00	; 0
      0004A0 00                    1353 	.db #0x00	; 0
      0004A1 00                    1354 	.db #0x00	; 0
      0004A2 00                    1355 	.db #0x00	; 0
      0004A3 00                    1356 	.db #0x00	; 0
      0004A4 00                    1357 	.db #0x00	; 0
      0004A5 00                    1358 	.db #0x00	; 0
      0004A6 00                    1359 	.db #0x00	; 0
      0004A7 1F                    1360 	.db #0x1f	; 31
      0004A8 1F                    1361 	.db #0x1f	; 31
      0004A9 3F                    1362 	.db #0x3f	; 63
      0004AA 3F                    1363 	.db #0x3f	; 63
      0004AB 7F                    1364 	.db #0x7f	; 127
      0004AC 7F                    1365 	.db #0x7f	; 127
      0004AD FF                    1366 	.db #0xff	; 255
      0004AE FF                    1367 	.db #0xff	; 255
      0004AF FF                    1368 	.db #0xff	; 255
      0004B0 FF                    1369 	.db #0xff	; 255
      0004B1 FF                    1370 	.db #0xff	; 255
      0004B2 FF                    1371 	.db #0xff	; 255
      0004B3 FF                    1372 	.db #0xff	; 255
      0004B4 FF                    1373 	.db #0xff	; 255
      0004B5 FF                    1374 	.db #0xff	; 255
      0004B6 FF                    1375 	.db #0xff	; 255
      0004B7 F8                    1376 	.db #0xf8	; 248
      0004B8 F8                    1377 	.db #0xf8	; 248
      0004B9 FC                    1378 	.db #0xfc	; 252
      0004BA FC                    1379 	.db #0xfc	; 252
      0004BB FE                    1380 	.db #0xfe	; 254
      0004BC FE                    1381 	.db #0xfe	; 254
      0004BD FF                    1382 	.db #0xff	; 255
      0004BE FF                    1383 	.db #0xff	; 255
      0004BF FF                    1384 	.db #0xff	; 255
      0004C0 FF                    1385 	.db #0xff	; 255
      0004C1 FF                    1386 	.db #0xff	; 255
      0004C2 FF                    1387 	.db #0xff	; 255
      0004C3 FF                    1388 	.db #0xff	; 255
      0004C4 FF                    1389 	.db #0xff	; 255
      0004C5 FF                    1390 	.db #0xff	; 255
      0004C6 FF                    1391 	.db #0xff	; 255
      0004C7 FF                    1392 	.db #0xff	; 255
      0004C8 FF                    1393 	.db #0xff	; 255
      0004C9 FF                    1394 	.db #0xff	; 255
      0004CA FF                    1395 	.db #0xff	; 255
      0004CB FF                    1396 	.db #0xff	; 255
      0004CC FF                    1397 	.db #0xff	; 255
      0004CD FF                    1398 	.db #0xff	; 255
      0004CE FF                    1399 	.db #0xff	; 255
      0004CF FF                    1400 	.db #0xff	; 255
      0004D0 FF                    1401 	.db #0xff	; 255
      0004D1 FE                    1402 	.db #0xfe	; 254
      0004D2 FE                    1403 	.db #0xfe	; 254
      0004D3 FC                    1404 	.db #0xfc	; 252
      0004D4 FC                    1405 	.db #0xfc	; 252
      0004D5 F8                    1406 	.db #0xf8	; 248
      0004D6 F8                    1407 	.db #0xf8	; 248
      0004D7 FF                    1408 	.db #0xff	; 255
      0004D8 FF                    1409 	.db #0xff	; 255
      0004D9 FF                    1410 	.db #0xff	; 255
      0004DA FF                    1411 	.db #0xff	; 255
      0004DB FF                    1412 	.db #0xff	; 255
      0004DC FF                    1413 	.db #0xff	; 255
      0004DD FF                    1414 	.db #0xff	; 255
      0004DE FF                    1415 	.db #0xff	; 255
      0004DF FF                    1416 	.db #0xff	; 255
      0004E0 FF                    1417 	.db #0xff	; 255
      0004E1 7F                    1418 	.db #0x7f	; 127
      0004E2 7F                    1419 	.db #0x7f	; 127
      0004E3 3F                    1420 	.db #0x3f	; 63
      0004E4 3F                    1421 	.db #0x3f	; 63
      0004E5 1F                    1422 	.db #0x1f	; 31
      0004E6 1F                    1423 	.db #0x1f	; 31
      0004E7                       1424 _healthblock:
      0004E7 FE                    1425 	.db #0xfe	; 254
      0004E8 FE                    1426 	.db #0xfe	; 254
      0004E9 FE                    1427 	.db #0xfe	; 254
      0004EA FE                    1428 	.db #0xfe	; 254
      0004EB FE                    1429 	.db #0xfe	; 254
      0004EC FE                    1430 	.db #0xfe	; 254
      0004ED FE                    1431 	.db #0xfe	; 254
      0004EE FE                    1432 	.db #0xfe	; 254
      0004EF FE                    1433 	.db #0xfe	; 254
      0004F0 FE                    1434 	.db #0xfe	; 254
      0004F1 FE                    1435 	.db #0xfe	; 254
      0004F2 FE                    1436 	.db #0xfe	; 254
      0004F3 FE                    1437 	.db #0xfe	; 254
      0004F4 FE                    1438 	.db #0xfe	; 254
      0004F5 00                    1439 	.db #0x00	; 0
      0004F6 00                    1440 	.db #0x00	; 0
      0004F7                       1441 _enemy1:
      0004F7 3C                    1442 	.db #0x3c	; 60
      0004F8 3C                    1443 	.db #0x3c	; 60
      0004F9 7E                    1444 	.db #0x7e	; 126
      0004FA 7E                    1445 	.db #0x7e	; 126
      0004FB FF                    1446 	.db #0xff	; 255
      0004FC FF                    1447 	.db #0xff	; 255
      0004FD FF                    1448 	.db #0xff	; 255
      0004FE FF                    1449 	.db #0xff	; 255
      0004FF FF                    1450 	.db #0xff	; 255
      000500 FF                    1451 	.db #0xff	; 255
      000501 FF                    1452 	.db #0xff	; 255
      000502 FF                    1453 	.db #0xff	; 255
      000503 7E                    1454 	.db #0x7e	; 126
      000504 7E                    1455 	.db #0x7e	; 126
      000505 3C                    1456 	.db #0x3c	; 60
      000506 3C                    1457 	.db #0x3c	; 60
      000507                       1458 _projectile1:
      000507 3C                    1459 	.db #0x3c	; 60
      000508 3C                    1460 	.db #0x3c	; 60
      000509 7E                    1461 	.db #0x7e	; 126
      00050A 7E                    1462 	.db #0x7e	; 126
      00050B FF                    1463 	.db #0xff	; 255
      00050C FF                    1464 	.db #0xff	; 255
      00050D FF                    1465 	.db #0xff	; 255
      00050E FF                    1466 	.db #0xff	; 255
      00050F FF                    1467 	.db #0xff	; 255
      000510 FF                    1468 	.db #0xff	; 255
      000511 FF                    1469 	.db #0xff	; 255
      000512 FF                    1470 	.db #0xff	; 255
      000513 7E                    1471 	.db #0x7e	; 126
      000514 7E                    1472 	.db #0x7e	; 126
      000515 3C                    1473 	.db #0x3c	; 60
      000516 3C                    1474 	.db #0x3c	; 60
      000517                       1475 _ProjectileTiles:
      000517 24                    1476 	.db #0x24	; 36
      000518 18                    1477 	.db #0x18	; 24
      000519 18                    1478 	.db #0x18	; 24
      00051A 3C                    1479 	.db #0x3c	; 60
      00051B 18                    1480 	.db #0x18	; 24
      00051C 3C                    1481 	.db #0x3c	; 60
      00051D 24                    1482 	.db #0x24	; 36
      00051E 18                    1483 	.db #0x18	; 24
      00051F 00                    1484 	.db #0x00	; 0
      000520 00                    1485 	.db #0x00	; 0
      000521 00                    1486 	.db #0x00	; 0
      000522 00                    1487 	.db #0x00	; 0
      000523 00                    1488 	.db #0x00	; 0
      000524 00                    1489 	.db #0x00	; 0
      000525 00                    1490 	.db #0x00	; 0
      000526 00                    1491 	.db #0x00	; 0
      000527 00                    1492 	.db #0x00	; 0
      000528 00                    1493 	.db #0x00	; 0
      000529 00                    1494 	.db #0x00	; 0
      00052A 00                    1495 	.db #0x00	; 0
      00052B 09                    1496 	.db #0x09	; 9
      00052C 06                    1497 	.db #0x06	; 6
      00052D 06                    1498 	.db #0x06	; 6
      00052E 0F                    1499 	.db #0x0f	; 15
      00052F 06                    1500 	.db #0x06	; 6
      000530 0F                    1501 	.db #0x0f	; 15
      000531 09                    1502 	.db #0x09	; 9
      000532 06                    1503 	.db #0x06	; 6
      000533 00                    1504 	.db #0x00	; 0
      000534 00                    1505 	.db #0x00	; 0
      000535 00                    1506 	.db #0x00	; 0
      000536 00                    1507 	.db #0x00	; 0
      000537 09                    1508 	.db #0x09	; 9
      000538 06                    1509 	.db #0x06	; 6
      000539 06                    1510 	.db #0x06	; 6
      00053A 0F                    1511 	.db #0x0f	; 15
      00053B 06                    1512 	.db #0x06	; 6
      00053C 0F                    1513 	.db #0x0f	; 15
      00053D 09                    1514 	.db #0x09	; 9
      00053E 06                    1515 	.db #0x06	; 6
      00053F 00                    1516 	.db #0x00	; 0
      000540 00                    1517 	.db #0x00	; 0
      000541 00                    1518 	.db #0x00	; 0
      000542 00                    1519 	.db #0x00	; 0
      000543 00                    1520 	.db #0x00	; 0
      000544 00                    1521 	.db #0x00	; 0
      000545 00                    1522 	.db #0x00	; 0
      000546 00                    1523 	.db #0x00	; 0
      000547 99                    1524 	.db #0x99	; 153
      000548 66                    1525 	.db #0x66	; 102	'f'
      000549 66                    1526 	.db #0x66	; 102	'f'
      00054A FF                    1527 	.db #0xff	; 255
      00054B 66                    1528 	.db #0x66	; 102	'f'
      00054C FF                    1529 	.db #0xff	; 255
      00054D 99                    1530 	.db #0x99	; 153
      00054E 66                    1531 	.db #0x66	; 102	'f'
      00054F 00                    1532 	.db #0x00	; 0
      000550 00                    1533 	.db #0x00	; 0
      000551 00                    1534 	.db #0x00	; 0
      000552 00                    1535 	.db #0x00	; 0
      000553 00                    1536 	.db #0x00	; 0
      000554 00                    1537 	.db #0x00	; 0
      000555 00                    1538 	.db #0x00	; 0
      000556 00                    1539 	.db #0x00	; 0
      000557 09                    1540 	.db #0x09	; 9
      000558 06                    1541 	.db #0x06	; 6
      000559 06                    1542 	.db #0x06	; 6
      00055A 0F                    1543 	.db #0x0f	; 15
      00055B 06                    1544 	.db #0x06	; 6
      00055C 0F                    1545 	.db #0x0f	; 15
      00055D 09                    1546 	.db #0x09	; 9
      00055E 06                    1547 	.db #0x06	; 6
      00055F 09                    1548 	.db #0x09	; 9
      000560 06                    1549 	.db #0x06	; 6
      000561 06                    1550 	.db #0x06	; 6
      000562 0F                    1551 	.db #0x0f	; 15
      000563 06                    1552 	.db #0x06	; 6
      000564 0F                    1553 	.db #0x0f	; 15
      000565 09                    1554 	.db #0x09	; 9
      000566 06                    1555 	.db #0x06	; 6
      000567 90                    1556 	.db #0x90	; 144
      000568 60                    1557 	.db #0x60	; 96
      000569 60                    1558 	.db #0x60	; 96
      00056A F0                    1559 	.db #0xf0	; 240
      00056B 60                    1560 	.db #0x60	; 96
      00056C F0                    1561 	.db #0xf0	; 240
      00056D 90                    1562 	.db #0x90	; 144
      00056E 60                    1563 	.db #0x60	; 96
      00056F 09                    1564 	.db #0x09	; 9
      000570 06                    1565 	.db #0x06	; 6
      000571 06                    1566 	.db #0x06	; 6
      000572 0F                    1567 	.db #0x0f	; 15
      000573 06                    1568 	.db #0x06	; 6
      000574 0F                    1569 	.db #0x0f	; 15
      000575 09                    1570 	.db #0x09	; 9
      000576 06                    1571 	.db #0x06	; 6
      000577 00                    1572 	.db #0x00	; 0
      000578 00                    1573 	.db #0x00	; 0
      000579 00                    1574 	.db #0x00	; 0
      00057A 00                    1575 	.db #0x00	; 0
      00057B 00                    1576 	.db #0x00	; 0
      00057C 00                    1577 	.db #0x00	; 0
      00057D 00                    1578 	.db #0x00	; 0
      00057E 00                    1579 	.db #0x00	; 0
      00057F 00                    1580 	.db #0x00	; 0
      000580 00                    1581 	.db #0x00	; 0
      000581 00                    1582 	.db #0x00	; 0
      000582 00                    1583 	.db #0x00	; 0
      000583 00                    1584 	.db #0x00	; 0
      000584 00                    1585 	.db #0x00	; 0
      000585 00                    1586 	.db #0x00	; 0
      000586 00                    1587 	.db #0x00	; 0
      000587                       1588 _BLANK:
      000587 26                    1589 	.db #0x26	; 38
      000588                       1590 _EMPTYSPRITE:
      000588 50                    1591 	.db #0x50	; 80	'P'
      000589                       1592 _ENEMYCOUNT:
      000589 05                    1593 	.db #0x05	; 5
      00058A                       1594 _xSpawnPositions:
      00058A 00                    1595 	.db #0x00	; 0
      00058B 60                    1596 	.db #0x60	; 96
      00058C B0                    1597 	.db #0xb0	; 176
      00058D 00                    1598 	.db #0x00	; 0
      00058E B0                    1599 	.db #0xb0	; 176
      00058F 00                    1600 	.db #0x00	; 0
      000590 60                    1601 	.db #0x60	; 96
      000591 B0                    1602 	.db #0xb0	; 176
      000592                       1603 _ySpawnPositions:
      000592 00                    1604 	.db #0x00	; 0
      000593 00                    1605 	.db #0x00	; 0
      000594 00                    1606 	.db #0x00	; 0
      000595 5C                    1607 	.db #0x5c	; 92
      000596 5C                    1608 	.db #0x5c	; 92
      000597 A0                    1609 	.db #0xa0	; 160
      000598 A0                    1610 	.db #0xa0	; 160
      000599 A0                    1611 	.db #0xa0	; 160
      00059A                       1612 _PROJECTILECOUNT:
      00059A 05                    1613 	.db #0x05	; 5
      00059B                       1614 _PLAYERSIZE:
      00059B 08                    1615 	.db #0x08	; 8
      00059C                       1616 _maxHull:
      00059C 64                    1617 	.db #0x64	;  100	'd'
      00059D                       1618 _maxShield:
      00059D 64                    1619 	.db #0x64	;  100	'd'
                                   1620 ;main.c:86: void setHealthBar(uint8_t row, uint8_t hp) {
                                   1621 ;	---------------------------------
                                   1622 ; Function setHealthBar
                                   1623 ; ---------------------------------
      00059E                       1624 _setHealthBar::
      00059E E8 FB                 1625 	add	sp, #-5
                                   1626 ;main.c:87: if (hp >= 80) {
      0005A0 F8 08                 1627 	ldhl	sp,	#8
      0005A2 7E                    1628 	ld	a, (hl)
      0005A3 D6 50                 1629 	sub	a, #0x50
      0005A5 38 31                 1630 	jr	C, 00102$
                                   1631 ;main.c:88: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      0005A7 F8 00                 1632 	ldhl	sp,	#0
      0005A9 4D                    1633 	ld	c, l
      0005AA 44                    1634 	ld	b, h
      0005AB 36 50                 1635 	ld	(hl), #0x50
      0005AD 69                    1636 	ld	l, c
                                   1637 ;	spillPairReg hl
                                   1638 ;	spillPairReg hl
      0005AE 60                    1639 	ld	h, b
                                   1640 ;	spillPairReg hl
                                   1641 ;	spillPairReg hl
      0005AF 23                    1642 	inc	hl
      0005B0 36 50                 1643 	ld	(hl), #0x50
      0005B2 69                    1644 	ld	l, c
                                   1645 ;	spillPairReg hl
                                   1646 ;	spillPairReg hl
      0005B3 60                    1647 	ld	h, b
                                   1648 ;	spillPairReg hl
                                   1649 ;	spillPairReg hl
      0005B4 23                    1650 	inc	hl
      0005B5 23                    1651 	inc	hl
      0005B6 36 50                 1652 	ld	(hl), #0x50
      0005B8 69                    1653 	ld	l, c
                                   1654 ;	spillPairReg hl
                                   1655 ;	spillPairReg hl
      0005B9 60                    1656 	ld	h, b
                                   1657 ;	spillPairReg hl
                                   1658 ;	spillPairReg hl
      0005BA 23                    1659 	inc	hl
      0005BB 23                    1660 	inc	hl
      0005BC 23                    1661 	inc	hl
      0005BD 36 50                 1662 	ld	(hl), #0x50
      0005BF 21 04 00              1663 	ld	hl, #0x0004
      0005C2 09                    1664 	add	hl, bc
      0005C3 36 50                 1665 	ld	(hl), #0x50
                                   1666 ;main.c:89: set_win_tiles(5,row,5,1,blockmap);
      0005C5 C5                    1667 	push	bc
      0005C6 21 05 01              1668 	ld	hl, #0x105
      0005C9 E5                    1669 	push	hl
      0005CA F8 0B                 1670 	ldhl	sp,	#11
      0005CC 66                    1671 	ld	h, (hl)
      0005CD 2E 05                 1672 	ld	l, #0x05
      0005CF E5                    1673 	push	hl
      0005D0 CDr00r00              1674 	call	_set_win_tiles
      0005D3 E8 06                 1675 	add	sp, #6
                                   1676 ;main.c:90: return;
      0005D5 C3rACr06              1677 	jp	00109$
      0005D8                       1678 00102$:
                                   1679 ;main.c:92: if (hp >= 60) {
      0005D8 F8 08                 1680 	ldhl	sp,	#8
      0005DA 7E                    1681 	ld	a, (hl)
      0005DB D6 3C                 1682 	sub	a, #0x3c
      0005DD 38 31                 1683 	jr	C, 00104$
                                   1684 ;main.c:93: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      0005DF F8 00                 1685 	ldhl	sp,	#0
      0005E1 4D                    1686 	ld	c, l
      0005E2 44                    1687 	ld	b, h
      0005E3 36 50                 1688 	ld	(hl), #0x50
      0005E5 69                    1689 	ld	l, c
                                   1690 ;	spillPairReg hl
                                   1691 ;	spillPairReg hl
      0005E6 60                    1692 	ld	h, b
                                   1693 ;	spillPairReg hl
                                   1694 ;	spillPairReg hl
      0005E7 23                    1695 	inc	hl
      0005E8 36 50                 1696 	ld	(hl), #0x50
      0005EA 69                    1697 	ld	l, c
                                   1698 ;	spillPairReg hl
                                   1699 ;	spillPairReg hl
      0005EB 60                    1700 	ld	h, b
                                   1701 ;	spillPairReg hl
                                   1702 ;	spillPairReg hl
      0005EC 23                    1703 	inc	hl
      0005ED 23                    1704 	inc	hl
      0005EE 36 50                 1705 	ld	(hl), #0x50
      0005F0 69                    1706 	ld	l, c
                                   1707 ;	spillPairReg hl
                                   1708 ;	spillPairReg hl
      0005F1 60                    1709 	ld	h, b
                                   1710 ;	spillPairReg hl
                                   1711 ;	spillPairReg hl
      0005F2 23                    1712 	inc	hl
      0005F3 23                    1713 	inc	hl
      0005F4 23                    1714 	inc	hl
      0005F5 36 50                 1715 	ld	(hl), #0x50
      0005F7 21 04 00              1716 	ld	hl, #0x0004
      0005FA 09                    1717 	add	hl, bc
      0005FB 36 00                 1718 	ld	(hl), #0x00
                                   1719 ;main.c:94: set_win_tiles(5,row,5,1,blockmap);
      0005FD C5                    1720 	push	bc
      0005FE 21 05 01              1721 	ld	hl, #0x105
      000601 E5                    1722 	push	hl
      000602 F8 0B                 1723 	ldhl	sp,	#11
      000604 66                    1724 	ld	h, (hl)
      000605 2E 05                 1725 	ld	l, #0x05
      000607 E5                    1726 	push	hl
      000608 CDr00r00              1727 	call	_set_win_tiles
      00060B E8 06                 1728 	add	sp, #6
                                   1729 ;main.c:95: return;
      00060D C3rACr06              1730 	jp	00109$
      000610                       1731 00104$:
                                   1732 ;main.c:97: if (hp >= 40) {
      000610 F8 08                 1733 	ldhl	sp,	#8
      000612 7E                    1734 	ld	a, (hl)
      000613 D6 28                 1735 	sub	a, #0x28
      000615 38 30                 1736 	jr	C, 00106$
                                   1737 ;main.c:98: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000617 F8 00                 1738 	ldhl	sp,	#0
      000619 4D                    1739 	ld	c, l
      00061A 44                    1740 	ld	b, h
      00061B 36 50                 1741 	ld	(hl), #0x50
      00061D 69                    1742 	ld	l, c
                                   1743 ;	spillPairReg hl
                                   1744 ;	spillPairReg hl
      00061E 60                    1745 	ld	h, b
                                   1746 ;	spillPairReg hl
                                   1747 ;	spillPairReg hl
      00061F 23                    1748 	inc	hl
      000620 36 50                 1749 	ld	(hl), #0x50
      000622 69                    1750 	ld	l, c
                                   1751 ;	spillPairReg hl
                                   1752 ;	spillPairReg hl
      000623 60                    1753 	ld	h, b
                                   1754 ;	spillPairReg hl
                                   1755 ;	spillPairReg hl
      000624 23                    1756 	inc	hl
      000625 23                    1757 	inc	hl
      000626 36 50                 1758 	ld	(hl), #0x50
      000628 59                    1759 	ld	e, c
      000629 50                    1760 	ld	d, b
      00062A 13                    1761 	inc	de
      00062B 13                    1762 	inc	de
      00062C 13                    1763 	inc	de
      00062D AF                    1764 	xor	a, a
      00062E 12                    1765 	ld	(de), a
      00062F 21 04 00              1766 	ld	hl, #0x0004
      000632 09                    1767 	add	hl, bc
      000633 36 00                 1768 	ld	(hl), #0x00
                                   1769 ;main.c:99: set_win_tiles(5,row,5,1,blockmap);
      000635 C5                    1770 	push	bc
      000636 21 05 01              1771 	ld	hl, #0x105
      000639 E5                    1772 	push	hl
      00063A F8 0B                 1773 	ldhl	sp,	#11
      00063C 66                    1774 	ld	h, (hl)
      00063D 2E 05                 1775 	ld	l, #0x05
      00063F E5                    1776 	push	hl
      000640 CDr00r00              1777 	call	_set_win_tiles
      000643 E8 06                 1778 	add	sp, #6
                                   1779 ;main.c:100: return;
      000645 18 65                 1780 	jr	00109$
      000647                       1781 00106$:
                                   1782 ;main.c:102: if (hp >= 20) {
      000647 F8 08                 1783 	ldhl	sp,	#8
      000649 7E                    1784 	ld	a, (hl)
      00064A D6 14                 1785 	sub	a, #0x14
      00064C 38 30                 1786 	jr	C, 00108$
                                   1787 ;main.c:103: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      00064E F8 00                 1788 	ldhl	sp,	#0
      000650 4D                    1789 	ld	c, l
      000651 44                    1790 	ld	b, h
      000652 36 50                 1791 	ld	(hl), #0x50
      000654 69                    1792 	ld	l, c
                                   1793 ;	spillPairReg hl
                                   1794 ;	spillPairReg hl
      000655 60                    1795 	ld	h, b
                                   1796 ;	spillPairReg hl
                                   1797 ;	spillPairReg hl
      000656 23                    1798 	inc	hl
      000657 36 50                 1799 	ld	(hl), #0x50
      000659 59                    1800 	ld	e, c
      00065A 50                    1801 	ld	d, b
      00065B 13                    1802 	inc	de
      00065C 13                    1803 	inc	de
      00065D AF                    1804 	xor	a, a
      00065E 12                    1805 	ld	(de), a
      00065F 59                    1806 	ld	e, c
      000660 50                    1807 	ld	d, b
      000661 13                    1808 	inc	de
      000662 13                    1809 	inc	de
      000663 13                    1810 	inc	de
      000664 AF                    1811 	xor	a, a
      000665 12                    1812 	ld	(de), a
      000666 21 04 00              1813 	ld	hl, #0x0004
      000669 09                    1814 	add	hl, bc
      00066A 36 00                 1815 	ld	(hl), #0x00
                                   1816 ;main.c:104: set_win_tiles(5,row,5,1,blockmap);
      00066C C5                    1817 	push	bc
      00066D 21 05 01              1818 	ld	hl, #0x105
      000670 E5                    1819 	push	hl
      000671 F8 0B                 1820 	ldhl	sp,	#11
      000673 66                    1821 	ld	h, (hl)
      000674 2E 05                 1822 	ld	l, #0x05
      000676 E5                    1823 	push	hl
      000677 CDr00r00              1824 	call	_set_win_tiles
      00067A E8 06                 1825 	add	sp, #6
                                   1826 ;main.c:105: return;
      00067C 18 2E                 1827 	jr	00109$
      00067E                       1828 00108$:
                                   1829 ;main.c:107: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      00067E F8 00                 1830 	ldhl	sp,	#0
      000680 4D                    1831 	ld	c, l
      000681 44                    1832 	ld	b, h
      000682 36 50                 1833 	ld	(hl), #0x50
      000684 59                    1834 	ld	e, c
      000685 50                    1835 	ld	d, b
      000686 13                    1836 	inc	de
      000687 AF                    1837 	xor	a, a
      000688 12                    1838 	ld	(de), a
      000689 59                    1839 	ld	e, c
      00068A 50                    1840 	ld	d, b
      00068B 13                    1841 	inc	de
      00068C 13                    1842 	inc	de
      00068D AF                    1843 	xor	a, a
      00068E 12                    1844 	ld	(de), a
      00068F 59                    1845 	ld	e, c
      000690 50                    1846 	ld	d, b
      000691 13                    1847 	inc	de
      000692 13                    1848 	inc	de
      000693 13                    1849 	inc	de
      000694 AF                    1850 	xor	a, a
      000695 12                    1851 	ld	(de), a
      000696 21 04 00              1852 	ld	hl, #0x0004
      000699 09                    1853 	add	hl, bc
      00069A 36 00                 1854 	ld	(hl), #0x00
                                   1855 ;main.c:108: set_win_tiles(5,row,5,1,blockmap);
      00069C C5                    1856 	push	bc
      00069D 21 05 01              1857 	ld	hl, #0x105
      0006A0 E5                    1858 	push	hl
      0006A1 F8 0B                 1859 	ldhl	sp,	#11
      0006A3 66                    1860 	ld	h, (hl)
      0006A4 2E 05                 1861 	ld	l, #0x05
      0006A6 E5                    1862 	push	hl
      0006A7 CDr00r00              1863 	call	_set_win_tiles
      0006AA E8 06                 1864 	add	sp, #6
                                   1865 ;main.c:109: return;
      0006AC                       1866 00109$:
                                   1867 ;main.c:111: }
      0006AC E8 05                 1868 	add	sp, #5
      0006AE C9                    1869 	ret
                                   1870 ;main.c:113: void updateDirection() {
                                   1871 ;	---------------------------------
                                   1872 ; Function updateDirection
                                   1873 ; ---------------------------------
      0006AF                       1874 _updateDirection::
      0006AF E8 FC                 1875 	add	sp, #-4
                                   1876 ;main.c:117: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      0006B1 21r87r00              1877 	ld	hl, #_joydata
      0006B4 5E                    1878 	ld	e, (hl)
      0006B5 7B                    1879 	ld	a, e
      0006B6 E6 01                 1880 	and	a, #0x01
      0006B8 F8 00                 1881 	ldhl	sp,	#0
      0006BA 22                    1882 	ld	(hl+), a
      0006BB AF                    1883 	xor	a, a
      0006BC 22                    1884 	ld	(hl+), a
      0006BD 7B                    1885 	ld	a, e
      0006BE E6 04                 1886 	and	a, #0x04
      0006C0 22                    1887 	ld	(hl+), a
      0006C1 AF                    1888 	xor	a, a
      0006C2 32                    1889 	ld	(hl-), a
      0006C3 2B                    1890 	dec	hl
      0006C4 7B                    1891 	ld	a, e
      0006C5 E6 08                 1892 	and	a, #0x08
      0006C7 4F                    1893 	ld	c, a
      0006C8 06 00                 1894 	ld	b, #0x00
      0006CA 3A                    1895 	ld	a, (hl-)
      0006CB B6                    1896 	or	a, (hl)
      0006CC 28 14                 1897 	jr	Z, 00102$
      0006CE F8 03                 1898 	ldhl	sp,	#3
      0006D0 3A                    1899 	ld	a, (hl-)
      0006D1 B6                    1900 	or	a, (hl)
      0006D2 20 0E                 1901 	jr	NZ, 00102$
      0006D4 78                    1902 	ld	a, b
      0006D5 B1                    1903 	or	a, c
      0006D6 20 0A                 1904 	jr	NZ, 00102$
                                   1905 ;main.c:118: xDir = 1;
      0006D8 21r30r00              1906 	ld	hl, #_xDir
      0006DB 36 01                 1907 	ld	(hl), #0x01
                                   1908 ;main.c:119: yDir = 0;
      0006DD 21r31r00              1909 	ld	hl, #_yDir
      0006E0 36 00                 1910 	ld	(hl), #0x00
      0006E2                       1911 00102$:
                                   1912 ;main.c:121: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      0006E2 7B                    1913 	ld	a, e
      0006E3 E6 02                 1914 	and	a, #0x02
      0006E5 5F                    1915 	ld	e, a
      0006E6 16 00                 1916 	ld	d, #0x00
      0006E8 7A                    1917 	ld	a, d
      0006E9 B3                    1918 	or	a, e
      0006EA 28 14                 1919 	jr	Z, 00106$
      0006EC F8 03                 1920 	ldhl	sp,	#3
      0006EE 3A                    1921 	ld	a, (hl-)
      0006EF B6                    1922 	or	a, (hl)
      0006F0 20 0E                 1923 	jr	NZ, 00106$
      0006F2 78                    1924 	ld	a, b
      0006F3 B1                    1925 	or	a, c
      0006F4 20 0A                 1926 	jr	NZ, 00106$
                                   1927 ;main.c:122: xDir = -1;
      0006F6 21r30r00              1928 	ld	hl, #_xDir
      0006F9 36 FF                 1929 	ld	(hl), #0xff
                                   1930 ;main.c:123: yDir = 0;
      0006FB 21r31r00              1931 	ld	hl, #_yDir
      0006FE 36 00                 1932 	ld	(hl), #0x00
      000700                       1933 00106$:
                                   1934 ;main.c:125: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000700 F8 03                 1935 	ldhl	sp,	#3
      000702 3A                    1936 	ld	a, (hl-)
      000703 B6                    1937 	or	a, (hl)
      000704 28 13                 1938 	jr	Z, 00110$
      000706 7A                    1939 	ld	a, d
      000707 B3                    1940 	or	a, e
      000708 20 0F                 1941 	jr	NZ, 00110$
      00070A 2B                    1942 	dec	hl
      00070B 3A                    1943 	ld	a, (hl-)
      00070C B6                    1944 	or	a, (hl)
      00070D 20 0A                 1945 	jr	NZ, 00110$
                                   1946 ;main.c:126: xDir = 0;
      00070F 21r30r00              1947 	ld	hl, #_xDir
      000712 36 00                 1948 	ld	(hl), #0x00
                                   1949 ;main.c:127: yDir = -1;
      000714 21r31r00              1950 	ld	hl, #_yDir
      000717 36 FF                 1951 	ld	(hl), #0xff
      000719                       1952 00110$:
                                   1953 ;main.c:129: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000719 78                    1954 	ld	a, b
      00071A B1                    1955 	or	a, c
      00071B 28 14                 1956 	jr	Z, 00114$
      00071D 7A                    1957 	ld	a, d
      00071E B3                    1958 	or	a, e
      00071F 20 10                 1959 	jr	NZ, 00114$
      000721 F8 01                 1960 	ldhl	sp,	#1
      000723 3A                    1961 	ld	a, (hl-)
      000724 B6                    1962 	or	a, (hl)
      000725 20 0A                 1963 	jr	NZ, 00114$
                                   1964 ;main.c:130: xDir = 0;
      000727 21r30r00              1965 	ld	hl, #_xDir
      00072A 36 00                 1966 	ld	(hl), #0x00
                                   1967 ;main.c:131: yDir = 1;
      00072C 21r31r00              1968 	ld	hl, #_yDir
      00072F 36 01                 1969 	ld	(hl), #0x01
      000731                       1970 00114$:
                                   1971 ;main.c:135: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000731 F8 03                 1972 	ldhl	sp,	#3
      000733 3A                    1973 	ld	a, (hl-)
      000734 B6                    1974 	or	a, (hl)
      000735 28 0F                 1975 	jr	Z, 00118$
      000737 2B                    1976 	dec	hl
      000738 3A                    1977 	ld	a, (hl-)
      000739 B6                    1978 	or	a, (hl)
      00073A 28 0A                 1979 	jr	Z, 00118$
                                   1980 ;main.c:136: xDir = 1;
      00073C 21r30r00              1981 	ld	hl, #_xDir
      00073F 36 01                 1982 	ld	(hl), #0x01
                                   1983 ;main.c:137: yDir = -1;
      000741 21r31r00              1984 	ld	hl, #_yDir
      000744 36 FF                 1985 	ld	(hl), #0xff
      000746                       1986 00118$:
                                   1987 ;main.c:139: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000746 F8 03                 1988 	ldhl	sp,	#3
      000748 3A                    1989 	ld	a, (hl-)
      000749 B6                    1990 	or	a, (hl)
      00074A 28 0E                 1991 	jr	Z, 00121$
      00074C 7A                    1992 	ld	a, d
      00074D B3                    1993 	or	a, e
      00074E 28 0A                 1994 	jr	Z, 00121$
                                   1995 ;main.c:140: xDir = -1;
      000750 21r30r00              1996 	ld	hl, #_xDir
      000753 36 FF                 1997 	ld	(hl), #0xff
                                   1998 ;main.c:141: yDir = -1;
      000755 21r31r00              1999 	ld	hl, #_yDir
      000758 36 FF                 2000 	ld	(hl), #0xff
      00075A                       2001 00121$:
                                   2002 ;main.c:143: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      00075A 78                    2003 	ld	a, b
      00075B B1                    2004 	or	a, c
      00075C 28 10                 2005 	jr	Z, 00124$
      00075E F8 01                 2006 	ldhl	sp,	#1
      000760 3A                    2007 	ld	a, (hl-)
      000761 B6                    2008 	or	a, (hl)
      000762 28 0A                 2009 	jr	Z, 00124$
                                   2010 ;main.c:144: xDir = 1;
      000764 21r30r00              2011 	ld	hl, #_xDir
      000767 36 01                 2012 	ld	(hl), #0x01
                                   2013 ;main.c:145: yDir = 1;
      000769 21r31r00              2014 	ld	hl, #_yDir
      00076C 36 01                 2015 	ld	(hl), #0x01
      00076E                       2016 00124$:
                                   2017 ;main.c:147: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      00076E 78                    2018 	ld	a, b
      00076F B1                    2019 	or	a, c
      000770 28 0E                 2020 	jr	Z, 00127$
      000772 7A                    2021 	ld	a, d
      000773 B3                    2022 	or	a, e
      000774 28 0A                 2023 	jr	Z, 00127$
                                   2024 ;main.c:148: xDir = -1;
      000776 21r30r00              2025 	ld	hl, #_xDir
      000779 36 FF                 2026 	ld	(hl), #0xff
                                   2027 ;main.c:149: yDir = 1;
      00077B 21r31r00              2028 	ld	hl, #_yDir
      00077E 36 01                 2029 	ld	(hl), #0x01
      000780                       2030 00127$:
                                   2031 ;main.c:154: if (xDir == 0 && yDir == 0) {
      000780 FAr30r00              2032 	ld	a, (#_xDir)
      000783 B7                    2033 	or	a, a
      000784 20 07                 2034 	jr	NZ, 00130$
      000786 FAr31r00              2035 	ld	a, (#_yDir)
      000789 B7                    2036 	or	a, a
                                   2037 ;main.c:155: return;
      00078A CAr3Br08              2038 	jp	Z,00157$
      00078D                       2039 00130$:
                                   2040 ;main.c:158: uint8_t direction = 0;
      00078D 0E 00                 2041 	ld	c, #0x00
                                   2042 ;main.c:160: if (xDir == 0 && yDir < 0) {
      00078F FAr31r00              2043 	ld	a, (#_yDir)
      000792 07                    2044 	rlca
      000793 E6 01                 2045 	and	a,#0x01
      000795 F8 02                 2046 	ldhl	sp,	#2
      000797 77                    2047 	ld	(hl), a
      000798 FAr30r00              2048 	ld	a, (#_xDir)
      00079B B7                    2049 	or	a, a
      00079C 20 08                 2050 	jr	NZ, 00133$
      00079E F8 02                 2051 	ldhl	sp,	#2
      0007A0 7E                    2052 	ld	a, (hl)
      0007A1 B7                    2053 	or	a, a
      0007A2 28 02                 2054 	jr	Z, 00133$
                                   2055 ;main.c:161: direction = 0;
      0007A4 0E 00                 2056 	ld	c, #0x00
      0007A6                       2057 00133$:
                                   2058 ;main.c:163: if (xDir > 0 && yDir < 0) {
      0007A6 21r30r00              2059 	ld	hl, #_xDir
      0007A9 5E                    2060 	ld	e, (hl)
      0007AA AF                    2061 	xor	a, a
      0007AB 57                    2062 	ld	d, a
      0007AC 96                    2063 	sub	a, (hl)
      0007AD CB 7B                 2064 	bit	7, e
      0007AF 28 07                 2065 	jr	Z, 00349$
      0007B1 CB 7A                 2066 	bit	7, d
      0007B3 20 08                 2067 	jr	NZ, 00350$
      0007B5 BF                    2068 	cp	a, a
      0007B6 18 05                 2069 	jr	00350$
      0007B8                       2070 00349$:
      0007B8 CB 7A                 2071 	bit	7, d
      0007BA 28 01                 2072 	jr	Z, 00350$
      0007BC 37                    2073 	scf
      0007BD                       2074 00350$:
      0007BD 3E 00                 2075 	ld	a, #0x00
      0007BF 17                    2076 	rla
      0007C0 47                    2077 	ld	b, a
      0007C1 B7                    2078 	or	a, a
      0007C2 28 08                 2079 	jr	Z, 00136$
      0007C4 F8 02                 2080 	ldhl	sp,	#2
      0007C6 7E                    2081 	ld	a, (hl)
      0007C7 B7                    2082 	or	a, a
      0007C8 28 02                 2083 	jr	Z, 00136$
                                   2084 ;main.c:164: direction = 1;
      0007CA 0E 01                 2085 	ld	c, #0x01
      0007CC                       2086 00136$:
                                   2087 ;main.c:166: if (xDir > 0 && yDir == 0) {
      0007CC 78                    2088 	ld	a, b
      0007CD B7                    2089 	or	a, a
      0007CE 28 08                 2090 	jr	Z, 00139$
      0007D0 FAr31r00              2091 	ld	a, (#_yDir)
      0007D3 B7                    2092 	or	a, a
      0007D4 20 02                 2093 	jr	NZ, 00139$
                                   2094 ;main.c:167: direction = 2;
      0007D6 0E 02                 2095 	ld	c, #0x02
      0007D8                       2096 00139$:
                                   2097 ;main.c:169: if (xDir > 0 && yDir > 0) {
      0007D8 21r31r00              2098 	ld	hl, #_yDir
      0007DB 5E                    2099 	ld	e, (hl)
      0007DC AF                    2100 	xor	a, a
      0007DD 57                    2101 	ld	d, a
      0007DE 96                    2102 	sub	a, (hl)
      0007DF CB 7B                 2103 	bit	7, e
      0007E1 28 07                 2104 	jr	Z, 00351$
      0007E3 CB 7A                 2105 	bit	7, d
      0007E5 20 08                 2106 	jr	NZ, 00352$
      0007E7 BF                    2107 	cp	a, a
      0007E8 18 05                 2108 	jr	00352$
      0007EA                       2109 00351$:
      0007EA CB 7A                 2110 	bit	7, d
      0007EC 28 01                 2111 	jr	Z, 00352$
      0007EE 37                    2112 	scf
      0007EF                       2113 00352$:
      0007EF 3E 00                 2114 	ld	a, #0x00
      0007F1 17                    2115 	rla
      0007F2 F8 03                 2116 	ldhl	sp,	#3
      0007F4 77                    2117 	ld	(hl), a
      0007F5 78                    2118 	ld	a, b
      0007F6 B7                    2119 	or	a, a
      0007F7 28 06                 2120 	jr	Z, 00142$
      0007F9 7E                    2121 	ld	a, (hl)
      0007FA B7                    2122 	or	a, a
      0007FB 28 02                 2123 	jr	Z, 00142$
                                   2124 ;main.c:170: direction = 3;
      0007FD 0E 03                 2125 	ld	c, #0x03
      0007FF                       2126 00142$:
                                   2127 ;main.c:172: if (xDir == 0 && yDir > 0) {
      0007FF FAr30r00              2128 	ld	a, (#_xDir)
      000802 B7                    2129 	or	a, a
      000803 20 08                 2130 	jr	NZ, 00145$
      000805 F8 03                 2131 	ldhl	sp,	#3
      000807 7E                    2132 	ld	a, (hl)
      000808 B7                    2133 	or	a, a
      000809 28 02                 2134 	jr	Z, 00145$
                                   2135 ;main.c:173: direction = 4;
      00080B 0E 04                 2136 	ld	c, #0x04
      00080D                       2137 00145$:
                                   2138 ;main.c:175: if (xDir < 0 && yDir > 0) {
      00080D FAr30r00              2139 	ld	a, (#_xDir)
      000810 07                    2140 	rlca
      000811 E6 01                 2141 	and	a,#0x01
      000813 47                    2142 	ld	b, a
      000814 B7                    2143 	or	a, a
      000815 28 08                 2144 	jr	Z, 00148$
      000817 F8 03                 2145 	ldhl	sp,	#3
      000819 7E                    2146 	ld	a, (hl)
      00081A B7                    2147 	or	a, a
      00081B 28 02                 2148 	jr	Z, 00148$
                                   2149 ;main.c:176: direction = 5;
      00081D 0E 05                 2150 	ld	c, #0x05
      00081F                       2151 00148$:
                                   2152 ;main.c:178: if (xDir < 0 && yDir == 0) {
      00081F 78                    2153 	ld	a, b
      000820 B7                    2154 	or	a, a
      000821 28 08                 2155 	jr	Z, 00151$
      000823 FAr31r00              2156 	ld	a, (#_yDir)
      000826 B7                    2157 	or	a, a
      000827 20 02                 2158 	jr	NZ, 00151$
                                   2159 ;main.c:179: direction = 6;
      000829 0E 06                 2160 	ld	c, #0x06
      00082B                       2161 00151$:
                                   2162 ;main.c:181: if (xDir < 0 && yDir < 0) {
      00082B 78                    2163 	ld	a, b
      00082C B7                    2164 	or	a, a
      00082D 28 08                 2165 	jr	Z, 00154$
      00082F F8 02                 2166 	ldhl	sp,	#2
      000831 7E                    2167 	ld	a, (hl)
      000832 B7                    2168 	or	a, a
      000833 28 02                 2169 	jr	Z, 00154$
                                   2170 ;main.c:182: direction = 7;
      000835 0E 07                 2171 	ld	c, #0x07
      000837                       2172 00154$:
                                   2173 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000837 21r02r00              2174 	ld	hl, #(_shadow_OAM + 2)
      00083A 71                    2175 	ld	(hl), c
                                   2176 ;main.c:185: set_sprite_tile(0, direction);
      00083B                       2177 00157$:
                                   2178 ;main.c:186: }
      00083B E8 04                 2179 	add	sp, #4
      00083D C9                    2180 	ret
                                   2181 ;main.c:218: void updateEnemyPositions() {
                                   2182 ;	---------------------------------
                                   2183 ; Function updateEnemyPositions
                                   2184 ; ---------------------------------
      00083E                       2185 _updateEnemyPositions::
      00083E E8 F0                 2186 	add	sp, #-16
                                   2187 ;main.c:220: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000840 F8 0F                 2188 	ldhl	sp,	#15
      000842 36 00                 2189 	ld	(hl), #0x00
      000844                       2190 00140$:
      000844 21r89r05              2191 	ld	hl, #_ENEMYCOUNT
      000847 4E                    2192 	ld	c, (hl)
      000848 F8 0F                 2193 	ldhl	sp,	#15
      00084A 7E                    2194 	ld	a, (hl)
      00084B 91                    2195 	sub	a, c
      00084C D2r65r0C              2196 	jp	NC, 00117$
                                   2197 ;main.c:222: enemies[i].x -= xOverflow;
      00084F 7E                    2198 	ld	a, (hl)
      000850 16 00                 2199 	ld	d, #0x00
      000852 87                    2200 	add	a, a
      000853 CB 12                 2201 	rl	d
      000855 87                    2202 	add	a, a
      000856 CB 12                 2203 	rl	d
      000858 87                    2204 	add	a, a
      000859 CB 12                 2205 	rl	d
      00085B 87                    2206 	add	a, a
      00085C CB 12                 2207 	rl	d
                                   2208 ;main.c:232: if (enemies[i].y < playerDrawY) {
      00085E 5F                    2209 	ld	e, a
      00085F 21r00r00              2210 	ld	hl, #_enemies
      000862 19                    2211 	add	hl, de
      000863 E5                    2212 	push	hl
      000864 7D                    2213 	ld	a, l
      000865 F8 06                 2214 	ldhl	sp,	#6
      000867 77                    2215 	ld	(hl), a
      000868 E1                    2216 	pop	hl
      000869 7C                    2217 	ld	a, h
      00086A F8 05                 2218 	ldhl	sp,	#5
                                   2219 ;main.c:222: enemies[i].x -= xOverflow;
      00086C 32                    2220 	ld	(hl-), a
      00086D 2A                    2221 	ld	a, (hl+)
      00086E 5F                    2222 	ld	e, a
      00086F 56                    2223 	ld	d, (hl)
      000870 1A                    2224 	ld	a, (de)
      000871 47                    2225 	ld	b, a
      000872 13                    2226 	inc	de
      000873 1A                    2227 	ld	a, (de)
      000874 4F                    2228 	ld	c, a
      000875 58                    2229 	ld	e, b
      000876 51                    2230 	ld	d, c
      000877 21r3Er00              2231 	ld	hl, #_xOverflow
      00087A 2A                    2232 	ld	a,	(hl+)
      00087B 66                    2233 	ld	h, (hl)
      00087C 6F                    2234 	ld	l, a
      00087D 7B                    2235 	ld	a, e
      00087E 95                    2236 	sub	a, l
      00087F 5F                    2237 	ld	e, a
      000880 7A                    2238 	ld	a, d
      000881 9C                    2239 	sbc	a, h
      000882 F8 0C                 2240 	ldhl	sp,	#12
      000884 32                    2241 	ld	(hl-), a
      000885 73                    2242 	ld	(hl), e
      000886 F8 04                 2243 	ldhl	sp,#4
      000888 2A                    2244 	ld	a, (hl+)
      000889 5F                    2245 	ld	e, a
      00088A 56                    2246 	ld	d, (hl)
      00088B F8 0B                 2247 	ldhl	sp,	#11
      00088D 2A                    2248 	ld	a, (hl+)
      00088E 12                    2249 	ld	(de), a
      00088F 13                    2250 	inc	de
      000890 7E                    2251 	ld	a, (hl)
      000891 12                    2252 	ld	(de), a
                                   2253 ;main.c:223: enemies[i].y -= yOverflow;
      000892 F8 04                 2254 	ldhl	sp,#4
      000894 2A                    2255 	ld	a, (hl+)
      000895 5F                    2256 	ld	e, a
      000896 56                    2257 	ld	d, (hl)
      000897 21 02 00              2258 	ld	hl, #0x0002
      00089A 19                    2259 	add	hl, de
      00089B E5                    2260 	push	hl
      00089C 7D                    2261 	ld	a, l
      00089D F8 08                 2262 	ldhl	sp,	#8
      00089F 77                    2263 	ld	(hl), a
      0008A0 E1                    2264 	pop	hl
      0008A1 7C                    2265 	ld	a, h
      0008A2 F8 07                 2266 	ldhl	sp,	#7
      0008A4 32                    2267 	ld	(hl-), a
      0008A5 2A                    2268 	ld	a, (hl+)
      0008A6 5F                    2269 	ld	e, a
      0008A7 56                    2270 	ld	d, (hl)
      0008A8 1A                    2271 	ld	a, (de)
      0008A9 4F                    2272 	ld	c, a
      0008AA 13                    2273 	inc	de
      0008AB 1A                    2274 	ld	a, (de)
      0008AC 47                    2275 	ld	b, a
      0008AD 79                    2276 	ld	a, c
      0008AE 21r40r00              2277 	ld	hl, #_yOverflow
      0008B1 96                    2278 	sub	a, (hl)
      0008B2 23                    2279 	inc	hl
      0008B3 4F                    2280 	ld	c, a
      0008B4 78                    2281 	ld	a, b
      0008B5 9E                    2282 	sbc	a, (hl)
      0008B6 47                    2283 	ld	b, a
      0008B7 F8 06                 2284 	ldhl	sp,	#6
      0008B9 2A                    2285 	ld	a,	(hl+)
      0008BA 66                    2286 	ld	h, (hl)
      0008BB 6F                    2287 	ld	l, a
      0008BC 79                    2288 	ld	a, c
      0008BD 22                    2289 	ld	(hl+), a
      0008BE 70                    2290 	ld	(hl), b
                                   2291 ;main.c:226: if (enemies[i].x < playerDrawX) {
      0008BF 21r38r00              2292 	ld	hl, #_playerDrawX
      0008C2 4E                    2293 	ld	c, (hl)
      0008C3 06 00                 2294 	ld	b, #0x00
                                   2295 ;main.c:239: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0008C5 F8 04                 2296 	ldhl	sp,#4
      0008C7 2A                    2297 	ld	a, (hl+)
      0008C8 5F                    2298 	ld	e, a
      0008C9 56                    2299 	ld	d, (hl)
      0008CA 21 0E 00              2300 	ld	hl, #0x000e
      0008CD 19                    2301 	add	hl, de
      0008CE E5                    2302 	push	hl
      0008CF 7D                    2303 	ld	a, l
      0008D0 F8 0A                 2304 	ldhl	sp,	#10
      0008D2 77                    2305 	ld	(hl), a
      0008D3 E1                    2306 	pop	hl
      0008D4 7C                    2307 	ld	a, h
      0008D5 F8 09                 2308 	ldhl	sp,	#9
      0008D7 77                    2309 	ld	(hl), a
                                   2310 ;main.c:227: enemies[i].xSpeed += enemies[i].accel;
      0008D8 F8 04                 2311 	ldhl	sp,#4
      0008DA 2A                    2312 	ld	a, (hl+)
      0008DB 5F                    2313 	ld	e, a
      0008DC 56                    2314 	ld	d, (hl)
      0008DD 21 0D 00              2315 	ld	hl, #0x000d
      0008E0 19                    2316 	add	hl, de
      0008E1 33                    2317 	inc	sp
      0008E2 33                    2318 	inc	sp
      0008E3 E5                    2319 	push	hl
      0008E4 F8 08                 2320 	ldhl	sp,#8
      0008E6 2A                    2321 	ld	a, (hl+)
      0008E7 5F                    2322 	ld	e, a
      0008E8 56                    2323 	ld	d, (hl)
      0008E9 1A                    2324 	ld	a, (de)
      0008EA F8 0D                 2325 	ldhl	sp,	#13
      0008EC 22                    2326 	ld	(hl+), a
      0008ED D1                    2327 	pop	de
      0008EE D5                    2328 	push	de
      0008EF 1A                    2329 	ld	a, (de)
      0008F0 77                    2330 	ld	(hl), a
                                   2331 ;main.c:226: if (enemies[i].x < playerDrawX) {
      0008F1 F8 0B                 2332 	ldhl	sp,	#11
      0008F3 2A                    2333 	ld	a, (hl+)
      0008F4 91                    2334 	sub	a, c
      0008F5 7E                    2335 	ld	a, (hl)
      0008F6 98                    2336 	sbc	a, b
      0008F7 56                    2337 	ld	d, (hl)
      0008F8 78                    2338 	ld	a, b
      0008F9 CB 7F                 2339 	bit	7,a
      0008FB 28 07                 2340 	jr	Z, 00273$
      0008FD CB 7A                 2341 	bit	7, d
      0008FF 20 08                 2342 	jr	NZ, 00274$
      000901 BF                    2343 	cp	a, a
      000902 18 05                 2344 	jr	00274$
      000904                       2345 00273$:
      000904 CB 7A                 2346 	bit	7, d
      000906 28 01                 2347 	jr	Z, 00274$
      000908 37                    2348 	scf
      000909                       2349 00274$:
      000909 30 0D                 2350 	jr	NC, 00102$
                                   2351 ;main.c:227: enemies[i].xSpeed += enemies[i].accel;
      00090B F8 0E                 2352 	ldhl	sp,	#14
      00090D 3A                    2353 	ld	a, (hl-)
      00090E 86                    2354 	add	a, (hl)
      00090F 4F                    2355 	ld	c, a
      000910 F8 08                 2356 	ldhl	sp,	#8
      000912 2A                    2357 	ld	a,	(hl+)
      000913 66                    2358 	ld	h, (hl)
      000914 6F                    2359 	ld	l, a
      000915 71                    2360 	ld	(hl), c
      000916 18 0B                 2361 	jr	00103$
      000918                       2362 00102$:
                                   2363 ;main.c:230: enemies[i].xSpeed -= enemies[i].accel;
      000918 F8 0D                 2364 	ldhl	sp,	#13
      00091A 2A                    2365 	ld	a, (hl+)
      00091B 96                    2366 	sub	a, (hl)
      00091C 4F                    2367 	ld	c, a
      00091D F8 08                 2368 	ldhl	sp,	#8
      00091F 2A                    2369 	ld	a,	(hl+)
      000920 66                    2370 	ld	h, (hl)
      000921 6F                    2371 	ld	l, a
      000922 71                    2372 	ld	(hl), c
      000923                       2373 00103$:
                                   2374 ;main.c:232: if (enemies[i].y < playerDrawY) {
      000923 F8 06                 2375 	ldhl	sp,#6
      000925 2A                    2376 	ld	a, (hl+)
      000926 5F                    2377 	ld	e, a
      000927 56                    2378 	ld	d, (hl)
      000928 1A                    2379 	ld	a, (de)
      000929 F8 02                 2380 	ldhl	sp,	#2
      00092B 22                    2381 	ld	(hl+), a
      00092C 13                    2382 	inc	de
      00092D 1A                    2383 	ld	a, (de)
      00092E 77                    2384 	ld	(hl), a
      00092F 21r39r00              2385 	ld	hl, #_playerDrawY
      000932 4E                    2386 	ld	c, (hl)
      000933 06 00                 2387 	ld	b, #0x00
                                   2388 ;main.c:240: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000935 F8 04                 2389 	ldhl	sp,#4
      000937 2A                    2390 	ld	a, (hl+)
      000938 5F                    2391 	ld	e, a
      000939 56                    2392 	ld	d, (hl)
      00093A 21 0F 00              2393 	ld	hl, #0x000f
      00093D 19                    2394 	add	hl, de
      00093E E5                    2395 	push	hl
      00093F 7D                    2396 	ld	a, l
      000940 F8 0C                 2397 	ldhl	sp,	#12
      000942 77                    2398 	ld	(hl), a
      000943 E1                    2399 	pop	hl
      000944 7C                    2400 	ld	a, h
      000945 F8 0B                 2401 	ldhl	sp,	#11
                                   2402 ;main.c:233: enemies[i].ySpeed += enemies[i].accel;
      000947 32                    2403 	ld	(hl-), a
      000948 2A                    2404 	ld	a, (hl+)
      000949 5F                    2405 	ld	e, a
      00094A 2A                    2406 	ld	a, (hl+)
      00094B 23                    2407 	inc	hl
      00094C 57                    2408 	ld	d, a
      00094D 1A                    2409 	ld	a, (de)
      00094E 22                    2410 	ld	(hl+), a
      00094F D1                    2411 	pop	de
      000950 D5                    2412 	push	de
      000951 1A                    2413 	ld	a, (de)
      000952 77                    2414 	ld	(hl), a
                                   2415 ;main.c:232: if (enemies[i].y < playerDrawY) {
      000953 F8 02                 2416 	ldhl	sp,	#2
      000955 2A                    2417 	ld	a, (hl+)
      000956 91                    2418 	sub	a, c
      000957 7E                    2419 	ld	a, (hl)
      000958 98                    2420 	sbc	a, b
      000959 56                    2421 	ld	d, (hl)
      00095A 78                    2422 	ld	a, b
      00095B CB 7F                 2423 	bit	7,a
      00095D 28 07                 2424 	jr	Z, 00275$
      00095F CB 7A                 2425 	bit	7, d
      000961 20 08                 2426 	jr	NZ, 00276$
      000963 BF                    2427 	cp	a, a
      000964 18 05                 2428 	jr	00276$
      000966                       2429 00275$:
      000966 CB 7A                 2430 	bit	7, d
      000968 28 01                 2431 	jr	Z, 00276$
      00096A 37                    2432 	scf
      00096B                       2433 00276$:
      00096B 30 0D                 2434 	jr	NC, 00105$
                                   2435 ;main.c:233: enemies[i].ySpeed += enemies[i].accel;
      00096D F8 0E                 2436 	ldhl	sp,	#14
      00096F 3A                    2437 	ld	a, (hl-)
      000970 86                    2438 	add	a, (hl)
      000971 4F                    2439 	ld	c, a
      000972 F8 0A                 2440 	ldhl	sp,	#10
      000974 2A                    2441 	ld	a,	(hl+)
      000975 66                    2442 	ld	h, (hl)
      000976 6F                    2443 	ld	l, a
      000977 71                    2444 	ld	(hl), c
      000978 18 0B                 2445 	jr	00106$
      00097A                       2446 00105$:
                                   2447 ;main.c:236: enemies[i].ySpeed -= enemies[i].accel;
      00097A F8 0D                 2448 	ldhl	sp,	#13
      00097C 2A                    2449 	ld	a, (hl+)
      00097D 96                    2450 	sub	a, (hl)
      00097E 4F                    2451 	ld	c, a
      00097F F8 0A                 2452 	ldhl	sp,	#10
      000981 2A                    2453 	ld	a,	(hl+)
      000982 66                    2454 	ld	h, (hl)
      000983 6F                    2455 	ld	l, a
      000984 71                    2456 	ld	(hl), c
      000985                       2457 00106$:
                                   2458 ;main.c:239: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000985 F8 04                 2459 	ldhl	sp,#4
      000987 2A                    2460 	ld	a, (hl+)
      000988 5F                    2461 	ld	e, a
      000989 56                    2462 	ld	d, (hl)
      00098A 21 0C 00              2463 	ld	hl, #0x000c
      00098D 19                    2464 	add	hl, de
      00098E 4D                    2465 	ld	c, l
      00098F 44                    2466 	ld	b, h
      000990 0A                    2467 	ld	a, (bc)
      000991 5F                    2468 	ld	e, a
      000992 F8 0C                 2469 	ldhl	sp,	#12
      000994 7B                    2470 	ld	a, e
      000995 22                    2471 	ld	(hl+), a
      000996 AF                    2472 	xor	a, a
      000997 93                    2473 	sub	a, e
      000998 77                    2474 	ld	(hl), a
      000999 F8 08                 2475 	ldhl	sp,#8
      00099B 2A                    2476 	ld	a, (hl+)
      00099C 5F                    2477 	ld	e, a
      00099D 56                    2478 	ld	d, (hl)
      00099E 1A                    2479 	ld	a, (de)
      00099F F8 0E                 2480 	ldhl	sp,	#14
                                   2481 ;main.c:191: return (value < min) ? min : (value > max) ? max : value;
      0009A1 32                    2482 	ld	(hl-), a
      0009A2 2A                    2483 	ld	a, (hl+)
      0009A3 5F                    2484 	ld	e, a
      0009A4 56                    2485 	ld	d, (hl)
      0009A5 3A                    2486 	ld	a, (hl-)
      0009A6 96                    2487 	sub	a, (hl)
      0009A7 CB 7B                 2488 	bit	7, e
      0009A9 28 07                 2489 	jr	Z, 00277$
      0009AB CB 7A                 2490 	bit	7, d
      0009AD 20 08                 2491 	jr	NZ, 00278$
      0009AF BF                    2492 	cp	a, a
      0009B0 18 05                 2493 	jr	00278$
      0009B2                       2494 00277$:
      0009B2 CB 7A                 2495 	bit	7, d
      0009B4 28 01                 2496 	jr	Z, 00278$
      0009B6 37                    2497 	scf
      0009B7                       2498 00278$:
      0009B7 30 05                 2499 	jr	NC, 00147$
      0009B9 F8 0D                 2500 	ldhl	sp,	#13
      0009BB 7E                    2501 	ld	a, (hl)
      0009BC 18 23                 2502 	jr	00148$
      0009BE                       2503 00147$:
      0009BE F8 0E                 2504 	ldhl	sp,	#14
      0009C0 3A                    2505 	ld	a, (hl-)
      0009C1 2B                    2506 	dec	hl
      0009C2 5F                    2507 	ld	e, a
      0009C3 56                    2508 	ld	d, (hl)
      0009C4 2A                    2509 	ld	a, (hl+)
      0009C5 23                    2510 	inc	hl
      0009C6 96                    2511 	sub	a, (hl)
      0009C7 CB 7B                 2512 	bit	7, e
      0009C9 28 07                 2513 	jr	Z, 00279$
      0009CB CB 7A                 2514 	bit	7, d
      0009CD 20 08                 2515 	jr	NZ, 00280$
      0009CF BF                    2516 	cp	a, a
      0009D0 18 05                 2517 	jr	00280$
      0009D2                       2518 00279$:
      0009D2 CB 7A                 2519 	bit	7, d
      0009D4 28 01                 2520 	jr	Z, 00280$
      0009D6 37                    2521 	scf
      0009D7                       2522 00280$:
      0009D7 30 05                 2523 	jr	NC, 00149$
      0009D9 F8 0C                 2524 	ldhl	sp,	#12
      0009DB 7E                    2525 	ld	a, (hl)
      0009DC 18 03                 2526 	jr	00150$
      0009DE                       2527 00149$:
      0009DE F8 0E                 2528 	ldhl	sp,	#14
      0009E0 7E                    2529 	ld	a, (hl)
      0009E1                       2530 00150$:
      0009E1                       2531 00148$:
                                   2532 ;main.c:239: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0009E1 F8 08                 2533 	ldhl	sp,	#8
      0009E3 F5                    2534 	push	af
      0009E4 2A                    2535 	ld	a,	(hl+)
      0009E5 66                    2536 	ld	h, (hl)
      0009E6 6F                    2537 	ld	l, a
      0009E7 F1                    2538 	pop	af
      0009E8 77                    2539 	ld	(hl), a
                                   2540 ;main.c:240: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0009E9 0A                    2541 	ld	a, (bc)
      0009EA 47                    2542 	ld	b, a
      0009EB 48                    2543 	ld	c, b
      0009EC AF                    2544 	xor	a, a
      0009ED 90                    2545 	sub	a, b
      0009EE 47                    2546 	ld	b, a
      0009EF F8 0A                 2547 	ldhl	sp,#10
      0009F1 2A                    2548 	ld	a, (hl+)
      0009F2 5F                    2549 	ld	e, a
      0009F3 56                    2550 	ld	d, (hl)
      0009F4 1A                    2551 	ld	a, (de)
      0009F5 6F                    2552 	ld	l, a
                                   2553 ;	spillPairReg hl
                                   2554 ;	spillPairReg hl
                                   2555 ;main.c:191: return (value < min) ? min : (value > max) ? max : value;
      0009F6 58                    2556 	ld	e, b
      0009F7 7D                    2557 	ld	a,l
      0009F8 57                    2558 	ld	d,a
      0009F9 90                    2559 	sub	a, b
      0009FA CB 7B                 2560 	bit	7, e
      0009FC 28 07                 2561 	jr	Z, 00281$
      0009FE CB 7A                 2562 	bit	7, d
      000A00 20 08                 2563 	jr	NZ, 00282$
      000A02 BF                    2564 	cp	a, a
      000A03 18 05                 2565 	jr	00282$
      000A05                       2566 00281$:
      000A05 CB 7A                 2567 	bit	7, d
      000A07 28 01                 2568 	jr	Z, 00282$
      000A09 37                    2569 	scf
      000A0A                       2570 00282$:
      000A0A 30 03                 2571 	jr	NC, 00151$
      000A0C 48                    2572 	ld	c, b
      000A0D 18 17                 2573 	jr	00152$
      000A0F                       2574 00151$:
      000A0F 5D                    2575 	ld	e, l
      000A10 79                    2576 	ld	a,c
      000A11 57                    2577 	ld	d,a
      000A12 95                    2578 	sub	a, l
      000A13 CB 7B                 2579 	bit	7, e
      000A15 28 07                 2580 	jr	Z, 00283$
      000A17 CB 7A                 2581 	bit	7, d
      000A19 20 08                 2582 	jr	NZ, 00284$
      000A1B BF                    2583 	cp	a, a
      000A1C 18 05                 2584 	jr	00284$
      000A1E                       2585 00283$:
      000A1E CB 7A                 2586 	bit	7, d
      000A20 28 01                 2587 	jr	Z, 00284$
      000A22 37                    2588 	scf
      000A23                       2589 00284$:
      000A23 38 01                 2590 	jr	C, 00154$
      000A25 4D                    2591 	ld	c, l
      000A26                       2592 00154$:
      000A26                       2593 00152$:
                                   2594 ;main.c:240: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000A26 F8 0A                 2595 	ldhl	sp,	#10
      000A28 2A                    2596 	ld	a,	(hl+)
      000A29 66                    2597 	ld	h, (hl)
      000A2A 6F                    2598 	ld	l, a
      000A2B 71                    2599 	ld	(hl), c
                                   2600 ;main.c:243: enemies[i].xReserve += enemies[i].xSpeed;
      000A2C F8 04                 2601 	ldhl	sp,#4
      000A2E 2A                    2602 	ld	a, (hl+)
      000A2F 5F                    2603 	ld	e, a
      000A30 56                    2604 	ld	d, (hl)
      000A31 21 04 00              2605 	ld	hl, #0x0004
      000A34 19                    2606 	add	hl, de
      000A35 E5                    2607 	push	hl
      000A36 7D                    2608 	ld	a, l
      000A37 F8 0D                 2609 	ldhl	sp,	#13
      000A39 77                    2610 	ld	(hl), a
      000A3A E1                    2611 	pop	hl
      000A3B 7C                    2612 	ld	a, h
      000A3C F8 0C                 2613 	ldhl	sp,	#12
      000A3E 32                    2614 	ld	(hl-), a
      000A3F 2A                    2615 	ld	a, (hl+)
      000A40 5F                    2616 	ld	e, a
      000A41 56                    2617 	ld	d, (hl)
      000A42 1A                    2618 	ld	a, (de)
      000A43 47                    2619 	ld	b, a
      000A44 F8 08                 2620 	ldhl	sp,#8
      000A46 2A                    2621 	ld	a, (hl+)
      000A47 5F                    2622 	ld	e, a
      000A48 2A                    2623 	ld	a, (hl+)
      000A49 23                    2624 	inc	hl
      000A4A 57                    2625 	ld	d, a
      000A4B 1A                    2626 	ld	a, (de)
      000A4C 80                    2627 	add	a, b
      000A4D 47                    2628 	ld	b, a
      000A4E 2A                    2629 	ld	a,	(hl+)
      000A4F 66                    2630 	ld	h, (hl)
      000A50 6F                    2631 	ld	l, a
      000A51 70                    2632 	ld	(hl), b
                                   2633 ;main.c:244: enemies[i].yReserve += enemies[i].ySpeed;
      000A52 F8 04                 2634 	ldhl	sp,#4
      000A54 2A                    2635 	ld	a, (hl+)
      000A55 5F                    2636 	ld	e, a
      000A56 56                    2637 	ld	d, (hl)
      000A57 21 05 00              2638 	ld	hl, #0x0005
      000A5A 19                    2639 	add	hl, de
      000A5B E5                    2640 	push	hl
      000A5C 7D                    2641 	ld	a, l
      000A5D F8 0F                 2642 	ldhl	sp,	#15
      000A5F 77                    2643 	ld	(hl), a
      000A60 E1                    2644 	pop	hl
      000A61 7C                    2645 	ld	a, h
      000A62 F8 0E                 2646 	ldhl	sp,	#14
      000A64 32                    2647 	ld	(hl-), a
      000A65 2A                    2648 	ld	a, (hl+)
      000A66 5F                    2649 	ld	e, a
      000A67 56                    2650 	ld	d, (hl)
      000A68 1A                    2651 	ld	a, (de)
      000A69 81                    2652 	add	a, c
      000A6A 4F                    2653 	ld	c, a
      000A6B 3A                    2654 	ld	a, (hl-)
      000A6C 6E                    2655 	ld	l, (hl)
      000A6D 67                    2656 	ld	h, a
      000A6E 71                    2657 	ld	(hl), c
                                   2658 ;main.c:248: if (enemies[i].xReserve >> 3 > 0) {
      000A6F CB 28                 2659 	sra	b
      000A71 CB 28                 2660 	sra	b
      000A73 CB 28                 2661 	sra	b
                                   2662 ;main.c:243: enemies[i].xReserve += enemies[i].xSpeed;
      000A75 F8 0B                 2663 	ldhl	sp,#11
      000A77 2A                    2664 	ld	a, (hl+)
      000A78 5F                    2665 	ld	e, a
      000A79 3A                    2666 	ld	a, (hl-)
      000A7A 2B                    2667 	dec	hl
      000A7B 57                    2668 	ld	d, a
      000A7C 1A                    2669 	ld	a, (de)
      000A7D 77                    2670 	ld	(hl), a
                                   2671 ;main.c:248: if (enemies[i].xReserve >> 3 > 0) {
      000A7E 58                    2672 	ld	e, b
      000A7F AF                    2673 	xor	a, a
      000A80 57                    2674 	ld	d, a
      000A81 90                    2675 	sub	a, b
      000A82 CB 7B                 2676 	bit	7, e
      000A84 28 07                 2677 	jr	Z, 00285$
      000A86 CB 7A                 2678 	bit	7, d
      000A88 20 08                 2679 	jr	NZ, 00286$
      000A8A BF                    2680 	cp	a, a
      000A8B 18 05                 2681 	jr	00286$
      000A8D                       2682 00285$:
      000A8D CB 7A                 2683 	bit	7, d
      000A8F 28 01                 2684 	jr	Z, 00286$
      000A91 37                    2685 	scf
      000A92                       2686 00286$:
      000A92 30 3F                 2687 	jr	NC, 00110$
                                   2688 ;main.c:249: int8_t xMovement = enemies[i].xReserve >> 3;
      000A94 F8 0A                 2689 	ldhl	sp,	#10
      000A96 7E                    2690 	ld	a, (hl)
      000A97 CB 2F                 2691 	sra	a
      000A99 CB 2F                 2692 	sra	a
      000A9B CB 2F                 2693 	sra	a
      000A9D 77                    2694 	ld	(hl), a
                                   2695 ;main.c:250: enemies[i].x += xMovement;
      000A9E F8 04                 2696 	ldhl	sp,#4
      000AA0 2A                    2697 	ld	a, (hl+)
      000AA1 5F                    2698 	ld	e, a
      000AA2 56                    2699 	ld	d, (hl)
      000AA3 1A                    2700 	ld	a, (de)
      000AA4 4F                    2701 	ld	c, a
      000AA5 13                    2702 	inc	de
      000AA6 1A                    2703 	ld	a, (de)
      000AA7 47                    2704 	ld	b, a
      000AA8 F8 0A                 2705 	ldhl	sp,	#10
      000AAA 7E                    2706 	ld	a, (hl)
      000AAB 5F                    2707 	ld	e, a
      000AAC 07                    2708 	rlca
      000AAD 9F                    2709 	sbc	a, a
      000AAE 57                    2710 	ld	d, a
      000AAF 69                    2711 	ld	l, c
                                   2712 ;	spillPairReg hl
                                   2713 ;	spillPairReg hl
      000AB0 60                    2714 	ld	h, b
                                   2715 ;	spillPairReg hl
                                   2716 ;	spillPairReg hl
      000AB1 19                    2717 	add	hl, de
      000AB2 4D                    2718 	ld	c, l
      000AB3 44                    2719 	ld	b, h
      000AB4 F8 04                 2720 	ldhl	sp,	#4
      000AB6 2A                    2721 	ld	a,	(hl+)
      000AB7 66                    2722 	ld	h, (hl)
      000AB8 6F                    2723 	ld	l, a
      000AB9 79                    2724 	ld	a, c
      000ABA 22                    2725 	ld	(hl+), a
      000ABB 70                    2726 	ld	(hl), b
                                   2727 ;main.c:251: enemies[i].xReserve -=  xMovement << 3;
      000ABC F8 0B                 2728 	ldhl	sp,#11
      000ABE 2A                    2729 	ld	a, (hl+)
      000ABF 5F                    2730 	ld	e, a
      000AC0 3A                    2731 	ld	a, (hl-)
      000AC1 2B                    2732 	dec	hl
      000AC2 57                    2733 	ld	d, a
      000AC3 1A                    2734 	ld	a, (de)
      000AC4 F5                    2735 	push	af
      000AC5 2A                    2736 	ld	a, (hl+)
      000AC6 87                    2737 	add	a, a
      000AC7 87                    2738 	add	a, a
      000AC8 87                    2739 	add	a, a
      000AC9 4F                    2740 	ld	c, a
      000ACA F1                    2741 	pop	af
      000ACB 91                    2742 	sub	a, c
      000ACC 4F                    2743 	ld	c, a
      000ACD 2A                    2744 	ld	a,	(hl+)
      000ACE 66                    2745 	ld	h, (hl)
      000ACF 6F                    2746 	ld	l, a
      000AD0 71                    2747 	ld	(hl), c
      000AD1 18 69                 2748 	jr	00111$
      000AD3                       2749 00110$:
                                   2750 ;main.c:254: else if ((-enemies[i].xReserve) >> 3 > 0){
      000AD3 F8 0A                 2751 	ldhl	sp,	#10
      000AD5 7E                    2752 	ld	a, (hl)
      000AD6 4F                    2753 	ld	c, a
      000AD7 07                    2754 	rlca
      000AD8 9F                    2755 	sbc	a, a
      000AD9 47                    2756 	ld	b, a
      000ADA AF                    2757 	xor	a, a
      000ADB 91                    2758 	sub	a, c
      000ADC 4F                    2759 	ld	c, a
      000ADD 9F                    2760 	sbc	a, a
      000ADE 90                    2761 	sub	a, b
      000ADF 47                    2762 	ld	b, a
      000AE0 CB 28                 2763 	sra	b
      000AE2 CB 19                 2764 	rr	c
      000AE4 CB 28                 2765 	sra	b
      000AE6 CB 19                 2766 	rr	c
      000AE8 CB 28                 2767 	sra	b
      000AEA CB 19                 2768 	rr	c
      000AEC 58                    2769 	ld	e, b
      000AED AF                    2770 	xor	a, a
      000AEE 57                    2771 	ld	d, a
      000AEF B9                    2772 	cp	a, c
      000AF0 98                    2773 	sbc	a, b
      000AF1 CB 7B                 2774 	bit	7, e
      000AF3 28 07                 2775 	jr	Z, 00287$
      000AF5 CB 7A                 2776 	bit	7, d
      000AF7 20 08                 2777 	jr	NZ, 00288$
      000AF9 BF                    2778 	cp	a, a
      000AFA 18 05                 2779 	jr	00288$
      000AFC                       2780 00287$:
      000AFC CB 7A                 2781 	bit	7, d
      000AFE 28 01                 2782 	jr	Z, 00288$
      000B00 37                    2783 	scf
      000B01                       2784 00288$:
      000B01 30 39                 2785 	jr	NC, 00111$
                                   2786 ;main.c:255: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      000B03 AF                    2787 	xor	a, a
      000B04 91                    2788 	sub	a, c
      000B05 4F                    2789 	ld	c, a
      000B06 F8 0A                 2790 	ldhl	sp,	#10
      000B08 71                    2791 	ld	(hl), c
                                   2792 ;main.c:256: enemies[i].x += xMovement;
      000B09 F8 04                 2793 	ldhl	sp,#4
      000B0B 2A                    2794 	ld	a, (hl+)
      000B0C 5F                    2795 	ld	e, a
      000B0D 56                    2796 	ld	d, (hl)
      000B0E 1A                    2797 	ld	a, (de)
      000B0F 4F                    2798 	ld	c, a
      000B10 13                    2799 	inc	de
      000B11 1A                    2800 	ld	a, (de)
      000B12 47                    2801 	ld	b, a
      000B13 F8 0A                 2802 	ldhl	sp,	#10
      000B15 7E                    2803 	ld	a, (hl)
      000B16 5F                    2804 	ld	e, a
      000B17 07                    2805 	rlca
      000B18 9F                    2806 	sbc	a, a
      000B19 57                    2807 	ld	d, a
      000B1A 69                    2808 	ld	l, c
                                   2809 ;	spillPairReg hl
                                   2810 ;	spillPairReg hl
      000B1B 60                    2811 	ld	h, b
                                   2812 ;	spillPairReg hl
                                   2813 ;	spillPairReg hl
      000B1C 19                    2814 	add	hl, de
      000B1D 4D                    2815 	ld	c, l
      000B1E 44                    2816 	ld	b, h
      000B1F F8 04                 2817 	ldhl	sp,	#4
      000B21 2A                    2818 	ld	a,	(hl+)
      000B22 66                    2819 	ld	h, (hl)
      000B23 6F                    2820 	ld	l, a
      000B24 79                    2821 	ld	a, c
      000B25 22                    2822 	ld	(hl+), a
      000B26 70                    2823 	ld	(hl), b
                                   2824 ;main.c:257: enemies[i].xReserve +=  (-xMovement) << 3;
      000B27 F8 0B                 2825 	ldhl	sp,#11
      000B29 2A                    2826 	ld	a, (hl+)
      000B2A 5F                    2827 	ld	e, a
      000B2B 3A                    2828 	ld	a, (hl-)
      000B2C 2B                    2829 	dec	hl
      000B2D 57                    2830 	ld	d, a
      000B2E 1A                    2831 	ld	a, (de)
      000B2F 4F                    2832 	ld	c, a
      000B30 AF                    2833 	xor	a, a
      000B31 96                    2834 	sub	a, (hl)
      000B32 23                    2835 	inc	hl
      000B33 87                    2836 	add	a, a
      000B34 87                    2837 	add	a, a
      000B35 87                    2838 	add	a, a
      000B36 81                    2839 	add	a, c
      000B37 4F                    2840 	ld	c, a
      000B38 2A                    2841 	ld	a,	(hl+)
      000B39 66                    2842 	ld	h, (hl)
      000B3A 6F                    2843 	ld	l, a
      000B3B 71                    2844 	ld	(hl), c
      000B3C                       2845 00111$:
                                   2846 ;main.c:260: if (enemies[i].yReserve >> 3 > 0) {
      000B3C F8 0D                 2847 	ldhl	sp,#13
      000B3E 2A                    2848 	ld	a, (hl+)
      000B3F 5F                    2849 	ld	e, a
      000B40 56                    2850 	ld	d, (hl)
      000B41 1A                    2851 	ld	a, (de)
      000B42 F8 0B                 2852 	ldhl	sp,	#11
      000B44 77                    2853 	ld	(hl), a
      000B45 2A                    2854 	ld	a, (hl+)
      000B46 CB 2F                 2855 	sra	a
      000B48 CB 2F                 2856 	sra	a
      000B4A CB 2F                 2857 	sra	a
      000B4C 77                    2858 	ld	(hl), a
      000B4D 5E                    2859 	ld	e, (hl)
      000B4E AF                    2860 	xor	a, a
      000B4F 57                    2861 	ld	d, a
      000B50 96                    2862 	sub	a, (hl)
      000B51 CB 7B                 2863 	bit	7, e
      000B53 28 07                 2864 	jr	Z, 00289$
      000B55 CB 7A                 2865 	bit	7, d
      000B57 20 08                 2866 	jr	NZ, 00290$
      000B59 BF                    2867 	cp	a, a
      000B5A 18 05                 2868 	jr	00290$
      000B5C                       2869 00289$:
      000B5C CB 7A                 2870 	bit	7, d
      000B5E 28 01                 2871 	jr	Z, 00290$
      000B60 37                    2872 	scf
      000B61                       2873 00290$:
      000B61 30 5B                 2874 	jr	NC, 00115$
                                   2875 ;main.c:261: int8_t yMovement = enemies[i].yReserve >> 3;
      000B63 F8 0C                 2876 	ldhl	sp,	#12
      000B65 7E                    2877 	ld	a, (hl)
      000B66 F8 08                 2878 	ldhl	sp,	#8
                                   2879 ;main.c:262: enemies[i].y += yMovement;
      000B68 32                    2880 	ld	(hl-), a
      000B69 2B                    2881 	dec	hl
      000B6A 2A                    2882 	ld	a, (hl+)
      000B6B 5F                    2883 	ld	e, a
      000B6C 56                    2884 	ld	d, (hl)
      000B6D 1A                    2885 	ld	a, (de)
      000B6E F8 0B                 2886 	ldhl	sp,	#11
      000B70 22                    2887 	ld	(hl+), a
      000B71 13                    2888 	inc	de
      000B72 1A                    2889 	ld	a, (de)
      000B73 77                    2890 	ld	(hl), a
      000B74 F8 08                 2891 	ldhl	sp,	#8
      000B76 7E                    2892 	ld	a, (hl)
      000B77 F8 04                 2893 	ldhl	sp,	#4
      000B79 22                    2894 	ld	(hl+), a
      000B7A 07                    2895 	rlca
      000B7B 9F                    2896 	sbc	a, a
      000B7C 77                    2897 	ld	(hl), a
      000B7D F8 0B                 2898 	ldhl	sp,	#11
      000B7F 3A                    2899 	ld	a, (hl-)
      000B80 2B                    2900 	dec	hl
      000B81 77                    2901 	ld	(hl), a
      000B82 F8 0C                 2902 	ldhl	sp,	#12
      000B84 3A                    2903 	ld	a, (hl-)
      000B85 2B                    2904 	dec	hl
      000B86 32                    2905 	ld	(hl-), a
      000B87 2A                    2906 	ld	a, (hl+)
      000B88 5F                    2907 	ld	e, a
      000B89 56                    2908 	ld	d, (hl)
      000B8A F8 04                 2909 	ldhl	sp,	#4
      000B8C 2A                    2910 	ld	a,	(hl+)
      000B8D 66                    2911 	ld	h, (hl)
      000B8E 6F                    2912 	ld	l, a
      000B8F 19                    2913 	add	hl, de
      000B90 E5                    2914 	push	hl
      000B91 7D                    2915 	ld	a, l
      000B92 F8 0D                 2916 	ldhl	sp,	#13
      000B94 77                    2917 	ld	(hl), a
      000B95 E1                    2918 	pop	hl
      000B96 7C                    2919 	ld	a, h
      000B97 F8 0C                 2920 	ldhl	sp,	#12
      000B99 77                    2921 	ld	(hl), a
      000B9A F8 06                 2922 	ldhl	sp,#6
      000B9C 2A                    2923 	ld	a, (hl+)
      000B9D 5F                    2924 	ld	e, a
      000B9E 56                    2925 	ld	d, (hl)
      000B9F F8 0B                 2926 	ldhl	sp,	#11
      000BA1 2A                    2927 	ld	a, (hl+)
      000BA2 12                    2928 	ld	(de), a
      000BA3 13                    2929 	inc	de
                                   2930 ;main.c:263: enemies[i].yReserve -=  yMovement << 3;
      000BA4 2A                    2931 	ld	a, (hl+)
      000BA5 12                    2932 	ld	(de), a
      000BA6 2A                    2933 	ld	a, (hl+)
      000BA7 5F                    2934 	ld	e, a
      000BA8 56                    2935 	ld	d, (hl)
      000BA9 1A                    2936 	ld	a, (de)
      000BAA F5                    2937 	push	af
      000BAB F8 0A                 2938 	ldhl	sp,	#10
      000BAD 7E                    2939 	ld	a, (hl)
      000BAE 87                    2940 	add	a, a
      000BAF 87                    2941 	add	a, a
      000BB0 87                    2942 	add	a, a
      000BB1 4F                    2943 	ld	c, a
      000BB2 F1                    2944 	pop	af
      000BB3 91                    2945 	sub	a, c
      000BB4 4F                    2946 	ld	c, a
      000BB5 F8 0D                 2947 	ldhl	sp,	#13
      000BB7 2A                    2948 	ld	a,	(hl+)
      000BB8 66                    2949 	ld	h, (hl)
      000BB9 6F                    2950 	ld	l, a
      000BBA 71                    2951 	ld	(hl), c
      000BBB C3r5Fr0C              2952 	jp	00141$
      000BBE                       2953 00115$:
                                   2954 ;main.c:265: else if ((-enemies[i].yReserve) >> 3 > 0){
      000BBE F8 0B                 2955 	ldhl	sp,	#11
      000BC0 7E                    2956 	ld	a, (hl)
      000BC1 F8 08                 2957 	ldhl	sp,	#8
      000BC3 22                    2958 	ld	(hl+), a
      000BC4 07                    2959 	rlca
      000BC5 9F                    2960 	sbc	a, a
      000BC6 77                    2961 	ld	(hl), a
      000BC7 11 00 00              2962 	ld	de, #0x0000
      000BCA 3A                    2963 	ld	a, (hl-)
      000BCB 6E                    2964 	ld	l, (hl)
      000BCC 67                    2965 	ld	h, a
      000BCD 7B                    2966 	ld	a, e
      000BCE 95                    2967 	sub	a, l
      000BCF 5F                    2968 	ld	e, a
      000BD0 7A                    2969 	ld	a, d
      000BD1 9C                    2970 	sbc	a, h
      000BD2 F8 0C                 2971 	ldhl	sp,	#12
      000BD4 32                    2972 	ld	(hl-), a
      000BD5 7B                    2973 	ld	a, e
      000BD6 22                    2974 	ld	(hl+), a
      000BD7 CB 2E                 2975 	sra	(hl)
      000BD9 2B                    2976 	dec	hl
      000BDA CB 1E                 2977 	rr	(hl)
      000BDC 23                    2978 	inc	hl
      000BDD CB 2E                 2979 	sra	(hl)
      000BDF 2B                    2980 	dec	hl
      000BE0 CB 1E                 2981 	rr	(hl)
      000BE2 23                    2982 	inc	hl
      000BE3 CB 2E                 2983 	sra	(hl)
      000BE5 2B                    2984 	dec	hl
      000BE6 CB 1E                 2985 	rr	(hl)
      000BE8 AF                    2986 	xor	a, a
      000BE9 96                    2987 	sub	a, (hl)
      000BEA 23                    2988 	inc	hl
      000BEB 3E 00                 2989 	ld	a, #0x00
      000BED 9E                    2990 	sbc	a, (hl)
      000BEE 3E 00                 2991 	ld	a, #0x00
      000BF0 57                    2992 	ld	d, a
      000BF1 CB 7E                 2993 	bit	7, (hl)
      000BF3 28 07                 2994 	jr	Z, 00291$
      000BF5 CB 7A                 2995 	bit	7, d
      000BF7 20 08                 2996 	jr	NZ, 00292$
      000BF9 BF                    2997 	cp	a, a
      000BFA 18 05                 2998 	jr	00292$
      000BFC                       2999 00291$:
      000BFC CB 7A                 3000 	bit	7, d
      000BFE 28 01                 3001 	jr	Z, 00292$
      000C00 37                    3002 	scf
      000C01                       3003 00292$:
      000C01 30 5C                 3004 	jr	NC, 00141$
                                   3005 ;main.c:266: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      000C03 F8 0B                 3006 	ldhl	sp,	#11
      000C05 2A                    3007 	ld	a, (hl+)
      000C06 4F                    3008 	ld	c, a
      000C07 AF                    3009 	xor	a, a
      000C08 91                    3010 	sub	a, c
      000C09 77                    3011 	ld	(hl), a
      000C0A 7E                    3012 	ld	a, (hl)
      000C0B F8 08                 3013 	ldhl	sp,	#8
                                   3014 ;main.c:267: enemies[i].y += yMovement;
      000C0D 32                    3015 	ld	(hl-), a
      000C0E 2B                    3016 	dec	hl
      000C0F 2A                    3017 	ld	a, (hl+)
      000C10 5F                    3018 	ld	e, a
      000C11 56                    3019 	ld	d, (hl)
      000C12 1A                    3020 	ld	a, (de)
      000C13 F8 0B                 3021 	ldhl	sp,	#11
      000C15 22                    3022 	ld	(hl+), a
      000C16 13                    3023 	inc	de
      000C17 1A                    3024 	ld	a, (de)
      000C18 77                    3025 	ld	(hl), a
      000C19 F8 08                 3026 	ldhl	sp,	#8
      000C1B 7E                    3027 	ld	a, (hl)
      000C1C F8 04                 3028 	ldhl	sp,	#4
      000C1E 22                    3029 	ld	(hl+), a
      000C1F 07                    3030 	rlca
      000C20 9F                    3031 	sbc	a, a
      000C21 77                    3032 	ld	(hl), a
      000C22 F8 0B                 3033 	ldhl	sp,	#11
      000C24 3A                    3034 	ld	a, (hl-)
      000C25 2B                    3035 	dec	hl
      000C26 77                    3036 	ld	(hl), a
      000C27 F8 0C                 3037 	ldhl	sp,	#12
      000C29 3A                    3038 	ld	a, (hl-)
      000C2A 2B                    3039 	dec	hl
      000C2B 32                    3040 	ld	(hl-), a
      000C2C 2A                    3041 	ld	a, (hl+)
      000C2D 5F                    3042 	ld	e, a
      000C2E 56                    3043 	ld	d, (hl)
      000C2F F8 04                 3044 	ldhl	sp,	#4
      000C31 2A                    3045 	ld	a,	(hl+)
      000C32 66                    3046 	ld	h, (hl)
      000C33 6F                    3047 	ld	l, a
      000C34 19                    3048 	add	hl, de
      000C35 E5                    3049 	push	hl
      000C36 7D                    3050 	ld	a, l
      000C37 F8 0D                 3051 	ldhl	sp,	#13
      000C39 77                    3052 	ld	(hl), a
      000C3A E1                    3053 	pop	hl
      000C3B 7C                    3054 	ld	a, h
      000C3C F8 0C                 3055 	ldhl	sp,	#12
      000C3E 77                    3056 	ld	(hl), a
      000C3F F8 06                 3057 	ldhl	sp,#6
      000C41 2A                    3058 	ld	a, (hl+)
      000C42 5F                    3059 	ld	e, a
      000C43 56                    3060 	ld	d, (hl)
      000C44 F8 0B                 3061 	ldhl	sp,	#11
      000C46 2A                    3062 	ld	a, (hl+)
      000C47 12                    3063 	ld	(de), a
      000C48 13                    3064 	inc	de
                                   3065 ;main.c:268: enemies[i].yReserve +=  (-yMovement) << 3;
      000C49 2A                    3066 	ld	a, (hl+)
      000C4A 12                    3067 	ld	(de), a
      000C4B 2A                    3068 	ld	a, (hl+)
      000C4C 5F                    3069 	ld	e, a
      000C4D 56                    3070 	ld	d, (hl)
      000C4E 1A                    3071 	ld	a, (de)
      000C4F 4F                    3072 	ld	c, a
      000C50 AF                    3073 	xor	a, a
      000C51 F8 08                 3074 	ldhl	sp,	#8
      000C53 96                    3075 	sub	a, (hl)
      000C54 87                    3076 	add	a, a
      000C55 87                    3077 	add	a, a
      000C56 87                    3078 	add	a, a
      000C57 81                    3079 	add	a, c
      000C58 4F                    3080 	ld	c, a
      000C59 F8 0D                 3081 	ldhl	sp,	#13
      000C5B 2A                    3082 	ld	a,	(hl+)
      000C5C 66                    3083 	ld	h, (hl)
      000C5D 6F                    3084 	ld	l, a
      000C5E 71                    3085 	ld	(hl), c
      000C5F                       3086 00141$:
                                   3087 ;main.c:220: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000C5F F8 0F                 3088 	ldhl	sp,	#15
      000C61 34                    3089 	inc	(hl)
      000C62 C3r44r08              3090 	jp	00140$
      000C65                       3091 00117$:
                                   3092 ;main.c:279: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000C65 F8 0F                 3093 	ldhl	sp,	#15
      000C67 36 00                 3094 	ld	(hl), #0x00
      000C69                       3095 00143$:
      000C69 21r89r05              3096 	ld	hl, #_ENEMYCOUNT
      000C6C 4E                    3097 	ld	c, (hl)
      000C6D F8 0F                 3098 	ldhl	sp,	#15
      000C6F 7E                    3099 	ld	a, (hl)
      000C70 91                    3100 	sub	a, c
      000C71 D2rDBr0D              3101 	jp	NC, 00145$
                                   3102 ;main.c:281: if (enemies[i].alive) {
      000C74 7E                    3103 	ld	a, (hl)
      000C75 16 00                 3104 	ld	d, #0x00
      000C77 87                    3105 	add	a, a
      000C78 CB 12                 3106 	rl	d
      000C7A 87                    3107 	add	a, a
      000C7B CB 12                 3108 	rl	d
      000C7D 87                    3109 	add	a, a
      000C7E CB 12                 3110 	rl	d
      000C80 87                    3111 	add	a, a
      000C81 CB 12                 3112 	rl	d
      000C83 5F                    3113 	ld	e, a
      000C84 21r00r00              3114 	ld	hl, #_enemies
      000C87 19                    3115 	add	hl, de
      000C88 E5                    3116 	push	hl
      000C89 7D                    3117 	ld	a, l
      000C8A F8 09                 3118 	ldhl	sp,	#9
      000C8C 77                    3119 	ld	(hl), a
      000C8D E1                    3120 	pop	hl
      000C8E 7C                    3121 	ld	a, h
      000C8F F8 08                 3122 	ldhl	sp,	#8
      000C91 32                    3123 	ld	(hl-), a
      000C92 2A                    3124 	ld	a, (hl+)
      000C93 5F                    3125 	ld	e, a
      000C94 56                    3126 	ld	d, (hl)
      000C95 21 09 00              3127 	ld	hl, #0x0009
      000C98 19                    3128 	add	hl, de
      000C99 4D                    3129 	ld	c, l
      000C9A 44                    3130 	ld	b, h
      000C9B 0A                    3131 	ld	a, (bc)
      000C9C F8 0E                 3132 	ldhl	sp,	#14
      000C9E 77                    3133 	ld	(hl), a
      000C9F 7E                    3134 	ld	a, (hl)
      000CA0 B7                    3135 	or	a, a
      000CA1 CArB0r0D              3136 	jp	Z, 00132$
                                   3137 ;main.c:282: if (enemies[i].visible == 1) {
      000CA4 F8 07                 3138 	ldhl	sp,#7
      000CA6 2A                    3139 	ld	a, (hl+)
      000CA7 5F                    3140 	ld	e, a
      000CA8 56                    3141 	ld	d, (hl)
      000CA9 21 0A 00              3142 	ld	hl, #0x000a
      000CAC 19                    3143 	add	hl, de
      000CAD E5                    3144 	push	hl
      000CAE 7D                    3145 	ld	a, l
      000CAF F8 0B                 3146 	ldhl	sp,	#11
      000CB1 77                    3147 	ld	(hl), a
      000CB2 E1                    3148 	pop	hl
      000CB3 7C                    3149 	ld	a, h
      000CB4 F8 0A                 3150 	ldhl	sp,	#10
      000CB6 32                    3151 	ld	(hl-), a
      000CB7 2A                    3152 	ld	a, (hl+)
      000CB8 5F                    3153 	ld	e, a
      000CB9 2A                    3154 	ld	a, (hl+)
      000CBA 57                    3155 	ld	d, a
      000CBB 1A                    3156 	ld	a, (de)
      000CBC 77                    3157 	ld	(hl), a
                                   3158 ;main.c:283: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000CBD F8 07                 3159 	ldhl	sp,#7
      000CBF 2A                    3160 	ld	a, (hl+)
      000CC0 5F                    3161 	ld	e, a
      000CC1 56                    3162 	ld	d, (hl)
      000CC2 1A                    3163 	ld	a, (de)
      000CC3 F8 05                 3164 	ldhl	sp,	#5
      000CC5 22                    3165 	ld	(hl+), a
      000CC6 13                    3166 	inc	de
      000CC7 1A                    3167 	ld	a, (de)
      000CC8 22                    3168 	ld	(hl+), a
      000CC9 2A                    3169 	ld	a, (hl+)
      000CCA 5F                    3170 	ld	e, a
      000CCB 56                    3171 	ld	d, (hl)
      000CCC 21 02 00              3172 	ld	hl, #0x0002
      000CCF 19                    3173 	add	hl, de
      000CD0 E5                    3174 	push	hl
      000CD1 7D                    3175 	ld	a, l
      000CD2 F8 0E                 3176 	ldhl	sp,	#14
      000CD4 77                    3177 	ld	(hl), a
      000CD5 E1                    3178 	pop	hl
      000CD6 7C                    3179 	ld	a, h
      000CD7 F8 0D                 3180 	ldhl	sp,	#13
                                   3181 ;main.c:285: set_sprite_tile(10+i, 0x7f);
      000CD9 22                    3182 	ld	(hl+), a
      000CDA 23                    3183 	inc	hl
      000CDB 7E                    3184 	ld	a, (hl)
                                   3185 ;main.c:283: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000CDC F8 05                 3186 	ldhl	sp,	#5
      000CDE 4E                    3187 	ld	c, (hl)
      000CDF 23                    3188 	inc	hl
      000CE0 46                    3189 	ld	b, (hl)
                                   3190 ;main.c:285: set_sprite_tile(10+i, 0x7f);
      000CE1 C6 0A                 3191 	add	a, #0x0a
      000CE3 F8 0E                 3192 	ldhl	sp,	#14
      000CE5 77                    3193 	ld	(hl), a
                                   3194 ;main.c:283: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000CE6 78                    3195 	ld	a, b
      000CE7 07                    3196 	rlca
      000CE8 E6 01                 3197 	and	a,#0x01
      000CEA 6F                    3198 	ld	l, a
                                   3199 ;	spillPairReg hl
                                   3200 ;	spillPairReg hl
                                   3201 ;main.c:282: if (enemies[i].visible == 1) {
      000CEB E5                    3202 	push	hl
      000CEC F8 0D                 3203 	ldhl	sp,	#13
      000CEE 7E                    3204 	ld	a, (hl)
      000CEF 3D                    3205 	dec	a
      000CF0 E1                    3206 	pop	hl
      000CF1 20 60                 3207 	jr	NZ, 00129$
                                   3208 ;main.c:283: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000CF3 7D                    3209 	ld	a, l
      000CF4 B7                    3210 	or	a, a
      000CF5 20 44                 3211 	jr	NZ, 00118$
      000CF7 58                    3212 	ld	e, b
      000CF8 16 00                 3213 	ld	d, #0x00
      000CFA 3E AC                 3214 	ld	a, #0xac
      000CFC B9                    3215 	cp	a, c
      000CFD 3E 00                 3216 	ld	a, #0x00
      000CFF 98                    3217 	sbc	a, b
      000D00 CB 7B                 3218 	bit	7, e
      000D02 28 07                 3219 	jr	Z, 00296$
      000D04 CB 7A                 3220 	bit	7, d
      000D06 20 08                 3221 	jr	NZ, 00297$
      000D08 BF                    3222 	cp	a, a
      000D09 18 05                 3223 	jr	00297$
      000D0B                       3224 00296$:
      000D0B CB 7A                 3225 	bit	7, d
      000D0D 28 01                 3226 	jr	Z, 00297$
      000D0F 37                    3227 	scf
      000D10                       3228 00297$:
      000D10 38 29                 3229 	jr	C, 00118$
      000D12 F8 0C                 3230 	ldhl	sp,#12
      000D14 2A                    3231 	ld	a, (hl+)
      000D15 5F                    3232 	ld	e, a
      000D16 56                    3233 	ld	d, (hl)
      000D17 1A                    3234 	ld	a, (de)
      000D18 4F                    3235 	ld	c, a
      000D19 13                    3236 	inc	de
      000D1A 1A                    3237 	ld	a, (de)
      000D1B 47                    3238 	ld	b, a
      000D1C CB 78                 3239 	bit	7, b
      000D1E 20 1B                 3240 	jr	NZ, 00118$
      000D20 58                    3241 	ld	e, b
      000D21 16 00                 3242 	ld	d, #0x00
      000D23 3E 98                 3243 	ld	a, #0x98
      000D25 B9                    3244 	cp	a, c
      000D26 3E 00                 3245 	ld	a, #0x00
      000D28 98                    3246 	sbc	a, b
      000D29 CB 7B                 3247 	bit	7, e
      000D2B 28 07                 3248 	jr	Z, 00298$
      000D2D CB 7A                 3249 	bit	7, d
      000D2F 20 08                 3250 	jr	NZ, 00299$
      000D31 BF                    3251 	cp	a, a
      000D32 18 05                 3252 	jr	00299$
      000D34                       3253 00298$:
      000D34 CB 7A                 3254 	bit	7, d
      000D36 28 01                 3255 	jr	Z, 00299$
      000D38 37                    3256 	scf
      000D39                       3257 00299$:
      000D39 30 75                 3258 	jr	NC, 00132$
      000D3B                       3259 00118$:
                                   3260 ;main.c:284: enemies[i].visible = 0;
      000D3B F8 09                 3261 	ldhl	sp,	#9
      000D3D 2A                    3262 	ld	a,	(hl+)
      000D3E 66                    3263 	ld	h, (hl)
      000D3F 6F                    3264 	ld	l, a
      000D40 36 00                 3265 	ld	(hl), #0x00
                                   3266 ;main.c:285: set_sprite_tile(10+i, 0x7f);
      000D42 F8 0E                 3267 	ldhl	sp,	#14
                                   3268 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000D44 6E                    3269 	ld	l, (hl)
      000D45 01r00r00              3270 	ld	bc, #_shadow_OAM+0
                                   3271 ;	spillPairReg hl
                                   3272 ;	spillPairReg hl
      000D48 26 00                 3273 	ld	h, #0x00
                                   3274 ;	spillPairReg hl
                                   3275 ;	spillPairReg hl
      000D4A 29                    3276 	add	hl, hl
      000D4B 29                    3277 	add	hl, hl
      000D4C 09                    3278 	add	hl, bc
      000D4D 23                    3279 	inc	hl
      000D4E 23                    3280 	inc	hl
      000D4F 36 7F                 3281 	ld	(hl), #0x7f
                                   3282 ;main.c:285: set_sprite_tile(10+i, 0x7f);
      000D51 18 5D                 3283 	jr	00132$
      000D53                       3284 00129$:
                                   3285 ;main.c:289: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      000D53 CB 45                 3286 	bit	0, l
      000D55 20 59                 3287 	jr	NZ, 00132$
      000D57 79                    3288 	ld	a, c
      000D58 D6 AC                 3289 	sub	a, #0xac
      000D5A 78                    3290 	ld	a, b
      000D5B 17                    3291 	rla
      000D5C 3F                    3292 	ccf
      000D5D 1F                    3293 	rra
      000D5E DE 80                 3294 	sbc	a, #0x80
      000D60 30 4E                 3295 	jr	NC, 00132$
      000D62 F8 0C                 3296 	ldhl	sp,#12
      000D64 2A                    3297 	ld	a, (hl+)
      000D65 5F                    3298 	ld	e, a
      000D66 56                    3299 	ld	d, (hl)
      000D67 1A                    3300 	ld	a, (de)
      000D68 4F                    3301 	ld	c, a
      000D69 13                    3302 	inc	de
      000D6A 1A                    3303 	ld	a, (de)
      000D6B 47                    3304 	ld	b, a
      000D6C 58                    3305 	ld	e, b
      000D6D AF                    3306 	xor	a, a
      000D6E 57                    3307 	ld	d, a
      000D6F B9                    3308 	cp	a, c
      000D70 98                    3309 	sbc	a, b
      000D71 CB 7B                 3310 	bit	7, e
      000D73 28 07                 3311 	jr	Z, 00300$
      000D75 CB 7A                 3312 	bit	7, d
      000D77 20 08                 3313 	jr	NZ, 00301$
      000D79 BF                    3314 	cp	a, a
      000D7A 18 05                 3315 	jr	00301$
      000D7C                       3316 00300$:
      000D7C CB 7A                 3317 	bit	7, d
      000D7E 28 01                 3318 	jr	Z, 00301$
      000D80 37                    3319 	scf
      000D81                       3320 00301$:
      000D81 30 2D                 3321 	jr	NC, 00132$
      000D83 79                    3322 	ld	a, c
      000D84 D6 98                 3323 	sub	a, #0x98
      000D86 78                    3324 	ld	a, b
      000D87 17                    3325 	rla
      000D88 3F                    3326 	ccf
      000D89 1F                    3327 	rra
      000D8A DE 80                 3328 	sbc	a, #0x80
      000D8C 30 22                 3329 	jr	NC, 00132$
                                   3330 ;main.c:290: enemies[i].visible = 1;
      000D8E F8 09                 3331 	ldhl	sp,	#9
      000D90 2A                    3332 	ld	a,	(hl+)
      000D91 66                    3333 	ld	h, (hl)
      000D92 6F                    3334 	ld	l, a
      000D93 36 01                 3335 	ld	(hl), #0x01
                                   3336 ;main.c:291: set_sprite_tile(10+i, enemies[i].sprite0);
      000D95 F8 07                 3337 	ldhl	sp,#7
      000D97 2A                    3338 	ld	a, (hl+)
      000D98 5F                    3339 	ld	e, a
      000D99 56                    3340 	ld	d, (hl)
      000D9A 21 06 00              3341 	ld	hl, #0x0006
      000D9D 19                    3342 	add	hl, de
      000D9E 4D                    3343 	ld	c, l
      000D9F 44                    3344 	ld	b, h
      000DA0 0A                    3345 	ld	a, (bc)
      000DA1 4F                    3346 	ld	c, a
      000DA2 F8 0E                 3347 	ldhl	sp,	#14
                                   3348 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DA4 6E                    3349 	ld	l, (hl)
      000DA5 11r00r00              3350 	ld	de, #_shadow_OAM+0
                                   3351 ;	spillPairReg hl
                                   3352 ;	spillPairReg hl
      000DA8 26 00                 3353 	ld	h, #0x00
                                   3354 ;	spillPairReg hl
                                   3355 ;	spillPairReg hl
      000DAA 29                    3356 	add	hl, hl
      000DAB 29                    3357 	add	hl, hl
      000DAC 19                    3358 	add	hl, de
      000DAD 23                    3359 	inc	hl
      000DAE 23                    3360 	inc	hl
      000DAF 71                    3361 	ld	(hl), c
                                   3362 ;main.c:291: set_sprite_tile(10+i, enemies[i].sprite0);
      000DB0                       3363 00132$:
                                   3364 ;main.c:296: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000DB0 F8 0F                 3365 	ldhl	sp,	#15
      000DB2 6E                    3366 	ld	l, (hl)
      000DB3 26 00                 3367 	ld	h, #0x00
      000DB5 29                    3368 	add	hl, hl
      000DB6 29                    3369 	add	hl, hl
      000DB7 29                    3370 	add	hl, hl
      000DB8 29                    3371 	add	hl, hl
      000DB9 11r00r00              3372 	ld	de, #_enemies
      000DBC 19                    3373 	add	hl, de
      000DBD 4D                    3374 	ld	c, l
      000DBE 44                    3375 	ld	b, h
      000DBF 03                    3376 	inc	bc
      000DC0 03                    3377 	inc	bc
      000DC1 0A                    3378 	ld	a, (bc)
      000DC2 47                    3379 	ld	b, a
      000DC3 4E                    3380 	ld	c, (hl)
      000DC4 F8 0F                 3381 	ldhl	sp,	#15
      000DC6 7E                    3382 	ld	a, (hl)
      000DC7 C6 0A                 3383 	add	a, #0x0a
                                   3384 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000DC9 6F                    3385 	ld	l, a
                                   3386 ;	spillPairReg hl
                                   3387 ;	spillPairReg hl
      000DCA 26 00                 3388 	ld	h, #0x00
                                   3389 ;	spillPairReg hl
                                   3390 ;	spillPairReg hl
      000DCC 29                    3391 	add	hl, hl
      000DCD 29                    3392 	add	hl, hl
      000DCE 11r00r00              3393 	ld	de, #_shadow_OAM
      000DD1 19                    3394 	add	hl, de
                                   3395 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000DD2 78                    3396 	ld	a, b
      000DD3 22                    3397 	ld	(hl+), a
      000DD4 71                    3398 	ld	(hl), c
                                   3399 ;main.c:279: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000DD5 F8 0F                 3400 	ldhl	sp,	#15
      000DD7 34                    3401 	inc	(hl)
      000DD8 C3r69r0C              3402 	jp	00143$
      000DDB                       3403 00145$:
                                   3404 ;main.c:298: }
      000DDB E8 10                 3405 	add	sp, #16
      000DDD C9                    3406 	ret
                                   3407 ;main.c:300: void initEnemies(uint8_t loadSprites) {
                                   3408 ;	---------------------------------
                                   3409 ; Function initEnemies
                                   3410 ; ---------------------------------
      000DDE                       3411 _initEnemies::
      000DDE E8 F9                 3412 	add	sp, #-7
                                   3413 ;main.c:302: if (loadSprites) {
      000DE0 F8 09                 3414 	ldhl	sp,	#9
      000DE2 7E                    3415 	ld	a, (hl)
      000DE3 B7                    3416 	or	a, a
      000DE4 28 0D                 3417 	jr	Z, 00116$
                                   3418 ;main.c:304: set_sprite_data(9, 2, enemy1);
      000DE6 11rF7r04              3419 	ld	de, #_enemy1
      000DE9 D5                    3420 	push	de
      000DEA 21 09 02              3421 	ld	hl, #0x209
      000DED E5                    3422 	push	hl
      000DEE CDr00r00              3423 	call	_set_sprite_data
      000DF1 E8 04                 3424 	add	sp, #4
                                   3425 ;main.c:309: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000DF3                       3426 00116$:
      000DF3 0E 00                 3427 	ld	c, #0x00
      000DF5                       3428 00109$:
      000DF5 21r89r05              3429 	ld	hl, #_ENEMYCOUNT
      000DF8 46                    3430 	ld	b, (hl)
      000DF9 79                    3431 	ld	a, c
      000DFA 90                    3432 	sub	a, b
      000DFB D2r98r0E              3433 	jp	NC, 00111$
                                   3434 ;main.c:310: if (enemies[i].alive == 0) {
      000DFE 69                    3435 	ld	l, c
                                   3436 ;	spillPairReg hl
                                   3437 ;	spillPairReg hl
      000DFF 26 00                 3438 	ld	h, #0x00
                                   3439 ;	spillPairReg hl
                                   3440 ;	spillPairReg hl
      000E01 29                    3441 	add	hl, hl
      000E02 29                    3442 	add	hl, hl
      000E03 29                    3443 	add	hl, hl
      000E04 29                    3444 	add	hl, hl
      000E05 5D                    3445 	ld	e, l
      000E06 54                    3446 	ld	d, h
      000E07 21r00r00              3447 	ld	hl, #_enemies
      000E0A 19                    3448 	add	hl, de
      000E0B 33                    3449 	inc	sp
      000E0C 33                    3450 	inc	sp
      000E0D 5D                    3451 	ld	e, l
      000E0E 54                    3452 	ld	d, h
      000E0F D5                    3453 	push	de
      000E10 21 09 00              3454 	ld	hl, #0x0009
      000E13 19                    3455 	add	hl, de
      000E14 5D                    3456 	ld	e, l
      000E15 54                    3457 	ld	d, h
      000E16 1A                    3458 	ld	a, (de)
      000E17 B7                    3459 	or	a, a
      000E18 20 7A                 3460 	jr	NZ, 00110$
                                   3461 ;main.c:312: enemies[i] = blob;
      000E1A D1                    3462 	pop	de
      000E1B D5                    3463 	push	de
      000E1C C5                    3464 	push	bc
      000E1D 21 10 00              3465 	ld	hl, #0x0010
      000E20 E5                    3466 	push	hl
      000E21 21r08r00              3467 	ld	hl, #_blob
      000E24 E5                    3468 	push	hl
      000E25 D5                    3469 	push	de
      000E26 CDr00r00              3470 	call	___memcpy
      000E29 E8 06                 3471 	add	sp, #6
      000E2B CDr00r00              3472 	call	_rand
      000E2E 7B                    3473 	ld	a, e
      000E2F C1                    3474 	pop	bc
      000E30 E6 07                 3475 	and	a, #0x07
                                   3476 ;main.c:316: enemies[i].x = xSpawnPositions[posIndex];
      000E32 47                    3477 	ld	b, a
      000E33 C6r8A                 3478 	add	a,#<(_xSpawnPositions)
      000E35 5F                    3479 	ld	e, a
      000E36 3Es05                 3480 	ld	a, #>(_xSpawnPositions)
      000E38 CE 00                 3481 	adc	a, #0x00
      000E3A 57                    3482 	ld	d, a
      000E3B 1A                    3483 	ld	a, (de)
      000E3C F8 02                 3484 	ldhl	sp,	#2
      000E3E 22                    3485 	ld	(hl+), a
      000E3F AF                    3486 	xor	a, a
      000E40 32                    3487 	ld	(hl-), a
      000E41 D1                    3488 	pop	de
      000E42 D5                    3489 	push	de
      000E43 2A                    3490 	ld	a, (hl+)
      000E44 12                    3491 	ld	(de), a
      000E45 13                    3492 	inc	de
      000E46 7E                    3493 	ld	a, (hl)
      000E47 12                    3494 	ld	(de), a
                                   3495 ;main.c:317: enemies[i].y = ySpawnPositions[posIndex];
      000E48 D1                    3496 	pop	de
      000E49 D5                    3497 	push	de
      000E4A 13                    3498 	inc	de
      000E4B 13                    3499 	inc	de
      000E4C 78                    3500 	ld	a, b
      000E4D C6r92                 3501 	add	a, #<(_ySpawnPositions)
      000E4F 6F                    3502 	ld	l, a
                                   3503 ;	spillPairReg hl
                                   3504 ;	spillPairReg hl
      000E50 3E 00                 3505 	ld	a, #0x00
      000E52 CEs05                 3506 	adc	a, #>(_ySpawnPositions)
      000E54 67                    3507 	ld	h, a
                                   3508 ;	spillPairReg hl
                                   3509 ;	spillPairReg hl
      000E55 7E                    3510 	ld	a, (hl)
      000E56 F8 04                 3511 	ldhl	sp,	#4
      000E58 22                    3512 	ld	(hl+), a
      000E59 AF                    3513 	xor	a, a
      000E5A 32                    3514 	ld	(hl-), a
      000E5B 2A                    3515 	ld	a, (hl+)
      000E5C 12                    3516 	ld	(de), a
      000E5D 13                    3517 	inc	de
      000E5E 7E                    3518 	ld	a, (hl)
      000E5F 12                    3519 	ld	(de), a
                                   3520 ;main.c:319: set_sprite_tile(10+i, enemies[i].sprite0);
      000E60 D1                    3521 	pop	de
      000E61 D5                    3522 	push	de
      000E62 21 06 00              3523 	ld	hl, #0x0006
      000E65 19                    3524 	add	hl, de
      000E66 5D                    3525 	ld	e, l
      000E67 54                    3526 	ld	d, h
      000E68 1A                    3527 	ld	a, (de)
      000E69 47                    3528 	ld	b, a
      000E6A 79                    3529 	ld	a, c
      000E6B C6 0A                 3530 	add	a, #0x0a
      000E6D F8 06                 3531 	ldhl	sp,	#6
      000E6F 77                    3532 	ld	(hl), a
      000E70 5E                    3533 	ld	e, (hl)
                                   3534 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E71 26 00                 3535 	ld	h, #0x00
                                   3536 ;	spillPairReg hl
                                   3537 ;	spillPairReg hl
      000E73 6B                    3538 	ld	l, e
      000E74 29                    3539 	add	hl, hl
      000E75 29                    3540 	add	hl, hl
      000E76 11r00r00              3541 	ld	de, #_shadow_OAM
      000E79 19                    3542 	add	hl, de
      000E7A 23                    3543 	inc	hl
      000E7B 23                    3544 	inc	hl
      000E7C 70                    3545 	ld	(hl), b
                                   3546 ;main.c:320: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000E7D F8 04                 3547 	ldhl	sp,	#4
      000E7F 3A                    3548 	ld	a, (hl-)
      000E80 2B                    3549 	dec	hl
      000E81 5F                    3550 	ld	e, a
      000E82 46                    3551 	ld	b, (hl)
      000E83 F8 06                 3552 	ldhl	sp,	#6
      000E85 56                    3553 	ld	d, (hl)
                                   3554 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E86 26 00                 3555 	ld	h, #0x00
                                   3556 ;	spillPairReg hl
                                   3557 ;	spillPairReg hl
      000E88 6A                    3558 	ld	l, d
      000E89 29                    3559 	add	hl, hl
      000E8A 29                    3560 	add	hl, hl
      000E8B D5                    3561 	push	de
      000E8C 11r00r00              3562 	ld	de, #_shadow_OAM
      000E8F 19                    3563 	add	hl, de
      000E90 D1                    3564 	pop	de
                                   3565 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E91 7B                    3566 	ld	a, e
      000E92 22                    3567 	ld	(hl+), a
      000E93 70                    3568 	ld	(hl), b
                                   3569 ;main.c:320: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000E94                       3570 00110$:
                                   3571 ;main.c:309: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E94 0C                    3572 	inc	c
      000E95 C3rF5r0D              3573 	jp	00109$
      000E98                       3574 00111$:
                                   3575 ;main.c:323: }
      000E98 E8 07                 3576 	add	sp, #7
      000E9A C9                    3577 	ret
                                   3578 ;main.c:326: void move() {
                                   3579 ;	---------------------------------
                                   3580 ; Function move
                                   3581 ; ---------------------------------
      000E9B                       3582 _move::
      000E9B 3B                    3583 	dec	sp
                                   3584 ;main.c:330: if (joydata & J_A) {
      000E9C FAr87r00              3585 	ld	a, (#_joydata)
      000E9F CB 67                 3586 	bit	4, a
      000EA1 28 16                 3587 	jr	Z, 00102$
                                   3588 ;main.c:331: xSpeed += xDir + xDir + xDir;
      000EA3 21r30r00              3589 	ld	hl, #_xDir
      000EA6 7E                    3590 	ld	a, (hl)
      000EA7 87                    3591 	add	a, a
      000EA8 86                    3592 	add	a, (hl)
      000EA9 21r32r00              3593 	ld	hl, #_xSpeed
      000EAC 86                    3594 	add	a, (hl)
      000EAD 77                    3595 	ld	(hl), a
                                   3596 ;main.c:332: ySpeed += yDir + yDir + yDir;
      000EAE 21r31r00              3597 	ld	hl, #_yDir
      000EB1 7E                    3598 	ld	a, (hl)
      000EB2 87                    3599 	add	a, a
      000EB3 86                    3600 	add	a, (hl)
      000EB4 21r33r00              3601 	ld	hl, #_ySpeed
      000EB7 86                    3602 	add	a, (hl)
      000EB8 77                    3603 	ld	(hl), a
      000EB9                       3604 00102$:
                                   3605 ;main.c:336: xSpeed = clamp(xSpeed, -100, 100);
      000EB9 21r32r00              3606 	ld	hl, #_xSpeed
      000EBC 4E                    3607 	ld	c, (hl)
                                   3608 ;main.c:191: return (value < min) ? min : (value > max) ? max : value;
      000EBD 79                    3609 	ld	a, c
      000EBE EE 80                 3610 	xor	a, #0x80
      000EC0 D6 1C                 3611 	sub	a, #0x1c
      000EC2 30 04                 3612 	jr	NC, 00147$
      000EC4 0E 9C                 3613 	ld	c, #0x9c
      000EC6 18 19                 3614 	jr	00148$
      000EC8                       3615 00147$:
      000EC8 59                    3616 	ld	e, c
      000EC9 3E 64                 3617 	ld	a,#0x64
      000ECB 57                    3618 	ld	d,a
      000ECC 91                    3619 	sub	a, c
      000ECD CB 7B                 3620 	bit	7, e
      000ECF 28 07                 3621 	jr	Z, 00289$
      000ED1 CB 7A                 3622 	bit	7, d
      000ED3 20 08                 3623 	jr	NZ, 00290$
      000ED5 BF                    3624 	cp	a, a
      000ED6 18 05                 3625 	jr	00290$
      000ED8                       3626 00289$:
      000ED8 CB 7A                 3627 	bit	7, d
      000EDA 28 01                 3628 	jr	Z, 00290$
      000EDC 37                    3629 	scf
      000EDD                       3630 00290$:
      000EDD 30 02                 3631 	jr	NC, 00149$
      000EDF 0E 64                 3632 	ld	c, #0x64
      000EE1                       3633 00149$:
      000EE1                       3634 00148$:
      000EE1 21r32r00              3635 	ld	hl, #_xSpeed
      000EE4 71                    3636 	ld	(hl), c
                                   3637 ;main.c:337: ySpeed = clamp(ySpeed, -100, 100);
      000EE5 21r33r00              3638 	ld	hl, #_ySpeed
      000EE8 4E                    3639 	ld	c, (hl)
                                   3640 ;main.c:191: return (value < min) ? min : (value > max) ? max : value;
      000EE9 79                    3641 	ld	a, c
      000EEA EE 80                 3642 	xor	a, #0x80
      000EEC D6 1C                 3643 	sub	a, #0x1c
      000EEE 30 04                 3644 	jr	NC, 00151$
      000EF0 0E 9C                 3645 	ld	c, #0x9c
      000EF2 18 19                 3646 	jr	00152$
      000EF4                       3647 00151$:
      000EF4 59                    3648 	ld	e, c
      000EF5 3E 64                 3649 	ld	a,#0x64
      000EF7 57                    3650 	ld	d,a
      000EF8 91                    3651 	sub	a, c
      000EF9 CB 7B                 3652 	bit	7, e
      000EFB 28 07                 3653 	jr	Z, 00291$
      000EFD CB 7A                 3654 	bit	7, d
      000EFF 20 08                 3655 	jr	NZ, 00292$
      000F01 BF                    3656 	cp	a, a
      000F02 18 05                 3657 	jr	00292$
      000F04                       3658 00291$:
      000F04 CB 7A                 3659 	bit	7, d
      000F06 28 01                 3660 	jr	Z, 00292$
      000F08 37                    3661 	scf
      000F09                       3662 00292$:
      000F09 30 02                 3663 	jr	NC, 00153$
      000F0B 0E 64                 3664 	ld	c, #0x64
      000F0D                       3665 00153$:
      000F0D                       3666 00152$:
      000F0D 21r33r00              3667 	ld	hl, #_ySpeed
      000F10 71                    3668 	ld	(hl), c
                                   3669 ;main.c:339: xOverflow = 0;
      000F11 AF                    3670 	xor	a, a
      000F12 21r3Er00              3671 	ld	hl, #_xOverflow
      000F15 22                    3672 	ld	(hl+), a
      000F16 77                    3673 	ld	(hl), a
                                   3674 ;main.c:340: yOverflow = 0;
      000F17 AF                    3675 	xor	a, a
      000F18 21r40r00              3676 	ld	hl, #_yOverflow
      000F1B 22                    3677 	ld	(hl+), a
      000F1C 77                    3678 	ld	(hl), a
                                   3679 ;main.c:345: uint8_t xCollisionPoint = playerDrawX -4; 
      000F1D 21r38r00              3680 	ld	hl, #_playerDrawX
      000F20 46                    3681 	ld	b, (hl)
      000F21 78                    3682 	ld	a, b
      000F22 C6 FC                 3683 	add	a, #0xfc
      000F24 4F                    3684 	ld	c, a
                                   3685 ;main.c:347: if (xSpeed > 0) {
      000F25 21r32r00              3686 	ld	hl, #_xSpeed
      000F28 5E                    3687 	ld	e, (hl)
      000F29 AF                    3688 	xor	a, a
      000F2A 57                    3689 	ld	d, a
      000F2B 96                    3690 	sub	a, (hl)
      000F2C CB 7B                 3691 	bit	7, e
      000F2E 28 07                 3692 	jr	Z, 00293$
      000F30 CB 7A                 3693 	bit	7, d
      000F32 20 08                 3694 	jr	NZ, 00294$
      000F34 BF                    3695 	cp	a, a
      000F35 18 05                 3696 	jr	00294$
      000F37                       3697 00293$:
      000F37 CB 7A                 3698 	bit	7, d
      000F39 28 01                 3699 	jr	Z, 00294$
      000F3B 37                    3700 	scf
      000F3C                       3701 00294$:
      000F3C 30 04                 3702 	jr	NC, 00104$
                                   3703 ;main.c:348: xCollisionPoint = playerDrawX; //right edge
      000F3E 21r38r00              3704 	ld	hl, #_playerDrawX
      000F41 4E                    3705 	ld	c, (hl)
      000F42                       3706 00104$:
                                   3707 ;main.c:350: if (xSpeed < 0) {
      000F42 FAr32r00              3708 	ld	a, (#_xSpeed)
      000F45 CB 7F                 3709 	bit	7, a
      000F47 28 04                 3710 	jr	Z, 00106$
                                   3711 ;main.c:351: xCollisionPoint = playerDrawX -8; //left edge
      000F49 78                    3712 	ld	a, b
      000F4A C6 F8                 3713 	add	a, #0xf8
      000F4C 4F                    3714 	ld	c, a
      000F4D                       3715 00106$:
                                   3716 ;main.c:355: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      000F4D 06 00                 3717 	ld	b, #0x00
      000F4F 79                    3718 	ld	a, c
      000F50 21r3Ar00              3719 	ld	hl, #_bgX
      000F53 86                    3720 	add	a, (hl)
      000F54 23                    3721 	inc	hl
      000F55 4F                    3722 	ld	c, a
      000F56 78                    3723 	ld	a, b
      000F57 8E                    3724 	adc	a, (hl)
      000F58 47                    3725 	ld	b, a
      000F59 CB 28                 3726 	sra	b
      000F5B CB 19                 3727 	rr	c
      000F5D CB 28                 3728 	sra	b
      000F5F CB 19                 3729 	rr	c
      000F61 CB 28                 3730 	sra	b
      000F63 CB 19                 3731 	rr	c
      000F65 11 20 00              3732 	ld	de, #0x0020
      000F68 D5                    3733 	push	de
      000F69 C5                    3734 	push	bc
      000F6A CDr00r00              3735 	call	__modsint
      000F6D E8 04                 3736 	add	sp, #4
                                   3737 ;main.c:359: uint8_t bgindY = ((playerDrawY-12 + bgY) >> 3)%32; 
      000F6F FAr39r00              3738 	ld	a, (#_playerDrawY)
      000F72 06 00                 3739 	ld	b, #0x00
      000F74 C6 F4                 3740 	add	a, #0xf4
      000F76 4F                    3741 	ld	c, a
      000F77 78                    3742 	ld	a, b
      000F78 CE FF                 3743 	adc	a, #0xff
      000F7A 47                    3744 	ld	b, a
      000F7B 79                    3745 	ld	a, c
      000F7C 21r3Cr00              3746 	ld	hl, #_bgY
      000F7F 86                    3747 	add	a, (hl)
      000F80 23                    3748 	inc	hl
      000F81 4F                    3749 	ld	c, a
      000F82 78                    3750 	ld	a, b
      000F83 8E                    3751 	adc	a, (hl)
      000F84 47                    3752 	ld	b, a
      000F85 CB 28                 3753 	sra	b
      000F87 CB 19                 3754 	rr	c
      000F89 CB 28                 3755 	sra	b
      000F8B CB 19                 3756 	rr	c
      000F8D CB 28                 3757 	sra	b
      000F8F CB 19                 3758 	rr	c
      000F91 D5                    3759 	push	de
      000F92 21 20 00              3760 	ld	hl, #0x0020
      000F95 E5                    3761 	push	hl
      000F96 C5                    3762 	push	bc
      000F97 CDr00r00              3763 	call	__modsint
      000F9A E8 04                 3764 	add	sp, #4
      000F9C 6B                    3765 	ld	l, e
                                   3766 ;	spillPairReg hl
                                   3767 ;	spillPairReg hl
                                   3768 ;	spillPairReg hl
                                   3769 ;	spillPairReg hl
      000F9D D1                    3770 	pop	de
                                   3771 ;main.c:362: uint16_t ind = 32*bgindY + bgindX;
      000F9E 26 00                 3772 	ld	h, #0x00
                                   3773 ;	spillPairReg hl
                                   3774 ;	spillPairReg hl
      000FA0 29                    3775 	add	hl, hl
      000FA1 29                    3776 	add	hl, hl
      000FA2 29                    3777 	add	hl, hl
      000FA3 29                    3778 	add	hl, hl
      000FA4 29                    3779 	add	hl, hl
      000FA5 19                    3780 	add	hl, de
                                   3781 ;main.c:363: uint8_t result = background1[ind] != BLANK[0];
      000FA6 01r87r00              3782 	ld	bc,#_background1
      000FA9 09                    3783 	add	hl,bc
      000FAA 4E                    3784 	ld	c, (hl)
      000FAB FAr87r05              3785 	ld	a, (#_BLANK + 0)
      000FAE F8 00                 3786 	ldhl	sp,	#0
      000FB0 77                    3787 	ld	(hl), a
      000FB1 79                    3788 	ld	a, c
      000FB2 F8 00                 3789 	ldhl	sp,	#0
      000FB4 96                    3790 	sub	a, (hl)
      000FB5 3E 01                 3791 	ld	a, #0x01
      000FB7 28 01                 3792 	jr	Z, 00296$
      000FB9 AF                    3793 	xor	a, a
      000FBA                       3794 00296$:
                                   3795 ;main.c:364: if (result == 0) {
      000FBA EE 01                 3796 	xor	a,#0x01
      000FBC C2r89r10              3797 	jp	NZ, 00111$
                                   3798 ;main.c:365: playerX+=xSpeed;
      000FBF FAr32r00              3799 	ld	a, (#_xSpeed)
      000FC2 4F                    3800 	ld	c, a
      000FC3 07                    3801 	rlca
      000FC4 9F                    3802 	sbc	a, a
      000FC5 47                    3803 	ld	b, a
      000FC6 21r34r00              3804 	ld	hl, #_playerX
      000FC9 6E                    3805 	ld	l, (hl)
                                   3806 ;	spillPairReg hl
                                   3807 ;	spillPairReg hl
      000FCA FAr35r00              3808 	ld	a, (_playerX + 1)
      000FCD 67                    3809 	ld	h, a
                                   3810 ;	spillPairReg hl
                                   3811 ;	spillPairReg hl
      000FCE 09                    3812 	add	hl, bc
      000FCF 4D                    3813 	ld	c, l
      000FD0 7C                    3814 	ld	a, h
      000FD1 21r34r00              3815 	ld	hl, #_playerX
      000FD4 71                    3816 	ld	(hl), c
      000FD5 23                    3817 	inc	hl
                                   3818 ;main.c:367: uint16_t limitedPlayerX = u16Clamp(playerX, 58<<5, 110<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      000FD6 32                    3819 	ld	(hl-), a
      000FD7 2A                    3820 	ld	a, (hl+)
      000FD8 4F                    3821 	ld	c, a
      000FD9 46                    3822 	ld	b, (hl)
      000FDA 79                    3823 	ld	a, c
      000FDB D6 40                 3824 	sub	a, #0x40
      000FDD 78                    3825 	ld	a, b
      000FDE DE 07                 3826 	sbc	a, #0x07
      000FE0 30 05                 3827 	jr	NC, 00155$
      000FE2 01 40 07              3828 	ld	bc, #0x0740
      000FE5 18 0B                 3829 	jr	00156$
      000FE7                       3830 00155$:
      000FE7 3E C0                 3831 	ld	a, #0xc0
      000FE9 B9                    3832 	cp	a, c
      000FEA 3E 0D                 3833 	ld	a, #0x0d
      000FEC 98                    3834 	sbc	a, b
      000FED 30 03                 3835 	jr	NC, 00157$
      000FEF 01 C0 0D              3836 	ld	bc, #0x0dc0
      000FF2                       3837 00157$:
      000FF2                       3838 00156$:
      000FF2 59                    3839 	ld	e,c
      000FF3 50                    3840 	ld	d,b
                                   3841 ;main.c:369: xOverflow = (playerX - limitedPlayerX);
      000FF4 FAr34r00              3842 	ld	a, (#_playerX)
      000FF7 93                    3843 	sub	a, e
      000FF8 EAr3Er00              3844 	ld	(#_xOverflow),a
      000FFB FAr35r00              3845 	ld	a, (#_playerX + 1)
      000FFE 9A                    3846 	sbc	a, d
      000FFF 21r3Fr00              3847 	ld	hl, #_xOverflow + 1
                                   3848 ;main.c:370: if (xOverflow >= 0) {
      001002 32                    3849 	ld	(hl-), a
      001003 6E                    3850 	ld	l, (hl)
                                   3851 ;	spillPairReg hl
                                   3852 ;	spillPairReg hl
      001004 FAr3Fr00              3853 	ld	a, (_xOverflow + 1)
                                   3854 ;	spillPairReg hl
                                   3855 ;	spillPairReg hl
      001007 CB 7F                 3856 	bit	7,a
      001009 20 22                 3857 	jr	NZ, 00108$
                                   3858 ;main.c:371: xOverflow = xOverflow >> 5;
      00100B 21r3Fr00              3859 	ld	hl, #_xOverflow + 1
      00100E CB 2E                 3860 	sra	(hl)
      001010 2B                    3861 	dec	hl
      001011 CB 1E                 3862 	rr	(hl)
      001013 23                    3863 	inc	hl
      001014 CB 2E                 3864 	sra	(hl)
      001016 2B                    3865 	dec	hl
      001017 CB 1E                 3866 	rr	(hl)
      001019 23                    3867 	inc	hl
      00101A CB 2E                 3868 	sra	(hl)
      00101C 2B                    3869 	dec	hl
      00101D CB 1E                 3870 	rr	(hl)
      00101F 23                    3871 	inc	hl
      001020 CB 2E                 3872 	sra	(hl)
      001022 2B                    3873 	dec	hl
      001023 CB 1E                 3874 	rr	(hl)
      001025 23                    3875 	inc	hl
      001026 CB 2E                 3876 	sra	(hl)
      001028 2B                    3877 	dec	hl
      001029 CB 1E                 3878 	rr	(hl)
      00102B 18 25                 3879 	jr	00109$
      00102D                       3880 00108$:
                                   3881 ;main.c:374: xOverflow = -((-xOverflow) >> 5);
      00102D AF                    3882 	xor	a, a
      00102E 21r3Er00              3883 	ld	hl, #_xOverflow
      001031 96                    3884 	sub	a, (hl)
      001032 23                    3885 	inc	hl
      001033 5F                    3886 	ld	e, a
      001034 9F                    3887 	sbc	a, a
      001035 96                    3888 	sub	a, (hl)
      001036 2B                    3889 	dec	hl
      001037 57                    3890 	ld	d, a
      001038 CB 2A                 3891 	sra	d
      00103A CB 1B                 3892 	rr	e
      00103C CB 2A                 3893 	sra	d
      00103E CB 1B                 3894 	rr	e
      001040 CB 2A                 3895 	sra	d
      001042 CB 1B                 3896 	rr	e
      001044 CB 2A                 3897 	sra	d
      001046 CB 1B                 3898 	rr	e
      001048 CB 2A                 3899 	sra	d
      00104A CB 1B                 3900 	rr	e
      00104C AF                    3901 	xor	a, a
      00104D 93                    3902 	sub	a, e
      00104E 22                    3903 	ld	(hl+), a
      00104F 9F                    3904 	sbc	a, a
      001050 92                    3905 	sub	a, d
      001051 77                    3906 	ld	(hl), a
      001052                       3907 00109$:
                                   3908 ;main.c:376: bgX += xOverflow;
      001052 FAr3Ar00              3909 	ld	a, (#_bgX)
      001055 21r3Er00              3910 	ld	hl, #_xOverflow
      001058 86                    3911 	add	a, (hl)
      001059 21r3Ar00              3912 	ld	hl, #_bgX
      00105C 22                    3913 	ld	(hl+), a
      00105D 7E                    3914 	ld	a, (hl)
      00105E 21r3Fr00              3915 	ld	hl, #_xOverflow + 1
      001061 8E                    3916 	adc	a, (hl)
      001062 EAr3Br00              3917 	ld	(#_bgX + 1),a
                                   3918 ;main.c:377: playerX = limitedPlayerX;
      001065 21r34r00              3919 	ld	hl, #_playerX
      001068 79                    3920 	ld	a, c
      001069 22                    3921 	ld	(hl+), a
                                   3922 ;main.c:378: playerDrawX=playerX >> 5;
      00106A 78                    3923 	ld	a, b
      00106B 32                    3924 	ld	(hl-), a
      00106C 2A                    3925 	ld	a, (hl+)
      00106D 4F                    3926 	ld	c, a
      00106E 46                    3927 	ld	b, (hl)
      00106F CB 38                 3928 	srl	b
      001071 CB 19                 3929 	rr	c
      001073 CB 38                 3930 	srl	b
      001075 CB 19                 3931 	rr	c
      001077 CB 38                 3932 	srl	b
      001079 CB 19                 3933 	rr	c
      00107B CB 38                 3934 	srl	b
      00107D CB 19                 3935 	rr	c
      00107F CB 38                 3936 	srl	b
      001081 CB 19                 3937 	rr	c
      001083 21r38r00              3938 	ld	hl, #_playerDrawX
      001086 71                    3939 	ld	(hl), c
      001087 18 05                 3940 	jr	00112$
      001089                       3941 00111$:
                                   3942 ;main.c:386: xSpeed = 0;
      001089 21r32r00              3943 	ld	hl, #_xSpeed
      00108C 36 00                 3944 	ld	(hl), #0x00
      00108E                       3945 00112$:
                                   3946 ;main.c:394: uint8_t yCollisionPoint = playerDrawY -12; 
      00108E 21r39r00              3947 	ld	hl, #_playerDrawY
      001091 46                    3948 	ld	b, (hl)
      001092 78                    3949 	ld	a, b
      001093 C6 F4                 3950 	add	a, #0xf4
      001095 4F                    3951 	ld	c, a
                                   3952 ;main.c:396: if (ySpeed > 0) {
      001096 21r33r00              3953 	ld	hl, #_ySpeed
      001099 5E                    3954 	ld	e, (hl)
      00109A AF                    3955 	xor	a, a
      00109B 57                    3956 	ld	d, a
      00109C 96                    3957 	sub	a, (hl)
      00109D CB 7B                 3958 	bit	7, e
      00109F 28 07                 3959 	jr	Z, 00297$
      0010A1 CB 7A                 3960 	bit	7, d
      0010A3 20 08                 3961 	jr	NZ, 00298$
      0010A5 BF                    3962 	cp	a, a
      0010A6 18 05                 3963 	jr	00298$
      0010A8                       3964 00297$:
      0010A8 CB 7A                 3965 	bit	7, d
      0010AA 28 01                 3966 	jr	Z, 00298$
      0010AC 37                    3967 	scf
      0010AD                       3968 00298$:
      0010AD 30 04                 3969 	jr	NC, 00114$
                                   3970 ;main.c:397: yCollisionPoint = playerDrawY - 8; //bottom edge, only half the height, so -8
      0010AF 78                    3971 	ld	a, b
      0010B0 C6 F8                 3972 	add	a, #0xf8
      0010B2 4F                    3973 	ld	c, a
      0010B3                       3974 00114$:
                                   3975 ;main.c:399: if (ySpeed < 0) {
      0010B3 FAr33r00              3976 	ld	a, (#_ySpeed)
      0010B6 CB 7F                 3977 	bit	7, a
      0010B8 28 04                 3978 	jr	Z, 00116$
                                   3979 ;main.c:400: yCollisionPoint = playerDrawY -16; //top edge, 
      0010BA 78                    3980 	ld	a, b
      0010BB C6 F0                 3981 	add	a, #0xf0
      0010BD 4F                    3982 	ld	c, a
      0010BE                       3983 00116$:
                                   3984 ;main.c:404: bgindX = ((playerDrawX -4 + bgX) >> 3)%32;
      0010BE FAr38r00              3985 	ld	a, (#_playerDrawX)
      0010C1 06 00                 3986 	ld	b, #0x00
      0010C3 C6 FC                 3987 	add	a, #0xfc
      0010C5 5F                    3988 	ld	e, a
      0010C6 78                    3989 	ld	a, b
      0010C7 CE FF                 3990 	adc	a, #0xff
      0010C9 57                    3991 	ld	d, a
      0010CA 7B                    3992 	ld	a, e
      0010CB 21r3Ar00              3993 	ld	hl, #_bgX
      0010CE 86                    3994 	add	a, (hl)
      0010CF 23                    3995 	inc	hl
      0010D0 5F                    3996 	ld	e, a
      0010D1 7A                    3997 	ld	a, d
      0010D2 8E                    3998 	adc	a, (hl)
      0010D3 57                    3999 	ld	d, a
      0010D4 CB 2A                 4000 	sra	d
      0010D6 CB 1B                 4001 	rr	e
      0010D8 CB 2A                 4002 	sra	d
      0010DA CB 1B                 4003 	rr	e
      0010DC CB 2A                 4004 	sra	d
      0010DE CB 1B                 4005 	rr	e
      0010E0 C5                    4006 	push	bc
      0010E1 21 20 00              4007 	ld	hl, #0x0020
      0010E4 E5                    4008 	push	hl
      0010E5 D5                    4009 	push	de
      0010E6 CDr00r00              4010 	call	__modsint
      0010E9 E8 04                 4011 	add	sp, #4
      0010EB C1                    4012 	pop	bc
                                   4013 ;main.c:407: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      0010EC 06 00                 4014 	ld	b, #0x00
      0010EE 79                    4015 	ld	a, c
      0010EF 21r3Cr00              4016 	ld	hl, #_bgY
      0010F2 86                    4017 	add	a, (hl)
      0010F3 23                    4018 	inc	hl
      0010F4 4F                    4019 	ld	c, a
      0010F5 78                    4020 	ld	a, b
      0010F6 8E                    4021 	adc	a, (hl)
      0010F7 47                    4022 	ld	b, a
      0010F8 CB 28                 4023 	sra	b
      0010FA CB 19                 4024 	rr	c
      0010FC CB 28                 4025 	sra	b
      0010FE CB 19                 4026 	rr	c
      001100 CB 28                 4027 	sra	b
      001102 CB 19                 4028 	rr	c
      001104 D5                    4029 	push	de
      001105 21 20 00              4030 	ld	hl, #0x0020
      001108 E5                    4031 	push	hl
      001109 C5                    4032 	push	bc
      00110A CDr00r00              4033 	call	__modsint
      00110D E8 04                 4034 	add	sp, #4
      00110F 6B                    4035 	ld	l, e
                                   4036 ;	spillPairReg hl
                                   4037 ;	spillPairReg hl
      001110 D1                    4038 	pop	de
                                   4039 ;main.c:410: ind = 32*bgindY + bgindX;
      001111 26 00                 4040 	ld	h, #0x00
                                   4041 ;	spillPairReg hl
                                   4042 ;	spillPairReg hl
      001113 29                    4043 	add	hl, hl
      001114 29                    4044 	add	hl, hl
      001115 29                    4045 	add	hl, hl
      001116 29                    4046 	add	hl, hl
      001117 29                    4047 	add	hl, hl
      001118 19                    4048 	add	hl, de
                                   4049 ;main.c:411: result = background1[ind] != BLANK[0];
      001119 11r87r00              4050 	ld	de, #_background1
      00111C 19                    4051 	add	hl, de
      00111D 4E                    4052 	ld	c, (hl)
      00111E F8 00                 4053 	ldhl	sp,	#0
      001120 7E                    4054 	ld	a, (hl)
      001121 91                    4055 	sub	a, c
      001122 3E 01                 4056 	ld	a, #0x01
      001124 28 01                 4057 	jr	Z, 00300$
      001126 AF                    4058 	xor	a, a
      001127                       4059 00300$:
                                   4060 ;main.c:412: if (result == 0) {
      001127 EE 01                 4061 	xor	a,#0x01
      001129 C2rF7r11              4062 	jp	NZ, 00121$
                                   4063 ;main.c:413: playerY += ySpeed;
      00112C FAr33r00              4064 	ld	a, (#_ySpeed)
      00112F 4F                    4065 	ld	c, a
      001130 07                    4066 	rlca
      001131 9F                    4067 	sbc	a, a
      001132 47                    4068 	ld	b, a
      001133 21r36r00              4069 	ld	hl, #_playerY
      001136 6E                    4070 	ld	l, (hl)
                                   4071 ;	spillPairReg hl
                                   4072 ;	spillPairReg hl
      001137 FAr37r00              4073 	ld	a, (_playerY + 1)
      00113A 67                    4074 	ld	h, a
                                   4075 ;	spillPairReg hl
                                   4076 ;	spillPairReg hl
      00113B 09                    4077 	add	hl, bc
      00113C 4D                    4078 	ld	c, l
      00113D 44                    4079 	ld	b, h
      00113E 21r36r00              4080 	ld	hl, #_playerY
      001141 79                    4081 	ld	a, c
      001142 22                    4082 	ld	(hl+), a
                                   4083 ;main.c:415: uint16_t limitedPlayerY = u16Clamp(playerY, 61<<5, 107<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001143 78                    4084 	ld	a, b
      001144 32                    4085 	ld	(hl-), a
      001145 2A                    4086 	ld	a, (hl+)
      001146 5F                    4087 	ld	e, a
      001147 56                    4088 	ld	d, (hl)
      001148 7B                    4089 	ld	a, e
      001149 D6 A0                 4090 	sub	a, #0xa0
      00114B 7A                    4091 	ld	a, d
      00114C DE 07                 4092 	sbc	a, #0x07
      00114E 30 05                 4093 	jr	NC, 00159$
      001150 11 A0 07              4094 	ld	de, #0x07a0
      001153 18 0B                 4095 	jr	00160$
      001155                       4096 00159$:
      001155 3E 60                 4097 	ld	a, #0x60
      001157 BB                    4098 	cp	a, e
      001158 3E 0D                 4099 	ld	a, #0x0d
      00115A 9A                    4100 	sbc	a, d
      00115B 30 03                 4101 	jr	NC, 00161$
      00115D 11 60 0D              4102 	ld	de, #0x0d60
      001160                       4103 00161$:
      001160                       4104 00160$:
      001160 4B                    4105 	ld	c, e
      001161 42                    4106 	ld	b, d
                                   4107 ;main.c:417: yOverflow = (playerY - limitedPlayerY);
      001162 FAr36r00              4108 	ld	a, (#_playerY)
      001165 93                    4109 	sub	a, e
      001166 EAr40r00              4110 	ld	(#_yOverflow),a
      001169 FAr37r00              4111 	ld	a, (#_playerY + 1)
      00116C 9A                    4112 	sbc	a, d
      00116D 21r41r00              4113 	ld	hl, #_yOverflow + 1
                                   4114 ;main.c:418: if (yOverflow >= 0) {
      001170 32                    4115 	ld	(hl-), a
      001171 6E                    4116 	ld	l, (hl)
                                   4117 ;	spillPairReg hl
                                   4118 ;	spillPairReg hl
      001172 FAr41r00              4119 	ld	a, (_yOverflow + 1)
                                   4120 ;	spillPairReg hl
                                   4121 ;	spillPairReg hl
      001175 CB 7F                 4122 	bit	7,a
      001177 20 22                 4123 	jr	NZ, 00118$
                                   4124 ;main.c:419: yOverflow = yOverflow >> 5;
      001179 21r41r00              4125 	ld	hl, #_yOverflow + 1
      00117C CB 2E                 4126 	sra	(hl)
      00117E 2B                    4127 	dec	hl
      00117F CB 1E                 4128 	rr	(hl)
      001181 23                    4129 	inc	hl
      001182 CB 2E                 4130 	sra	(hl)
      001184 2B                    4131 	dec	hl
      001185 CB 1E                 4132 	rr	(hl)
      001187 23                    4133 	inc	hl
      001188 CB 2E                 4134 	sra	(hl)
      00118A 2B                    4135 	dec	hl
      00118B CB 1E                 4136 	rr	(hl)
      00118D 23                    4137 	inc	hl
      00118E CB 2E                 4138 	sra	(hl)
      001190 2B                    4139 	dec	hl
      001191 CB 1E                 4140 	rr	(hl)
      001193 23                    4141 	inc	hl
      001194 CB 2E                 4142 	sra	(hl)
      001196 2B                    4143 	dec	hl
      001197 CB 1E                 4144 	rr	(hl)
      001199 18 25                 4145 	jr	00119$
      00119B                       4146 00118$:
                                   4147 ;main.c:422: yOverflow = -((-yOverflow) >> 5);
      00119B AF                    4148 	xor	a, a
      00119C 21r40r00              4149 	ld	hl, #_yOverflow
      00119F 96                    4150 	sub	a, (hl)
      0011A0 23                    4151 	inc	hl
      0011A1 5F                    4152 	ld	e, a
      0011A2 9F                    4153 	sbc	a, a
      0011A3 96                    4154 	sub	a, (hl)
      0011A4 2B                    4155 	dec	hl
      0011A5 57                    4156 	ld	d, a
      0011A6 CB 2A                 4157 	sra	d
      0011A8 CB 1B                 4158 	rr	e
      0011AA CB 2A                 4159 	sra	d
      0011AC CB 1B                 4160 	rr	e
      0011AE CB 2A                 4161 	sra	d
      0011B0 CB 1B                 4162 	rr	e
      0011B2 CB 2A                 4163 	sra	d
      0011B4 CB 1B                 4164 	rr	e
      0011B6 CB 2A                 4165 	sra	d
      0011B8 CB 1B                 4166 	rr	e
      0011BA AF                    4167 	xor	a, a
      0011BB 93                    4168 	sub	a, e
      0011BC 22                    4169 	ld	(hl+), a
      0011BD 9F                    4170 	sbc	a, a
      0011BE 92                    4171 	sub	a, d
      0011BF 77                    4172 	ld	(hl), a
      0011C0                       4173 00119$:
                                   4174 ;main.c:424: bgY += yOverflow;
      0011C0 FAr3Cr00              4175 	ld	a, (#_bgY)
      0011C3 21r40r00              4176 	ld	hl, #_yOverflow
      0011C6 86                    4177 	add	a, (hl)
      0011C7 21r3Cr00              4178 	ld	hl, #_bgY
      0011CA 22                    4179 	ld	(hl+), a
      0011CB 7E                    4180 	ld	a, (hl)
      0011CC 21r41r00              4181 	ld	hl, #_yOverflow + 1
      0011CF 8E                    4182 	adc	a, (hl)
      0011D0 EAr3Dr00              4183 	ld	(#_bgY + 1),a
                                   4184 ;main.c:425: playerY = limitedPlayerY;
      0011D3 21r36r00              4185 	ld	hl, #_playerY
      0011D6 79                    4186 	ld	a, c
      0011D7 22                    4187 	ld	(hl+), a
                                   4188 ;main.c:426: playerDrawY=playerY >> 5;
      0011D8 78                    4189 	ld	a, b
      0011D9 32                    4190 	ld	(hl-), a
      0011DA 2A                    4191 	ld	a, (hl+)
      0011DB 4F                    4192 	ld	c, a
      0011DC 46                    4193 	ld	b, (hl)
      0011DD CB 38                 4194 	srl	b
      0011DF CB 19                 4195 	rr	c
      0011E1 CB 38                 4196 	srl	b
      0011E3 CB 19                 4197 	rr	c
      0011E5 CB 38                 4198 	srl	b
      0011E7 CB 19                 4199 	rr	c
      0011E9 CB 38                 4200 	srl	b
      0011EB CB 19                 4201 	rr	c
      0011ED CB 38                 4202 	srl	b
      0011EF CB 19                 4203 	rr	c
      0011F1 21r39r00              4204 	ld	hl, #_playerDrawY
      0011F4 71                    4205 	ld	(hl), c
      0011F5 18 05                 4206 	jr	00122$
      0011F7                       4207 00121$:
                                   4208 ;main.c:431: ySpeed = 0;
      0011F7 21r33r00              4209 	ld	hl, #_ySpeed
      0011FA 36 00                 4210 	ld	(hl), #0x00
      0011FC                       4211 00122$:
                                   4212 ;main.c:435: move_sprite(0, playerDrawX, playerDrawY);
      0011FC 21r39r00              4213 	ld	hl, #_playerDrawY
      0011FF 4E                    4214 	ld	c, (hl)
      001200 21r38r00              4215 	ld	hl, #_playerDrawX
      001203 46                    4216 	ld	b, (hl)
                                   4217 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001204 21r00r00              4218 	ld	hl, #_shadow_OAM
                                   4219 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001207 79                    4220 	ld	a, c
      001208 22                    4221 	ld	(hl+), a
      001209 70                    4222 	ld	(hl), b
                                   4223 ;main.c:438: if (bgX >= 256) {
      00120A 21r3Ar00              4224 	ld	hl, #_bgX
      00120D 2A                    4225 	ld	a, (hl+)
      00120E 4F                    4226 	ld	c, a
      00120F 46                    4227 	ld	b, (hl)
      001210 78                    4228 	ld	a, b
      001211 EE 80                 4229 	xor	a, #0x80
      001213 D6 81                 4230 	sub	a, #0x81
      001215 38 0F                 4231 	jr	C, 00124$
                                   4232 ;main.c:439: bgX = bgX % 256;
      001217 AF                    4233 	xor	a, a
      001218 3C                    4234 	inc	a
      001219 F5                    4235 	push	af
      00121A C5                    4236 	push	bc
      00121B CDr00r00              4237 	call	__modsint
      00121E E8 04                 4238 	add	sp, #4
      001220 21r3Ar00              4239 	ld	hl, #_bgX
      001223 7B                    4240 	ld	a, e
      001224 22                    4241 	ld	(hl+), a
      001225 72                    4242 	ld	(hl), d
      001226                       4243 00124$:
                                   4244 ;main.c:441: if (bgX < 0) {
      001226 21r3Ar00              4245 	ld	hl, #_bgX
      001229 2A                    4246 	ld	a, (hl+)
      00122A 4F                    4247 	ld	c, a
      00122B 46                    4248 	ld	b, (hl)
      00122C CB 78                 4249 	bit	7, b
      00122E 28 15                 4250 	jr	Z, 00126$
                                   4251 ;main.c:442: bgX = 255 - (bgX % 256);
      001230 AF                    4252 	xor	a, a
      001231 3C                    4253 	inc	a
      001232 F5                    4254 	push	af
      001233 C5                    4255 	push	bc
      001234 CDr00r00              4256 	call	__modsint
      001237 E8 04                 4257 	add	sp, #4
      001239 3E FF                 4258 	ld	a, #0xff
      00123B 93                    4259 	sub	a, e
      00123C 4F                    4260 	ld	c, a
      00123D 9F                    4261 	sbc	a, a
      00123E 92                    4262 	sub	a, d
      00123F 21r3Ar00              4263 	ld	hl, #_bgX
      001242 71                    4264 	ld	(hl), c
      001243 23                    4265 	inc	hl
      001244 77                    4266 	ld	(hl), a
      001245                       4267 00126$:
                                   4268 ;main.c:444: if (bgY >= 256) {
      001245 21r3Cr00              4269 	ld	hl, #_bgY
      001248 2A                    4270 	ld	a, (hl+)
      001249 4F                    4271 	ld	c, a
      00124A 46                    4272 	ld	b, (hl)
      00124B 78                    4273 	ld	a, b
      00124C EE 80                 4274 	xor	a, #0x80
      00124E D6 81                 4275 	sub	a, #0x81
      001250 38 0F                 4276 	jr	C, 00128$
                                   4277 ;main.c:445: bgY = bgY % 256;
      001252 AF                    4278 	xor	a, a
      001253 3C                    4279 	inc	a
      001254 F5                    4280 	push	af
      001255 C5                    4281 	push	bc
      001256 CDr00r00              4282 	call	__modsint
      001259 E8 04                 4283 	add	sp, #4
      00125B 21r3Cr00              4284 	ld	hl, #_bgY
      00125E 7B                    4285 	ld	a, e
      00125F 22                    4286 	ld	(hl+), a
      001260 72                    4287 	ld	(hl), d
      001261                       4288 00128$:
                                   4289 ;main.c:447: if (bgY < 0) {
      001261 21r3Cr00              4290 	ld	hl, #_bgY
      001264 2A                    4291 	ld	a, (hl+)
      001265 4F                    4292 	ld	c, a
      001266 46                    4293 	ld	b, (hl)
      001267 CB 78                 4294 	bit	7, b
      001269 28 15                 4295 	jr	Z, 00130$
                                   4296 ;main.c:448: bgY = 255 - (bgY % 256);
      00126B AF                    4297 	xor	a, a
      00126C 3C                    4298 	inc	a
      00126D F5                    4299 	push	af
      00126E C5                    4300 	push	bc
      00126F CDr00r00              4301 	call	__modsint
      001272 E8 04                 4302 	add	sp, #4
      001274 3E FF                 4303 	ld	a, #0xff
      001276 93                    4304 	sub	a, e
      001277 4F                    4305 	ld	c, a
      001278 9F                    4306 	sbc	a, a
      001279 92                    4307 	sub	a, d
      00127A 21r3Cr00              4308 	ld	hl, #_bgY
      00127D 71                    4309 	ld	(hl), c
      00127E 23                    4310 	inc	hl
      00127F 77                    4311 	ld	(hl), a
      001280                       4312 00130$:
                                   4313 ;main.c:451: move_bkg(bgX, bgY);
      001280 21r3Cr00              4314 	ld	hl, #_bgY
      001283 4E                    4315 	ld	c, (hl)
      001284 FAr3Ar00              4316 	ld	a, (#_bgX)
      001287 E0r00                 4317 	ldh	(_SCX_REG + 0), a
                                   4318 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001289 79                    4319 	ld	a, c
      00128A E0r00                 4320 	ldh	(_SCY_REG + 0), a
                                   4321 ;main.c:454: if (ySpeed > 0) ySpeed--;
      00128C 21r33r00              4322 	ld	hl, #_ySpeed
      00128F 5E                    4323 	ld	e, (hl)
      001290 AF                    4324 	xor	a, a
      001291 57                    4325 	ld	d, a
      001292 96                    4326 	sub	a, (hl)
      001293 CB 7B                 4327 	bit	7, e
      001295 28 07                 4328 	jr	Z, 00301$
      001297 CB 7A                 4329 	bit	7, d
      001299 20 08                 4330 	jr	NZ, 00302$
      00129B BF                    4331 	cp	a, a
      00129C 18 05                 4332 	jr	00302$
      00129E                       4333 00301$:
      00129E CB 7A                 4334 	bit	7, d
      0012A0 28 01                 4335 	jr	Z, 00302$
      0012A2 37                    4336 	scf
      0012A3                       4337 00302$:
      0012A3 30 04                 4338 	jr	NC, 00132$
      0012A5 21r33r00              4339 	ld	hl, #_ySpeed
      0012A8 35                    4340 	dec	(hl)
      0012A9                       4341 00132$:
                                   4342 ;main.c:455: if (ySpeed < 0) ySpeed++;
      0012A9 21r33r00              4343 	ld	hl, #_ySpeed
      0012AC CB 7E                 4344 	bit	7, (hl)
      0012AE 28 01                 4345 	jr	Z, 00134$
      0012B0 34                    4346 	inc	(hl)
      0012B1                       4347 00134$:
                                   4348 ;main.c:456: if (xSpeed > 0) xSpeed--;
      0012B1 21r32r00              4349 	ld	hl, #_xSpeed
      0012B4 5E                    4350 	ld	e, (hl)
      0012B5 AF                    4351 	xor	a, a
      0012B6 57                    4352 	ld	d, a
      0012B7 96                    4353 	sub	a, (hl)
      0012B8 CB 7B                 4354 	bit	7, e
      0012BA 28 07                 4355 	jr	Z, 00303$
      0012BC CB 7A                 4356 	bit	7, d
      0012BE 20 08                 4357 	jr	NZ, 00304$
      0012C0 BF                    4358 	cp	a, a
      0012C1 18 05                 4359 	jr	00304$
      0012C3                       4360 00303$:
      0012C3 CB 7A                 4361 	bit	7, d
      0012C5 28 01                 4362 	jr	Z, 00304$
      0012C7 37                    4363 	scf
      0012C8                       4364 00304$:
      0012C8 30 04                 4365 	jr	NC, 00136$
      0012CA 21r32r00              4366 	ld	hl, #_xSpeed
      0012CD 35                    4367 	dec	(hl)
      0012CE                       4368 00136$:
                                   4369 ;main.c:457: if (xSpeed < 0) xSpeed++;
      0012CE 21r32r00              4370 	ld	hl, #_xSpeed
      0012D1 CB 7E                 4371 	bit	7, (hl)
      0012D3 28 01                 4372 	jr	Z, 00145$
      0012D5 34                    4373 	inc	(hl)
      0012D6                       4374 00145$:
                                   4375 ;main.c:461: }
      0012D6 33                    4376 	inc	sp
      0012D7 C9                    4377 	ret
                                   4378 ;main.c:463: void takeDamage(int16_t amount) {
                                   4379 ;	---------------------------------
                                   4380 ; Function takeDamage
                                   4381 ; ---------------------------------
      0012D8                       4382 _takeDamage::
      0012D8 3B                    4383 	dec	sp
                                   4384 ;main.c:464: if (amount > shield) {
      0012D9 FAr89r00              4385 	ld	a, (#_shield)
      0012DC 4F                    4386 	ld	c, a
      0012DD 07                    4387 	rlca
      0012DE 9F                    4388 	sbc	a, a
      0012DF 47                    4389 	ld	b, a
                                   4390 ;main.c:466: hull -= (amount - shield);
      0012E0 F8 03                 4391 	ldhl	sp,	#3
      0012E2 7E                    4392 	ld	a, (hl)
      0012E3 F8 00                 4393 	ldhl	sp,	#0
      0012E5 77                    4394 	ld	(hl), a
                                   4395 ;main.c:464: if (amount > shield) {
      0012E6 F8 03                 4396 	ldhl	sp,	#3
      0012E8 79                    4397 	ld	a, c
      0012E9 96                    4398 	sub	a, (hl)
      0012EA 23                    4399 	inc	hl
      0012EB 78                    4400 	ld	a, b
      0012EC 9E                    4401 	sbc	a, (hl)
      0012ED 78                    4402 	ld	a, b
      0012EE 57                    4403 	ld	d, a
      0012EF CB 7E                 4404 	bit	7, (hl)
      0012F1 28 07                 4405 	jr	Z, 00111$
      0012F3 CB 7A                 4406 	bit	7, d
      0012F5 20 08                 4407 	jr	NZ, 00112$
      0012F7 BF                    4408 	cp	a, a
      0012F8 18 05                 4409 	jr	00112$
      0012FA                       4410 00111$:
      0012FA CB 7A                 4411 	bit	7, d
      0012FC 28 01                 4412 	jr	Z, 00112$
      0012FE 37                    4413 	scf
      0012FF                       4414 00112$:
      0012FF 30 10                 4415 	jr	NC, 00102$
                                   4416 ;main.c:465: shield = 0;
      001301 21r89r00              4417 	ld	hl, #_shield
      001304 36 00                 4418 	ld	(hl), #0x00
                                   4419 ;main.c:466: hull -= (amount - shield);
      001306 FAr88r00              4420 	ld	a, (#_hull)
      001309 F8 00                 4421 	ldhl	sp,	#0
      00130B 96                    4422 	sub	a, (hl)
      00130C EAr88r00              4423 	ld	(#_hull),a
      00130F 18 09                 4424 	jr	00104$
      001311                       4425 00102$:
                                   4426 ;main.c:469: shield -= amount;
      001311 FAr89r00              4427 	ld	a, (#_shield)
      001314 F8 00                 4428 	ldhl	sp,	#0
      001316 96                    4429 	sub	a, (hl)
      001317 EAr89r00              4430 	ld	(#_shield),a
      00131A                       4431 00104$:
                                   4432 ;main.c:471: }
      00131A 33                    4433 	inc	sp
      00131B C9                    4434 	ret
                                   4435 ;main.c:473: void checkCollision() {
                                   4436 ;	---------------------------------
                                   4437 ; Function checkCollision
                                   4438 ; ---------------------------------
      00131C                       4439 _checkCollision::
      00131C E8 ED                 4440 	add	sp, #-19
                                   4441 ;main.c:480: struct Enemy *eptr = enemies;
                                   4442 ;main.c:483: while (i < ENEMYCOUNT) {
      00131E 21r89r05              4443 	ld	hl, #_ENEMYCOUNT
      001321 4E                    4444 	ld	c, (hl)
      001322 AF                    4445 	xor	a, a
      001323 91                    4446 	sub	a, c
      001324 D2r4Fr16              4447 	jp	NC, 00123$
                                   4448 ;main.c:484: eptr += enemyCollisionCount;
      001327 21r42r00              4449 	ld	hl, #_enemyCollisionCount
      00132A 6E                    4450 	ld	l, (hl)
                                   4451 ;	spillPairReg hl
                                   4452 ;	spillPairReg hl
      00132B 26 00                 4453 	ld	h, #0x00
                                   4454 ;	spillPairReg hl
                                   4455 ;	spillPairReg hl
      00132D 29                    4456 	add	hl, hl
      00132E 29                    4457 	add	hl, hl
      00132F 29                    4458 	add	hl, hl
      001330 29                    4459 	add	hl, hl
      001331 11r00r00              4460 	ld	de, #_enemies
      001334 19                    4461 	add	hl, de
      001335 4D                    4462 	ld	c, l
      001336 44                    4463 	ld	b, h
                                   4464 ;main.c:485: if (eptr->visible && eptr->alive) {
      001337 21 0A 00              4465 	ld	hl, #0x000a
      00133A 09                    4466 	add	hl, bc
      00133B 7E                    4467 	ld	a, (hl)
      00133C B7                    4468 	or	a, a
      00133D CAr8Fr14              4469 	jp	Z, 00108$
      001340 21 09 00              4470 	ld	hl, #0x0009
      001343 09                    4471 	add	hl, bc
      001344 E5                    4472 	push	hl
      001345 7D                    4473 	ld	a, l
      001346 F8 0B                 4474 	ldhl	sp,	#11
      001348 77                    4475 	ld	(hl), a
      001349 E1                    4476 	pop	hl
      00134A 7C                    4477 	ld	a, h
      00134B F8 0A                 4478 	ldhl	sp,	#10
      00134D 32                    4479 	ld	(hl-), a
      00134E 2A                    4480 	ld	a, (hl+)
      00134F 5F                    4481 	ld	e, a
      001350 56                    4482 	ld	d, (hl)
      001351 1A                    4483 	ld	a, (de)
      001352 B7                    4484 	or	a, a
      001353 CAr8Fr14              4485 	jp	Z, 00108$
                                   4486 ;main.c:487: if (eptr->x > playerDrawX - PLAYERSIZE && eptr->x - (8>>(eptr->spriteCount-1)) < playerDrawX) 
      001356 59                    4487 	ld	e, c
      001357 50                    4488 	ld	d, b
      001358 1A                    4489 	ld	a, (de)
      001359 F8 0F                 4490 	ldhl	sp,	#15
      00135B 22                    4491 	ld	(hl+), a
      00135C 13                    4492 	inc	de
      00135D 1A                    4493 	ld	a, (de)
      00135E 77                    4494 	ld	(hl), a
      00135F FAr38r00              4495 	ld	a, (#_playerDrawX)
      001362 F8 0D                 4496 	ldhl	sp,	#13
      001364 22                    4497 	ld	(hl+), a
      001365 36 00                 4498 	ld	(hl), #0x00
      001367 FAr9Br05              4499 	ld	a, (#_PLAYERSIZE)
      00136A F8 07                 4500 	ldhl	sp,	#7
      00136C 22                    4501 	ld	(hl+), a
      00136D 36 00                 4502 	ld	(hl), #0x00
      00136F F8 0D                 4503 	ldhl	sp,#13
      001371 2A                    4504 	ld	a, (hl+)
      001372 5F                    4505 	ld	e, a
      001373 56                    4506 	ld	d, (hl)
      001374 F8 07                 4507 	ldhl	sp,	#7
      001376 2A                    4508 	ld	a,	(hl+)
      001377 66                    4509 	ld	h, (hl)
      001378 6F                    4510 	ld	l, a
      001379 7B                    4511 	ld	a, e
      00137A 95                    4512 	sub	a, l
      00137B 5F                    4513 	ld	e, a
      00137C 7A                    4514 	ld	a, d
      00137D 9C                    4515 	sbc	a, h
      00137E F8 12                 4516 	ldhl	sp,	#18
      001380 32                    4517 	ld	(hl-), a
      001381 73                    4518 	ld	(hl), e
      001382 F8 11                 4519 	ldhl	sp,	#17
      001384 5D                    4520 	ld	e, l
      001385 54                    4521 	ld	d, h
      001386 F8 0F                 4522 	ldhl	sp,	#15
      001388 1A                    4523 	ld	a, (de)
      001389 13                    4524 	inc	de
      00138A 96                    4525 	sub	a, (hl)
      00138B 23                    4526 	inc	hl
      00138C 1A                    4527 	ld	a, (de)
      00138D 9E                    4528 	sbc	a, (hl)
      00138E 1A                    4529 	ld	a, (de)
      00138F 57                    4530 	ld	d, a
      001390 5E                    4531 	ld	e, (hl)
      001391 CB 7B                 4532 	bit	7, e
      001393 28 07                 4533 	jr	Z, 00208$
      001395 CB 7A                 4534 	bit	7, d
      001397 20 08                 4535 	jr	NZ, 00209$
      001399 BF                    4536 	cp	a, a
      00139A 18 05                 4537 	jr	00209$
      00139C                       4538 00208$:
      00139C CB 7A                 4539 	bit	7, d
      00139E 28 01                 4540 	jr	Z, 00209$
      0013A0 37                    4541 	scf
      0013A1                       4542 00209$:
      0013A1 D2r8Fr14              4543 	jp	NC, 00108$
      0013A4 21 08 00              4544 	ld	hl, #0x0008
      0013A7 09                    4545 	add	hl, bc
      0013A8 5E                    4546 	ld	e, (hl)
      0013A9 1D                    4547 	dec	e
      0013AA F8 0B                 4548 	ldhl	sp,	#11
      0013AC 3E 08                 4549 	ld	a, #0x08
      0013AE 22                    4550 	ld	(hl+), a
      0013AF AF                    4551 	xor	a, a
      0013B0 77                    4552 	ld	(hl), a
      0013B1 1C                    4553 	inc	e
      0013B2 18 07                 4554 	jr	00211$
      0013B4                       4555 00210$:
      0013B4 F8 0C                 4556 	ldhl	sp,	#12
      0013B6 CB 2E                 4557 	sra	(hl)
      0013B8 2B                    4558 	dec	hl
      0013B9 CB 1E                 4559 	rr	(hl)
      0013BB                       4560 00211$:
      0013BB 1D                    4561 	dec	e
      0013BC 20 F6                 4562 	jr	NZ, 00210$
      0013BE F8 0F                 4563 	ldhl	sp,#15
      0013C0 2A                    4564 	ld	a, (hl+)
      0013C1 5F                    4565 	ld	e, a
      0013C2 56                    4566 	ld	d, (hl)
      0013C3 F8 0B                 4567 	ldhl	sp,	#11
      0013C5 2A                    4568 	ld	a,	(hl+)
      0013C6 66                    4569 	ld	h, (hl)
      0013C7 6F                    4570 	ld	l, a
      0013C8 7B                    4571 	ld	a, e
      0013C9 95                    4572 	sub	a, l
      0013CA 5F                    4573 	ld	e, a
      0013CB 7A                    4574 	ld	a, d
      0013CC 9C                    4575 	sbc	a, h
      0013CD F8 12                 4576 	ldhl	sp,	#18
      0013CF 32                    4577 	ld	(hl-), a
      0013D0 73                    4578 	ld	(hl), e
      0013D1 F8 11                 4579 	ldhl	sp,	#17
      0013D3 5D                    4580 	ld	e, l
      0013D4 54                    4581 	ld	d, h
      0013D5 F8 0D                 4582 	ldhl	sp,	#13
      0013D7 1A                    4583 	ld	a, (de)
      0013D8 13                    4584 	inc	de
      0013D9 96                    4585 	sub	a, (hl)
      0013DA 23                    4586 	inc	hl
      0013DB 1A                    4587 	ld	a, (de)
      0013DC 9E                    4588 	sbc	a, (hl)
      0013DD 1A                    4589 	ld	a, (de)
      0013DE 57                    4590 	ld	d, a
      0013DF 5E                    4591 	ld	e, (hl)
      0013E0 CB 7B                 4592 	bit	7, e
      0013E2 28 07                 4593 	jr	Z, 00212$
      0013E4 CB 7A                 4594 	bit	7, d
      0013E6 20 08                 4595 	jr	NZ, 00213$
      0013E8 BF                    4596 	cp	a, a
      0013E9 18 05                 4597 	jr	00213$
      0013EB                       4598 00212$:
      0013EB CB 7A                 4599 	bit	7, d
      0013ED 28 01                 4600 	jr	Z, 00213$
      0013EF 37                    4601 	scf
      0013F0                       4602 00213$:
      0013F0 D2r8Fr14              4603 	jp	NC, 00108$
                                   4604 ;main.c:489: if (eptr->y > playerDrawY - PLAYERSIZE && eptr->y -(8>>(eptr->spriteCount-1)) < playerDrawY) {
      0013F3 69                    4605 	ld	l, c
                                   4606 ;	spillPairReg hl
                                   4607 ;	spillPairReg hl
      0013F4 60                    4608 	ld	h, b
                                   4609 ;	spillPairReg hl
                                   4610 ;	spillPairReg hl
      0013F5 23                    4611 	inc	hl
      0013F6 23                    4612 	inc	hl
      0013F7 5D                    4613 	ld	e, l
      0013F8 54                    4614 	ld	d, h
      0013F9 1A                    4615 	ld	a, (de)
      0013FA F8 11                 4616 	ldhl	sp,	#17
      0013FC 22                    4617 	ld	(hl+), a
      0013FD 13                    4618 	inc	de
      0013FE 1A                    4619 	ld	a, (de)
      0013FF 77                    4620 	ld	(hl), a
      001400 FAr39r00              4621 	ld	a, (#_playerDrawY)
      001403 F8 0D                 4622 	ldhl	sp,	#13
      001405 22                    4623 	ld	(hl+), a
      001406 AF                    4624 	xor	a, a
      001407 32                    4625 	ld	(hl-), a
      001408 2A                    4626 	ld	a, (hl+)
      001409 5F                    4627 	ld	e, a
      00140A 56                    4628 	ld	d, (hl)
      00140B F8 07                 4629 	ldhl	sp,	#7
      00140D 2A                    4630 	ld	a,	(hl+)
      00140E 66                    4631 	ld	h, (hl)
      00140F 6F                    4632 	ld	l, a
      001410 7B                    4633 	ld	a, e
      001411 95                    4634 	sub	a, l
      001412 5F                    4635 	ld	e, a
      001413 7A                    4636 	ld	a, d
      001414 9C                    4637 	sbc	a, h
      001415 F8 10                 4638 	ldhl	sp,	#16
      001417 32                    4639 	ld	(hl-), a
      001418 73                    4640 	ld	(hl), e
      001419 F8 0F                 4641 	ldhl	sp,	#15
      00141B 5D                    4642 	ld	e, l
      00141C 54                    4643 	ld	d, h
      00141D F8 11                 4644 	ldhl	sp,	#17
      00141F 1A                    4645 	ld	a, (de)
      001420 13                    4646 	inc	de
      001421 96                    4647 	sub	a, (hl)
      001422 23                    4648 	inc	hl
      001423 1A                    4649 	ld	a, (de)
      001424 9E                    4650 	sbc	a, (hl)
      001425 1A                    4651 	ld	a, (de)
      001426 57                    4652 	ld	d, a
      001427 5E                    4653 	ld	e, (hl)
      001428 CB 7B                 4654 	bit	7, e
      00142A 28 07                 4655 	jr	Z, 00214$
      00142C CB 7A                 4656 	bit	7, d
      00142E 20 08                 4657 	jr	NZ, 00215$
      001430 BF                    4658 	cp	a, a
      001431 18 05                 4659 	jr	00215$
      001433                       4660 00214$:
      001433 CB 7A                 4661 	bit	7, d
      001435 28 01                 4662 	jr	Z, 00215$
      001437 37                    4663 	scf
      001438                       4664 00215$:
      001438 30 55                 4665 	jr	NC, 00108$
      00143A F8 11                 4666 	ldhl	sp,#17
      00143C 2A                    4667 	ld	a, (hl+)
      00143D 5F                    4668 	ld	e, a
      00143E 56                    4669 	ld	d, (hl)
      00143F F8 0B                 4670 	ldhl	sp,	#11
      001441 2A                    4671 	ld	a,	(hl+)
      001442 66                    4672 	ld	h, (hl)
      001443 6F                    4673 	ld	l, a
      001444 7B                    4674 	ld	a, e
      001445 95                    4675 	sub	a, l
      001446 5F                    4676 	ld	e, a
      001447 7A                    4677 	ld	a, d
      001448 9C                    4678 	sbc	a, h
      001449 F8 10                 4679 	ldhl	sp,	#16
      00144B 32                    4680 	ld	(hl-), a
      00144C 73                    4681 	ld	(hl), e
      00144D F8 0F                 4682 	ldhl	sp,	#15
      00144F 5D                    4683 	ld	e, l
      001450 54                    4684 	ld	d, h
      001451 F8 0D                 4685 	ldhl	sp,	#13
      001453 1A                    4686 	ld	a, (de)
      001454 13                    4687 	inc	de
      001455 96                    4688 	sub	a, (hl)
      001456 23                    4689 	inc	hl
      001457 1A                    4690 	ld	a, (de)
      001458 9E                    4691 	sbc	a, (hl)
      001459 1A                    4692 	ld	a, (de)
      00145A 57                    4693 	ld	d, a
      00145B 5E                    4694 	ld	e, (hl)
      00145C CB 7B                 4695 	bit	7, e
      00145E 28 07                 4696 	jr	Z, 00216$
      001460 CB 7A                 4697 	bit	7, d
      001462 20 08                 4698 	jr	NZ, 00217$
      001464 BF                    4699 	cp	a, a
      001465 18 05                 4700 	jr	00217$
      001467                       4701 00216$:
      001467 CB 7A                 4702 	bit	7, d
      001469 28 01                 4703 	jr	Z, 00217$
      00146B 37                    4704 	scf
      00146C                       4705 00217$:
      00146C 30 21                 4706 	jr	NC, 00108$
                                   4707 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00146E 21r2Ar00              4708 	ld	hl, #(_shadow_OAM + 42)
      001471 36 7F                 4709 	ld	(hl), #0x7f
                                   4710 ;main.c:491: eptr->alive = 0;
      001473 F8 09                 4711 	ldhl	sp,	#9
      001475 2A                    4712 	ld	a,	(hl+)
      001476 66                    4713 	ld	h, (hl)
      001477 6F                    4714 	ld	l, a
      001478 36 00                 4715 	ld	(hl), #0x00
                                   4716 ;main.c:492: takeDamage(eptr->damage);
      00147A 21 0B 00              4717 	ld	hl, #0x000b
      00147D 09                    4718 	add	hl, bc
      00147E 5E                    4719 	ld	e, (hl)
      00147F 16 00                 4720 	ld	d, #0x00
      001481 C5                    4721 	push	bc
      001482 D5                    4722 	push	de
      001483 CDrD8r12              4723 	call	_takeDamage
      001486 E1                    4724 	pop	hl
      001487 AF                    4725 	xor	a, a
      001488 F5                    4726 	push	af
      001489 33                    4727 	inc	sp
      00148A CDrDEr0D              4728 	call	_initEnemies
      00148D 33                    4729 	inc	sp
      00148E C1                    4730 	pop	bc
      00148F                       4731 00108$:
                                   4732 ;main.c:503: struct Projectile *pptr = projectiles;
      00148F F8 10                 4733 	ldhl	sp,	#16
      001491 3Er50                 4734 	ld	a, #<(_projectiles)
      001493 22                    4735 	ld	(hl+), a
      001494 36s00                 4736 	ld	(hl), #>(_projectiles)
                                   4737 ;main.c:505: while (j < PROJECTILECOUNT) {
      001496 21 02 00              4738 	ld	hl, #0x0002
      001499 09                    4739 	add	hl, bc
      00149A E5                    4740 	push	hl
      00149B 7D                    4741 	ld	a, l
      00149C F8 04                 4742 	ldhl	sp,	#4
      00149E 77                    4743 	ld	(hl), a
      00149F E1                    4744 	pop	hl
      0014A0 7C                    4745 	ld	a, h
      0014A1 F8 03                 4746 	ldhl	sp,	#3
      0014A3 77                    4747 	ld	(hl), a
      0014A4 21 08 00              4748 	ld	hl, #0x0008
      0014A7 09                    4749 	add	hl, bc
      0014A8 E5                    4750 	push	hl
      0014A9 7D                    4751 	ld	a, l
      0014AA F8 06                 4752 	ldhl	sp,	#6
      0014AC 77                    4753 	ld	(hl), a
      0014AD E1                    4754 	pop	hl
      0014AE 7C                    4755 	ld	a, h
      0014AF F8 05                 4756 	ldhl	sp,	#5
      0014B1 77                    4757 	ld	(hl), a
      0014B2 F8 12                 4758 	ldhl	sp,	#18
      0014B4 36 00                 4759 	ld	(hl), #0x00
      0014B6                       4760 00118$:
      0014B6 21r9Ar05              4761 	ld	hl, #_PROJECTILECOUNT
      0014B9 5E                    4762 	ld	e, (hl)
      0014BA F8 12                 4763 	ldhl	sp,	#18
      0014BC 7E                    4764 	ld	a, (hl)
      0014BD 93                    4765 	sub	a, e
      0014BE D2r4Fr16              4766 	jp	NC, 00123$
                                   4767 ;main.c:506: if (pptr->active) {
      0014C1 2B                    4768 	dec	hl
      0014C2 2B                    4769 	dec	hl
      0014C3 2A                    4770 	ld	a, (hl+)
      0014C4 5F                    4771 	ld	e, a
      0014C5 56                    4772 	ld	d, (hl)
      0014C6 21 08 00              4773 	ld	hl, #0x0008
      0014C9 19                    4774 	add	hl, de
      0014CA E5                    4775 	push	hl
      0014CB 7D                    4776 	ld	a, l
      0014CC F8 08                 4777 	ldhl	sp,	#8
      0014CE 77                    4778 	ld	(hl), a
      0014CF E1                    4779 	pop	hl
      0014D0 7C                    4780 	ld	a, h
      0014D1 F8 07                 4781 	ldhl	sp,	#7
      0014D3 32                    4782 	ld	(hl-), a
      0014D4 2A                    4783 	ld	a, (hl+)
      0014D5 5F                    4784 	ld	e, a
      0014D6 56                    4785 	ld	d, (hl)
      0014D7 1A                    4786 	ld	a, (de)
      0014D8 B7                    4787 	or	a, a
      0014D9 CAr36r16              4788 	jp	Z, 00117$
                                   4789 ;main.c:507: if (eptr->x > pptr->x - 8 && eptr->x - (8>>(eptr->spriteCount-1)) < pptr->x) {
      0014DC 59                    4790 	ld	e, c
      0014DD 50                    4791 	ld	d, b
      0014DE 1A                    4792 	ld	a, (de)
      0014DF F8 0A                 4793 	ldhl	sp,	#10
      0014E1 22                    4794 	ld	(hl+), a
      0014E2 13                    4795 	inc	de
      0014E3 1A                    4796 	ld	a, (de)
      0014E4 77                    4797 	ld	(hl), a
      0014E5 F8 10                 4798 	ldhl	sp,#16
      0014E7 2A                    4799 	ld	a, (hl+)
      0014E8 5F                    4800 	ld	e, a
      0014E9 56                    4801 	ld	d, (hl)
      0014EA 1A                    4802 	ld	a, (de)
      0014EB F8 0C                 4803 	ldhl	sp,	#12
      0014ED 22                    4804 	ld	(hl+), a
      0014EE 13                    4805 	inc	de
      0014EF 1A                    4806 	ld	a, (de)
      0014F0 32                    4807 	ld	(hl-), a
      0014F1 7E                    4808 	ld	a, (hl)
      0014F2 F8 08                 4809 	ldhl	sp,	#8
      0014F4 77                    4810 	ld	(hl), a
      0014F5 F8 0D                 4811 	ldhl	sp,	#13
      0014F7 7E                    4812 	ld	a, (hl)
      0014F8 F8 09                 4813 	ldhl	sp,	#9
      0014FA 32                    4814 	ld	(hl-), a
      0014FB 2A                    4815 	ld	a, (hl+)
      0014FC 5F                    4816 	ld	e, a
      0014FD 56                    4817 	ld	d, (hl)
      0014FE 21 08 00              4818 	ld	hl, #0x0008
      001501 7B                    4819 	ld	a, e
      001502 95                    4820 	sub	a, l
      001503 5F                    4821 	ld	e, a
      001504 7A                    4822 	ld	a, d
      001505 9C                    4823 	sbc	a, h
      001506 F8 0F                 4824 	ldhl	sp,	#15
      001508 32                    4825 	ld	(hl-), a
      001509 73                    4826 	ld	(hl), e
      00150A F8 0E                 4827 	ldhl	sp,	#14
      00150C 5D                    4828 	ld	e, l
      00150D 54                    4829 	ld	d, h
      00150E F8 0A                 4830 	ldhl	sp,	#10
      001510 1A                    4831 	ld	a, (de)
      001511 13                    4832 	inc	de
      001512 96                    4833 	sub	a, (hl)
      001513 23                    4834 	inc	hl
      001514 1A                    4835 	ld	a, (de)
      001515 9E                    4836 	sbc	a, (hl)
      001516 1A                    4837 	ld	a, (de)
      001517 57                    4838 	ld	d, a
      001518 CB 7E                 4839 	bit	7, (hl)
      00151A 28 07                 4840 	jr	Z, 00218$
      00151C CB 7A                 4841 	bit	7, d
      00151E 20 08                 4842 	jr	NZ, 00219$
      001520 BF                    4843 	cp	a, a
      001521 18 05                 4844 	jr	00219$
      001523                       4845 00218$:
      001523 CB 7A                 4846 	bit	7, d
      001525 28 01                 4847 	jr	Z, 00219$
      001527 37                    4848 	scf
      001528                       4849 00219$:
      001528 D2r36r16              4850 	jp	NC, 00117$
      00152B F8 04                 4851 	ldhl	sp,#4
      00152D 2A                    4852 	ld	a, (hl+)
      00152E 5F                    4853 	ld	e, a
      00152F 56                    4854 	ld	d, (hl)
      001530 1A                    4855 	ld	a, (de)
      001531 5F                    4856 	ld	e, a
      001532 1D                    4857 	dec	e
      001533 F8 08                 4858 	ldhl	sp,	#8
      001535 3E 08                 4859 	ld	a, #0x08
      001537 22                    4860 	ld	(hl+), a
      001538 AF                    4861 	xor	a, a
      001539 77                    4862 	ld	(hl), a
      00153A 1C                    4863 	inc	e
      00153B 18 07                 4864 	jr	00221$
      00153D                       4865 00220$:
      00153D F8 09                 4866 	ldhl	sp,	#9
      00153F CB 2E                 4867 	sra	(hl)
      001541 2B                    4868 	dec	hl
      001542 CB 1E                 4869 	rr	(hl)
      001544                       4870 00221$:
      001544 1D                    4871 	dec	e
      001545 20 F6                 4872 	jr	NZ, 00220$
      001547 F8 0A                 4873 	ldhl	sp,#10
      001549 2A                    4874 	ld	a, (hl+)
      00154A 5F                    4875 	ld	e, a
      00154B 56                    4876 	ld	d, (hl)
      00154C F8 08                 4877 	ldhl	sp,	#8
      00154E 2A                    4878 	ld	a,	(hl+)
      00154F 66                    4879 	ld	h, (hl)
      001550 6F                    4880 	ld	l, a
      001551 7B                    4881 	ld	a, e
      001552 95                    4882 	sub	a, l
      001553 5F                    4883 	ld	e, a
      001554 7A                    4884 	ld	a, d
      001555 9C                    4885 	sbc	a, h
      001556 F8 0F                 4886 	ldhl	sp,	#15
      001558 32                    4887 	ld	(hl-), a
      001559 73                    4888 	ld	(hl), e
      00155A F8 0E                 4889 	ldhl	sp,	#14
      00155C 5D                    4890 	ld	e, l
      00155D 54                    4891 	ld	d, h
      00155E F8 0C                 4892 	ldhl	sp,	#12
      001560 1A                    4893 	ld	a, (de)
      001561 13                    4894 	inc	de
      001562 96                    4895 	sub	a, (hl)
      001563 23                    4896 	inc	hl
      001564 1A                    4897 	ld	a, (de)
      001565 9E                    4898 	sbc	a, (hl)
      001566 1A                    4899 	ld	a, (de)
      001567 57                    4900 	ld	d, a
      001568 CB 7E                 4901 	bit	7, (hl)
      00156A 28 07                 4902 	jr	Z, 00222$
      00156C CB 7A                 4903 	bit	7, d
      00156E 20 08                 4904 	jr	NZ, 00223$
      001570 BF                    4905 	cp	a, a
      001571 18 05                 4906 	jr	00223$
      001573                       4907 00222$:
      001573 CB 7A                 4908 	bit	7, d
      001575 28 01                 4909 	jr	Z, 00223$
      001577 37                    4910 	scf
      001578                       4911 00223$:
      001578 D2r36r16              4912 	jp	NC, 00117$
                                   4913 ;main.c:508: if (eptr->y > pptr->y - 8 && eptr->y -(8>>(eptr->spriteCount-1)) < pptr->y ) {
      00157B F8 02                 4914 	ldhl	sp,#2
      00157D 2A                    4915 	ld	a, (hl+)
      00157E 5F                    4916 	ld	e, a
      00157F 56                    4917 	ld	d, (hl)
      001580 1A                    4918 	ld	a, (de)
      001581 F8 0E                 4919 	ldhl	sp,	#14
      001583 22                    4920 	ld	(hl+), a
      001584 13                    4921 	inc	de
      001585 1A                    4922 	ld	a, (de)
      001586 22                    4923 	ld	(hl+), a
      001587 2A                    4924 	ld	a, (hl+)
      001588 66                    4925 	ld	h, (hl)
                                   4926 ;	spillPairReg hl
                                   4927 ;	spillPairReg hl
      001589 6F                    4928 	ld	l, a
                                   4929 ;	spillPairReg hl
                                   4930 ;	spillPairReg hl
      00158A 23                    4931 	inc	hl
      00158B 23                    4932 	inc	hl
      00158C 5D                    4933 	ld	e, l
      00158D 54                    4934 	ld	d, h
      00158E 1A                    4935 	ld	a, (de)
      00158F F8 0A                 4936 	ldhl	sp,	#10
      001591 22                    4937 	ld	(hl+), a
      001592 13                    4938 	inc	de
      001593 1A                    4939 	ld	a, (de)
      001594 77                    4940 	ld	(hl), a
      001595 F8 0A                 4941 	ldhl	sp,	#10
      001597 7E                    4942 	ld	a, (hl)
      001598 F8 00                 4943 	ldhl	sp,	#0
      00159A 77                    4944 	ld	(hl), a
      00159B F8 0B                 4945 	ldhl	sp,	#11
      00159D 7E                    4946 	ld	a, (hl)
      00159E F8 01                 4947 	ldhl	sp,	#1
      0015A0 77                    4948 	ld	(hl), a
      0015A1 D1                    4949 	pop	de
      0015A2 D5                    4950 	push	de
      0015A3 21 08 00              4951 	ld	hl, #0x0008
      0015A6 7B                    4952 	ld	a, e
      0015A7 95                    4953 	sub	a, l
      0015A8 5F                    4954 	ld	e, a
      0015A9 7A                    4955 	ld	a, d
      0015AA 9C                    4956 	sbc	a, h
      0015AB F8 0D                 4957 	ldhl	sp,	#13
      0015AD 32                    4958 	ld	(hl-), a
      0015AE 73                    4959 	ld	(hl), e
      0015AF F8 0C                 4960 	ldhl	sp,	#12
      0015B1 5D                    4961 	ld	e, l
      0015B2 54                    4962 	ld	d, h
      0015B3 F8 0E                 4963 	ldhl	sp,	#14
      0015B5 1A                    4964 	ld	a, (de)
      0015B6 13                    4965 	inc	de
      0015B7 96                    4966 	sub	a, (hl)
      0015B8 23                    4967 	inc	hl
      0015B9 1A                    4968 	ld	a, (de)
      0015BA 9E                    4969 	sbc	a, (hl)
      0015BB 1A                    4970 	ld	a, (de)
      0015BC 57                    4971 	ld	d, a
      0015BD CB 7E                 4972 	bit	7, (hl)
      0015BF 28 07                 4973 	jr	Z, 00224$
      0015C1 CB 7A                 4974 	bit	7, d
      0015C3 20 08                 4975 	jr	NZ, 00225$
      0015C5 BF                    4976 	cp	a, a
      0015C6 18 05                 4977 	jr	00225$
      0015C8                       4978 00224$:
      0015C8 CB 7A                 4979 	bit	7, d
      0015CA 28 01                 4980 	jr	Z, 00225$
      0015CC 37                    4981 	scf
      0015CD                       4982 00225$:
      0015CD 30 67                 4983 	jr	NC, 00117$
      0015CF F8 0E                 4984 	ldhl	sp,#14
      0015D1 2A                    4985 	ld	a, (hl+)
      0015D2 5F                    4986 	ld	e, a
      0015D3 56                    4987 	ld	d, (hl)
      0015D4 F8 08                 4988 	ldhl	sp,	#8
      0015D6 2A                    4989 	ld	a,	(hl+)
      0015D7 66                    4990 	ld	h, (hl)
      0015D8 6F                    4991 	ld	l, a
      0015D9 7B                    4992 	ld	a, e
      0015DA 95                    4993 	sub	a, l
      0015DB 5F                    4994 	ld	e, a
      0015DC 7A                    4995 	ld	a, d
      0015DD 9C                    4996 	sbc	a, h
      0015DE F8 0D                 4997 	ldhl	sp,	#13
      0015E0 32                    4998 	ld	(hl-), a
      0015E1 73                    4999 	ld	(hl), e
      0015E2 2A                    5000 	ld	a, (hl+)
      0015E3 23                    5001 	inc	hl
      0015E4 32                    5002 	ld	(hl-), a
      0015E5 2A                    5003 	ld	a, (hl+)
      0015E6 23                    5004 	inc	hl
      0015E7 77                    5005 	ld	(hl), a
      0015E8 F8 0E                 5006 	ldhl	sp,	#14
      0015EA 5D                    5007 	ld	e, l
      0015EB 54                    5008 	ld	d, h
      0015EC F8 0A                 5009 	ldhl	sp,	#10
      0015EE 1A                    5010 	ld	a, (de)
      0015EF 13                    5011 	inc	de
      0015F0 96                    5012 	sub	a, (hl)
      0015F1 23                    5013 	inc	hl
      0015F2 1A                    5014 	ld	a, (de)
      0015F3 9E                    5015 	sbc	a, (hl)
      0015F4 1A                    5016 	ld	a, (de)
      0015F5 57                    5017 	ld	d, a
      0015F6 CB 7E                 5018 	bit	7, (hl)
      0015F8 28 07                 5019 	jr	Z, 00226$
      0015FA CB 7A                 5020 	bit	7, d
      0015FC 20 08                 5021 	jr	NZ, 00227$
      0015FE BF                    5022 	cp	a, a
      0015FF 18 05                 5023 	jr	00227$
      001601                       5024 00226$:
      001601 CB 7A                 5025 	bit	7, d
      001603 28 01                 5026 	jr	Z, 00227$
      001605 37                    5027 	scf
      001606                       5028 00227$:
      001606 30 2E                 5029 	jr	NC, 00117$
                                   5030 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001608 21r2Ar00              5031 	ld	hl, #(_shadow_OAM + 42)
      00160B 36 7F                 5032 	ld	(hl), #0x7f
                                   5033 ;main.c:510: eptr->alive = 0;
      00160D 21 09 00              5034 	ld	hl, #0x0009
      001610 09                    5035 	add	hl, bc
      001611 36 00                 5036 	ld	(hl), #0x00
                                   5037 ;main.c:511: initEnemies(0);
      001613 C5                    5038 	push	bc
      001614 AF                    5039 	xor	a, a
      001615 F5                    5040 	push	af
      001616 33                    5041 	inc	sp
      001617 CDrDEr0D              5042 	call	_initEnemies
      00161A 33                    5043 	inc	sp
      00161B C1                    5044 	pop	bc
                                   5045 ;main.c:512: set_sprite_tile(20+j, 0x7f);
      00161C F8 12                 5046 	ldhl	sp,	#18
      00161E 7E                    5047 	ld	a, (hl)
      00161F C6 14                 5048 	add	a, #0x14
      001621 5F                    5049 	ld	e, a
                                   5050 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001622 26 00                 5051 	ld	h, #0x00
                                   5052 ;	spillPairReg hl
                                   5053 ;	spillPairReg hl
      001624 6B                    5054 	ld	l, e
      001625 29                    5055 	add	hl, hl
      001626 29                    5056 	add	hl, hl
      001627 11r00r00              5057 	ld	de, #_shadow_OAM
      00162A 19                    5058 	add	hl, de
      00162B 23                    5059 	inc	hl
      00162C 23                    5060 	inc	hl
      00162D 36 7F                 5061 	ld	(hl), #0x7f
                                   5062 ;main.c:513: pptr->active = 0;
      00162F F8 06                 5063 	ldhl	sp,	#6
      001631 2A                    5064 	ld	a,	(hl+)
      001632 66                    5065 	ld	h, (hl)
      001633 6F                    5066 	ld	l, a
      001634 36 00                 5067 	ld	(hl), #0x00
      001636                       5068 00117$:
                                   5069 ;main.c:517: j++;
      001636 F8 12                 5070 	ldhl	sp,	#18
      001638 34                    5071 	inc	(hl)
                                   5072 ;main.c:518: pptr++;
      001639 2B                    5073 	dec	hl
      00163A 2B                    5074 	dec	hl
      00163B 2A                    5075 	ld	a, (hl+)
      00163C 5F                    5076 	ld	e, a
      00163D 56                    5077 	ld	d, (hl)
      00163E 21 0B 00              5078 	ld	hl, #0x000b
      001641 19                    5079 	add	hl, de
      001642 E5                    5080 	push	hl
      001643 7D                    5081 	ld	a, l
      001644 F8 12                 5082 	ldhl	sp,	#18
      001646 77                    5083 	ld	(hl), a
      001647 E1                    5084 	pop	hl
      001648 7C                    5085 	ld	a, h
      001649 F8 11                 5086 	ldhl	sp,	#17
      00164B 77                    5087 	ld	(hl), a
      00164C C3rB6r14              5088 	jp	00118$
                                   5089 ;main.c:525: break;
      00164F                       5090 00123$:
                                   5091 ;main.c:528: if (enemyCollisionCount == 0) {
      00164F FAr42r00              5092 	ld	a, (#_enemyCollisionCount)
      001652 B7                    5093 	or	a, a
      001653 20 09                 5094 	jr	NZ, 00125$
                                   5095 ;main.c:529: enemyCollisionCount = ENEMYCOUNT - 1;
      001655 FAr89r05              5096 	ld	a, (#_ENEMYCOUNT)
      001658 3D                    5097 	dec	a
      001659 EAr42r00              5098 	ld	(#_enemyCollisionCount),a
      00165C 18 04                 5099 	jr	00130$
      00165E                       5100 00125$:
                                   5101 ;main.c:532: enemyCollisionCount--;
      00165E 21r42r00              5102 	ld	hl, #_enemyCollisionCount
      001661 35                    5103 	dec	(hl)
      001662                       5104 00130$:
                                   5105 ;main.c:581: }
      001662 E8 13                 5106 	add	sp, #19
      001664 C9                    5107 	ret
                                   5108 ;main.c:592: void fire() {
                                   5109 ;	---------------------------------
                                   5110 ; Function fire
                                   5111 ; ---------------------------------
      001665                       5112 _fire::
      001665 3B                    5113 	dec	sp
                                   5114 ;main.c:594: oldestProjectile += 1;
      001666 21r2Er00              5115 	ld	hl, #_oldestProjectile
      001669 34                    5116 	inc	(hl)
      00166A 7E                    5117 	ld	a, (hl)
                                   5118 ;main.c:595: if (oldestProjectile >= PROJECTILECOUNT) {
      00166B 21r9Ar05              5119 	ld	hl, #_PROJECTILECOUNT
      00166E 4E                    5120 	ld	c, (hl)
      00166F 21r2Er00              5121 	ld	hl, #_oldestProjectile
      001672 7E                    5122 	ld	a, (hl)
      001673 91                    5123 	sub	a, c
      001674 38 02                 5124 	jr	C, 00102$
                                   5125 ;main.c:596: oldestProjectile = 0;
      001676 36 00                 5126 	ld	(hl), #0x00
      001678                       5127 00102$:
                                   5128 ;main.c:599: projectiles[oldestProjectile] = singleGun;
      001678 21r2Er00              5129 	ld	hl, #_oldestProjectile
      00167B 4E                    5130 	ld	c, (hl)
      00167C 06 00                 5131 	ld	b, #0x00
      00167E 69                    5132 	ld	l, c
      00167F 60                    5133 	ld	h, b
      001680 29                    5134 	add	hl, hl
      001681 29                    5135 	add	hl, hl
      001682 09                    5136 	add	hl, bc
      001683 29                    5137 	add	hl, hl
      001684 09                    5138 	add	hl, bc
      001685 01r50r00              5139 	ld	bc,#_projectiles
      001688 09                    5140 	add	hl,bc
      001689 11 0B 00              5141 	ld	de, #0x000b
      00168C D5                    5142 	push	de
      00168D 11r18r00              5143 	ld	de, #_singleGun
      001690 D5                    5144 	push	de
      001691 E5                    5145 	push	hl
      001692 CDr00r00              5146 	call	___memcpy
      001695 E8 06                 5147 	add	sp, #6
                                   5148 ;main.c:600: projectiles[oldestProjectile].x = playerDrawX;
      001697 21r2Er00              5149 	ld	hl, #_oldestProjectile
      00169A 4E                    5150 	ld	c, (hl)
      00169B 06 00                 5151 	ld	b, #0x00
      00169D 69                    5152 	ld	l, c
      00169E 60                    5153 	ld	h, b
      00169F 29                    5154 	add	hl, hl
      0016A0 29                    5155 	add	hl, hl
      0016A1 09                    5156 	add	hl, bc
      0016A2 29                    5157 	add	hl, hl
      0016A3 09                    5158 	add	hl, bc
      0016A4 01r50r00              5159 	ld	bc,#_projectiles
      0016A7 09                    5160 	add	hl,bc
      0016A8 E5                    5161 	push	hl
      0016A9 FAr38r00              5162 	ld	a, (#_playerDrawX)
      0016AC E1                    5163 	pop	hl
      0016AD 0E 00                 5164 	ld	c, #0x00
      0016AF 22                    5165 	ld	(hl+), a
      0016B0 71                    5166 	ld	(hl), c
                                   5167 ;main.c:601: projectiles[oldestProjectile].y = playerDrawY;
      0016B1 21r2Er00              5168 	ld	hl, #_oldestProjectile
      0016B4 4E                    5169 	ld	c, (hl)
      0016B5 06 00                 5170 	ld	b, #0x00
      0016B7 69                    5171 	ld	l, c
      0016B8 60                    5172 	ld	h, b
      0016B9 29                    5173 	add	hl, hl
      0016BA 29                    5174 	add	hl, hl
      0016BB 09                    5175 	add	hl, bc
      0016BC 29                    5176 	add	hl, hl
      0016BD 09                    5177 	add	hl, bc
      0016BE 01r50r00              5178 	ld	bc,#_projectiles
      0016C1 09                    5179 	add	hl,bc
      0016C2 23                    5180 	inc	hl
      0016C3 23                    5181 	inc	hl
      0016C4 E5                    5182 	push	hl
      0016C5 FAr39r00              5183 	ld	a, (#_playerDrawY)
      0016C8 E1                    5184 	pop	hl
      0016C9 0E 00                 5185 	ld	c, #0x00
      0016CB 22                    5186 	ld	(hl+), a
      0016CC 71                    5187 	ld	(hl), c
                                   5188 ;main.c:602: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      0016CD 21r2Er00              5189 	ld	hl, #_oldestProjectile
      0016D0 4E                    5190 	ld	c, (hl)
      0016D1 06 00                 5191 	ld	b, #0x00
      0016D3 69                    5192 	ld	l, c
      0016D4 60                    5193 	ld	h, b
      0016D5 29                    5194 	add	hl, hl
      0016D6 29                    5195 	add	hl, hl
      0016D7 09                    5196 	add	hl, bc
      0016D8 29                    5197 	add	hl, hl
      0016D9 09                    5198 	add	hl, bc
      0016DA 01r50r00              5199 	ld	bc,#_projectiles
      0016DD 09                    5200 	add	hl,bc
      0016DE 5D                    5201 	ld	e, l
      0016DF 54                    5202 	ld	d, h
      0016E0 21 04 00              5203 	ld	hl, #0x0004
      0016E3 19                    5204 	add	hl, de
      0016E4 4D                    5205 	ld	c, l
      0016E5 44                    5206 	ld	b, h
      0016E6 21 06 00              5207 	ld	hl, #0x0006
      0016E9 19                    5208 	add	hl, de
      0016EA 7E                    5209 	ld	a, (hl)
      0016EB C5                    5210 	push	bc
      0016EC F5                    5211 	push	af
      0016ED 33                    5212 	inc	sp
      0016EE FAr30r00              5213 	ld	a, (#_xDir)
      0016F1 F5                    5214 	push	af
      0016F2 33                    5215 	inc	sp
      0016F3 CDr00r00              5216 	call	__muluschar
      0016F6 E1                    5217 	pop	hl
      0016F7 7B                    5218 	ld	a, e
      0016F8 C1                    5219 	pop	bc
      0016F9 02                    5220 	ld	(bc), a
                                   5221 ;main.c:603: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      0016FA 21r2Er00              5222 	ld	hl, #_oldestProjectile
      0016FD 4E                    5223 	ld	c, (hl)
      0016FE 06 00                 5224 	ld	b, #0x00
      001700 69                    5225 	ld	l, c
      001701 60                    5226 	ld	h, b
      001702 29                    5227 	add	hl, hl
      001703 29                    5228 	add	hl, hl
      001704 09                    5229 	add	hl, bc
      001705 29                    5230 	add	hl, hl
      001706 09                    5231 	add	hl, bc
      001707 01r50r00              5232 	ld	bc,#_projectiles
      00170A 09                    5233 	add	hl,bc
      00170B 5D                    5234 	ld	e, l
      00170C 54                    5235 	ld	d, h
      00170D 21 05 00              5236 	ld	hl, #0x0005
      001710 19                    5237 	add	hl, de
      001711 4D                    5238 	ld	c, l
      001712 44                    5239 	ld	b, h
      001713 21 06 00              5240 	ld	hl, #0x0006
      001716 19                    5241 	add	hl, de
      001717 7E                    5242 	ld	a, (hl)
      001718 C5                    5243 	push	bc
      001719 F5                    5244 	push	af
      00171A 33                    5245 	inc	sp
      00171B FAr31r00              5246 	ld	a, (#_yDir)
      00171E F5                    5247 	push	af
      00171F 33                    5248 	inc	sp
      001720 CDr00r00              5249 	call	__muluschar
      001723 E1                    5250 	pop	hl
      001724 7B                    5251 	ld	a, e
      001725 C1                    5252 	pop	bc
      001726 02                    5253 	ld	(bc), a
                                   5254 ;main.c:594: oldestProjectile += 1;
      001727 FAr2Er00              5255 	ld	a, (#_oldestProjectile)
      00172A F8 00                 5256 	ldhl	sp,	#0
      00172C 77                    5257 	ld	(hl), a
                                   5258 ;main.c:599: projectiles[oldestProjectile] = singleGun;
      00172D 21r2Er00              5259 	ld	hl, #_oldestProjectile
      001730 4E                    5260 	ld	c, (hl)
      001731 06 00                 5261 	ld	b, #0x00
      001733 69                    5262 	ld	l, c
      001734 60                    5263 	ld	h, b
      001735 29                    5264 	add	hl, hl
      001736 29                    5265 	add	hl, hl
      001737 09                    5266 	add	hl, bc
      001738 29                    5267 	add	hl, hl
      001739 09                    5268 	add	hl, bc
                                   5269 ;main.c:606: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      00173A 01r50r00              5270 	ld	bc,#_projectiles
      00173D 09                    5271 	add	hl,bc
      00173E 5D                    5272 	ld	e, l
      00173F 54                    5273 	ld	d, h
      001740 F8 00                 5274 	ldhl	sp,	#0
      001742 7E                    5275 	ld	a, (hl)
      001743 C6 14                 5276 	add	a, #0x14
      001745 4F                    5277 	ld	c, a
      001746 21 0A 00              5278 	ld	hl, #0x000a
      001749 19                    5279 	add	hl, de
      00174A 5E                    5280 	ld	e, (hl)
                                   5281 ;main.c:605: if (yDir != 0 && xDir == 0) {
      00174B FAr31r00              5282 	ld	a, (#_yDir)
      00174E B7                    5283 	or	a, a
      00174F 28 40                 5284 	jr	Z, 00129$
      001751 FAr30r00              5285 	ld	a, (#_xDir)
      001754 B7                    5286 	or	a, a
      001755 20 3A                 5287 	jr	NZ, 00129$
                                   5288 ;main.c:606: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
                                   5289 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001757 69                    5290 	ld	l, c
                                   5291 ;	spillPairReg hl
                                   5292 ;	spillPairReg hl
      001758 26 00                 5293 	ld	h, #0x00
                                   5294 ;	spillPairReg hl
                                   5295 ;	spillPairReg hl
      00175A 29                    5296 	add	hl, hl
      00175B 29                    5297 	add	hl, hl
      00175C 01r00r00              5298 	ld	bc, #_shadow_OAM
      00175F 09                    5299 	add	hl, bc
      001760 23                    5300 	inc	hl
      001761 23                    5301 	inc	hl
      001762 73                    5302 	ld	(hl), e
                                   5303 ;main.c:594: oldestProjectile += 1;
      001763 FAr2Er00              5304 	ld	a, (#_oldestProjectile)
                                   5305 ;main.c:606: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      001766 C6 14                 5306 	add	a, #0x14
      001768 5F                    5307 	ld	e, a
                                   5308 ;main.c:607: if (yDir == 1) {
      001769 FAr31r00              5309 	ld	a, (#_yDir)
      00176C 3D                    5310 	dec	a
      00176D 20 11                 5311 	jr	NZ, 00104$
                                   5312 ;main.c:608: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
                                   5313 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00176F 01r00r00              5314 	ld	bc, #_shadow_OAM+0
      001772 6B                    5315 	ld	l, e
                                   5316 ;	spillPairReg hl
                                   5317 ;	spillPairReg hl
      001773 26 00                 5318 	ld	h, #0x00
                                   5319 ;	spillPairReg hl
                                   5320 ;	spillPairReg hl
      001775 29                    5321 	add	hl, hl
      001776 29                    5322 	add	hl, hl
      001777 09                    5323 	add	hl, bc
      001778 23                    5324 	inc	hl
      001779 23                    5325 	inc	hl
      00177A 23                    5326 	inc	hl
      00177B 36 40                 5327 	ld	(hl), #0x40
                                   5328 ;main.c:608: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
      00177D C3r99r18              5329 	jp	00130$
      001780                       5330 00104$:
                                   5331 ;main.c:613: set_sprite_prop(20+oldestProjectile, 0); 
                                   5332 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001780 01r00r00              5333 	ld	bc, #_shadow_OAM+0
      001783 6B                    5334 	ld	l, e
                                   5335 ;	spillPairReg hl
                                   5336 ;	spillPairReg hl
      001784 26 00                 5337 	ld	h, #0x00
                                   5338 ;	spillPairReg hl
                                   5339 ;	spillPairReg hl
      001786 29                    5340 	add	hl, hl
      001787 29                    5341 	add	hl, hl
      001788 09                    5342 	add	hl, bc
      001789 23                    5343 	inc	hl
      00178A 23                    5344 	inc	hl
      00178B 23                    5345 	inc	hl
      00178C 36 00                 5346 	ld	(hl), #0x00
                                   5347 ;main.c:613: set_sprite_prop(20+oldestProjectile, 0); 
      00178E C3r99r18              5348 	jp	00130$
      001791                       5349 00129$:
                                   5350 ;main.c:618: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type+1);
                                   5351 ;main.c:617: else if (xDir != 0 && yDir == 0) {
      001791 FAr30r00              5352 	ld	a, (#_xDir)
      001794 B7                    5353 	or	a, a
      001795 28 41                 5354 	jr	Z, 00125$
      001797 FAr31r00              5355 	ld	a, (#_yDir)
      00179A B7                    5356 	or	a, a
      00179B 20 3B                 5357 	jr	NZ, 00125$
                                   5358 ;main.c:618: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type+1);
      00179D 1C                    5359 	inc	e
                                   5360 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00179E 69                    5361 	ld	l, c
                                   5362 ;	spillPairReg hl
                                   5363 ;	spillPairReg hl
      00179F 26 00                 5364 	ld	h, #0x00
                                   5365 ;	spillPairReg hl
                                   5366 ;	spillPairReg hl
      0017A1 29                    5367 	add	hl, hl
      0017A2 29                    5368 	add	hl, hl
      0017A3 01r00r00              5369 	ld	bc, #_shadow_OAM
      0017A6 09                    5370 	add	hl, bc
      0017A7 23                    5371 	inc	hl
      0017A8 23                    5372 	inc	hl
      0017A9 73                    5373 	ld	(hl), e
                                   5374 ;main.c:594: oldestProjectile += 1;
      0017AA FAr2Er00              5375 	ld	a, (#_oldestProjectile)
                                   5376 ;main.c:606: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      0017AD C6 14                 5377 	add	a, #0x14
      0017AF 5F                    5378 	ld	e, a
                                   5379 ;main.c:619: if (xDir == 1) {
      0017B0 FAr30r00              5380 	ld	a, (#_xDir)
      0017B3 3D                    5381 	dec	a
      0017B4 20 11                 5382 	jr	NZ, 00107$
                                   5383 ;main.c:620: set_sprite_prop(20+oldestProjectile, 0); 
                                   5384 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0017B6 01r00r00              5385 	ld	bc, #_shadow_OAM+0
      0017B9 6B                    5386 	ld	l, e
                                   5387 ;	spillPairReg hl
                                   5388 ;	spillPairReg hl
      0017BA 26 00                 5389 	ld	h, #0x00
                                   5390 ;	spillPairReg hl
                                   5391 ;	spillPairReg hl
      0017BC 29                    5392 	add	hl, hl
      0017BD 29                    5393 	add	hl, hl
      0017BE 09                    5394 	add	hl, bc
      0017BF 23                    5395 	inc	hl
      0017C0 23                    5396 	inc	hl
      0017C1 23                    5397 	inc	hl
      0017C2 36 00                 5398 	ld	(hl), #0x00
                                   5399 ;main.c:620: set_sprite_prop(20+oldestProjectile, 0); 
      0017C4 C3r99r18              5400 	jp	00130$
      0017C7                       5401 00107$:
                                   5402 ;main.c:623: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
                                   5403 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0017C7 01r00r00              5404 	ld	bc, #_shadow_OAM+0
      0017CA 6B                    5405 	ld	l, e
                                   5406 ;	spillPairReg hl
                                   5407 ;	spillPairReg hl
      0017CB 26 00                 5408 	ld	h, #0x00
                                   5409 ;	spillPairReg hl
                                   5410 ;	spillPairReg hl
      0017CD 29                    5411 	add	hl, hl
      0017CE 29                    5412 	add	hl, hl
      0017CF 09                    5413 	add	hl, bc
      0017D0 23                    5414 	inc	hl
      0017D1 23                    5415 	inc	hl
      0017D2 23                    5416 	inc	hl
      0017D3 36 20                 5417 	ld	(hl), #0x20
                                   5418 ;main.c:623: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
      0017D5 C3r99r18              5419 	jp	00130$
      0017D8                       5420 00125$:
                                   5421 ;main.c:627: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type+2);
      0017D8 1C                    5422 	inc	e
      0017D9 1C                    5423 	inc	e
                                   5424 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0017DA 69                    5425 	ld	l, c
                                   5426 ;	spillPairReg hl
                                   5427 ;	spillPairReg hl
      0017DB 26 00                 5428 	ld	h, #0x00
                                   5429 ;	spillPairReg hl
                                   5430 ;	spillPairReg hl
      0017DD 29                    5431 	add	hl, hl
      0017DE 29                    5432 	add	hl, hl
      0017DF 01r00r00              5433 	ld	bc, #_shadow_OAM
      0017E2 09                    5434 	add	hl, bc
      0017E3 23                    5435 	inc	hl
      0017E4 23                    5436 	inc	hl
      0017E5 73                    5437 	ld	(hl), e
                                   5438 ;main.c:628: if (xDir == 1 && yDir == -1) {
      0017E6 FAr30r00              5439 	ld	a, (#_xDir)
      0017E9 3D                    5440 	dec	a
      0017EA 3E 01                 5441 	ld	a, #0x01
      0017EC 28 01                 5442 	jr	Z, 00226$
      0017EE AF                    5443 	xor	a, a
      0017EF                       5444 00226$:
      0017EF 4F                    5445 	ld	c, a
                                   5446 ;main.c:594: oldestProjectile += 1;
      0017F0 21r2Er00              5447 	ld	hl, #_oldestProjectile
      0017F3 46                    5448 	ld	b, (hl)
                                   5449 ;main.c:628: if (xDir == 1 && yDir == -1) {
      0017F4 FAr31r00              5450 	ld	a, (#_yDir)
      0017F7 3C                    5451 	inc	a
      0017F8 3E 01                 5452 	ld	a, #0x01
      0017FA 28 01                 5453 	jr	Z, 00228$
      0017FC AF                    5454 	xor	a, a
      0017FD                       5455 00228$:
      0017FD F8 00                 5456 	ldhl	sp,	#0
      0017FF 77                    5457 	ld	(hl), a
                                   5458 ;main.c:606: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      001800 78                    5459 	ld	a, b
      001801 C6 14                 5460 	add	a, #0x14
      001803 5F                    5461 	ld	e, a
                                   5462 ;main.c:628: if (xDir == 1 && yDir == -1) {
      001804 79                    5463 	ld	a, c
      001805 B7                    5464 	or	a, a
      001806 28 1D                 5465 	jr	Z, 00121$
      001808 7E                    5466 	ld	a, (hl)
      001809 B7                    5467 	or	a, a
      00180A 28 19                 5468 	jr	Z, 00121$
                                   5469 ;main.c:629: set_sprite_prop(20+oldestProjectile, 0); //default is right & up
                                   5470 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00180C 16 00                 5471 	ld	d, #0x00
      00180E 6B                    5472 	ld	l, e
      00180F 62                    5473 	ld	h, d
      001810 29                    5474 	add	hl, hl
      001811 29                    5475 	add	hl, hl
      001812 11r00r00              5476 	ld	de, #_shadow_OAM
      001815 19                    5477 	add	hl, de
      001816 23                    5478 	inc	hl
      001817 23                    5479 	inc	hl
      001818 23                    5480 	inc	hl
      001819 36 00                 5481 	ld	(hl), #0x00
                                   5482 ;main.c:630: printf("1");
      00181B 11rCDr18              5483 	ld	de, #___str_0
      00181E D5                    5484 	push	de
      00181F CDr00r00              5485 	call	_printf
      001822 E1                    5486 	pop	hl
      001823 18 74                 5487 	jr	00130$
      001825                       5488 00121$:
                                   5489 ;main.c:607: if (yDir == 1) {
      001825 21r31r00              5490 	ld	hl, #_yDir
      001828 7E                    5491 	ld	a, (hl)
      001829 3D                    5492 	dec	a
      00182A 3E 01                 5493 	ld	a, #0x01
      00182C 28 01                 5494 	jr	Z, 00230$
      00182E AF                    5495 	xor	a, a
      00182F                       5496 00230$:
      00182F 6F                    5497 	ld	l, a
                                   5498 ;	spillPairReg hl
                                   5499 ;	spillPairReg hl
                                   5500 ;main.c:632: else if (xDir == 1 && yDir == 1) {
      001830 79                    5501 	ld	a, c
      001831 B7                    5502 	or	a, a
      001832 28 1C                 5503 	jr	Z, 00117$
      001834 7D                    5504 	ld	a, l
      001835 B7                    5505 	or	a, a
      001836 28 18                 5506 	jr	Z, 00117$
                                   5507 ;main.c:633: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
                                   5508 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001838 6B                    5509 	ld	l, e
                                   5510 ;	spillPairReg hl
                                   5511 ;	spillPairReg hl
      001839 26 00                 5512 	ld	h, #0x00
                                   5513 ;	spillPairReg hl
                                   5514 ;	spillPairReg hl
      00183B 29                    5515 	add	hl, hl
      00183C 29                    5516 	add	hl, hl
      00183D 11r00r00              5517 	ld	de, #_shadow_OAM
      001840 19                    5518 	add	hl, de
      001841 23                    5519 	inc	hl
      001842 23                    5520 	inc	hl
      001843 23                    5521 	inc	hl
      001844 36 40                 5522 	ld	(hl), #0x40
                                   5523 ;main.c:635: printf("2");
      001846 11rCFr18              5524 	ld	de, #___str_1
      001849 D5                    5525 	push	de
      00184A CDr00r00              5526 	call	_printf
      00184D E1                    5527 	pop	hl
      00184E 18 49                 5528 	jr	00130$
      001850                       5529 00117$:
                                   5530 ;main.c:638: else if (xDir == -1 && yDir == 1) {
      001850 E5                    5531 	push	hl
      001851 FAr30r00              5532 	ld	a, (#_xDir)
      001854 3C                    5533 	inc	a
      001855 E1                    5534 	pop	hl
      001856 3E 01                 5535 	ld	a, #0x01
      001858 28 01                 5536 	jr	Z, 00232$
      00185A AF                    5537 	xor	a, a
      00185B                       5538 00232$:
      00185B B7                    5539 	or	a, a
      00185C 28 1C                 5540 	jr	Z, 00113$
      00185E 2C                    5541 	inc	l
      00185F 2D                    5542 	dec	l
      001860 28 18                 5543 	jr	Z, 00113$
                                   5544 ;main.c:639: set_sprite_prop(20+oldestProjectile, S_FLIPY | S_FLIPX); 
                                   5545 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001862 01r00r00              5546 	ld	bc, #_shadow_OAM+0
      001865 6B                    5547 	ld	l, e
                                   5548 ;	spillPairReg hl
                                   5549 ;	spillPairReg hl
      001866 26 00                 5550 	ld	h, #0x00
                                   5551 ;	spillPairReg hl
                                   5552 ;	spillPairReg hl
      001868 29                    5553 	add	hl, hl
      001869 29                    5554 	add	hl, hl
      00186A 09                    5555 	add	hl, bc
      00186B 23                    5556 	inc	hl
      00186C 23                    5557 	inc	hl
      00186D 23                    5558 	inc	hl
      00186E 36 60                 5559 	ld	(hl), #0x60
                                   5560 ;main.c:640: printf("3");
      001870 11rD1r18              5561 	ld	de, #___str_2
      001873 D5                    5562 	push	de
      001874 CDr00r00              5563 	call	_printf
      001877 E1                    5564 	pop	hl
      001878 18 1F                 5565 	jr	00130$
      00187A                       5566 00113$:
                                   5567 ;main.c:643: else if (xDir == -1 && yDir == -1) {
      00187A B7                    5568 	or	a, a
      00187B 28 1C                 5569 	jr	Z, 00130$
      00187D F8 00                 5570 	ldhl	sp,	#0
      00187F 7E                    5571 	ld	a, (hl)
      001880 B7                    5572 	or	a, a
      001881 28 16                 5573 	jr	Z, 00130$
                                   5574 ;main.c:644: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
                                   5575 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001883 01r00r00              5576 	ld	bc, #_shadow_OAM+0
      001886 6B                    5577 	ld	l, e
                                   5578 ;	spillPairReg hl
                                   5579 ;	spillPairReg hl
      001887 26 00                 5580 	ld	h, #0x00
                                   5581 ;	spillPairReg hl
                                   5582 ;	spillPairReg hl
      001889 29                    5583 	add	hl, hl
      00188A 29                    5584 	add	hl, hl
      00188B 09                    5585 	add	hl, bc
      00188C 23                    5586 	inc	hl
      00188D 23                    5587 	inc	hl
      00188E 23                    5588 	inc	hl
      00188F 36 20                 5589 	ld	(hl), #0x20
                                   5590 ;main.c:645: printf("4");
      001891 11rD3r18              5591 	ld	de, #___str_3
      001894 D5                    5592 	push	de
      001895 CDr00r00              5593 	call	_printf
      001898 E1                    5594 	pop	hl
      001899                       5595 00130$:
                                   5596 ;main.c:650: move_sprite(20+oldestProjectile, playerDrawX, playerDrawY);
      001899 21r39r00              5597 	ld	hl, #_playerDrawY
      00189C 46                    5598 	ld	b, (hl)
      00189D 21r38r00              5599 	ld	hl, #_playerDrawX
      0018A0 4E                    5600 	ld	c, (hl)
      0018A1 FAr2Er00              5601 	ld	a, (#_oldestProjectile)
      0018A4 C6 14                 5602 	add	a, #0x14
                                   5603 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0018A6 6F                    5604 	ld	l, a
                                   5605 ;	spillPairReg hl
                                   5606 ;	spillPairReg hl
      0018A7 26 00                 5607 	ld	h, #0x00
                                   5608 ;	spillPairReg hl
                                   5609 ;	spillPairReg hl
      0018A9 29                    5610 	add	hl, hl
      0018AA 29                    5611 	add	hl, hl
      0018AB 11r00r00              5612 	ld	de, #_shadow_OAM
      0018AE 19                    5613 	add	hl, de
                                   5614 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0018AF 78                    5615 	ld	a, b
      0018B0 22                    5616 	ld	(hl+), a
      0018B1 71                    5617 	ld	(hl), c
                                   5618 ;main.c:651: fireCooldown = projectiles[oldestProjectile].delay;
      0018B2 21r2Er00              5619 	ld	hl, #_oldestProjectile
      0018B5 4E                    5620 	ld	c, (hl)
      0018B6 06 00                 5621 	ld	b, #0x00
      0018B8 69                    5622 	ld	l, c
      0018B9 60                    5623 	ld	h, b
      0018BA 29                    5624 	add	hl, hl
      0018BB 29                    5625 	add	hl, hl
      0018BC 09                    5626 	add	hl, bc
      0018BD 29                    5627 	add	hl, hl
      0018BE 09                    5628 	add	hl, bc
      0018BF 01r50r00              5629 	ld	bc,#_projectiles
      0018C2 09                    5630 	add	hl,bc
      0018C3 01 09 00              5631 	ld	bc, #0x0009
      0018C6 09                    5632 	add	hl, bc
      0018C7 7E                    5633 	ld	a, (hl)
      0018C8 EAr2Fr00              5634 	ld	(#_fireCooldown),a
                                   5635 ;main.c:653: }
      0018CB 33                    5636 	inc	sp
      0018CC C9                    5637 	ret
      0018CD                       5638 ___str_0:
      0018CD 31                    5639 	.ascii "1"
      0018CE 00                    5640 	.db 0x00
      0018CF                       5641 ___str_1:
      0018CF 32                    5642 	.ascii "2"
      0018D0 00                    5643 	.db 0x00
      0018D1                       5644 ___str_2:
      0018D1 33                    5645 	.ascii "3"
      0018D2 00                    5646 	.db 0x00
      0018D3                       5647 ___str_3:
      0018D3 34                    5648 	.ascii "4"
      0018D4 00                    5649 	.db 0x00
                                   5650 ;main.c:656: void moveProjectiles() {
                                   5651 ;	---------------------------------
                                   5652 ; Function moveProjectiles
                                   5653 ; ---------------------------------
      0018D5                       5654 _moveProjectiles::
      0018D5 E8 F7                 5655 	add	sp, #-9
                                   5656 ;main.c:657: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0018D7 F8 08                 5657 	ldhl	sp,	#8
      0018D9 36 00                 5658 	ld	(hl), #0x00
      0018DB                       5659 00112$:
      0018DB 21r9Ar05              5660 	ld	hl, #_PROJECTILECOUNT
      0018DE 4E                    5661 	ld	c, (hl)
      0018DF F8 08                 5662 	ldhl	sp,	#8
      0018E1 7E                    5663 	ld	a, (hl)
      0018E2 91                    5664 	sub	a, c
      0018E3 D2r24r1A              5665 	jp	NC, 00114$
                                   5666 ;main.c:658: projectiles[i].x -= xOverflow;
      0018E6 4E                    5667 	ld	c, (hl)
      0018E7 06 00                 5668 	ld	b, #0x00
      0018E9 69                    5669 	ld	l, c
      0018EA 60                    5670 	ld	h, b
      0018EB 29                    5671 	add	hl, hl
      0018EC 29                    5672 	add	hl, hl
      0018ED 09                    5673 	add	hl, bc
      0018EE 29                    5674 	add	hl, hl
      0018EF 09                    5675 	add	hl, bc
      0018F0 01r50r00              5676 	ld	bc,#_projectiles
      0018F3 09                    5677 	add	hl,bc
      0018F4 33                    5678 	inc	sp
      0018F5 33                    5679 	inc	sp
      0018F6 5D                    5680 	ld	e, l
      0018F7 54                    5681 	ld	d, h
      0018F8 D5                    5682 	push	de
      0018F9 1A                    5683 	ld	a, (de)
      0018FA 4F                    5684 	ld	c, a
      0018FB 13                    5685 	inc	de
      0018FC 1A                    5686 	ld	a, (de)
      0018FD 47                    5687 	ld	b, a
      0018FE 79                    5688 	ld	a, c
      0018FF 21r3Er00              5689 	ld	hl, #_xOverflow
      001902 96                    5690 	sub	a, (hl)
      001903 23                    5691 	inc	hl
      001904 4F                    5692 	ld	c, a
      001905 78                    5693 	ld	a, b
      001906 9E                    5694 	sbc	a, (hl)
      001907 47                    5695 	ld	b, a
      001908 E1                    5696 	pop	hl
      001909 E5                    5697 	push	hl
      00190A 79                    5698 	ld	a, c
      00190B 22                    5699 	ld	(hl+), a
      00190C 70                    5700 	ld	(hl), b
                                   5701 ;main.c:659: projectiles[i].y -= yOverflow;
      00190D D1                    5702 	pop	de
      00190E D5                    5703 	push	de
      00190F 21 02 00              5704 	ld	hl, #0x0002
      001912 19                    5705 	add	hl, de
      001913 E5                    5706 	push	hl
      001914 7D                    5707 	ld	a, l
      001915 F8 04                 5708 	ldhl	sp,	#4
      001917 77                    5709 	ld	(hl), a
      001918 E1                    5710 	pop	hl
      001919 7C                    5711 	ld	a, h
      00191A F8 03                 5712 	ldhl	sp,	#3
      00191C 32                    5713 	ld	(hl-), a
      00191D 2A                    5714 	ld	a, (hl+)
      00191E 5F                    5715 	ld	e, a
      00191F 56                    5716 	ld	d, (hl)
      001920 1A                    5717 	ld	a, (de)
      001921 4F                    5718 	ld	c, a
      001922 13                    5719 	inc	de
      001923 1A                    5720 	ld	a, (de)
      001924 47                    5721 	ld	b, a
      001925 79                    5722 	ld	a, c
      001926 21r40r00              5723 	ld	hl, #_yOverflow
      001929 96                    5724 	sub	a, (hl)
      00192A 23                    5725 	inc	hl
      00192B 4F                    5726 	ld	c, a
      00192C 78                    5727 	ld	a, b
      00192D 9E                    5728 	sbc	a, (hl)
      00192E 47                    5729 	ld	b, a
      00192F F8 02                 5730 	ldhl	sp,	#2
      001931 2A                    5731 	ld	a,	(hl+)
      001932 66                    5732 	ld	h, (hl)
      001933 6F                    5733 	ld	l, a
      001934 79                    5734 	ld	a, c
      001935 22                    5735 	ld	(hl+), a
      001936 70                    5736 	ld	(hl), b
                                   5737 ;main.c:661: if (projectiles[i].active) {
      001937 D1                    5738 	pop	de
      001938 D5                    5739 	push	de
      001939 21 08 00              5740 	ld	hl, #0x0008
      00193C 19                    5741 	add	hl, de
      00193D 4D                    5742 	ld	c, l
      00193E 44                    5743 	ld	b, h
      00193F 0A                    5744 	ld	a, (bc)
      001940 B7                    5745 	or	a, a
      001941 CAr1Er1A              5746 	jp	Z, 00113$
                                   5747 ;main.c:662: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      001944 F8 02                 5748 	ldhl	sp,#2
      001946 2A                    5749 	ld	a, (hl+)
      001947 5F                    5750 	ld	e, a
      001948 56                    5751 	ld	d, (hl)
      001949 1A                    5752 	ld	a, (de)
      00194A 4F                    5753 	ld	c, a
      00194B 13                    5754 	inc	de
      00194C 1A                    5755 	ld	a, (de)
      00194D 47                    5756 	ld	b, a
      00194E D1                    5757 	pop	de
      00194F D5                    5758 	push	de
      001950 21 05 00              5759 	ld	hl, #0x0005
      001953 19                    5760 	add	hl, de
      001954 5D                    5761 	ld	e, l
      001955 54                    5762 	ld	d, h
      001956 1A                    5763 	ld	a, (de)
      001957 6F                    5764 	ld	l, a
                                   5765 ;	spillPairReg hl
                                   5766 ;	spillPairReg hl
      001958 07                    5767 	rlca
      001959 9F                    5768 	sbc	a, a
      00195A 67                    5769 	ld	h, a
                                   5770 ;	spillPairReg hl
                                   5771 ;	spillPairReg hl
      00195B 09                    5772 	add	hl, bc
      00195C 4D                    5773 	ld	c, l
      00195D 44                    5774 	ld	b, h
      00195E F8 04                 5775 	ldhl	sp,	#4
      001960 79                    5776 	ld	a, c
      001961 22                    5777 	ld	(hl+), a
      001962 70                    5778 	ld	(hl), b
                                   5779 ;main.c:663: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      001963 D1                    5780 	pop	de
      001964 D5                    5781 	push	de
      001965 1A                    5782 	ld	a, (de)
      001966 4F                    5783 	ld	c, a
      001967 13                    5784 	inc	de
      001968 1A                    5785 	ld	a, (de)
      001969 47                    5786 	ld	b, a
      00196A D1                    5787 	pop	de
      00196B D5                    5788 	push	de
      00196C 21 04 00              5789 	ld	hl, #0x0004
      00196F 19                    5790 	add	hl, de
      001970 5D                    5791 	ld	e, l
      001971 54                    5792 	ld	d, h
      001972 1A                    5793 	ld	a, (de)
      001973 6F                    5794 	ld	l, a
                                   5795 ;	spillPairReg hl
                                   5796 ;	spillPairReg hl
      001974 07                    5797 	rlca
      001975 9F                    5798 	sbc	a, a
      001976 67                    5799 	ld	h, a
                                   5800 ;	spillPairReg hl
                                   5801 ;	spillPairReg hl
      001977 09                    5802 	add	hl, bc
      001978 4D                    5803 	ld	c, l
      001979 44                    5804 	ld	b, h
                                   5805 ;main.c:665: move_sprite(20+i, newX, newY);
      00197A F8 04                 5806 	ldhl	sp,	#4
      00197C 2A                    5807 	ld	a, (hl+)
      00197D 23                    5808 	inc	hl
      00197E 5F                    5809 	ld	e, a
      00197F 79                    5810 	ld	a, c
      001980 22                    5811 	ld	(hl+), a
      001981 23                    5812 	inc	hl
      001982 3A                    5813 	ld	a, (hl-)
      001983 C6 14                 5814 	add	a, #0x14
      001985 77                    5815 	ld	(hl), a
      001986 56                    5816 	ld	d, (hl)
                                   5817 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001987 26 00                 5818 	ld	h, #0x00
                                   5819 ;	spillPairReg hl
                                   5820 ;	spillPairReg hl
      001989 6A                    5821 	ld	l, d
      00198A 29                    5822 	add	hl, hl
      00198B 29                    5823 	add	hl, hl
      00198C D5                    5824 	push	de
      00198D 11r00r00              5825 	ld	de, #_shadow_OAM
      001990 19                    5826 	add	hl, de
      001991 D1                    5827 	pop	de
                                   5828 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001992 7B                    5829 	ld	a, e
      001993 22                    5830 	ld	(hl+), a
      001994 5D                    5831 	ld	e, l
      001995 54                    5832 	ld	d, h
      001996 F8 06                 5833 	ldhl	sp,	#6
      001998 7E                    5834 	ld	a, (hl)
      001999 12                    5835 	ld	(de), a
                                   5836 ;main.c:666: projectiles[i].y = newY;
      00199A F8 02                 5837 	ldhl	sp,#2
      00199C 2A                    5838 	ld	a, (hl+)
      00199D 5F                    5839 	ld	e, a
      00199E 2A                    5840 	ld	a, (hl+)
      00199F 57                    5841 	ld	d, a
      0019A0 2A                    5842 	ld	a, (hl+)
      0019A1 12                    5843 	ld	(de), a
      0019A2 13                    5844 	inc	de
      0019A3 7E                    5845 	ld	a, (hl)
      0019A4 12                    5846 	ld	(de), a
                                   5847 ;main.c:667: projectiles[i].x = newX;
      0019A5 E1                    5848 	pop	hl
      0019A6 E5                    5849 	push	hl
      0019A7 79                    5850 	ld	a, c
      0019A8 22                    5851 	ld	(hl+), a
      0019A9 70                    5852 	ld	(hl), b
                                   5853 ;main.c:672: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      0019AA D1                    5854 	pop	de
      0019AB D5                    5855 	push	de
      0019AC 1A                    5856 	ld	a, (de)
      0019AD 6F                    5857 	ld	l, a
                                   5858 ;	spillPairReg hl
                                   5859 ;	spillPairReg hl
      0019AE 13                    5860 	inc	de
      0019AF 1A                    5861 	ld	a, (de)
      0019B0 67                    5862 	ld	h, a
                                   5863 ;	spillPairReg hl
                                   5864 ;	spillPairReg hl
      0019B1 CB 78                 5865 	bit	7, b
      0019B3 20 44                 5866 	jr	NZ, 00101$
      0019B5 5C                    5867 	ld	e, h
      0019B6 16 00                 5868 	ld	d, #0x00
      0019B8 3E AA                 5869 	ld	a, #0xaa
      0019BA BD                    5870 	cp	a, l
      0019BB 3E 00                 5871 	ld	a, #0x00
      0019BD 9C                    5872 	sbc	a, h
      0019BE CB 7B                 5873 	bit	7, e
      0019C0 28 07                 5874 	jr	Z, 00147$
      0019C2 CB 7A                 5875 	bit	7, d
      0019C4 20 08                 5876 	jr	NZ, 00148$
      0019C6 BF                    5877 	cp	a, a
      0019C7 18 05                 5878 	jr	00148$
      0019C9                       5879 00147$:
      0019C9 CB 7A                 5880 	bit	7, d
      0019CB 28 01                 5881 	jr	Z, 00148$
      0019CD 37                    5882 	scf
      0019CE                       5883 00148$:
      0019CE 38 29                 5884 	jr	C, 00101$
                                   5885 ;main.c:659: projectiles[i].y -= yOverflow;
      0019D0 F8 02                 5886 	ldhl	sp,#2
      0019D2 2A                    5887 	ld	a, (hl+)
      0019D3 5F                    5888 	ld	e, a
      0019D4 56                    5889 	ld	d, (hl)
      0019D5 1A                    5890 	ld	a, (de)
      0019D6 4F                    5891 	ld	c, a
      0019D7 13                    5892 	inc	de
      0019D8 1A                    5893 	ld	a, (de)
                                   5894 ;main.c:672: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      0019D9 47                    5895 	ld	b, a
      0019DA CB 78                 5896 	bit	7, b
      0019DC 20 1B                 5897 	jr	NZ, 00101$
      0019DE 58                    5898 	ld	e, b
      0019DF 16 00                 5899 	ld	d, #0x00
      0019E1 3E 9A                 5900 	ld	a, #0x9a
      0019E3 B9                    5901 	cp	a, c
      0019E4 3E 00                 5902 	ld	a, #0x00
      0019E6 98                    5903 	sbc	a, b
      0019E7 CB 7B                 5904 	bit	7, e
      0019E9 28 07                 5905 	jr	Z, 00149$
      0019EB CB 7A                 5906 	bit	7, d
      0019ED 20 08                 5907 	jr	NZ, 00150$
      0019EF BF                    5908 	cp	a, a
      0019F0 18 05                 5909 	jr	00150$
      0019F2                       5910 00149$:
      0019F2 CB 7A                 5911 	bit	7, d
      0019F4 28 01                 5912 	jr	Z, 00150$
      0019F6 37                    5913 	scf
      0019F7                       5914 00150$:
      0019F7 30 25                 5915 	jr	NC, 00113$
      0019F9                       5916 00101$:
                                   5917 ;main.c:674: projectiles[i].active = 0;
      0019F9 F8 08                 5918 	ldhl	sp,	#8
      0019FB 4E                    5919 	ld	c, (hl)
      0019FC 06 00                 5920 	ld	b, #0x00
      0019FE 69                    5921 	ld	l, c
      0019FF 60                    5922 	ld	h, b
      001A00 29                    5923 	add	hl, hl
      001A01 29                    5924 	add	hl, hl
      001A02 09                    5925 	add	hl, bc
      001A03 29                    5926 	add	hl, hl
      001A04 09                    5927 	add	hl, bc
      001A05 11r50r00              5928 	ld	de, #_projectiles
      001A08 19                    5929 	add	hl, de
      001A09 01 08 00              5930 	ld	bc, #0x0008
      001A0C 09                    5931 	add	hl, bc
      001A0D 36 00                 5932 	ld	(hl), #0x00
                                   5933 ;main.c:675: set_sprite_tile(20+i, 0x7f);
      001A0F F8 07                 5934 	ldhl	sp,	#7
                                   5935 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001A11 6E                    5936 	ld	l, (hl)
                                   5937 ;	spillPairReg hl
                                   5938 ;	spillPairReg hl
      001A12 26 00                 5939 	ld	h, #0x00
                                   5940 ;	spillPairReg hl
                                   5941 ;	spillPairReg hl
      001A14 29                    5942 	add	hl, hl
      001A15 29                    5943 	add	hl, hl
      001A16 11r00r00              5944 	ld	de, #_shadow_OAM
      001A19 19                    5945 	add	hl, de
      001A1A 23                    5946 	inc	hl
      001A1B 23                    5947 	inc	hl
      001A1C 36 7F                 5948 	ld	(hl), #0x7f
                                   5949 ;main.c:675: set_sprite_tile(20+i, 0x7f);
      001A1E                       5950 00113$:
                                   5951 ;main.c:657: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001A1E F8 08                 5952 	ldhl	sp,	#8
      001A20 34                    5953 	inc	(hl)
      001A21 C3rDBr18              5954 	jp	00112$
      001A24                       5955 00114$:
                                   5956 ;main.c:680: }
      001A24 E8 09                 5957 	add	sp, #9
      001A26 C9                    5958 	ret
                                   5959 ;main.c:683: void initProjectiles() {
                                   5960 ;	---------------------------------
                                   5961 ; Function initProjectiles
                                   5962 ; ---------------------------------
      001A27                       5963 _initProjectiles::
                                   5964 ;main.c:684: set_sprite_data(20, 6, ProjectileTiles);
      001A27 11r17r05              5965 	ld	de, #_ProjectileTiles
      001A2A D5                    5966 	push	de
      001A2B 21 14 06              5967 	ld	hl, #0x614
      001A2E E5                    5968 	push	hl
      001A2F CDr00r00              5969 	call	_set_sprite_data
      001A32 E8 04                 5970 	add	sp, #4
                                   5971 ;main.c:686: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001A34 AF                    5972 	xor	a, a
      001A35                       5973 00103$:
      001A35 21r9Ar05              5974 	ld	hl, #_PROJECTILECOUNT
      001A38 4E                    5975 	ld	c, (hl)
      001A39 B9                    5976 	cp	a, c
      001A3A D0                    5977 	ret	NC
      001A3B 3C                    5978 	inc	a
                                   5979 ;main.c:690: }
      001A3C 18 F7                 5980 	jr	00103$
                                   5981 ;main.c:692: void initGame() {
                                   5982 ;	---------------------------------
                                   5983 ; Function initGame
                                   5984 ; ---------------------------------
      001A3E                       5985 _initGame::
                                   5986 ;main.c:695: xDir = 0;
      001A3E 21r30r00              5987 	ld	hl, #_xDir
      001A41 36 00                 5988 	ld	(hl), #0x00
                                   5989 ;main.c:696: yDir = 0;
      001A43 21r31r00              5990 	ld	hl, #_yDir
      001A46 36 00                 5991 	ld	(hl), #0x00
                                   5992 ;main.c:697: xSpeed = 0;
      001A48 21r32r00              5993 	ld	hl, #_xSpeed
      001A4B 36 00                 5994 	ld	(hl), #0x00
                                   5995 ;main.c:698: ySpeed = 0;
      001A4D 21r33r00              5996 	ld	hl, #_ySpeed
      001A50 36 00                 5997 	ld	(hl), #0x00
                                   5998 ;main.c:701: playerX = 80<<5;
      001A52 21r34r00              5999 	ld	hl, #_playerX
      001A55 36 00                 6000 	ld	(hl), #0x00
      001A57 23                    6001 	inc	hl
      001A58 36 0A                 6002 	ld	(hl), #0x0a
                                   6003 ;main.c:702: playerY = 80<<5;
      001A5A 21r36r00              6004 	ld	hl, #_playerY
      001A5D 36 00                 6005 	ld	(hl), #0x00
      001A5F 23                    6006 	inc	hl
      001A60 36 0A                 6007 	ld	(hl), #0x0a
                                   6008 ;main.c:704: playerDrawX = 80;
      001A62 21r38r00              6009 	ld	hl, #_playerDrawX
      001A65 36 50                 6010 	ld	(hl), #0x50
                                   6011 ;main.c:705: playerDrawY = 80;
      001A67 21r39r00              6012 	ld	hl, #_playerDrawY
      001A6A 36 50                 6013 	ld	(hl), #0x50
                                   6014 ;main.c:708: bgX = 0;
      001A6C AF                    6015 	xor	a, a
      001A6D 21r3Ar00              6016 	ld	hl, #_bgX
      001A70 22                    6017 	ld	(hl+), a
      001A71 77                    6018 	ld	(hl), a
                                   6019 ;main.c:709: bgY = 0;
      001A72 AF                    6020 	xor	a, a
      001A73 21r3Cr00              6021 	ld	hl, #_bgY
      001A76 22                    6022 	ld	(hl+), a
      001A77 77                    6023 	ld	(hl), a
                                   6024 ;main.c:711: hull = maxHull;
      001A78 FAr9Cr05              6025 	ld	a, (#_maxHull)
      001A7B EAr88r00              6026 	ld	(#_hull),a
                                   6027 ;main.c:712: shield = maxShield;
      001A7E FAr9Dr05              6028 	ld	a, (#_maxShield)
      001A81 EAr89r00              6029 	ld	(#_shield),a
                                   6030 ;main.c:714: DISPLAY_ON;
      001A84 F0r00                 6031 	ldh	a, (_LCDC_REG + 0)
      001A86 F6 80                 6032 	or	a, #0x80
      001A88 E0r00                 6033 	ldh	(_LCDC_REG + 0), a
                                   6034 ;main.c:715: SPRITES_8x8;
      001A8A F0r00                 6035 	ldh	a, (_LCDC_REG + 0)
      001A8C E6 FB                 6036 	and	a, #0xfb
      001A8E E0r00                 6037 	ldh	(_LCDC_REG + 0), a
                                   6038 ;main.c:716: set_sprite_data(0, 8, cross);
      001A90 11r07r00              6039 	ld	de, #_cross
      001A93 D5                    6040 	push	de
      001A94 21 00 08              6041 	ld	hl, #0x800
      001A97 E5                    6042 	push	hl
      001A98 CDr00r00              6043 	call	_set_sprite_data
      001A9B E8 04                 6044 	add	sp, #4
                                   6045 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001A9D 21r02r00              6046 	ld	hl, #(_shadow_OAM + 2)
      001AA0 36 00                 6047 	ld	(hl), #0x00
                                   6048 ;main.c:719: SHOW_SPRITES;
      001AA2 F0r00                 6049 	ldh	a, (_LCDC_REG + 0)
      001AA4 F6 02                 6050 	or	a, #0x02
      001AA6 E0r00                 6051 	ldh	(_LCDC_REG + 0), a
                                   6052 ;main.c:723: font_init();
      001AA8 CDr00r00              6053 	call	_font_init
                                   6054 ;main.c:724: min_font = font_load(font_min); // 36 tiles of characters
      001AAB 11r00r00              6055 	ld	de, #_font_min
      001AAE D5                    6056 	push	de
      001AAF CDr00r00              6057 	call	_font_load
      001AB2 E1                    6058 	pop	hl
      001AB3 21r8Ar00              6059 	ld	hl, #_min_font
      001AB6 7B                    6060 	ld	a, e
      001AB7 22                    6061 	ld	(hl+), a
                                   6062 ;main.c:725: font_set(min_font);
      001AB8 7A                    6063 	ld	a, d
      001AB9 32                    6064 	ld	(hl-), a
      001ABA 2A                    6065 	ld	a, (hl+)
      001ABB 5F                    6066 	ld	e, a
      001ABC 56                    6067 	ld	d, (hl)
      001ABD D5                    6068 	push	de
      001ABE CDr00r00              6069 	call	_font_set
      001AC1 E1                    6070 	pop	hl
                                   6071 ;main.c:726: set_win_tiles(1,0,4,1,hullabel);
      001AC2 11r00r00              6072 	ld	de, #_hullabel
      001AC5 D5                    6073 	push	de
      001AC6 21 04 01              6074 	ld	hl, #0x104
      001AC9 E5                    6075 	push	hl
      001ACA 21 01 00              6076 	ld	hl, #0x01
      001ACD E5                    6077 	push	hl
      001ACE CDr00r00              6078 	call	_set_win_tiles
      001AD1 E8 06                 6079 	add	sp, #6
                                   6080 ;main.c:727: set_win_tiles(1,1,5,1,shieldlabel);
      001AD3 11r04r00              6081 	ld	de, #_shieldlabel
      001AD6 D5                    6082 	push	de
      001AD7 21 05 01              6083 	ld	hl, #0x105
      001ADA E5                    6084 	push	hl
      001ADB 21 01 01              6085 	ld	hl, #0x101
      001ADE E5                    6086 	push	hl
      001ADF CDr00r00              6087 	call	_set_win_tiles
      001AE2 E8 06                 6088 	add	sp, #6
                                   6089 ;main.c:732: set_bkg_data(0x50,1,healthblock);
      001AE4 11rE7r04              6090 	ld	de, #_healthblock
      001AE7 D5                    6091 	push	de
      001AE8 21 50 01              6092 	ld	hl, #0x150
      001AEB E5                    6093 	push	hl
      001AEC CDr00r00              6094 	call	_set_bkg_data
      001AEF E8 04                 6095 	add	sp, #4
                                   6096 ;main.c:734: setHealthBar(0, hull);
      001AF1 FAr88r00              6097 	ld	a, (#_hull)
      001AF4 67                    6098 	ld	h, a
      001AF5 2E 00                 6099 	ld	l, #0x00
      001AF7 E5                    6100 	push	hl
      001AF8 CDr9Er05              6101 	call	_setHealthBar
      001AFB E1                    6102 	pop	hl
                                   6103 ;main.c:735: setHealthBar(1, shield);
      001AFC FAr89r00              6104 	ld	a, (#_shield)
      001AFF 67                    6105 	ld	h, a
      001B00 2E 01                 6106 	ld	l, #0x01
      001B02 E5                    6107 	push	hl
      001B03 CDr9Er05              6108 	call	_setHealthBar
      001B06 E1                    6109 	pop	hl
                                   6110 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      001B07 3E 07                 6111 	ld	a, #0x07
      001B09 E0r00                 6112 	ldh	(_WX_REG + 0), a
      001B0B 3E 7E                 6113 	ld	a, #0x7e
      001B0D E0r00                 6114 	ldh	(_WY_REG + 0), a
                                   6115 ;main.c:738: SHOW_WIN;;
      001B0F F0r00                 6116 	ldh	a, (_LCDC_REG + 0)
      001B11 F6 20                 6117 	or	a, #0x20
      001B13 E0r00                 6118 	ldh	(_LCDC_REG + 0), a
                                   6119 ;main.c:743: set_bkg_data(0x25, 6, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      001B15 11r87r04              6120 	ld	de, #_backgroundtiles
      001B18 D5                    6121 	push	de
      001B19 21 25 06              6122 	ld	hl, #0x625
      001B1C E5                    6123 	push	hl
      001B1D CDr00r00              6124 	call	_set_bkg_data
      001B20 E8 04                 6125 	add	sp, #4
                                   6126 ;main.c:744: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      001B22 11r87r00              6127 	ld	de, #_background1
      001B25 D5                    6128 	push	de
      001B26 21 20 20              6129 	ld	hl, #0x2020
      001B29 E5                    6130 	push	hl
      001B2A AF                    6131 	xor	a, a
      001B2B 0F                    6132 	rrca
      001B2C F5                    6133 	push	af
      001B2D CDr00r00              6134 	call	_set_bkg_tiles
      001B30 E8 06                 6135 	add	sp, #6
                                   6136 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001B32 AF                    6137 	xor	a, a
      001B33 E0r00                 6138 	ldh	(_SCX_REG + 0), a
      001B35 AF                    6139 	xor	a, a
      001B36 E0r00                 6140 	ldh	(_SCY_REG + 0), a
                                   6141 ;main.c:746: SHOW_BKG;
      001B38 F0r00                 6142 	ldh	a, (_LCDC_REG + 0)
      001B3A F6 01                 6143 	or	a, #0x01
      001B3C E0r00                 6144 	ldh	(_LCDC_REG + 0), a
                                   6145 ;main.c:752: }
      001B3E C9                    6146 	ret
                                   6147 ;main.c:754: void main(){
                                   6148 ;	---------------------------------
                                   6149 ; Function main
                                   6150 ; ---------------------------------
      001B3F                       6151 _main::
                                   6152 ;main.c:766: waitpad(J_A);
      001B3F 3E 10                 6153 	ld	a, #0x10
      001B41 F5                    6154 	push	af
      001B42 33                    6155 	inc	sp
      001B43 CDr00r00              6156 	call	_waitpad
      001B46 33                    6157 	inc	sp
                                   6158 ;main.c:767: uint16_t seed = LY_REG;
      001B47 F0r00                 6159 	ldh	a, (_LY_REG + 0)
      001B49 4F                    6160 	ld	c, a
      001B4A 06 00                 6161 	ld	b, #0x00
                                   6162 ;main.c:768: seed |= (uint16_t)DIV_REG << 8;
      001B4C F0r00                 6163 	ldh	a, (_DIV_REG + 0)
      001B4E 5F                    6164 	ld	e, a
      001B4F AF                    6165 	xor	a, a
      001B50 B1                    6166 	or	a, c
      001B51 4F                    6167 	ld	c, a
      001B52 7B                    6168 	ld	a, e
      001B53 B0                    6169 	or	a, b
      001B54 47                    6170 	ld	b, a
                                   6171 ;main.c:769: initrand(seed);
      001B55 C5                    6172 	push	bc
      001B56 CDr00r00              6173 	call	_initrand
      001B59 E1                    6174 	pop	hl
                                   6175 ;main.c:774: initGame();
      001B5A CDr3Er1A              6176 	call	_initGame
                                   6177 ;main.c:775: initEnemies(1);
      001B5D 3E 01                 6178 	ld	a, #0x01
      001B5F F5                    6179 	push	af
      001B60 33                    6180 	inc	sp
      001B61 CDrDEr0D              6181 	call	_initEnemies
      001B64 33                    6182 	inc	sp
                                   6183 ;main.c:776: initProjectiles();
      001B65 CDr27r1A              6184 	call	_initProjectiles
                                   6185 ;main.c:778: while(1) {
      001B68                       6186 00107$:
                                   6187 ;main.c:781: joydata = joypad(); // query for button states
      001B68 CDr00r00              6188 	call	_joypad
      001B6B 21r87r00              6189 	ld	hl, #_joydata
      001B6E 73                    6190 	ld	(hl), e
                                   6191 ;main.c:783: updateDirection(); // set player direction
      001B6F CDrAFr06              6192 	call	_updateDirection
                                   6193 ;main.c:786: move(); 
      001B72 CDr9Br0E              6194 	call	_move
                                   6195 ;main.c:788: updateEnemyPositions();
      001B75 CDr3Er08              6196 	call	_updateEnemyPositions
                                   6197 ;main.c:791: checkCollision(); 
      001B78 CDr1Cr13              6198 	call	_checkCollision
                                   6199 ;main.c:585: if (shield < maxShield) {
      001B7B 21r9Dr05              6200 	ld	hl, #_maxShield
      001B7E 4E                    6201 	ld	c, (hl)
      001B7F 59                    6202 	ld	e, c
      001B80 21r89r00              6203 	ld	hl, #_shield
      001B83 56                    6204 	ld	d, (hl)
      001B84 7E                    6205 	ld	a, (hl)
      001B85 91                    6206 	sub	a, c
      001B86 CB 7B                 6207 	bit	7, e
      001B88 28 07                 6208 	jr	Z, 00142$
      001B8A CB 7A                 6209 	bit	7, d
      001B8C 20 08                 6210 	jr	NZ, 00143$
      001B8E BF                    6211 	cp	a, a
      001B8F 18 05                 6212 	jr	00143$
      001B91                       6213 00142$:
      001B91 CB 7A                 6214 	bit	7, d
      001B93 28 01                 6215 	jr	Z, 00143$
      001B95 37                    6216 	scf
      001B96                       6217 00143$:
      001B96 30 04                 6218 	jr	NC, 00113$
                                   6219 ;main.c:586: shield += 1;
      001B98 21r89r00              6220 	ld	hl, #_shield
      001B9B 34                    6221 	inc	(hl)
      001B9C                       6222 00113$:
                                   6223 ;main.c:588: setHealthBar(0, hull);
      001B9C FAr88r00              6224 	ld	a, (#_hull)
      001B9F 67                    6225 	ld	h, a
      001BA0 2E 00                 6226 	ld	l, #0x00
      001BA2 E5                    6227 	push	hl
      001BA3 CDr9Er05              6228 	call	_setHealthBar
      001BA6 E1                    6229 	pop	hl
                                   6230 ;main.c:589: setHealthBar(1, shield);
      001BA7 FAr89r00              6231 	ld	a, (#_shield)
      001BAA 67                    6232 	ld	h, a
      001BAB 2E 01                 6233 	ld	l, #0x01
      001BAD E5                    6234 	push	hl
      001BAE CDr9Er05              6235 	call	_setHealthBar
      001BB1 E1                    6236 	pop	hl
                                   6237 ;main.c:796: if (joydata & J_B && fireCooldown == 0) {
      001BB2 FAr87r00              6238 	ld	a, (#_joydata)
      001BB5 CB 6F                 6239 	bit	5, a
      001BB7 28 09                 6240 	jr	Z, 00102$
      001BB9 FAr2Fr00              6241 	ld	a, (#_fireCooldown)
      001BBC B7                    6242 	or	a, a
      001BBD 20 03                 6243 	jr	NZ, 00102$
                                   6244 ;main.c:797: fire();
      001BBF CDr65r16              6245 	call	_fire
      001BC2                       6246 00102$:
                                   6247 ;main.c:799: if (fireCooldown > 0) {
      001BC2 21r2Fr00              6248 	ld	hl, #_fireCooldown
      001BC5 7E                    6249 	ld	a, (hl)
      001BC6 B7                    6250 	or	a, a
      001BC7 28 01                 6251 	jr	Z, 00105$
                                   6252 ;main.c:800: --fireCooldown;
      001BC9 35                    6253 	dec	(hl)
      001BCA                       6254 00105$:
                                   6255 ;main.c:803: moveProjectiles();
      001BCA CDrD5r18              6256 	call	_moveProjectiles
                                   6257 ;main.c:815: SHOW_WIN;	
      001BCD F0r00                 6258 	ldh	a, (_LCDC_REG + 0)
      001BCF F6 20                 6259 	or	a, #0x20
      001BD1 E0r00                 6260 	ldh	(_LCDC_REG + 0), a
                                   6261 ;main.c:816: wait_vbl_done(); // Idle until next frame
      001BD3 CDr00r00              6262 	call	_wait_vbl_done
                                   6263 ;main.c:821: }
      001BD6 18 90                 6264 	jr	00107$
                                   6265 	.area _CODE
                                   6266 	.area _INITIALIZER
      000000                       6267 __xinit__hullabel:
      000000 12                    6268 	.db #0x12	; 18
      000001 1F                    6269 	.db #0x1f	; 31
      000002 16                    6270 	.db #0x16	; 22
      000003 16                    6271 	.db #0x16	; 22
      000004                       6272 __xinit__shieldlabel:
      000004 1D                    6273 	.db #0x1d	; 29
      000005 12                    6274 	.db #0x12	; 18
      000006 16                    6275 	.db #0x16	; 22
      000007 0E                    6276 	.db #0x0e	; 14
      000008                       6277 __xinit__blob:
      000008 00 00                 6278 	.dw #0x0000
      00000A 00 00                 6279 	.dw #0x0000
      00000C 00                    6280 	.db #0x00	;  0
      00000D 00                    6281 	.db #0x00	;  0
      00000E 09                    6282 	.db #0x09	; 9
      00000F 00                    6283 	.db #0x00	; 0
      000010 01                    6284 	.db #0x01	; 1
      000011 01                    6285 	.db #0x01	; 1
      000012 01                    6286 	.db #0x01	; 1
      000013 32                    6287 	.db #0x32	; 50	'2'
      000014 03                    6288 	.db #0x03	;  3
      000015 01                    6289 	.db #0x01	; 1
      000016 00                    6290 	.db #0x00	;  0
      000017 00                    6291 	.db #0x00	;  0
      000018                       6292 __xinit__singleGun:
      000018 00 00                 6293 	.dw #0x0000
      00001A 00 00                 6294 	.dw #0x0000
      00001C 00                    6295 	.db #0x00	;  0
      00001D FF                    6296 	.db #0xff	; -1
      00001E 02                    6297 	.db #0x02	; 2
      00001F 00                    6298 	.db #0x00	; 0
      000020 01                    6299 	.db #0x01	; 1
      000021 0F                    6300 	.db #0x0f	; 15
      000022 14                    6301 	.db #0x14	; 20
      000023                       6302 __xinit__doubleGun:
      000023 00 00                 6303 	.dw #0x0000
      000025 00 00                 6304 	.dw #0x0000
      000027 00                    6305 	.db #0x00	;  0
      000028 FF                    6306 	.db #0xff	; -1
      000029 02                    6307 	.db #0x02	; 2
      00002A 00                    6308 	.db #0x00	; 0
      00002B 01                    6309 	.db #0x01	; 1
      00002C 0F                    6310 	.db #0x0f	; 15
      00002D 17                    6311 	.db #0x17	; 23
      00002E                       6312 __xinit__oldestProjectile:
      00002E 00                    6313 	.db #0x00	; 0
      00002F                       6314 __xinit__fireCooldown:
      00002F 00                    6315 	.db #0x00	; 0
      000030                       6316 __xinit__xDir:
      000030 00                    6317 	.db #0x00	;  0
      000031                       6318 __xinit__yDir:
      000031 00                    6319 	.db #0x00	;  0
      000032                       6320 __xinit__xSpeed:
      000032 00                    6321 	.db #0x00	;  0
      000033                       6322 __xinit__ySpeed:
      000033 00                    6323 	.db #0x00	;  0
      000034                       6324 __xinit__playerX:
      000034 00 0A                 6325 	.dw #0x0a00
      000036                       6326 __xinit__playerY:
      000036 00 0A                 6327 	.dw #0x0a00
      000038                       6328 __xinit__playerDrawX:
      000038 50                    6329 	.db #0x50	; 80	'P'
      000039                       6330 __xinit__playerDrawY:
      000039 50                    6331 	.db #0x50	; 80	'P'
      00003A                       6332 __xinit__bgX:
      00003A 00 00                 6333 	.dw #0x0000
      00003C                       6334 __xinit__bgY:
      00003C 00 00                 6335 	.dw #0x0000
      00003E                       6336 __xinit__xOverflow:
      00003E 00 00                 6337 	.dw #0x0000
      000040                       6338 __xinit__yOverflow:
      000040 00 00                 6339 	.dw #0x0000
      000042                       6340 __xinit__enemyCollisionCount:
      000042 00                    6341 	.db #0x00	; 0
                                   6342 	.area _CABS (ABS)
