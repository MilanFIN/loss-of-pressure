                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _moveProjectiles
                                     15 	.globl _fire
                                     16 	.globl _checkCollision
                                     17 	.globl _takeDamage
                                     18 	.globl _move
                                     19 	.globl _initEnemies
                                     20 	.globl _updateEnemyPositions
                                     21 	.globl _playSound
                                     22 	.globl _updateDirection
                                     23 	.globl _setHealthBar
                                     24 	.globl _interruptLCD
                                     25 	.globl _rand
                                     26 	.globl _initrand
                                     27 	.globl _font_set
                                     28 	.globl _font_load
                                     29 	.globl _font_init
                                     30 	.globl _set_sprite_data
                                     31 	.globl _set_win_tiles
                                     32 	.globl _set_bkg_tiles
                                     33 	.globl _set_bkg_data
                                     34 	.globl _wait_vbl_done
                                     35 	.globl _waitpad
                                     36 	.globl _joypad
                                     37 	.globl _switchDelay
                                     38 	.globl _currentGun
                                     39 	.globl _enemyCollisionCount
                                     40 	.globl _yOverflow
                                     41 	.globl _xOverflow
                                     42 	.globl _bgY
                                     43 	.globl _bgX
                                     44 	.globl _playerDrawY
                                     45 	.globl _playerDrawX
                                     46 	.globl _playerY
                                     47 	.globl _playerX
                                     48 	.globl _ySpeed
                                     49 	.globl _xSpeed
                                     50 	.globl _yDir
                                     51 	.globl _xDir
                                     52 	.globl _fireCooldown
                                     53 	.globl _oldestProjectile
                                     54 	.globl _missile
                                     55 	.globl _doubleGun
                                     56 	.globl _singleGun
                                     57 	.globl _blob
                                     58 	.globl _shieldlabel
                                     59 	.globl _hullabel
                                     60 	.globl _min_font
                                     61 	.globl _shield
                                     62 	.globl _hull
                                     63 	.globl _joydata
                                     64 	.globl _projectiles
                                     65 	.globl _enemies
                                     66 	.globl _GUNCOUNT
                                     67 	.globl _maxShield
                                     68 	.globl _maxHull
                                     69 	.globl _PLAYERSIZE
                                     70 	.globl _PROJECTILECOUNT
                                     71 	.globl _ySpawnPositions
                                     72 	.globl _xSpawnPositions
                                     73 	.globl _ENEMYCOUNT
                                     74 	.globl _EMPTYSPRITE
                                     75 	.globl _BLANK
                                     76 	.globl _BLANKSIZE
                                     77 	.globl _ProjectileTiles
                                     78 	.globl _projectile1
                                     79 	.globl _enemy1
                                     80 	.globl _healthblock
                                     81 	.globl _backgroundtiles
                                     82 	.globl _background1
                                     83 	.globl _cross
                                     84 ;--------------------------------------------------------
                                     85 ; special function registers
                                     86 ;--------------------------------------------------------
                                     87 ;--------------------------------------------------------
                                     88 ; ram data
                                     89 ;--------------------------------------------------------
                                     90 	.area _DATA
      000000                         91 _enemies::
      000000                         92 	.ds 80
      000050                         93 _projectiles::
      000050                         94 	.ds 55
      000087                         95 _joydata::
      000087                         96 	.ds 1
      000088                         97 _hull::
      000088                         98 	.ds 1
      000089                         99 _shield::
      000089                        100 	.ds 1
      00008A                        101 _min_font::
      00008A                        102 	.ds 2
                                    103 ;--------------------------------------------------------
                                    104 ; ram data
                                    105 ;--------------------------------------------------------
                                    106 	.area _INITIALIZED
      000000                        107 _hullabel::
      000000                        108 	.ds 4
      000004                        109 _shieldlabel::
      000004                        110 	.ds 4
      000008                        111 _blob::
      000008                        112 	.ds 16
      000018                        113 _singleGun::
      000018                        114 	.ds 11
      000023                        115 _doubleGun::
      000023                        116 	.ds 11
      00002E                        117 _missile::
      00002E                        118 	.ds 11
      000039                        119 _oldestProjectile::
      000039                        120 	.ds 1
      00003A                        121 _fireCooldown::
      00003A                        122 	.ds 1
      00003B                        123 _xDir::
      00003B                        124 	.ds 1
      00003C                        125 _yDir::
      00003C                        126 	.ds 1
      00003D                        127 _xSpeed::
      00003D                        128 	.ds 1
      00003E                        129 _ySpeed::
      00003E                        130 	.ds 1
      00003F                        131 _playerX::
      00003F                        132 	.ds 2
      000041                        133 _playerY::
      000041                        134 	.ds 2
      000043                        135 _playerDrawX::
      000043                        136 	.ds 1
      000044                        137 _playerDrawY::
      000044                        138 	.ds 1
      000045                        139 _bgX::
      000045                        140 	.ds 2
      000047                        141 _bgY::
      000047                        142 	.ds 2
      000049                        143 _xOverflow::
      000049                        144 	.ds 2
      00004B                        145 _yOverflow::
      00004B                        146 	.ds 2
      00004D                        147 _enemyCollisionCount::
      00004D                        148 	.ds 1
      00004E                        149 _currentGun::
      00004E                        150 	.ds 1
      00004F                        151 _switchDelay::
      00004F                        152 	.ds 1
                                    153 ;--------------------------------------------------------
                                    154 ; absolute external ram data
                                    155 ;--------------------------------------------------------
                                    156 	.area _DABS (ABS)
                                    157 ;--------------------------------------------------------
                                    158 ; global & static initialisations
                                    159 ;--------------------------------------------------------
                                    160 	.area _HOME
                                    161 	.area _GSINIT
                                    162 	.area _GSFINAL
                                    163 	.area _GSINIT
                                    164 ;--------------------------------------------------------
                                    165 ; Home
                                    166 ;--------------------------------------------------------
                                    167 	.area _HOME
                                    168 	.area _HOME
                                    169 ;--------------------------------------------------------
                                    170 ; code
                                    171 ;--------------------------------------------------------
                                    172 	.area _CODE
                                    173 ;main.c:87: void interruptLCD(){
                                    174 ;	---------------------------------
                                    175 ; Function interruptLCD
                                    176 ; ---------------------------------
      000000                        177 _interruptLCD::
                                    178 ;main.c:88: HIDE_WIN;
      000000 F0r00                  179 	ldh	a, (_LCDC_REG + 0)
      000002 E6 DF                  180 	and	a, #0xdf
      000004 E0r00                  181 	ldh	(_LCDC_REG + 0), a
                                    182 ;main.c:89: }
      000006 C9                     183 	ret
      000007                        184 _cross:
      000007 18                     185 	.db #0x18	; 24
      000008 18                     186 	.db #0x18	; 24
      000009 18                     187 	.db #0x18	; 24
      00000A 18                     188 	.db #0x18	; 24
      00000B 3C                     189 	.db #0x3c	; 60
      00000C 3C                     190 	.db #0x3c	; 60
      00000D 3C                     191 	.db #0x3c	; 60
      00000E 3C                     192 	.db #0x3c	; 60
      00000F 7E                     193 	.db #0x7e	; 126
      000010 7E                     194 	.db #0x7e	; 126
      000011 7E                     195 	.db #0x7e	; 126
      000012 7E                     196 	.db #0x7e	; 126
      000013 FF                     197 	.db #0xff	; 255
      000014 FF                     198 	.db #0xff	; 255
      000015 FF                     199 	.db #0xff	; 255
      000016 FF                     200 	.db #0xff	; 255
      000017 0F                     201 	.db #0x0f	; 15
      000018 0F                     202 	.db #0x0f	; 15
      000019 3F                     203 	.db #0x3f	; 63
      00001A 3F                     204 	.db #0x3f	; 63
      00001B FF                     205 	.db #0xff	; 255
      00001C FF                     206 	.db #0xff	; 255
      00001D FF                     207 	.db #0xff	; 255
      00001E FF                     208 	.db #0xff	; 255
      00001F 7E                     209 	.db #0x7e	; 126
      000020 7E                     210 	.db #0x7e	; 126
      000021 3E                     211 	.db #0x3e	; 62
      000022 3E                     212 	.db #0x3e	; 62
      000023 1C                     213 	.db #0x1c	; 28
      000024 1C                     214 	.db #0x1c	; 28
      000025 0C                     215 	.db #0x0c	; 12
      000026 0C                     216 	.db #0x0c	; 12
      000027 C0                     217 	.db #0xc0	; 192
      000028 C0                     218 	.db #0xc0	; 192
      000029 F0                     219 	.db #0xf0	; 240
      00002A F0                     220 	.db #0xf0	; 240
      00002B FC                     221 	.db #0xfc	; 252
      00002C FC                     222 	.db #0xfc	; 252
      00002D FF                     223 	.db #0xff	; 255
      00002E FF                     224 	.db #0xff	; 255
      00002F FF                     225 	.db #0xff	; 255
      000030 FF                     226 	.db #0xff	; 255
      000031 FC                     227 	.db #0xfc	; 252
      000032 FC                     228 	.db #0xfc	; 252
      000033 F0                     229 	.db #0xf0	; 240
      000034 F0                     230 	.db #0xf0	; 240
      000035 C0                     231 	.db #0xc0	; 192
      000036 C0                     232 	.db #0xc0	; 192
      000037 0C                     233 	.db #0x0c	; 12
      000038 0C                     234 	.db #0x0c	; 12
      000039 1C                     235 	.db #0x1c	; 28
      00003A 1C                     236 	.db #0x1c	; 28
      00003B 3E                     237 	.db #0x3e	; 62
      00003C 3E                     238 	.db #0x3e	; 62
      00003D 7E                     239 	.db #0x7e	; 126
      00003E 7E                     240 	.db #0x7e	; 126
      00003F FF                     241 	.db #0xff	; 255
      000040 FF                     242 	.db #0xff	; 255
      000041 FF                     243 	.db #0xff	; 255
      000042 FF                     244 	.db #0xff	; 255
      000043 3F                     245 	.db #0x3f	; 63
      000044 3F                     246 	.db #0x3f	; 63
      000045 0F                     247 	.db #0x0f	; 15
      000046 0F                     248 	.db #0x0f	; 15
      000047 FF                     249 	.db #0xff	; 255
      000048 FF                     250 	.db #0xff	; 255
      000049 FF                     251 	.db #0xff	; 255
      00004A FF                     252 	.db #0xff	; 255
      00004B 7E                     253 	.db #0x7e	; 126
      00004C 7E                     254 	.db #0x7e	; 126
      00004D 7E                     255 	.db #0x7e	; 126
      00004E 7E                     256 	.db #0x7e	; 126
      00004F 3C                     257 	.db #0x3c	; 60
      000050 3C                     258 	.db #0x3c	; 60
      000051 3C                     259 	.db #0x3c	; 60
      000052 3C                     260 	.db #0x3c	; 60
      000053 18                     261 	.db #0x18	; 24
      000054 18                     262 	.db #0x18	; 24
      000055 18                     263 	.db #0x18	; 24
      000056 18                     264 	.db #0x18	; 24
      000057 30                     265 	.db #0x30	; 48	'0'
      000058 30                     266 	.db #0x30	; 48	'0'
      000059 38                     267 	.db #0x38	; 56	'8'
      00005A 38                     268 	.db #0x38	; 56	'8'
      00005B 7C                     269 	.db #0x7c	; 124
      00005C 7C                     270 	.db #0x7c	; 124
      00005D 7E                     271 	.db #0x7e	; 126
      00005E 7E                     272 	.db #0x7e	; 126
      00005F FF                     273 	.db #0xff	; 255
      000060 FF                     274 	.db #0xff	; 255
      000061 FF                     275 	.db #0xff	; 255
      000062 FF                     276 	.db #0xff	; 255
      000063 FC                     277 	.db #0xfc	; 252
      000064 FC                     278 	.db #0xfc	; 252
      000065 F0                     279 	.db #0xf0	; 240
      000066 F0                     280 	.db #0xf0	; 240
      000067 03                     281 	.db #0x03	; 3
      000068 03                     282 	.db #0x03	; 3
      000069 0F                     283 	.db #0x0f	; 15
      00006A 0F                     284 	.db #0x0f	; 15
      00006B 3F                     285 	.db #0x3f	; 63
      00006C 3F                     286 	.db #0x3f	; 63
      00006D FF                     287 	.db #0xff	; 255
      00006E FF                     288 	.db #0xff	; 255
      00006F FF                     289 	.db #0xff	; 255
      000070 FF                     290 	.db #0xff	; 255
      000071 3F                     291 	.db #0x3f	; 63
      000072 3F                     292 	.db #0x3f	; 63
      000073 0F                     293 	.db #0x0f	; 15
      000074 0F                     294 	.db #0x0f	; 15
      000075 03                     295 	.db #0x03	; 3
      000076 03                     296 	.db #0x03	; 3
      000077 F0                     297 	.db #0xf0	; 240
      000078 F0                     298 	.db #0xf0	; 240
      000079 FC                     299 	.db #0xfc	; 252
      00007A FC                     300 	.db #0xfc	; 252
      00007B FF                     301 	.db #0xff	; 255
      00007C FF                     302 	.db #0xff	; 255
      00007D FF                     303 	.db #0xff	; 255
      00007E FF                     304 	.db #0xff	; 255
      00007F 7E                     305 	.db #0x7e	; 126
      000080 7E                     306 	.db #0x7e	; 126
      000081 7C                     307 	.db #0x7c	; 124
      000082 7C                     308 	.db #0x7c	; 124
      000083 38                     309 	.db #0x38	; 56	'8'
      000084 38                     310 	.db #0x38	; 56	'8'
      000085 30                     311 	.db #0x30	; 48	'0'
      000086 30                     312 	.db #0x30	; 48	'0'
      000087                        313 _background1:
      000087 26                     314 	.db #0x26	; 38
      000088 26                     315 	.db #0x26	; 38
      000089 26                     316 	.db #0x26	; 38
      00008A 26                     317 	.db #0x26	; 38
      00008B 26                     318 	.db #0x26	; 38
      00008C 26                     319 	.db #0x26	; 38
      00008D 26                     320 	.db #0x26	; 38
      00008E 26                     321 	.db #0x26	; 38
      00008F 26                     322 	.db #0x26	; 38
      000090 26                     323 	.db #0x26	; 38
      000091 26                     324 	.db #0x26	; 38
      000092 2A                     325 	.db #0x2a	; 42
      000093 29                     326 	.db #0x29	; 41
      000094 26                     327 	.db #0x26	; 38
      000095 26                     328 	.db #0x26	; 38
      000096 26                     329 	.db #0x26	; 38
      000097 26                     330 	.db #0x26	; 38
      000098 26                     331 	.db #0x26	; 38
      000099 26                     332 	.db #0x26	; 38
      00009A 26                     333 	.db #0x26	; 38
      00009B 2C                     334 	.db #0x2c	; 44
      00009C 26                     335 	.db #0x26	; 38
      00009D 26                     336 	.db #0x26	; 38
      00009E 26                     337 	.db #0x26	; 38
      00009F 26                     338 	.db #0x26	; 38
      0000A0 26                     339 	.db #0x26	; 38
      0000A1 26                     340 	.db #0x26	; 38
      0000A2 26                     341 	.db #0x26	; 38
      0000A3 26                     342 	.db #0x26	; 38
      0000A4 26                     343 	.db #0x26	; 38
      0000A5 26                     344 	.db #0x26	; 38
      0000A6 26                     345 	.db #0x26	; 38
      0000A7 26                     346 	.db #0x26	; 38
      0000A8 2B                     347 	.db #0x2b	; 43
      0000A9 26                     348 	.db #0x26	; 38
      0000AA 26                     349 	.db #0x26	; 38
      0000AB 26                     350 	.db #0x26	; 38
      0000AC 26                     351 	.db #0x26	; 38
      0000AD 26                     352 	.db #0x26	; 38
      0000AE 26                     353 	.db #0x26	; 38
      0000AF 26                     354 	.db #0x26	; 38
      0000B0 26                     355 	.db #0x26	; 38
      0000B1 26                     356 	.db #0x26	; 38
      0000B2 26                     357 	.db #0x26	; 38
      0000B3 26                     358 	.db #0x26	; 38
      0000B4 26                     359 	.db #0x26	; 38
      0000B5 26                     360 	.db #0x26	; 38
      0000B6 26                     361 	.db #0x26	; 38
      0000B7 26                     362 	.db #0x26	; 38
      0000B8 26                     363 	.db #0x26	; 38
      0000B9 26                     364 	.db #0x26	; 38
      0000BA 26                     365 	.db #0x26	; 38
      0000BB 26                     366 	.db #0x26	; 38
      0000BC 26                     367 	.db #0x26	; 38
      0000BD 26                     368 	.db #0x26	; 38
      0000BE 26                     369 	.db #0x26	; 38
      0000BF 26                     370 	.db #0x26	; 38
      0000C0 26                     371 	.db #0x26	; 38
      0000C1 26                     372 	.db #0x26	; 38
      0000C2 26                     373 	.db #0x26	; 38
      0000C3 26                     374 	.db #0x26	; 38
      0000C4 26                     375 	.db #0x26	; 38
      0000C5 26                     376 	.db #0x26	; 38
      0000C6 26                     377 	.db #0x26	; 38
      0000C7 26                     378 	.db #0x26	; 38
      0000C8 26                     379 	.db #0x26	; 38
      0000C9 26                     380 	.db #0x26	; 38
      0000CA 26                     381 	.db #0x26	; 38
      0000CB 26                     382 	.db #0x26	; 38
      0000CC 26                     383 	.db #0x26	; 38
      0000CD 26                     384 	.db #0x26	; 38
      0000CE 26                     385 	.db #0x26	; 38
      0000CF 26                     386 	.db #0x26	; 38
      0000D0 26                     387 	.db #0x26	; 38
      0000D1 26                     388 	.db #0x26	; 38
      0000D2 26                     389 	.db #0x26	; 38
      0000D3 26                     390 	.db #0x26	; 38
      0000D4 26                     391 	.db #0x26	; 38
      0000D5 26                     392 	.db #0x26	; 38
      0000D6 26                     393 	.db #0x26	; 38
      0000D7 26                     394 	.db #0x26	; 38
      0000D8 26                     395 	.db #0x26	; 38
      0000D9 26                     396 	.db #0x26	; 38
      0000DA 26                     397 	.db #0x26	; 38
      0000DB 26                     398 	.db #0x26	; 38
      0000DC 26                     399 	.db #0x26	; 38
      0000DD 26                     400 	.db #0x26	; 38
      0000DE 26                     401 	.db #0x26	; 38
      0000DF 26                     402 	.db #0x26	; 38
      0000E0 26                     403 	.db #0x26	; 38
      0000E1 26                     404 	.db #0x26	; 38
      0000E2 26                     405 	.db #0x26	; 38
      0000E3 26                     406 	.db #0x26	; 38
      0000E4 26                     407 	.db #0x26	; 38
      0000E5 26                     408 	.db #0x26	; 38
      0000E6 26                     409 	.db #0x26	; 38
      0000E7 26                     410 	.db #0x26	; 38
      0000E8 26                     411 	.db #0x26	; 38
      0000E9 26                     412 	.db #0x26	; 38
      0000EA 26                     413 	.db #0x26	; 38
      0000EB 26                     414 	.db #0x26	; 38
      0000EC 26                     415 	.db #0x26	; 38
      0000ED 26                     416 	.db #0x26	; 38
      0000EE 26                     417 	.db #0x26	; 38
      0000EF 26                     418 	.db #0x26	; 38
      0000F0 26                     419 	.db #0x26	; 38
      0000F1 26                     420 	.db #0x26	; 38
      0000F2 26                     421 	.db #0x26	; 38
      0000F3 26                     422 	.db #0x26	; 38
      0000F4 26                     423 	.db #0x26	; 38
      0000F5 26                     424 	.db #0x26	; 38
      0000F6 26                     425 	.db #0x26	; 38
      0000F7 26                     426 	.db #0x26	; 38
      0000F8 2B                     427 	.db #0x2b	; 43
      0000F9 26                     428 	.db #0x26	; 38
      0000FA 26                     429 	.db #0x26	; 38
      0000FB 26                     430 	.db #0x26	; 38
      0000FC 26                     431 	.db #0x26	; 38
      0000FD 26                     432 	.db #0x26	; 38
      0000FE 26                     433 	.db #0x26	; 38
      0000FF 2B                     434 	.db #0x2b	; 43
      000100 26                     435 	.db #0x26	; 38
      000101 26                     436 	.db #0x26	; 38
      000102 26                     437 	.db #0x26	; 38
      000103 26                     438 	.db #0x26	; 38
      000104 26                     439 	.db #0x26	; 38
      000105 26                     440 	.db #0x26	; 38
      000106 26                     441 	.db #0x26	; 38
      000107 26                     442 	.db #0x26	; 38
      000108 26                     443 	.db #0x26	; 38
      000109 26                     444 	.db #0x26	; 38
      00010A 26                     445 	.db #0x26	; 38
      00010B 26                     446 	.db #0x26	; 38
      00010C 2B                     447 	.db #0x2b	; 43
      00010D 26                     448 	.db #0x26	; 38
      00010E 26                     449 	.db #0x26	; 38
      00010F 26                     450 	.db #0x26	; 38
      000110 26                     451 	.db #0x26	; 38
      000111 26                     452 	.db #0x26	; 38
      000112 26                     453 	.db #0x26	; 38
      000113 26                     454 	.db #0x26	; 38
      000114 2C                     455 	.db #0x2c	; 44
      000115 26                     456 	.db #0x26	; 38
      000116 26                     457 	.db #0x26	; 38
      000117 26                     458 	.db #0x26	; 38
      000118 26                     459 	.db #0x26	; 38
      000119 26                     460 	.db #0x26	; 38
      00011A 26                     461 	.db #0x26	; 38
      00011B 26                     462 	.db #0x26	; 38
      00011C 26                     463 	.db #0x26	; 38
      00011D 26                     464 	.db #0x26	; 38
      00011E 26                     465 	.db #0x26	; 38
      00011F 26                     466 	.db #0x26	; 38
      000120 26                     467 	.db #0x26	; 38
      000121 26                     468 	.db #0x26	; 38
      000122 26                     469 	.db #0x26	; 38
      000123 26                     470 	.db #0x26	; 38
      000124 26                     471 	.db #0x26	; 38
      000125 26                     472 	.db #0x26	; 38
      000126 26                     473 	.db #0x26	; 38
      000127 26                     474 	.db #0x26	; 38
      000128 26                     475 	.db #0x26	; 38
      000129 2C                     476 	.db #0x2c	; 44
      00012A 26                     477 	.db #0x26	; 38
      00012B 26                     478 	.db #0x26	; 38
      00012C 26                     479 	.db #0x26	; 38
      00012D 26                     480 	.db #0x26	; 38
      00012E 25                     481 	.db #0x25	; 37
      00012F 26                     482 	.db #0x26	; 38
      000130 26                     483 	.db #0x26	; 38
      000131 26                     484 	.db #0x26	; 38
      000132 26                     485 	.db #0x26	; 38
      000133 26                     486 	.db #0x26	; 38
      000134 26                     487 	.db #0x26	; 38
      000135 26                     488 	.db #0x26	; 38
      000136 26                     489 	.db #0x26	; 38
      000137 26                     490 	.db #0x26	; 38
      000138 26                     491 	.db #0x26	; 38
      000139 26                     492 	.db #0x26	; 38
      00013A 26                     493 	.db #0x26	; 38
      00013B 26                     494 	.db #0x26	; 38
      00013C 2C                     495 	.db #0x2c	; 44
      00013D 26                     496 	.db #0x26	; 38
      00013E 26                     497 	.db #0x26	; 38
      00013F 26                     498 	.db #0x26	; 38
      000140 26                     499 	.db #0x26	; 38
      000141 26                     500 	.db #0x26	; 38
      000142 26                     501 	.db #0x26	; 38
      000143 26                     502 	.db #0x26	; 38
      000144 2B                     503 	.db #0x2b	; 43
      000145 26                     504 	.db #0x26	; 38
      000146 26                     505 	.db #0x26	; 38
      000147 26                     506 	.db #0x26	; 38
      000148 26                     507 	.db #0x26	; 38
      000149 26                     508 	.db #0x26	; 38
      00014A 26                     509 	.db #0x26	; 38
      00014B 26                     510 	.db #0x26	; 38
      00014C 26                     511 	.db #0x26	; 38
      00014D 26                     512 	.db #0x26	; 38
      00014E 26                     513 	.db #0x26	; 38
      00014F 26                     514 	.db #0x26	; 38
      000150 26                     515 	.db #0x26	; 38
      000151 26                     516 	.db #0x26	; 38
      000152 26                     517 	.db #0x26	; 38
      000153 26                     518 	.db #0x26	; 38
      000154 26                     519 	.db #0x26	; 38
      000155 26                     520 	.db #0x26	; 38
      000156 26                     521 	.db #0x26	; 38
      000157 26                     522 	.db #0x26	; 38
      000158 26                     523 	.db #0x26	; 38
      000159 26                     524 	.db #0x26	; 38
      00015A 26                     525 	.db #0x26	; 38
      00015B 26                     526 	.db #0x26	; 38
      00015C 26                     527 	.db #0x26	; 38
      00015D 26                     528 	.db #0x26	; 38
      00015E 26                     529 	.db #0x26	; 38
      00015F 26                     530 	.db #0x26	; 38
      000160 2C                     531 	.db #0x2c	; 44
      000161 26                     532 	.db #0x26	; 38
      000162 26                     533 	.db #0x26	; 38
      000163 26                     534 	.db #0x26	; 38
      000164 26                     535 	.db #0x26	; 38
      000165 26                     536 	.db #0x26	; 38
      000166 26                     537 	.db #0x26	; 38
      000167 26                     538 	.db #0x26	; 38
      000168 26                     539 	.db #0x26	; 38
      000169 26                     540 	.db #0x26	; 38
      00016A 26                     541 	.db #0x26	; 38
      00016B 26                     542 	.db #0x26	; 38
      00016C 26                     543 	.db #0x26	; 38
      00016D 26                     544 	.db #0x26	; 38
      00016E 26                     545 	.db #0x26	; 38
      00016F 26                     546 	.db #0x26	; 38
      000170 26                     547 	.db #0x26	; 38
      000171 26                     548 	.db #0x26	; 38
      000172 26                     549 	.db #0x26	; 38
      000173 26                     550 	.db #0x26	; 38
      000174 26                     551 	.db #0x26	; 38
      000175 26                     552 	.db #0x26	; 38
      000176 26                     553 	.db #0x26	; 38
      000177 26                     554 	.db #0x26	; 38
      000178 26                     555 	.db #0x26	; 38
      000179 26                     556 	.db #0x26	; 38
      00017A 26                     557 	.db #0x26	; 38
      00017B 26                     558 	.db #0x26	; 38
      00017C 26                     559 	.db #0x26	; 38
      00017D 26                     560 	.db #0x26	; 38
      00017E 26                     561 	.db #0x26	; 38
      00017F 26                     562 	.db #0x26	; 38
      000180 26                     563 	.db #0x26	; 38
      000181 26                     564 	.db #0x26	; 38
      000182 26                     565 	.db #0x26	; 38
      000183 26                     566 	.db #0x26	; 38
      000184 26                     567 	.db #0x26	; 38
      000185 26                     568 	.db #0x26	; 38
      000186 26                     569 	.db #0x26	; 38
      000187 26                     570 	.db #0x26	; 38
      000188 26                     571 	.db #0x26	; 38
      000189 26                     572 	.db #0x26	; 38
      00018A 26                     573 	.db #0x26	; 38
      00018B 26                     574 	.db #0x26	; 38
      00018C 26                     575 	.db #0x26	; 38
      00018D 26                     576 	.db #0x26	; 38
      00018E 26                     577 	.db #0x26	; 38
      00018F 26                     578 	.db #0x26	; 38
      000190 26                     579 	.db #0x26	; 38
      000191 26                     580 	.db #0x26	; 38
      000192 26                     581 	.db #0x26	; 38
      000193 26                     582 	.db #0x26	; 38
      000194 26                     583 	.db #0x26	; 38
      000195 2B                     584 	.db #0x2b	; 43
      000196 26                     585 	.db #0x26	; 38
      000197 26                     586 	.db #0x26	; 38
      000198 26                     587 	.db #0x26	; 38
      000199 26                     588 	.db #0x26	; 38
      00019A 26                     589 	.db #0x26	; 38
      00019B 26                     590 	.db #0x26	; 38
      00019C 26                     591 	.db #0x26	; 38
      00019D 26                     592 	.db #0x26	; 38
      00019E 26                     593 	.db #0x26	; 38
      00019F 26                     594 	.db #0x26	; 38
      0001A0 26                     595 	.db #0x26	; 38
      0001A1 26                     596 	.db #0x26	; 38
      0001A2 26                     597 	.db #0x26	; 38
      0001A3 26                     598 	.db #0x26	; 38
      0001A4 26                     599 	.db #0x26	; 38
      0001A5 26                     600 	.db #0x26	; 38
      0001A6 25                     601 	.db #0x25	; 37
      0001A7 26                     602 	.db #0x26	; 38
      0001A8 26                     603 	.db #0x26	; 38
      0001A9 26                     604 	.db #0x26	; 38
      0001AA 2B                     605 	.db #0x2b	; 43
      0001AB 26                     606 	.db #0x26	; 38
      0001AC 26                     607 	.db #0x26	; 38
      0001AD 26                     608 	.db #0x26	; 38
      0001AE 26                     609 	.db #0x26	; 38
      0001AF 26                     610 	.db #0x26	; 38
      0001B0 26                     611 	.db #0x26	; 38
      0001B1 26                     612 	.db #0x26	; 38
      0001B2 26                     613 	.db #0x26	; 38
      0001B3 26                     614 	.db #0x26	; 38
      0001B4 26                     615 	.db #0x26	; 38
      0001B5 26                     616 	.db #0x26	; 38
      0001B6 26                     617 	.db #0x26	; 38
      0001B7 26                     618 	.db #0x26	; 38
      0001B8 26                     619 	.db #0x26	; 38
      0001B9 26                     620 	.db #0x26	; 38
      0001BA 26                     621 	.db #0x26	; 38
      0001BB 26                     622 	.db #0x26	; 38
      0001BC 26                     623 	.db #0x26	; 38
      0001BD 26                     624 	.db #0x26	; 38
      0001BE 26                     625 	.db #0x26	; 38
      0001BF 26                     626 	.db #0x26	; 38
      0001C0 26                     627 	.db #0x26	; 38
      0001C1 26                     628 	.db #0x26	; 38
      0001C2 26                     629 	.db #0x26	; 38
      0001C3 26                     630 	.db #0x26	; 38
      0001C4 2B                     631 	.db #0x2b	; 43
      0001C5 26                     632 	.db #0x26	; 38
      0001C6 26                     633 	.db #0x26	; 38
      0001C7 26                     634 	.db #0x26	; 38
      0001C8 26                     635 	.db #0x26	; 38
      0001C9 26                     636 	.db #0x26	; 38
      0001CA 26                     637 	.db #0x26	; 38
      0001CB 26                     638 	.db #0x26	; 38
      0001CC 26                     639 	.db #0x26	; 38
      0001CD 26                     640 	.db #0x26	; 38
      0001CE 26                     641 	.db #0x26	; 38
      0001CF 26                     642 	.db #0x26	; 38
      0001D0 26                     643 	.db #0x26	; 38
      0001D1 26                     644 	.db #0x26	; 38
      0001D2 26                     645 	.db #0x26	; 38
      0001D3 26                     646 	.db #0x26	; 38
      0001D4 26                     647 	.db #0x26	; 38
      0001D5 26                     648 	.db #0x26	; 38
      0001D6 26                     649 	.db #0x26	; 38
      0001D7 26                     650 	.db #0x26	; 38
      0001D8 26                     651 	.db #0x26	; 38
      0001D9 26                     652 	.db #0x26	; 38
      0001DA 27                     653 	.db #0x27	; 39
      0001DB 28                     654 	.db #0x28	; 40
      0001DC 26                     655 	.db #0x26	; 38
      0001DD 26                     656 	.db #0x26	; 38
      0001DE 26                     657 	.db #0x26	; 38
      0001DF 26                     658 	.db #0x26	; 38
      0001E0 26                     659 	.db #0x26	; 38
      0001E1 26                     660 	.db #0x26	; 38
      0001E2 26                     661 	.db #0x26	; 38
      0001E3 26                     662 	.db #0x26	; 38
      0001E4 26                     663 	.db #0x26	; 38
      0001E5 26                     664 	.db #0x26	; 38
      0001E6 26                     665 	.db #0x26	; 38
      0001E7 26                     666 	.db #0x26	; 38
      0001E8 26                     667 	.db #0x26	; 38
      0001E9 26                     668 	.db #0x26	; 38
      0001EA 26                     669 	.db #0x26	; 38
      0001EB 26                     670 	.db #0x26	; 38
      0001EC 26                     671 	.db #0x26	; 38
      0001ED 26                     672 	.db #0x26	; 38
      0001EE 26                     673 	.db #0x26	; 38
      0001EF 26                     674 	.db #0x26	; 38
      0001F0 26                     675 	.db #0x26	; 38
      0001F1 26                     676 	.db #0x26	; 38
      0001F2 26                     677 	.db #0x26	; 38
      0001F3 26                     678 	.db #0x26	; 38
      0001F4 26                     679 	.db #0x26	; 38
      0001F5 26                     680 	.db #0x26	; 38
      0001F6 26                     681 	.db #0x26	; 38
      0001F7 26                     682 	.db #0x26	; 38
      0001F8 26                     683 	.db #0x26	; 38
      0001F9 26                     684 	.db #0x26	; 38
      0001FA 2A                     685 	.db #0x2a	; 42
      0001FB 29                     686 	.db #0x29	; 41
      0001FC 26                     687 	.db #0x26	; 38
      0001FD 26                     688 	.db #0x26	; 38
      0001FE 26                     689 	.db #0x26	; 38
      0001FF 26                     690 	.db #0x26	; 38
      000200 26                     691 	.db #0x26	; 38
      000201 26                     692 	.db #0x26	; 38
      000202 26                     693 	.db #0x26	; 38
      000203 26                     694 	.db #0x26	; 38
      000204 26                     695 	.db #0x26	; 38
      000205 26                     696 	.db #0x26	; 38
      000206 26                     697 	.db #0x26	; 38
      000207 26                     698 	.db #0x26	; 38
      000208 26                     699 	.db #0x26	; 38
      000209 26                     700 	.db #0x26	; 38
      00020A 26                     701 	.db #0x26	; 38
      00020B 26                     702 	.db #0x26	; 38
      00020C 26                     703 	.db #0x26	; 38
      00020D 26                     704 	.db #0x26	; 38
      00020E 27                     705 	.db #0x27	; 39
      00020F 28                     706 	.db #0x28	; 40
      000210 26                     707 	.db #0x26	; 38
      000211 26                     708 	.db #0x26	; 38
      000212 26                     709 	.db #0x26	; 38
      000213 26                     710 	.db #0x26	; 38
      000214 26                     711 	.db #0x26	; 38
      000215 26                     712 	.db #0x26	; 38
      000216 26                     713 	.db #0x26	; 38
      000217 26                     714 	.db #0x26	; 38
      000218 26                     715 	.db #0x26	; 38
      000219 26                     716 	.db #0x26	; 38
      00021A 26                     717 	.db #0x26	; 38
      00021B 26                     718 	.db #0x26	; 38
      00021C 26                     719 	.db #0x26	; 38
      00021D 26                     720 	.db #0x26	; 38
      00021E 26                     721 	.db #0x26	; 38
      00021F 2C                     722 	.db #0x2c	; 44
      000220 26                     723 	.db #0x26	; 38
      000221 26                     724 	.db #0x26	; 38
      000222 26                     725 	.db #0x26	; 38
      000223 26                     726 	.db #0x26	; 38
      000224 26                     727 	.db #0x26	; 38
      000225 26                     728 	.db #0x26	; 38
      000226 26                     729 	.db #0x26	; 38
      000227 26                     730 	.db #0x26	; 38
      000228 26                     731 	.db #0x26	; 38
      000229 26                     732 	.db #0x26	; 38
      00022A 26                     733 	.db #0x26	; 38
      00022B 26                     734 	.db #0x26	; 38
      00022C 26                     735 	.db #0x26	; 38
      00022D 26                     736 	.db #0x26	; 38
      00022E 2A                     737 	.db #0x2a	; 42
      00022F 29                     738 	.db #0x29	; 41
      000230 26                     739 	.db #0x26	; 38
      000231 26                     740 	.db #0x26	; 38
      000232 26                     741 	.db #0x26	; 38
      000233 26                     742 	.db #0x26	; 38
      000234 26                     743 	.db #0x26	; 38
      000235 26                     744 	.db #0x26	; 38
      000236 26                     745 	.db #0x26	; 38
      000237 26                     746 	.db #0x26	; 38
      000238 26                     747 	.db #0x26	; 38
      000239 26                     748 	.db #0x26	; 38
      00023A 26                     749 	.db #0x26	; 38
      00023B 26                     750 	.db #0x26	; 38
      00023C 26                     751 	.db #0x26	; 38
      00023D 25                     752 	.db #0x25	; 37
      00023E 26                     753 	.db #0x26	; 38
      00023F 26                     754 	.db #0x26	; 38
      000240 26                     755 	.db #0x26	; 38
      000241 26                     756 	.db #0x26	; 38
      000242 26                     757 	.db #0x26	; 38
      000243 26                     758 	.db #0x26	; 38
      000244 2C                     759 	.db #0x2c	; 44
      000245 26                     760 	.db #0x26	; 38
      000246 26                     761 	.db #0x26	; 38
      000247 26                     762 	.db #0x26	; 38
      000248 26                     763 	.db #0x26	; 38
      000249 26                     764 	.db #0x26	; 38
      00024A 26                     765 	.db #0x26	; 38
      00024B 26                     766 	.db #0x26	; 38
      00024C 26                     767 	.db #0x26	; 38
      00024D 26                     768 	.db #0x26	; 38
      00024E 26                     769 	.db #0x26	; 38
      00024F 26                     770 	.db #0x26	; 38
      000250 26                     771 	.db #0x26	; 38
      000251 26                     772 	.db #0x26	; 38
      000252 26                     773 	.db #0x26	; 38
      000253 26                     774 	.db #0x26	; 38
      000254 26                     775 	.db #0x26	; 38
      000255 26                     776 	.db #0x26	; 38
      000256 26                     777 	.db #0x26	; 38
      000257 26                     778 	.db #0x26	; 38
      000258 26                     779 	.db #0x26	; 38
      000259 26                     780 	.db #0x26	; 38
      00025A 26                     781 	.db #0x26	; 38
      00025B 26                     782 	.db #0x26	; 38
      00025C 26                     783 	.db #0x26	; 38
      00025D 26                     784 	.db #0x26	; 38
      00025E 26                     785 	.db #0x26	; 38
      00025F 26                     786 	.db #0x26	; 38
      000260 26                     787 	.db #0x26	; 38
      000261 26                     788 	.db #0x26	; 38
      000262 26                     789 	.db #0x26	; 38
      000263 26                     790 	.db #0x26	; 38
      000264 26                     791 	.db #0x26	; 38
      000265 26                     792 	.db #0x26	; 38
      000266 26                     793 	.db #0x26	; 38
      000267 26                     794 	.db #0x26	; 38
      000268 26                     795 	.db #0x26	; 38
      000269 26                     796 	.db #0x26	; 38
      00026A 2C                     797 	.db #0x2c	; 44
      00026B 26                     798 	.db #0x26	; 38
      00026C 26                     799 	.db #0x26	; 38
      00026D 26                     800 	.db #0x26	; 38
      00026E 26                     801 	.db #0x26	; 38
      00026F 26                     802 	.db #0x26	; 38
      000270 26                     803 	.db #0x26	; 38
      000271 26                     804 	.db #0x26	; 38
      000272 26                     805 	.db #0x26	; 38
      000273 26                     806 	.db #0x26	; 38
      000274 26                     807 	.db #0x26	; 38
      000275 26                     808 	.db #0x26	; 38
      000276 26                     809 	.db #0x26	; 38
      000277 26                     810 	.db #0x26	; 38
      000278 26                     811 	.db #0x26	; 38
      000279 2C                     812 	.db #0x2c	; 44
      00027A 26                     813 	.db #0x26	; 38
      00027B 26                     814 	.db #0x26	; 38
      00027C 26                     815 	.db #0x26	; 38
      00027D 26                     816 	.db #0x26	; 38
      00027E 26                     817 	.db #0x26	; 38
      00027F 26                     818 	.db #0x26	; 38
      000280 26                     819 	.db #0x26	; 38
      000281 26                     820 	.db #0x26	; 38
      000282 26                     821 	.db #0x26	; 38
      000283 26                     822 	.db #0x26	; 38
      000284 26                     823 	.db #0x26	; 38
      000285 26                     824 	.db #0x26	; 38
      000286 26                     825 	.db #0x26	; 38
      000287 26                     826 	.db #0x26	; 38
      000288 26                     827 	.db #0x26	; 38
      000289 26                     828 	.db #0x26	; 38
      00028A 26                     829 	.db #0x26	; 38
      00028B 26                     830 	.db #0x26	; 38
      00028C 26                     831 	.db #0x26	; 38
      00028D 26                     832 	.db #0x26	; 38
      00028E 26                     833 	.db #0x26	; 38
      00028F 26                     834 	.db #0x26	; 38
      000290 26                     835 	.db #0x26	; 38
      000291 26                     836 	.db #0x26	; 38
      000292 26                     837 	.db #0x26	; 38
      000293 26                     838 	.db #0x26	; 38
      000294 26                     839 	.db #0x26	; 38
      000295 2B                     840 	.db #0x2b	; 43
      000296 26                     841 	.db #0x26	; 38
      000297 26                     842 	.db #0x26	; 38
      000298 26                     843 	.db #0x26	; 38
      000299 26                     844 	.db #0x26	; 38
      00029A 26                     845 	.db #0x26	; 38
      00029B 26                     846 	.db #0x26	; 38
      00029C 26                     847 	.db #0x26	; 38
      00029D 26                     848 	.db #0x26	; 38
      00029E 26                     849 	.db #0x26	; 38
      00029F 26                     850 	.db #0x26	; 38
      0002A0 26                     851 	.db #0x26	; 38
      0002A1 26                     852 	.db #0x26	; 38
      0002A2 26                     853 	.db #0x26	; 38
      0002A3 26                     854 	.db #0x26	; 38
      0002A4 26                     855 	.db #0x26	; 38
      0002A5 26                     856 	.db #0x26	; 38
      0002A6 26                     857 	.db #0x26	; 38
      0002A7 28                     858 	.db #0x28	; 40
      0002A8 26                     859 	.db #0x26	; 38
      0002A9 26                     860 	.db #0x26	; 38
      0002AA 26                     861 	.db #0x26	; 38
      0002AB 26                     862 	.db #0x26	; 38
      0002AC 26                     863 	.db #0x26	; 38
      0002AD 26                     864 	.db #0x26	; 38
      0002AE 26                     865 	.db #0x26	; 38
      0002AF 26                     866 	.db #0x26	; 38
      0002B0 26                     867 	.db #0x26	; 38
      0002B1 26                     868 	.db #0x26	; 38
      0002B2 26                     869 	.db #0x26	; 38
      0002B3 26                     870 	.db #0x26	; 38
      0002B4 26                     871 	.db #0x26	; 38
      0002B5 26                     872 	.db #0x26	; 38
      0002B6 26                     873 	.db #0x26	; 38
      0002B7 26                     874 	.db #0x26	; 38
      0002B8 26                     875 	.db #0x26	; 38
      0002B9 26                     876 	.db #0x26	; 38
      0002BA 26                     877 	.db #0x26	; 38
      0002BB 26                     878 	.db #0x26	; 38
      0002BC 26                     879 	.db #0x26	; 38
      0002BD 26                     880 	.db #0x26	; 38
      0002BE 26                     881 	.db #0x26	; 38
      0002BF 26                     882 	.db #0x26	; 38
      0002C0 2B                     883 	.db #0x2b	; 43
      0002C1 26                     884 	.db #0x26	; 38
      0002C2 26                     885 	.db #0x26	; 38
      0002C3 26                     886 	.db #0x26	; 38
      0002C4 26                     887 	.db #0x26	; 38
      0002C5 26                     888 	.db #0x26	; 38
      0002C6 27                     889 	.db #0x27	; 39
      0002C7 29                     890 	.db #0x29	; 41
      0002C8 26                     891 	.db #0x26	; 38
      0002C9 26                     892 	.db #0x26	; 38
      0002CA 26                     893 	.db #0x26	; 38
      0002CB 26                     894 	.db #0x26	; 38
      0002CC 26                     895 	.db #0x26	; 38
      0002CD 26                     896 	.db #0x26	; 38
      0002CE 2B                     897 	.db #0x2b	; 43
      0002CF 26                     898 	.db #0x26	; 38
      0002D0 26                     899 	.db #0x26	; 38
      0002D1 26                     900 	.db #0x26	; 38
      0002D2 26                     901 	.db #0x26	; 38
      0002D3 26                     902 	.db #0x26	; 38
      0002D4 26                     903 	.db #0x26	; 38
      0002D5 26                     904 	.db #0x26	; 38
      0002D6 26                     905 	.db #0x26	; 38
      0002D7 26                     906 	.db #0x26	; 38
      0002D8 26                     907 	.db #0x26	; 38
      0002D9 26                     908 	.db #0x26	; 38
      0002DA 26                     909 	.db #0x26	; 38
      0002DB 26                     910 	.db #0x26	; 38
      0002DC 26                     911 	.db #0x26	; 38
      0002DD 26                     912 	.db #0x26	; 38
      0002DE 26                     913 	.db #0x26	; 38
      0002DF 26                     914 	.db #0x26	; 38
      0002E0 26                     915 	.db #0x26	; 38
      0002E1 26                     916 	.db #0x26	; 38
      0002E2 26                     917 	.db #0x26	; 38
      0002E3 26                     918 	.db #0x26	; 38
      0002E4 26                     919 	.db #0x26	; 38
      0002E5 26                     920 	.db #0x26	; 38
      0002E6 2A                     921 	.db #0x2a	; 42
      0002E7 26                     922 	.db #0x26	; 38
      0002E8 26                     923 	.db #0x26	; 38
      0002E9 26                     924 	.db #0x26	; 38
      0002EA 26                     925 	.db #0x26	; 38
      0002EB 26                     926 	.db #0x26	; 38
      0002EC 26                     927 	.db #0x26	; 38
      0002ED 26                     928 	.db #0x26	; 38
      0002EE 26                     929 	.db #0x26	; 38
      0002EF 26                     930 	.db #0x26	; 38
      0002F0 26                     931 	.db #0x26	; 38
      0002F1 26                     932 	.db #0x26	; 38
      0002F2 2C                     933 	.db #0x2c	; 44
      0002F3 26                     934 	.db #0x26	; 38
      0002F4 26                     935 	.db #0x26	; 38
      0002F5 26                     936 	.db #0x26	; 38
      0002F6 26                     937 	.db #0x26	; 38
      0002F7 26                     938 	.db #0x26	; 38
      0002F8 26                     939 	.db #0x26	; 38
      0002F9 26                     940 	.db #0x26	; 38
      0002FA 26                     941 	.db #0x26	; 38
      0002FB 26                     942 	.db #0x26	; 38
      0002FC 26                     943 	.db #0x26	; 38
      0002FD 26                     944 	.db #0x26	; 38
      0002FE 26                     945 	.db #0x26	; 38
      0002FF 26                     946 	.db #0x26	; 38
      000300 26                     947 	.db #0x26	; 38
      000301 26                     948 	.db #0x26	; 38
      000302 26                     949 	.db #0x26	; 38
      000303 26                     950 	.db #0x26	; 38
      000304 26                     951 	.db #0x26	; 38
      000305 26                     952 	.db #0x26	; 38
      000306 26                     953 	.db #0x26	; 38
      000307 26                     954 	.db #0x26	; 38
      000308 26                     955 	.db #0x26	; 38
      000309 26                     956 	.db #0x26	; 38
      00030A 26                     957 	.db #0x26	; 38
      00030B 26                     958 	.db #0x26	; 38
      00030C 26                     959 	.db #0x26	; 38
      00030D 26                     960 	.db #0x26	; 38
      00030E 26                     961 	.db #0x26	; 38
      00030F 26                     962 	.db #0x26	; 38
      000310 26                     963 	.db #0x26	; 38
      000311 26                     964 	.db #0x26	; 38
      000312 26                     965 	.db #0x26	; 38
      000313 26                     966 	.db #0x26	; 38
      000314 26                     967 	.db #0x26	; 38
      000315 26                     968 	.db #0x26	; 38
      000316 26                     969 	.db #0x26	; 38
      000317 2B                     970 	.db #0x2b	; 43
      000318 26                     971 	.db #0x26	; 38
      000319 26                     972 	.db #0x26	; 38
      00031A 26                     973 	.db #0x26	; 38
      00031B 26                     974 	.db #0x26	; 38
      00031C 26                     975 	.db #0x26	; 38
      00031D 26                     976 	.db #0x26	; 38
      00031E 26                     977 	.db #0x26	; 38
      00031F 26                     978 	.db #0x26	; 38
      000320 26                     979 	.db #0x26	; 38
      000321 26                     980 	.db #0x26	; 38
      000322 26                     981 	.db #0x26	; 38
      000323 26                     982 	.db #0x26	; 38
      000324 26                     983 	.db #0x26	; 38
      000325 26                     984 	.db #0x26	; 38
      000326 26                     985 	.db #0x26	; 38
      000327 26                     986 	.db #0x26	; 38
      000328 26                     987 	.db #0x26	; 38
      000329 26                     988 	.db #0x26	; 38
      00032A 26                     989 	.db #0x26	; 38
      00032B 26                     990 	.db #0x26	; 38
      00032C 26                     991 	.db #0x26	; 38
      00032D 26                     992 	.db #0x26	; 38
      00032E 26                     993 	.db #0x26	; 38
      00032F 26                     994 	.db #0x26	; 38
      000330 26                     995 	.db #0x26	; 38
      000331 26                     996 	.db #0x26	; 38
      000332 26                     997 	.db #0x26	; 38
      000333 26                     998 	.db #0x26	; 38
      000334 26                     999 	.db #0x26	; 38
      000335 26                    1000 	.db #0x26	; 38
      000336 26                    1001 	.db #0x26	; 38
      000337 26                    1002 	.db #0x26	; 38
      000338 26                    1003 	.db #0x26	; 38
      000339 26                    1004 	.db #0x26	; 38
      00033A 26                    1005 	.db #0x26	; 38
      00033B 26                    1006 	.db #0x26	; 38
      00033C 26                    1007 	.db #0x26	; 38
      00033D 26                    1008 	.db #0x26	; 38
      00033E 2B                    1009 	.db #0x2b	; 43
      00033F 26                    1010 	.db #0x26	; 38
      000340 26                    1011 	.db #0x26	; 38
      000341 26                    1012 	.db #0x26	; 38
      000342 26                    1013 	.db #0x26	; 38
      000343 26                    1014 	.db #0x26	; 38
      000344 26                    1015 	.db #0x26	; 38
      000345 26                    1016 	.db #0x26	; 38
      000346 26                    1017 	.db #0x26	; 38
      000347 26                    1018 	.db #0x26	; 38
      000348 26                    1019 	.db #0x26	; 38
      000349 26                    1020 	.db #0x26	; 38
      00034A 2B                    1021 	.db #0x2b	; 43
      00034B 26                    1022 	.db #0x26	; 38
      00034C 26                    1023 	.db #0x26	; 38
      00034D 26                    1024 	.db #0x26	; 38
      00034E 26                    1025 	.db #0x26	; 38
      00034F 26                    1026 	.db #0x26	; 38
      000350 26                    1027 	.db #0x26	; 38
      000351 26                    1028 	.db #0x26	; 38
      000352 26                    1029 	.db #0x26	; 38
      000353 26                    1030 	.db #0x26	; 38
      000354 26                    1031 	.db #0x26	; 38
      000355 26                    1032 	.db #0x26	; 38
      000356 26                    1033 	.db #0x26	; 38
      000357 26                    1034 	.db #0x26	; 38
      000358 26                    1035 	.db #0x26	; 38
      000359 26                    1036 	.db #0x26	; 38
      00035A 26                    1037 	.db #0x26	; 38
      00035B 26                    1038 	.db #0x26	; 38
      00035C 26                    1039 	.db #0x26	; 38
      00035D 26                    1040 	.db #0x26	; 38
      00035E 26                    1041 	.db #0x26	; 38
      00035F 26                    1042 	.db #0x26	; 38
      000360 26                    1043 	.db #0x26	; 38
      000361 26                    1044 	.db #0x26	; 38
      000362 26                    1045 	.db #0x26	; 38
      000363 26                    1046 	.db #0x26	; 38
      000364 26                    1047 	.db #0x26	; 38
      000365 26                    1048 	.db #0x26	; 38
      000366 2C                    1049 	.db #0x2c	; 44
      000367 26                    1050 	.db #0x26	; 38
      000368 26                    1051 	.db #0x26	; 38
      000369 26                    1052 	.db #0x26	; 38
      00036A 26                    1053 	.db #0x26	; 38
      00036B 26                    1054 	.db #0x26	; 38
      00036C 26                    1055 	.db #0x26	; 38
      00036D 26                    1056 	.db #0x26	; 38
      00036E 26                    1057 	.db #0x26	; 38
      00036F 26                    1058 	.db #0x26	; 38
      000370 2B                    1059 	.db #0x2b	; 43
      000371 26                    1060 	.db #0x26	; 38
      000372 26                    1061 	.db #0x26	; 38
      000373 26                    1062 	.db #0x26	; 38
      000374 26                    1063 	.db #0x26	; 38
      000375 26                    1064 	.db #0x26	; 38
      000376 26                    1065 	.db #0x26	; 38
      000377 26                    1066 	.db #0x26	; 38
      000378 26                    1067 	.db #0x26	; 38
      000379 26                    1068 	.db #0x26	; 38
      00037A 26                    1069 	.db #0x26	; 38
      00037B 26                    1070 	.db #0x26	; 38
      00037C 26                    1071 	.db #0x26	; 38
      00037D 26                    1072 	.db #0x26	; 38
      00037E 26                    1073 	.db #0x26	; 38
      00037F 26                    1074 	.db #0x26	; 38
      000380 26                    1075 	.db #0x26	; 38
      000381 26                    1076 	.db #0x26	; 38
      000382 26                    1077 	.db #0x26	; 38
      000383 26                    1078 	.db #0x26	; 38
      000384 26                    1079 	.db #0x26	; 38
      000385 26                    1080 	.db #0x26	; 38
      000386 26                    1081 	.db #0x26	; 38
      000387 26                    1082 	.db #0x26	; 38
      000388 26                    1083 	.db #0x26	; 38
      000389 26                    1084 	.db #0x26	; 38
      00038A 26                    1085 	.db #0x26	; 38
      00038B 26                    1086 	.db #0x26	; 38
      00038C 26                    1087 	.db #0x26	; 38
      00038D 26                    1088 	.db #0x26	; 38
      00038E 26                    1089 	.db #0x26	; 38
      00038F 26                    1090 	.db #0x26	; 38
      000390 26                    1091 	.db #0x26	; 38
      000391 26                    1092 	.db #0x26	; 38
      000392 26                    1093 	.db #0x26	; 38
      000393 26                    1094 	.db #0x26	; 38
      000394 26                    1095 	.db #0x26	; 38
      000395 26                    1096 	.db #0x26	; 38
      000396 26                    1097 	.db #0x26	; 38
      000397 26                    1098 	.db #0x26	; 38
      000398 27                    1099 	.db #0x27	; 39
      000399 28                    1100 	.db #0x28	; 40
      00039A 26                    1101 	.db #0x26	; 38
      00039B 26                    1102 	.db #0x26	; 38
      00039C 26                    1103 	.db #0x26	; 38
      00039D 26                    1104 	.db #0x26	; 38
      00039E 26                    1105 	.db #0x26	; 38
      00039F 26                    1106 	.db #0x26	; 38
      0003A0 26                    1107 	.db #0x26	; 38
      0003A1 26                    1108 	.db #0x26	; 38
      0003A2 26                    1109 	.db #0x26	; 38
      0003A3 26                    1110 	.db #0x26	; 38
      0003A4 26                    1111 	.db #0x26	; 38
      0003A5 26                    1112 	.db #0x26	; 38
      0003A6 26                    1113 	.db #0x26	; 38
      0003A7 26                    1114 	.db #0x26	; 38
      0003A8 26                    1115 	.db #0x26	; 38
      0003A9 26                    1116 	.db #0x26	; 38
      0003AA 26                    1117 	.db #0x26	; 38
      0003AB 26                    1118 	.db #0x26	; 38
      0003AC 26                    1119 	.db #0x26	; 38
      0003AD 2B                    1120 	.db #0x2b	; 43
      0003AE 26                    1121 	.db #0x26	; 38
      0003AF 26                    1122 	.db #0x26	; 38
      0003B0 26                    1123 	.db #0x26	; 38
      0003B1 26                    1124 	.db #0x26	; 38
      0003B2 26                    1125 	.db #0x26	; 38
      0003B3 26                    1126 	.db #0x26	; 38
      0003B4 26                    1127 	.db #0x26	; 38
      0003B5 25                    1128 	.db #0x25	; 37
      0003B6 26                    1129 	.db #0x26	; 38
      0003B7 26                    1130 	.db #0x26	; 38
      0003B8 2A                    1131 	.db #0x2a	; 42
      0003B9 29                    1132 	.db #0x29	; 41
      0003BA 26                    1133 	.db #0x26	; 38
      0003BB 26                    1134 	.db #0x26	; 38
      0003BC 26                    1135 	.db #0x26	; 38
      0003BD 26                    1136 	.db #0x26	; 38
      0003BE 26                    1137 	.db #0x26	; 38
      0003BF 26                    1138 	.db #0x26	; 38
      0003C0 26                    1139 	.db #0x26	; 38
      0003C1 26                    1140 	.db #0x26	; 38
      0003C2 2B                    1141 	.db #0x2b	; 43
      0003C3 26                    1142 	.db #0x26	; 38
      0003C4 26                    1143 	.db #0x26	; 38
      0003C5 26                    1144 	.db #0x26	; 38
      0003C6 26                    1145 	.db #0x26	; 38
      0003C7 26                    1146 	.db #0x26	; 38
      0003C8 26                    1147 	.db #0x26	; 38
      0003C9 2C                    1148 	.db #0x2c	; 44
      0003CA 26                    1149 	.db #0x26	; 38
      0003CB 26                    1150 	.db #0x26	; 38
      0003CC 26                    1151 	.db #0x26	; 38
      0003CD 26                    1152 	.db #0x26	; 38
      0003CE 26                    1153 	.db #0x26	; 38
      0003CF 26                    1154 	.db #0x26	; 38
      0003D0 26                    1155 	.db #0x26	; 38
      0003D1 26                    1156 	.db #0x26	; 38
      0003D2 26                    1157 	.db #0x26	; 38
      0003D3 26                    1158 	.db #0x26	; 38
      0003D4 26                    1159 	.db #0x26	; 38
      0003D5 2C                    1160 	.db #0x2c	; 44
      0003D6 26                    1161 	.db #0x26	; 38
      0003D7 26                    1162 	.db #0x26	; 38
      0003D8 26                    1163 	.db #0x26	; 38
      0003D9 26                    1164 	.db #0x26	; 38
      0003DA 26                    1165 	.db #0x26	; 38
      0003DB 26                    1166 	.db #0x26	; 38
      0003DC 26                    1167 	.db #0x26	; 38
      0003DD 26                    1168 	.db #0x26	; 38
      0003DE 26                    1169 	.db #0x26	; 38
      0003DF 26                    1170 	.db #0x26	; 38
      0003E0 26                    1171 	.db #0x26	; 38
      0003E1 26                    1172 	.db #0x26	; 38
      0003E2 26                    1173 	.db #0x26	; 38
      0003E3 26                    1174 	.db #0x26	; 38
      0003E4 26                    1175 	.db #0x26	; 38
      0003E5 26                    1176 	.db #0x26	; 38
      0003E6 26                    1177 	.db #0x26	; 38
      0003E7 26                    1178 	.db #0x26	; 38
      0003E8 26                    1179 	.db #0x26	; 38
      0003E9 26                    1180 	.db #0x26	; 38
      0003EA 26                    1181 	.db #0x26	; 38
      0003EB 26                    1182 	.db #0x26	; 38
      0003EC 26                    1183 	.db #0x26	; 38
      0003ED 26                    1184 	.db #0x26	; 38
      0003EE 26                    1185 	.db #0x26	; 38
      0003EF 26                    1186 	.db #0x26	; 38
      0003F0 26                    1187 	.db #0x26	; 38
      0003F1 26                    1188 	.db #0x26	; 38
      0003F2 26                    1189 	.db #0x26	; 38
      0003F3 26                    1190 	.db #0x26	; 38
      0003F4 26                    1191 	.db #0x26	; 38
      0003F5 26                    1192 	.db #0x26	; 38
      0003F6 26                    1193 	.db #0x26	; 38
      0003F7 26                    1194 	.db #0x26	; 38
      0003F8 26                    1195 	.db #0x26	; 38
      0003F9 26                    1196 	.db #0x26	; 38
      0003FA 26                    1197 	.db #0x26	; 38
      0003FB 26                    1198 	.db #0x26	; 38
      0003FC 26                    1199 	.db #0x26	; 38
      0003FD 26                    1200 	.db #0x26	; 38
      0003FE 26                    1201 	.db #0x26	; 38
      0003FF 26                    1202 	.db #0x26	; 38
      000400 26                    1203 	.db #0x26	; 38
      000401 26                    1204 	.db #0x26	; 38
      000402 26                    1205 	.db #0x26	; 38
      000403 26                    1206 	.db #0x26	; 38
      000404 26                    1207 	.db #0x26	; 38
      000405 26                    1208 	.db #0x26	; 38
      000406 26                    1209 	.db #0x26	; 38
      000407 26                    1210 	.db #0x26	; 38
      000408 26                    1211 	.db #0x26	; 38
      000409 26                    1212 	.db #0x26	; 38
      00040A 26                    1213 	.db #0x26	; 38
      00040B 26                    1214 	.db #0x26	; 38
      00040C 26                    1215 	.db #0x26	; 38
      00040D 2B                    1216 	.db #0x2b	; 43
      00040E 26                    1217 	.db #0x26	; 38
      00040F 26                    1218 	.db #0x26	; 38
      000410 26                    1219 	.db #0x26	; 38
      000411 26                    1220 	.db #0x26	; 38
      000412 26                    1221 	.db #0x26	; 38
      000413 26                    1222 	.db #0x26	; 38
      000414 26                    1223 	.db #0x26	; 38
      000415 26                    1224 	.db #0x26	; 38
      000416 26                    1225 	.db #0x26	; 38
      000417 26                    1226 	.db #0x26	; 38
      000418 26                    1227 	.db #0x26	; 38
      000419 26                    1228 	.db #0x26	; 38
      00041A 26                    1229 	.db #0x26	; 38
      00041B 26                    1230 	.db #0x26	; 38
      00041C 26                    1231 	.db #0x26	; 38
      00041D 26                    1232 	.db #0x26	; 38
      00041E 26                    1233 	.db #0x26	; 38
      00041F 26                    1234 	.db #0x26	; 38
      000420 2B                    1235 	.db #0x2b	; 43
      000421 26                    1236 	.db #0x26	; 38
      000422 26                    1237 	.db #0x26	; 38
      000423 26                    1238 	.db #0x26	; 38
      000424 26                    1239 	.db #0x26	; 38
      000425 26                    1240 	.db #0x26	; 38
      000426 26                    1241 	.db #0x26	; 38
      000427 26                    1242 	.db #0x26	; 38
      000428 26                    1243 	.db #0x26	; 38
      000429 26                    1244 	.db #0x26	; 38
      00042A 26                    1245 	.db #0x26	; 38
      00042B 26                    1246 	.db #0x26	; 38
      00042C 26                    1247 	.db #0x26	; 38
      00042D 26                    1248 	.db #0x26	; 38
      00042E 26                    1249 	.db #0x26	; 38
      00042F 26                    1250 	.db #0x26	; 38
      000430 26                    1251 	.db #0x26	; 38
      000431 26                    1252 	.db #0x26	; 38
      000432 26                    1253 	.db #0x26	; 38
      000433 26                    1254 	.db #0x26	; 38
      000434 26                    1255 	.db #0x26	; 38
      000435 26                    1256 	.db #0x26	; 38
      000436 26                    1257 	.db #0x26	; 38
      000437 2C                    1258 	.db #0x2c	; 44
      000438 26                    1259 	.db #0x26	; 38
      000439 26                    1260 	.db #0x26	; 38
      00043A 26                    1261 	.db #0x26	; 38
      00043B 26                    1262 	.db #0x26	; 38
      00043C 26                    1263 	.db #0x26	; 38
      00043D 26                    1264 	.db #0x26	; 38
      00043E 26                    1265 	.db #0x26	; 38
      00043F 26                    1266 	.db #0x26	; 38
      000440 26                    1267 	.db #0x26	; 38
      000441 26                    1268 	.db #0x26	; 38
      000442 26                    1269 	.db #0x26	; 38
      000443 26                    1270 	.db #0x26	; 38
      000444 26                    1271 	.db #0x26	; 38
      000445 26                    1272 	.db #0x26	; 38
      000446 26                    1273 	.db #0x26	; 38
      000447 26                    1274 	.db #0x26	; 38
      000448 25                    1275 	.db #0x25	; 37
      000449 2C                    1276 	.db #0x2c	; 44
      00044A 26                    1277 	.db #0x26	; 38
      00044B 26                    1278 	.db #0x26	; 38
      00044C 26                    1279 	.db #0x26	; 38
      00044D 26                    1280 	.db #0x26	; 38
      00044E 26                    1281 	.db #0x26	; 38
      00044F 26                    1282 	.db #0x26	; 38
      000450 26                    1283 	.db #0x26	; 38
      000451 26                    1284 	.db #0x26	; 38
      000452 26                    1285 	.db #0x26	; 38
      000453 26                    1286 	.db #0x26	; 38
      000454 26                    1287 	.db #0x26	; 38
      000455 26                    1288 	.db #0x26	; 38
      000456 26                    1289 	.db #0x26	; 38
      000457 26                    1290 	.db #0x26	; 38
      000458 26                    1291 	.db #0x26	; 38
      000459 26                    1292 	.db #0x26	; 38
      00045A 2B                    1293 	.db #0x2b	; 43
      00045B 26                    1294 	.db #0x26	; 38
      00045C 26                    1295 	.db #0x26	; 38
      00045D 26                    1296 	.db #0x26	; 38
      00045E 26                    1297 	.db #0x26	; 38
      00045F 26                    1298 	.db #0x26	; 38
      000460 26                    1299 	.db #0x26	; 38
      000461 26                    1300 	.db #0x26	; 38
      000462 26                    1301 	.db #0x26	; 38
      000463 26                    1302 	.db #0x26	; 38
      000464 26                    1303 	.db #0x26	; 38
      000465 26                    1304 	.db #0x26	; 38
      000466 26                    1305 	.db #0x26	; 38
      000467 26                    1306 	.db #0x26	; 38
      000468 26                    1307 	.db #0x26	; 38
      000469 26                    1308 	.db #0x26	; 38
      00046A 26                    1309 	.db #0x26	; 38
      00046B 26                    1310 	.db #0x26	; 38
      00046C 26                    1311 	.db #0x26	; 38
      00046D 26                    1312 	.db #0x26	; 38
      00046E 26                    1313 	.db #0x26	; 38
      00046F 26                    1314 	.db #0x26	; 38
      000470 26                    1315 	.db #0x26	; 38
      000471 26                    1316 	.db #0x26	; 38
      000472 27                    1317 	.db #0x27	; 39
      000473 28                    1318 	.db #0x28	; 40
      000474 26                    1319 	.db #0x26	; 38
      000475 26                    1320 	.db #0x26	; 38
      000476 26                    1321 	.db #0x26	; 38
      000477 26                    1322 	.db #0x26	; 38
      000478 26                    1323 	.db #0x26	; 38
      000479 26                    1324 	.db #0x26	; 38
      00047A 26                    1325 	.db #0x26	; 38
      00047B 26                    1326 	.db #0x26	; 38
      00047C 26                    1327 	.db #0x26	; 38
      00047D 26                    1328 	.db #0x26	; 38
      00047E 26                    1329 	.db #0x26	; 38
      00047F 26                    1330 	.db #0x26	; 38
      000480 26                    1331 	.db #0x26	; 38
      000481 26                    1332 	.db #0x26	; 38
      000482 26                    1333 	.db #0x26	; 38
      000483 26                    1334 	.db #0x26	; 38
      000484 26                    1335 	.db #0x26	; 38
      000485 26                    1336 	.db #0x26	; 38
      000486 2B                    1337 	.db #0x2b	; 43
      000487                       1338 _backgroundtiles:
      000487 40                    1339 	.db #0x40	; 64
      000488 38                    1340 	.db #0x38	; 56	'8'
      000489 3A                    1341 	.db #0x3a	; 58
      00048A 44                    1342 	.db #0x44	; 68	'D'
      00048B 7C                    1343 	.db #0x7c	; 124
      00048C 9A                    1344 	.db #0x9a	; 154
      00048D 5E                    1345 	.db #0x5e	; 94
      00048E E9                    1346 	.db #0xe9	; 233
      00048F 7A                    1347 	.db #0x7a	; 122	'z'
      000490 87                    1348 	.db #0x87	; 135
      000491 76                    1349 	.db #0x76	; 118	'v'
      000492 B9                    1350 	.db #0xb9	; 185
      000493 3C                    1351 	.db #0x3c	; 60
      000494 72                    1352 	.db #0x72	; 114	'r'
      000495 00                    1353 	.db #0x00	; 0
      000496 3C                    1354 	.db #0x3c	; 60
      000497 00                    1355 	.db #0x00	; 0
      000498 00                    1356 	.db #0x00	; 0
      000499 00                    1357 	.db #0x00	; 0
      00049A 00                    1358 	.db #0x00	; 0
      00049B 00                    1359 	.db #0x00	; 0
      00049C 00                    1360 	.db #0x00	; 0
      00049D 00                    1361 	.db #0x00	; 0
      00049E 00                    1362 	.db #0x00	; 0
      00049F 00                    1363 	.db #0x00	; 0
      0004A0 00                    1364 	.db #0x00	; 0
      0004A1 00                    1365 	.db #0x00	; 0
      0004A2 00                    1366 	.db #0x00	; 0
      0004A3 00                    1367 	.db #0x00	; 0
      0004A4 00                    1368 	.db #0x00	; 0
      0004A5 00                    1369 	.db #0x00	; 0
      0004A6 00                    1370 	.db #0x00	; 0
      0004A7 00                    1371 	.db #0x00	; 0
      0004A8 0F                    1372 	.db #0x0f	; 15
      0004A9 08                    1373 	.db #0x08	; 8
      0004AA 17                    1374 	.db #0x17	; 23
      0004AB 1C                    1375 	.db #0x1c	; 28
      0004AC 23                    1376 	.db #0x23	; 35
      0004AD 3E                    1377 	.db #0x3e	; 62
      0004AE 41                    1378 	.db #0x41	; 65	'A'
      0004AF 1B                    1379 	.db #0x1b	; 27
      0004B0 64                    1380 	.db #0x64	; 100	'd'
      0004B1 31                    1381 	.db #0x31	; 49	'1'
      0004B2 4E                    1382 	.db #0x4e	; 78	'N'
      0004B3 B1                    1383 	.db #0xb1	; 177
      0004B4 CE                    1384 	.db #0xce	; 206
      0004B5 BB                    1385 	.db #0xbb	; 187
      0004B6 C4                    1386 	.db #0xc4	; 196
      0004B7 00                    1387 	.db #0x00	; 0
      0004B8 F8                    1388 	.db #0xf8	; 248
      0004B9 00                    1389 	.db #0x00	; 0
      0004BA FC                    1390 	.db #0xfc	; 252
      0004BB E0                    1391 	.db #0xe0	; 224
      0004BC 1E                    1392 	.db #0x1e	; 30
      0004BD F0                    1393 	.db #0xf0	; 240
      0004BE 0F                    1394 	.db #0x0f	; 15
      0004BF BE                    1395 	.db #0xbe	; 190
      0004C0 01                    1396 	.db #0x01	; 1
      0004C1 BC                    1397 	.db #0xbc	; 188
      0004C2 02                    1398 	.db #0x02	; 2
      0004C3 CE                    1399 	.db #0xce	; 206
      0004C4 01                    1400 	.db #0x01	; 1
      0004C5 F6                    1401 	.db #0xf6	; 246
      0004C6 61                    1402 	.db #0x61	; 97	'a'
      0004C7 F4                    1403 	.db #0xf4	; 244
      0004C8 02                    1404 	.db #0x02	; 2
      0004C9 94                    1405 	.db #0x94	; 148
      0004CA 62                    1406 	.db #0x62	; 98	'b'
      0004CB E4                    1407 	.db #0xe4	; 228
      0004CC 02                    1408 	.db #0x02	; 2
      0004CD 6C                    1409 	.db #0x6c	; 108	'l'
      0004CE 82                    1410 	.db #0x82	; 130
      0004CF 70                    1411 	.db #0x70	; 112	'p'
      0004D0 8C                    1412 	.db #0x8c	; 140
      0004D1 60                    1413 	.db #0x60	; 96
      0004D2 90                    1414 	.db #0x90	; 144
      0004D3 00                    1415 	.db #0x00	; 0
      0004D4 E0                    1416 	.db #0xe0	; 224
      0004D5 80                    1417 	.db #0x80	; 128
      0004D6 80                    1418 	.db #0x80	; 128
      0004D7 8E                    1419 	.db #0x8e	; 142
      0004D8 F7                    1420 	.db #0xf7	; 247
      0004D9 8F                    1421 	.db #0x8f	; 143
      0004DA F3                    1422 	.db #0xf3	; 243
      0004DB 86                    1423 	.db #0x86	; 134
      0004DC F9                    1424 	.db #0xf9	; 249
      0004DD 42                    1425 	.db #0x42	; 66	'B'
      0004DE 7D                    1426 	.db #0x7d	; 125
      0004DF 80                    1427 	.db #0x80	; 128
      0004E0 FF                    1428 	.db #0xff	; 255
      0004E1 44                    1429 	.db #0x44	; 68	'D'
      0004E2 7F                    1430 	.db #0x7f	; 127
      0004E3 28                    1431 	.db #0x28	; 40
      0004E4 3F                    1432 	.db #0x3f	; 63
      0004E5 07                    1433 	.db #0x07	; 7
      0004E6 07                    1434 	.db #0x07	; 7
      0004E7 00                    1435 	.db #0x00	; 0
      0004E8 00                    1436 	.db #0x00	; 0
      0004E9 08                    1437 	.db #0x08	; 8
      0004EA 00                    1438 	.db #0x00	; 0
      0004EB 08                    1439 	.db #0x08	; 8
      0004EC 00                    1440 	.db #0x00	; 0
      0004ED 1C                    1441 	.db #0x1c	; 28
      0004EE 00                    1442 	.db #0x00	; 0
      0004EF 7F                    1443 	.db #0x7f	; 127
      0004F0 00                    1444 	.db #0x00	; 0
      0004F1 1C                    1445 	.db #0x1c	; 28
      0004F2 00                    1446 	.db #0x00	; 0
      0004F3 08                    1447 	.db #0x08	; 8
      0004F4 00                    1448 	.db #0x00	; 0
      0004F5 08                    1449 	.db #0x08	; 8
      0004F6 00                    1450 	.db #0x00	; 0
      0004F7 00                    1451 	.db #0x00	; 0
      0004F8 00                    1452 	.db #0x00	; 0
      0004F9 00                    1453 	.db #0x00	; 0
      0004FA 00                    1454 	.db #0x00	; 0
      0004FB 00                    1455 	.db #0x00	; 0
      0004FC 00                    1456 	.db #0x00	; 0
      0004FD 10                    1457 	.db #0x10	; 16
      0004FE 00                    1458 	.db #0x00	; 0
      0004FF 00                    1459 	.db #0x00	; 0
      000500 00                    1460 	.db #0x00	; 0
      000501 00                    1461 	.db #0x00	; 0
      000502 00                    1462 	.db #0x00	; 0
      000503 00                    1463 	.db #0x00	; 0
      000504 00                    1464 	.db #0x00	; 0
      000505 00                    1465 	.db #0x00	; 0
      000506 00                    1466 	.db #0x00	; 0
      000507                       1467 _healthblock:
      000507 FE                    1468 	.db #0xfe	; 254
      000508 FE                    1469 	.db #0xfe	; 254
      000509 FE                    1470 	.db #0xfe	; 254
      00050A FE                    1471 	.db #0xfe	; 254
      00050B FE                    1472 	.db #0xfe	; 254
      00050C FE                    1473 	.db #0xfe	; 254
      00050D FE                    1474 	.db #0xfe	; 254
      00050E FE                    1475 	.db #0xfe	; 254
      00050F FE                    1476 	.db #0xfe	; 254
      000510 FE                    1477 	.db #0xfe	; 254
      000511 FE                    1478 	.db #0xfe	; 254
      000512 FE                    1479 	.db #0xfe	; 254
      000513 FE                    1480 	.db #0xfe	; 254
      000514 FE                    1481 	.db #0xfe	; 254
      000515 00                    1482 	.db #0x00	; 0
      000516 00                    1483 	.db #0x00	; 0
      000517                       1484 _enemy1:
      000517 3C                    1485 	.db #0x3c	; 60
      000518 3C                    1486 	.db #0x3c	; 60
      000519 7E                    1487 	.db #0x7e	; 126
      00051A 7E                    1488 	.db #0x7e	; 126
      00051B FF                    1489 	.db #0xff	; 255
      00051C FF                    1490 	.db #0xff	; 255
      00051D FF                    1491 	.db #0xff	; 255
      00051E FF                    1492 	.db #0xff	; 255
      00051F FF                    1493 	.db #0xff	; 255
      000520 FF                    1494 	.db #0xff	; 255
      000521 FF                    1495 	.db #0xff	; 255
      000522 FF                    1496 	.db #0xff	; 255
      000523 7E                    1497 	.db #0x7e	; 126
      000524 7E                    1498 	.db #0x7e	; 126
      000525 3C                    1499 	.db #0x3c	; 60
      000526 3C                    1500 	.db #0x3c	; 60
      000527                       1501 _projectile1:
      000527 3C                    1502 	.db #0x3c	; 60
      000528 3C                    1503 	.db #0x3c	; 60
      000529 7E                    1504 	.db #0x7e	; 126
      00052A 7E                    1505 	.db #0x7e	; 126
      00052B FF                    1506 	.db #0xff	; 255
      00052C FF                    1507 	.db #0xff	; 255
      00052D FF                    1508 	.db #0xff	; 255
      00052E FF                    1509 	.db #0xff	; 255
      00052F FF                    1510 	.db #0xff	; 255
      000530 FF                    1511 	.db #0xff	; 255
      000531 FF                    1512 	.db #0xff	; 255
      000532 FF                    1513 	.db #0xff	; 255
      000533 7E                    1514 	.db #0x7e	; 126
      000534 7E                    1515 	.db #0x7e	; 126
      000535 3C                    1516 	.db #0x3c	; 60
      000536 3C                    1517 	.db #0x3c	; 60
      000537                       1518 _ProjectileTiles:
      000537 24                    1519 	.db #0x24	; 36
      000538 18                    1520 	.db #0x18	; 24
      000539 18                    1521 	.db #0x18	; 24
      00053A 3C                    1522 	.db #0x3c	; 60
      00053B 18                    1523 	.db #0x18	; 24
      00053C 3C                    1524 	.db #0x3c	; 60
      00053D 24                    1525 	.db #0x24	; 36
      00053E 18                    1526 	.db #0x18	; 24
      00053F 00                    1527 	.db #0x00	; 0
      000540 00                    1528 	.db #0x00	; 0
      000541 00                    1529 	.db #0x00	; 0
      000542 00                    1530 	.db #0x00	; 0
      000543 00                    1531 	.db #0x00	; 0
      000544 00                    1532 	.db #0x00	; 0
      000545 00                    1533 	.db #0x00	; 0
      000546 00                    1534 	.db #0x00	; 0
      000547 00                    1535 	.db #0x00	; 0
      000548 00                    1536 	.db #0x00	; 0
      000549 00                    1537 	.db #0x00	; 0
      00054A 00                    1538 	.db #0x00	; 0
      00054B 09                    1539 	.db #0x09	; 9
      00054C 06                    1540 	.db #0x06	; 6
      00054D 06                    1541 	.db #0x06	; 6
      00054E 0F                    1542 	.db #0x0f	; 15
      00054F 06                    1543 	.db #0x06	; 6
      000550 0F                    1544 	.db #0x0f	; 15
      000551 09                    1545 	.db #0x09	; 9
      000552 06                    1546 	.db #0x06	; 6
      000553 00                    1547 	.db #0x00	; 0
      000554 00                    1548 	.db #0x00	; 0
      000555 00                    1549 	.db #0x00	; 0
      000556 00                    1550 	.db #0x00	; 0
      000557 09                    1551 	.db #0x09	; 9
      000558 06                    1552 	.db #0x06	; 6
      000559 06                    1553 	.db #0x06	; 6
      00055A 0F                    1554 	.db #0x0f	; 15
      00055B 06                    1555 	.db #0x06	; 6
      00055C 0F                    1556 	.db #0x0f	; 15
      00055D 09                    1557 	.db #0x09	; 9
      00055E 06                    1558 	.db #0x06	; 6
      00055F 00                    1559 	.db #0x00	; 0
      000560 00                    1560 	.db #0x00	; 0
      000561 00                    1561 	.db #0x00	; 0
      000562 00                    1562 	.db #0x00	; 0
      000563 00                    1563 	.db #0x00	; 0
      000564 00                    1564 	.db #0x00	; 0
      000565 00                    1565 	.db #0x00	; 0
      000566 00                    1566 	.db #0x00	; 0
      000567 99                    1567 	.db #0x99	; 153
      000568 66                    1568 	.db #0x66	; 102	'f'
      000569 66                    1569 	.db #0x66	; 102	'f'
      00056A FF                    1570 	.db #0xff	; 255
      00056B 66                    1571 	.db #0x66	; 102	'f'
      00056C FF                    1572 	.db #0xff	; 255
      00056D 99                    1573 	.db #0x99	; 153
      00056E 66                    1574 	.db #0x66	; 102	'f'
      00056F 00                    1575 	.db #0x00	; 0
      000570 00                    1576 	.db #0x00	; 0
      000571 00                    1577 	.db #0x00	; 0
      000572 00                    1578 	.db #0x00	; 0
      000573 00                    1579 	.db #0x00	; 0
      000574 00                    1580 	.db #0x00	; 0
      000575 00                    1581 	.db #0x00	; 0
      000576 00                    1582 	.db #0x00	; 0
      000577 09                    1583 	.db #0x09	; 9
      000578 06                    1584 	.db #0x06	; 6
      000579 06                    1585 	.db #0x06	; 6
      00057A 0F                    1586 	.db #0x0f	; 15
      00057B 06                    1587 	.db #0x06	; 6
      00057C 0F                    1588 	.db #0x0f	; 15
      00057D 09                    1589 	.db #0x09	; 9
      00057E 06                    1590 	.db #0x06	; 6
      00057F 09                    1591 	.db #0x09	; 9
      000580 06                    1592 	.db #0x06	; 6
      000581 06                    1593 	.db #0x06	; 6
      000582 0F                    1594 	.db #0x0f	; 15
      000583 06                    1595 	.db #0x06	; 6
      000584 0F                    1596 	.db #0x0f	; 15
      000585 09                    1597 	.db #0x09	; 9
      000586 06                    1598 	.db #0x06	; 6
      000587 90                    1599 	.db #0x90	; 144
      000588 60                    1600 	.db #0x60	; 96
      000589 60                    1601 	.db #0x60	; 96
      00058A F0                    1602 	.db #0xf0	; 240
      00058B 60                    1603 	.db #0x60	; 96
      00058C F0                    1604 	.db #0xf0	; 240
      00058D 90                    1605 	.db #0x90	; 144
      00058E 60                    1606 	.db #0x60	; 96
      00058F 09                    1607 	.db #0x09	; 9
      000590 06                    1608 	.db #0x06	; 6
      000591 06                    1609 	.db #0x06	; 6
      000592 0F                    1610 	.db #0x0f	; 15
      000593 06                    1611 	.db #0x06	; 6
      000594 0F                    1612 	.db #0x0f	; 15
      000595 09                    1613 	.db #0x09	; 9
      000596 06                    1614 	.db #0x06	; 6
      000597 18                    1615 	.db #0x18	; 24
      000598 00                    1616 	.db #0x00	; 0
      000599 18                    1617 	.db #0x18	; 24
      00059A 18                    1618 	.db #0x18	; 24
      00059B 18                    1619 	.db #0x18	; 24
      00059C 18                    1620 	.db #0x18	; 24
      00059D 3C                    1621 	.db #0x3c	; 60
      00059E 18                    1622 	.db #0x18	; 24
      00059F 3C                    1623 	.db #0x3c	; 60
      0005A0 18                    1624 	.db #0x18	; 24
      0005A1 3C                    1625 	.db #0x3c	; 60
      0005A2 3C                    1626 	.db #0x3c	; 60
      0005A3 7E                    1627 	.db #0x7e	; 126
      0005A4 3C                    1628 	.db #0x3c	; 60
      0005A5 7E                    1629 	.db #0x7e	; 126
      0005A6 24                    1630 	.db #0x24	; 36
      0005A7 00                    1631 	.db #0x00	; 0
      0005A8 00                    1632 	.db #0x00	; 0
      0005A9 C0                    1633 	.db #0xc0	; 192
      0005AA 00                    1634 	.db #0x00	; 0
      0005AB F8                    1635 	.db #0xf8	; 248
      0005AC E0                    1636 	.db #0xe0	; 224
      0005AD FF                    1637 	.db #0xff	; 255
      0005AE 7E                    1638 	.db #0x7e	; 126
      0005AF FF                    1639 	.db #0xff	; 255
      0005B0 7E                    1640 	.db #0x7e	; 126
      0005B1 F8                    1641 	.db #0xf8	; 248
      0005B2 E0                    1642 	.db #0xe0	; 224
      0005B3 C0                    1643 	.db #0xc0	; 192
      0005B4 00                    1644 	.db #0x00	; 0
      0005B5 00                    1645 	.db #0x00	; 0
      0005B6 00                    1646 	.db #0x00	; 0
      0005B7 06                    1647 	.db #0x06	; 6
      0005B8 00                    1648 	.db #0x00	; 0
      0005B9 0F                    1649 	.db #0x0f	; 15
      0005BA 06                    1650 	.db #0x06	; 6
      0005BB 1F                    1651 	.db #0x1f	; 31
      0005BC 0E                    1652 	.db #0x0e	; 14
      0005BD 7E                    1653 	.db #0x7e	; 126
      0005BE 1C                    1654 	.db #0x1c	; 28
      0005BF FC                    1655 	.db #0xfc	; 252
      0005C0 78                    1656 	.db #0x78	; 120	'x'
      0005C1 F8                    1657 	.db #0xf8	; 248
      0005C2 F0                    1658 	.db #0xf0	; 240
      0005C3 F8                    1659 	.db #0xf8	; 248
      0005C4 70                    1660 	.db #0x70	; 112	'p'
      0005C5 70                    1661 	.db #0x70	; 112	'p'
      0005C6 20                    1662 	.db #0x20	; 32
      0005C7                       1663 _BLANKSIZE:
      0005C7 03                    1664 	.db #0x03	; 3
      0005C8                       1665 _BLANK:
      0005C8 26                    1666 	.db #0x26	; 38
      0005C9 2B                    1667 	.db #0x2b	; 43
      0005CA 2C                    1668 	.db #0x2c	; 44
      0005CB                       1669 _EMPTYSPRITE:
      0005CB 50                    1670 	.db #0x50	; 80	'P'
      0005CC                       1671 _ENEMYCOUNT:
      0005CC 05                    1672 	.db #0x05	; 5
      0005CD                       1673 _xSpawnPositions:
      0005CD 00                    1674 	.db #0x00	; 0
      0005CE 60                    1675 	.db #0x60	; 96
      0005CF B0                    1676 	.db #0xb0	; 176
      0005D0 00                    1677 	.db #0x00	; 0
      0005D1 B0                    1678 	.db #0xb0	; 176
      0005D2 00                    1679 	.db #0x00	; 0
      0005D3 60                    1680 	.db #0x60	; 96
      0005D4 B0                    1681 	.db #0xb0	; 176
      0005D5                       1682 _ySpawnPositions:
      0005D5 00                    1683 	.db #0x00	; 0
      0005D6 00                    1684 	.db #0x00	; 0
      0005D7 00                    1685 	.db #0x00	; 0
      0005D8 5C                    1686 	.db #0x5c	; 92
      0005D9 5C                    1687 	.db #0x5c	; 92
      0005DA A0                    1688 	.db #0xa0	; 160
      0005DB A0                    1689 	.db #0xa0	; 160
      0005DC A0                    1690 	.db #0xa0	; 160
      0005DD                       1691 _PROJECTILECOUNT:
      0005DD 05                    1692 	.db #0x05	; 5
      0005DE                       1693 _PLAYERSIZE:
      0005DE 08                    1694 	.db #0x08	; 8
      0005DF                       1695 _maxHull:
      0005DF 64                    1696 	.db #0x64	;  100	'd'
      0005E0                       1697 _maxShield:
      0005E0 64                    1698 	.db #0x64	;  100	'd'
      0005E1                       1699 _GUNCOUNT:
      0005E1 03                    1700 	.db #0x03	; 3
                                   1701 ;main.c:91: void setHealthBar(uint8_t row, uint8_t hp) {
                                   1702 ;	---------------------------------
                                   1703 ; Function setHealthBar
                                   1704 ; ---------------------------------
      0005E2                       1705 _setHealthBar::
      0005E2 E8 FB                 1706 	add	sp, #-5
                                   1707 ;main.c:92: if (hp >= 80) {
      0005E4 F8 08                 1708 	ldhl	sp,	#8
      0005E6 7E                    1709 	ld	a, (hl)
      0005E7 D6 50                 1710 	sub	a, #0x50
      0005E9 38 31                 1711 	jr	C, 00102$
                                   1712 ;main.c:93: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      0005EB F8 00                 1713 	ldhl	sp,	#0
      0005ED 4D                    1714 	ld	c, l
      0005EE 44                    1715 	ld	b, h
      0005EF 36 50                 1716 	ld	(hl), #0x50
      0005F1 69                    1717 	ld	l, c
                                   1718 ;	spillPairReg hl
                                   1719 ;	spillPairReg hl
      0005F2 60                    1720 	ld	h, b
                                   1721 ;	spillPairReg hl
                                   1722 ;	spillPairReg hl
      0005F3 23                    1723 	inc	hl
      0005F4 36 50                 1724 	ld	(hl), #0x50
      0005F6 69                    1725 	ld	l, c
                                   1726 ;	spillPairReg hl
                                   1727 ;	spillPairReg hl
      0005F7 60                    1728 	ld	h, b
                                   1729 ;	spillPairReg hl
                                   1730 ;	spillPairReg hl
      0005F8 23                    1731 	inc	hl
      0005F9 23                    1732 	inc	hl
      0005FA 36 50                 1733 	ld	(hl), #0x50
      0005FC 69                    1734 	ld	l, c
                                   1735 ;	spillPairReg hl
                                   1736 ;	spillPairReg hl
      0005FD 60                    1737 	ld	h, b
                                   1738 ;	spillPairReg hl
                                   1739 ;	spillPairReg hl
      0005FE 23                    1740 	inc	hl
      0005FF 23                    1741 	inc	hl
      000600 23                    1742 	inc	hl
      000601 36 50                 1743 	ld	(hl), #0x50
      000603 21 04 00              1744 	ld	hl, #0x0004
      000606 09                    1745 	add	hl, bc
      000607 36 50                 1746 	ld	(hl), #0x50
                                   1747 ;main.c:94: set_win_tiles(5,row,5,1,blockmap);
      000609 C5                    1748 	push	bc
      00060A 21 05 01              1749 	ld	hl, #0x105
      00060D E5                    1750 	push	hl
      00060E F8 0B                 1751 	ldhl	sp,	#11
      000610 66                    1752 	ld	h, (hl)
      000611 2E 05                 1753 	ld	l, #0x05
      000613 E5                    1754 	push	hl
      000614 CDr00r00              1755 	call	_set_win_tiles
      000617 E8 06                 1756 	add	sp, #6
                                   1757 ;main.c:95: return;
      000619 C3rF0r06              1758 	jp	00109$
      00061C                       1759 00102$:
                                   1760 ;main.c:97: if (hp >= 60) {
      00061C F8 08                 1761 	ldhl	sp,	#8
      00061E 7E                    1762 	ld	a, (hl)
      00061F D6 3C                 1763 	sub	a, #0x3c
      000621 38 31                 1764 	jr	C, 00104$
                                   1765 ;main.c:98: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      000623 F8 00                 1766 	ldhl	sp,	#0
      000625 4D                    1767 	ld	c, l
      000626 44                    1768 	ld	b, h
      000627 36 50                 1769 	ld	(hl), #0x50
      000629 69                    1770 	ld	l, c
                                   1771 ;	spillPairReg hl
                                   1772 ;	spillPairReg hl
      00062A 60                    1773 	ld	h, b
                                   1774 ;	spillPairReg hl
                                   1775 ;	spillPairReg hl
      00062B 23                    1776 	inc	hl
      00062C 36 50                 1777 	ld	(hl), #0x50
      00062E 69                    1778 	ld	l, c
                                   1779 ;	spillPairReg hl
                                   1780 ;	spillPairReg hl
      00062F 60                    1781 	ld	h, b
                                   1782 ;	spillPairReg hl
                                   1783 ;	spillPairReg hl
      000630 23                    1784 	inc	hl
      000631 23                    1785 	inc	hl
      000632 36 50                 1786 	ld	(hl), #0x50
      000634 69                    1787 	ld	l, c
                                   1788 ;	spillPairReg hl
                                   1789 ;	spillPairReg hl
      000635 60                    1790 	ld	h, b
                                   1791 ;	spillPairReg hl
                                   1792 ;	spillPairReg hl
      000636 23                    1793 	inc	hl
      000637 23                    1794 	inc	hl
      000638 23                    1795 	inc	hl
      000639 36 50                 1796 	ld	(hl), #0x50
      00063B 21 04 00              1797 	ld	hl, #0x0004
      00063E 09                    1798 	add	hl, bc
      00063F 36 00                 1799 	ld	(hl), #0x00
                                   1800 ;main.c:99: set_win_tiles(5,row,5,1,blockmap);
      000641 C5                    1801 	push	bc
      000642 21 05 01              1802 	ld	hl, #0x105
      000645 E5                    1803 	push	hl
      000646 F8 0B                 1804 	ldhl	sp,	#11
      000648 66                    1805 	ld	h, (hl)
      000649 2E 05                 1806 	ld	l, #0x05
      00064B E5                    1807 	push	hl
      00064C CDr00r00              1808 	call	_set_win_tiles
      00064F E8 06                 1809 	add	sp, #6
                                   1810 ;main.c:100: return;
      000651 C3rF0r06              1811 	jp	00109$
      000654                       1812 00104$:
                                   1813 ;main.c:102: if (hp >= 40) {
      000654 F8 08                 1814 	ldhl	sp,	#8
      000656 7E                    1815 	ld	a, (hl)
      000657 D6 28                 1816 	sub	a, #0x28
      000659 38 30                 1817 	jr	C, 00106$
                                   1818 ;main.c:103: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      00065B F8 00                 1819 	ldhl	sp,	#0
      00065D 4D                    1820 	ld	c, l
      00065E 44                    1821 	ld	b, h
      00065F 36 50                 1822 	ld	(hl), #0x50
      000661 69                    1823 	ld	l, c
                                   1824 ;	spillPairReg hl
                                   1825 ;	spillPairReg hl
      000662 60                    1826 	ld	h, b
                                   1827 ;	spillPairReg hl
                                   1828 ;	spillPairReg hl
      000663 23                    1829 	inc	hl
      000664 36 50                 1830 	ld	(hl), #0x50
      000666 69                    1831 	ld	l, c
                                   1832 ;	spillPairReg hl
                                   1833 ;	spillPairReg hl
      000667 60                    1834 	ld	h, b
                                   1835 ;	spillPairReg hl
                                   1836 ;	spillPairReg hl
      000668 23                    1837 	inc	hl
      000669 23                    1838 	inc	hl
      00066A 36 50                 1839 	ld	(hl), #0x50
      00066C 59                    1840 	ld	e, c
      00066D 50                    1841 	ld	d, b
      00066E 13                    1842 	inc	de
      00066F 13                    1843 	inc	de
      000670 13                    1844 	inc	de
      000671 AF                    1845 	xor	a, a
      000672 12                    1846 	ld	(de), a
      000673 21 04 00              1847 	ld	hl, #0x0004
      000676 09                    1848 	add	hl, bc
      000677 36 00                 1849 	ld	(hl), #0x00
                                   1850 ;main.c:104: set_win_tiles(5,row,5,1,blockmap);
      000679 C5                    1851 	push	bc
      00067A 21 05 01              1852 	ld	hl, #0x105
      00067D E5                    1853 	push	hl
      00067E F8 0B                 1854 	ldhl	sp,	#11
      000680 66                    1855 	ld	h, (hl)
      000681 2E 05                 1856 	ld	l, #0x05
      000683 E5                    1857 	push	hl
      000684 CDr00r00              1858 	call	_set_win_tiles
      000687 E8 06                 1859 	add	sp, #6
                                   1860 ;main.c:105: return;
      000689 18 65                 1861 	jr	00109$
      00068B                       1862 00106$:
                                   1863 ;main.c:107: if (hp >= 20) {
      00068B F8 08                 1864 	ldhl	sp,	#8
      00068D 7E                    1865 	ld	a, (hl)
      00068E D6 14                 1866 	sub	a, #0x14
      000690 38 30                 1867 	jr	C, 00108$
                                   1868 ;main.c:108: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000692 F8 00                 1869 	ldhl	sp,	#0
      000694 4D                    1870 	ld	c, l
      000695 44                    1871 	ld	b, h
      000696 36 50                 1872 	ld	(hl), #0x50
      000698 69                    1873 	ld	l, c
                                   1874 ;	spillPairReg hl
                                   1875 ;	spillPairReg hl
      000699 60                    1876 	ld	h, b
                                   1877 ;	spillPairReg hl
                                   1878 ;	spillPairReg hl
      00069A 23                    1879 	inc	hl
      00069B 36 50                 1880 	ld	(hl), #0x50
      00069D 59                    1881 	ld	e, c
      00069E 50                    1882 	ld	d, b
      00069F 13                    1883 	inc	de
      0006A0 13                    1884 	inc	de
      0006A1 AF                    1885 	xor	a, a
      0006A2 12                    1886 	ld	(de), a
      0006A3 59                    1887 	ld	e, c
      0006A4 50                    1888 	ld	d, b
      0006A5 13                    1889 	inc	de
      0006A6 13                    1890 	inc	de
      0006A7 13                    1891 	inc	de
      0006A8 AF                    1892 	xor	a, a
      0006A9 12                    1893 	ld	(de), a
      0006AA 21 04 00              1894 	ld	hl, #0x0004
      0006AD 09                    1895 	add	hl, bc
      0006AE 36 00                 1896 	ld	(hl), #0x00
                                   1897 ;main.c:109: set_win_tiles(5,row,5,1,blockmap);
      0006B0 C5                    1898 	push	bc
      0006B1 21 05 01              1899 	ld	hl, #0x105
      0006B4 E5                    1900 	push	hl
      0006B5 F8 0B                 1901 	ldhl	sp,	#11
      0006B7 66                    1902 	ld	h, (hl)
      0006B8 2E 05                 1903 	ld	l, #0x05
      0006BA E5                    1904 	push	hl
      0006BB CDr00r00              1905 	call	_set_win_tiles
      0006BE E8 06                 1906 	add	sp, #6
                                   1907 ;main.c:110: return;
      0006C0 18 2E                 1908 	jr	00109$
      0006C2                       1909 00108$:
                                   1910 ;main.c:112: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      0006C2 F8 00                 1911 	ldhl	sp,	#0
      0006C4 4D                    1912 	ld	c, l
      0006C5 44                    1913 	ld	b, h
      0006C6 36 50                 1914 	ld	(hl), #0x50
      0006C8 59                    1915 	ld	e, c
      0006C9 50                    1916 	ld	d, b
      0006CA 13                    1917 	inc	de
      0006CB AF                    1918 	xor	a, a
      0006CC 12                    1919 	ld	(de), a
      0006CD 59                    1920 	ld	e, c
      0006CE 50                    1921 	ld	d, b
      0006CF 13                    1922 	inc	de
      0006D0 13                    1923 	inc	de
      0006D1 AF                    1924 	xor	a, a
      0006D2 12                    1925 	ld	(de), a
      0006D3 59                    1926 	ld	e, c
      0006D4 50                    1927 	ld	d, b
      0006D5 13                    1928 	inc	de
      0006D6 13                    1929 	inc	de
      0006D7 13                    1930 	inc	de
      0006D8 AF                    1931 	xor	a, a
      0006D9 12                    1932 	ld	(de), a
      0006DA 21 04 00              1933 	ld	hl, #0x0004
      0006DD 09                    1934 	add	hl, bc
      0006DE 36 00                 1935 	ld	(hl), #0x00
                                   1936 ;main.c:113: set_win_tiles(5,row,5,1,blockmap);
      0006E0 C5                    1937 	push	bc
      0006E1 21 05 01              1938 	ld	hl, #0x105
      0006E4 E5                    1939 	push	hl
      0006E5 F8 0B                 1940 	ldhl	sp,	#11
      0006E7 66                    1941 	ld	h, (hl)
      0006E8 2E 05                 1942 	ld	l, #0x05
      0006EA E5                    1943 	push	hl
      0006EB CDr00r00              1944 	call	_set_win_tiles
      0006EE E8 06                 1945 	add	sp, #6
                                   1946 ;main.c:114: return;
      0006F0                       1947 00109$:
                                   1948 ;main.c:116: }
      0006F0 E8 05                 1949 	add	sp, #5
      0006F2 C9                    1950 	ret
                                   1951 ;main.c:118: void updateDirection() {
                                   1952 ;	---------------------------------
                                   1953 ; Function updateDirection
                                   1954 ; ---------------------------------
      0006F3                       1955 _updateDirection::
      0006F3 E8 FC                 1956 	add	sp, #-4
                                   1957 ;main.c:122: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      0006F5 21r87r00              1958 	ld	hl, #_joydata
      0006F8 5E                    1959 	ld	e, (hl)
      0006F9 7B                    1960 	ld	a, e
      0006FA E6 01                 1961 	and	a, #0x01
      0006FC F8 00                 1962 	ldhl	sp,	#0
      0006FE 22                    1963 	ld	(hl+), a
      0006FF AF                    1964 	xor	a, a
      000700 22                    1965 	ld	(hl+), a
      000701 7B                    1966 	ld	a, e
      000702 E6 04                 1967 	and	a, #0x04
      000704 22                    1968 	ld	(hl+), a
      000705 AF                    1969 	xor	a, a
      000706 32                    1970 	ld	(hl-), a
      000707 2B                    1971 	dec	hl
      000708 7B                    1972 	ld	a, e
      000709 E6 08                 1973 	and	a, #0x08
      00070B 4F                    1974 	ld	c, a
      00070C 06 00                 1975 	ld	b, #0x00
      00070E 3A                    1976 	ld	a, (hl-)
      00070F B6                    1977 	or	a, (hl)
      000710 28 14                 1978 	jr	Z, 00102$
      000712 F8 03                 1979 	ldhl	sp,	#3
      000714 3A                    1980 	ld	a, (hl-)
      000715 B6                    1981 	or	a, (hl)
      000716 20 0E                 1982 	jr	NZ, 00102$
      000718 78                    1983 	ld	a, b
      000719 B1                    1984 	or	a, c
      00071A 20 0A                 1985 	jr	NZ, 00102$
                                   1986 ;main.c:123: xDir = 1;
      00071C 21r3Br00              1987 	ld	hl, #_xDir
      00071F 36 01                 1988 	ld	(hl), #0x01
                                   1989 ;main.c:124: yDir = 0;
      000721 21r3Cr00              1990 	ld	hl, #_yDir
      000724 36 00                 1991 	ld	(hl), #0x00
      000726                       1992 00102$:
                                   1993 ;main.c:126: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000726 7B                    1994 	ld	a, e
      000727 E6 02                 1995 	and	a, #0x02
      000729 5F                    1996 	ld	e, a
      00072A 16 00                 1997 	ld	d, #0x00
      00072C 7A                    1998 	ld	a, d
      00072D B3                    1999 	or	a, e
      00072E 28 14                 2000 	jr	Z, 00106$
      000730 F8 03                 2001 	ldhl	sp,	#3
      000732 3A                    2002 	ld	a, (hl-)
      000733 B6                    2003 	or	a, (hl)
      000734 20 0E                 2004 	jr	NZ, 00106$
      000736 78                    2005 	ld	a, b
      000737 B1                    2006 	or	a, c
      000738 20 0A                 2007 	jr	NZ, 00106$
                                   2008 ;main.c:127: xDir = -1;
      00073A 21r3Br00              2009 	ld	hl, #_xDir
      00073D 36 FF                 2010 	ld	(hl), #0xff
                                   2011 ;main.c:128: yDir = 0;
      00073F 21r3Cr00              2012 	ld	hl, #_yDir
      000742 36 00                 2013 	ld	(hl), #0x00
      000744                       2014 00106$:
                                   2015 ;main.c:130: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000744 F8 03                 2016 	ldhl	sp,	#3
      000746 3A                    2017 	ld	a, (hl-)
      000747 B6                    2018 	or	a, (hl)
      000748 28 13                 2019 	jr	Z, 00110$
      00074A 7A                    2020 	ld	a, d
      00074B B3                    2021 	or	a, e
      00074C 20 0F                 2022 	jr	NZ, 00110$
      00074E 2B                    2023 	dec	hl
      00074F 3A                    2024 	ld	a, (hl-)
      000750 B6                    2025 	or	a, (hl)
      000751 20 0A                 2026 	jr	NZ, 00110$
                                   2027 ;main.c:131: xDir = 0;
      000753 21r3Br00              2028 	ld	hl, #_xDir
      000756 36 00                 2029 	ld	(hl), #0x00
                                   2030 ;main.c:132: yDir = -1;
      000758 21r3Cr00              2031 	ld	hl, #_yDir
      00075B 36 FF                 2032 	ld	(hl), #0xff
      00075D                       2033 00110$:
                                   2034 ;main.c:134: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      00075D 78                    2035 	ld	a, b
      00075E B1                    2036 	or	a, c
      00075F 28 14                 2037 	jr	Z, 00114$
      000761 7A                    2038 	ld	a, d
      000762 B3                    2039 	or	a, e
      000763 20 10                 2040 	jr	NZ, 00114$
      000765 F8 01                 2041 	ldhl	sp,	#1
      000767 3A                    2042 	ld	a, (hl-)
      000768 B6                    2043 	or	a, (hl)
      000769 20 0A                 2044 	jr	NZ, 00114$
                                   2045 ;main.c:135: xDir = 0;
      00076B 21r3Br00              2046 	ld	hl, #_xDir
      00076E 36 00                 2047 	ld	(hl), #0x00
                                   2048 ;main.c:136: yDir = 1;
      000770 21r3Cr00              2049 	ld	hl, #_yDir
      000773 36 01                 2050 	ld	(hl), #0x01
      000775                       2051 00114$:
                                   2052 ;main.c:140: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000775 F8 03                 2053 	ldhl	sp,	#3
      000777 3A                    2054 	ld	a, (hl-)
      000778 B6                    2055 	or	a, (hl)
      000779 28 0F                 2056 	jr	Z, 00118$
      00077B 2B                    2057 	dec	hl
      00077C 3A                    2058 	ld	a, (hl-)
      00077D B6                    2059 	or	a, (hl)
      00077E 28 0A                 2060 	jr	Z, 00118$
                                   2061 ;main.c:141: xDir = 1;
      000780 21r3Br00              2062 	ld	hl, #_xDir
      000783 36 01                 2063 	ld	(hl), #0x01
                                   2064 ;main.c:142: yDir = -1;
      000785 21r3Cr00              2065 	ld	hl, #_yDir
      000788 36 FF                 2066 	ld	(hl), #0xff
      00078A                       2067 00118$:
                                   2068 ;main.c:144: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      00078A F8 03                 2069 	ldhl	sp,	#3
      00078C 3A                    2070 	ld	a, (hl-)
      00078D B6                    2071 	or	a, (hl)
      00078E 28 0E                 2072 	jr	Z, 00121$
      000790 7A                    2073 	ld	a, d
      000791 B3                    2074 	or	a, e
      000792 28 0A                 2075 	jr	Z, 00121$
                                   2076 ;main.c:145: xDir = -1;
      000794 21r3Br00              2077 	ld	hl, #_xDir
      000797 36 FF                 2078 	ld	(hl), #0xff
                                   2079 ;main.c:146: yDir = -1;
      000799 21r3Cr00              2080 	ld	hl, #_yDir
      00079C 36 FF                 2081 	ld	(hl), #0xff
      00079E                       2082 00121$:
                                   2083 ;main.c:148: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      00079E 78                    2084 	ld	a, b
      00079F B1                    2085 	or	a, c
      0007A0 28 10                 2086 	jr	Z, 00124$
      0007A2 F8 01                 2087 	ldhl	sp,	#1
      0007A4 3A                    2088 	ld	a, (hl-)
      0007A5 B6                    2089 	or	a, (hl)
      0007A6 28 0A                 2090 	jr	Z, 00124$
                                   2091 ;main.c:149: xDir = 1;
      0007A8 21r3Br00              2092 	ld	hl, #_xDir
      0007AB 36 01                 2093 	ld	(hl), #0x01
                                   2094 ;main.c:150: yDir = 1;
      0007AD 21r3Cr00              2095 	ld	hl, #_yDir
      0007B0 36 01                 2096 	ld	(hl), #0x01
      0007B2                       2097 00124$:
                                   2098 ;main.c:152: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      0007B2 78                    2099 	ld	a, b
      0007B3 B1                    2100 	or	a, c
      0007B4 28 0E                 2101 	jr	Z, 00127$
      0007B6 7A                    2102 	ld	a, d
      0007B7 B3                    2103 	or	a, e
      0007B8 28 0A                 2104 	jr	Z, 00127$
                                   2105 ;main.c:153: xDir = -1;
      0007BA 21r3Br00              2106 	ld	hl, #_xDir
      0007BD 36 FF                 2107 	ld	(hl), #0xff
                                   2108 ;main.c:154: yDir = 1;
      0007BF 21r3Cr00              2109 	ld	hl, #_yDir
      0007C2 36 01                 2110 	ld	(hl), #0x01
      0007C4                       2111 00127$:
                                   2112 ;main.c:159: if (xDir == 0 && yDir == 0) {
      0007C4 FAr3Br00              2113 	ld	a, (#_xDir)
      0007C7 B7                    2114 	or	a, a
      0007C8 20 07                 2115 	jr	NZ, 00130$
      0007CA FAr3Cr00              2116 	ld	a, (#_yDir)
      0007CD B7                    2117 	or	a, a
                                   2118 ;main.c:160: return;
      0007CE CAr7Fr08              2119 	jp	Z,00157$
      0007D1                       2120 00130$:
                                   2121 ;main.c:163: uint8_t direction = 0;
      0007D1 0E 00                 2122 	ld	c, #0x00
                                   2123 ;main.c:165: if (xDir == 0 && yDir < 0) {
      0007D3 FAr3Cr00              2124 	ld	a, (#_yDir)
      0007D6 07                    2125 	rlca
      0007D7 E6 01                 2126 	and	a,#0x01
      0007D9 F8 02                 2127 	ldhl	sp,	#2
      0007DB 77                    2128 	ld	(hl), a
      0007DC FAr3Br00              2129 	ld	a, (#_xDir)
      0007DF B7                    2130 	or	a, a
      0007E0 20 08                 2131 	jr	NZ, 00133$
      0007E2 F8 02                 2132 	ldhl	sp,	#2
      0007E4 7E                    2133 	ld	a, (hl)
      0007E5 B7                    2134 	or	a, a
      0007E6 28 02                 2135 	jr	Z, 00133$
                                   2136 ;main.c:166: direction = 0;
      0007E8 0E 00                 2137 	ld	c, #0x00
      0007EA                       2138 00133$:
                                   2139 ;main.c:168: if (xDir > 0 && yDir < 0) {
      0007EA 21r3Br00              2140 	ld	hl, #_xDir
      0007ED 5E                    2141 	ld	e, (hl)
      0007EE AF                    2142 	xor	a, a
      0007EF 57                    2143 	ld	d, a
      0007F0 96                    2144 	sub	a, (hl)
      0007F1 CB 7B                 2145 	bit	7, e
      0007F3 28 07                 2146 	jr	Z, 00349$
      0007F5 CB 7A                 2147 	bit	7, d
      0007F7 20 08                 2148 	jr	NZ, 00350$
      0007F9 BF                    2149 	cp	a, a
      0007FA 18 05                 2150 	jr	00350$
      0007FC                       2151 00349$:
      0007FC CB 7A                 2152 	bit	7, d
      0007FE 28 01                 2153 	jr	Z, 00350$
      000800 37                    2154 	scf
      000801                       2155 00350$:
      000801 3E 00                 2156 	ld	a, #0x00
      000803 17                    2157 	rla
      000804 47                    2158 	ld	b, a
      000805 B7                    2159 	or	a, a
      000806 28 08                 2160 	jr	Z, 00136$
      000808 F8 02                 2161 	ldhl	sp,	#2
      00080A 7E                    2162 	ld	a, (hl)
      00080B B7                    2163 	or	a, a
      00080C 28 02                 2164 	jr	Z, 00136$
                                   2165 ;main.c:169: direction = 1;
      00080E 0E 01                 2166 	ld	c, #0x01
      000810                       2167 00136$:
                                   2168 ;main.c:171: if (xDir > 0 && yDir == 0) {
      000810 78                    2169 	ld	a, b
      000811 B7                    2170 	or	a, a
      000812 28 08                 2171 	jr	Z, 00139$
      000814 FAr3Cr00              2172 	ld	a, (#_yDir)
      000817 B7                    2173 	or	a, a
      000818 20 02                 2174 	jr	NZ, 00139$
                                   2175 ;main.c:172: direction = 2;
      00081A 0E 02                 2176 	ld	c, #0x02
      00081C                       2177 00139$:
                                   2178 ;main.c:174: if (xDir > 0 && yDir > 0) {
      00081C 21r3Cr00              2179 	ld	hl, #_yDir
      00081F 5E                    2180 	ld	e, (hl)
      000820 AF                    2181 	xor	a, a
      000821 57                    2182 	ld	d, a
      000822 96                    2183 	sub	a, (hl)
      000823 CB 7B                 2184 	bit	7, e
      000825 28 07                 2185 	jr	Z, 00351$
      000827 CB 7A                 2186 	bit	7, d
      000829 20 08                 2187 	jr	NZ, 00352$
      00082B BF                    2188 	cp	a, a
      00082C 18 05                 2189 	jr	00352$
      00082E                       2190 00351$:
      00082E CB 7A                 2191 	bit	7, d
      000830 28 01                 2192 	jr	Z, 00352$
      000832 37                    2193 	scf
      000833                       2194 00352$:
      000833 3E 00                 2195 	ld	a, #0x00
      000835 17                    2196 	rla
      000836 F8 03                 2197 	ldhl	sp,	#3
      000838 77                    2198 	ld	(hl), a
      000839 78                    2199 	ld	a, b
      00083A B7                    2200 	or	a, a
      00083B 28 06                 2201 	jr	Z, 00142$
      00083D 7E                    2202 	ld	a, (hl)
      00083E B7                    2203 	or	a, a
      00083F 28 02                 2204 	jr	Z, 00142$
                                   2205 ;main.c:175: direction = 3;
      000841 0E 03                 2206 	ld	c, #0x03
      000843                       2207 00142$:
                                   2208 ;main.c:177: if (xDir == 0 && yDir > 0) {
      000843 FAr3Br00              2209 	ld	a, (#_xDir)
      000846 B7                    2210 	or	a, a
      000847 20 08                 2211 	jr	NZ, 00145$
      000849 F8 03                 2212 	ldhl	sp,	#3
      00084B 7E                    2213 	ld	a, (hl)
      00084C B7                    2214 	or	a, a
      00084D 28 02                 2215 	jr	Z, 00145$
                                   2216 ;main.c:178: direction = 4;
      00084F 0E 04                 2217 	ld	c, #0x04
      000851                       2218 00145$:
                                   2219 ;main.c:180: if (xDir < 0 && yDir > 0) {
      000851 FAr3Br00              2220 	ld	a, (#_xDir)
      000854 07                    2221 	rlca
      000855 E6 01                 2222 	and	a,#0x01
      000857 47                    2223 	ld	b, a
      000858 B7                    2224 	or	a, a
      000859 28 08                 2225 	jr	Z, 00148$
      00085B F8 03                 2226 	ldhl	sp,	#3
      00085D 7E                    2227 	ld	a, (hl)
      00085E B7                    2228 	or	a, a
      00085F 28 02                 2229 	jr	Z, 00148$
                                   2230 ;main.c:181: direction = 5;
      000861 0E 05                 2231 	ld	c, #0x05
      000863                       2232 00148$:
                                   2233 ;main.c:183: if (xDir < 0 && yDir == 0) {
      000863 78                    2234 	ld	a, b
      000864 B7                    2235 	or	a, a
      000865 28 08                 2236 	jr	Z, 00151$
      000867 FAr3Cr00              2237 	ld	a, (#_yDir)
      00086A B7                    2238 	or	a, a
      00086B 20 02                 2239 	jr	NZ, 00151$
                                   2240 ;main.c:184: direction = 6;
      00086D 0E 06                 2241 	ld	c, #0x06
      00086F                       2242 00151$:
                                   2243 ;main.c:186: if (xDir < 0 && yDir < 0) {
      00086F 78                    2244 	ld	a, b
      000870 B7                    2245 	or	a, a
      000871 28 08                 2246 	jr	Z, 00154$
      000873 F8 02                 2247 	ldhl	sp,	#2
      000875 7E                    2248 	ld	a, (hl)
      000876 B7                    2249 	or	a, a
      000877 28 02                 2250 	jr	Z, 00154$
                                   2251 ;main.c:187: direction = 7;
      000879 0E 07                 2252 	ld	c, #0x07
      00087B                       2253 00154$:
                                   2254 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00087B 21r02r00              2255 	ld	hl, #(_shadow_OAM + 2)
      00087E 71                    2256 	ld	(hl), c
                                   2257 ;main.c:190: set_sprite_tile(0, direction);
      00087F                       2258 00157$:
                                   2259 ;main.c:191: }
      00087F E8 04                 2260 	add	sp, #4
      000881 C9                    2261 	ret
                                   2262 ;main.c:220: void playSound(uint8_t type) {
                                   2263 ;	---------------------------------
                                   2264 ; Function playSound
                                   2265 ; ---------------------------------
      000882                       2266 _playSound::
                                   2267 ;main.c:221: if (type == 20) { //singlegun
      000882 F8 02                 2268 	ldhl	sp,	#2
      000884 7E                    2269 	ld	a, (hl)
      000885 D6 14                 2270 	sub	a, #0x14
      000887 20 13                 2271 	jr	NZ, 00102$
                                   2272 ;main.c:222: NR10_REG = 0x00;
      000889 AF                    2273 	xor	a, a
      00088A E0r00                 2274 	ldh	(_NR10_REG + 0), a
                                   2275 ;main.c:223: NR11_REG = 0x81;
      00088C 3E 81                 2276 	ld	a, #0x81
      00088E E0r00                 2277 	ldh	(_NR11_REG + 0), a
                                   2278 ;main.c:224: NR12_REG = 0x43;
      000890 3E 43                 2279 	ld	a, #0x43
      000892 E0r00                 2280 	ldh	(_NR12_REG + 0), a
                                   2281 ;main.c:225: NR13_REG = 0X00;//0x6D;
      000894 AF                    2282 	xor	a, a
      000895 E0r00                 2283 	ldh	(_NR13_REG + 0), a
                                   2284 ;main.c:226: NR14_REG = 0x86;
      000897 3E 86                 2285 	ld	a, #0x86
      000899 E0r00                 2286 	ldh	(_NR14_REG + 0), a
                                   2287 ;main.c:227: return;
      00089B C9                    2288 	ret
      00089C                       2289 00102$:
                                   2290 ;main.c:229: if (type == 23) {
      00089C F8 02                 2291 	ldhl	sp,	#2
      00089E 7E                    2292 	ld	a, (hl)
      00089F D6 17                 2293 	sub	a, #0x17
      0008A1 20 12                 2294 	jr	NZ, 00104$
                                   2295 ;main.c:230: NR10_REG = 0x00;
      0008A3 AF                    2296 	xor	a, a
      0008A4 E0r00                 2297 	ldh	(_NR10_REG + 0), a
                                   2298 ;main.c:231: NR11_REG = 0x81;
      0008A6 3E 81                 2299 	ld	a, #0x81
      0008A8 E0r00                 2300 	ldh	(_NR11_REG + 0), a
                                   2301 ;main.c:232: NR12_REG = 0x53;
      0008AA 3E 53                 2302 	ld	a, #0x53
      0008AC E0r00                 2303 	ldh	(_NR12_REG + 0), a
                                   2304 ;main.c:233: NR13_REG = 0X00;//0x6D;
      0008AE AF                    2305 	xor	a, a
      0008AF E0r00                 2306 	ldh	(_NR13_REG + 0), a
                                   2307 ;main.c:234: NR14_REG = 0x86;
      0008B1 3E 86                 2308 	ld	a, #0x86
      0008B3 E0r00                 2309 	ldh	(_NR14_REG + 0), a
      0008B5                       2310 00104$:
                                   2311 ;main.c:236: if (type == 26) {
      0008B5 F8 02                 2312 	ldhl	sp,	#2
      0008B7 7E                    2313 	ld	a, (hl)
      0008B8 D6 1A                 2314 	sub	a, #0x1a
      0008BA 20 13                 2315 	jr	NZ, 00106$
                                   2316 ;main.c:237: NR10_REG = 0x00;
      0008BC AF                    2317 	xor	a, a
      0008BD E0r00                 2318 	ldh	(_NR10_REG + 0), a
                                   2319 ;main.c:238: NR11_REG = 0x89;
      0008BF 3E 89                 2320 	ld	a, #0x89
      0008C1 E0r00                 2321 	ldh	(_NR11_REG + 0), a
                                   2322 ;main.c:239: NR12_REG = 0x55;
      0008C3 3E 55                 2323 	ld	a, #0x55
      0008C5 E0r00                 2324 	ldh	(_NR12_REG + 0), a
                                   2325 ;main.c:240: NR13_REG = 0x70;//0Xbe;//0x6D;
      0008C7 3E 70                 2326 	ld	a, #0x70
      0008C9 E0r00                 2327 	ldh	(_NR13_REG + 0), a
                                   2328 ;main.c:241: NR14_REG = 0x84;
      0008CB 3E 84                 2329 	ld	a, #0x84
      0008CD E0r00                 2330 	ldh	(_NR14_REG + 0), a
      0008CF                       2331 00106$:
                                   2332 ;main.c:243: if (type == 0) {  // explosion
      0008CF F8 02                 2333 	ldhl	sp,	#2
      0008D1 7E                    2334 	ld	a, (hl)
      0008D2 B7                    2335 	or	a, a
      0008D3 C0                    2336 	ret	NZ
                                   2337 ;main.c:244: NR41_REG = 0x20;  
      0008D4 3E 20                 2338 	ld	a, #0x20
      0008D6 E0r00                 2339 	ldh	(_NR41_REG + 0), a
                                   2340 ;main.c:245: NR42_REG = 0xa2;//0xa3;  
      0008D8 3E A2                 2341 	ld	a, #0xa2
      0008DA E0r00                 2342 	ldh	(_NR42_REG + 0), a
                                   2343 ;main.c:246: NR43_REG = 0x57;  
      0008DC 3E 57                 2344 	ld	a, #0x57
      0008DE E0r00                 2345 	ldh	(_NR43_REG + 0), a
                                   2346 ;main.c:247: NR44_REG = 0x80;  
      0008E0 3E 80                 2347 	ld	a, #0x80
      0008E2 E0r00                 2348 	ldh	(_NR44_REG + 0), a
                                   2349 ;main.c:253: }
      0008E4 C9                    2350 	ret
                                   2351 ;main.c:256: void updateEnemyPositions() {
                                   2352 ;	---------------------------------
                                   2353 ; Function updateEnemyPositions
                                   2354 ; ---------------------------------
      0008E5                       2355 _updateEnemyPositions::
      0008E5 E8 F0                 2356 	add	sp, #-16
                                   2357 ;main.c:258: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0008E7 F8 0F                 2358 	ldhl	sp,	#15
      0008E9 36 00                 2359 	ld	(hl), #0x00
      0008EB                       2360 00140$:
      0008EB 21rCCr05              2361 	ld	hl, #_ENEMYCOUNT
      0008EE 4E                    2362 	ld	c, (hl)
      0008EF F8 0F                 2363 	ldhl	sp,	#15
      0008F1 7E                    2364 	ld	a, (hl)
      0008F2 91                    2365 	sub	a, c
      0008F3 D2r0Cr0D              2366 	jp	NC, 00117$
                                   2367 ;main.c:260: enemies[i].x -= xOverflow;
      0008F6 7E                    2368 	ld	a, (hl)
      0008F7 16 00                 2369 	ld	d, #0x00
      0008F9 87                    2370 	add	a, a
      0008FA CB 12                 2371 	rl	d
      0008FC 87                    2372 	add	a, a
      0008FD CB 12                 2373 	rl	d
      0008FF 87                    2374 	add	a, a
      000900 CB 12                 2375 	rl	d
      000902 87                    2376 	add	a, a
      000903 CB 12                 2377 	rl	d
                                   2378 ;main.c:270: if (enemies[i].y < playerDrawY) {
      000905 5F                    2379 	ld	e, a
      000906 21r00r00              2380 	ld	hl, #_enemies
      000909 19                    2381 	add	hl, de
      00090A E5                    2382 	push	hl
      00090B 7D                    2383 	ld	a, l
      00090C F8 06                 2384 	ldhl	sp,	#6
      00090E 77                    2385 	ld	(hl), a
      00090F E1                    2386 	pop	hl
      000910 7C                    2387 	ld	a, h
      000911 F8 05                 2388 	ldhl	sp,	#5
                                   2389 ;main.c:260: enemies[i].x -= xOverflow;
      000913 32                    2390 	ld	(hl-), a
      000914 2A                    2391 	ld	a, (hl+)
      000915 5F                    2392 	ld	e, a
      000916 56                    2393 	ld	d, (hl)
      000917 1A                    2394 	ld	a, (de)
      000918 47                    2395 	ld	b, a
      000919 13                    2396 	inc	de
      00091A 1A                    2397 	ld	a, (de)
      00091B 4F                    2398 	ld	c, a
      00091C 58                    2399 	ld	e, b
      00091D 51                    2400 	ld	d, c
      00091E 21r49r00              2401 	ld	hl, #_xOverflow
      000921 2A                    2402 	ld	a,	(hl+)
      000922 66                    2403 	ld	h, (hl)
      000923 6F                    2404 	ld	l, a
      000924 7B                    2405 	ld	a, e
      000925 95                    2406 	sub	a, l
      000926 5F                    2407 	ld	e, a
      000927 7A                    2408 	ld	a, d
      000928 9C                    2409 	sbc	a, h
      000929 F8 0C                 2410 	ldhl	sp,	#12
      00092B 32                    2411 	ld	(hl-), a
      00092C 73                    2412 	ld	(hl), e
      00092D F8 04                 2413 	ldhl	sp,#4
      00092F 2A                    2414 	ld	a, (hl+)
      000930 5F                    2415 	ld	e, a
      000931 56                    2416 	ld	d, (hl)
      000932 F8 0B                 2417 	ldhl	sp,	#11
      000934 2A                    2418 	ld	a, (hl+)
      000935 12                    2419 	ld	(de), a
      000936 13                    2420 	inc	de
      000937 7E                    2421 	ld	a, (hl)
      000938 12                    2422 	ld	(de), a
                                   2423 ;main.c:261: enemies[i].y -= yOverflow;
      000939 F8 04                 2424 	ldhl	sp,#4
      00093B 2A                    2425 	ld	a, (hl+)
      00093C 5F                    2426 	ld	e, a
      00093D 56                    2427 	ld	d, (hl)
      00093E 21 02 00              2428 	ld	hl, #0x0002
      000941 19                    2429 	add	hl, de
      000942 E5                    2430 	push	hl
      000943 7D                    2431 	ld	a, l
      000944 F8 08                 2432 	ldhl	sp,	#8
      000946 77                    2433 	ld	(hl), a
      000947 E1                    2434 	pop	hl
      000948 7C                    2435 	ld	a, h
      000949 F8 07                 2436 	ldhl	sp,	#7
      00094B 32                    2437 	ld	(hl-), a
      00094C 2A                    2438 	ld	a, (hl+)
      00094D 5F                    2439 	ld	e, a
      00094E 56                    2440 	ld	d, (hl)
      00094F 1A                    2441 	ld	a, (de)
      000950 4F                    2442 	ld	c, a
      000951 13                    2443 	inc	de
      000952 1A                    2444 	ld	a, (de)
      000953 47                    2445 	ld	b, a
      000954 79                    2446 	ld	a, c
      000955 21r4Br00              2447 	ld	hl, #_yOverflow
      000958 96                    2448 	sub	a, (hl)
      000959 23                    2449 	inc	hl
      00095A 4F                    2450 	ld	c, a
      00095B 78                    2451 	ld	a, b
      00095C 9E                    2452 	sbc	a, (hl)
      00095D 47                    2453 	ld	b, a
      00095E F8 06                 2454 	ldhl	sp,	#6
      000960 2A                    2455 	ld	a,	(hl+)
      000961 66                    2456 	ld	h, (hl)
      000962 6F                    2457 	ld	l, a
      000963 79                    2458 	ld	a, c
      000964 22                    2459 	ld	(hl+), a
      000965 70                    2460 	ld	(hl), b
                                   2461 ;main.c:264: if (enemies[i].x < playerDrawX) {
      000966 21r43r00              2462 	ld	hl, #_playerDrawX
      000969 4E                    2463 	ld	c, (hl)
      00096A 06 00                 2464 	ld	b, #0x00
                                   2465 ;main.c:277: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      00096C F8 04                 2466 	ldhl	sp,#4
      00096E 2A                    2467 	ld	a, (hl+)
      00096F 5F                    2468 	ld	e, a
      000970 56                    2469 	ld	d, (hl)
      000971 21 0E 00              2470 	ld	hl, #0x000e
      000974 19                    2471 	add	hl, de
      000975 E5                    2472 	push	hl
      000976 7D                    2473 	ld	a, l
      000977 F8 0A                 2474 	ldhl	sp,	#10
      000979 77                    2475 	ld	(hl), a
      00097A E1                    2476 	pop	hl
      00097B 7C                    2477 	ld	a, h
      00097C F8 09                 2478 	ldhl	sp,	#9
      00097E 77                    2479 	ld	(hl), a
                                   2480 ;main.c:265: enemies[i].xSpeed += enemies[i].accel;
      00097F F8 04                 2481 	ldhl	sp,#4
      000981 2A                    2482 	ld	a, (hl+)
      000982 5F                    2483 	ld	e, a
      000983 56                    2484 	ld	d, (hl)
      000984 21 0D 00              2485 	ld	hl, #0x000d
      000987 19                    2486 	add	hl, de
      000988 33                    2487 	inc	sp
      000989 33                    2488 	inc	sp
      00098A E5                    2489 	push	hl
      00098B F8 08                 2490 	ldhl	sp,#8
      00098D 2A                    2491 	ld	a, (hl+)
      00098E 5F                    2492 	ld	e, a
      00098F 56                    2493 	ld	d, (hl)
      000990 1A                    2494 	ld	a, (de)
      000991 F8 0D                 2495 	ldhl	sp,	#13
      000993 22                    2496 	ld	(hl+), a
      000994 D1                    2497 	pop	de
      000995 D5                    2498 	push	de
      000996 1A                    2499 	ld	a, (de)
      000997 77                    2500 	ld	(hl), a
                                   2501 ;main.c:264: if (enemies[i].x < playerDrawX) {
      000998 F8 0B                 2502 	ldhl	sp,	#11
      00099A 2A                    2503 	ld	a, (hl+)
      00099B 91                    2504 	sub	a, c
      00099C 7E                    2505 	ld	a, (hl)
      00099D 98                    2506 	sbc	a, b
      00099E 56                    2507 	ld	d, (hl)
      00099F 78                    2508 	ld	a, b
      0009A0 CB 7F                 2509 	bit	7,a
      0009A2 28 07                 2510 	jr	Z, 00273$
      0009A4 CB 7A                 2511 	bit	7, d
      0009A6 20 08                 2512 	jr	NZ, 00274$
      0009A8 BF                    2513 	cp	a, a
      0009A9 18 05                 2514 	jr	00274$
      0009AB                       2515 00273$:
      0009AB CB 7A                 2516 	bit	7, d
      0009AD 28 01                 2517 	jr	Z, 00274$
      0009AF 37                    2518 	scf
      0009B0                       2519 00274$:
      0009B0 30 0D                 2520 	jr	NC, 00102$
                                   2521 ;main.c:265: enemies[i].xSpeed += enemies[i].accel;
      0009B2 F8 0E                 2522 	ldhl	sp,	#14
      0009B4 3A                    2523 	ld	a, (hl-)
      0009B5 86                    2524 	add	a, (hl)
      0009B6 4F                    2525 	ld	c, a
      0009B7 F8 08                 2526 	ldhl	sp,	#8
      0009B9 2A                    2527 	ld	a,	(hl+)
      0009BA 66                    2528 	ld	h, (hl)
      0009BB 6F                    2529 	ld	l, a
      0009BC 71                    2530 	ld	(hl), c
      0009BD 18 0B                 2531 	jr	00103$
      0009BF                       2532 00102$:
                                   2533 ;main.c:268: enemies[i].xSpeed -= enemies[i].accel;
      0009BF F8 0D                 2534 	ldhl	sp,	#13
      0009C1 2A                    2535 	ld	a, (hl+)
      0009C2 96                    2536 	sub	a, (hl)
      0009C3 4F                    2537 	ld	c, a
      0009C4 F8 08                 2538 	ldhl	sp,	#8
      0009C6 2A                    2539 	ld	a,	(hl+)
      0009C7 66                    2540 	ld	h, (hl)
      0009C8 6F                    2541 	ld	l, a
      0009C9 71                    2542 	ld	(hl), c
      0009CA                       2543 00103$:
                                   2544 ;main.c:270: if (enemies[i].y < playerDrawY) {
      0009CA F8 06                 2545 	ldhl	sp,#6
      0009CC 2A                    2546 	ld	a, (hl+)
      0009CD 5F                    2547 	ld	e, a
      0009CE 56                    2548 	ld	d, (hl)
      0009CF 1A                    2549 	ld	a, (de)
      0009D0 F8 02                 2550 	ldhl	sp,	#2
      0009D2 22                    2551 	ld	(hl+), a
      0009D3 13                    2552 	inc	de
      0009D4 1A                    2553 	ld	a, (de)
      0009D5 77                    2554 	ld	(hl), a
      0009D6 21r44r00              2555 	ld	hl, #_playerDrawY
      0009D9 4E                    2556 	ld	c, (hl)
      0009DA 06 00                 2557 	ld	b, #0x00
                                   2558 ;main.c:278: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0009DC F8 04                 2559 	ldhl	sp,#4
      0009DE 2A                    2560 	ld	a, (hl+)
      0009DF 5F                    2561 	ld	e, a
      0009E0 56                    2562 	ld	d, (hl)
      0009E1 21 0F 00              2563 	ld	hl, #0x000f
      0009E4 19                    2564 	add	hl, de
      0009E5 E5                    2565 	push	hl
      0009E6 7D                    2566 	ld	a, l
      0009E7 F8 0C                 2567 	ldhl	sp,	#12
      0009E9 77                    2568 	ld	(hl), a
      0009EA E1                    2569 	pop	hl
      0009EB 7C                    2570 	ld	a, h
      0009EC F8 0B                 2571 	ldhl	sp,	#11
                                   2572 ;main.c:271: enemies[i].ySpeed += enemies[i].accel;
      0009EE 32                    2573 	ld	(hl-), a
      0009EF 2A                    2574 	ld	a, (hl+)
      0009F0 5F                    2575 	ld	e, a
      0009F1 2A                    2576 	ld	a, (hl+)
      0009F2 23                    2577 	inc	hl
      0009F3 57                    2578 	ld	d, a
      0009F4 1A                    2579 	ld	a, (de)
      0009F5 22                    2580 	ld	(hl+), a
      0009F6 D1                    2581 	pop	de
      0009F7 D5                    2582 	push	de
      0009F8 1A                    2583 	ld	a, (de)
      0009F9 77                    2584 	ld	(hl), a
                                   2585 ;main.c:270: if (enemies[i].y < playerDrawY) {
      0009FA F8 02                 2586 	ldhl	sp,	#2
      0009FC 2A                    2587 	ld	a, (hl+)
      0009FD 91                    2588 	sub	a, c
      0009FE 7E                    2589 	ld	a, (hl)
      0009FF 98                    2590 	sbc	a, b
      000A00 56                    2591 	ld	d, (hl)
      000A01 78                    2592 	ld	a, b
      000A02 CB 7F                 2593 	bit	7,a
      000A04 28 07                 2594 	jr	Z, 00275$
      000A06 CB 7A                 2595 	bit	7, d
      000A08 20 08                 2596 	jr	NZ, 00276$
      000A0A BF                    2597 	cp	a, a
      000A0B 18 05                 2598 	jr	00276$
      000A0D                       2599 00275$:
      000A0D CB 7A                 2600 	bit	7, d
      000A0F 28 01                 2601 	jr	Z, 00276$
      000A11 37                    2602 	scf
      000A12                       2603 00276$:
      000A12 30 0D                 2604 	jr	NC, 00105$
                                   2605 ;main.c:271: enemies[i].ySpeed += enemies[i].accel;
      000A14 F8 0E                 2606 	ldhl	sp,	#14
      000A16 3A                    2607 	ld	a, (hl-)
      000A17 86                    2608 	add	a, (hl)
      000A18 4F                    2609 	ld	c, a
      000A19 F8 0A                 2610 	ldhl	sp,	#10
      000A1B 2A                    2611 	ld	a,	(hl+)
      000A1C 66                    2612 	ld	h, (hl)
      000A1D 6F                    2613 	ld	l, a
      000A1E 71                    2614 	ld	(hl), c
      000A1F 18 0B                 2615 	jr	00106$
      000A21                       2616 00105$:
                                   2617 ;main.c:274: enemies[i].ySpeed -= enemies[i].accel;
      000A21 F8 0D                 2618 	ldhl	sp,	#13
      000A23 2A                    2619 	ld	a, (hl+)
      000A24 96                    2620 	sub	a, (hl)
      000A25 4F                    2621 	ld	c, a
      000A26 F8 0A                 2622 	ldhl	sp,	#10
      000A28 2A                    2623 	ld	a,	(hl+)
      000A29 66                    2624 	ld	h, (hl)
      000A2A 6F                    2625 	ld	l, a
      000A2B 71                    2626 	ld	(hl), c
      000A2C                       2627 00106$:
                                   2628 ;main.c:277: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000A2C F8 04                 2629 	ldhl	sp,#4
      000A2E 2A                    2630 	ld	a, (hl+)
      000A2F 5F                    2631 	ld	e, a
      000A30 56                    2632 	ld	d, (hl)
      000A31 21 0C 00              2633 	ld	hl, #0x000c
      000A34 19                    2634 	add	hl, de
      000A35 4D                    2635 	ld	c, l
      000A36 44                    2636 	ld	b, h
      000A37 0A                    2637 	ld	a, (bc)
      000A38 5F                    2638 	ld	e, a
      000A39 F8 0C                 2639 	ldhl	sp,	#12
      000A3B 7B                    2640 	ld	a, e
      000A3C 22                    2641 	ld	(hl+), a
      000A3D AF                    2642 	xor	a, a
      000A3E 93                    2643 	sub	a, e
      000A3F 77                    2644 	ld	(hl), a
      000A40 F8 08                 2645 	ldhl	sp,#8
      000A42 2A                    2646 	ld	a, (hl+)
      000A43 5F                    2647 	ld	e, a
      000A44 56                    2648 	ld	d, (hl)
      000A45 1A                    2649 	ld	a, (de)
      000A46 F8 0E                 2650 	ldhl	sp,	#14
                                   2651 ;main.c:196: return (value < min) ? min : (value > max) ? max : value;
      000A48 32                    2652 	ld	(hl-), a
      000A49 2A                    2653 	ld	a, (hl+)
      000A4A 5F                    2654 	ld	e, a
      000A4B 56                    2655 	ld	d, (hl)
      000A4C 3A                    2656 	ld	a, (hl-)
      000A4D 96                    2657 	sub	a, (hl)
      000A4E CB 7B                 2658 	bit	7, e
      000A50 28 07                 2659 	jr	Z, 00277$
      000A52 CB 7A                 2660 	bit	7, d
      000A54 20 08                 2661 	jr	NZ, 00278$
      000A56 BF                    2662 	cp	a, a
      000A57 18 05                 2663 	jr	00278$
      000A59                       2664 00277$:
      000A59 CB 7A                 2665 	bit	7, d
      000A5B 28 01                 2666 	jr	Z, 00278$
      000A5D 37                    2667 	scf
      000A5E                       2668 00278$:
      000A5E 30 05                 2669 	jr	NC, 00147$
      000A60 F8 0D                 2670 	ldhl	sp,	#13
      000A62 7E                    2671 	ld	a, (hl)
      000A63 18 23                 2672 	jr	00148$
      000A65                       2673 00147$:
      000A65 F8 0E                 2674 	ldhl	sp,	#14
      000A67 3A                    2675 	ld	a, (hl-)
      000A68 2B                    2676 	dec	hl
      000A69 5F                    2677 	ld	e, a
      000A6A 56                    2678 	ld	d, (hl)
      000A6B 2A                    2679 	ld	a, (hl+)
      000A6C 23                    2680 	inc	hl
      000A6D 96                    2681 	sub	a, (hl)
      000A6E CB 7B                 2682 	bit	7, e
      000A70 28 07                 2683 	jr	Z, 00279$
      000A72 CB 7A                 2684 	bit	7, d
      000A74 20 08                 2685 	jr	NZ, 00280$
      000A76 BF                    2686 	cp	a, a
      000A77 18 05                 2687 	jr	00280$
      000A79                       2688 00279$:
      000A79 CB 7A                 2689 	bit	7, d
      000A7B 28 01                 2690 	jr	Z, 00280$
      000A7D 37                    2691 	scf
      000A7E                       2692 00280$:
      000A7E 30 05                 2693 	jr	NC, 00149$
      000A80 F8 0C                 2694 	ldhl	sp,	#12
      000A82 7E                    2695 	ld	a, (hl)
      000A83 18 03                 2696 	jr	00150$
      000A85                       2697 00149$:
      000A85 F8 0E                 2698 	ldhl	sp,	#14
      000A87 7E                    2699 	ld	a, (hl)
      000A88                       2700 00150$:
      000A88                       2701 00148$:
                                   2702 ;main.c:277: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000A88 F8 08                 2703 	ldhl	sp,	#8
      000A8A F5                    2704 	push	af
      000A8B 2A                    2705 	ld	a,	(hl+)
      000A8C 66                    2706 	ld	h, (hl)
      000A8D 6F                    2707 	ld	l, a
      000A8E F1                    2708 	pop	af
      000A8F 77                    2709 	ld	(hl), a
                                   2710 ;main.c:278: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000A90 0A                    2711 	ld	a, (bc)
      000A91 47                    2712 	ld	b, a
      000A92 48                    2713 	ld	c, b
      000A93 AF                    2714 	xor	a, a
      000A94 90                    2715 	sub	a, b
      000A95 47                    2716 	ld	b, a
      000A96 F8 0A                 2717 	ldhl	sp,#10
      000A98 2A                    2718 	ld	a, (hl+)
      000A99 5F                    2719 	ld	e, a
      000A9A 56                    2720 	ld	d, (hl)
      000A9B 1A                    2721 	ld	a, (de)
      000A9C 6F                    2722 	ld	l, a
                                   2723 ;	spillPairReg hl
                                   2724 ;	spillPairReg hl
                                   2725 ;main.c:196: return (value < min) ? min : (value > max) ? max : value;
      000A9D 58                    2726 	ld	e, b
      000A9E 7D                    2727 	ld	a,l
      000A9F 57                    2728 	ld	d,a
      000AA0 90                    2729 	sub	a, b
      000AA1 CB 7B                 2730 	bit	7, e
      000AA3 28 07                 2731 	jr	Z, 00281$
      000AA5 CB 7A                 2732 	bit	7, d
      000AA7 20 08                 2733 	jr	NZ, 00282$
      000AA9 BF                    2734 	cp	a, a
      000AAA 18 05                 2735 	jr	00282$
      000AAC                       2736 00281$:
      000AAC CB 7A                 2737 	bit	7, d
      000AAE 28 01                 2738 	jr	Z, 00282$
      000AB0 37                    2739 	scf
      000AB1                       2740 00282$:
      000AB1 30 03                 2741 	jr	NC, 00151$
      000AB3 48                    2742 	ld	c, b
      000AB4 18 17                 2743 	jr	00152$
      000AB6                       2744 00151$:
      000AB6 5D                    2745 	ld	e, l
      000AB7 79                    2746 	ld	a,c
      000AB8 57                    2747 	ld	d,a
      000AB9 95                    2748 	sub	a, l
      000ABA CB 7B                 2749 	bit	7, e
      000ABC 28 07                 2750 	jr	Z, 00283$
      000ABE CB 7A                 2751 	bit	7, d
      000AC0 20 08                 2752 	jr	NZ, 00284$
      000AC2 BF                    2753 	cp	a, a
      000AC3 18 05                 2754 	jr	00284$
      000AC5                       2755 00283$:
      000AC5 CB 7A                 2756 	bit	7, d
      000AC7 28 01                 2757 	jr	Z, 00284$
      000AC9 37                    2758 	scf
      000ACA                       2759 00284$:
      000ACA 38 01                 2760 	jr	C, 00154$
      000ACC 4D                    2761 	ld	c, l
      000ACD                       2762 00154$:
      000ACD                       2763 00152$:
                                   2764 ;main.c:278: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000ACD F8 0A                 2765 	ldhl	sp,	#10
      000ACF 2A                    2766 	ld	a,	(hl+)
      000AD0 66                    2767 	ld	h, (hl)
      000AD1 6F                    2768 	ld	l, a
      000AD2 71                    2769 	ld	(hl), c
                                   2770 ;main.c:281: enemies[i].xReserve += enemies[i].xSpeed;
      000AD3 F8 04                 2771 	ldhl	sp,#4
      000AD5 2A                    2772 	ld	a, (hl+)
      000AD6 5F                    2773 	ld	e, a
      000AD7 56                    2774 	ld	d, (hl)
      000AD8 21 04 00              2775 	ld	hl, #0x0004
      000ADB 19                    2776 	add	hl, de
      000ADC E5                    2777 	push	hl
      000ADD 7D                    2778 	ld	a, l
      000ADE F8 0D                 2779 	ldhl	sp,	#13
      000AE0 77                    2780 	ld	(hl), a
      000AE1 E1                    2781 	pop	hl
      000AE2 7C                    2782 	ld	a, h
      000AE3 F8 0C                 2783 	ldhl	sp,	#12
      000AE5 32                    2784 	ld	(hl-), a
      000AE6 2A                    2785 	ld	a, (hl+)
      000AE7 5F                    2786 	ld	e, a
      000AE8 56                    2787 	ld	d, (hl)
      000AE9 1A                    2788 	ld	a, (de)
      000AEA 47                    2789 	ld	b, a
      000AEB F8 08                 2790 	ldhl	sp,#8
      000AED 2A                    2791 	ld	a, (hl+)
      000AEE 5F                    2792 	ld	e, a
      000AEF 2A                    2793 	ld	a, (hl+)
      000AF0 23                    2794 	inc	hl
      000AF1 57                    2795 	ld	d, a
      000AF2 1A                    2796 	ld	a, (de)
      000AF3 80                    2797 	add	a, b
      000AF4 47                    2798 	ld	b, a
      000AF5 2A                    2799 	ld	a,	(hl+)
      000AF6 66                    2800 	ld	h, (hl)
      000AF7 6F                    2801 	ld	l, a
      000AF8 70                    2802 	ld	(hl), b
                                   2803 ;main.c:282: enemies[i].yReserve += enemies[i].ySpeed;
      000AF9 F8 04                 2804 	ldhl	sp,#4
      000AFB 2A                    2805 	ld	a, (hl+)
      000AFC 5F                    2806 	ld	e, a
      000AFD 56                    2807 	ld	d, (hl)
      000AFE 21 05 00              2808 	ld	hl, #0x0005
      000B01 19                    2809 	add	hl, de
      000B02 E5                    2810 	push	hl
      000B03 7D                    2811 	ld	a, l
      000B04 F8 0F                 2812 	ldhl	sp,	#15
      000B06 77                    2813 	ld	(hl), a
      000B07 E1                    2814 	pop	hl
      000B08 7C                    2815 	ld	a, h
      000B09 F8 0E                 2816 	ldhl	sp,	#14
      000B0B 32                    2817 	ld	(hl-), a
      000B0C 2A                    2818 	ld	a, (hl+)
      000B0D 5F                    2819 	ld	e, a
      000B0E 56                    2820 	ld	d, (hl)
      000B0F 1A                    2821 	ld	a, (de)
      000B10 81                    2822 	add	a, c
      000B11 4F                    2823 	ld	c, a
      000B12 3A                    2824 	ld	a, (hl-)
      000B13 6E                    2825 	ld	l, (hl)
      000B14 67                    2826 	ld	h, a
      000B15 71                    2827 	ld	(hl), c
                                   2828 ;main.c:286: if (enemies[i].xReserve >> 3 > 0) {
      000B16 CB 28                 2829 	sra	b
      000B18 CB 28                 2830 	sra	b
      000B1A CB 28                 2831 	sra	b
                                   2832 ;main.c:281: enemies[i].xReserve += enemies[i].xSpeed;
      000B1C F8 0B                 2833 	ldhl	sp,#11
      000B1E 2A                    2834 	ld	a, (hl+)
      000B1F 5F                    2835 	ld	e, a
      000B20 3A                    2836 	ld	a, (hl-)
      000B21 2B                    2837 	dec	hl
      000B22 57                    2838 	ld	d, a
      000B23 1A                    2839 	ld	a, (de)
      000B24 77                    2840 	ld	(hl), a
                                   2841 ;main.c:286: if (enemies[i].xReserve >> 3 > 0) {
      000B25 58                    2842 	ld	e, b
      000B26 AF                    2843 	xor	a, a
      000B27 57                    2844 	ld	d, a
      000B28 90                    2845 	sub	a, b
      000B29 CB 7B                 2846 	bit	7, e
      000B2B 28 07                 2847 	jr	Z, 00285$
      000B2D CB 7A                 2848 	bit	7, d
      000B2F 20 08                 2849 	jr	NZ, 00286$
      000B31 BF                    2850 	cp	a, a
      000B32 18 05                 2851 	jr	00286$
      000B34                       2852 00285$:
      000B34 CB 7A                 2853 	bit	7, d
      000B36 28 01                 2854 	jr	Z, 00286$
      000B38 37                    2855 	scf
      000B39                       2856 00286$:
      000B39 30 3F                 2857 	jr	NC, 00110$
                                   2858 ;main.c:287: int8_t xMovement = enemies[i].xReserve >> 3;
      000B3B F8 0A                 2859 	ldhl	sp,	#10
      000B3D 7E                    2860 	ld	a, (hl)
      000B3E CB 2F                 2861 	sra	a
      000B40 CB 2F                 2862 	sra	a
      000B42 CB 2F                 2863 	sra	a
      000B44 77                    2864 	ld	(hl), a
                                   2865 ;main.c:288: enemies[i].x += xMovement;
      000B45 F8 04                 2866 	ldhl	sp,#4
      000B47 2A                    2867 	ld	a, (hl+)
      000B48 5F                    2868 	ld	e, a
      000B49 56                    2869 	ld	d, (hl)
      000B4A 1A                    2870 	ld	a, (de)
      000B4B 4F                    2871 	ld	c, a
      000B4C 13                    2872 	inc	de
      000B4D 1A                    2873 	ld	a, (de)
      000B4E 47                    2874 	ld	b, a
      000B4F F8 0A                 2875 	ldhl	sp,	#10
      000B51 7E                    2876 	ld	a, (hl)
      000B52 5F                    2877 	ld	e, a
      000B53 07                    2878 	rlca
      000B54 9F                    2879 	sbc	a, a
      000B55 57                    2880 	ld	d, a
      000B56 69                    2881 	ld	l, c
                                   2882 ;	spillPairReg hl
                                   2883 ;	spillPairReg hl
      000B57 60                    2884 	ld	h, b
                                   2885 ;	spillPairReg hl
                                   2886 ;	spillPairReg hl
      000B58 19                    2887 	add	hl, de
      000B59 4D                    2888 	ld	c, l
      000B5A 44                    2889 	ld	b, h
      000B5B F8 04                 2890 	ldhl	sp,	#4
      000B5D 2A                    2891 	ld	a,	(hl+)
      000B5E 66                    2892 	ld	h, (hl)
      000B5F 6F                    2893 	ld	l, a
      000B60 79                    2894 	ld	a, c
      000B61 22                    2895 	ld	(hl+), a
      000B62 70                    2896 	ld	(hl), b
                                   2897 ;main.c:289: enemies[i].xReserve -=  xMovement << 3;
      000B63 F8 0B                 2898 	ldhl	sp,#11
      000B65 2A                    2899 	ld	a, (hl+)
      000B66 5F                    2900 	ld	e, a
      000B67 3A                    2901 	ld	a, (hl-)
      000B68 2B                    2902 	dec	hl
      000B69 57                    2903 	ld	d, a
      000B6A 1A                    2904 	ld	a, (de)
      000B6B F5                    2905 	push	af
      000B6C 2A                    2906 	ld	a, (hl+)
      000B6D 87                    2907 	add	a, a
      000B6E 87                    2908 	add	a, a
      000B6F 87                    2909 	add	a, a
      000B70 4F                    2910 	ld	c, a
      000B71 F1                    2911 	pop	af
      000B72 91                    2912 	sub	a, c
      000B73 4F                    2913 	ld	c, a
      000B74 2A                    2914 	ld	a,	(hl+)
      000B75 66                    2915 	ld	h, (hl)
      000B76 6F                    2916 	ld	l, a
      000B77 71                    2917 	ld	(hl), c
      000B78 18 69                 2918 	jr	00111$
      000B7A                       2919 00110$:
                                   2920 ;main.c:292: else if ((-enemies[i].xReserve) >> 3 > 0){
      000B7A F8 0A                 2921 	ldhl	sp,	#10
      000B7C 7E                    2922 	ld	a, (hl)
      000B7D 4F                    2923 	ld	c, a
      000B7E 07                    2924 	rlca
      000B7F 9F                    2925 	sbc	a, a
      000B80 47                    2926 	ld	b, a
      000B81 AF                    2927 	xor	a, a
      000B82 91                    2928 	sub	a, c
      000B83 4F                    2929 	ld	c, a
      000B84 9F                    2930 	sbc	a, a
      000B85 90                    2931 	sub	a, b
      000B86 47                    2932 	ld	b, a
      000B87 CB 28                 2933 	sra	b
      000B89 CB 19                 2934 	rr	c
      000B8B CB 28                 2935 	sra	b
      000B8D CB 19                 2936 	rr	c
      000B8F CB 28                 2937 	sra	b
      000B91 CB 19                 2938 	rr	c
      000B93 58                    2939 	ld	e, b
      000B94 AF                    2940 	xor	a, a
      000B95 57                    2941 	ld	d, a
      000B96 B9                    2942 	cp	a, c
      000B97 98                    2943 	sbc	a, b
      000B98 CB 7B                 2944 	bit	7, e
      000B9A 28 07                 2945 	jr	Z, 00287$
      000B9C CB 7A                 2946 	bit	7, d
      000B9E 20 08                 2947 	jr	NZ, 00288$
      000BA0 BF                    2948 	cp	a, a
      000BA1 18 05                 2949 	jr	00288$
      000BA3                       2950 00287$:
      000BA3 CB 7A                 2951 	bit	7, d
      000BA5 28 01                 2952 	jr	Z, 00288$
      000BA7 37                    2953 	scf
      000BA8                       2954 00288$:
      000BA8 30 39                 2955 	jr	NC, 00111$
                                   2956 ;main.c:293: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      000BAA AF                    2957 	xor	a, a
      000BAB 91                    2958 	sub	a, c
      000BAC 4F                    2959 	ld	c, a
      000BAD F8 0A                 2960 	ldhl	sp,	#10
      000BAF 71                    2961 	ld	(hl), c
                                   2962 ;main.c:294: enemies[i].x += xMovement;
      000BB0 F8 04                 2963 	ldhl	sp,#4
      000BB2 2A                    2964 	ld	a, (hl+)
      000BB3 5F                    2965 	ld	e, a
      000BB4 56                    2966 	ld	d, (hl)
      000BB5 1A                    2967 	ld	a, (de)
      000BB6 4F                    2968 	ld	c, a
      000BB7 13                    2969 	inc	de
      000BB8 1A                    2970 	ld	a, (de)
      000BB9 47                    2971 	ld	b, a
      000BBA F8 0A                 2972 	ldhl	sp,	#10
      000BBC 7E                    2973 	ld	a, (hl)
      000BBD 5F                    2974 	ld	e, a
      000BBE 07                    2975 	rlca
      000BBF 9F                    2976 	sbc	a, a
      000BC0 57                    2977 	ld	d, a
      000BC1 69                    2978 	ld	l, c
                                   2979 ;	spillPairReg hl
                                   2980 ;	spillPairReg hl
      000BC2 60                    2981 	ld	h, b
                                   2982 ;	spillPairReg hl
                                   2983 ;	spillPairReg hl
      000BC3 19                    2984 	add	hl, de
      000BC4 4D                    2985 	ld	c, l
      000BC5 44                    2986 	ld	b, h
      000BC6 F8 04                 2987 	ldhl	sp,	#4
      000BC8 2A                    2988 	ld	a,	(hl+)
      000BC9 66                    2989 	ld	h, (hl)
      000BCA 6F                    2990 	ld	l, a
      000BCB 79                    2991 	ld	a, c
      000BCC 22                    2992 	ld	(hl+), a
      000BCD 70                    2993 	ld	(hl), b
                                   2994 ;main.c:295: enemies[i].xReserve +=  (-xMovement) << 3;
      000BCE F8 0B                 2995 	ldhl	sp,#11
      000BD0 2A                    2996 	ld	a, (hl+)
      000BD1 5F                    2997 	ld	e, a
      000BD2 3A                    2998 	ld	a, (hl-)
      000BD3 2B                    2999 	dec	hl
      000BD4 57                    3000 	ld	d, a
      000BD5 1A                    3001 	ld	a, (de)
      000BD6 4F                    3002 	ld	c, a
      000BD7 AF                    3003 	xor	a, a
      000BD8 96                    3004 	sub	a, (hl)
      000BD9 23                    3005 	inc	hl
      000BDA 87                    3006 	add	a, a
      000BDB 87                    3007 	add	a, a
      000BDC 87                    3008 	add	a, a
      000BDD 81                    3009 	add	a, c
      000BDE 4F                    3010 	ld	c, a
      000BDF 2A                    3011 	ld	a,	(hl+)
      000BE0 66                    3012 	ld	h, (hl)
      000BE1 6F                    3013 	ld	l, a
      000BE2 71                    3014 	ld	(hl), c
      000BE3                       3015 00111$:
                                   3016 ;main.c:298: if (enemies[i].yReserve >> 3 > 0) {
      000BE3 F8 0D                 3017 	ldhl	sp,#13
      000BE5 2A                    3018 	ld	a, (hl+)
      000BE6 5F                    3019 	ld	e, a
      000BE7 56                    3020 	ld	d, (hl)
      000BE8 1A                    3021 	ld	a, (de)
      000BE9 F8 0B                 3022 	ldhl	sp,	#11
      000BEB 77                    3023 	ld	(hl), a
      000BEC 2A                    3024 	ld	a, (hl+)
      000BED CB 2F                 3025 	sra	a
      000BEF CB 2F                 3026 	sra	a
      000BF1 CB 2F                 3027 	sra	a
      000BF3 77                    3028 	ld	(hl), a
      000BF4 5E                    3029 	ld	e, (hl)
      000BF5 AF                    3030 	xor	a, a
      000BF6 57                    3031 	ld	d, a
      000BF7 96                    3032 	sub	a, (hl)
      000BF8 CB 7B                 3033 	bit	7, e
      000BFA 28 07                 3034 	jr	Z, 00289$
      000BFC CB 7A                 3035 	bit	7, d
      000BFE 20 08                 3036 	jr	NZ, 00290$
      000C00 BF                    3037 	cp	a, a
      000C01 18 05                 3038 	jr	00290$
      000C03                       3039 00289$:
      000C03 CB 7A                 3040 	bit	7, d
      000C05 28 01                 3041 	jr	Z, 00290$
      000C07 37                    3042 	scf
      000C08                       3043 00290$:
      000C08 30 5B                 3044 	jr	NC, 00115$
                                   3045 ;main.c:299: int8_t yMovement = enemies[i].yReserve >> 3;
      000C0A F8 0C                 3046 	ldhl	sp,	#12
      000C0C 7E                    3047 	ld	a, (hl)
      000C0D F8 08                 3048 	ldhl	sp,	#8
                                   3049 ;main.c:300: enemies[i].y += yMovement;
      000C0F 32                    3050 	ld	(hl-), a
      000C10 2B                    3051 	dec	hl
      000C11 2A                    3052 	ld	a, (hl+)
      000C12 5F                    3053 	ld	e, a
      000C13 56                    3054 	ld	d, (hl)
      000C14 1A                    3055 	ld	a, (de)
      000C15 F8 0B                 3056 	ldhl	sp,	#11
      000C17 22                    3057 	ld	(hl+), a
      000C18 13                    3058 	inc	de
      000C19 1A                    3059 	ld	a, (de)
      000C1A 77                    3060 	ld	(hl), a
      000C1B F8 08                 3061 	ldhl	sp,	#8
      000C1D 7E                    3062 	ld	a, (hl)
      000C1E F8 04                 3063 	ldhl	sp,	#4
      000C20 22                    3064 	ld	(hl+), a
      000C21 07                    3065 	rlca
      000C22 9F                    3066 	sbc	a, a
      000C23 77                    3067 	ld	(hl), a
      000C24 F8 0B                 3068 	ldhl	sp,	#11
      000C26 3A                    3069 	ld	a, (hl-)
      000C27 2B                    3070 	dec	hl
      000C28 77                    3071 	ld	(hl), a
      000C29 F8 0C                 3072 	ldhl	sp,	#12
      000C2B 3A                    3073 	ld	a, (hl-)
      000C2C 2B                    3074 	dec	hl
      000C2D 32                    3075 	ld	(hl-), a
      000C2E 2A                    3076 	ld	a, (hl+)
      000C2F 5F                    3077 	ld	e, a
      000C30 56                    3078 	ld	d, (hl)
      000C31 F8 04                 3079 	ldhl	sp,	#4
      000C33 2A                    3080 	ld	a,	(hl+)
      000C34 66                    3081 	ld	h, (hl)
      000C35 6F                    3082 	ld	l, a
      000C36 19                    3083 	add	hl, de
      000C37 E5                    3084 	push	hl
      000C38 7D                    3085 	ld	a, l
      000C39 F8 0D                 3086 	ldhl	sp,	#13
      000C3B 77                    3087 	ld	(hl), a
      000C3C E1                    3088 	pop	hl
      000C3D 7C                    3089 	ld	a, h
      000C3E F8 0C                 3090 	ldhl	sp,	#12
      000C40 77                    3091 	ld	(hl), a
      000C41 F8 06                 3092 	ldhl	sp,#6
      000C43 2A                    3093 	ld	a, (hl+)
      000C44 5F                    3094 	ld	e, a
      000C45 56                    3095 	ld	d, (hl)
      000C46 F8 0B                 3096 	ldhl	sp,	#11
      000C48 2A                    3097 	ld	a, (hl+)
      000C49 12                    3098 	ld	(de), a
      000C4A 13                    3099 	inc	de
                                   3100 ;main.c:301: enemies[i].yReserve -=  yMovement << 3;
      000C4B 2A                    3101 	ld	a, (hl+)
      000C4C 12                    3102 	ld	(de), a
      000C4D 2A                    3103 	ld	a, (hl+)
      000C4E 5F                    3104 	ld	e, a
      000C4F 56                    3105 	ld	d, (hl)
      000C50 1A                    3106 	ld	a, (de)
      000C51 F5                    3107 	push	af
      000C52 F8 0A                 3108 	ldhl	sp,	#10
      000C54 7E                    3109 	ld	a, (hl)
      000C55 87                    3110 	add	a, a
      000C56 87                    3111 	add	a, a
      000C57 87                    3112 	add	a, a
      000C58 4F                    3113 	ld	c, a
      000C59 F1                    3114 	pop	af
      000C5A 91                    3115 	sub	a, c
      000C5B 4F                    3116 	ld	c, a
      000C5C F8 0D                 3117 	ldhl	sp,	#13
      000C5E 2A                    3118 	ld	a,	(hl+)
      000C5F 66                    3119 	ld	h, (hl)
      000C60 6F                    3120 	ld	l, a
      000C61 71                    3121 	ld	(hl), c
      000C62 C3r06r0D              3122 	jp	00141$
      000C65                       3123 00115$:
                                   3124 ;main.c:303: else if ((-enemies[i].yReserve) >> 3 > 0){
      000C65 F8 0B                 3125 	ldhl	sp,	#11
      000C67 7E                    3126 	ld	a, (hl)
      000C68 F8 08                 3127 	ldhl	sp,	#8
      000C6A 22                    3128 	ld	(hl+), a
      000C6B 07                    3129 	rlca
      000C6C 9F                    3130 	sbc	a, a
      000C6D 77                    3131 	ld	(hl), a
      000C6E 11 00 00              3132 	ld	de, #0x0000
      000C71 3A                    3133 	ld	a, (hl-)
      000C72 6E                    3134 	ld	l, (hl)
      000C73 67                    3135 	ld	h, a
      000C74 7B                    3136 	ld	a, e
      000C75 95                    3137 	sub	a, l
      000C76 5F                    3138 	ld	e, a
      000C77 7A                    3139 	ld	a, d
      000C78 9C                    3140 	sbc	a, h
      000C79 F8 0C                 3141 	ldhl	sp,	#12
      000C7B 32                    3142 	ld	(hl-), a
      000C7C 7B                    3143 	ld	a, e
      000C7D 22                    3144 	ld	(hl+), a
      000C7E CB 2E                 3145 	sra	(hl)
      000C80 2B                    3146 	dec	hl
      000C81 CB 1E                 3147 	rr	(hl)
      000C83 23                    3148 	inc	hl
      000C84 CB 2E                 3149 	sra	(hl)
      000C86 2B                    3150 	dec	hl
      000C87 CB 1E                 3151 	rr	(hl)
      000C89 23                    3152 	inc	hl
      000C8A CB 2E                 3153 	sra	(hl)
      000C8C 2B                    3154 	dec	hl
      000C8D CB 1E                 3155 	rr	(hl)
      000C8F AF                    3156 	xor	a, a
      000C90 96                    3157 	sub	a, (hl)
      000C91 23                    3158 	inc	hl
      000C92 3E 00                 3159 	ld	a, #0x00
      000C94 9E                    3160 	sbc	a, (hl)
      000C95 3E 00                 3161 	ld	a, #0x00
      000C97 57                    3162 	ld	d, a
      000C98 CB 7E                 3163 	bit	7, (hl)
      000C9A 28 07                 3164 	jr	Z, 00291$
      000C9C CB 7A                 3165 	bit	7, d
      000C9E 20 08                 3166 	jr	NZ, 00292$
      000CA0 BF                    3167 	cp	a, a
      000CA1 18 05                 3168 	jr	00292$
      000CA3                       3169 00291$:
      000CA3 CB 7A                 3170 	bit	7, d
      000CA5 28 01                 3171 	jr	Z, 00292$
      000CA7 37                    3172 	scf
      000CA8                       3173 00292$:
      000CA8 30 5C                 3174 	jr	NC, 00141$
                                   3175 ;main.c:304: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      000CAA F8 0B                 3176 	ldhl	sp,	#11
      000CAC 2A                    3177 	ld	a, (hl+)
      000CAD 4F                    3178 	ld	c, a
      000CAE AF                    3179 	xor	a, a
      000CAF 91                    3180 	sub	a, c
      000CB0 77                    3181 	ld	(hl), a
      000CB1 7E                    3182 	ld	a, (hl)
      000CB2 F8 08                 3183 	ldhl	sp,	#8
                                   3184 ;main.c:305: enemies[i].y += yMovement;
      000CB4 32                    3185 	ld	(hl-), a
      000CB5 2B                    3186 	dec	hl
      000CB6 2A                    3187 	ld	a, (hl+)
      000CB7 5F                    3188 	ld	e, a
      000CB8 56                    3189 	ld	d, (hl)
      000CB9 1A                    3190 	ld	a, (de)
      000CBA F8 0B                 3191 	ldhl	sp,	#11
      000CBC 22                    3192 	ld	(hl+), a
      000CBD 13                    3193 	inc	de
      000CBE 1A                    3194 	ld	a, (de)
      000CBF 77                    3195 	ld	(hl), a
      000CC0 F8 08                 3196 	ldhl	sp,	#8
      000CC2 7E                    3197 	ld	a, (hl)
      000CC3 F8 04                 3198 	ldhl	sp,	#4
      000CC5 22                    3199 	ld	(hl+), a
      000CC6 07                    3200 	rlca
      000CC7 9F                    3201 	sbc	a, a
      000CC8 77                    3202 	ld	(hl), a
      000CC9 F8 0B                 3203 	ldhl	sp,	#11
      000CCB 3A                    3204 	ld	a, (hl-)
      000CCC 2B                    3205 	dec	hl
      000CCD 77                    3206 	ld	(hl), a
      000CCE F8 0C                 3207 	ldhl	sp,	#12
      000CD0 3A                    3208 	ld	a, (hl-)
      000CD1 2B                    3209 	dec	hl
      000CD2 32                    3210 	ld	(hl-), a
      000CD3 2A                    3211 	ld	a, (hl+)
      000CD4 5F                    3212 	ld	e, a
      000CD5 56                    3213 	ld	d, (hl)
      000CD6 F8 04                 3214 	ldhl	sp,	#4
      000CD8 2A                    3215 	ld	a,	(hl+)
      000CD9 66                    3216 	ld	h, (hl)
      000CDA 6F                    3217 	ld	l, a
      000CDB 19                    3218 	add	hl, de
      000CDC E5                    3219 	push	hl
      000CDD 7D                    3220 	ld	a, l
      000CDE F8 0D                 3221 	ldhl	sp,	#13
      000CE0 77                    3222 	ld	(hl), a
      000CE1 E1                    3223 	pop	hl
      000CE2 7C                    3224 	ld	a, h
      000CE3 F8 0C                 3225 	ldhl	sp,	#12
      000CE5 77                    3226 	ld	(hl), a
      000CE6 F8 06                 3227 	ldhl	sp,#6
      000CE8 2A                    3228 	ld	a, (hl+)
      000CE9 5F                    3229 	ld	e, a
      000CEA 56                    3230 	ld	d, (hl)
      000CEB F8 0B                 3231 	ldhl	sp,	#11
      000CED 2A                    3232 	ld	a, (hl+)
      000CEE 12                    3233 	ld	(de), a
      000CEF 13                    3234 	inc	de
                                   3235 ;main.c:306: enemies[i].yReserve +=  (-yMovement) << 3;
      000CF0 2A                    3236 	ld	a, (hl+)
      000CF1 12                    3237 	ld	(de), a
      000CF2 2A                    3238 	ld	a, (hl+)
      000CF3 5F                    3239 	ld	e, a
      000CF4 56                    3240 	ld	d, (hl)
      000CF5 1A                    3241 	ld	a, (de)
      000CF6 4F                    3242 	ld	c, a
      000CF7 AF                    3243 	xor	a, a
      000CF8 F8 08                 3244 	ldhl	sp,	#8
      000CFA 96                    3245 	sub	a, (hl)
      000CFB 87                    3246 	add	a, a
      000CFC 87                    3247 	add	a, a
      000CFD 87                    3248 	add	a, a
      000CFE 81                    3249 	add	a, c
      000CFF 4F                    3250 	ld	c, a
      000D00 F8 0D                 3251 	ldhl	sp,	#13
      000D02 2A                    3252 	ld	a,	(hl+)
      000D03 66                    3253 	ld	h, (hl)
      000D04 6F                    3254 	ld	l, a
      000D05 71                    3255 	ld	(hl), c
      000D06                       3256 00141$:
                                   3257 ;main.c:258: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D06 F8 0F                 3258 	ldhl	sp,	#15
      000D08 34                    3259 	inc	(hl)
      000D09 C3rEBr08              3260 	jp	00140$
      000D0C                       3261 00117$:
                                   3262 ;main.c:317: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D0C F8 0F                 3263 	ldhl	sp,	#15
      000D0E 36 00                 3264 	ld	(hl), #0x00
      000D10                       3265 00143$:
      000D10 21rCCr05              3266 	ld	hl, #_ENEMYCOUNT
      000D13 4E                    3267 	ld	c, (hl)
      000D14 F8 0F                 3268 	ldhl	sp,	#15
      000D16 7E                    3269 	ld	a, (hl)
      000D17 91                    3270 	sub	a, c
      000D18 D2r82r0E              3271 	jp	NC, 00145$
                                   3272 ;main.c:319: if (enemies[i].alive) {
      000D1B 7E                    3273 	ld	a, (hl)
      000D1C 16 00                 3274 	ld	d, #0x00
      000D1E 87                    3275 	add	a, a
      000D1F CB 12                 3276 	rl	d
      000D21 87                    3277 	add	a, a
      000D22 CB 12                 3278 	rl	d
      000D24 87                    3279 	add	a, a
      000D25 CB 12                 3280 	rl	d
      000D27 87                    3281 	add	a, a
      000D28 CB 12                 3282 	rl	d
      000D2A 5F                    3283 	ld	e, a
      000D2B 21r00r00              3284 	ld	hl, #_enemies
      000D2E 19                    3285 	add	hl, de
      000D2F E5                    3286 	push	hl
      000D30 7D                    3287 	ld	a, l
      000D31 F8 09                 3288 	ldhl	sp,	#9
      000D33 77                    3289 	ld	(hl), a
      000D34 E1                    3290 	pop	hl
      000D35 7C                    3291 	ld	a, h
      000D36 F8 08                 3292 	ldhl	sp,	#8
      000D38 32                    3293 	ld	(hl-), a
      000D39 2A                    3294 	ld	a, (hl+)
      000D3A 5F                    3295 	ld	e, a
      000D3B 56                    3296 	ld	d, (hl)
      000D3C 21 09 00              3297 	ld	hl, #0x0009
      000D3F 19                    3298 	add	hl, de
      000D40 4D                    3299 	ld	c, l
      000D41 44                    3300 	ld	b, h
      000D42 0A                    3301 	ld	a, (bc)
      000D43 F8 0E                 3302 	ldhl	sp,	#14
      000D45 77                    3303 	ld	(hl), a
      000D46 7E                    3304 	ld	a, (hl)
      000D47 B7                    3305 	or	a, a
      000D48 CAr57r0E              3306 	jp	Z, 00132$
                                   3307 ;main.c:320: if (enemies[i].visible == 1) {
      000D4B F8 07                 3308 	ldhl	sp,#7
      000D4D 2A                    3309 	ld	a, (hl+)
      000D4E 5F                    3310 	ld	e, a
      000D4F 56                    3311 	ld	d, (hl)
      000D50 21 0A 00              3312 	ld	hl, #0x000a
      000D53 19                    3313 	add	hl, de
      000D54 E5                    3314 	push	hl
      000D55 7D                    3315 	ld	a, l
      000D56 F8 0B                 3316 	ldhl	sp,	#11
      000D58 77                    3317 	ld	(hl), a
      000D59 E1                    3318 	pop	hl
      000D5A 7C                    3319 	ld	a, h
      000D5B F8 0A                 3320 	ldhl	sp,	#10
      000D5D 32                    3321 	ld	(hl-), a
      000D5E 2A                    3322 	ld	a, (hl+)
      000D5F 5F                    3323 	ld	e, a
      000D60 2A                    3324 	ld	a, (hl+)
      000D61 57                    3325 	ld	d, a
      000D62 1A                    3326 	ld	a, (de)
      000D63 77                    3327 	ld	(hl), a
                                   3328 ;main.c:321: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D64 F8 07                 3329 	ldhl	sp,#7
      000D66 2A                    3330 	ld	a, (hl+)
      000D67 5F                    3331 	ld	e, a
      000D68 56                    3332 	ld	d, (hl)
      000D69 1A                    3333 	ld	a, (de)
      000D6A F8 05                 3334 	ldhl	sp,	#5
      000D6C 22                    3335 	ld	(hl+), a
      000D6D 13                    3336 	inc	de
      000D6E 1A                    3337 	ld	a, (de)
      000D6F 22                    3338 	ld	(hl+), a
      000D70 2A                    3339 	ld	a, (hl+)
      000D71 5F                    3340 	ld	e, a
      000D72 56                    3341 	ld	d, (hl)
      000D73 21 02 00              3342 	ld	hl, #0x0002
      000D76 19                    3343 	add	hl, de
      000D77 E5                    3344 	push	hl
      000D78 7D                    3345 	ld	a, l
      000D79 F8 0E                 3346 	ldhl	sp,	#14
      000D7B 77                    3347 	ld	(hl), a
      000D7C E1                    3348 	pop	hl
      000D7D 7C                    3349 	ld	a, h
      000D7E F8 0D                 3350 	ldhl	sp,	#13
                                   3351 ;main.c:323: set_sprite_tile(10+i, 0x7f);
      000D80 22                    3352 	ld	(hl+), a
      000D81 23                    3353 	inc	hl
      000D82 7E                    3354 	ld	a, (hl)
                                   3355 ;main.c:321: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D83 F8 05                 3356 	ldhl	sp,	#5
      000D85 4E                    3357 	ld	c, (hl)
      000D86 23                    3358 	inc	hl
      000D87 46                    3359 	ld	b, (hl)
                                   3360 ;main.c:323: set_sprite_tile(10+i, 0x7f);
      000D88 C6 0A                 3361 	add	a, #0x0a
      000D8A F8 0E                 3362 	ldhl	sp,	#14
      000D8C 77                    3363 	ld	(hl), a
                                   3364 ;main.c:321: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D8D 78                    3365 	ld	a, b
      000D8E 07                    3366 	rlca
      000D8F E6 01                 3367 	and	a,#0x01
      000D91 6F                    3368 	ld	l, a
                                   3369 ;	spillPairReg hl
                                   3370 ;	spillPairReg hl
                                   3371 ;main.c:320: if (enemies[i].visible == 1) {
      000D92 E5                    3372 	push	hl
      000D93 F8 0D                 3373 	ldhl	sp,	#13
      000D95 7E                    3374 	ld	a, (hl)
      000D96 3D                    3375 	dec	a
      000D97 E1                    3376 	pop	hl
      000D98 20 60                 3377 	jr	NZ, 00129$
                                   3378 ;main.c:321: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D9A 7D                    3379 	ld	a, l
      000D9B B7                    3380 	or	a, a
      000D9C 20 44                 3381 	jr	NZ, 00118$
      000D9E 58                    3382 	ld	e, b
      000D9F 16 00                 3383 	ld	d, #0x00
      000DA1 3E AC                 3384 	ld	a, #0xac
      000DA3 B9                    3385 	cp	a, c
      000DA4 3E 00                 3386 	ld	a, #0x00
      000DA6 98                    3387 	sbc	a, b
      000DA7 CB 7B                 3388 	bit	7, e
      000DA9 28 07                 3389 	jr	Z, 00296$
      000DAB CB 7A                 3390 	bit	7, d
      000DAD 20 08                 3391 	jr	NZ, 00297$
      000DAF BF                    3392 	cp	a, a
      000DB0 18 05                 3393 	jr	00297$
      000DB2                       3394 00296$:
      000DB2 CB 7A                 3395 	bit	7, d
      000DB4 28 01                 3396 	jr	Z, 00297$
      000DB6 37                    3397 	scf
      000DB7                       3398 00297$:
      000DB7 38 29                 3399 	jr	C, 00118$
      000DB9 F8 0C                 3400 	ldhl	sp,#12
      000DBB 2A                    3401 	ld	a, (hl+)
      000DBC 5F                    3402 	ld	e, a
      000DBD 56                    3403 	ld	d, (hl)
      000DBE 1A                    3404 	ld	a, (de)
      000DBF 4F                    3405 	ld	c, a
      000DC0 13                    3406 	inc	de
      000DC1 1A                    3407 	ld	a, (de)
      000DC2 47                    3408 	ld	b, a
      000DC3 CB 78                 3409 	bit	7, b
      000DC5 20 1B                 3410 	jr	NZ, 00118$
      000DC7 58                    3411 	ld	e, b
      000DC8 16 00                 3412 	ld	d, #0x00
      000DCA 3E 98                 3413 	ld	a, #0x98
      000DCC B9                    3414 	cp	a, c
      000DCD 3E 00                 3415 	ld	a, #0x00
      000DCF 98                    3416 	sbc	a, b
      000DD0 CB 7B                 3417 	bit	7, e
      000DD2 28 07                 3418 	jr	Z, 00298$
      000DD4 CB 7A                 3419 	bit	7, d
      000DD6 20 08                 3420 	jr	NZ, 00299$
      000DD8 BF                    3421 	cp	a, a
      000DD9 18 05                 3422 	jr	00299$
      000DDB                       3423 00298$:
      000DDB CB 7A                 3424 	bit	7, d
      000DDD 28 01                 3425 	jr	Z, 00299$
      000DDF 37                    3426 	scf
      000DE0                       3427 00299$:
      000DE0 30 75                 3428 	jr	NC, 00132$
      000DE2                       3429 00118$:
                                   3430 ;main.c:322: enemies[i].visible = 0;
      000DE2 F8 09                 3431 	ldhl	sp,	#9
      000DE4 2A                    3432 	ld	a,	(hl+)
      000DE5 66                    3433 	ld	h, (hl)
      000DE6 6F                    3434 	ld	l, a
      000DE7 36 00                 3435 	ld	(hl), #0x00
                                   3436 ;main.c:323: set_sprite_tile(10+i, 0x7f);
      000DE9 F8 0E                 3437 	ldhl	sp,	#14
                                   3438 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DEB 6E                    3439 	ld	l, (hl)
      000DEC 01r00r00              3440 	ld	bc, #_shadow_OAM+0
                                   3441 ;	spillPairReg hl
                                   3442 ;	spillPairReg hl
      000DEF 26 00                 3443 	ld	h, #0x00
                                   3444 ;	spillPairReg hl
                                   3445 ;	spillPairReg hl
      000DF1 29                    3446 	add	hl, hl
      000DF2 29                    3447 	add	hl, hl
      000DF3 09                    3448 	add	hl, bc
      000DF4 23                    3449 	inc	hl
      000DF5 23                    3450 	inc	hl
      000DF6 36 7F                 3451 	ld	(hl), #0x7f
                                   3452 ;main.c:323: set_sprite_tile(10+i, 0x7f);
      000DF8 18 5D                 3453 	jr	00132$
      000DFA                       3454 00129$:
                                   3455 ;main.c:327: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      000DFA CB 45                 3456 	bit	0, l
      000DFC 20 59                 3457 	jr	NZ, 00132$
      000DFE 79                    3458 	ld	a, c
      000DFF D6 AC                 3459 	sub	a, #0xac
      000E01 78                    3460 	ld	a, b
      000E02 17                    3461 	rla
      000E03 3F                    3462 	ccf
      000E04 1F                    3463 	rra
      000E05 DE 80                 3464 	sbc	a, #0x80
      000E07 30 4E                 3465 	jr	NC, 00132$
      000E09 F8 0C                 3466 	ldhl	sp,#12
      000E0B 2A                    3467 	ld	a, (hl+)
      000E0C 5F                    3468 	ld	e, a
      000E0D 56                    3469 	ld	d, (hl)
      000E0E 1A                    3470 	ld	a, (de)
      000E0F 4F                    3471 	ld	c, a
      000E10 13                    3472 	inc	de
      000E11 1A                    3473 	ld	a, (de)
      000E12 47                    3474 	ld	b, a
      000E13 58                    3475 	ld	e, b
      000E14 AF                    3476 	xor	a, a
      000E15 57                    3477 	ld	d, a
      000E16 B9                    3478 	cp	a, c
      000E17 98                    3479 	sbc	a, b
      000E18 CB 7B                 3480 	bit	7, e
      000E1A 28 07                 3481 	jr	Z, 00300$
      000E1C CB 7A                 3482 	bit	7, d
      000E1E 20 08                 3483 	jr	NZ, 00301$
      000E20 BF                    3484 	cp	a, a
      000E21 18 05                 3485 	jr	00301$
      000E23                       3486 00300$:
      000E23 CB 7A                 3487 	bit	7, d
      000E25 28 01                 3488 	jr	Z, 00301$
      000E27 37                    3489 	scf
      000E28                       3490 00301$:
      000E28 30 2D                 3491 	jr	NC, 00132$
      000E2A 79                    3492 	ld	a, c
      000E2B D6 98                 3493 	sub	a, #0x98
      000E2D 78                    3494 	ld	a, b
      000E2E 17                    3495 	rla
      000E2F 3F                    3496 	ccf
      000E30 1F                    3497 	rra
      000E31 DE 80                 3498 	sbc	a, #0x80
      000E33 30 22                 3499 	jr	NC, 00132$
                                   3500 ;main.c:328: enemies[i].visible = 1;
      000E35 F8 09                 3501 	ldhl	sp,	#9
      000E37 2A                    3502 	ld	a,	(hl+)
      000E38 66                    3503 	ld	h, (hl)
      000E39 6F                    3504 	ld	l, a
      000E3A 36 01                 3505 	ld	(hl), #0x01
                                   3506 ;main.c:329: set_sprite_tile(10+i, enemies[i].sprite0);
      000E3C F8 07                 3507 	ldhl	sp,#7
      000E3E 2A                    3508 	ld	a, (hl+)
      000E3F 5F                    3509 	ld	e, a
      000E40 56                    3510 	ld	d, (hl)
      000E41 21 06 00              3511 	ld	hl, #0x0006
      000E44 19                    3512 	add	hl, de
      000E45 4D                    3513 	ld	c, l
      000E46 44                    3514 	ld	b, h
      000E47 0A                    3515 	ld	a, (bc)
      000E48 4F                    3516 	ld	c, a
      000E49 F8 0E                 3517 	ldhl	sp,	#14
                                   3518 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E4B 6E                    3519 	ld	l, (hl)
      000E4C 11r00r00              3520 	ld	de, #_shadow_OAM+0
                                   3521 ;	spillPairReg hl
                                   3522 ;	spillPairReg hl
      000E4F 26 00                 3523 	ld	h, #0x00
                                   3524 ;	spillPairReg hl
                                   3525 ;	spillPairReg hl
      000E51 29                    3526 	add	hl, hl
      000E52 29                    3527 	add	hl, hl
      000E53 19                    3528 	add	hl, de
      000E54 23                    3529 	inc	hl
      000E55 23                    3530 	inc	hl
      000E56 71                    3531 	ld	(hl), c
                                   3532 ;main.c:329: set_sprite_tile(10+i, enemies[i].sprite0);
      000E57                       3533 00132$:
                                   3534 ;main.c:334: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000E57 F8 0F                 3535 	ldhl	sp,	#15
      000E59 6E                    3536 	ld	l, (hl)
      000E5A 26 00                 3537 	ld	h, #0x00
      000E5C 29                    3538 	add	hl, hl
      000E5D 29                    3539 	add	hl, hl
      000E5E 29                    3540 	add	hl, hl
      000E5F 29                    3541 	add	hl, hl
      000E60 11r00r00              3542 	ld	de, #_enemies
      000E63 19                    3543 	add	hl, de
      000E64 4D                    3544 	ld	c, l
      000E65 44                    3545 	ld	b, h
      000E66 03                    3546 	inc	bc
      000E67 03                    3547 	inc	bc
      000E68 0A                    3548 	ld	a, (bc)
      000E69 47                    3549 	ld	b, a
      000E6A 4E                    3550 	ld	c, (hl)
      000E6B F8 0F                 3551 	ldhl	sp,	#15
      000E6D 7E                    3552 	ld	a, (hl)
      000E6E C6 0A                 3553 	add	a, #0x0a
                                   3554 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E70 6F                    3555 	ld	l, a
                                   3556 ;	spillPairReg hl
                                   3557 ;	spillPairReg hl
      000E71 26 00                 3558 	ld	h, #0x00
                                   3559 ;	spillPairReg hl
                                   3560 ;	spillPairReg hl
      000E73 29                    3561 	add	hl, hl
      000E74 29                    3562 	add	hl, hl
      000E75 11r00r00              3563 	ld	de, #_shadow_OAM
      000E78 19                    3564 	add	hl, de
                                   3565 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E79 78                    3566 	ld	a, b
      000E7A 22                    3567 	ld	(hl+), a
      000E7B 71                    3568 	ld	(hl), c
                                   3569 ;main.c:317: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E7C F8 0F                 3570 	ldhl	sp,	#15
      000E7E 34                    3571 	inc	(hl)
      000E7F C3r10r0D              3572 	jp	00143$
      000E82                       3573 00145$:
                                   3574 ;main.c:336: }
      000E82 E8 10                 3575 	add	sp, #16
      000E84 C9                    3576 	ret
                                   3577 ;main.c:338: void initEnemies(uint8_t loadSprites) {
                                   3578 ;	---------------------------------
                                   3579 ; Function initEnemies
                                   3580 ; ---------------------------------
      000E85                       3581 _initEnemies::
      000E85 E8 F9                 3582 	add	sp, #-7
                                   3583 ;main.c:340: if (loadSprites) {
      000E87 F8 09                 3584 	ldhl	sp,	#9
      000E89 7E                    3585 	ld	a, (hl)
      000E8A B7                    3586 	or	a, a
      000E8B 28 0D                 3587 	jr	Z, 00116$
                                   3588 ;main.c:342: set_sprite_data(9, 2, enemy1);
      000E8D 11r17r05              3589 	ld	de, #_enemy1
      000E90 D5                    3590 	push	de
      000E91 21 09 02              3591 	ld	hl, #0x209
      000E94 E5                    3592 	push	hl
      000E95 CDr00r00              3593 	call	_set_sprite_data
      000E98 E8 04                 3594 	add	sp, #4
                                   3595 ;main.c:347: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E9A                       3596 00116$:
      000E9A 0E 00                 3597 	ld	c, #0x00
      000E9C                       3598 00109$:
      000E9C 21rCCr05              3599 	ld	hl, #_ENEMYCOUNT
      000E9F 46                    3600 	ld	b, (hl)
      000EA0 79                    3601 	ld	a, c
      000EA1 90                    3602 	sub	a, b
      000EA2 D2r3Fr0F              3603 	jp	NC, 00111$
                                   3604 ;main.c:348: if (enemies[i].alive == 0) {
      000EA5 69                    3605 	ld	l, c
                                   3606 ;	spillPairReg hl
                                   3607 ;	spillPairReg hl
      000EA6 26 00                 3608 	ld	h, #0x00
                                   3609 ;	spillPairReg hl
                                   3610 ;	spillPairReg hl
      000EA8 29                    3611 	add	hl, hl
      000EA9 29                    3612 	add	hl, hl
      000EAA 29                    3613 	add	hl, hl
      000EAB 29                    3614 	add	hl, hl
      000EAC 5D                    3615 	ld	e, l
      000EAD 54                    3616 	ld	d, h
      000EAE 21r00r00              3617 	ld	hl, #_enemies
      000EB1 19                    3618 	add	hl, de
      000EB2 33                    3619 	inc	sp
      000EB3 33                    3620 	inc	sp
      000EB4 5D                    3621 	ld	e, l
      000EB5 54                    3622 	ld	d, h
      000EB6 D5                    3623 	push	de
      000EB7 21 09 00              3624 	ld	hl, #0x0009
      000EBA 19                    3625 	add	hl, de
      000EBB 5D                    3626 	ld	e, l
      000EBC 54                    3627 	ld	d, h
      000EBD 1A                    3628 	ld	a, (de)
      000EBE B7                    3629 	or	a, a
      000EBF 20 7A                 3630 	jr	NZ, 00110$
                                   3631 ;main.c:350: enemies[i] = blob;
      000EC1 D1                    3632 	pop	de
      000EC2 D5                    3633 	push	de
      000EC3 C5                    3634 	push	bc
      000EC4 21 10 00              3635 	ld	hl, #0x0010
      000EC7 E5                    3636 	push	hl
      000EC8 21r08r00              3637 	ld	hl, #_blob
      000ECB E5                    3638 	push	hl
      000ECC D5                    3639 	push	de
      000ECD CDr00r00              3640 	call	___memcpy
      000ED0 E8 06                 3641 	add	sp, #6
      000ED2 CDr00r00              3642 	call	_rand
      000ED5 7B                    3643 	ld	a, e
      000ED6 C1                    3644 	pop	bc
      000ED7 E6 07                 3645 	and	a, #0x07
                                   3646 ;main.c:354: enemies[i].x = xSpawnPositions[posIndex];
      000ED9 47                    3647 	ld	b, a
      000EDA C6rCD                 3648 	add	a,#<(_xSpawnPositions)
      000EDC 5F                    3649 	ld	e, a
      000EDD 3Es05                 3650 	ld	a, #>(_xSpawnPositions)
      000EDF CE 00                 3651 	adc	a, #0x00
      000EE1 57                    3652 	ld	d, a
      000EE2 1A                    3653 	ld	a, (de)
      000EE3 F8 02                 3654 	ldhl	sp,	#2
      000EE5 22                    3655 	ld	(hl+), a
      000EE6 AF                    3656 	xor	a, a
      000EE7 32                    3657 	ld	(hl-), a
      000EE8 D1                    3658 	pop	de
      000EE9 D5                    3659 	push	de
      000EEA 2A                    3660 	ld	a, (hl+)
      000EEB 12                    3661 	ld	(de), a
      000EEC 13                    3662 	inc	de
      000EED 7E                    3663 	ld	a, (hl)
      000EEE 12                    3664 	ld	(de), a
                                   3665 ;main.c:355: enemies[i].y = ySpawnPositions[posIndex];
      000EEF D1                    3666 	pop	de
      000EF0 D5                    3667 	push	de
      000EF1 13                    3668 	inc	de
      000EF2 13                    3669 	inc	de
      000EF3 78                    3670 	ld	a, b
      000EF4 C6rD5                 3671 	add	a, #<(_ySpawnPositions)
      000EF6 6F                    3672 	ld	l, a
                                   3673 ;	spillPairReg hl
                                   3674 ;	spillPairReg hl
      000EF7 3E 00                 3675 	ld	a, #0x00
      000EF9 CEs05                 3676 	adc	a, #>(_ySpawnPositions)
      000EFB 67                    3677 	ld	h, a
                                   3678 ;	spillPairReg hl
                                   3679 ;	spillPairReg hl
      000EFC 7E                    3680 	ld	a, (hl)
      000EFD F8 04                 3681 	ldhl	sp,	#4
      000EFF 22                    3682 	ld	(hl+), a
      000F00 AF                    3683 	xor	a, a
      000F01 32                    3684 	ld	(hl-), a
      000F02 2A                    3685 	ld	a, (hl+)
      000F03 12                    3686 	ld	(de), a
      000F04 13                    3687 	inc	de
      000F05 7E                    3688 	ld	a, (hl)
      000F06 12                    3689 	ld	(de), a
                                   3690 ;main.c:357: set_sprite_tile(10+i, enemies[i].sprite0);
      000F07 D1                    3691 	pop	de
      000F08 D5                    3692 	push	de
      000F09 21 06 00              3693 	ld	hl, #0x0006
      000F0C 19                    3694 	add	hl, de
      000F0D 5D                    3695 	ld	e, l
      000F0E 54                    3696 	ld	d, h
      000F0F 1A                    3697 	ld	a, (de)
      000F10 47                    3698 	ld	b, a
      000F11 79                    3699 	ld	a, c
      000F12 C6 0A                 3700 	add	a, #0x0a
      000F14 F8 06                 3701 	ldhl	sp,	#6
      000F16 77                    3702 	ld	(hl), a
      000F17 5E                    3703 	ld	e, (hl)
                                   3704 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F18 26 00                 3705 	ld	h, #0x00
                                   3706 ;	spillPairReg hl
                                   3707 ;	spillPairReg hl
      000F1A 6B                    3708 	ld	l, e
      000F1B 29                    3709 	add	hl, hl
      000F1C 29                    3710 	add	hl, hl
      000F1D 11r00r00              3711 	ld	de, #_shadow_OAM
      000F20 19                    3712 	add	hl, de
      000F21 23                    3713 	inc	hl
      000F22 23                    3714 	inc	hl
      000F23 70                    3715 	ld	(hl), b
                                   3716 ;main.c:358: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000F24 F8 04                 3717 	ldhl	sp,	#4
      000F26 3A                    3718 	ld	a, (hl-)
      000F27 2B                    3719 	dec	hl
      000F28 5F                    3720 	ld	e, a
      000F29 46                    3721 	ld	b, (hl)
      000F2A F8 06                 3722 	ldhl	sp,	#6
      000F2C 56                    3723 	ld	d, (hl)
                                   3724 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000F2D 26 00                 3725 	ld	h, #0x00
                                   3726 ;	spillPairReg hl
                                   3727 ;	spillPairReg hl
      000F2F 6A                    3728 	ld	l, d
      000F30 29                    3729 	add	hl, hl
      000F31 29                    3730 	add	hl, hl
      000F32 D5                    3731 	push	de
      000F33 11r00r00              3732 	ld	de, #_shadow_OAM
      000F36 19                    3733 	add	hl, de
      000F37 D1                    3734 	pop	de
                                   3735 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000F38 7B                    3736 	ld	a, e
      000F39 22                    3737 	ld	(hl+), a
      000F3A 70                    3738 	ld	(hl), b
                                   3739 ;main.c:358: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000F3B                       3740 00110$:
                                   3741 ;main.c:347: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000F3B 0C                    3742 	inc	c
      000F3C C3r9Cr0E              3743 	jp	00109$
      000F3F                       3744 00111$:
                                   3745 ;main.c:361: }
      000F3F E8 07                 3746 	add	sp, #7
      000F41 C9                    3747 	ret
                                   3748 ;main.c:364: void move() {
                                   3749 ;	---------------------------------
                                   3750 ; Function move
                                   3751 ; ---------------------------------
      000F42                       3752 _move::
      000F42 E8 F8                 3753 	add	sp, #-8
                                   3754 ;main.c:368: if (joydata & J_A) {
      000F44 FAr87r00              3755 	ld	a, (#_joydata)
      000F47 CB 67                 3756 	bit	4, a
      000F49 28 16                 3757 	jr	Z, 00102$
                                   3758 ;main.c:369: xSpeed += xDir + xDir + xDir;
      000F4B 21r3Br00              3759 	ld	hl, #_xDir
      000F4E 7E                    3760 	ld	a, (hl)
      000F4F 87                    3761 	add	a, a
      000F50 86                    3762 	add	a, (hl)
      000F51 21r3Dr00              3763 	ld	hl, #_xSpeed
      000F54 86                    3764 	add	a, (hl)
      000F55 77                    3765 	ld	(hl), a
                                   3766 ;main.c:370: ySpeed += yDir + yDir + yDir;
      000F56 21r3Cr00              3767 	ld	hl, #_yDir
      000F59 7E                    3768 	ld	a, (hl)
      000F5A 87                    3769 	add	a, a
      000F5B 86                    3770 	add	a, (hl)
      000F5C 21r3Er00              3771 	ld	hl, #_ySpeed
      000F5F 86                    3772 	add	a, (hl)
      000F60 77                    3773 	ld	(hl), a
      000F61                       3774 00102$:
                                   3775 ;main.c:374: xSpeed = clamp(xSpeed, -100, 100);
      000F61 21r3Dr00              3776 	ld	hl, #_xSpeed
      000F64 4E                    3777 	ld	c, (hl)
                                   3778 ;main.c:196: return (value < min) ? min : (value > max) ? max : value;
      000F65 79                    3779 	ld	a, c
      000F66 EE 80                 3780 	xor	a, #0x80
      000F68 D6 1C                 3781 	sub	a, #0x1c
      000F6A 30 04                 3782 	jr	NC, 00159$
      000F6C 0E 9C                 3783 	ld	c, #0x9c
      000F6E 18 19                 3784 	jr	00160$
      000F70                       3785 00159$:
      000F70 59                    3786 	ld	e, c
      000F71 3E 64                 3787 	ld	a,#0x64
      000F73 57                    3788 	ld	d,a
      000F74 91                    3789 	sub	a, c
      000F75 CB 7B                 3790 	bit	7, e
      000F77 28 07                 3791 	jr	Z, 00331$
      000F79 CB 7A                 3792 	bit	7, d
      000F7B 20 08                 3793 	jr	NZ, 00332$
      000F7D BF                    3794 	cp	a, a
      000F7E 18 05                 3795 	jr	00332$
      000F80                       3796 00331$:
      000F80 CB 7A                 3797 	bit	7, d
      000F82 28 01                 3798 	jr	Z, 00332$
      000F84 37                    3799 	scf
      000F85                       3800 00332$:
      000F85 30 02                 3801 	jr	NC, 00161$
      000F87 0E 64                 3802 	ld	c, #0x64
      000F89                       3803 00161$:
      000F89                       3804 00160$:
      000F89 21r3Dr00              3805 	ld	hl, #_xSpeed
      000F8C 71                    3806 	ld	(hl), c
                                   3807 ;main.c:375: ySpeed = clamp(ySpeed, -100, 100);
      000F8D 21r3Er00              3808 	ld	hl, #_ySpeed
      000F90 4E                    3809 	ld	c, (hl)
                                   3810 ;main.c:196: return (value < min) ? min : (value > max) ? max : value;
      000F91 79                    3811 	ld	a, c
      000F92 EE 80                 3812 	xor	a, #0x80
      000F94 D6 1C                 3813 	sub	a, #0x1c
      000F96 30 04                 3814 	jr	NC, 00163$
      000F98 0E 9C                 3815 	ld	c, #0x9c
      000F9A 18 19                 3816 	jr	00164$
      000F9C                       3817 00163$:
      000F9C 59                    3818 	ld	e, c
      000F9D 3E 64                 3819 	ld	a,#0x64
      000F9F 57                    3820 	ld	d,a
      000FA0 91                    3821 	sub	a, c
      000FA1 CB 7B                 3822 	bit	7, e
      000FA3 28 07                 3823 	jr	Z, 00333$
      000FA5 CB 7A                 3824 	bit	7, d
      000FA7 20 08                 3825 	jr	NZ, 00334$
      000FA9 BF                    3826 	cp	a, a
      000FAA 18 05                 3827 	jr	00334$
      000FAC                       3828 00333$:
      000FAC CB 7A                 3829 	bit	7, d
      000FAE 28 01                 3830 	jr	Z, 00334$
      000FB0 37                    3831 	scf
      000FB1                       3832 00334$:
      000FB1 30 02                 3833 	jr	NC, 00165$
      000FB3 0E 64                 3834 	ld	c, #0x64
      000FB5                       3835 00165$:
      000FB5                       3836 00164$:
      000FB5 21r3Er00              3837 	ld	hl, #_ySpeed
      000FB8 71                    3838 	ld	(hl), c
                                   3839 ;main.c:377: xOverflow = 0;
      000FB9 AF                    3840 	xor	a, a
      000FBA 21r49r00              3841 	ld	hl, #_xOverflow
      000FBD 22                    3842 	ld	(hl+), a
      000FBE 77                    3843 	ld	(hl), a
                                   3844 ;main.c:378: yOverflow = 0;
      000FBF AF                    3845 	xor	a, a
      000FC0 21r4Br00              3846 	ld	hl, #_yOverflow
      000FC3 22                    3847 	ld	(hl+), a
      000FC4 77                    3848 	ld	(hl), a
                                   3849 ;main.c:383: uint8_t xCollisionPoint = playerDrawX -4; 
      000FC5 21r43r00              3850 	ld	hl, #_playerDrawX
      000FC8 46                    3851 	ld	b, (hl)
      000FC9 78                    3852 	ld	a, b
      000FCA C6 FC                 3853 	add	a, #0xfc
      000FCC 4F                    3854 	ld	c, a
                                   3855 ;main.c:385: if (xSpeed > 0) {
      000FCD 21r3Dr00              3856 	ld	hl, #_xSpeed
      000FD0 5E                    3857 	ld	e, (hl)
      000FD1 AF                    3858 	xor	a, a
      000FD2 57                    3859 	ld	d, a
      000FD3 96                    3860 	sub	a, (hl)
      000FD4 CB 7B                 3861 	bit	7, e
      000FD6 28 07                 3862 	jr	Z, 00335$
      000FD8 CB 7A                 3863 	bit	7, d
      000FDA 20 08                 3864 	jr	NZ, 00336$
      000FDC BF                    3865 	cp	a, a
      000FDD 18 05                 3866 	jr	00336$
      000FDF                       3867 00335$:
      000FDF CB 7A                 3868 	bit	7, d
      000FE1 28 01                 3869 	jr	Z, 00336$
      000FE3 37                    3870 	scf
      000FE4                       3871 00336$:
      000FE4 30 04                 3872 	jr	NC, 00104$
                                   3873 ;main.c:386: xCollisionPoint = playerDrawX; //right edge
      000FE6 21r43r00              3874 	ld	hl, #_playerDrawX
      000FE9 4E                    3875 	ld	c, (hl)
      000FEA                       3876 00104$:
                                   3877 ;main.c:388: if (xSpeed < 0) {
      000FEA FAr3Dr00              3878 	ld	a, (#_xSpeed)
      000FED CB 7F                 3879 	bit	7, a
      000FEF 28 04                 3880 	jr	Z, 00106$
                                   3881 ;main.c:389: xCollisionPoint = playerDrawX -8; //left edge
      000FF1 78                    3882 	ld	a, b
      000FF2 C6 F8                 3883 	add	a, #0xf8
      000FF4 4F                    3884 	ld	c, a
      000FF5                       3885 00106$:
                                   3886 ;main.c:393: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      000FF5 06 00                 3887 	ld	b, #0x00
      000FF7 79                    3888 	ld	a, c
      000FF8 21r45r00              3889 	ld	hl, #_bgX
      000FFB 86                    3890 	add	a, (hl)
      000FFC 23                    3891 	inc	hl
      000FFD 4F                    3892 	ld	c, a
      000FFE 78                    3893 	ld	a, b
      000FFF 8E                    3894 	adc	a, (hl)
      001000 47                    3895 	ld	b, a
      001001 CB 28                 3896 	sra	b
      001003 CB 19                 3897 	rr	c
      001005 CB 28                 3898 	sra	b
      001007 CB 19                 3899 	rr	c
      001009 CB 28                 3900 	sra	b
      00100B CB 19                 3901 	rr	c
      00100D 11 20 00              3902 	ld	de, #0x0020
      001010 D5                    3903 	push	de
      001011 C5                    3904 	push	bc
      001012 CDr00r00              3905 	call	__modsint
      001015 E8 04                 3906 	add	sp, #4
                                   3907 ;main.c:397: uint8_t bgindY = ((playerDrawY-12 + bgY) >> 3)%32; 
      001017 FAr44r00              3908 	ld	a, (#_playerDrawY)
      00101A 06 00                 3909 	ld	b, #0x00
      00101C C6 F4                 3910 	add	a, #0xf4
      00101E 4F                    3911 	ld	c, a
      00101F 78                    3912 	ld	a, b
      001020 CE FF                 3913 	adc	a, #0xff
      001022 47                    3914 	ld	b, a
      001023 79                    3915 	ld	a, c
      001024 21r47r00              3916 	ld	hl, #_bgY
      001027 86                    3917 	add	a, (hl)
      001028 23                    3918 	inc	hl
      001029 4F                    3919 	ld	c, a
      00102A 78                    3920 	ld	a, b
      00102B 8E                    3921 	adc	a, (hl)
      00102C 47                    3922 	ld	b, a
      00102D CB 28                 3923 	sra	b
      00102F CB 19                 3924 	rr	c
      001031 CB 28                 3925 	sra	b
      001033 CB 19                 3926 	rr	c
      001035 CB 28                 3927 	sra	b
      001037 CB 19                 3928 	rr	c
      001039 D5                    3929 	push	de
      00103A 21 20 00              3930 	ld	hl, #0x0020
      00103D E5                    3931 	push	hl
      00103E C5                    3932 	push	bc
      00103F CDr00r00              3933 	call	__modsint
      001042 E8 04                 3934 	add	sp, #4
      001044 6B                    3935 	ld	l, e
                                   3936 ;	spillPairReg hl
                                   3937 ;	spillPairReg hl
                                   3938 ;	spillPairReg hl
                                   3939 ;	spillPairReg hl
      001045 D1                    3940 	pop	de
                                   3941 ;main.c:400: uint16_t ind = 32*bgindY + bgindX;
      001046 26 00                 3942 	ld	h, #0x00
                                   3943 ;	spillPairReg hl
                                   3944 ;	spillPairReg hl
      001048 29                    3945 	add	hl, hl
      001049 29                    3946 	add	hl, hl
      00104A 29                    3947 	add	hl, hl
      00104B 29                    3948 	add	hl, hl
      00104C 29                    3949 	add	hl, hl
      00104D 19                    3950 	add	hl, de
      00104E 5D                    3951 	ld	e, l
      00104F 54                    3952 	ld	d, h
                                   3953 ;main.c:401: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001050 0E 01                 3954 	ld	c, #0x01
                                   3955 ;main.c:402: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001052 21r87r00              3956 	ld	hl, #_background1
      001055 19                    3957 	add	hl, de
      001056 46                    3958 	ld	b, (hl)
      001057 1E 00                 3959 	ld	e, #0x00
      001059                       3960 00152$:
      001059 FArC7r05              3961 	ld	a, (#_BLANKSIZE)
      00105C F8 02                 3962 	ldhl	sp,	#2
      00105E 77                    3963 	ld	(hl), a
      00105F 7B                    3964 	ld	a, e
      001060 96                    3965 	sub	a, (hl)
      001061 30 11                 3966 	jr	NC, 00109$
                                   3967 ;main.c:403: if (background1[ind] == BLANK[i] ) {
      001063 21rC8r05              3968 	ld	hl, #_BLANK
      001066 16 00                 3969 	ld	d, #0x00
      001068 19                    3970 	add	hl, de
      001069 56                    3971 	ld	d, (hl)
      00106A 78                    3972 	ld	a, b
                                   3973 ;main.c:404: result = 0;
      00106B 92                    3974 	sub	a,d
      00106C 20 03                 3975 	jr	NZ, 00153$
      00106E 4F                    3976 	ld	c,a
                                   3977 ;main.c:405: break;
      00106F 18 03                 3978 	jr	00109$
      001071                       3979 00153$:
                                   3980 ;main.c:402: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001071 1C                    3981 	inc	e
      001072 18 E5                 3982 	jr	00152$
      001074                       3983 00109$:
                                   3984 ;main.c:409: if (result == 0) {
      001074 79                    3985 	ld	a, c
      001075 B7                    3986 	or	a, a
      001076 C2r44r11              3987 	jp	NZ, 00114$
                                   3988 ;main.c:410: playerX+=xSpeed;
      001079 FAr3Dr00              3989 	ld	a, (#_xSpeed)
      00107C 4F                    3990 	ld	c, a
      00107D 07                    3991 	rlca
      00107E 9F                    3992 	sbc	a, a
      00107F 47                    3993 	ld	b, a
      001080 21r3Fr00              3994 	ld	hl, #_playerX
      001083 6E                    3995 	ld	l, (hl)
                                   3996 ;	spillPairReg hl
                                   3997 ;	spillPairReg hl
      001084 FAr40r00              3998 	ld	a, (_playerX + 1)
      001087 67                    3999 	ld	h, a
                                   4000 ;	spillPairReg hl
                                   4001 ;	spillPairReg hl
      001088 09                    4002 	add	hl, bc
      001089 4D                    4003 	ld	c, l
      00108A 44                    4004 	ld	b, h
      00108B 21r3Fr00              4005 	ld	hl, #_playerX
      00108E 79                    4006 	ld	a, c
      00108F 22                    4007 	ld	(hl+), a
                                   4008 ;main.c:412: uint16_t limitedPlayerX = u16Clamp(playerX, 58<<5, 110<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001090 78                    4009 	ld	a, b
      001091 32                    4010 	ld	(hl-), a
      001092 2A                    4011 	ld	a, (hl+)
      001093 4F                    4012 	ld	c, a
      001094 46                    4013 	ld	b, (hl)
      001095 79                    4014 	ld	a, c
      001096 D6 40                 4015 	sub	a, #0x40
      001098 78                    4016 	ld	a, b
      001099 DE 07                 4017 	sbc	a, #0x07
      00109B 30 05                 4018 	jr	NC, 00167$
      00109D 01 40 07              4019 	ld	bc, #0x0740
      0010A0 18 0B                 4020 	jr	00168$
      0010A2                       4021 00167$:
      0010A2 3E C0                 4022 	ld	a, #0xc0
      0010A4 B9                    4023 	cp	a, c
      0010A5 3E 0D                 4024 	ld	a, #0x0d
      0010A7 98                    4025 	sbc	a, b
      0010A8 30 03                 4026 	jr	NC, 00169$
      0010AA 01 C0 0D              4027 	ld	bc, #0x0dc0
      0010AD                       4028 00169$:
      0010AD                       4029 00168$:
      0010AD 59                    4030 	ld	e,c
      0010AE 50                    4031 	ld	d,b
                                   4032 ;main.c:414: xOverflow = (playerX - limitedPlayerX);
      0010AF FAr3Fr00              4033 	ld	a, (#_playerX)
      0010B2 93                    4034 	sub	a, e
      0010B3 EAr49r00              4035 	ld	(#_xOverflow),a
      0010B6 FAr40r00              4036 	ld	a, (#_playerX + 1)
      0010B9 9A                    4037 	sbc	a, d
      0010BA 21r4Ar00              4038 	ld	hl, #_xOverflow + 1
                                   4039 ;main.c:415: if (xOverflow >= 0) {
      0010BD 32                    4040 	ld	(hl-), a
      0010BE 6E                    4041 	ld	l, (hl)
                                   4042 ;	spillPairReg hl
                                   4043 ;	spillPairReg hl
      0010BF FAr4Ar00              4044 	ld	a, (_xOverflow + 1)
                                   4045 ;	spillPairReg hl
                                   4046 ;	spillPairReg hl
      0010C2 CB 7F                 4047 	bit	7,a
      0010C4 20 22                 4048 	jr	NZ, 00111$
                                   4049 ;main.c:416: xOverflow = xOverflow >> 5;
      0010C6 21r4Ar00              4050 	ld	hl, #_xOverflow + 1
      0010C9 CB 2E                 4051 	sra	(hl)
      0010CB 2B                    4052 	dec	hl
      0010CC CB 1E                 4053 	rr	(hl)
      0010CE 23                    4054 	inc	hl
      0010CF CB 2E                 4055 	sra	(hl)
      0010D1 2B                    4056 	dec	hl
      0010D2 CB 1E                 4057 	rr	(hl)
      0010D4 23                    4058 	inc	hl
      0010D5 CB 2E                 4059 	sra	(hl)
      0010D7 2B                    4060 	dec	hl
      0010D8 CB 1E                 4061 	rr	(hl)
      0010DA 23                    4062 	inc	hl
      0010DB CB 2E                 4063 	sra	(hl)
      0010DD 2B                    4064 	dec	hl
      0010DE CB 1E                 4065 	rr	(hl)
      0010E0 23                    4066 	inc	hl
      0010E1 CB 2E                 4067 	sra	(hl)
      0010E3 2B                    4068 	dec	hl
      0010E4 CB 1E                 4069 	rr	(hl)
      0010E6 18 25                 4070 	jr	00112$
      0010E8                       4071 00111$:
                                   4072 ;main.c:419: xOverflow = -((-xOverflow) >> 5);
      0010E8 AF                    4073 	xor	a, a
      0010E9 21r49r00              4074 	ld	hl, #_xOverflow
      0010EC 96                    4075 	sub	a, (hl)
      0010ED 23                    4076 	inc	hl
      0010EE 5F                    4077 	ld	e, a
      0010EF 9F                    4078 	sbc	a, a
      0010F0 96                    4079 	sub	a, (hl)
      0010F1 2B                    4080 	dec	hl
      0010F2 57                    4081 	ld	d, a
      0010F3 CB 2A                 4082 	sra	d
      0010F5 CB 1B                 4083 	rr	e
      0010F7 CB 2A                 4084 	sra	d
      0010F9 CB 1B                 4085 	rr	e
      0010FB CB 2A                 4086 	sra	d
      0010FD CB 1B                 4087 	rr	e
      0010FF CB 2A                 4088 	sra	d
      001101 CB 1B                 4089 	rr	e
      001103 CB 2A                 4090 	sra	d
      001105 CB 1B                 4091 	rr	e
      001107 AF                    4092 	xor	a, a
      001108 93                    4093 	sub	a, e
      001109 22                    4094 	ld	(hl+), a
      00110A 9F                    4095 	sbc	a, a
      00110B 92                    4096 	sub	a, d
      00110C 77                    4097 	ld	(hl), a
      00110D                       4098 00112$:
                                   4099 ;main.c:421: bgX += xOverflow;
      00110D FAr45r00              4100 	ld	a, (#_bgX)
      001110 21r49r00              4101 	ld	hl, #_xOverflow
      001113 86                    4102 	add	a, (hl)
      001114 21r45r00              4103 	ld	hl, #_bgX
      001117 22                    4104 	ld	(hl+), a
      001118 7E                    4105 	ld	a, (hl)
      001119 21r4Ar00              4106 	ld	hl, #_xOverflow + 1
      00111C 8E                    4107 	adc	a, (hl)
      00111D EAr46r00              4108 	ld	(#_bgX + 1),a
                                   4109 ;main.c:422: playerX = limitedPlayerX;
      001120 21r3Fr00              4110 	ld	hl, #_playerX
      001123 79                    4111 	ld	a, c
      001124 22                    4112 	ld	(hl+), a
                                   4113 ;main.c:423: playerDrawX=playerX >> 5;
      001125 78                    4114 	ld	a, b
      001126 32                    4115 	ld	(hl-), a
      001127 2A                    4116 	ld	a, (hl+)
      001128 4F                    4117 	ld	c, a
      001129 46                    4118 	ld	b, (hl)
      00112A CB 38                 4119 	srl	b
      00112C CB 19                 4120 	rr	c
      00112E CB 38                 4121 	srl	b
      001130 CB 19                 4122 	rr	c
      001132 CB 38                 4123 	srl	b
      001134 CB 19                 4124 	rr	c
      001136 CB 38                 4125 	srl	b
      001138 CB 19                 4126 	rr	c
      00113A CB 38                 4127 	srl	b
      00113C CB 19                 4128 	rr	c
      00113E 21r43r00              4129 	ld	hl, #_playerDrawX
      001141 71                    4130 	ld	(hl), c
      001142 18 05                 4131 	jr	00115$
      001144                       4132 00114$:
                                   4133 ;main.c:431: xSpeed = 0;
      001144 21r3Dr00              4134 	ld	hl, #_xSpeed
      001147 36 00                 4135 	ld	(hl), #0x00
      001149                       4136 00115$:
                                   4137 ;main.c:439: uint8_t yCollisionPoint = playerDrawY -12; 
      001149 21r44r00              4138 	ld	hl, #_playerDrawY
      00114C 4E                    4139 	ld	c, (hl)
      00114D 79                    4140 	ld	a, c
      00114E C6 F4                 4141 	add	a, #0xf4
      001150 F8 07                 4142 	ldhl	sp,	#7
      001152 77                    4143 	ld	(hl), a
                                   4144 ;main.c:441: if (ySpeed > 0) {
      001153 21r3Er00              4145 	ld	hl, #_ySpeed
      001156 5E                    4146 	ld	e, (hl)
      001157 AF                    4147 	xor	a, a
      001158 57                    4148 	ld	d, a
      001159 96                    4149 	sub	a, (hl)
      00115A CB 7B                 4150 	bit	7, e
      00115C 28 07                 4151 	jr	Z, 00339$
      00115E CB 7A                 4152 	bit	7, d
      001160 20 08                 4153 	jr	NZ, 00340$
      001162 BF                    4154 	cp	a, a
      001163 18 05                 4155 	jr	00340$
      001165                       4156 00339$:
      001165 CB 7A                 4157 	bit	7, d
      001167 28 01                 4158 	jr	Z, 00340$
      001169 37                    4159 	scf
      00116A                       4160 00340$:
      00116A 30 06                 4161 	jr	NC, 00117$
                                   4162 ;main.c:442: yCollisionPoint = playerDrawY - 8; //bottom edge, only half the height, so -8
      00116C 79                    4163 	ld	a, c
      00116D C6 F8                 4164 	add	a, #0xf8
      00116F F8 07                 4165 	ldhl	sp,	#7
      001171 77                    4166 	ld	(hl), a
      001172                       4167 00117$:
                                   4168 ;main.c:444: if (ySpeed < 0) {
      001172 FAr3Er00              4169 	ld	a, (#_ySpeed)
      001175 CB 7F                 4170 	bit	7, a
      001177 28 06                 4171 	jr	Z, 00119$
                                   4172 ;main.c:445: yCollisionPoint = playerDrawY -16; //top edge, 
      001179 79                    4173 	ld	a, c
      00117A C6 F0                 4174 	add	a, #0xf0
      00117C F8 07                 4175 	ldhl	sp,	#7
      00117E 77                    4176 	ld	(hl), a
      00117F                       4177 00119$:
                                   4178 ;main.c:449: bgindX = ((playerDrawX -4 + bgX) >> 3)%32;
      00117F FAr43r00              4179 	ld	a, (#_playerDrawX)
      001182 F8 03                 4180 	ldhl	sp,	#3
      001184 22                    4181 	ld	(hl+), a
      001185 AF                    4182 	xor	a, a
      001186 32                    4183 	ld	(hl-), a
      001187 2A                    4184 	ld	a, (hl+)
      001188 5F                    4185 	ld	e, a
      001189 56                    4186 	ld	d, (hl)
      00118A 21 04 00              4187 	ld	hl, #0x0004
      00118D 7B                    4188 	ld	a, e
      00118E 95                    4189 	sub	a, l
      00118F 5F                    4190 	ld	e, a
      001190 7A                    4191 	ld	a, d
      001191 9C                    4192 	sbc	a, h
      001192 F8 06                 4193 	ldhl	sp,	#6
      001194 32                    4194 	ld	(hl-), a
      001195 73                    4195 	ld	(hl), e
      001196 3A                    4196 	ld	a, (hl-)
      001197 2B                    4197 	dec	hl
      001198 77                    4198 	ld	(hl), a
      001199 F8 06                 4199 	ldhl	sp,	#6
      00119B 3A                    4200 	ld	a, (hl-)
      00119C 2B                    4201 	dec	hl
      00119D 32                    4202 	ld	(hl-), a
      00119E 2A                    4203 	ld	a, (hl+)
      00119F 5F                    4204 	ld	e, a
      0011A0 56                    4205 	ld	d, (hl)
      0011A1 21r45r00              4206 	ld	hl, #_bgX
      0011A4 2A                    4207 	ld	a,	(hl+)
      0011A5 66                    4208 	ld	h, (hl)
      0011A6 6F                    4209 	ld	l, a
      0011A7 19                    4210 	add	hl, de
      0011A8 E5                    4211 	push	hl
      0011A9 7D                    4212 	ld	a, l
      0011AA F8 07                 4213 	ldhl	sp,	#7
      0011AC 77                    4214 	ld	(hl), a
      0011AD E1                    4215 	pop	hl
      0011AE 7C                    4216 	ld	a, h
      0011AF F8 06                 4217 	ldhl	sp,	#6
      0011B1 77                    4218 	ld	(hl), a
      0011B2 CB 2E                 4219 	sra	(hl)
      0011B4 2B                    4220 	dec	hl
      0011B5 CB 1E                 4221 	rr	(hl)
      0011B7 23                    4222 	inc	hl
      0011B8 CB 2E                 4223 	sra	(hl)
      0011BA 2B                    4224 	dec	hl
      0011BB CB 1E                 4225 	rr	(hl)
      0011BD 23                    4226 	inc	hl
      0011BE CB 2E                 4227 	sra	(hl)
      0011C0 2B                    4228 	dec	hl
      0011C1 CB 1E                 4229 	rr	(hl)
      0011C3 11 20 00              4230 	ld	de, #0x0020
      0011C6 D5                    4231 	push	de
      0011C7 2A                    4232 	ld	a, (hl+)
      0011C8 5F                    4233 	ld	e, a
      0011C9 56                    4234 	ld	d, (hl)
      0011CA D5                    4235 	push	de
      0011CB CDr00r00              4236 	call	__modsint
      0011CE E8 04                 4237 	add	sp, #4
      0011D0 F8 05                 4238 	ldhl	sp,	#5
      0011D2 7B                    4239 	ld	a, e
      0011D3 22                    4240 	ld	(hl+), a
      0011D4 72                    4241 	ld	(hl), d
      0011D5 F8 05                 4242 	ldhl	sp,	#5
      0011D7 7E                    4243 	ld	a, (hl)
      0011D8 F8 00                 4244 	ldhl	sp,	#0
      0011DA 77                    4245 	ld	(hl), a
      0011DB F8 06                 4246 	ldhl	sp,	#6
      0011DD 7E                    4247 	ld	a, (hl)
      0011DE F8 01                 4248 	ldhl	sp,	#1
      0011E0 77                    4249 	ld	(hl), a
                                   4250 ;main.c:452: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      0011E1 F8 07                 4251 	ldhl	sp,	#7
      0011E3 3A                    4252 	ld	a, (hl-)
      0011E4 22                    4253 	ld	(hl+), a
      0011E5 AF                    4254 	xor	a, a
      0011E6 32                    4255 	ld	(hl-), a
      0011E7 3A                    4256 	ld	a, (hl-)
      0011E8 2B                    4257 	dec	hl
      0011E9 77                    4258 	ld	(hl), a
      0011EA F8 07                 4259 	ldhl	sp,	#7
      0011EC 3A                    4260 	ld	a, (hl-)
      0011ED 2B                    4261 	dec	hl
      0011EE 32                    4262 	ld	(hl-), a
      0011EF 2A                    4263 	ld	a, (hl+)
      0011F0 5F                    4264 	ld	e, a
      0011F1 56                    4265 	ld	d, (hl)
      0011F2 21r47r00              4266 	ld	hl, #_bgY
      0011F5 2A                    4267 	ld	a,	(hl+)
      0011F6 66                    4268 	ld	h, (hl)
      0011F7 6F                    4269 	ld	l, a
      0011F8 19                    4270 	add	hl, de
      0011F9 E5                    4271 	push	hl
      0011FA 7D                    4272 	ld	a, l
      0011FB F8 08                 4273 	ldhl	sp,	#8
      0011FD 77                    4274 	ld	(hl), a
      0011FE E1                    4275 	pop	hl
      0011FF 7C                    4276 	ld	a, h
      001200 F8 07                 4277 	ldhl	sp,	#7
      001202 77                    4278 	ld	(hl), a
      001203 CB 2E                 4279 	sra	(hl)
      001205 2B                    4280 	dec	hl
      001206 CB 1E                 4281 	rr	(hl)
      001208 23                    4282 	inc	hl
      001209 CB 2E                 4283 	sra	(hl)
      00120B 2B                    4284 	dec	hl
      00120C CB 1E                 4285 	rr	(hl)
      00120E 23                    4286 	inc	hl
      00120F CB 2E                 4287 	sra	(hl)
      001211 2B                    4288 	dec	hl
      001212 CB 1E                 4289 	rr	(hl)
      001214 11 20 00              4290 	ld	de, #0x0020
      001217 D5                    4291 	push	de
      001218 2A                    4292 	ld	a, (hl+)
      001219 5F                    4293 	ld	e, a
      00121A 56                    4294 	ld	d, (hl)
      00121B D5                    4295 	push	de
      00121C CDr00r00              4296 	call	__modsint
      00121F E8 04                 4297 	add	sp, #4
      001221 F8 06                 4298 	ldhl	sp,	#6
      001223 7B                    4299 	ld	a, e
      001224 22                    4300 	ld	(hl+), a
      001225 72                    4301 	ld	(hl), d
      001226 F8 06                 4302 	ldhl	sp,	#6
      001228 2A                    4303 	ld	a, (hl+)
      001229 77                    4304 	ld	(hl), a
                                   4305 ;main.c:455: ind = 32*bgindY + bgindX;
      00122A 3A                    4306 	ld	a, (hl-)
      00122B 22                    4307 	ld	(hl+), a
      00122C 36 00                 4308 	ld	(hl), #0x00
      00122E 3E 05                 4309 	ld	a, #0x05
      001230                       4310 00341$:
      001230 F8 06                 4311 	ldhl	sp,	#6
      001232 CB 26                 4312 	sla	(hl)
      001234 23                    4313 	inc	hl
      001235 CB 16                 4314 	rl	(hl)
      001237 3D                    4315 	dec	a
      001238 20 F6                 4316 	jr	NZ, 00341$
      00123A 2B                    4317 	dec	hl
      00123B 3A                    4318 	ld	a, (hl-)
      00123C 2B                    4319 	dec	hl
      00123D 77                    4320 	ld	(hl), a
      00123E F8 07                 4321 	ldhl	sp,	#7
      001240 3A                    4322 	ld	a, (hl-)
      001241 2B                    4323 	dec	hl
      001242 77                    4324 	ld	(hl), a
      001243 D1                    4325 	pop	de
      001244 D5                    4326 	push	de
      001245 3A                    4327 	ld	a, (hl-)
      001246 6E                    4328 	ld	l, (hl)
      001247 67                    4329 	ld	h, a
      001248 19                    4330 	add	hl, de
      001249 E5                    4331 	push	hl
      00124A 7D                    4332 	ld	a, l
      00124B F8 08                 4333 	ldhl	sp,	#8
      00124D 77                    4334 	ld	(hl), a
      00124E E1                    4335 	pop	hl
      00124F 7C                    4336 	ld	a, h
      001250 F8 07                 4337 	ldhl	sp,	#7
      001252 77                    4338 	ld	(hl), a
                                   4339 ;main.c:456: result = 1;
      001253 F8 03                 4340 	ldhl	sp,	#3
      001255 36 01                 4341 	ld	(hl), #0x01
                                   4342 ;main.c:457: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001257 F8 06                 4343 	ldhl	sp,#6
      001259 2A                    4344 	ld	a, (hl+)
      00125A 5F                    4345 	ld	e, a
      00125B 56                    4346 	ld	d, (hl)
      00125C 21r87r00              4347 	ld	hl, #_background1
      00125F 19                    4348 	add	hl, de
      001260 4D                    4349 	ld	c, l
      001261 44                    4350 	ld	b, h
      001262 0A                    4351 	ld	a, (bc)
      001263 F8 04                 4352 	ldhl	sp,	#4
      001265 77                    4353 	ld	(hl), a
      001266 F8 07                 4354 	ldhl	sp,	#7
      001268 36 00                 4355 	ld	(hl), #0x00
      00126A                       4356 00155$:
      00126A F8 07                 4357 	ldhl	sp,	#7
      00126C 7E                    4358 	ld	a, (hl)
      00126D F8 02                 4359 	ldhl	sp,	#2
      00126F 96                    4360 	sub	a, (hl)
      001270 30 29                 4361 	jr	NC, 00122$
                                   4362 ;main.c:458: if (background1[ind] == BLANK[j] ) {
      001272 11rC8r05              4363 	ld	de, #_BLANK
      001275 F8 07                 4364 	ldhl	sp,	#7
      001277 6E                    4365 	ld	l, (hl)
      001278 26 00                 4366 	ld	h, #0x00
      00127A 19                    4367 	add	hl, de
      00127B E5                    4368 	push	hl
      00127C 7D                    4369 	ld	a, l
      00127D F8 07                 4370 	ldhl	sp,	#7
      00127F 77                    4371 	ld	(hl), a
      001280 E1                    4372 	pop	hl
      001281 7C                    4373 	ld	a, h
      001282 F8 06                 4374 	ldhl	sp,	#6
      001284 32                    4375 	ld	(hl-), a
      001285 2A                    4376 	ld	a, (hl+)
      001286 5F                    4377 	ld	e, a
      001287 3A                    4378 	ld	a, (hl-)
      001288 2B                    4379 	dec	hl
      001289 57                    4380 	ld	d, a
      00128A 1A                    4381 	ld	a, (de)
      00128B 4F                    4382 	ld	c, a
      00128C 7E                    4383 	ld	a, (hl)
      00128D 91                    4384 	sub	a, c
      00128E 20 06                 4385 	jr	NZ, 00156$
                                   4386 ;main.c:459: result = 0;
      001290 F8 03                 4387 	ldhl	sp,	#3
      001292 36 00                 4388 	ld	(hl), #0x00
                                   4389 ;main.c:460: break;
      001294 18 05                 4390 	jr	00122$
      001296                       4391 00156$:
                                   4392 ;main.c:457: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001296 F8 07                 4393 	ldhl	sp,	#7
      001298 34                    4394 	inc	(hl)
      001299 18 CF                 4395 	jr	00155$
      00129B                       4396 00122$:
                                   4397 ;main.c:463: if (result == 0) {
      00129B F8 03                 4398 	ldhl	sp,	#3
      00129D 7E                    4399 	ld	a, (hl)
      00129E B7                    4400 	or	a, a
      00129F C2r6Cr13              4401 	jp	NZ, 00127$
                                   4402 ;main.c:464: playerY += ySpeed;
      0012A2 FAr3Er00              4403 	ld	a, (#_ySpeed)
      0012A5 4F                    4404 	ld	c, a
      0012A6 07                    4405 	rlca
      0012A7 9F                    4406 	sbc	a, a
      0012A8 21r41r00              4407 	ld	hl, #_playerY
      0012AB 5E                    4408 	ld	e, (hl)
      0012AC 23                    4409 	inc	hl
      0012AD 56                    4410 	ld	d, (hl)
      0012AE 2B                    4411 	dec	hl
      0012AF 47                    4412 	ld	b, a
      0012B0 79                    4413 	ld	a, c
      0012B1 83                    4414 	add	a, e
      0012B2 4F                    4415 	ld	c, a
      0012B3 78                    4416 	ld	a, b
      0012B4 8A                    4417 	adc	a, d
      0012B5 47                    4418 	ld	b, a
      0012B6 79                    4419 	ld	a, c
      0012B7 22                    4420 	ld	(hl+), a
                                   4421 ;main.c:466: uint16_t limitedPlayerY = u16Clamp(playerY, 61<<5, 107<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      0012B8 78                    4422 	ld	a, b
      0012B9 32                    4423 	ld	(hl-), a
      0012BA 2A                    4424 	ld	a, (hl+)
      0012BB 5F                    4425 	ld	e, a
      0012BC 56                    4426 	ld	d, (hl)
      0012BD 7B                    4427 	ld	a, e
      0012BE D6 A0                 4428 	sub	a, #0xa0
      0012C0 7A                    4429 	ld	a, d
      0012C1 DE 07                 4430 	sbc	a, #0x07
      0012C3 30 05                 4431 	jr	NC, 00171$
      0012C5 11 A0 07              4432 	ld	de, #0x07a0
      0012C8 18 0B                 4433 	jr	00172$
      0012CA                       4434 00171$:
      0012CA 3E 60                 4435 	ld	a, #0x60
      0012CC BB                    4436 	cp	a, e
      0012CD 3E 0D                 4437 	ld	a, #0x0d
      0012CF 9A                    4438 	sbc	a, d
      0012D0 30 03                 4439 	jr	NC, 00173$
      0012D2 11 60 0D              4440 	ld	de, #0x0d60
      0012D5                       4441 00173$:
      0012D5                       4442 00172$:
      0012D5 4B                    4443 	ld	c, e
      0012D6 42                    4444 	ld	b, d
                                   4445 ;main.c:468: yOverflow = (playerY - limitedPlayerY);
      0012D7 FAr41r00              4446 	ld	a, (#_playerY)
      0012DA 93                    4447 	sub	a, e
      0012DB EAr4Br00              4448 	ld	(#_yOverflow),a
      0012DE FAr42r00              4449 	ld	a, (#_playerY + 1)
      0012E1 9A                    4450 	sbc	a, d
      0012E2 21r4Cr00              4451 	ld	hl, #_yOverflow + 1
                                   4452 ;main.c:469: if (yOverflow >= 0) {
      0012E5 32                    4453 	ld	(hl-), a
      0012E6 6E                    4454 	ld	l, (hl)
                                   4455 ;	spillPairReg hl
                                   4456 ;	spillPairReg hl
      0012E7 FAr4Cr00              4457 	ld	a, (_yOverflow + 1)
                                   4458 ;	spillPairReg hl
                                   4459 ;	spillPairReg hl
      0012EA CB 7F                 4460 	bit	7,a
      0012EC 20 22                 4461 	jr	NZ, 00124$
                                   4462 ;main.c:470: yOverflow = yOverflow >> 5;
      0012EE 21r4Cr00              4463 	ld	hl, #_yOverflow + 1
      0012F1 CB 2E                 4464 	sra	(hl)
      0012F3 2B                    4465 	dec	hl
      0012F4 CB 1E                 4466 	rr	(hl)
      0012F6 23                    4467 	inc	hl
      0012F7 CB 2E                 4468 	sra	(hl)
      0012F9 2B                    4469 	dec	hl
      0012FA CB 1E                 4470 	rr	(hl)
      0012FC 23                    4471 	inc	hl
      0012FD CB 2E                 4472 	sra	(hl)
      0012FF 2B                    4473 	dec	hl
      001300 CB 1E                 4474 	rr	(hl)
      001302 23                    4475 	inc	hl
      001303 CB 2E                 4476 	sra	(hl)
      001305 2B                    4477 	dec	hl
      001306 CB 1E                 4478 	rr	(hl)
      001308 23                    4479 	inc	hl
      001309 CB 2E                 4480 	sra	(hl)
      00130B 2B                    4481 	dec	hl
      00130C CB 1E                 4482 	rr	(hl)
      00130E 18 25                 4483 	jr	00125$
      001310                       4484 00124$:
                                   4485 ;main.c:473: yOverflow = -((-yOverflow) >> 5);
      001310 AF                    4486 	xor	a, a
      001311 21r4Br00              4487 	ld	hl, #_yOverflow
      001314 96                    4488 	sub	a, (hl)
      001315 23                    4489 	inc	hl
      001316 5F                    4490 	ld	e, a
      001317 9F                    4491 	sbc	a, a
      001318 96                    4492 	sub	a, (hl)
      001319 2B                    4493 	dec	hl
      00131A 57                    4494 	ld	d, a
      00131B CB 2A                 4495 	sra	d
      00131D CB 1B                 4496 	rr	e
      00131F CB 2A                 4497 	sra	d
      001321 CB 1B                 4498 	rr	e
      001323 CB 2A                 4499 	sra	d
      001325 CB 1B                 4500 	rr	e
      001327 CB 2A                 4501 	sra	d
      001329 CB 1B                 4502 	rr	e
      00132B CB 2A                 4503 	sra	d
      00132D CB 1B                 4504 	rr	e
      00132F AF                    4505 	xor	a, a
      001330 93                    4506 	sub	a, e
      001331 22                    4507 	ld	(hl+), a
      001332 9F                    4508 	sbc	a, a
      001333 92                    4509 	sub	a, d
      001334 77                    4510 	ld	(hl), a
      001335                       4511 00125$:
                                   4512 ;main.c:475: bgY += yOverflow;
      001335 FAr47r00              4513 	ld	a, (#_bgY)
      001338 21r4Br00              4514 	ld	hl, #_yOverflow
      00133B 86                    4515 	add	a, (hl)
      00133C 21r47r00              4516 	ld	hl, #_bgY
      00133F 22                    4517 	ld	(hl+), a
      001340 7E                    4518 	ld	a, (hl)
      001341 21r4Cr00              4519 	ld	hl, #_yOverflow + 1
      001344 8E                    4520 	adc	a, (hl)
      001345 EAr48r00              4521 	ld	(#_bgY + 1),a
                                   4522 ;main.c:476: playerY = limitedPlayerY;
      001348 21r41r00              4523 	ld	hl, #_playerY
      00134B 79                    4524 	ld	a, c
      00134C 22                    4525 	ld	(hl+), a
                                   4526 ;main.c:477: playerDrawY=playerY >> 5;
      00134D 78                    4527 	ld	a, b
      00134E 32                    4528 	ld	(hl-), a
      00134F 2A                    4529 	ld	a, (hl+)
      001350 4F                    4530 	ld	c, a
      001351 46                    4531 	ld	b, (hl)
      001352 CB 38                 4532 	srl	b
      001354 CB 19                 4533 	rr	c
      001356 CB 38                 4534 	srl	b
      001358 CB 19                 4535 	rr	c
      00135A CB 38                 4536 	srl	b
      00135C CB 19                 4537 	rr	c
      00135E CB 38                 4538 	srl	b
      001360 CB 19                 4539 	rr	c
      001362 CB 38                 4540 	srl	b
      001364 CB 19                 4541 	rr	c
      001366 21r44r00              4542 	ld	hl, #_playerDrawY
      001369 71                    4543 	ld	(hl), c
      00136A 18 05                 4544 	jr	00128$
      00136C                       4545 00127$:
                                   4546 ;main.c:482: ySpeed = 0;
      00136C 21r3Er00              4547 	ld	hl, #_ySpeed
      00136F 36 00                 4548 	ld	(hl), #0x00
      001371                       4549 00128$:
                                   4550 ;main.c:486: move_sprite(0, playerDrawX, playerDrawY);
      001371 21r44r00              4551 	ld	hl, #_playerDrawY
      001374 4E                    4552 	ld	c, (hl)
      001375 21r43r00              4553 	ld	hl, #_playerDrawX
      001378 46                    4554 	ld	b, (hl)
                                   4555 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001379 21r00r00              4556 	ld	hl, #_shadow_OAM
                                   4557 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00137C 79                    4558 	ld	a, c
      00137D 22                    4559 	ld	(hl+), a
      00137E 70                    4560 	ld	(hl), b
                                   4561 ;main.c:489: if (bgX >= 256) {
      00137F 21r45r00              4562 	ld	hl, #_bgX
      001382 2A                    4563 	ld	a, (hl+)
      001383 4F                    4564 	ld	c, a
      001384 46                    4565 	ld	b, (hl)
      001385 78                    4566 	ld	a, b
      001386 EE 80                 4567 	xor	a, #0x80
      001388 D6 81                 4568 	sub	a, #0x81
      00138A 38 0F                 4569 	jr	C, 00130$
                                   4570 ;main.c:490: bgX = bgX % 256;
      00138C AF                    4571 	xor	a, a
      00138D 3C                    4572 	inc	a
      00138E F5                    4573 	push	af
      00138F C5                    4574 	push	bc
      001390 CDr00r00              4575 	call	__modsint
      001393 E8 04                 4576 	add	sp, #4
      001395 21r45r00              4577 	ld	hl, #_bgX
      001398 7B                    4578 	ld	a, e
      001399 22                    4579 	ld	(hl+), a
      00139A 72                    4580 	ld	(hl), d
      00139B                       4581 00130$:
                                   4582 ;main.c:492: if (bgX < 0) {
      00139B 21r45r00              4583 	ld	hl, #_bgX
      00139E 2A                    4584 	ld	a, (hl+)
      00139F 4F                    4585 	ld	c, a
      0013A0 46                    4586 	ld	b, (hl)
      0013A1 CB 78                 4587 	bit	7, b
      0013A3 28 15                 4588 	jr	Z, 00132$
                                   4589 ;main.c:493: bgX = 255 - (bgX % 256);
      0013A5 AF                    4590 	xor	a, a
      0013A6 3C                    4591 	inc	a
      0013A7 F5                    4592 	push	af
      0013A8 C5                    4593 	push	bc
      0013A9 CDr00r00              4594 	call	__modsint
      0013AC E8 04                 4595 	add	sp, #4
      0013AE 3E FF                 4596 	ld	a, #0xff
      0013B0 93                    4597 	sub	a, e
      0013B1 4F                    4598 	ld	c, a
      0013B2 9F                    4599 	sbc	a, a
      0013B3 92                    4600 	sub	a, d
      0013B4 21r45r00              4601 	ld	hl, #_bgX
      0013B7 71                    4602 	ld	(hl), c
      0013B8 23                    4603 	inc	hl
      0013B9 77                    4604 	ld	(hl), a
      0013BA                       4605 00132$:
                                   4606 ;main.c:495: if (bgY >= 256) {
      0013BA 21r47r00              4607 	ld	hl, #_bgY
      0013BD 2A                    4608 	ld	a, (hl+)
      0013BE 4F                    4609 	ld	c, a
      0013BF 46                    4610 	ld	b, (hl)
      0013C0 78                    4611 	ld	a, b
      0013C1 EE 80                 4612 	xor	a, #0x80
      0013C3 D6 81                 4613 	sub	a, #0x81
      0013C5 38 0F                 4614 	jr	C, 00134$
                                   4615 ;main.c:496: bgY = bgY % 256;
      0013C7 AF                    4616 	xor	a, a
      0013C8 3C                    4617 	inc	a
      0013C9 F5                    4618 	push	af
      0013CA C5                    4619 	push	bc
      0013CB CDr00r00              4620 	call	__modsint
      0013CE E8 04                 4621 	add	sp, #4
      0013D0 21r47r00              4622 	ld	hl, #_bgY
      0013D3 7B                    4623 	ld	a, e
      0013D4 22                    4624 	ld	(hl+), a
      0013D5 72                    4625 	ld	(hl), d
      0013D6                       4626 00134$:
                                   4627 ;main.c:498: if (bgY < 0) {
      0013D6 21r47r00              4628 	ld	hl, #_bgY
      0013D9 2A                    4629 	ld	a, (hl+)
      0013DA 4F                    4630 	ld	c, a
      0013DB 46                    4631 	ld	b, (hl)
      0013DC CB 78                 4632 	bit	7, b
      0013DE 28 15                 4633 	jr	Z, 00136$
                                   4634 ;main.c:499: bgY = 255 - (bgY % 256);
      0013E0 AF                    4635 	xor	a, a
      0013E1 3C                    4636 	inc	a
      0013E2 F5                    4637 	push	af
      0013E3 C5                    4638 	push	bc
      0013E4 CDr00r00              4639 	call	__modsint
      0013E7 E8 04                 4640 	add	sp, #4
      0013E9 3E FF                 4641 	ld	a, #0xff
      0013EB 93                    4642 	sub	a, e
      0013EC 4F                    4643 	ld	c, a
      0013ED 9F                    4644 	sbc	a, a
      0013EE 92                    4645 	sub	a, d
      0013EF 21r47r00              4646 	ld	hl, #_bgY
      0013F2 71                    4647 	ld	(hl), c
      0013F3 23                    4648 	inc	hl
      0013F4 77                    4649 	ld	(hl), a
      0013F5                       4650 00136$:
                                   4651 ;main.c:502: move_bkg(bgX, bgY);
      0013F5 21r47r00              4652 	ld	hl, #_bgY
      0013F8 4E                    4653 	ld	c, (hl)
      0013F9 FAr45r00              4654 	ld	a, (#_bgX)
      0013FC E0r00                 4655 	ldh	(_SCX_REG + 0), a
                                   4656 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      0013FE 79                    4657 	ld	a, c
      0013FF E0r00                 4658 	ldh	(_SCY_REG + 0), a
                                   4659 ;main.c:505: if (ySpeed > 0) ySpeed--;
      001401 21r3Er00              4660 	ld	hl, #_ySpeed
      001404 5E                    4661 	ld	e, (hl)
      001405 AF                    4662 	xor	a, a
      001406 57                    4663 	ld	d, a
      001407 96                    4664 	sub	a, (hl)
      001408 CB 7B                 4665 	bit	7, e
      00140A 28 07                 4666 	jr	Z, 00344$
      00140C CB 7A                 4667 	bit	7, d
      00140E 20 08                 4668 	jr	NZ, 00345$
      001410 BF                    4669 	cp	a, a
      001411 18 05                 4670 	jr	00345$
      001413                       4671 00344$:
      001413 CB 7A                 4672 	bit	7, d
      001415 28 01                 4673 	jr	Z, 00345$
      001417 37                    4674 	scf
      001418                       4675 00345$:
      001418 30 04                 4676 	jr	NC, 00138$
      00141A 21r3Er00              4677 	ld	hl, #_ySpeed
      00141D 35                    4678 	dec	(hl)
      00141E                       4679 00138$:
                                   4680 ;main.c:506: if (ySpeed < 0) ySpeed++;
      00141E 21r3Er00              4681 	ld	hl, #_ySpeed
      001421 CB 7E                 4682 	bit	7, (hl)
      001423 28 01                 4683 	jr	Z, 00140$
      001425 34                    4684 	inc	(hl)
      001426                       4685 00140$:
                                   4686 ;main.c:507: if (xSpeed > 0) xSpeed--;
      001426 21r3Dr00              4687 	ld	hl, #_xSpeed
      001429 5E                    4688 	ld	e, (hl)
      00142A AF                    4689 	xor	a, a
      00142B 57                    4690 	ld	d, a
      00142C 96                    4691 	sub	a, (hl)
      00142D CB 7B                 4692 	bit	7, e
      00142F 28 07                 4693 	jr	Z, 00346$
      001431 CB 7A                 4694 	bit	7, d
      001433 20 08                 4695 	jr	NZ, 00347$
      001435 BF                    4696 	cp	a, a
      001436 18 05                 4697 	jr	00347$
      001438                       4698 00346$:
      001438 CB 7A                 4699 	bit	7, d
      00143A 28 01                 4700 	jr	Z, 00347$
      00143C 37                    4701 	scf
      00143D                       4702 00347$:
      00143D 30 04                 4703 	jr	NC, 00142$
      00143F 21r3Dr00              4704 	ld	hl, #_xSpeed
      001442 35                    4705 	dec	(hl)
      001443                       4706 00142$:
                                   4707 ;main.c:508: if (xSpeed < 0) xSpeed++;
      001443 21r3Dr00              4708 	ld	hl, #_xSpeed
      001446 CB 7E                 4709 	bit	7, (hl)
      001448 28 01                 4710 	jr	Z, 00157$
      00144A 34                    4711 	inc	(hl)
      00144B                       4712 00157$:
                                   4713 ;main.c:512: }
      00144B E8 08                 4714 	add	sp, #8
      00144D C9                    4715 	ret
                                   4716 ;main.c:514: void takeDamage(int16_t amount) {
                                   4717 ;	---------------------------------
                                   4718 ; Function takeDamage
                                   4719 ; ---------------------------------
      00144E                       4720 _takeDamage::
      00144E 3B                    4721 	dec	sp
                                   4722 ;main.c:515: if (amount > shield) {
      00144F FAr89r00              4723 	ld	a, (#_shield)
      001452 4F                    4724 	ld	c, a
      001453 07                    4725 	rlca
      001454 9F                    4726 	sbc	a, a
      001455 47                    4727 	ld	b, a
                                   4728 ;main.c:517: hull -= (amount - shield);
      001456 F8 03                 4729 	ldhl	sp,	#3
      001458 7E                    4730 	ld	a, (hl)
      001459 F8 00                 4731 	ldhl	sp,	#0
      00145B 77                    4732 	ld	(hl), a
                                   4733 ;main.c:515: if (amount > shield) {
      00145C F8 03                 4734 	ldhl	sp,	#3
      00145E 79                    4735 	ld	a, c
      00145F 96                    4736 	sub	a, (hl)
      001460 23                    4737 	inc	hl
      001461 78                    4738 	ld	a, b
      001462 9E                    4739 	sbc	a, (hl)
      001463 78                    4740 	ld	a, b
      001464 57                    4741 	ld	d, a
      001465 CB 7E                 4742 	bit	7, (hl)
      001467 28 07                 4743 	jr	Z, 00111$
      001469 CB 7A                 4744 	bit	7, d
      00146B 20 08                 4745 	jr	NZ, 00112$
      00146D BF                    4746 	cp	a, a
      00146E 18 05                 4747 	jr	00112$
      001470                       4748 00111$:
      001470 CB 7A                 4749 	bit	7, d
      001472 28 01                 4750 	jr	Z, 00112$
      001474 37                    4751 	scf
      001475                       4752 00112$:
      001475 30 10                 4753 	jr	NC, 00102$
                                   4754 ;main.c:516: shield = 0;
      001477 21r89r00              4755 	ld	hl, #_shield
      00147A 36 00                 4756 	ld	(hl), #0x00
                                   4757 ;main.c:517: hull -= (amount - shield);
      00147C FAr88r00              4758 	ld	a, (#_hull)
      00147F F8 00                 4759 	ldhl	sp,	#0
      001481 96                    4760 	sub	a, (hl)
      001482 EAr88r00              4761 	ld	(#_hull),a
      001485 18 09                 4762 	jr	00104$
      001487                       4763 00102$:
                                   4764 ;main.c:520: shield -= amount;
      001487 FAr89r00              4765 	ld	a, (#_shield)
      00148A F8 00                 4766 	ldhl	sp,	#0
      00148C 96                    4767 	sub	a, (hl)
      00148D EAr89r00              4768 	ld	(#_shield),a
      001490                       4769 00104$:
                                   4770 ;main.c:522: }
      001490 33                    4771 	inc	sp
      001491 C9                    4772 	ret
                                   4773 ;main.c:524: void checkCollision() {
                                   4774 ;	---------------------------------
                                   4775 ; Function checkCollision
                                   4776 ; ---------------------------------
      001492                       4777 _checkCollision::
      001492 E8 ED                 4778 	add	sp, #-19
                                   4779 ;main.c:531: struct Enemy *eptr = enemies;
                                   4780 ;main.c:534: while (i < ENEMYCOUNT) {
      001494 21rCCr05              4781 	ld	hl, #_ENEMYCOUNT
      001497 4E                    4782 	ld	c, (hl)
      001498 AF                    4783 	xor	a, a
      001499 91                    4784 	sub	a, c
      00149A D2rCEr17              4785 	jp	NC, 00123$
                                   4786 ;main.c:535: eptr += enemyCollisionCount;
      00149D 21r4Dr00              4787 	ld	hl, #_enemyCollisionCount
      0014A0 6E                    4788 	ld	l, (hl)
                                   4789 ;	spillPairReg hl
                                   4790 ;	spillPairReg hl
      0014A1 26 00                 4791 	ld	h, #0x00
                                   4792 ;	spillPairReg hl
                                   4793 ;	spillPairReg hl
      0014A3 29                    4794 	add	hl, hl
      0014A4 29                    4795 	add	hl, hl
      0014A5 29                    4796 	add	hl, hl
      0014A6 29                    4797 	add	hl, hl
      0014A7 11r00r00              4798 	ld	de, #_enemies
      0014AA 19                    4799 	add	hl, de
      0014AB 4D                    4800 	ld	c, l
      0014AC 44                    4801 	ld	b, h
                                   4802 ;main.c:536: if (eptr->visible && eptr->alive) {
      0014AD 21 0A 00              4803 	ld	hl, #0x000a
      0014B0 09                    4804 	add	hl, bc
      0014B1 7E                    4805 	ld	a, (hl)
      0014B2 B7                    4806 	or	a, a
      0014B3 CAr05r16              4807 	jp	Z, 00108$
      0014B6 21 09 00              4808 	ld	hl, #0x0009
      0014B9 09                    4809 	add	hl, bc
      0014BA E5                    4810 	push	hl
      0014BB 7D                    4811 	ld	a, l
      0014BC F8 0B                 4812 	ldhl	sp,	#11
      0014BE 77                    4813 	ld	(hl), a
      0014BF E1                    4814 	pop	hl
      0014C0 7C                    4815 	ld	a, h
      0014C1 F8 0A                 4816 	ldhl	sp,	#10
      0014C3 32                    4817 	ld	(hl-), a
      0014C4 2A                    4818 	ld	a, (hl+)
      0014C5 5F                    4819 	ld	e, a
      0014C6 56                    4820 	ld	d, (hl)
      0014C7 1A                    4821 	ld	a, (de)
      0014C8 B7                    4822 	or	a, a
      0014C9 CAr05r16              4823 	jp	Z, 00108$
                                   4824 ;main.c:538: if (eptr->x > playerDrawX - PLAYERSIZE && eptr->x - (8>>(eptr->spriteCount-1)) < playerDrawX) 
      0014CC 59                    4825 	ld	e, c
      0014CD 50                    4826 	ld	d, b
      0014CE 1A                    4827 	ld	a, (de)
      0014CF F8 0F                 4828 	ldhl	sp,	#15
      0014D1 22                    4829 	ld	(hl+), a
      0014D2 13                    4830 	inc	de
      0014D3 1A                    4831 	ld	a, (de)
      0014D4 77                    4832 	ld	(hl), a
      0014D5 FAr43r00              4833 	ld	a, (#_playerDrawX)
      0014D8 F8 0D                 4834 	ldhl	sp,	#13
      0014DA 22                    4835 	ld	(hl+), a
      0014DB 36 00                 4836 	ld	(hl), #0x00
      0014DD FArDEr05              4837 	ld	a, (#_PLAYERSIZE)
      0014E0 F8 07                 4838 	ldhl	sp,	#7
      0014E2 22                    4839 	ld	(hl+), a
      0014E3 36 00                 4840 	ld	(hl), #0x00
      0014E5 F8 0D                 4841 	ldhl	sp,#13
      0014E7 2A                    4842 	ld	a, (hl+)
      0014E8 5F                    4843 	ld	e, a
      0014E9 56                    4844 	ld	d, (hl)
      0014EA F8 07                 4845 	ldhl	sp,	#7
      0014EC 2A                    4846 	ld	a,	(hl+)
      0014ED 66                    4847 	ld	h, (hl)
      0014EE 6F                    4848 	ld	l, a
      0014EF 7B                    4849 	ld	a, e
      0014F0 95                    4850 	sub	a, l
      0014F1 5F                    4851 	ld	e, a
      0014F2 7A                    4852 	ld	a, d
      0014F3 9C                    4853 	sbc	a, h
      0014F4 F8 12                 4854 	ldhl	sp,	#18
      0014F6 32                    4855 	ld	(hl-), a
      0014F7 73                    4856 	ld	(hl), e
      0014F8 F8 11                 4857 	ldhl	sp,	#17
      0014FA 5D                    4858 	ld	e, l
      0014FB 54                    4859 	ld	d, h
      0014FC F8 0F                 4860 	ldhl	sp,	#15
      0014FE 1A                    4861 	ld	a, (de)
      0014FF 13                    4862 	inc	de
      001500 96                    4863 	sub	a, (hl)
      001501 23                    4864 	inc	hl
      001502 1A                    4865 	ld	a, (de)
      001503 9E                    4866 	sbc	a, (hl)
      001504 1A                    4867 	ld	a, (de)
      001505 57                    4868 	ld	d, a
      001506 5E                    4869 	ld	e, (hl)
      001507 CB 7B                 4870 	bit	7, e
      001509 28 07                 4871 	jr	Z, 00208$
      00150B CB 7A                 4872 	bit	7, d
      00150D 20 08                 4873 	jr	NZ, 00209$
      00150F BF                    4874 	cp	a, a
      001510 18 05                 4875 	jr	00209$
      001512                       4876 00208$:
      001512 CB 7A                 4877 	bit	7, d
      001514 28 01                 4878 	jr	Z, 00209$
      001516 37                    4879 	scf
      001517                       4880 00209$:
      001517 D2r05r16              4881 	jp	NC, 00108$
      00151A 21 08 00              4882 	ld	hl, #0x0008
      00151D 09                    4883 	add	hl, bc
      00151E 5E                    4884 	ld	e, (hl)
      00151F 1D                    4885 	dec	e
      001520 F8 0B                 4886 	ldhl	sp,	#11
      001522 3E 08                 4887 	ld	a, #0x08
      001524 22                    4888 	ld	(hl+), a
      001525 AF                    4889 	xor	a, a
      001526 77                    4890 	ld	(hl), a
      001527 1C                    4891 	inc	e
      001528 18 07                 4892 	jr	00211$
      00152A                       4893 00210$:
      00152A F8 0C                 4894 	ldhl	sp,	#12
      00152C CB 2E                 4895 	sra	(hl)
      00152E 2B                    4896 	dec	hl
      00152F CB 1E                 4897 	rr	(hl)
      001531                       4898 00211$:
      001531 1D                    4899 	dec	e
      001532 20 F6                 4900 	jr	NZ, 00210$
      001534 F8 0F                 4901 	ldhl	sp,#15
      001536 2A                    4902 	ld	a, (hl+)
      001537 5F                    4903 	ld	e, a
      001538 56                    4904 	ld	d, (hl)
      001539 F8 0B                 4905 	ldhl	sp,	#11
      00153B 2A                    4906 	ld	a,	(hl+)
      00153C 66                    4907 	ld	h, (hl)
      00153D 6F                    4908 	ld	l, a
      00153E 7B                    4909 	ld	a, e
      00153F 95                    4910 	sub	a, l
      001540 5F                    4911 	ld	e, a
      001541 7A                    4912 	ld	a, d
      001542 9C                    4913 	sbc	a, h
      001543 F8 12                 4914 	ldhl	sp,	#18
      001545 32                    4915 	ld	(hl-), a
      001546 73                    4916 	ld	(hl), e
      001547 F8 11                 4917 	ldhl	sp,	#17
      001549 5D                    4918 	ld	e, l
      00154A 54                    4919 	ld	d, h
      00154B F8 0D                 4920 	ldhl	sp,	#13
      00154D 1A                    4921 	ld	a, (de)
      00154E 13                    4922 	inc	de
      00154F 96                    4923 	sub	a, (hl)
      001550 23                    4924 	inc	hl
      001551 1A                    4925 	ld	a, (de)
      001552 9E                    4926 	sbc	a, (hl)
      001553 1A                    4927 	ld	a, (de)
      001554 57                    4928 	ld	d, a
      001555 5E                    4929 	ld	e, (hl)
      001556 CB 7B                 4930 	bit	7, e
      001558 28 07                 4931 	jr	Z, 00212$
      00155A CB 7A                 4932 	bit	7, d
      00155C 20 08                 4933 	jr	NZ, 00213$
      00155E BF                    4934 	cp	a, a
      00155F 18 05                 4935 	jr	00213$
      001561                       4936 00212$:
      001561 CB 7A                 4937 	bit	7, d
      001563 28 01                 4938 	jr	Z, 00213$
      001565 37                    4939 	scf
      001566                       4940 00213$:
      001566 D2r05r16              4941 	jp	NC, 00108$
                                   4942 ;main.c:540: if (eptr->y > playerDrawY - PLAYERSIZE && eptr->y -(8>>(eptr->spriteCount-1)) < playerDrawY) {
      001569 69                    4943 	ld	l, c
                                   4944 ;	spillPairReg hl
                                   4945 ;	spillPairReg hl
      00156A 60                    4946 	ld	h, b
                                   4947 ;	spillPairReg hl
                                   4948 ;	spillPairReg hl
      00156B 23                    4949 	inc	hl
      00156C 23                    4950 	inc	hl
      00156D 5D                    4951 	ld	e, l
      00156E 54                    4952 	ld	d, h
      00156F 1A                    4953 	ld	a, (de)
      001570 F8 11                 4954 	ldhl	sp,	#17
      001572 22                    4955 	ld	(hl+), a
      001573 13                    4956 	inc	de
      001574 1A                    4957 	ld	a, (de)
      001575 77                    4958 	ld	(hl), a
      001576 FAr44r00              4959 	ld	a, (#_playerDrawY)
      001579 F8 0D                 4960 	ldhl	sp,	#13
      00157B 22                    4961 	ld	(hl+), a
      00157C AF                    4962 	xor	a, a
      00157D 32                    4963 	ld	(hl-), a
      00157E 2A                    4964 	ld	a, (hl+)
      00157F 5F                    4965 	ld	e, a
      001580 56                    4966 	ld	d, (hl)
      001581 F8 07                 4967 	ldhl	sp,	#7
      001583 2A                    4968 	ld	a,	(hl+)
      001584 66                    4969 	ld	h, (hl)
      001585 6F                    4970 	ld	l, a
      001586 7B                    4971 	ld	a, e
      001587 95                    4972 	sub	a, l
      001588 5F                    4973 	ld	e, a
      001589 7A                    4974 	ld	a, d
      00158A 9C                    4975 	sbc	a, h
      00158B F8 10                 4976 	ldhl	sp,	#16
      00158D 32                    4977 	ld	(hl-), a
      00158E 73                    4978 	ld	(hl), e
      00158F F8 0F                 4979 	ldhl	sp,	#15
      001591 5D                    4980 	ld	e, l
      001592 54                    4981 	ld	d, h
      001593 F8 11                 4982 	ldhl	sp,	#17
      001595 1A                    4983 	ld	a, (de)
      001596 13                    4984 	inc	de
      001597 96                    4985 	sub	a, (hl)
      001598 23                    4986 	inc	hl
      001599 1A                    4987 	ld	a, (de)
      00159A 9E                    4988 	sbc	a, (hl)
      00159B 1A                    4989 	ld	a, (de)
      00159C 57                    4990 	ld	d, a
      00159D 5E                    4991 	ld	e, (hl)
      00159E CB 7B                 4992 	bit	7, e
      0015A0 28 07                 4993 	jr	Z, 00214$
      0015A2 CB 7A                 4994 	bit	7, d
      0015A4 20 08                 4995 	jr	NZ, 00215$
      0015A6 BF                    4996 	cp	a, a
      0015A7 18 05                 4997 	jr	00215$
      0015A9                       4998 00214$:
      0015A9 CB 7A                 4999 	bit	7, d
      0015AB 28 01                 5000 	jr	Z, 00215$
      0015AD 37                    5001 	scf
      0015AE                       5002 00215$:
      0015AE 30 55                 5003 	jr	NC, 00108$
      0015B0 F8 11                 5004 	ldhl	sp,#17
      0015B2 2A                    5005 	ld	a, (hl+)
      0015B3 5F                    5006 	ld	e, a
      0015B4 56                    5007 	ld	d, (hl)
      0015B5 F8 0B                 5008 	ldhl	sp,	#11
      0015B7 2A                    5009 	ld	a,	(hl+)
      0015B8 66                    5010 	ld	h, (hl)
      0015B9 6F                    5011 	ld	l, a
      0015BA 7B                    5012 	ld	a, e
      0015BB 95                    5013 	sub	a, l
      0015BC 5F                    5014 	ld	e, a
      0015BD 7A                    5015 	ld	a, d
      0015BE 9C                    5016 	sbc	a, h
      0015BF F8 10                 5017 	ldhl	sp,	#16
      0015C1 32                    5018 	ld	(hl-), a
      0015C2 73                    5019 	ld	(hl), e
      0015C3 F8 0F                 5020 	ldhl	sp,	#15
      0015C5 5D                    5021 	ld	e, l
      0015C6 54                    5022 	ld	d, h
      0015C7 F8 0D                 5023 	ldhl	sp,	#13
      0015C9 1A                    5024 	ld	a, (de)
      0015CA 13                    5025 	inc	de
      0015CB 96                    5026 	sub	a, (hl)
      0015CC 23                    5027 	inc	hl
      0015CD 1A                    5028 	ld	a, (de)
      0015CE 9E                    5029 	sbc	a, (hl)
      0015CF 1A                    5030 	ld	a, (de)
      0015D0 57                    5031 	ld	d, a
      0015D1 5E                    5032 	ld	e, (hl)
      0015D2 CB 7B                 5033 	bit	7, e
      0015D4 28 07                 5034 	jr	Z, 00216$
      0015D6 CB 7A                 5035 	bit	7, d
      0015D8 20 08                 5036 	jr	NZ, 00217$
      0015DA BF                    5037 	cp	a, a
      0015DB 18 05                 5038 	jr	00217$
      0015DD                       5039 00216$:
      0015DD CB 7A                 5040 	bit	7, d
      0015DF 28 01                 5041 	jr	Z, 00217$
      0015E1 37                    5042 	scf
      0015E2                       5043 00217$:
      0015E2 30 21                 5044 	jr	NC, 00108$
                                   5045 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0015E4 21r2Ar00              5046 	ld	hl, #(_shadow_OAM + 42)
      0015E7 36 7F                 5047 	ld	(hl), #0x7f
                                   5048 ;main.c:542: eptr->alive = 0;
      0015E9 F8 09                 5049 	ldhl	sp,	#9
      0015EB 2A                    5050 	ld	a,	(hl+)
      0015EC 66                    5051 	ld	h, (hl)
      0015ED 6F                    5052 	ld	l, a
      0015EE 36 00                 5053 	ld	(hl), #0x00
                                   5054 ;main.c:543: takeDamage(eptr->damage);
      0015F0 21 0B 00              5055 	ld	hl, #0x000b
      0015F3 09                    5056 	add	hl, bc
      0015F4 5E                    5057 	ld	e, (hl)
      0015F5 16 00                 5058 	ld	d, #0x00
      0015F7 C5                    5059 	push	bc
      0015F8 D5                    5060 	push	de
      0015F9 CDr4Er14              5061 	call	_takeDamage
      0015FC E1                    5062 	pop	hl
      0015FD AF                    5063 	xor	a, a
      0015FE F5                    5064 	push	af
      0015FF 33                    5065 	inc	sp
      001600 CDr85r0E              5066 	call	_initEnemies
      001603 33                    5067 	inc	sp
      001604 C1                    5068 	pop	bc
      001605                       5069 00108$:
                                   5070 ;main.c:554: struct Projectile *pptr = projectiles;
      001605 F8 10                 5071 	ldhl	sp,	#16
      001607 3Er50                 5072 	ld	a, #<(_projectiles)
      001609 22                    5073 	ld	(hl+), a
      00160A 36s00                 5074 	ld	(hl), #>(_projectiles)
                                   5075 ;main.c:556: while (j < PROJECTILECOUNT) {
      00160C 21 02 00              5076 	ld	hl, #0x0002
      00160F 09                    5077 	add	hl, bc
      001610 E5                    5078 	push	hl
      001611 7D                    5079 	ld	a, l
      001612 F8 04                 5080 	ldhl	sp,	#4
      001614 77                    5081 	ld	(hl), a
      001615 E1                    5082 	pop	hl
      001616 7C                    5083 	ld	a, h
      001617 F8 03                 5084 	ldhl	sp,	#3
      001619 77                    5085 	ld	(hl), a
      00161A 21 08 00              5086 	ld	hl, #0x0008
      00161D 09                    5087 	add	hl, bc
      00161E E5                    5088 	push	hl
      00161F 7D                    5089 	ld	a, l
      001620 F8 06                 5090 	ldhl	sp,	#6
      001622 77                    5091 	ld	(hl), a
      001623 E1                    5092 	pop	hl
      001624 7C                    5093 	ld	a, h
      001625 F8 05                 5094 	ldhl	sp,	#5
      001627 77                    5095 	ld	(hl), a
      001628 F8 12                 5096 	ldhl	sp,	#18
      00162A 36 00                 5097 	ld	(hl), #0x00
      00162C                       5098 00118$:
      00162C 21rDDr05              5099 	ld	hl, #_PROJECTILECOUNT
      00162F 5E                    5100 	ld	e, (hl)
      001630 F8 12                 5101 	ldhl	sp,	#18
      001632 7E                    5102 	ld	a, (hl)
      001633 93                    5103 	sub	a, e
      001634 D2rCEr17              5104 	jp	NC, 00123$
                                   5105 ;main.c:557: if (pptr->active) {
      001637 2B                    5106 	dec	hl
      001638 2B                    5107 	dec	hl
      001639 2A                    5108 	ld	a, (hl+)
      00163A 5F                    5109 	ld	e, a
      00163B 56                    5110 	ld	d, (hl)
      00163C 21 08 00              5111 	ld	hl, #0x0008
      00163F 19                    5112 	add	hl, de
      001640 E5                    5113 	push	hl
      001641 7D                    5114 	ld	a, l
      001642 F8 08                 5115 	ldhl	sp,	#8
      001644 77                    5116 	ld	(hl), a
      001645 E1                    5117 	pop	hl
      001646 7C                    5118 	ld	a, h
      001647 F8 07                 5119 	ldhl	sp,	#7
      001649 32                    5120 	ld	(hl-), a
      00164A 2A                    5121 	ld	a, (hl+)
      00164B 5F                    5122 	ld	e, a
      00164C 56                    5123 	ld	d, (hl)
      00164D 1A                    5124 	ld	a, (de)
      00164E B7                    5125 	or	a, a
      00164F CArB5r17              5126 	jp	Z, 00117$
                                   5127 ;main.c:558: if (eptr->x > pptr->x - 8 && eptr->x - (8>>(eptr->spriteCount-1)) < pptr->x) {
      001652 59                    5128 	ld	e, c
      001653 50                    5129 	ld	d, b
      001654 1A                    5130 	ld	a, (de)
      001655 F8 0A                 5131 	ldhl	sp,	#10
      001657 22                    5132 	ld	(hl+), a
      001658 13                    5133 	inc	de
      001659 1A                    5134 	ld	a, (de)
      00165A 77                    5135 	ld	(hl), a
      00165B F8 10                 5136 	ldhl	sp,#16
      00165D 2A                    5137 	ld	a, (hl+)
      00165E 5F                    5138 	ld	e, a
      00165F 56                    5139 	ld	d, (hl)
      001660 1A                    5140 	ld	a, (de)
      001661 F8 0C                 5141 	ldhl	sp,	#12
      001663 22                    5142 	ld	(hl+), a
      001664 13                    5143 	inc	de
      001665 1A                    5144 	ld	a, (de)
      001666 32                    5145 	ld	(hl-), a
      001667 7E                    5146 	ld	a, (hl)
      001668 F8 08                 5147 	ldhl	sp,	#8
      00166A 77                    5148 	ld	(hl), a
      00166B F8 0D                 5149 	ldhl	sp,	#13
      00166D 7E                    5150 	ld	a, (hl)
      00166E F8 09                 5151 	ldhl	sp,	#9
      001670 32                    5152 	ld	(hl-), a
      001671 2A                    5153 	ld	a, (hl+)
      001672 5F                    5154 	ld	e, a
      001673 56                    5155 	ld	d, (hl)
      001674 21 08 00              5156 	ld	hl, #0x0008
      001677 7B                    5157 	ld	a, e
      001678 95                    5158 	sub	a, l
      001679 5F                    5159 	ld	e, a
      00167A 7A                    5160 	ld	a, d
      00167B 9C                    5161 	sbc	a, h
      00167C F8 0F                 5162 	ldhl	sp,	#15
      00167E 32                    5163 	ld	(hl-), a
      00167F 73                    5164 	ld	(hl), e
      001680 F8 0E                 5165 	ldhl	sp,	#14
      001682 5D                    5166 	ld	e, l
      001683 54                    5167 	ld	d, h
      001684 F8 0A                 5168 	ldhl	sp,	#10
      001686 1A                    5169 	ld	a, (de)
      001687 13                    5170 	inc	de
      001688 96                    5171 	sub	a, (hl)
      001689 23                    5172 	inc	hl
      00168A 1A                    5173 	ld	a, (de)
      00168B 9E                    5174 	sbc	a, (hl)
      00168C 1A                    5175 	ld	a, (de)
      00168D 57                    5176 	ld	d, a
      00168E CB 7E                 5177 	bit	7, (hl)
      001690 28 07                 5178 	jr	Z, 00218$
      001692 CB 7A                 5179 	bit	7, d
      001694 20 08                 5180 	jr	NZ, 00219$
      001696 BF                    5181 	cp	a, a
      001697 18 05                 5182 	jr	00219$
      001699                       5183 00218$:
      001699 CB 7A                 5184 	bit	7, d
      00169B 28 01                 5185 	jr	Z, 00219$
      00169D 37                    5186 	scf
      00169E                       5187 00219$:
      00169E D2rB5r17              5188 	jp	NC, 00117$
      0016A1 F8 04                 5189 	ldhl	sp,#4
      0016A3 2A                    5190 	ld	a, (hl+)
      0016A4 5F                    5191 	ld	e, a
      0016A5 56                    5192 	ld	d, (hl)
      0016A6 1A                    5193 	ld	a, (de)
      0016A7 5F                    5194 	ld	e, a
      0016A8 1D                    5195 	dec	e
      0016A9 F8 08                 5196 	ldhl	sp,	#8
      0016AB 3E 08                 5197 	ld	a, #0x08
      0016AD 22                    5198 	ld	(hl+), a
      0016AE AF                    5199 	xor	a, a
      0016AF 77                    5200 	ld	(hl), a
      0016B0 1C                    5201 	inc	e
      0016B1 18 07                 5202 	jr	00221$
      0016B3                       5203 00220$:
      0016B3 F8 09                 5204 	ldhl	sp,	#9
      0016B5 CB 2E                 5205 	sra	(hl)
      0016B7 2B                    5206 	dec	hl
      0016B8 CB 1E                 5207 	rr	(hl)
      0016BA                       5208 00221$:
      0016BA 1D                    5209 	dec	e
      0016BB 20 F6                 5210 	jr	NZ, 00220$
      0016BD F8 0A                 5211 	ldhl	sp,#10
      0016BF 2A                    5212 	ld	a, (hl+)
      0016C0 5F                    5213 	ld	e, a
      0016C1 56                    5214 	ld	d, (hl)
      0016C2 F8 08                 5215 	ldhl	sp,	#8
      0016C4 2A                    5216 	ld	a,	(hl+)
      0016C5 66                    5217 	ld	h, (hl)
      0016C6 6F                    5218 	ld	l, a
      0016C7 7B                    5219 	ld	a, e
      0016C8 95                    5220 	sub	a, l
      0016C9 5F                    5221 	ld	e, a
      0016CA 7A                    5222 	ld	a, d
      0016CB 9C                    5223 	sbc	a, h
      0016CC F8 0F                 5224 	ldhl	sp,	#15
      0016CE 32                    5225 	ld	(hl-), a
      0016CF 73                    5226 	ld	(hl), e
      0016D0 F8 0E                 5227 	ldhl	sp,	#14
      0016D2 5D                    5228 	ld	e, l
      0016D3 54                    5229 	ld	d, h
      0016D4 F8 0C                 5230 	ldhl	sp,	#12
      0016D6 1A                    5231 	ld	a, (de)
      0016D7 13                    5232 	inc	de
      0016D8 96                    5233 	sub	a, (hl)
      0016D9 23                    5234 	inc	hl
      0016DA 1A                    5235 	ld	a, (de)
      0016DB 9E                    5236 	sbc	a, (hl)
      0016DC 1A                    5237 	ld	a, (de)
      0016DD 57                    5238 	ld	d, a
      0016DE CB 7E                 5239 	bit	7, (hl)
      0016E0 28 07                 5240 	jr	Z, 00222$
      0016E2 CB 7A                 5241 	bit	7, d
      0016E4 20 08                 5242 	jr	NZ, 00223$
      0016E6 BF                    5243 	cp	a, a
      0016E7 18 05                 5244 	jr	00223$
      0016E9                       5245 00222$:
      0016E9 CB 7A                 5246 	bit	7, d
      0016EB 28 01                 5247 	jr	Z, 00223$
      0016ED 37                    5248 	scf
      0016EE                       5249 00223$:
      0016EE D2rB5r17              5250 	jp	NC, 00117$
                                   5251 ;main.c:559: if (eptr->y > pptr->y - 8 && eptr->y -(8>>(eptr->spriteCount-1)) < pptr->y ) {
      0016F1 F8 02                 5252 	ldhl	sp,#2
      0016F3 2A                    5253 	ld	a, (hl+)
      0016F4 5F                    5254 	ld	e, a
      0016F5 56                    5255 	ld	d, (hl)
      0016F6 1A                    5256 	ld	a, (de)
      0016F7 F8 0E                 5257 	ldhl	sp,	#14
      0016F9 22                    5258 	ld	(hl+), a
      0016FA 13                    5259 	inc	de
      0016FB 1A                    5260 	ld	a, (de)
      0016FC 22                    5261 	ld	(hl+), a
      0016FD 2A                    5262 	ld	a, (hl+)
      0016FE 66                    5263 	ld	h, (hl)
                                   5264 ;	spillPairReg hl
                                   5265 ;	spillPairReg hl
      0016FF 6F                    5266 	ld	l, a
                                   5267 ;	spillPairReg hl
                                   5268 ;	spillPairReg hl
      001700 23                    5269 	inc	hl
      001701 23                    5270 	inc	hl
      001702 5D                    5271 	ld	e, l
      001703 54                    5272 	ld	d, h
      001704 1A                    5273 	ld	a, (de)
      001705 F8 0A                 5274 	ldhl	sp,	#10
      001707 22                    5275 	ld	(hl+), a
      001708 13                    5276 	inc	de
      001709 1A                    5277 	ld	a, (de)
      00170A 77                    5278 	ld	(hl), a
      00170B F8 0A                 5279 	ldhl	sp,	#10
      00170D 7E                    5280 	ld	a, (hl)
      00170E F8 00                 5281 	ldhl	sp,	#0
      001710 77                    5282 	ld	(hl), a
      001711 F8 0B                 5283 	ldhl	sp,	#11
      001713 7E                    5284 	ld	a, (hl)
      001714 F8 01                 5285 	ldhl	sp,	#1
      001716 77                    5286 	ld	(hl), a
      001717 D1                    5287 	pop	de
      001718 D5                    5288 	push	de
      001719 21 08 00              5289 	ld	hl, #0x0008
      00171C 7B                    5290 	ld	a, e
      00171D 95                    5291 	sub	a, l
      00171E 5F                    5292 	ld	e, a
      00171F 7A                    5293 	ld	a, d
      001720 9C                    5294 	sbc	a, h
      001721 F8 0D                 5295 	ldhl	sp,	#13
      001723 32                    5296 	ld	(hl-), a
      001724 73                    5297 	ld	(hl), e
      001725 F8 0C                 5298 	ldhl	sp,	#12
      001727 5D                    5299 	ld	e, l
      001728 54                    5300 	ld	d, h
      001729 F8 0E                 5301 	ldhl	sp,	#14
      00172B 1A                    5302 	ld	a, (de)
      00172C 13                    5303 	inc	de
      00172D 96                    5304 	sub	a, (hl)
      00172E 23                    5305 	inc	hl
      00172F 1A                    5306 	ld	a, (de)
      001730 9E                    5307 	sbc	a, (hl)
      001731 1A                    5308 	ld	a, (de)
      001732 57                    5309 	ld	d, a
      001733 CB 7E                 5310 	bit	7, (hl)
      001735 28 07                 5311 	jr	Z, 00224$
      001737 CB 7A                 5312 	bit	7, d
      001739 20 08                 5313 	jr	NZ, 00225$
      00173B BF                    5314 	cp	a, a
      00173C 18 05                 5315 	jr	00225$
      00173E                       5316 00224$:
      00173E CB 7A                 5317 	bit	7, d
      001740 28 01                 5318 	jr	Z, 00225$
      001742 37                    5319 	scf
      001743                       5320 00225$:
      001743 30 70                 5321 	jr	NC, 00117$
      001745 F8 0E                 5322 	ldhl	sp,#14
      001747 2A                    5323 	ld	a, (hl+)
      001748 5F                    5324 	ld	e, a
      001749 56                    5325 	ld	d, (hl)
      00174A F8 08                 5326 	ldhl	sp,	#8
      00174C 2A                    5327 	ld	a,	(hl+)
      00174D 66                    5328 	ld	h, (hl)
      00174E 6F                    5329 	ld	l, a
      00174F 7B                    5330 	ld	a, e
      001750 95                    5331 	sub	a, l
      001751 5F                    5332 	ld	e, a
      001752 7A                    5333 	ld	a, d
      001753 9C                    5334 	sbc	a, h
      001754 F8 0D                 5335 	ldhl	sp,	#13
      001756 32                    5336 	ld	(hl-), a
      001757 73                    5337 	ld	(hl), e
      001758 2A                    5338 	ld	a, (hl+)
      001759 23                    5339 	inc	hl
      00175A 32                    5340 	ld	(hl-), a
      00175B 2A                    5341 	ld	a, (hl+)
      00175C 23                    5342 	inc	hl
      00175D 77                    5343 	ld	(hl), a
      00175E F8 0E                 5344 	ldhl	sp,	#14
      001760 5D                    5345 	ld	e, l
      001761 54                    5346 	ld	d, h
      001762 F8 0A                 5347 	ldhl	sp,	#10
      001764 1A                    5348 	ld	a, (de)
      001765 13                    5349 	inc	de
      001766 96                    5350 	sub	a, (hl)
      001767 23                    5351 	inc	hl
      001768 1A                    5352 	ld	a, (de)
      001769 9E                    5353 	sbc	a, (hl)
      00176A 1A                    5354 	ld	a, (de)
      00176B 57                    5355 	ld	d, a
      00176C CB 7E                 5356 	bit	7, (hl)
      00176E 28 07                 5357 	jr	Z, 00226$
      001770 CB 7A                 5358 	bit	7, d
      001772 20 08                 5359 	jr	NZ, 00227$
      001774 BF                    5360 	cp	a, a
      001775 18 05                 5361 	jr	00227$
      001777                       5362 00226$:
      001777 CB 7A                 5363 	bit	7, d
      001779 28 01                 5364 	jr	Z, 00227$
      00177B 37                    5365 	scf
      00177C                       5366 00227$:
      00177C 30 37                 5367 	jr	NC, 00117$
                                   5368 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00177E 21r2Ar00              5369 	ld	hl, #(_shadow_OAM + 42)
      001781 36 7F                 5370 	ld	(hl), #0x7f
                                   5371 ;main.c:561: eptr->alive = 0;
      001783 21 09 00              5372 	ld	hl, #0x0009
      001786 09                    5373 	add	hl, bc
      001787 36 00                 5374 	ld	(hl), #0x00
                                   5375 ;main.c:562: initEnemies(0);
      001789 C5                    5376 	push	bc
      00178A AF                    5377 	xor	a, a
      00178B F5                    5378 	push	af
      00178C 33                    5379 	inc	sp
      00178D CDr85r0E              5380 	call	_initEnemies
      001790 33                    5381 	inc	sp
      001791 C1                    5382 	pop	bc
                                   5383 ;main.c:563: set_sprite_tile(20+j, 0x7f);
      001792 F8 12                 5384 	ldhl	sp,	#18
      001794 7E                    5385 	ld	a, (hl)
      001795 C6 14                 5386 	add	a, #0x14
      001797 5F                    5387 	ld	e, a
                                   5388 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001798 26 00                 5389 	ld	h, #0x00
                                   5390 ;	spillPairReg hl
                                   5391 ;	spillPairReg hl
      00179A 6B                    5392 	ld	l, e
      00179B 29                    5393 	add	hl, hl
      00179C 29                    5394 	add	hl, hl
      00179D 11r00r00              5395 	ld	de, #_shadow_OAM
      0017A0 19                    5396 	add	hl, de
      0017A1 23                    5397 	inc	hl
      0017A2 23                    5398 	inc	hl
      0017A3 36 7F                 5399 	ld	(hl), #0x7f
                                   5400 ;main.c:564: playSound(0);
      0017A5 C5                    5401 	push	bc
      0017A6 AF                    5402 	xor	a, a
      0017A7 F5                    5403 	push	af
      0017A8 33                    5404 	inc	sp
      0017A9 CDr82r08              5405 	call	_playSound
      0017AC 33                    5406 	inc	sp
      0017AD C1                    5407 	pop	bc
                                   5408 ;main.c:565: pptr->active = 0;
      0017AE F8 06                 5409 	ldhl	sp,	#6
      0017B0 2A                    5410 	ld	a,	(hl+)
      0017B1 66                    5411 	ld	h, (hl)
      0017B2 6F                    5412 	ld	l, a
      0017B3 36 00                 5413 	ld	(hl), #0x00
      0017B5                       5414 00117$:
                                   5415 ;main.c:569: j++;
      0017B5 F8 12                 5416 	ldhl	sp,	#18
      0017B7 34                    5417 	inc	(hl)
                                   5418 ;main.c:570: pptr++;
      0017B8 2B                    5419 	dec	hl
      0017B9 2B                    5420 	dec	hl
      0017BA 2A                    5421 	ld	a, (hl+)
      0017BB 5F                    5422 	ld	e, a
      0017BC 56                    5423 	ld	d, (hl)
      0017BD 21 0B 00              5424 	ld	hl, #0x000b
      0017C0 19                    5425 	add	hl, de
      0017C1 E5                    5426 	push	hl
      0017C2 7D                    5427 	ld	a, l
      0017C3 F8 12                 5428 	ldhl	sp,	#18
      0017C5 77                    5429 	ld	(hl), a
      0017C6 E1                    5430 	pop	hl
      0017C7 7C                    5431 	ld	a, h
      0017C8 F8 11                 5432 	ldhl	sp,	#17
      0017CA 77                    5433 	ld	(hl), a
      0017CB C3r2Cr16              5434 	jp	00118$
                                   5435 ;main.c:577: break;
      0017CE                       5436 00123$:
                                   5437 ;main.c:580: if (enemyCollisionCount == 0) {
      0017CE FAr4Dr00              5438 	ld	a, (#_enemyCollisionCount)
      0017D1 B7                    5439 	or	a, a
      0017D2 20 09                 5440 	jr	NZ, 00125$
                                   5441 ;main.c:581: enemyCollisionCount = ENEMYCOUNT - 1;
      0017D4 FArCCr05              5442 	ld	a, (#_ENEMYCOUNT)
      0017D7 3D                    5443 	dec	a
      0017D8 EAr4Dr00              5444 	ld	(#_enemyCollisionCount),a
      0017DB 18 04                 5445 	jr	00130$
      0017DD                       5446 00125$:
                                   5447 ;main.c:584: enemyCollisionCount--;
      0017DD 21r4Dr00              5448 	ld	hl, #_enemyCollisionCount
      0017E0 35                    5449 	dec	(hl)
      0017E1                       5450 00130$:
                                   5451 ;main.c:633: }
      0017E1 E8 13                 5452 	add	sp, #19
      0017E3 C9                    5453 	ret
                                   5454 ;main.c:644: void fire() {
                                   5455 ;	---------------------------------
                                   5456 ; Function fire
                                   5457 ; ---------------------------------
      0017E4                       5458 _fire::
      0017E4 E8 FA                 5459 	add	sp, #-6
                                   5460 ;main.c:646: oldestProjectile += 1;
      0017E6 21r39r00              5461 	ld	hl, #_oldestProjectile
      0017E9 34                    5462 	inc	(hl)
      0017EA 7E                    5463 	ld	a, (hl)
                                   5464 ;main.c:647: if (oldestProjectile >= PROJECTILECOUNT) {
      0017EB 21rDDr05              5465 	ld	hl, #_PROJECTILECOUNT
      0017EE 4E                    5466 	ld	c, (hl)
      0017EF 21r39r00              5467 	ld	hl, #_oldestProjectile
      0017F2 7E                    5468 	ld	a, (hl)
      0017F3 91                    5469 	sub	a, c
      0017F4 38 02                 5470 	jr	C, 00102$
                                   5471 ;main.c:648: oldestProjectile = 0;
      0017F6 36 00                 5472 	ld	(hl), #0x00
      0017F8                       5473 00102$:
                                   5474 ;main.c:651: if (currentGun == 0) {
      0017F8 FAr4Er00              5475 	ld	a, (#_currentGun)
      0017FB B7                    5476 	or	a, a
      0017FC 20 1F                 5477 	jr	NZ, 00104$
                                   5478 ;main.c:652: projectiles[oldestProjectile] = singleGun;
      0017FE 21r39r00              5479 	ld	hl, #_oldestProjectile
      001801 4E                    5480 	ld	c, (hl)
      001802 06 00                 5481 	ld	b, #0x00
      001804 69                    5482 	ld	l, c
      001805 60                    5483 	ld	h, b
      001806 29                    5484 	add	hl, hl
      001807 29                    5485 	add	hl, hl
      001808 09                    5486 	add	hl, bc
      001809 29                    5487 	add	hl, hl
      00180A 09                    5488 	add	hl, bc
      00180B 01r50r00              5489 	ld	bc,#_projectiles
      00180E 09                    5490 	add	hl,bc
      00180F 11 0B 00              5491 	ld	de, #0x000b
      001812 D5                    5492 	push	de
      001813 11r18r00              5493 	ld	de, #_singleGun
      001816 D5                    5494 	push	de
      001817 E5                    5495 	push	hl
      001818 CDr00r00              5496 	call	___memcpy
      00181B E8 06                 5497 	add	sp, #6
      00181D                       5498 00104$:
                                   5499 ;main.c:654: if (currentGun == 1) {
      00181D FAr4Er00              5500 	ld	a, (#_currentGun)
      001820 3D                    5501 	dec	a
      001821 20 1F                 5502 	jr	NZ, 00106$
                                   5503 ;main.c:655: projectiles[oldestProjectile] = doubleGun;
      001823 21r39r00              5504 	ld	hl, #_oldestProjectile
      001826 4E                    5505 	ld	c, (hl)
      001827 06 00                 5506 	ld	b, #0x00
      001829 69                    5507 	ld	l, c
      00182A 60                    5508 	ld	h, b
      00182B 29                    5509 	add	hl, hl
      00182C 29                    5510 	add	hl, hl
      00182D 09                    5511 	add	hl, bc
      00182E 29                    5512 	add	hl, hl
      00182F 09                    5513 	add	hl, bc
      001830 01r50r00              5514 	ld	bc,#_projectiles
      001833 09                    5515 	add	hl,bc
      001834 11 0B 00              5516 	ld	de, #0x000b
      001837 D5                    5517 	push	de
      001838 11r23r00              5518 	ld	de, #_doubleGun
      00183B D5                    5519 	push	de
      00183C E5                    5520 	push	hl
      00183D CDr00r00              5521 	call	___memcpy
      001840 E8 06                 5522 	add	sp, #6
      001842                       5523 00106$:
                                   5524 ;main.c:657: if (currentGun == 2) {
      001842 FAr4Er00              5525 	ld	a, (#_currentGun)
      001845 D6 02                 5526 	sub	a, #0x02
      001847 20 1F                 5527 	jr	NZ, 00108$
                                   5528 ;main.c:658: projectiles[oldestProjectile] = missile;
      001849 21r39r00              5529 	ld	hl, #_oldestProjectile
      00184C 4E                    5530 	ld	c, (hl)
      00184D 06 00                 5531 	ld	b, #0x00
      00184F 69                    5532 	ld	l, c
      001850 60                    5533 	ld	h, b
      001851 29                    5534 	add	hl, hl
      001852 29                    5535 	add	hl, hl
      001853 09                    5536 	add	hl, bc
      001854 29                    5537 	add	hl, hl
      001855 09                    5538 	add	hl, bc
      001856 01r50r00              5539 	ld	bc,#_projectiles
      001859 09                    5540 	add	hl,bc
      00185A 11 0B 00              5541 	ld	de, #0x000b
      00185D D5                    5542 	push	de
      00185E 11r2Er00              5543 	ld	de, #_missile
      001861 D5                    5544 	push	de
      001862 E5                    5545 	push	hl
      001863 CDr00r00              5546 	call	___memcpy
      001866 E8 06                 5547 	add	sp, #6
      001868                       5548 00108$:
                                   5549 ;main.c:660: projectiles[oldestProjectile].x = playerDrawX;
      001868 21r39r00              5550 	ld	hl, #_oldestProjectile
      00186B 4E                    5551 	ld	c, (hl)
      00186C 06 00                 5552 	ld	b, #0x00
      00186E 69                    5553 	ld	l, c
      00186F 60                    5554 	ld	h, b
      001870 29                    5555 	add	hl, hl
      001871 29                    5556 	add	hl, hl
      001872 09                    5557 	add	hl, bc
      001873 29                    5558 	add	hl, hl
      001874 09                    5559 	add	hl, bc
      001875 01r50r00              5560 	ld	bc,#_projectiles
      001878 09                    5561 	add	hl,bc
      001879 E5                    5562 	push	hl
      00187A FAr43r00              5563 	ld	a, (#_playerDrawX)
      00187D E1                    5564 	pop	hl
      00187E 0E 00                 5565 	ld	c, #0x00
      001880 22                    5566 	ld	(hl+), a
      001881 71                    5567 	ld	(hl), c
                                   5568 ;main.c:661: projectiles[oldestProjectile].y = playerDrawY;
      001882 21r39r00              5569 	ld	hl, #_oldestProjectile
      001885 4E                    5570 	ld	c, (hl)
      001886 06 00                 5571 	ld	b, #0x00
      001888 69                    5572 	ld	l, c
      001889 60                    5573 	ld	h, b
      00188A 29                    5574 	add	hl, hl
      00188B 29                    5575 	add	hl, hl
      00188C 09                    5576 	add	hl, bc
      00188D 29                    5577 	add	hl, hl
      00188E 09                    5578 	add	hl, bc
      00188F 01r50r00              5579 	ld	bc,#_projectiles
      001892 09                    5580 	add	hl,bc
      001893 23                    5581 	inc	hl
      001894 23                    5582 	inc	hl
      001895 E5                    5583 	push	hl
      001896 FAr44r00              5584 	ld	a, (#_playerDrawY)
      001899 E1                    5585 	pop	hl
      00189A 0E 00                 5586 	ld	c, #0x00
      00189C 22                    5587 	ld	(hl+), a
      00189D 71                    5588 	ld	(hl), c
                                   5589 ;main.c:662: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      00189E 21r39r00              5590 	ld	hl, #_oldestProjectile
      0018A1 4E                    5591 	ld	c, (hl)
      0018A2 06 00                 5592 	ld	b, #0x00
      0018A4 69                    5593 	ld	l, c
      0018A5 60                    5594 	ld	h, b
      0018A6 29                    5595 	add	hl, hl
      0018A7 29                    5596 	add	hl, hl
      0018A8 09                    5597 	add	hl, bc
      0018A9 29                    5598 	add	hl, hl
      0018AA 09                    5599 	add	hl, bc
      0018AB 01r50r00              5600 	ld	bc,#_projectiles
      0018AE 09                    5601 	add	hl,bc
      0018AF 5D                    5602 	ld	e, l
      0018B0 54                    5603 	ld	d, h
      0018B1 21 04 00              5604 	ld	hl, #0x0004
      0018B4 19                    5605 	add	hl, de
      0018B5 4D                    5606 	ld	c, l
      0018B6 44                    5607 	ld	b, h
      0018B7 21 06 00              5608 	ld	hl, #0x0006
      0018BA 19                    5609 	add	hl, de
      0018BB 7E                    5610 	ld	a, (hl)
      0018BC C5                    5611 	push	bc
      0018BD F5                    5612 	push	af
      0018BE 33                    5613 	inc	sp
      0018BF FAr3Br00              5614 	ld	a, (#_xDir)
      0018C2 F5                    5615 	push	af
      0018C3 33                    5616 	inc	sp
      0018C4 CDr00r00              5617 	call	__muluschar
      0018C7 E1                    5618 	pop	hl
      0018C8 7B                    5619 	ld	a, e
      0018C9 C1                    5620 	pop	bc
      0018CA 02                    5621 	ld	(bc), a
                                   5622 ;main.c:663: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      0018CB 21r39r00              5623 	ld	hl, #_oldestProjectile
      0018CE 4E                    5624 	ld	c, (hl)
      0018CF 06 00                 5625 	ld	b, #0x00
      0018D1 69                    5626 	ld	l, c
      0018D2 60                    5627 	ld	h, b
      0018D3 29                    5628 	add	hl, hl
      0018D4 29                    5629 	add	hl, hl
      0018D5 09                    5630 	add	hl, bc
      0018D6 29                    5631 	add	hl, hl
      0018D7 09                    5632 	add	hl, bc
      0018D8 01r50r00              5633 	ld	bc,#_projectiles
      0018DB 09                    5634 	add	hl,bc
      0018DC 5D                    5635 	ld	e, l
      0018DD 54                    5636 	ld	d, h
      0018DE 21 05 00              5637 	ld	hl, #0x0005
      0018E1 19                    5638 	add	hl, de
      0018E2 4D                    5639 	ld	c, l
      0018E3 44                    5640 	ld	b, h
      0018E4 21 06 00              5641 	ld	hl, #0x0006
      0018E7 19                    5642 	add	hl, de
      0018E8 7E                    5643 	ld	a, (hl)
      0018E9 C5                    5644 	push	bc
      0018EA F5                    5645 	push	af
      0018EB 33                    5646 	inc	sp
      0018EC FAr3Cr00              5647 	ld	a, (#_yDir)
      0018EF F5                    5648 	push	af
      0018F0 33                    5649 	inc	sp
      0018F1 CDr00r00              5650 	call	__muluschar
      0018F4 E1                    5651 	pop	hl
      0018F5 7B                    5652 	ld	a, e
      0018F6 C1                    5653 	pop	bc
      0018F7 02                    5654 	ld	(bc), a
                                   5655 ;main.c:646: oldestProjectile += 1;
      0018F8 FAr39r00              5656 	ld	a, (#_oldestProjectile)
      0018FB F8 05                 5657 	ldhl	sp,	#5
      0018FD 77                    5658 	ld	(hl), a
                                   5659 ;main.c:652: projectiles[oldestProjectile] = singleGun;
      0018FE 21r39r00              5660 	ld	hl, #_oldestProjectile
      001901 4E                    5661 	ld	c, (hl)
      001902 06 00                 5662 	ld	b, #0x00
      001904 69                    5663 	ld	l, c
      001905 60                    5664 	ld	h, b
      001906 29                    5665 	add	hl, hl
      001907 29                    5666 	add	hl, hl
      001908 09                    5667 	add	hl, bc
      001909 29                    5668 	add	hl, hl
      00190A 09                    5669 	add	hl, bc
                                   5670 ;main.c:666: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      00190B 01r50r00              5671 	ld	bc,#_projectiles
      00190E 09                    5672 	add	hl,bc
      00190F 4D                    5673 	ld	c, l
      001910 44                    5674 	ld	b, h
      001911 F8 05                 5675 	ldhl	sp,	#5
      001913 7E                    5676 	ld	a, (hl)
      001914 C6 14                 5677 	add	a, #0x14
      001916 77                    5678 	ld	(hl), a
      001917 21 0A 00              5679 	ld	hl, #0x000a
      00191A 09                    5680 	add	hl, bc
      00191B 7E                    5681 	ld	a, (hl)
      00191C F8 04                 5682 	ldhl	sp,	#4
      00191E 77                    5683 	ld	(hl), a
                                   5684 ;main.c:665: if (yDir != 0 && xDir == 0) {
      00191F FAr3Cr00              5685 	ld	a, (#_yDir)
      001922 B7                    5686 	or	a, a
      001923 CArE9r19              5687 	jp	Z, 00135$
      001926 FAr3Br00              5688 	ld	a, (#_xDir)
      001929 B7                    5689 	or	a, a
      00192A C2rE9r19              5690 	jp	NZ, 00135$
                                   5691 ;main.c:666: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
                                   5692 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00192D F8 05                 5693 	ldhl	sp,	#5
      00192F 7E                    5694 	ld	a, (hl)
      001930 F8 02                 5695 	ldhl	sp,	#2
      001932 22                    5696 	ld	(hl+), a
      001933 36 00                 5697 	ld	(hl), #0x00
      001935 3E 02                 5698 	ld	a, #0x02
      001937                       5699 00246$:
      001937 F8 02                 5700 	ldhl	sp,	#2
      001939 CB 26                 5701 	sla	(hl)
      00193B 23                    5702 	inc	hl
      00193C CB 16                 5703 	rl	(hl)
      00193E 3D                    5704 	dec	a
      00193F 20 F6                 5705 	jr	NZ, 00246$
      001941 2B                    5706 	dec	hl
      001942 2A                    5707 	ld	a, (hl+)
      001943 5F                    5708 	ld	e, a
      001944 56                    5709 	ld	d, (hl)
      001945 21r00r00              5710 	ld	hl, #_shadow_OAM
      001948 19                    5711 	add	hl, de
      001949 33                    5712 	inc	sp
      00194A 33                    5713 	inc	sp
      00194B 5D                    5714 	ld	e, l
      00194C 54                    5715 	ld	d, h
      00194D D5                    5716 	push	de
      00194E 21 02 00              5717 	ld	hl, #0x0002
      001951 19                    5718 	add	hl, de
      001952 E5                    5719 	push	hl
      001953 7D                    5720 	ld	a, l
      001954 F8 04                 5721 	ldhl	sp,	#4
      001956 77                    5722 	ld	(hl), a
      001957 E1                    5723 	pop	hl
      001958 7C                    5724 	ld	a, h
      001959 F8 03                 5725 	ldhl	sp,	#3
      00195B 32                    5726 	ld	(hl-), a
      00195C 2A                    5727 	ld	a, (hl+)
      00195D 5F                    5728 	ld	e, a
      00195E 2A                    5729 	ld	a, (hl+)
      00195F 57                    5730 	ld	d, a
      001960 7E                    5731 	ld	a, (hl)
      001961 12                    5732 	ld	(de), a
                                   5733 ;main.c:646: oldestProjectile += 1;
      001962 FAr39r00              5734 	ld	a, (#_oldestProjectile)
                                   5735 ;main.c:666: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      001965 C6 14                 5736 	add	a, #0x14
      001967 F8 05                 5737 	ldhl	sp,	#5
      001969 77                    5738 	ld	(hl), a
                                   5739 ;main.c:667: if (yDir == 1) {
      00196A FAr3Cr00              5740 	ld	a, (#_yDir)
      00196D 3D                    5741 	dec	a
      00196E 20 3D                 5742 	jr	NZ, 00110$
                                   5743 ;main.c:668: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
                                   5744 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001970 F8 05                 5745 	ldhl	sp,	#5
      001972 3A                    5746 	ld	a, (hl-)
      001973 22                    5747 	ld	(hl+), a
      001974 36 00                 5748 	ld	(hl), #0x00
      001976 3E 02                 5749 	ld	a, #0x02
      001978                       5750 00249$:
      001978 F8 04                 5751 	ldhl	sp,	#4
      00197A CB 26                 5752 	sla	(hl)
      00197C 23                    5753 	inc	hl
      00197D CB 16                 5754 	rl	(hl)
      00197F 3D                    5755 	dec	a
      001980 20 F6                 5756 	jr	NZ, 00249$
      001982 2B                    5757 	dec	hl
      001983 2A                    5758 	ld	a, (hl+)
      001984 5F                    5759 	ld	e, a
      001985 56                    5760 	ld	d, (hl)
      001986 21r00r00              5761 	ld	hl, #_shadow_OAM
      001989 19                    5762 	add	hl, de
      00198A E5                    5763 	push	hl
      00198B 7D                    5764 	ld	a, l
      00198C F8 04                 5765 	ldhl	sp,	#4
      00198E 77                    5766 	ld	(hl), a
      00198F E1                    5767 	pop	hl
      001990 7C                    5768 	ld	a, h
      001991 F8 03                 5769 	ldhl	sp,	#3
      001993 32                    5770 	ld	(hl-), a
      001994 2A                    5771 	ld	a, (hl+)
      001995 5F                    5772 	ld	e, a
      001996 56                    5773 	ld	d, (hl)
      001997 21 03 00              5774 	ld	hl, #0x0003
      00199A 19                    5775 	add	hl, de
      00199B E5                    5776 	push	hl
      00199C 7D                    5777 	ld	a, l
      00199D F8 06                 5778 	ldhl	sp,	#6
      00199F 77                    5779 	ld	(hl), a
      0019A0 E1                    5780 	pop	hl
      0019A1 7C                    5781 	ld	a, h
      0019A2 F8 05                 5782 	ldhl	sp,	#5
      0019A4 32                    5783 	ld	(hl-), a
      0019A5 2A                    5784 	ld	a,	(hl+)
      0019A6 66                    5785 	ld	h, (hl)
      0019A7 6F                    5786 	ld	l, a
      0019A8 36 40                 5787 	ld	(hl), #0x40
                                   5788 ;main.c:668: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
      0019AA C3rF6r1B              5789 	jp	00136$
      0019AD                       5790 00110$:
                                   5791 ;main.c:673: set_sprite_prop(20+oldestProjectile, 0); 
                                   5792 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0019AD F8 05                 5793 	ldhl	sp,	#5
      0019AF 3A                    5794 	ld	a, (hl-)
      0019B0 22                    5795 	ld	(hl+), a
      0019B1 36 00                 5796 	ld	(hl), #0x00
      0019B3 3E 02                 5797 	ld	a, #0x02
      0019B5                       5798 00250$:
      0019B5 F8 04                 5799 	ldhl	sp,	#4
      0019B7 CB 26                 5800 	sla	(hl)
      0019B9 23                    5801 	inc	hl
      0019BA CB 16                 5802 	rl	(hl)
      0019BC 3D                    5803 	dec	a
      0019BD 20 F6                 5804 	jr	NZ, 00250$
      0019BF 11r00r00              5805 	ld	de, #_shadow_OAM
      0019C2 3A                    5806 	ld	a, (hl-)
      0019C3 6E                    5807 	ld	l, (hl)
      0019C4 67                    5808 	ld	h, a
      0019C5 19                    5809 	add	hl, de
      0019C6 E5                    5810 	push	hl
      0019C7 7D                    5811 	ld	a, l
      0019C8 F8 04                 5812 	ldhl	sp,	#4
      0019CA 77                    5813 	ld	(hl), a
      0019CB E1                    5814 	pop	hl
      0019CC 7C                    5815 	ld	a, h
      0019CD F8 03                 5816 	ldhl	sp,	#3
      0019CF 32                    5817 	ld	(hl-), a
      0019D0 2A                    5818 	ld	a, (hl+)
      0019D1 5F                    5819 	ld	e, a
      0019D2 56                    5820 	ld	d, (hl)
      0019D3 21 03 00              5821 	ld	hl, #0x0003
      0019D6 19                    5822 	add	hl, de
      0019D7 E5                    5823 	push	hl
      0019D8 7D                    5824 	ld	a, l
      0019D9 F8 06                 5825 	ldhl	sp,	#6
      0019DB 77                    5826 	ld	(hl), a
      0019DC E1                    5827 	pop	hl
      0019DD 7C                    5828 	ld	a, h
      0019DE F8 05                 5829 	ldhl	sp,	#5
      0019E0 32                    5830 	ld	(hl-), a
      0019E1 2A                    5831 	ld	a,	(hl+)
      0019E2 66                    5832 	ld	h, (hl)
      0019E3 6F                    5833 	ld	l, a
      0019E4 36 00                 5834 	ld	(hl), #0x00
                                   5835 ;main.c:673: set_sprite_prop(20+oldestProjectile, 0); 
      0019E6 C3rF6r1B              5836 	jp	00136$
      0019E9                       5837 00135$:
                                   5838 ;main.c:678: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type+1);
                                   5839 ;main.c:677: else if (xDir != 0 && yDir == 0) {
      0019E9 FAr3Br00              5840 	ld	a, (#_xDir)
      0019EC B7                    5841 	or	a, a
      0019ED CArB6r1A              5842 	jp	Z, 00131$
      0019F0 FAr3Cr00              5843 	ld	a, (#_yDir)
      0019F3 B7                    5844 	or	a, a
      0019F4 C2rB6r1A              5845 	jp	NZ, 00131$
                                   5846 ;main.c:678: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type+1);
      0019F7 F8 04                 5847 	ldhl	sp,	#4
      0019F9 34                    5848 	inc	(hl)
                                   5849 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0019FA 23                    5850 	inc	hl
      0019FB 7E                    5851 	ld	a, (hl)
      0019FC F8 02                 5852 	ldhl	sp,	#2
      0019FE 22                    5853 	ld	(hl+), a
      0019FF 36 00                 5854 	ld	(hl), #0x00
      001A01 3E 02                 5855 	ld	a, #0x02
      001A03                       5856 00251$:
      001A03 F8 02                 5857 	ldhl	sp,	#2
      001A05 CB 26                 5858 	sla	(hl)
      001A07 23                    5859 	inc	hl
      001A08 CB 16                 5860 	rl	(hl)
      001A0A 3D                    5861 	dec	a
      001A0B 20 F6                 5862 	jr	NZ, 00251$
      001A0D 2B                    5863 	dec	hl
      001A0E 2A                    5864 	ld	a, (hl+)
      001A0F 5F                    5865 	ld	e, a
      001A10 56                    5866 	ld	d, (hl)
      001A11 21r00r00              5867 	ld	hl, #_shadow_OAM
      001A14 19                    5868 	add	hl, de
      001A15 33                    5869 	inc	sp
      001A16 33                    5870 	inc	sp
      001A17 5D                    5871 	ld	e, l
      001A18 54                    5872 	ld	d, h
      001A19 D5                    5873 	push	de
      001A1A 21 02 00              5874 	ld	hl, #0x0002
      001A1D 19                    5875 	add	hl, de
      001A1E E5                    5876 	push	hl
      001A1F 7D                    5877 	ld	a, l
      001A20 F8 04                 5878 	ldhl	sp,	#4
      001A22 77                    5879 	ld	(hl), a
      001A23 E1                    5880 	pop	hl
      001A24 7C                    5881 	ld	a, h
      001A25 F8 03                 5882 	ldhl	sp,	#3
      001A27 32                    5883 	ld	(hl-), a
      001A28 2A                    5884 	ld	a, (hl+)
      001A29 5F                    5885 	ld	e, a
      001A2A 2A                    5886 	ld	a, (hl+)
      001A2B 57                    5887 	ld	d, a
      001A2C 7E                    5888 	ld	a, (hl)
      001A2D 12                    5889 	ld	(de), a
                                   5890 ;main.c:646: oldestProjectile += 1;
      001A2E FAr39r00              5891 	ld	a, (#_oldestProjectile)
                                   5892 ;main.c:666: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      001A31 C6 14                 5893 	add	a, #0x14
      001A33 F8 05                 5894 	ldhl	sp,	#5
      001A35 77                    5895 	ld	(hl), a
                                   5896 ;main.c:679: if (xDir == 1) {
      001A36 FAr3Br00              5897 	ld	a, (#_xDir)
      001A39 3D                    5898 	dec	a
      001A3A 20 3D                 5899 	jr	NZ, 00113$
                                   5900 ;main.c:680: set_sprite_prop(20+oldestProjectile, 0); 
                                   5901 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001A3C F8 05                 5902 	ldhl	sp,	#5
      001A3E 3A                    5903 	ld	a, (hl-)
      001A3F 22                    5904 	ld	(hl+), a
      001A40 36 00                 5905 	ld	(hl), #0x00
      001A42 3E 02                 5906 	ld	a, #0x02
      001A44                       5907 00254$:
      001A44 F8 04                 5908 	ldhl	sp,	#4
      001A46 CB 26                 5909 	sla	(hl)
      001A48 23                    5910 	inc	hl
      001A49 CB 16                 5911 	rl	(hl)
      001A4B 3D                    5912 	dec	a
      001A4C 20 F6                 5913 	jr	NZ, 00254$
      001A4E 2B                    5914 	dec	hl
      001A4F 2A                    5915 	ld	a, (hl+)
      001A50 5F                    5916 	ld	e, a
      001A51 56                    5917 	ld	d, (hl)
      001A52 21r00r00              5918 	ld	hl, #_shadow_OAM
      001A55 19                    5919 	add	hl, de
      001A56 E5                    5920 	push	hl
      001A57 7D                    5921 	ld	a, l
      001A58 F8 04                 5922 	ldhl	sp,	#4
      001A5A 77                    5923 	ld	(hl), a
      001A5B E1                    5924 	pop	hl
      001A5C 7C                    5925 	ld	a, h
      001A5D F8 03                 5926 	ldhl	sp,	#3
      001A5F 32                    5927 	ld	(hl-), a
      001A60 2A                    5928 	ld	a, (hl+)
      001A61 5F                    5929 	ld	e, a
      001A62 56                    5930 	ld	d, (hl)
      001A63 21 03 00              5931 	ld	hl, #0x0003
      001A66 19                    5932 	add	hl, de
      001A67 E5                    5933 	push	hl
      001A68 7D                    5934 	ld	a, l
      001A69 F8 06                 5935 	ldhl	sp,	#6
      001A6B 77                    5936 	ld	(hl), a
      001A6C E1                    5937 	pop	hl
      001A6D 7C                    5938 	ld	a, h
      001A6E F8 05                 5939 	ldhl	sp,	#5
      001A70 32                    5940 	ld	(hl-), a
      001A71 2A                    5941 	ld	a,	(hl+)
      001A72 66                    5942 	ld	h, (hl)
      001A73 6F                    5943 	ld	l, a
      001A74 36 00                 5944 	ld	(hl), #0x00
                                   5945 ;main.c:680: set_sprite_prop(20+oldestProjectile, 0); 
      001A76 C3rF6r1B              5946 	jp	00136$
      001A79                       5947 00113$:
                                   5948 ;main.c:683: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
                                   5949 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001A79 F8 05                 5950 	ldhl	sp,	#5
      001A7B 3A                    5951 	ld	a, (hl-)
      001A7C 22                    5952 	ld	(hl+), a
      001A7D 36 00                 5953 	ld	(hl), #0x00
      001A7F 3E 02                 5954 	ld	a, #0x02
      001A81                       5955 00255$:
      001A81 F8 04                 5956 	ldhl	sp,	#4
      001A83 CB 26                 5957 	sla	(hl)
      001A85 23                    5958 	inc	hl
      001A86 CB 16                 5959 	rl	(hl)
      001A88 3D                    5960 	dec	a
      001A89 20 F6                 5961 	jr	NZ, 00255$
      001A8B 2B                    5962 	dec	hl
      001A8C 2A                    5963 	ld	a, (hl+)
      001A8D 5F                    5964 	ld	e, a
      001A8E 56                    5965 	ld	d, (hl)
      001A8F 21r00r00              5966 	ld	hl, #_shadow_OAM
      001A92 19                    5967 	add	hl, de
      001A93 E5                    5968 	push	hl
      001A94 7D                    5969 	ld	a, l
      001A95 F8 04                 5970 	ldhl	sp,	#4
      001A97 77                    5971 	ld	(hl), a
      001A98 E1                    5972 	pop	hl
      001A99 7C                    5973 	ld	a, h
      001A9A F8 03                 5974 	ldhl	sp,	#3
      001A9C 32                    5975 	ld	(hl-), a
      001A9D 2A                    5976 	ld	a, (hl+)
      001A9E 5F                    5977 	ld	e, a
      001A9F 56                    5978 	ld	d, (hl)
      001AA0 21 03 00              5979 	ld	hl, #0x0003
      001AA3 19                    5980 	add	hl, de
      001AA4 E5                    5981 	push	hl
      001AA5 7D                    5982 	ld	a, l
      001AA6 F8 06                 5983 	ldhl	sp,	#6
      001AA8 77                    5984 	ld	(hl), a
      001AA9 E1                    5985 	pop	hl
      001AAA 7C                    5986 	ld	a, h
      001AAB F8 05                 5987 	ldhl	sp,	#5
      001AAD 32                    5988 	ld	(hl-), a
      001AAE 2A                    5989 	ld	a,	(hl+)
      001AAF 66                    5990 	ld	h, (hl)
      001AB0 6F                    5991 	ld	l, a
      001AB1 36 20                 5992 	ld	(hl), #0x20
                                   5993 ;main.c:683: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
      001AB3 C3rF6r1B              5994 	jp	00136$
      001AB6                       5995 00131$:
                                   5996 ;main.c:687: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type+2);
      001AB6 F8 04                 5997 	ldhl	sp,	#4
      001AB8 7E                    5998 	ld	a, (hl)
      001AB9 C6 02                 5999 	add	a, #0x02
      001ABB F8 01                 6000 	ldhl	sp,	#1
      001ABD 77                    6001 	ld	(hl), a
                                   6002 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001ABE F8 05                 6003 	ldhl	sp,	#5
      001AC0 3A                    6004 	ld	a, (hl-)
      001AC1 22                    6005 	ld	(hl+), a
      001AC2 36 00                 6006 	ld	(hl), #0x00
      001AC4 3E 02                 6007 	ld	a, #0x02
      001AC6                       6008 00256$:
      001AC6 F8 04                 6009 	ldhl	sp,	#4
      001AC8 CB 26                 6010 	sla	(hl)
      001ACA 23                    6011 	inc	hl
      001ACB CB 16                 6012 	rl	(hl)
      001ACD 3D                    6013 	dec	a
      001ACE 20 F6                 6014 	jr	NZ, 00256$
      001AD0 11r00r00              6015 	ld	de, #_shadow_OAM
      001AD3 3A                    6016 	ld	a, (hl-)
      001AD4 6E                    6017 	ld	l, (hl)
      001AD5 67                    6018 	ld	h, a
      001AD6 19                    6019 	add	hl, de
      001AD7 E5                    6020 	push	hl
      001AD8 7D                    6021 	ld	a, l
      001AD9 F8 04                 6022 	ldhl	sp,	#4
      001ADB 77                    6023 	ld	(hl), a
      001ADC E1                    6024 	pop	hl
      001ADD 7C                    6025 	ld	a, h
      001ADE F8 03                 6026 	ldhl	sp,	#3
      001AE0 32                    6027 	ld	(hl-), a
      001AE1 2A                    6028 	ld	a, (hl+)
      001AE2 5F                    6029 	ld	e, a
      001AE3 56                    6030 	ld	d, (hl)
      001AE4 21 02 00              6031 	ld	hl, #0x0002
      001AE7 19                    6032 	add	hl, de
      001AE8 E5                    6033 	push	hl
      001AE9 7D                    6034 	ld	a, l
      001AEA F8 06                 6035 	ldhl	sp,	#6
      001AEC 77                    6036 	ld	(hl), a
      001AED E1                    6037 	pop	hl
      001AEE 7C                    6038 	ld	a, h
      001AEF F8 05                 6039 	ldhl	sp,	#5
      001AF1 32                    6040 	ld	(hl-), a
      001AF2 2A                    6041 	ld	a, (hl+)
      001AF3 5F                    6042 	ld	e, a
      001AF4 56                    6043 	ld	d, (hl)
      001AF5 F8 01                 6044 	ldhl	sp,	#1
      001AF7 7E                    6045 	ld	a, (hl)
      001AF8 12                    6046 	ld	(de), a
                                   6047 ;main.c:688: if (xDir == 1 && yDir == -1) {
      001AF9 FAr3Br00              6048 	ld	a, (#_xDir)
      001AFC 3D                    6049 	dec	a
      001AFD 3E 01                 6050 	ld	a, #0x01
      001AFF 28 01                 6051 	jr	Z, 00258$
      001B01 AF                    6052 	xor	a, a
      001B02                       6053 00258$:
      001B02 F8 02                 6054 	ldhl	sp,	#2
      001B04 77                    6055 	ld	(hl), a
                                   6056 ;main.c:646: oldestProjectile += 1;
      001B05 FAr39r00              6057 	ld	a, (#_oldestProjectile)
      001B08 F8 05                 6058 	ldhl	sp,	#5
      001B0A 77                    6059 	ld	(hl), a
                                   6060 ;main.c:688: if (xDir == 1 && yDir == -1) {
      001B0B FAr3Cr00              6061 	ld	a, (#_yDir)
      001B0E 3C                    6062 	inc	a
      001B0F 3E 01                 6063 	ld	a, #0x01
      001B11 28 01                 6064 	jr	Z, 00260$
      001B13 AF                    6065 	xor	a, a
      001B14                       6066 00260$:
      001B14 F8 03                 6067 	ldhl	sp,	#3
                                   6068 ;main.c:666: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      001B16 22                    6069 	ld	(hl+), a
      001B17 23                    6070 	inc	hl
      001B18 3A                    6071 	ld	a, (hl-)
      001B19 C6 14                 6072 	add	a, #0x14
                                   6073 ;main.c:688: if (xDir == 1 && yDir == -1) {
      001B1B 32                    6074 	ld	(hl-), a
      001B1C 2B                    6075 	dec	hl
      001B1D 7E                    6076 	ld	a, (hl)
      001B1E B7                    6077 	or	a, a
      001B1F 28 43                 6078 	jr	Z, 00127$
      001B21 23                    6079 	inc	hl
      001B22 7E                    6080 	ld	a, (hl)
      001B23 B7                    6081 	or	a, a
      001B24 28 3E                 6082 	jr	Z, 00127$
                                   6083 ;main.c:689: set_sprite_prop(20+oldestProjectile, 0); //default is right & up
      001B26 23                    6084 	inc	hl
      001B27 2A                    6085 	ld	a, (hl+)
      001B28 77                    6086 	ld	(hl), a
                                   6087 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001B29 3A                    6088 	ld	a, (hl-)
      001B2A 22                    6089 	ld	(hl+), a
      001B2B 36 00                 6090 	ld	(hl), #0x00
      001B2D 3E 02                 6091 	ld	a, #0x02
      001B2F                       6092 00261$:
      001B2F F8 04                 6093 	ldhl	sp,	#4
      001B31 CB 26                 6094 	sla	(hl)
      001B33 23                    6095 	inc	hl
      001B34 CB 16                 6096 	rl	(hl)
      001B36 3D                    6097 	dec	a
      001B37 20 F6                 6098 	jr	NZ, 00261$
      001B39 2B                    6099 	dec	hl
      001B3A 2A                    6100 	ld	a, (hl+)
      001B3B 5F                    6101 	ld	e, a
      001B3C 56                    6102 	ld	d, (hl)
      001B3D 21r00r00              6103 	ld	hl, #_shadow_OAM
      001B40 19                    6104 	add	hl, de
      001B41 E5                    6105 	push	hl
      001B42 7D                    6106 	ld	a, l
      001B43 F8 04                 6107 	ldhl	sp,	#4
      001B45 77                    6108 	ld	(hl), a
      001B46 E1                    6109 	pop	hl
      001B47 7C                    6110 	ld	a, h
      001B48 F8 03                 6111 	ldhl	sp,	#3
      001B4A 32                    6112 	ld	(hl-), a
      001B4B 2A                    6113 	ld	a, (hl+)
      001B4C 5F                    6114 	ld	e, a
      001B4D 56                    6115 	ld	d, (hl)
      001B4E 21 03 00              6116 	ld	hl, #0x0003
      001B51 19                    6117 	add	hl, de
      001B52 E5                    6118 	push	hl
      001B53 7D                    6119 	ld	a, l
      001B54 F8 06                 6120 	ldhl	sp,	#6
      001B56 77                    6121 	ld	(hl), a
      001B57 E1                    6122 	pop	hl
      001B58 7C                    6123 	ld	a, h
      001B59 F8 05                 6124 	ldhl	sp,	#5
      001B5B 32                    6125 	ld	(hl-), a
      001B5C 2A                    6126 	ld	a,	(hl+)
      001B5D 66                    6127 	ld	h, (hl)
      001B5E 6F                    6128 	ld	l, a
      001B5F 36 00                 6129 	ld	(hl), #0x00
                                   6130 ;main.c:689: set_sprite_prop(20+oldestProjectile, 0); //default is right & up
      001B61 C3rF6r1B              6131 	jp	00136$
      001B64                       6132 00127$:
                                   6133 ;main.c:667: if (yDir == 1) {
      001B64 FAr3Cr00              6134 	ld	a, (#_yDir)
      001B67 3D                    6135 	dec	a
      001B68 3E 01                 6136 	ld	a, #0x01
      001B6A 28 01                 6137 	jr	Z, 00263$
      001B6C AF                    6138 	xor	a, a
      001B6D                       6139 00263$:
      001B6D F8 05                 6140 	ldhl	sp,	#5
      001B6F 77                    6141 	ld	(hl), a
                                   6142 ;main.c:691: else if (xDir == 1 && yDir == 1) {
      001B70 F8 02                 6143 	ldhl	sp,	#2
      001B72 7E                    6144 	ld	a, (hl)
      001B73 B7                    6145 	or	a, a
      001B74 28 43                 6146 	jr	Z, 00123$
      001B76 F8 05                 6147 	ldhl	sp,	#5
      001B78 7E                    6148 	ld	a, (hl)
      001B79 B7                    6149 	or	a, a
      001B7A 28 3D                 6150 	jr	Z, 00123$
                                   6151 ;main.c:692: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
      001B7C 2B                    6152 	dec	hl
      001B7D 2A                    6153 	ld	a, (hl+)
      001B7E 77                    6154 	ld	(hl), a
                                   6155 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001B7F 3A                    6156 	ld	a, (hl-)
      001B80 22                    6157 	ld	(hl+), a
      001B81 36 00                 6158 	ld	(hl), #0x00
      001B83 3E 02                 6159 	ld	a, #0x02
      001B85                       6160 00264$:
      001B85 F8 04                 6161 	ldhl	sp,	#4
      001B87 CB 26                 6162 	sla	(hl)
      001B89 23                    6163 	inc	hl
      001B8A CB 16                 6164 	rl	(hl)
      001B8C 3D                    6165 	dec	a
      001B8D 20 F6                 6166 	jr	NZ, 00264$
      001B8F 2B                    6167 	dec	hl
      001B90 2A                    6168 	ld	a, (hl+)
      001B91 5F                    6169 	ld	e, a
      001B92 56                    6170 	ld	d, (hl)
      001B93 21r00r00              6171 	ld	hl, #_shadow_OAM
      001B96 19                    6172 	add	hl, de
      001B97 E5                    6173 	push	hl
      001B98 7D                    6174 	ld	a, l
      001B99 F8 04                 6175 	ldhl	sp,	#4
      001B9B 77                    6176 	ld	(hl), a
      001B9C E1                    6177 	pop	hl
      001B9D 7C                    6178 	ld	a, h
      001B9E F8 03                 6179 	ldhl	sp,	#3
      001BA0 32                    6180 	ld	(hl-), a
      001BA1 2A                    6181 	ld	a, (hl+)
      001BA2 5F                    6182 	ld	e, a
      001BA3 56                    6183 	ld	d, (hl)
      001BA4 21 03 00              6184 	ld	hl, #0x0003
      001BA7 19                    6185 	add	hl, de
      001BA8 E5                    6186 	push	hl
      001BA9 7D                    6187 	ld	a, l
      001BAA F8 06                 6188 	ldhl	sp,	#6
      001BAC 77                    6189 	ld	(hl), a
      001BAD E1                    6190 	pop	hl
      001BAE 7C                    6191 	ld	a, h
      001BAF F8 05                 6192 	ldhl	sp,	#5
      001BB1 32                    6193 	ld	(hl-), a
      001BB2 2A                    6194 	ld	a,	(hl+)
      001BB3 66                    6195 	ld	h, (hl)
      001BB4 6F                    6196 	ld	l, a
      001BB5 36 40                 6197 	ld	(hl), #0x40
                                   6198 ;main.c:692: set_sprite_prop(20+oldestProjectile, S_FLIPY); 
      001BB7 18 3D                 6199 	jr	00136$
      001BB9                       6200 00123$:
                                   6201 ;main.c:694: else if (xDir == -1 && yDir == 1) {
      001BB9 FAr3Br00              6202 	ld	a, (#_xDir)
      001BBC 3C                    6203 	inc	a
      001BBD 3E 01                 6204 	ld	a, #0x01
      001BBF 28 01                 6205 	jr	Z, 00266$
      001BC1 AF                    6206 	xor	a, a
      001BC2                       6207 00266$:
      001BC2 4F                    6208 	ld	c, a
      001BC3 B7                    6209 	or	a, a
      001BC4 28 17                 6210 	jr	Z, 00119$
      001BC6 F8 05                 6211 	ldhl	sp,	#5
      001BC8 7E                    6212 	ld	a, (hl)
      001BC9 B7                    6213 	or	a, a
      001BCA 28 11                 6214 	jr	Z, 00119$
                                   6215 ;main.c:695: set_sprite_prop(20+oldestProjectile, S_FLIPY | S_FLIPX); 
      001BCC 2B                    6216 	dec	hl
                                   6217 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001BCD 6E                    6218 	ld	l, (hl)
      001BCE 01r00r00              6219 	ld	bc, #_shadow_OAM+0
                                   6220 ;	spillPairReg hl
                                   6221 ;	spillPairReg hl
      001BD1 26 00                 6222 	ld	h, #0x00
                                   6223 ;	spillPairReg hl
                                   6224 ;	spillPairReg hl
      001BD3 29                    6225 	add	hl, hl
      001BD4 29                    6226 	add	hl, hl
      001BD5 09                    6227 	add	hl, bc
      001BD6 23                    6228 	inc	hl
      001BD7 23                    6229 	inc	hl
      001BD8 23                    6230 	inc	hl
      001BD9 36 60                 6231 	ld	(hl), #0x60
                                   6232 ;main.c:695: set_sprite_prop(20+oldestProjectile, S_FLIPY | S_FLIPX); 
      001BDB 18 19                 6233 	jr	00136$
      001BDD                       6234 00119$:
                                   6235 ;main.c:697: else if (xDir == -1 && yDir == -1) {
      001BDD 79                    6236 	ld	a, c
      001BDE B7                    6237 	or	a, a
      001BDF 28 15                 6238 	jr	Z, 00136$
      001BE1 F8 03                 6239 	ldhl	sp,	#3
      001BE3 7E                    6240 	ld	a, (hl)
      001BE4 B7                    6241 	or	a, a
      001BE5 28 0F                 6242 	jr	Z, 00136$
                                   6243 ;main.c:698: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
      001BE7 23                    6244 	inc	hl
                                   6245 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001BE8 6E                    6246 	ld	l, (hl)
      001BE9 01r00r00              6247 	ld	bc, #_shadow_OAM+0
                                   6248 ;	spillPairReg hl
                                   6249 ;	spillPairReg hl
      001BEC 26 00                 6250 	ld	h, #0x00
                                   6251 ;	spillPairReg hl
                                   6252 ;	spillPairReg hl
      001BEE 29                    6253 	add	hl, hl
      001BEF 29                    6254 	add	hl, hl
      001BF0 09                    6255 	add	hl, bc
      001BF1 23                    6256 	inc	hl
      001BF2 23                    6257 	inc	hl
      001BF3 23                    6258 	inc	hl
      001BF4 36 20                 6259 	ld	(hl), #0x20
                                   6260 ;main.c:698: set_sprite_prop(20+oldestProjectile, S_FLIPX); 
      001BF6                       6261 00136$:
                                   6262 ;main.c:702: move_sprite(20+oldestProjectile, playerDrawX, playerDrawY);
      001BF6 21r44r00              6263 	ld	hl, #_playerDrawY
      001BF9 46                    6264 	ld	b, (hl)
      001BFA 21r43r00              6265 	ld	hl, #_playerDrawX
      001BFD 4E                    6266 	ld	c, (hl)
      001BFE FAr39r00              6267 	ld	a, (#_oldestProjectile)
      001C01 C6 14                 6268 	add	a, #0x14
                                   6269 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001C03 6F                    6270 	ld	l, a
                                   6271 ;	spillPairReg hl
                                   6272 ;	spillPairReg hl
      001C04 26 00                 6273 	ld	h, #0x00
                                   6274 ;	spillPairReg hl
                                   6275 ;	spillPairReg hl
      001C06 29                    6276 	add	hl, hl
      001C07 29                    6277 	add	hl, hl
      001C08 11r00r00              6278 	ld	de, #_shadow_OAM
      001C0B 19                    6279 	add	hl, de
                                   6280 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001C0C 78                    6281 	ld	a, b
      001C0D 22                    6282 	ld	(hl+), a
      001C0E 71                    6283 	ld	(hl), c
                                   6284 ;main.c:703: fireCooldown = projectiles[oldestProjectile].delay;
      001C0F 21r39r00              6285 	ld	hl, #_oldestProjectile
      001C12 4E                    6286 	ld	c, (hl)
      001C13 06 00                 6287 	ld	b, #0x00
      001C15 69                    6288 	ld	l, c
      001C16 60                    6289 	ld	h, b
      001C17 29                    6290 	add	hl, hl
      001C18 29                    6291 	add	hl, hl
      001C19 09                    6292 	add	hl, bc
      001C1A 29                    6293 	add	hl, hl
      001C1B 09                    6294 	add	hl, bc
      001C1C 01r50r00              6295 	ld	bc,#_projectiles
      001C1F 09                    6296 	add	hl,bc
      001C20 4D                    6297 	ld	c, l
      001C21 44                    6298 	ld	b, h
      001C22 21 09 00              6299 	ld	hl, #0x0009
      001C25 09                    6300 	add	hl, bc
      001C26 7E                    6301 	ld	a, (hl)
      001C27 EAr3Ar00              6302 	ld	(#_fireCooldown),a
                                   6303 ;main.c:705: playSound(projectiles[oldestProjectile].type);
      001C2A 21 0A 00              6304 	ld	hl, #0x000a
      001C2D 09                    6305 	add	hl, bc
      001C2E 7E                    6306 	ld	a, (hl)
      001C2F F5                    6307 	push	af
      001C30 33                    6308 	inc	sp
      001C31 CDr82r08              6309 	call	_playSound
                                   6310 ;main.c:709: }
      001C34 E8 07                 6311 	add	sp, #7
      001C36 C9                    6312 	ret
                                   6313 ;main.c:712: void moveProjectiles() {
                                   6314 ;	---------------------------------
                                   6315 ; Function moveProjectiles
                                   6316 ; ---------------------------------
      001C37                       6317 _moveProjectiles::
      001C37 E8 F7                 6318 	add	sp, #-9
                                   6319 ;main.c:713: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001C39 F8 08                 6320 	ldhl	sp,	#8
      001C3B 36 00                 6321 	ld	(hl), #0x00
      001C3D                       6322 00112$:
      001C3D 21rDDr05              6323 	ld	hl, #_PROJECTILECOUNT
      001C40 4E                    6324 	ld	c, (hl)
      001C41 F8 08                 6325 	ldhl	sp,	#8
      001C43 7E                    6326 	ld	a, (hl)
      001C44 91                    6327 	sub	a, c
      001C45 D2r86r1D              6328 	jp	NC, 00114$
                                   6329 ;main.c:714: projectiles[i].x -= xOverflow;
      001C48 4E                    6330 	ld	c, (hl)
      001C49 06 00                 6331 	ld	b, #0x00
      001C4B 69                    6332 	ld	l, c
      001C4C 60                    6333 	ld	h, b
      001C4D 29                    6334 	add	hl, hl
      001C4E 29                    6335 	add	hl, hl
      001C4F 09                    6336 	add	hl, bc
      001C50 29                    6337 	add	hl, hl
      001C51 09                    6338 	add	hl, bc
      001C52 01r50r00              6339 	ld	bc,#_projectiles
      001C55 09                    6340 	add	hl,bc
      001C56 33                    6341 	inc	sp
      001C57 33                    6342 	inc	sp
      001C58 5D                    6343 	ld	e, l
      001C59 54                    6344 	ld	d, h
      001C5A D5                    6345 	push	de
      001C5B 1A                    6346 	ld	a, (de)
      001C5C 4F                    6347 	ld	c, a
      001C5D 13                    6348 	inc	de
      001C5E 1A                    6349 	ld	a, (de)
      001C5F 47                    6350 	ld	b, a
      001C60 79                    6351 	ld	a, c
      001C61 21r49r00              6352 	ld	hl, #_xOverflow
      001C64 96                    6353 	sub	a, (hl)
      001C65 23                    6354 	inc	hl
      001C66 4F                    6355 	ld	c, a
      001C67 78                    6356 	ld	a, b
      001C68 9E                    6357 	sbc	a, (hl)
      001C69 47                    6358 	ld	b, a
      001C6A E1                    6359 	pop	hl
      001C6B E5                    6360 	push	hl
      001C6C 79                    6361 	ld	a, c
      001C6D 22                    6362 	ld	(hl+), a
      001C6E 70                    6363 	ld	(hl), b
                                   6364 ;main.c:715: projectiles[i].y -= yOverflow;
      001C6F D1                    6365 	pop	de
      001C70 D5                    6366 	push	de
      001C71 21 02 00              6367 	ld	hl, #0x0002
      001C74 19                    6368 	add	hl, de
      001C75 E5                    6369 	push	hl
      001C76 7D                    6370 	ld	a, l
      001C77 F8 04                 6371 	ldhl	sp,	#4
      001C79 77                    6372 	ld	(hl), a
      001C7A E1                    6373 	pop	hl
      001C7B 7C                    6374 	ld	a, h
      001C7C F8 03                 6375 	ldhl	sp,	#3
      001C7E 32                    6376 	ld	(hl-), a
      001C7F 2A                    6377 	ld	a, (hl+)
      001C80 5F                    6378 	ld	e, a
      001C81 56                    6379 	ld	d, (hl)
      001C82 1A                    6380 	ld	a, (de)
      001C83 4F                    6381 	ld	c, a
      001C84 13                    6382 	inc	de
      001C85 1A                    6383 	ld	a, (de)
      001C86 47                    6384 	ld	b, a
      001C87 79                    6385 	ld	a, c
      001C88 21r4Br00              6386 	ld	hl, #_yOverflow
      001C8B 96                    6387 	sub	a, (hl)
      001C8C 23                    6388 	inc	hl
      001C8D 4F                    6389 	ld	c, a
      001C8E 78                    6390 	ld	a, b
      001C8F 9E                    6391 	sbc	a, (hl)
      001C90 47                    6392 	ld	b, a
      001C91 F8 02                 6393 	ldhl	sp,	#2
      001C93 2A                    6394 	ld	a,	(hl+)
      001C94 66                    6395 	ld	h, (hl)
      001C95 6F                    6396 	ld	l, a
      001C96 79                    6397 	ld	a, c
      001C97 22                    6398 	ld	(hl+), a
      001C98 70                    6399 	ld	(hl), b
                                   6400 ;main.c:717: if (projectiles[i].active) {
      001C99 D1                    6401 	pop	de
      001C9A D5                    6402 	push	de
      001C9B 21 08 00              6403 	ld	hl, #0x0008
      001C9E 19                    6404 	add	hl, de
      001C9F 4D                    6405 	ld	c, l
      001CA0 44                    6406 	ld	b, h
      001CA1 0A                    6407 	ld	a, (bc)
      001CA2 B7                    6408 	or	a, a
      001CA3 CAr80r1D              6409 	jp	Z, 00113$
                                   6410 ;main.c:718: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      001CA6 F8 02                 6411 	ldhl	sp,#2
      001CA8 2A                    6412 	ld	a, (hl+)
      001CA9 5F                    6413 	ld	e, a
      001CAA 56                    6414 	ld	d, (hl)
      001CAB 1A                    6415 	ld	a, (de)
      001CAC 4F                    6416 	ld	c, a
      001CAD 13                    6417 	inc	de
      001CAE 1A                    6418 	ld	a, (de)
      001CAF 47                    6419 	ld	b, a
      001CB0 D1                    6420 	pop	de
      001CB1 D5                    6421 	push	de
      001CB2 21 05 00              6422 	ld	hl, #0x0005
      001CB5 19                    6423 	add	hl, de
      001CB6 5D                    6424 	ld	e, l
      001CB7 54                    6425 	ld	d, h
      001CB8 1A                    6426 	ld	a, (de)
      001CB9 6F                    6427 	ld	l, a
                                   6428 ;	spillPairReg hl
                                   6429 ;	spillPairReg hl
      001CBA 07                    6430 	rlca
      001CBB 9F                    6431 	sbc	a, a
      001CBC 67                    6432 	ld	h, a
                                   6433 ;	spillPairReg hl
                                   6434 ;	spillPairReg hl
      001CBD 09                    6435 	add	hl, bc
      001CBE 4D                    6436 	ld	c, l
      001CBF 44                    6437 	ld	b, h
      001CC0 F8 04                 6438 	ldhl	sp,	#4
      001CC2 79                    6439 	ld	a, c
      001CC3 22                    6440 	ld	(hl+), a
      001CC4 70                    6441 	ld	(hl), b
                                   6442 ;main.c:719: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      001CC5 D1                    6443 	pop	de
      001CC6 D5                    6444 	push	de
      001CC7 1A                    6445 	ld	a, (de)
      001CC8 4F                    6446 	ld	c, a
      001CC9 13                    6447 	inc	de
      001CCA 1A                    6448 	ld	a, (de)
      001CCB 47                    6449 	ld	b, a
      001CCC D1                    6450 	pop	de
      001CCD D5                    6451 	push	de
      001CCE 21 04 00              6452 	ld	hl, #0x0004
      001CD1 19                    6453 	add	hl, de
      001CD2 5D                    6454 	ld	e, l
      001CD3 54                    6455 	ld	d, h
      001CD4 1A                    6456 	ld	a, (de)
      001CD5 6F                    6457 	ld	l, a
                                   6458 ;	spillPairReg hl
                                   6459 ;	spillPairReg hl
      001CD6 07                    6460 	rlca
      001CD7 9F                    6461 	sbc	a, a
      001CD8 67                    6462 	ld	h, a
                                   6463 ;	spillPairReg hl
                                   6464 ;	spillPairReg hl
      001CD9 09                    6465 	add	hl, bc
      001CDA 4D                    6466 	ld	c, l
      001CDB 44                    6467 	ld	b, h
                                   6468 ;main.c:721: move_sprite(20+i, newX, newY);
      001CDC F8 04                 6469 	ldhl	sp,	#4
      001CDE 2A                    6470 	ld	a, (hl+)
      001CDF 23                    6471 	inc	hl
      001CE0 5F                    6472 	ld	e, a
      001CE1 79                    6473 	ld	a, c
      001CE2 22                    6474 	ld	(hl+), a
      001CE3 23                    6475 	inc	hl
      001CE4 3A                    6476 	ld	a, (hl-)
      001CE5 C6 14                 6477 	add	a, #0x14
      001CE7 77                    6478 	ld	(hl), a
      001CE8 56                    6479 	ld	d, (hl)
                                   6480 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001CE9 26 00                 6481 	ld	h, #0x00
                                   6482 ;	spillPairReg hl
                                   6483 ;	spillPairReg hl
      001CEB 6A                    6484 	ld	l, d
      001CEC 29                    6485 	add	hl, hl
      001CED 29                    6486 	add	hl, hl
      001CEE D5                    6487 	push	de
      001CEF 11r00r00              6488 	ld	de, #_shadow_OAM
      001CF2 19                    6489 	add	hl, de
      001CF3 D1                    6490 	pop	de
                                   6491 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001CF4 7B                    6492 	ld	a, e
      001CF5 22                    6493 	ld	(hl+), a
      001CF6 5D                    6494 	ld	e, l
      001CF7 54                    6495 	ld	d, h
      001CF8 F8 06                 6496 	ldhl	sp,	#6
      001CFA 7E                    6497 	ld	a, (hl)
      001CFB 12                    6498 	ld	(de), a
                                   6499 ;main.c:722: projectiles[i].y = newY;
      001CFC F8 02                 6500 	ldhl	sp,#2
      001CFE 2A                    6501 	ld	a, (hl+)
      001CFF 5F                    6502 	ld	e, a
      001D00 2A                    6503 	ld	a, (hl+)
      001D01 57                    6504 	ld	d, a
      001D02 2A                    6505 	ld	a, (hl+)
      001D03 12                    6506 	ld	(de), a
      001D04 13                    6507 	inc	de
      001D05 7E                    6508 	ld	a, (hl)
      001D06 12                    6509 	ld	(de), a
                                   6510 ;main.c:723: projectiles[i].x = newX;
      001D07 E1                    6511 	pop	hl
      001D08 E5                    6512 	push	hl
      001D09 79                    6513 	ld	a, c
      001D0A 22                    6514 	ld	(hl+), a
      001D0B 70                    6515 	ld	(hl), b
                                   6516 ;main.c:728: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      001D0C D1                    6517 	pop	de
      001D0D D5                    6518 	push	de
      001D0E 1A                    6519 	ld	a, (de)
      001D0F 6F                    6520 	ld	l, a
                                   6521 ;	spillPairReg hl
                                   6522 ;	spillPairReg hl
      001D10 13                    6523 	inc	de
      001D11 1A                    6524 	ld	a, (de)
      001D12 67                    6525 	ld	h, a
                                   6526 ;	spillPairReg hl
                                   6527 ;	spillPairReg hl
      001D13 CB 78                 6528 	bit	7, b
      001D15 20 44                 6529 	jr	NZ, 00101$
      001D17 5C                    6530 	ld	e, h
      001D18 16 00                 6531 	ld	d, #0x00
      001D1A 3E AA                 6532 	ld	a, #0xaa
      001D1C BD                    6533 	cp	a, l
      001D1D 3E 00                 6534 	ld	a, #0x00
      001D1F 9C                    6535 	sbc	a, h
      001D20 CB 7B                 6536 	bit	7, e
      001D22 28 07                 6537 	jr	Z, 00147$
      001D24 CB 7A                 6538 	bit	7, d
      001D26 20 08                 6539 	jr	NZ, 00148$
      001D28 BF                    6540 	cp	a, a
      001D29 18 05                 6541 	jr	00148$
      001D2B                       6542 00147$:
      001D2B CB 7A                 6543 	bit	7, d
      001D2D 28 01                 6544 	jr	Z, 00148$
      001D2F 37                    6545 	scf
      001D30                       6546 00148$:
      001D30 38 29                 6547 	jr	C, 00101$
                                   6548 ;main.c:715: projectiles[i].y -= yOverflow;
      001D32 F8 02                 6549 	ldhl	sp,#2
      001D34 2A                    6550 	ld	a, (hl+)
      001D35 5F                    6551 	ld	e, a
      001D36 56                    6552 	ld	d, (hl)
      001D37 1A                    6553 	ld	a, (de)
      001D38 4F                    6554 	ld	c, a
      001D39 13                    6555 	inc	de
      001D3A 1A                    6556 	ld	a, (de)
                                   6557 ;main.c:728: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      001D3B 47                    6558 	ld	b, a
      001D3C CB 78                 6559 	bit	7, b
      001D3E 20 1B                 6560 	jr	NZ, 00101$
      001D40 58                    6561 	ld	e, b
      001D41 16 00                 6562 	ld	d, #0x00
      001D43 3E 9A                 6563 	ld	a, #0x9a
      001D45 B9                    6564 	cp	a, c
      001D46 3E 00                 6565 	ld	a, #0x00
      001D48 98                    6566 	sbc	a, b
      001D49 CB 7B                 6567 	bit	7, e
      001D4B 28 07                 6568 	jr	Z, 00149$
      001D4D CB 7A                 6569 	bit	7, d
      001D4F 20 08                 6570 	jr	NZ, 00150$
      001D51 BF                    6571 	cp	a, a
      001D52 18 05                 6572 	jr	00150$
      001D54                       6573 00149$:
      001D54 CB 7A                 6574 	bit	7, d
      001D56 28 01                 6575 	jr	Z, 00150$
      001D58 37                    6576 	scf
      001D59                       6577 00150$:
      001D59 30 25                 6578 	jr	NC, 00113$
      001D5B                       6579 00101$:
                                   6580 ;main.c:730: projectiles[i].active = 0;
      001D5B F8 08                 6581 	ldhl	sp,	#8
      001D5D 4E                    6582 	ld	c, (hl)
      001D5E 06 00                 6583 	ld	b, #0x00
      001D60 69                    6584 	ld	l, c
      001D61 60                    6585 	ld	h, b
      001D62 29                    6586 	add	hl, hl
      001D63 29                    6587 	add	hl, hl
      001D64 09                    6588 	add	hl, bc
      001D65 29                    6589 	add	hl, hl
      001D66 09                    6590 	add	hl, bc
      001D67 11r50r00              6591 	ld	de, #_projectiles
      001D6A 19                    6592 	add	hl, de
      001D6B 01 08 00              6593 	ld	bc, #0x0008
      001D6E 09                    6594 	add	hl, bc
      001D6F 36 00                 6595 	ld	(hl), #0x00
                                   6596 ;main.c:731: set_sprite_tile(20+i, 0x7f);
      001D71 F8 07                 6597 	ldhl	sp,	#7
                                   6598 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001D73 6E                    6599 	ld	l, (hl)
                                   6600 ;	spillPairReg hl
                                   6601 ;	spillPairReg hl
      001D74 26 00                 6602 	ld	h, #0x00
                                   6603 ;	spillPairReg hl
                                   6604 ;	spillPairReg hl
      001D76 29                    6605 	add	hl, hl
      001D77 29                    6606 	add	hl, hl
      001D78 11r00r00              6607 	ld	de, #_shadow_OAM
      001D7B 19                    6608 	add	hl, de
      001D7C 23                    6609 	inc	hl
      001D7D 23                    6610 	inc	hl
      001D7E 36 7F                 6611 	ld	(hl), #0x7f
                                   6612 ;main.c:731: set_sprite_tile(20+i, 0x7f);
      001D80                       6613 00113$:
                                   6614 ;main.c:713: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001D80 F8 08                 6615 	ldhl	sp,	#8
      001D82 34                    6616 	inc	(hl)
      001D83 C3r3Dr1C              6617 	jp	00112$
      001D86                       6618 00114$:
                                   6619 ;main.c:736: }
      001D86 E8 09                 6620 	add	sp, #9
      001D88 C9                    6621 	ret
                                   6622 ;main.c:739: void initProjectiles() {
                                   6623 ;	---------------------------------
                                   6624 ; Function initProjectiles
                                   6625 ; ---------------------------------
      001D89                       6626 _initProjectiles::
                                   6627 ;main.c:740: set_sprite_data(20, 9, ProjectileTiles);
      001D89 11r37r05              6628 	ld	de, #_ProjectileTiles
      001D8C D5                    6629 	push	de
      001D8D 21 14 09              6630 	ld	hl, #0x914
      001D90 E5                    6631 	push	hl
      001D91 CDr00r00              6632 	call	_set_sprite_data
      001D94 E8 04                 6633 	add	sp, #4
                                   6634 ;main.c:742: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001D96 AF                    6635 	xor	a, a
      001D97                       6636 00103$:
      001D97 21rDDr05              6637 	ld	hl, #_PROJECTILECOUNT
      001D9A 4E                    6638 	ld	c, (hl)
      001D9B B9                    6639 	cp	a, c
      001D9C D0                    6640 	ret	NC
      001D9D 3C                    6641 	inc	a
                                   6642 ;main.c:746: }
      001D9E 18 F7                 6643 	jr	00103$
                                   6644 ;main.c:748: void initGame() {
                                   6645 ;	---------------------------------
                                   6646 ; Function initGame
                                   6647 ; ---------------------------------
      001DA0                       6648 _initGame::
                                   6649 ;main.c:751: xDir = 0;
      001DA0 21r3Br00              6650 	ld	hl, #_xDir
      001DA3 36 00                 6651 	ld	(hl), #0x00
                                   6652 ;main.c:752: yDir = -1;
      001DA5 21r3Cr00              6653 	ld	hl, #_yDir
      001DA8 36 FF                 6654 	ld	(hl), #0xff
                                   6655 ;main.c:753: xSpeed = 0;
      001DAA 21r3Dr00              6656 	ld	hl, #_xSpeed
      001DAD 36 00                 6657 	ld	(hl), #0x00
                                   6658 ;main.c:754: ySpeed = 0;
      001DAF 21r3Er00              6659 	ld	hl, #_ySpeed
      001DB2 36 00                 6660 	ld	(hl), #0x00
                                   6661 ;main.c:757: playerX = 80<<5;
      001DB4 21r3Fr00              6662 	ld	hl, #_playerX
      001DB7 36 00                 6663 	ld	(hl), #0x00
      001DB9 23                    6664 	inc	hl
      001DBA 36 0A                 6665 	ld	(hl), #0x0a
                                   6666 ;main.c:758: playerY = 80<<5;
      001DBC 21r41r00              6667 	ld	hl, #_playerY
      001DBF 36 00                 6668 	ld	(hl), #0x00
      001DC1 23                    6669 	inc	hl
      001DC2 36 0A                 6670 	ld	(hl), #0x0a
                                   6671 ;main.c:760: playerDrawX = 80;
      001DC4 21r43r00              6672 	ld	hl, #_playerDrawX
      001DC7 36 50                 6673 	ld	(hl), #0x50
                                   6674 ;main.c:761: playerDrawY = 80;
      001DC9 21r44r00              6675 	ld	hl, #_playerDrawY
      001DCC 36 50                 6676 	ld	(hl), #0x50
                                   6677 ;main.c:764: bgX = 0;
      001DCE AF                    6678 	xor	a, a
      001DCF 21r45r00              6679 	ld	hl, #_bgX
      001DD2 22                    6680 	ld	(hl+), a
      001DD3 77                    6681 	ld	(hl), a
                                   6682 ;main.c:765: bgY = 0;
      001DD4 AF                    6683 	xor	a, a
      001DD5 21r47r00              6684 	ld	hl, #_bgY
      001DD8 22                    6685 	ld	(hl+), a
      001DD9 77                    6686 	ld	(hl), a
                                   6687 ;main.c:767: hull = maxHull;
      001DDA FArDFr05              6688 	ld	a, (#_maxHull)
      001DDD EAr88r00              6689 	ld	(#_hull),a
                                   6690 ;main.c:768: shield = maxShield;
      001DE0 FArE0r05              6691 	ld	a, (#_maxShield)
      001DE3 EAr89r00              6692 	ld	(#_shield),a
                                   6693 ;main.c:770: DISPLAY_ON;
      001DE6 F0r00                 6694 	ldh	a, (_LCDC_REG + 0)
      001DE8 F6 80                 6695 	or	a, #0x80
      001DEA E0r00                 6696 	ldh	(_LCDC_REG + 0), a
                                   6697 ;main.c:771: SPRITES_8x8;
      001DEC F0r00                 6698 	ldh	a, (_LCDC_REG + 0)
      001DEE E6 FB                 6699 	and	a, #0xfb
      001DF0 E0r00                 6700 	ldh	(_LCDC_REG + 0), a
                                   6701 ;main.c:772: set_sprite_data(0, 8, cross);
      001DF2 11r07r00              6702 	ld	de, #_cross
      001DF5 D5                    6703 	push	de
      001DF6 21 00 08              6704 	ld	hl, #0x800
      001DF9 E5                    6705 	push	hl
      001DFA CDr00r00              6706 	call	_set_sprite_data
      001DFD E8 04                 6707 	add	sp, #4
                                   6708 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001DFF 21r02r00              6709 	ld	hl, #(_shadow_OAM + 2)
      001E02 36 00                 6710 	ld	(hl), #0x00
                                   6711 ;main.c:775: SHOW_SPRITES;
      001E04 F0r00                 6712 	ldh	a, (_LCDC_REG + 0)
      001E06 F6 02                 6713 	or	a, #0x02
      001E08 E0r00                 6714 	ldh	(_LCDC_REG + 0), a
                                   6715 ;main.c:779: font_init();
      001E0A CDr00r00              6716 	call	_font_init
                                   6717 ;main.c:780: min_font = font_load(font_min); // 36 tiles of characters
      001E0D 11r00r00              6718 	ld	de, #_font_min
      001E10 D5                    6719 	push	de
      001E11 CDr00r00              6720 	call	_font_load
      001E14 E1                    6721 	pop	hl
      001E15 21r8Ar00              6722 	ld	hl, #_min_font
      001E18 7B                    6723 	ld	a, e
      001E19 22                    6724 	ld	(hl+), a
                                   6725 ;main.c:781: font_set(min_font);
      001E1A 7A                    6726 	ld	a, d
      001E1B 32                    6727 	ld	(hl-), a
      001E1C 2A                    6728 	ld	a, (hl+)
      001E1D 5F                    6729 	ld	e, a
      001E1E 56                    6730 	ld	d, (hl)
      001E1F D5                    6731 	push	de
      001E20 CDr00r00              6732 	call	_font_set
      001E23 E1                    6733 	pop	hl
                                   6734 ;main.c:782: set_win_tiles(1,0,4,1,hullabel);
      001E24 11r00r00              6735 	ld	de, #_hullabel
      001E27 D5                    6736 	push	de
      001E28 21 04 01              6737 	ld	hl, #0x104
      001E2B E5                    6738 	push	hl
      001E2C 21 01 00              6739 	ld	hl, #0x01
      001E2F E5                    6740 	push	hl
      001E30 CDr00r00              6741 	call	_set_win_tiles
      001E33 E8 06                 6742 	add	sp, #6
                                   6743 ;main.c:783: set_win_tiles(1,1,5,1,shieldlabel);
      001E35 11r04r00              6744 	ld	de, #_shieldlabel
      001E38 D5                    6745 	push	de
      001E39 21 05 01              6746 	ld	hl, #0x105
      001E3C E5                    6747 	push	hl
      001E3D 21 01 01              6748 	ld	hl, #0x101
      001E40 E5                    6749 	push	hl
      001E41 CDr00r00              6750 	call	_set_win_tiles
      001E44 E8 06                 6751 	add	sp, #6
                                   6752 ;main.c:788: set_bkg_data(0x50,1,healthblock);
      001E46 11r07r05              6753 	ld	de, #_healthblock
      001E49 D5                    6754 	push	de
      001E4A 21 50 01              6755 	ld	hl, #0x150
      001E4D E5                    6756 	push	hl
      001E4E CDr00r00              6757 	call	_set_bkg_data
      001E51 E8 04                 6758 	add	sp, #4
                                   6759 ;main.c:790: setHealthBar(0, hull);
      001E53 FAr88r00              6760 	ld	a, (#_hull)
      001E56 67                    6761 	ld	h, a
      001E57 2E 00                 6762 	ld	l, #0x00
      001E59 E5                    6763 	push	hl
      001E5A CDrE2r05              6764 	call	_setHealthBar
      001E5D E1                    6765 	pop	hl
                                   6766 ;main.c:791: setHealthBar(1, shield);
      001E5E FAr89r00              6767 	ld	a, (#_shield)
      001E61 67                    6768 	ld	h, a
      001E62 2E 01                 6769 	ld	l, #0x01
      001E64 E5                    6770 	push	hl
      001E65 CDrE2r05              6771 	call	_setHealthBar
      001E68 E1                    6772 	pop	hl
                                   6773 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      001E69 3E 07                 6774 	ld	a, #0x07
      001E6B E0r00                 6775 	ldh	(_WX_REG + 0), a
      001E6D 3E 7E                 6776 	ld	a, #0x7e
      001E6F E0r00                 6777 	ldh	(_WY_REG + 0), a
                                   6778 ;main.c:794: SHOW_WIN;;
      001E71 F0r00                 6779 	ldh	a, (_LCDC_REG + 0)
      001E73 F6 20                 6780 	or	a, #0x20
      001E75 E0r00                 6781 	ldh	(_LCDC_REG + 0), a
                                   6782 ;main.c:799: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      001E77 11r87r04              6783 	ld	de, #_backgroundtiles
      001E7A D5                    6784 	push	de
      001E7B 21 25 08              6785 	ld	hl, #0x825
      001E7E E5                    6786 	push	hl
      001E7F CDr00r00              6787 	call	_set_bkg_data
      001E82 E8 04                 6788 	add	sp, #4
                                   6789 ;main.c:800: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      001E84 11r87r00              6790 	ld	de, #_background1
      001E87 D5                    6791 	push	de
      001E88 21 20 20              6792 	ld	hl, #0x2020
      001E8B E5                    6793 	push	hl
      001E8C AF                    6794 	xor	a, a
      001E8D 0F                    6795 	rrca
      001E8E F5                    6796 	push	af
      001E8F CDr00r00              6797 	call	_set_bkg_tiles
      001E92 E8 06                 6798 	add	sp, #6
                                   6799 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001E94 AF                    6800 	xor	a, a
      001E95 E0r00                 6801 	ldh	(_SCX_REG + 0), a
      001E97 AF                    6802 	xor	a, a
      001E98 E0r00                 6803 	ldh	(_SCY_REG + 0), a
                                   6804 ;main.c:802: SHOW_BKG;
      001E9A F0r00                 6805 	ldh	a, (_LCDC_REG + 0)
      001E9C F6 01                 6806 	or	a, #0x01
      001E9E E0r00                 6807 	ldh	(_LCDC_REG + 0), a
                                   6808 ;main.c:808: }
      001EA0 C9                    6809 	ret
                                   6810 ;main.c:810: void main(){
                                   6811 ;	---------------------------------
                                   6812 ; Function main
                                   6813 ; ---------------------------------
      001EA1                       6814 _main::
                                   6815 ;main.c:822: NR52_REG = 0x80; // sound on 
      001EA1 3E 80                 6816 	ld	a, #0x80
      001EA3 E0r00                 6817 	ldh	(_NR52_REG + 0), a
                                   6818 ;main.c:823: NR50_REG = 0x77; // volume
      001EA5 3E 77                 6819 	ld	a, #0x77
      001EA7 E0r00                 6820 	ldh	(_NR50_REG + 0), a
                                   6821 ;main.c:824: NR51_REG = 0xFF; // all channels
      001EA9 3E FF                 6822 	ld	a, #0xff
      001EAB E0r00                 6823 	ldh	(_NR51_REG + 0), a
                                   6824 ;main.c:828: waitpad(J_A);
      001EAD 3E 10                 6825 	ld	a, #0x10
      001EAF F5                    6826 	push	af
      001EB0 33                    6827 	inc	sp
      001EB1 CDr00r00              6828 	call	_waitpad
      001EB4 33                    6829 	inc	sp
                                   6830 ;main.c:829: uint16_t seed = LY_REG;
      001EB5 F0r00                 6831 	ldh	a, (_LY_REG + 0)
      001EB7 4F                    6832 	ld	c, a
      001EB8 06 00                 6833 	ld	b, #0x00
                                   6834 ;main.c:830: seed |= (uint16_t)DIV_REG << 8;
      001EBA F0r00                 6835 	ldh	a, (_DIV_REG + 0)
      001EBC 5F                    6836 	ld	e, a
      001EBD AF                    6837 	xor	a, a
      001EBE B1                    6838 	or	a, c
      001EBF 4F                    6839 	ld	c, a
      001EC0 7B                    6840 	ld	a, e
      001EC1 B0                    6841 	or	a, b
      001EC2 47                    6842 	ld	b, a
                                   6843 ;main.c:831: initrand(seed);
      001EC3 C5                    6844 	push	bc
      001EC4 CDr00r00              6845 	call	_initrand
      001EC7 E1                    6846 	pop	hl
                                   6847 ;main.c:836: initGame();
      001EC8 CDrA0r1D              6848 	call	_initGame
                                   6849 ;main.c:837: initEnemies(1);
      001ECB 3E 01                 6850 	ld	a, #0x01
      001ECD F5                    6851 	push	af
      001ECE 33                    6852 	inc	sp
      001ECF CDr85r0E              6853 	call	_initEnemies
      001ED2 33                    6854 	inc	sp
                                   6855 ;main.c:838: initProjectiles();
      001ED3 CDr89r1D              6856 	call	_initProjectiles
                                   6857 ;main.c:840: while(1) {
      001ED6                       6858 00114$:
                                   6859 ;main.c:843: joydata = joypad(); // query for button states
      001ED6 CDr00r00              6860 	call	_joypad
      001ED9 21r87r00              6861 	ld	hl, #_joydata
      001EDC 73                    6862 	ld	(hl), e
                                   6863 ;main.c:845: updateDirection(); // set player direction
      001EDD CDrF3r06              6864 	call	_updateDirection
                                   6865 ;main.c:848: move(); 
      001EE0 CDr42r0F              6866 	call	_move
                                   6867 ;main.c:850: updateEnemyPositions();
      001EE3 CDrE5r08              6868 	call	_updateEnemyPositions
                                   6869 ;main.c:853: checkCollision(); 
      001EE6 CDr92r14              6870 	call	_checkCollision
                                   6871 ;main.c:637: if (shield < maxShield) {
      001EE9 21rE0r05              6872 	ld	hl, #_maxShield
      001EEC 4E                    6873 	ld	c, (hl)
      001EED 59                    6874 	ld	e, c
      001EEE 21r89r00              6875 	ld	hl, #_shield
      001EF1 56                    6876 	ld	d, (hl)
      001EF2 7E                    6877 	ld	a, (hl)
      001EF3 91                    6878 	sub	a, c
      001EF4 CB 7B                 6879 	bit	7, e
      001EF6 28 07                 6880 	jr	Z, 00169$
      001EF8 CB 7A                 6881 	bit	7, d
      001EFA 20 08                 6882 	jr	NZ, 00170$
      001EFC BF                    6883 	cp	a, a
      001EFD 18 05                 6884 	jr	00170$
      001EFF                       6885 00169$:
      001EFF CB 7A                 6886 	bit	7, d
      001F01 28 01                 6887 	jr	Z, 00170$
      001F03 37                    6888 	scf
      001F04                       6889 00170$:
      001F04 30 04                 6890 	jr	NC, 00120$
                                   6891 ;main.c:638: shield += 1;
      001F06 21r89r00              6892 	ld	hl, #_shield
      001F09 34                    6893 	inc	(hl)
      001F0A                       6894 00120$:
                                   6895 ;main.c:640: setHealthBar(0, hull);
      001F0A FAr88r00              6896 	ld	a, (#_hull)
      001F0D 67                    6897 	ld	h, a
      001F0E 2E 00                 6898 	ld	l, #0x00
      001F10 E5                    6899 	push	hl
      001F11 CDrE2r05              6900 	call	_setHealthBar
      001F14 E1                    6901 	pop	hl
                                   6902 ;main.c:641: setHealthBar(1, shield);
      001F15 FAr89r00              6903 	ld	a, (#_shield)
      001F18 67                    6904 	ld	h, a
      001F19 2E 01                 6905 	ld	l, #0x01
      001F1B E5                    6906 	push	hl
      001F1C CDrE2r05              6907 	call	_setHealthBar
      001F1F E1                    6908 	pop	hl
                                   6909 ;main.c:858: if (joydata & J_B && fireCooldown == 0) {
      001F20 FAr87r00              6910 	ld	a, (#_joydata)
      001F23 CB 6F                 6911 	bit	5, a
      001F25 28 09                 6912 	jr	Z, 00102$
      001F27 FAr3Ar00              6913 	ld	a, (#_fireCooldown)
      001F2A B7                    6914 	or	a, a
      001F2B 20 03                 6915 	jr	NZ, 00102$
                                   6916 ;main.c:859: fire();
      001F2D CDrE4r17              6917 	call	_fire
      001F30                       6918 00102$:
                                   6919 ;main.c:861: if (fireCooldown > 0) {
      001F30 21r3Ar00              6920 	ld	hl, #_fireCooldown
      001F33 7E                    6921 	ld	a, (hl)
      001F34 B7                    6922 	or	a, a
      001F35 28 01                 6923 	jr	Z, 00105$
                                   6924 ;main.c:862: --fireCooldown;
      001F37 35                    6925 	dec	(hl)
      001F38                       6926 00105$:
                                   6927 ;main.c:865: if (joydata & J_SELECT && switchDelay == 0) {
      001F38 FAr87r00              6928 	ld	a, (#_joydata)
      001F3B CB 77                 6929 	bit	6, a
      001F3D 28 1C                 6930 	jr	Z, 00109$
      001F3F FAr4Fr00              6931 	ld	a, (#_switchDelay)
      001F42 B7                    6932 	or	a, a
      001F43 20 16                 6933 	jr	NZ, 00109$
                                   6934 ;main.c:866: currentGun++;
      001F45 21r4Er00              6935 	ld	hl, #_currentGun
      001F48 34                    6936 	inc	(hl)
                                   6937 ;main.c:867: if (currentGun >= GUNCOUNT) {
      001F49 21rE1r05              6938 	ld	hl, #_GUNCOUNT
      001F4C 4E                    6939 	ld	c, (hl)
      001F4D 21r4Er00              6940 	ld	hl, #_currentGun
      001F50 7E                    6941 	ld	a, (hl)
      001F51 91                    6942 	sub	a, c
      001F52 38 02                 6943 	jr	C, 00107$
                                   6944 ;main.c:868: currentGun = 0;
      001F54 36 00                 6945 	ld	(hl), #0x00
      001F56                       6946 00107$:
                                   6947 ;main.c:870: switchDelay = 30;
      001F56 21r4Fr00              6948 	ld	hl, #_switchDelay
      001F59 36 1E                 6949 	ld	(hl), #0x1e
      001F5B                       6950 00109$:
                                   6951 ;main.c:872: if (switchDelay != 0) {
      001F5B 21r4Fr00              6952 	ld	hl, #_switchDelay
      001F5E 7E                    6953 	ld	a, (hl)
      001F5F B7                    6954 	or	a, a
      001F60 28 01                 6955 	jr	Z, 00112$
                                   6956 ;main.c:873: switchDelay--;
      001F62 35                    6957 	dec	(hl)
      001F63                       6958 00112$:
                                   6959 ;main.c:875: moveProjectiles();
      001F63 CDr37r1C              6960 	call	_moveProjectiles
                                   6961 ;main.c:887: SHOW_WIN;	
      001F66 F0r00                 6962 	ldh	a, (_LCDC_REG + 0)
      001F68 F6 20                 6963 	or	a, #0x20
      001F6A E0r00                 6964 	ldh	(_LCDC_REG + 0), a
                                   6965 ;main.c:888: wait_vbl_done(); // Idle until next frame
      001F6C CDr00r00              6966 	call	_wait_vbl_done
                                   6967 ;main.c:893: }
      001F6F C3rD6r1E              6968 	jp	00114$
                                   6969 	.area _CODE
                                   6970 	.area _INITIALIZER
      000000                       6971 __xinit__hullabel:
      000000 12                    6972 	.db #0x12	; 18
      000001 1F                    6973 	.db #0x1f	; 31
      000002 16                    6974 	.db #0x16	; 22
      000003 16                    6975 	.db #0x16	; 22
      000004                       6976 __xinit__shieldlabel:
      000004 1D                    6977 	.db #0x1d	; 29
      000005 12                    6978 	.db #0x12	; 18
      000006 16                    6979 	.db #0x16	; 22
      000007 0E                    6980 	.db #0x0e	; 14
      000008                       6981 __xinit__blob:
      000008 00 00                 6982 	.dw #0x0000
      00000A 00 00                 6983 	.dw #0x0000
      00000C 00                    6984 	.db #0x00	;  0
      00000D 00                    6985 	.db #0x00	;  0
      00000E 09                    6986 	.db #0x09	; 9
      00000F 00                    6987 	.db #0x00	; 0
      000010 01                    6988 	.db #0x01	; 1
      000011 01                    6989 	.db #0x01	; 1
      000012 01                    6990 	.db #0x01	; 1
      000013 32                    6991 	.db #0x32	; 50	'2'
      000014 03                    6992 	.db #0x03	;  3
      000015 01                    6993 	.db #0x01	; 1
      000016 00                    6994 	.db #0x00	;  0
      000017 00                    6995 	.db #0x00	;  0
      000018                       6996 __xinit__singleGun:
      000018 00 00                 6997 	.dw #0x0000
      00001A 00 00                 6998 	.dw #0x0000
      00001C 00                    6999 	.db #0x00	;  0
      00001D FF                    7000 	.db #0xff	; -1
      00001E 02                    7001 	.db #0x02	; 2
      00001F 00                    7002 	.db #0x00	; 0
      000020 01                    7003 	.db #0x01	; 1
      000021 0F                    7004 	.db #0x0f	; 15
      000022 14                    7005 	.db #0x14	; 20
      000023                       7006 __xinit__doubleGun:
      000023 00 00                 7007 	.dw #0x0000
      000025 00 00                 7008 	.dw #0x0000
      000027 00                    7009 	.db #0x00	;  0
      000028 FF                    7010 	.db #0xff	; -1
      000029 02                    7011 	.db #0x02	; 2
      00002A 00                    7012 	.db #0x00	; 0
      00002B 01                    7013 	.db #0x01	; 1
      00002C 0F                    7014 	.db #0x0f	; 15
      00002D 17                    7015 	.db #0x17	; 23
      00002E                       7016 __xinit__missile:
      00002E 00 00                 7017 	.dw #0x0000
      000030 00 00                 7018 	.dw #0x0000
      000032 00                    7019 	.db #0x00	;  0
      000033 FF                    7020 	.db #0xff	; -1
      000034 01                    7021 	.db #0x01	; 1
      000035 00                    7022 	.db #0x00	; 0
      000036 01                    7023 	.db #0x01	; 1
      000037 1E                    7024 	.db #0x1e	; 30
      000038 1A                    7025 	.db #0x1a	; 26
      000039                       7026 __xinit__oldestProjectile:
      000039 00                    7027 	.db #0x00	; 0
      00003A                       7028 __xinit__fireCooldown:
      00003A 00                    7029 	.db #0x00	; 0
      00003B                       7030 __xinit__xDir:
      00003B 00                    7031 	.db #0x00	;  0
      00003C                       7032 __xinit__yDir:
      00003C FF                    7033 	.db #0xff	; -1
      00003D                       7034 __xinit__xSpeed:
      00003D 00                    7035 	.db #0x00	;  0
      00003E                       7036 __xinit__ySpeed:
      00003E 00                    7037 	.db #0x00	;  0
      00003F                       7038 __xinit__playerX:
      00003F 00 0A                 7039 	.dw #0x0a00
      000041                       7040 __xinit__playerY:
      000041 00 0A                 7041 	.dw #0x0a00
      000043                       7042 __xinit__playerDrawX:
      000043 50                    7043 	.db #0x50	; 80	'P'
      000044                       7044 __xinit__playerDrawY:
      000044 50                    7045 	.db #0x50	; 80	'P'
      000045                       7046 __xinit__bgX:
      000045 00 00                 7047 	.dw #0x0000
      000047                       7048 __xinit__bgY:
      000047 00 00                 7049 	.dw #0x0000
      000049                       7050 __xinit__xOverflow:
      000049 00 00                 7051 	.dw #0x0000
      00004B                       7052 __xinit__yOverflow:
      00004B 00 00                 7053 	.dw #0x0000
      00004D                       7054 __xinit__enemyCollisionCount:
      00004D 00                    7055 	.db #0x00	; 0
      00004E                       7056 __xinit__currentGun:
      00004E 00                    7057 	.db #0x00	; 0
      00004F                       7058 __xinit__switchDelay:
      00004F 00                    7059 	.db #0x00	; 0
                                   7060 	.area _CABS (ABS)
