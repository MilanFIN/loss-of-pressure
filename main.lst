                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _moveProjectiles
                                     15 	.globl _fire
                                     16 	.globl _updateShieldsAndHull
                                     17 	.globl _checkCollision
                                     18 	.globl _takeDamage
                                     19 	.globl _move
                                     20 	.globl _initEnemies
                                     21 	.globl _updateEnemyPositions
                                     22 	.globl _moveSpritesWithBackground
                                     23 	.globl _abs
                                     24 	.globl _i16Clamp
                                     25 	.globl _u16Clamp
                                     26 	.globl _uClamp
                                     27 	.globl _clamp
                                     28 	.globl _updateDirection
                                     29 	.globl _setHealthBar
                                     30 	.globl _interruptLCD
                                     31 	.globl _rand
                                     32 	.globl _initrand
                                     33 	.globl _font_set
                                     34 	.globl _font_load
                                     35 	.globl _font_init
                                     36 	.globl _printf
                                     37 	.globl _set_sprite_data
                                     38 	.globl _set_win_tiles
                                     39 	.globl _set_bkg_tiles
                                     40 	.globl _set_bkg_data
                                     41 	.globl _wait_vbl_done
                                     42 	.globl _waitpad
                                     43 	.globl _joypad
                                     44 	.globl _yOverflow
                                     45 	.globl _xOverflow
                                     46 	.globl _maxShield
                                     47 	.globl _maxHull
                                     48 	.globl _bgY
                                     49 	.globl _bgX
                                     50 	.globl _playerDrawY
                                     51 	.globl _playerDrawX
                                     52 	.globl _playerY
                                     53 	.globl _playerX
                                     54 	.globl _ySpeed
                                     55 	.globl _xSpeed
                                     56 	.globl _yDir
                                     57 	.globl _xDir
                                     58 	.globl _PLAYERSIZE
                                     59 	.globl _fireCooldown
                                     60 	.globl _oldestProjectile
                                     61 	.globl _weakProjectile
                                     62 	.globl _blob
                                     63 	.globl _shieldlabel
                                     64 	.globl _hullabel
                                     65 	.globl _min_font
                                     66 	.globl _shield
                                     67 	.globl _hull
                                     68 	.globl _joydata
                                     69 	.globl _projectiles
                                     70 	.globl _enemies
                                     71 	.globl _PROJECTILECOUNT
                                     72 	.globl _ySpawnPositions
                                     73 	.globl _xSpawnPositions
                                     74 	.globl _ENEMYCOUNT
                                     75 	.globl _EMPTYSPRITE
                                     76 	.globl _BLANK
                                     77 	.globl _projectile1
                                     78 	.globl _enemy1
                                     79 	.globl _healthblock
                                     80 	.globl _backgroundtiles
                                     81 	.globl _background1
                                     82 	.globl _cross
                                     83 ;--------------------------------------------------------
                                     84 ; special function registers
                                     85 ;--------------------------------------------------------
                                     86 ;--------------------------------------------------------
                                     87 ; ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area _DATA
      000000                         90 _enemies::
      000000                         91 	.ds 100
      000064                         92 _projectiles::
      000064                         93 	.ds 45
      000091                         94 _joydata::
      000091                         95 	.ds 1
      000092                         96 _hull::
      000092                         97 	.ds 1
      000093                         98 _shield::
      000093                         99 	.ds 1
      000094                        100 _min_font::
      000094                        101 	.ds 2
                                    102 ;--------------------------------------------------------
                                    103 ; ram data
                                    104 ;--------------------------------------------------------
                                    105 	.area _INITIALIZED
      000000                        106 _hullabel::
      000000                        107 	.ds 4
      000004                        108 _shieldlabel::
      000004                        109 	.ds 4
      000008                        110 _blob::
      000008                        111 	.ds 20
      00001C                        112 _weakProjectile::
      00001C                        113 	.ds 9
      000025                        114 _oldestProjectile::
      000025                        115 	.ds 1
      000026                        116 _fireCooldown::
      000026                        117 	.ds 1
      000027                        118 _PLAYERSIZE::
      000027                        119 	.ds 1
      000028                        120 _xDir::
      000028                        121 	.ds 1
      000029                        122 _yDir::
      000029                        123 	.ds 1
      00002A                        124 _xSpeed::
      00002A                        125 	.ds 1
      00002B                        126 _ySpeed::
      00002B                        127 	.ds 1
      00002C                        128 _playerX::
      00002C                        129 	.ds 2
      00002E                        130 _playerY::
      00002E                        131 	.ds 2
      000030                        132 _playerDrawX::
      000030                        133 	.ds 1
      000031                        134 _playerDrawY::
      000031                        135 	.ds 1
      000032                        136 _bgX::
      000032                        137 	.ds 2
      000034                        138 _bgY::
      000034                        139 	.ds 2
      000036                        140 _maxHull::
      000036                        141 	.ds 1
      000037                        142 _maxShield::
      000037                        143 	.ds 1
      000038                        144 _xOverflow::
      000038                        145 	.ds 2
      00003A                        146 _yOverflow::
      00003A                        147 	.ds 2
                                    148 ;--------------------------------------------------------
                                    149 ; absolute external ram data
                                    150 ;--------------------------------------------------------
                                    151 	.area _DABS (ABS)
                                    152 ;--------------------------------------------------------
                                    153 ; global & static initialisations
                                    154 ;--------------------------------------------------------
                                    155 	.area _HOME
                                    156 	.area _GSINIT
                                    157 	.area _GSFINAL
                                    158 	.area _GSINIT
                                    159 ;--------------------------------------------------------
                                    160 ; Home
                                    161 ;--------------------------------------------------------
                                    162 	.area _HOME
                                    163 	.area _HOME
                                    164 ;--------------------------------------------------------
                                    165 ; code
                                    166 ;--------------------------------------------------------
                                    167 	.area _CODE
                                    168 ;main.c:76: void interruptLCD(){
                                    169 ;	---------------------------------
                                    170 ; Function interruptLCD
                                    171 ; ---------------------------------
      000000                        172 _interruptLCD::
                                    173 ;main.c:77: HIDE_WIN;
      000000 F0r00                  174 	ldh	a, (_LCDC_REG + 0)
      000002 E6 DF                  175 	and	a, #0xdf
      000004 E0r00                  176 	ldh	(_LCDC_REG + 0), a
                                    177 ;main.c:78: }
      000006 C9                     178 	ret
      000007                        179 _cross:
      000007 18                     180 	.db #0x18	; 24
      000008 18                     181 	.db #0x18	; 24
      000009 18                     182 	.db #0x18	; 24
      00000A 18                     183 	.db #0x18	; 24
      00000B 3C                     184 	.db #0x3c	; 60
      00000C 3C                     185 	.db #0x3c	; 60
      00000D 3C                     186 	.db #0x3c	; 60
      00000E 3C                     187 	.db #0x3c	; 60
      00000F 7E                     188 	.db #0x7e	; 126
      000010 7E                     189 	.db #0x7e	; 126
      000011 7E                     190 	.db #0x7e	; 126
      000012 7E                     191 	.db #0x7e	; 126
      000013 FF                     192 	.db #0xff	; 255
      000014 FF                     193 	.db #0xff	; 255
      000015 FF                     194 	.db #0xff	; 255
      000016 FF                     195 	.db #0xff	; 255
      000017 0F                     196 	.db #0x0f	; 15
      000018 0F                     197 	.db #0x0f	; 15
      000019 3F                     198 	.db #0x3f	; 63
      00001A 3F                     199 	.db #0x3f	; 63
      00001B FF                     200 	.db #0xff	; 255
      00001C FF                     201 	.db #0xff	; 255
      00001D FF                     202 	.db #0xff	; 255
      00001E FF                     203 	.db #0xff	; 255
      00001F 7E                     204 	.db #0x7e	; 126
      000020 7E                     205 	.db #0x7e	; 126
      000021 3E                     206 	.db #0x3e	; 62
      000022 3E                     207 	.db #0x3e	; 62
      000023 1C                     208 	.db #0x1c	; 28
      000024 1C                     209 	.db #0x1c	; 28
      000025 0C                     210 	.db #0x0c	; 12
      000026 0C                     211 	.db #0x0c	; 12
      000027 C0                     212 	.db #0xc0	; 192
      000028 C0                     213 	.db #0xc0	; 192
      000029 F0                     214 	.db #0xf0	; 240
      00002A F0                     215 	.db #0xf0	; 240
      00002B FC                     216 	.db #0xfc	; 252
      00002C FC                     217 	.db #0xfc	; 252
      00002D FF                     218 	.db #0xff	; 255
      00002E FF                     219 	.db #0xff	; 255
      00002F FF                     220 	.db #0xff	; 255
      000030 FF                     221 	.db #0xff	; 255
      000031 FC                     222 	.db #0xfc	; 252
      000032 FC                     223 	.db #0xfc	; 252
      000033 F0                     224 	.db #0xf0	; 240
      000034 F0                     225 	.db #0xf0	; 240
      000035 C0                     226 	.db #0xc0	; 192
      000036 C0                     227 	.db #0xc0	; 192
      000037 0C                     228 	.db #0x0c	; 12
      000038 0C                     229 	.db #0x0c	; 12
      000039 1C                     230 	.db #0x1c	; 28
      00003A 1C                     231 	.db #0x1c	; 28
      00003B 3E                     232 	.db #0x3e	; 62
      00003C 3E                     233 	.db #0x3e	; 62
      00003D 7E                     234 	.db #0x7e	; 126
      00003E 7E                     235 	.db #0x7e	; 126
      00003F FF                     236 	.db #0xff	; 255
      000040 FF                     237 	.db #0xff	; 255
      000041 FF                     238 	.db #0xff	; 255
      000042 FF                     239 	.db #0xff	; 255
      000043 3F                     240 	.db #0x3f	; 63
      000044 3F                     241 	.db #0x3f	; 63
      000045 0F                     242 	.db #0x0f	; 15
      000046 0F                     243 	.db #0x0f	; 15
      000047 FF                     244 	.db #0xff	; 255
      000048 FF                     245 	.db #0xff	; 255
      000049 FF                     246 	.db #0xff	; 255
      00004A FF                     247 	.db #0xff	; 255
      00004B 7E                     248 	.db #0x7e	; 126
      00004C 7E                     249 	.db #0x7e	; 126
      00004D 7E                     250 	.db #0x7e	; 126
      00004E 7E                     251 	.db #0x7e	; 126
      00004F 3C                     252 	.db #0x3c	; 60
      000050 3C                     253 	.db #0x3c	; 60
      000051 3C                     254 	.db #0x3c	; 60
      000052 3C                     255 	.db #0x3c	; 60
      000053 18                     256 	.db #0x18	; 24
      000054 18                     257 	.db #0x18	; 24
      000055 18                     258 	.db #0x18	; 24
      000056 18                     259 	.db #0x18	; 24
      000057 30                     260 	.db #0x30	; 48	'0'
      000058 30                     261 	.db #0x30	; 48	'0'
      000059 38                     262 	.db #0x38	; 56	'8'
      00005A 38                     263 	.db #0x38	; 56	'8'
      00005B 7C                     264 	.db #0x7c	; 124
      00005C 7C                     265 	.db #0x7c	; 124
      00005D 7E                     266 	.db #0x7e	; 126
      00005E 7E                     267 	.db #0x7e	; 126
      00005F FF                     268 	.db #0xff	; 255
      000060 FF                     269 	.db #0xff	; 255
      000061 FF                     270 	.db #0xff	; 255
      000062 FF                     271 	.db #0xff	; 255
      000063 FC                     272 	.db #0xfc	; 252
      000064 FC                     273 	.db #0xfc	; 252
      000065 F0                     274 	.db #0xf0	; 240
      000066 F0                     275 	.db #0xf0	; 240
      000067 03                     276 	.db #0x03	; 3
      000068 03                     277 	.db #0x03	; 3
      000069 0F                     278 	.db #0x0f	; 15
      00006A 0F                     279 	.db #0x0f	; 15
      00006B 3F                     280 	.db #0x3f	; 63
      00006C 3F                     281 	.db #0x3f	; 63
      00006D FF                     282 	.db #0xff	; 255
      00006E FF                     283 	.db #0xff	; 255
      00006F FF                     284 	.db #0xff	; 255
      000070 FF                     285 	.db #0xff	; 255
      000071 3F                     286 	.db #0x3f	; 63
      000072 3F                     287 	.db #0x3f	; 63
      000073 0F                     288 	.db #0x0f	; 15
      000074 0F                     289 	.db #0x0f	; 15
      000075 03                     290 	.db #0x03	; 3
      000076 03                     291 	.db #0x03	; 3
      000077 F0                     292 	.db #0xf0	; 240
      000078 F0                     293 	.db #0xf0	; 240
      000079 FC                     294 	.db #0xfc	; 252
      00007A FC                     295 	.db #0xfc	; 252
      00007B FF                     296 	.db #0xff	; 255
      00007C FF                     297 	.db #0xff	; 255
      00007D FF                     298 	.db #0xff	; 255
      00007E FF                     299 	.db #0xff	; 255
      00007F 7E                     300 	.db #0x7e	; 126
      000080 7E                     301 	.db #0x7e	; 126
      000081 7C                     302 	.db #0x7c	; 124
      000082 7C                     303 	.db #0x7c	; 124
      000083 38                     304 	.db #0x38	; 56	'8'
      000084 38                     305 	.db #0x38	; 56	'8'
      000085 30                     306 	.db #0x30	; 48	'0'
      000086 30                     307 	.db #0x30	; 48	'0'
      000087                        308 _background1:
      000087 26                     309 	.db #0x26	; 38
      000088 26                     310 	.db #0x26	; 38
      000089 26                     311 	.db #0x26	; 38
      00008A 26                     312 	.db #0x26	; 38
      00008B 26                     313 	.db #0x26	; 38
      00008C 26                     314 	.db #0x26	; 38
      00008D 26                     315 	.db #0x26	; 38
      00008E 26                     316 	.db #0x26	; 38
      00008F 26                     317 	.db #0x26	; 38
      000090 26                     318 	.db #0x26	; 38
      000091 26                     319 	.db #0x26	; 38
      000092 2A                     320 	.db #0x2a	; 42
      000093 29                     321 	.db #0x29	; 41
      000094 26                     322 	.db #0x26	; 38
      000095 26                     323 	.db #0x26	; 38
      000096 26                     324 	.db #0x26	; 38
      000097 26                     325 	.db #0x26	; 38
      000098 26                     326 	.db #0x26	; 38
      000099 26                     327 	.db #0x26	; 38
      00009A 26                     328 	.db #0x26	; 38
      00009B 26                     329 	.db #0x26	; 38
      00009C 26                     330 	.db #0x26	; 38
      00009D 26                     331 	.db #0x26	; 38
      00009E 26                     332 	.db #0x26	; 38
      00009F 26                     333 	.db #0x26	; 38
      0000A0 26                     334 	.db #0x26	; 38
      0000A1 26                     335 	.db #0x26	; 38
      0000A2 26                     336 	.db #0x26	; 38
      0000A3 26                     337 	.db #0x26	; 38
      0000A4 26                     338 	.db #0x26	; 38
      0000A5 26                     339 	.db #0x26	; 38
      0000A6 26                     340 	.db #0x26	; 38
      0000A7 26                     341 	.db #0x26	; 38
      0000A8 26                     342 	.db #0x26	; 38
      0000A9 26                     343 	.db #0x26	; 38
      0000AA 26                     344 	.db #0x26	; 38
      0000AB 26                     345 	.db #0x26	; 38
      0000AC 26                     346 	.db #0x26	; 38
      0000AD 26                     347 	.db #0x26	; 38
      0000AE 26                     348 	.db #0x26	; 38
      0000AF 26                     349 	.db #0x26	; 38
      0000B0 26                     350 	.db #0x26	; 38
      0000B1 26                     351 	.db #0x26	; 38
      0000B2 25                     352 	.db #0x25	; 37
      0000B3 26                     353 	.db #0x26	; 38
      0000B4 26                     354 	.db #0x26	; 38
      0000B5 26                     355 	.db #0x26	; 38
      0000B6 26                     356 	.db #0x26	; 38
      0000B7 26                     357 	.db #0x26	; 38
      0000B8 26                     358 	.db #0x26	; 38
      0000B9 26                     359 	.db #0x26	; 38
      0000BA 26                     360 	.db #0x26	; 38
      0000BB 26                     361 	.db #0x26	; 38
      0000BC 26                     362 	.db #0x26	; 38
      0000BD 26                     363 	.db #0x26	; 38
      0000BE 26                     364 	.db #0x26	; 38
      0000BF 26                     365 	.db #0x26	; 38
      0000C0 26                     366 	.db #0x26	; 38
      0000C1 26                     367 	.db #0x26	; 38
      0000C2 26                     368 	.db #0x26	; 38
      0000C3 26                     369 	.db #0x26	; 38
      0000C4 26                     370 	.db #0x26	; 38
      0000C5 26                     371 	.db #0x26	; 38
      0000C6 26                     372 	.db #0x26	; 38
      0000C7 26                     373 	.db #0x26	; 38
      0000C8 26                     374 	.db #0x26	; 38
      0000C9 26                     375 	.db #0x26	; 38
      0000CA 26                     376 	.db #0x26	; 38
      0000CB 26                     377 	.db #0x26	; 38
      0000CC 26                     378 	.db #0x26	; 38
      0000CD 26                     379 	.db #0x26	; 38
      0000CE 26                     380 	.db #0x26	; 38
      0000CF 26                     381 	.db #0x26	; 38
      0000D0 26                     382 	.db #0x26	; 38
      0000D1 26                     383 	.db #0x26	; 38
      0000D2 26                     384 	.db #0x26	; 38
      0000D3 26                     385 	.db #0x26	; 38
      0000D4 26                     386 	.db #0x26	; 38
      0000D5 26                     387 	.db #0x26	; 38
      0000D6 26                     388 	.db #0x26	; 38
      0000D7 26                     389 	.db #0x26	; 38
      0000D8 26                     390 	.db #0x26	; 38
      0000D9 26                     391 	.db #0x26	; 38
      0000DA 26                     392 	.db #0x26	; 38
      0000DB 26                     393 	.db #0x26	; 38
      0000DC 26                     394 	.db #0x26	; 38
      0000DD 26                     395 	.db #0x26	; 38
      0000DE 26                     396 	.db #0x26	; 38
      0000DF 26                     397 	.db #0x26	; 38
      0000E0 26                     398 	.db #0x26	; 38
      0000E1 26                     399 	.db #0x26	; 38
      0000E2 26                     400 	.db #0x26	; 38
      0000E3 26                     401 	.db #0x26	; 38
      0000E4 26                     402 	.db #0x26	; 38
      0000E5 26                     403 	.db #0x26	; 38
      0000E6 26                     404 	.db #0x26	; 38
      0000E7 26                     405 	.db #0x26	; 38
      0000E8 26                     406 	.db #0x26	; 38
      0000E9 26                     407 	.db #0x26	; 38
      0000EA 26                     408 	.db #0x26	; 38
      0000EB 26                     409 	.db #0x26	; 38
      0000EC 26                     410 	.db #0x26	; 38
      0000ED 26                     411 	.db #0x26	; 38
      0000EE 26                     412 	.db #0x26	; 38
      0000EF 26                     413 	.db #0x26	; 38
      0000F0 26                     414 	.db #0x26	; 38
      0000F1 26                     415 	.db #0x26	; 38
      0000F2 26                     416 	.db #0x26	; 38
      0000F3 26                     417 	.db #0x26	; 38
      0000F4 26                     418 	.db #0x26	; 38
      0000F5 26                     419 	.db #0x26	; 38
      0000F6 26                     420 	.db #0x26	; 38
      0000F7 26                     421 	.db #0x26	; 38
      0000F8 26                     422 	.db #0x26	; 38
      0000F9 26                     423 	.db #0x26	; 38
      0000FA 26                     424 	.db #0x26	; 38
      0000FB 26                     425 	.db #0x26	; 38
      0000FC 26                     426 	.db #0x26	; 38
      0000FD 26                     427 	.db #0x26	; 38
      0000FE 26                     428 	.db #0x26	; 38
      0000FF 26                     429 	.db #0x26	; 38
      000100 26                     430 	.db #0x26	; 38
      000101 26                     431 	.db #0x26	; 38
      000102 26                     432 	.db #0x26	; 38
      000103 26                     433 	.db #0x26	; 38
      000104 26                     434 	.db #0x26	; 38
      000105 26                     435 	.db #0x26	; 38
      000106 26                     436 	.db #0x26	; 38
      000107 26                     437 	.db #0x26	; 38
      000108 26                     438 	.db #0x26	; 38
      000109 26                     439 	.db #0x26	; 38
      00010A 26                     440 	.db #0x26	; 38
      00010B 26                     441 	.db #0x26	; 38
      00010C 26                     442 	.db #0x26	; 38
      00010D 26                     443 	.db #0x26	; 38
      00010E 26                     444 	.db #0x26	; 38
      00010F 26                     445 	.db #0x26	; 38
      000110 26                     446 	.db #0x26	; 38
      000111 26                     447 	.db #0x26	; 38
      000112 26                     448 	.db #0x26	; 38
      000113 26                     449 	.db #0x26	; 38
      000114 26                     450 	.db #0x26	; 38
      000115 26                     451 	.db #0x26	; 38
      000116 26                     452 	.db #0x26	; 38
      000117 26                     453 	.db #0x26	; 38
      000118 26                     454 	.db #0x26	; 38
      000119 26                     455 	.db #0x26	; 38
      00011A 26                     456 	.db #0x26	; 38
      00011B 26                     457 	.db #0x26	; 38
      00011C 26                     458 	.db #0x26	; 38
      00011D 26                     459 	.db #0x26	; 38
      00011E 26                     460 	.db #0x26	; 38
      00011F 26                     461 	.db #0x26	; 38
      000120 26                     462 	.db #0x26	; 38
      000121 26                     463 	.db #0x26	; 38
      000122 26                     464 	.db #0x26	; 38
      000123 26                     465 	.db #0x26	; 38
      000124 26                     466 	.db #0x26	; 38
      000125 26                     467 	.db #0x26	; 38
      000126 26                     468 	.db #0x26	; 38
      000127 26                     469 	.db #0x26	; 38
      000128 26                     470 	.db #0x26	; 38
      000129 26                     471 	.db #0x26	; 38
      00012A 26                     472 	.db #0x26	; 38
      00012B 26                     473 	.db #0x26	; 38
      00012C 26                     474 	.db #0x26	; 38
      00012D 26                     475 	.db #0x26	; 38
      00012E 26                     476 	.db #0x26	; 38
      00012F 26                     477 	.db #0x26	; 38
      000130 26                     478 	.db #0x26	; 38
      000131 26                     479 	.db #0x26	; 38
      000132 26                     480 	.db #0x26	; 38
      000133 26                     481 	.db #0x26	; 38
      000134 26                     482 	.db #0x26	; 38
      000135 26                     483 	.db #0x26	; 38
      000136 26                     484 	.db #0x26	; 38
      000137 26                     485 	.db #0x26	; 38
      000138 26                     486 	.db #0x26	; 38
      000139 26                     487 	.db #0x26	; 38
      00013A 26                     488 	.db #0x26	; 38
      00013B 26                     489 	.db #0x26	; 38
      00013C 26                     490 	.db #0x26	; 38
      00013D 26                     491 	.db #0x26	; 38
      00013E 26                     492 	.db #0x26	; 38
      00013F 26                     493 	.db #0x26	; 38
      000140 26                     494 	.db #0x26	; 38
      000141 26                     495 	.db #0x26	; 38
      000142 26                     496 	.db #0x26	; 38
      000143 26                     497 	.db #0x26	; 38
      000144 26                     498 	.db #0x26	; 38
      000145 26                     499 	.db #0x26	; 38
      000146 26                     500 	.db #0x26	; 38
      000147 26                     501 	.db #0x26	; 38
      000148 26                     502 	.db #0x26	; 38
      000149 26                     503 	.db #0x26	; 38
      00014A 26                     504 	.db #0x26	; 38
      00014B 26                     505 	.db #0x26	; 38
      00014C 26                     506 	.db #0x26	; 38
      00014D 26                     507 	.db #0x26	; 38
      00014E 26                     508 	.db #0x26	; 38
      00014F 26                     509 	.db #0x26	; 38
      000150 26                     510 	.db #0x26	; 38
      000151 26                     511 	.db #0x26	; 38
      000152 26                     512 	.db #0x26	; 38
      000153 26                     513 	.db #0x26	; 38
      000154 26                     514 	.db #0x26	; 38
      000155 26                     515 	.db #0x26	; 38
      000156 26                     516 	.db #0x26	; 38
      000157 26                     517 	.db #0x26	; 38
      000158 26                     518 	.db #0x26	; 38
      000159 26                     519 	.db #0x26	; 38
      00015A 26                     520 	.db #0x26	; 38
      00015B 26                     521 	.db #0x26	; 38
      00015C 26                     522 	.db #0x26	; 38
      00015D 26                     523 	.db #0x26	; 38
      00015E 26                     524 	.db #0x26	; 38
      00015F 26                     525 	.db #0x26	; 38
      000160 26                     526 	.db #0x26	; 38
      000161 26                     527 	.db #0x26	; 38
      000162 26                     528 	.db #0x26	; 38
      000163 26                     529 	.db #0x26	; 38
      000164 26                     530 	.db #0x26	; 38
      000165 26                     531 	.db #0x26	; 38
      000166 26                     532 	.db #0x26	; 38
      000167 26                     533 	.db #0x26	; 38
      000168 26                     534 	.db #0x26	; 38
      000169 26                     535 	.db #0x26	; 38
      00016A 26                     536 	.db #0x26	; 38
      00016B 26                     537 	.db #0x26	; 38
      00016C 26                     538 	.db #0x26	; 38
      00016D 26                     539 	.db #0x26	; 38
      00016E 26                     540 	.db #0x26	; 38
      00016F 26                     541 	.db #0x26	; 38
      000170 26                     542 	.db #0x26	; 38
      000171 26                     543 	.db #0x26	; 38
      000172 26                     544 	.db #0x26	; 38
      000173 26                     545 	.db #0x26	; 38
      000174 26                     546 	.db #0x26	; 38
      000175 26                     547 	.db #0x26	; 38
      000176 26                     548 	.db #0x26	; 38
      000177 26                     549 	.db #0x26	; 38
      000178 26                     550 	.db #0x26	; 38
      000179 26                     551 	.db #0x26	; 38
      00017A 26                     552 	.db #0x26	; 38
      00017B 26                     553 	.db #0x26	; 38
      00017C 26                     554 	.db #0x26	; 38
      00017D 26                     555 	.db #0x26	; 38
      00017E 26                     556 	.db #0x26	; 38
      00017F 26                     557 	.db #0x26	; 38
      000180 26                     558 	.db #0x26	; 38
      000181 26                     559 	.db #0x26	; 38
      000182 26                     560 	.db #0x26	; 38
      000183 26                     561 	.db #0x26	; 38
      000184 26                     562 	.db #0x26	; 38
      000185 26                     563 	.db #0x26	; 38
      000186 26                     564 	.db #0x26	; 38
      000187 26                     565 	.db #0x26	; 38
      000188 26                     566 	.db #0x26	; 38
      000189 26                     567 	.db #0x26	; 38
      00018A 26                     568 	.db #0x26	; 38
      00018B 26                     569 	.db #0x26	; 38
      00018C 26                     570 	.db #0x26	; 38
      00018D 26                     571 	.db #0x26	; 38
      00018E 26                     572 	.db #0x26	; 38
      00018F 26                     573 	.db #0x26	; 38
      000190 26                     574 	.db #0x26	; 38
      000191 26                     575 	.db #0x26	; 38
      000192 26                     576 	.db #0x26	; 38
      000193 26                     577 	.db #0x26	; 38
      000194 26                     578 	.db #0x26	; 38
      000195 26                     579 	.db #0x26	; 38
      000196 26                     580 	.db #0x26	; 38
      000197 26                     581 	.db #0x26	; 38
      000198 26                     582 	.db #0x26	; 38
      000199 26                     583 	.db #0x26	; 38
      00019A 26                     584 	.db #0x26	; 38
      00019B 26                     585 	.db #0x26	; 38
      00019C 26                     586 	.db #0x26	; 38
      00019D 26                     587 	.db #0x26	; 38
      00019E 26                     588 	.db #0x26	; 38
      00019F 26                     589 	.db #0x26	; 38
      0001A0 26                     590 	.db #0x26	; 38
      0001A1 26                     591 	.db #0x26	; 38
      0001A2 26                     592 	.db #0x26	; 38
      0001A3 26                     593 	.db #0x26	; 38
      0001A4 26                     594 	.db #0x26	; 38
      0001A5 26                     595 	.db #0x26	; 38
      0001A6 26                     596 	.db #0x26	; 38
      0001A7 26                     597 	.db #0x26	; 38
      0001A8 26                     598 	.db #0x26	; 38
      0001A9 26                     599 	.db #0x26	; 38
      0001AA 26                     600 	.db #0x26	; 38
      0001AB 26                     601 	.db #0x26	; 38
      0001AC 26                     602 	.db #0x26	; 38
      0001AD 26                     603 	.db #0x26	; 38
      0001AE 26                     604 	.db #0x26	; 38
      0001AF 26                     605 	.db #0x26	; 38
      0001B0 26                     606 	.db #0x26	; 38
      0001B1 26                     607 	.db #0x26	; 38
      0001B2 26                     608 	.db #0x26	; 38
      0001B3 26                     609 	.db #0x26	; 38
      0001B4 26                     610 	.db #0x26	; 38
      0001B5 26                     611 	.db #0x26	; 38
      0001B6 26                     612 	.db #0x26	; 38
      0001B7 26                     613 	.db #0x26	; 38
      0001B8 26                     614 	.db #0x26	; 38
      0001B9 26                     615 	.db #0x26	; 38
      0001BA 25                     616 	.db #0x25	; 37
      0001BB 26                     617 	.db #0x26	; 38
      0001BC 26                     618 	.db #0x26	; 38
      0001BD 26                     619 	.db #0x26	; 38
      0001BE 26                     620 	.db #0x26	; 38
      0001BF 26                     621 	.db #0x26	; 38
      0001C0 26                     622 	.db #0x26	; 38
      0001C1 26                     623 	.db #0x26	; 38
      0001C2 26                     624 	.db #0x26	; 38
      0001C3 26                     625 	.db #0x26	; 38
      0001C4 26                     626 	.db #0x26	; 38
      0001C5 26                     627 	.db #0x26	; 38
      0001C6 26                     628 	.db #0x26	; 38
      0001C7 26                     629 	.db #0x26	; 38
      0001C8 26                     630 	.db #0x26	; 38
      0001C9 26                     631 	.db #0x26	; 38
      0001CA 26                     632 	.db #0x26	; 38
      0001CB 26                     633 	.db #0x26	; 38
      0001CC 26                     634 	.db #0x26	; 38
      0001CD 26                     635 	.db #0x26	; 38
      0001CE 26                     636 	.db #0x26	; 38
      0001CF 26                     637 	.db #0x26	; 38
      0001D0 26                     638 	.db #0x26	; 38
      0001D1 26                     639 	.db #0x26	; 38
      0001D2 26                     640 	.db #0x26	; 38
      0001D3 26                     641 	.db #0x26	; 38
      0001D4 26                     642 	.db #0x26	; 38
      0001D5 26                     643 	.db #0x26	; 38
      0001D6 26                     644 	.db #0x26	; 38
      0001D7 26                     645 	.db #0x26	; 38
      0001D8 26                     646 	.db #0x26	; 38
      0001D9 26                     647 	.db #0x26	; 38
      0001DA 27                     648 	.db #0x27	; 39
      0001DB 28                     649 	.db #0x28	; 40
      0001DC 26                     650 	.db #0x26	; 38
      0001DD 26                     651 	.db #0x26	; 38
      0001DE 26                     652 	.db #0x26	; 38
      0001DF 26                     653 	.db #0x26	; 38
      0001E0 26                     654 	.db #0x26	; 38
      0001E1 26                     655 	.db #0x26	; 38
      0001E2 26                     656 	.db #0x26	; 38
      0001E3 26                     657 	.db #0x26	; 38
      0001E4 26                     658 	.db #0x26	; 38
      0001E5 26                     659 	.db #0x26	; 38
      0001E6 26                     660 	.db #0x26	; 38
      0001E7 26                     661 	.db #0x26	; 38
      0001E8 26                     662 	.db #0x26	; 38
      0001E9 26                     663 	.db #0x26	; 38
      0001EA 26                     664 	.db #0x26	; 38
      0001EB 26                     665 	.db #0x26	; 38
      0001EC 26                     666 	.db #0x26	; 38
      0001ED 26                     667 	.db #0x26	; 38
      0001EE 25                     668 	.db #0x25	; 37
      0001EF 26                     669 	.db #0x26	; 38
      0001F0 26                     670 	.db #0x26	; 38
      0001F1 26                     671 	.db #0x26	; 38
      0001F2 26                     672 	.db #0x26	; 38
      0001F3 26                     673 	.db #0x26	; 38
      0001F4 26                     674 	.db #0x26	; 38
      0001F5 26                     675 	.db #0x26	; 38
      0001F6 26                     676 	.db #0x26	; 38
      0001F7 26                     677 	.db #0x26	; 38
      0001F8 26                     678 	.db #0x26	; 38
      0001F9 26                     679 	.db #0x26	; 38
      0001FA 2A                     680 	.db #0x2a	; 42
      0001FB 29                     681 	.db #0x29	; 41
      0001FC 26                     682 	.db #0x26	; 38
      0001FD 26                     683 	.db #0x26	; 38
      0001FE 26                     684 	.db #0x26	; 38
      0001FF 26                     685 	.db #0x26	; 38
      000200 26                     686 	.db #0x26	; 38
      000201 26                     687 	.db #0x26	; 38
      000202 26                     688 	.db #0x26	; 38
      000203 26                     689 	.db #0x26	; 38
      000204 26                     690 	.db #0x26	; 38
      000205 26                     691 	.db #0x26	; 38
      000206 26                     692 	.db #0x26	; 38
      000207 26                     693 	.db #0x26	; 38
      000208 26                     694 	.db #0x26	; 38
      000209 26                     695 	.db #0x26	; 38
      00020A 26                     696 	.db #0x26	; 38
      00020B 26                     697 	.db #0x26	; 38
      00020C 26                     698 	.db #0x26	; 38
      00020D 26                     699 	.db #0x26	; 38
      00020E 27                     700 	.db #0x27	; 39
      00020F 28                     701 	.db #0x28	; 40
      000210 26                     702 	.db #0x26	; 38
      000211 26                     703 	.db #0x26	; 38
      000212 26                     704 	.db #0x26	; 38
      000213 26                     705 	.db #0x26	; 38
      000214 26                     706 	.db #0x26	; 38
      000215 26                     707 	.db #0x26	; 38
      000216 26                     708 	.db #0x26	; 38
      000217 26                     709 	.db #0x26	; 38
      000218 26                     710 	.db #0x26	; 38
      000219 26                     711 	.db #0x26	; 38
      00021A 26                     712 	.db #0x26	; 38
      00021B 26                     713 	.db #0x26	; 38
      00021C 26                     714 	.db #0x26	; 38
      00021D 26                     715 	.db #0x26	; 38
      00021E 26                     716 	.db #0x26	; 38
      00021F 26                     717 	.db #0x26	; 38
      000220 26                     718 	.db #0x26	; 38
      000221 26                     719 	.db #0x26	; 38
      000222 26                     720 	.db #0x26	; 38
      000223 26                     721 	.db #0x26	; 38
      000224 26                     722 	.db #0x26	; 38
      000225 26                     723 	.db #0x26	; 38
      000226 26                     724 	.db #0x26	; 38
      000227 26                     725 	.db #0x26	; 38
      000228 26                     726 	.db #0x26	; 38
      000229 26                     727 	.db #0x26	; 38
      00022A 26                     728 	.db #0x26	; 38
      00022B 26                     729 	.db #0x26	; 38
      00022C 26                     730 	.db #0x26	; 38
      00022D 26                     731 	.db #0x26	; 38
      00022E 2A                     732 	.db #0x2a	; 42
      00022F 29                     733 	.db #0x29	; 41
      000230 26                     734 	.db #0x26	; 38
      000231 26                     735 	.db #0x26	; 38
      000232 26                     736 	.db #0x26	; 38
      000233 26                     737 	.db #0x26	; 38
      000234 26                     738 	.db #0x26	; 38
      000235 26                     739 	.db #0x26	; 38
      000236 26                     740 	.db #0x26	; 38
      000237 26                     741 	.db #0x26	; 38
      000238 26                     742 	.db #0x26	; 38
      000239 26                     743 	.db #0x26	; 38
      00023A 26                     744 	.db #0x26	; 38
      00023B 26                     745 	.db #0x26	; 38
      00023C 26                     746 	.db #0x26	; 38
      00023D 26                     747 	.db #0x26	; 38
      00023E 26                     748 	.db #0x26	; 38
      00023F 26                     749 	.db #0x26	; 38
      000240 26                     750 	.db #0x26	; 38
      000241 26                     751 	.db #0x26	; 38
      000242 26                     752 	.db #0x26	; 38
      000243 26                     753 	.db #0x26	; 38
      000244 26                     754 	.db #0x26	; 38
      000245 26                     755 	.db #0x26	; 38
      000246 26                     756 	.db #0x26	; 38
      000247 26                     757 	.db #0x26	; 38
      000248 26                     758 	.db #0x26	; 38
      000249 26                     759 	.db #0x26	; 38
      00024A 26                     760 	.db #0x26	; 38
      00024B 26                     761 	.db #0x26	; 38
      00024C 26                     762 	.db #0x26	; 38
      00024D 26                     763 	.db #0x26	; 38
      00024E 26                     764 	.db #0x26	; 38
      00024F 26                     765 	.db #0x26	; 38
      000250 26                     766 	.db #0x26	; 38
      000251 26                     767 	.db #0x26	; 38
      000252 26                     768 	.db #0x26	; 38
      000253 26                     769 	.db #0x26	; 38
      000254 26                     770 	.db #0x26	; 38
      000255 26                     771 	.db #0x26	; 38
      000256 26                     772 	.db #0x26	; 38
      000257 26                     773 	.db #0x26	; 38
      000258 26                     774 	.db #0x26	; 38
      000259 26                     775 	.db #0x26	; 38
      00025A 26                     776 	.db #0x26	; 38
      00025B 26                     777 	.db #0x26	; 38
      00025C 26                     778 	.db #0x26	; 38
      00025D 26                     779 	.db #0x26	; 38
      00025E 26                     780 	.db #0x26	; 38
      00025F 26                     781 	.db #0x26	; 38
      000260 26                     782 	.db #0x26	; 38
      000261 26                     783 	.db #0x26	; 38
      000262 26                     784 	.db #0x26	; 38
      000263 26                     785 	.db #0x26	; 38
      000264 26                     786 	.db #0x26	; 38
      000265 26                     787 	.db #0x26	; 38
      000266 26                     788 	.db #0x26	; 38
      000267 26                     789 	.db #0x26	; 38
      000268 26                     790 	.db #0x26	; 38
      000269 26                     791 	.db #0x26	; 38
      00026A 26                     792 	.db #0x26	; 38
      00026B 26                     793 	.db #0x26	; 38
      00026C 26                     794 	.db #0x26	; 38
      00026D 26                     795 	.db #0x26	; 38
      00026E 26                     796 	.db #0x26	; 38
      00026F 26                     797 	.db #0x26	; 38
      000270 26                     798 	.db #0x26	; 38
      000271 26                     799 	.db #0x26	; 38
      000272 26                     800 	.db #0x26	; 38
      000273 26                     801 	.db #0x26	; 38
      000274 26                     802 	.db #0x26	; 38
      000275 26                     803 	.db #0x26	; 38
      000276 26                     804 	.db #0x26	; 38
      000277 26                     805 	.db #0x26	; 38
      000278 26                     806 	.db #0x26	; 38
      000279 26                     807 	.db #0x26	; 38
      00027A 26                     808 	.db #0x26	; 38
      00027B 26                     809 	.db #0x26	; 38
      00027C 26                     810 	.db #0x26	; 38
      00027D 26                     811 	.db #0x26	; 38
      00027E 26                     812 	.db #0x26	; 38
      00027F 26                     813 	.db #0x26	; 38
      000280 26                     814 	.db #0x26	; 38
      000281 26                     815 	.db #0x26	; 38
      000282 26                     816 	.db #0x26	; 38
      000283 26                     817 	.db #0x26	; 38
      000284 26                     818 	.db #0x26	; 38
      000285 26                     819 	.db #0x26	; 38
      000286 26                     820 	.db #0x26	; 38
      000287 25                     821 	.db #0x25	; 37
      000288 26                     822 	.db #0x26	; 38
      000289 26                     823 	.db #0x26	; 38
      00028A 26                     824 	.db #0x26	; 38
      00028B 26                     825 	.db #0x26	; 38
      00028C 26                     826 	.db #0x26	; 38
      00028D 26                     827 	.db #0x26	; 38
      00028E 26                     828 	.db #0x26	; 38
      00028F 26                     829 	.db #0x26	; 38
      000290 26                     830 	.db #0x26	; 38
      000291 26                     831 	.db #0x26	; 38
      000292 26                     832 	.db #0x26	; 38
      000293 26                     833 	.db #0x26	; 38
      000294 26                     834 	.db #0x26	; 38
      000295 26                     835 	.db #0x26	; 38
      000296 26                     836 	.db #0x26	; 38
      000297 26                     837 	.db #0x26	; 38
      000298 26                     838 	.db #0x26	; 38
      000299 26                     839 	.db #0x26	; 38
      00029A 26                     840 	.db #0x26	; 38
      00029B 26                     841 	.db #0x26	; 38
      00029C 26                     842 	.db #0x26	; 38
      00029D 26                     843 	.db #0x26	; 38
      00029E 26                     844 	.db #0x26	; 38
      00029F 26                     845 	.db #0x26	; 38
      0002A0 26                     846 	.db #0x26	; 38
      0002A1 26                     847 	.db #0x26	; 38
      0002A2 26                     848 	.db #0x26	; 38
      0002A3 26                     849 	.db #0x26	; 38
      0002A4 26                     850 	.db #0x26	; 38
      0002A5 26                     851 	.db #0x26	; 38
      0002A6 26                     852 	.db #0x26	; 38
      0002A7 28                     853 	.db #0x28	; 40
      0002A8 26                     854 	.db #0x26	; 38
      0002A9 26                     855 	.db #0x26	; 38
      0002AA 26                     856 	.db #0x26	; 38
      0002AB 26                     857 	.db #0x26	; 38
      0002AC 26                     858 	.db #0x26	; 38
      0002AD 26                     859 	.db #0x26	; 38
      0002AE 26                     860 	.db #0x26	; 38
      0002AF 26                     861 	.db #0x26	; 38
      0002B0 26                     862 	.db #0x26	; 38
      0002B1 26                     863 	.db #0x26	; 38
      0002B2 26                     864 	.db #0x26	; 38
      0002B3 26                     865 	.db #0x26	; 38
      0002B4 26                     866 	.db #0x26	; 38
      0002B5 26                     867 	.db #0x26	; 38
      0002B6 26                     868 	.db #0x26	; 38
      0002B7 26                     869 	.db #0x26	; 38
      0002B8 26                     870 	.db #0x26	; 38
      0002B9 26                     871 	.db #0x26	; 38
      0002BA 26                     872 	.db #0x26	; 38
      0002BB 26                     873 	.db #0x26	; 38
      0002BC 26                     874 	.db #0x26	; 38
      0002BD 26                     875 	.db #0x26	; 38
      0002BE 26                     876 	.db #0x26	; 38
      0002BF 26                     877 	.db #0x26	; 38
      0002C0 26                     878 	.db #0x26	; 38
      0002C1 26                     879 	.db #0x26	; 38
      0002C2 26                     880 	.db #0x26	; 38
      0002C3 26                     881 	.db #0x26	; 38
      0002C4 26                     882 	.db #0x26	; 38
      0002C5 26                     883 	.db #0x26	; 38
      0002C6 27                     884 	.db #0x27	; 39
      0002C7 29                     885 	.db #0x29	; 41
      0002C8 26                     886 	.db #0x26	; 38
      0002C9 26                     887 	.db #0x26	; 38
      0002CA 26                     888 	.db #0x26	; 38
      0002CB 26                     889 	.db #0x26	; 38
      0002CC 26                     890 	.db #0x26	; 38
      0002CD 26                     891 	.db #0x26	; 38
      0002CE 26                     892 	.db #0x26	; 38
      0002CF 26                     893 	.db #0x26	; 38
      0002D0 26                     894 	.db #0x26	; 38
      0002D1 26                     895 	.db #0x26	; 38
      0002D2 26                     896 	.db #0x26	; 38
      0002D3 26                     897 	.db #0x26	; 38
      0002D4 26                     898 	.db #0x26	; 38
      0002D5 26                     899 	.db #0x26	; 38
      0002D6 26                     900 	.db #0x26	; 38
      0002D7 26                     901 	.db #0x26	; 38
      0002D8 26                     902 	.db #0x26	; 38
      0002D9 26                     903 	.db #0x26	; 38
      0002DA 26                     904 	.db #0x26	; 38
      0002DB 26                     905 	.db #0x26	; 38
      0002DC 26                     906 	.db #0x26	; 38
      0002DD 26                     907 	.db #0x26	; 38
      0002DE 26                     908 	.db #0x26	; 38
      0002DF 26                     909 	.db #0x26	; 38
      0002E0 26                     910 	.db #0x26	; 38
      0002E1 26                     911 	.db #0x26	; 38
      0002E2 26                     912 	.db #0x26	; 38
      0002E3 26                     913 	.db #0x26	; 38
      0002E4 26                     914 	.db #0x26	; 38
      0002E5 26                     915 	.db #0x26	; 38
      0002E6 2A                     916 	.db #0x2a	; 42
      0002E7 26                     917 	.db #0x26	; 38
      0002E8 26                     918 	.db #0x26	; 38
      0002E9 26                     919 	.db #0x26	; 38
      0002EA 26                     920 	.db #0x26	; 38
      0002EB 26                     921 	.db #0x26	; 38
      0002EC 26                     922 	.db #0x26	; 38
      0002ED 26                     923 	.db #0x26	; 38
      0002EE 26                     924 	.db #0x26	; 38
      0002EF 26                     925 	.db #0x26	; 38
      0002F0 26                     926 	.db #0x26	; 38
      0002F1 26                     927 	.db #0x26	; 38
      0002F2 26                     928 	.db #0x26	; 38
      0002F3 26                     929 	.db #0x26	; 38
      0002F4 26                     930 	.db #0x26	; 38
      0002F5 26                     931 	.db #0x26	; 38
      0002F6 26                     932 	.db #0x26	; 38
      0002F7 26                     933 	.db #0x26	; 38
      0002F8 26                     934 	.db #0x26	; 38
      0002F9 26                     935 	.db #0x26	; 38
      0002FA 26                     936 	.db #0x26	; 38
      0002FB 26                     937 	.db #0x26	; 38
      0002FC 26                     938 	.db #0x26	; 38
      0002FD 26                     939 	.db #0x26	; 38
      0002FE 26                     940 	.db #0x26	; 38
      0002FF 26                     941 	.db #0x26	; 38
      000300 26                     942 	.db #0x26	; 38
      000301 26                     943 	.db #0x26	; 38
      000302 26                     944 	.db #0x26	; 38
      000303 26                     945 	.db #0x26	; 38
      000304 26                     946 	.db #0x26	; 38
      000305 26                     947 	.db #0x26	; 38
      000306 26                     948 	.db #0x26	; 38
      000307 26                     949 	.db #0x26	; 38
      000308 26                     950 	.db #0x26	; 38
      000309 26                     951 	.db #0x26	; 38
      00030A 26                     952 	.db #0x26	; 38
      00030B 26                     953 	.db #0x26	; 38
      00030C 26                     954 	.db #0x26	; 38
      00030D 26                     955 	.db #0x26	; 38
      00030E 26                     956 	.db #0x26	; 38
      00030F 26                     957 	.db #0x26	; 38
      000310 26                     958 	.db #0x26	; 38
      000311 26                     959 	.db #0x26	; 38
      000312 26                     960 	.db #0x26	; 38
      000313 26                     961 	.db #0x26	; 38
      000314 26                     962 	.db #0x26	; 38
      000315 26                     963 	.db #0x26	; 38
      000316 26                     964 	.db #0x26	; 38
      000317 26                     965 	.db #0x26	; 38
      000318 26                     966 	.db #0x26	; 38
      000319 26                     967 	.db #0x26	; 38
      00031A 26                     968 	.db #0x26	; 38
      00031B 26                     969 	.db #0x26	; 38
      00031C 26                     970 	.db #0x26	; 38
      00031D 26                     971 	.db #0x26	; 38
      00031E 26                     972 	.db #0x26	; 38
      00031F 26                     973 	.db #0x26	; 38
      000320 26                     974 	.db #0x26	; 38
      000321 26                     975 	.db #0x26	; 38
      000322 26                     976 	.db #0x26	; 38
      000323 26                     977 	.db #0x26	; 38
      000324 26                     978 	.db #0x26	; 38
      000325 26                     979 	.db #0x26	; 38
      000326 26                     980 	.db #0x26	; 38
      000327 26                     981 	.db #0x26	; 38
      000328 26                     982 	.db #0x26	; 38
      000329 26                     983 	.db #0x26	; 38
      00032A 26                     984 	.db #0x26	; 38
      00032B 26                     985 	.db #0x26	; 38
      00032C 26                     986 	.db #0x26	; 38
      00032D 26                     987 	.db #0x26	; 38
      00032E 26                     988 	.db #0x26	; 38
      00032F 26                     989 	.db #0x26	; 38
      000330 26                     990 	.db #0x26	; 38
      000331 26                     991 	.db #0x26	; 38
      000332 26                     992 	.db #0x26	; 38
      000333 26                     993 	.db #0x26	; 38
      000334 26                     994 	.db #0x26	; 38
      000335 26                     995 	.db #0x26	; 38
      000336 26                     996 	.db #0x26	; 38
      000337 26                     997 	.db #0x26	; 38
      000338 26                     998 	.db #0x26	; 38
      000339 26                     999 	.db #0x26	; 38
      00033A 26                    1000 	.db #0x26	; 38
      00033B 26                    1001 	.db #0x26	; 38
      00033C 26                    1002 	.db #0x26	; 38
      00033D 26                    1003 	.db #0x26	; 38
      00033E 26                    1004 	.db #0x26	; 38
      00033F 26                    1005 	.db #0x26	; 38
      000340 26                    1006 	.db #0x26	; 38
      000341 26                    1007 	.db #0x26	; 38
      000342 26                    1008 	.db #0x26	; 38
      000343 26                    1009 	.db #0x26	; 38
      000344 26                    1010 	.db #0x26	; 38
      000345 26                    1011 	.db #0x26	; 38
      000346 26                    1012 	.db #0x26	; 38
      000347 26                    1013 	.db #0x26	; 38
      000348 26                    1014 	.db #0x26	; 38
      000349 26                    1015 	.db #0x26	; 38
      00034A 26                    1016 	.db #0x26	; 38
      00034B 26                    1017 	.db #0x26	; 38
      00034C 26                    1018 	.db #0x26	; 38
      00034D 26                    1019 	.db #0x26	; 38
      00034E 26                    1020 	.db #0x26	; 38
      00034F 26                    1021 	.db #0x26	; 38
      000350 26                    1022 	.db #0x26	; 38
      000351 26                    1023 	.db #0x26	; 38
      000352 26                    1024 	.db #0x26	; 38
      000353 26                    1025 	.db #0x26	; 38
      000354 26                    1026 	.db #0x26	; 38
      000355 26                    1027 	.db #0x26	; 38
      000356 26                    1028 	.db #0x26	; 38
      000357 26                    1029 	.db #0x26	; 38
      000358 26                    1030 	.db #0x26	; 38
      000359 26                    1031 	.db #0x26	; 38
      00035A 26                    1032 	.db #0x26	; 38
      00035B 26                    1033 	.db #0x26	; 38
      00035C 26                    1034 	.db #0x26	; 38
      00035D 26                    1035 	.db #0x26	; 38
      00035E 26                    1036 	.db #0x26	; 38
      00035F 26                    1037 	.db #0x26	; 38
      000360 26                    1038 	.db #0x26	; 38
      000361 26                    1039 	.db #0x26	; 38
      000362 26                    1040 	.db #0x26	; 38
      000363 26                    1041 	.db #0x26	; 38
      000364 26                    1042 	.db #0x26	; 38
      000365 26                    1043 	.db #0x26	; 38
      000366 26                    1044 	.db #0x26	; 38
      000367 26                    1045 	.db #0x26	; 38
      000368 26                    1046 	.db #0x26	; 38
      000369 26                    1047 	.db #0x26	; 38
      00036A 26                    1048 	.db #0x26	; 38
      00036B 26                    1049 	.db #0x26	; 38
      00036C 26                    1050 	.db #0x26	; 38
      00036D 26                    1051 	.db #0x26	; 38
      00036E 26                    1052 	.db #0x26	; 38
      00036F 26                    1053 	.db #0x26	; 38
      000370 26                    1054 	.db #0x26	; 38
      000371 26                    1055 	.db #0x26	; 38
      000372 26                    1056 	.db #0x26	; 38
      000373 26                    1057 	.db #0x26	; 38
      000374 26                    1058 	.db #0x26	; 38
      000375 26                    1059 	.db #0x26	; 38
      000376 26                    1060 	.db #0x26	; 38
      000377 26                    1061 	.db #0x26	; 38
      000378 25                    1062 	.db #0x25	; 37
      000379 26                    1063 	.db #0x26	; 38
      00037A 26                    1064 	.db #0x26	; 38
      00037B 26                    1065 	.db #0x26	; 38
      00037C 26                    1066 	.db #0x26	; 38
      00037D 26                    1067 	.db #0x26	; 38
      00037E 26                    1068 	.db #0x26	; 38
      00037F 26                    1069 	.db #0x26	; 38
      000380 26                    1070 	.db #0x26	; 38
      000381 26                    1071 	.db #0x26	; 38
      000382 26                    1072 	.db #0x26	; 38
      000383 26                    1073 	.db #0x26	; 38
      000384 26                    1074 	.db #0x26	; 38
      000385 26                    1075 	.db #0x26	; 38
      000386 26                    1076 	.db #0x26	; 38
      000387 26                    1077 	.db #0x26	; 38
      000388 26                    1078 	.db #0x26	; 38
      000389 26                    1079 	.db #0x26	; 38
      00038A 26                    1080 	.db #0x26	; 38
      00038B 26                    1081 	.db #0x26	; 38
      00038C 26                    1082 	.db #0x26	; 38
      00038D 26                    1083 	.db #0x26	; 38
      00038E 26                    1084 	.db #0x26	; 38
      00038F 26                    1085 	.db #0x26	; 38
      000390 26                    1086 	.db #0x26	; 38
      000391 26                    1087 	.db #0x26	; 38
      000392 26                    1088 	.db #0x26	; 38
      000393 26                    1089 	.db #0x26	; 38
      000394 26                    1090 	.db #0x26	; 38
      000395 26                    1091 	.db #0x26	; 38
      000396 26                    1092 	.db #0x26	; 38
      000397 26                    1093 	.db #0x26	; 38
      000398 27                    1094 	.db #0x27	; 39
      000399 28                    1095 	.db #0x28	; 40
      00039A 26                    1096 	.db #0x26	; 38
      00039B 26                    1097 	.db #0x26	; 38
      00039C 26                    1098 	.db #0x26	; 38
      00039D 26                    1099 	.db #0x26	; 38
      00039E 26                    1100 	.db #0x26	; 38
      00039F 26                    1101 	.db #0x26	; 38
      0003A0 26                    1102 	.db #0x26	; 38
      0003A1 26                    1103 	.db #0x26	; 38
      0003A2 26                    1104 	.db #0x26	; 38
      0003A3 26                    1105 	.db #0x26	; 38
      0003A4 26                    1106 	.db #0x26	; 38
      0003A5 26                    1107 	.db #0x26	; 38
      0003A6 26                    1108 	.db #0x26	; 38
      0003A7 26                    1109 	.db #0x26	; 38
      0003A8 26                    1110 	.db #0x26	; 38
      0003A9 26                    1111 	.db #0x26	; 38
      0003AA 26                    1112 	.db #0x26	; 38
      0003AB 26                    1113 	.db #0x26	; 38
      0003AC 26                    1114 	.db #0x26	; 38
      0003AD 26                    1115 	.db #0x26	; 38
      0003AE 26                    1116 	.db #0x26	; 38
      0003AF 26                    1117 	.db #0x26	; 38
      0003B0 26                    1118 	.db #0x26	; 38
      0003B1 26                    1119 	.db #0x26	; 38
      0003B2 26                    1120 	.db #0x26	; 38
      0003B3 26                    1121 	.db #0x26	; 38
      0003B4 26                    1122 	.db #0x26	; 38
      0003B5 26                    1123 	.db #0x26	; 38
      0003B6 26                    1124 	.db #0x26	; 38
      0003B7 26                    1125 	.db #0x26	; 38
      0003B8 2A                    1126 	.db #0x2a	; 42
      0003B9 29                    1127 	.db #0x29	; 41
      0003BA 26                    1128 	.db #0x26	; 38
      0003BB 26                    1129 	.db #0x26	; 38
      0003BC 26                    1130 	.db #0x26	; 38
      0003BD 26                    1131 	.db #0x26	; 38
      0003BE 26                    1132 	.db #0x26	; 38
      0003BF 26                    1133 	.db #0x26	; 38
      0003C0 26                    1134 	.db #0x26	; 38
      0003C1 26                    1135 	.db #0x26	; 38
      0003C2 26                    1136 	.db #0x26	; 38
      0003C3 26                    1137 	.db #0x26	; 38
      0003C4 26                    1138 	.db #0x26	; 38
      0003C5 26                    1139 	.db #0x26	; 38
      0003C6 26                    1140 	.db #0x26	; 38
      0003C7 26                    1141 	.db #0x26	; 38
      0003C8 26                    1142 	.db #0x26	; 38
      0003C9 26                    1143 	.db #0x26	; 38
      0003CA 26                    1144 	.db #0x26	; 38
      0003CB 26                    1145 	.db #0x26	; 38
      0003CC 26                    1146 	.db #0x26	; 38
      0003CD 26                    1147 	.db #0x26	; 38
      0003CE 26                    1148 	.db #0x26	; 38
      0003CF 26                    1149 	.db #0x26	; 38
      0003D0 26                    1150 	.db #0x26	; 38
      0003D1 26                    1151 	.db #0x26	; 38
      0003D2 26                    1152 	.db #0x26	; 38
      0003D3 26                    1153 	.db #0x26	; 38
      0003D4 26                    1154 	.db #0x26	; 38
      0003D5 26                    1155 	.db #0x26	; 38
      0003D6 26                    1156 	.db #0x26	; 38
      0003D7 26                    1157 	.db #0x26	; 38
      0003D8 26                    1158 	.db #0x26	; 38
      0003D9 26                    1159 	.db #0x26	; 38
      0003DA 26                    1160 	.db #0x26	; 38
      0003DB 26                    1161 	.db #0x26	; 38
      0003DC 26                    1162 	.db #0x26	; 38
      0003DD 26                    1163 	.db #0x26	; 38
      0003DE 26                    1164 	.db #0x26	; 38
      0003DF 26                    1165 	.db #0x26	; 38
      0003E0 26                    1166 	.db #0x26	; 38
      0003E1 26                    1167 	.db #0x26	; 38
      0003E2 26                    1168 	.db #0x26	; 38
      0003E3 26                    1169 	.db #0x26	; 38
      0003E4 26                    1170 	.db #0x26	; 38
      0003E5 26                    1171 	.db #0x26	; 38
      0003E6 26                    1172 	.db #0x26	; 38
      0003E7 26                    1173 	.db #0x26	; 38
      0003E8 26                    1174 	.db #0x26	; 38
      0003E9 26                    1175 	.db #0x26	; 38
      0003EA 26                    1176 	.db #0x26	; 38
      0003EB 26                    1177 	.db #0x26	; 38
      0003EC 26                    1178 	.db #0x26	; 38
      0003ED 26                    1179 	.db #0x26	; 38
      0003EE 26                    1180 	.db #0x26	; 38
      0003EF 26                    1181 	.db #0x26	; 38
      0003F0 26                    1182 	.db #0x26	; 38
      0003F1 26                    1183 	.db #0x26	; 38
      0003F2 26                    1184 	.db #0x26	; 38
      0003F3 26                    1185 	.db #0x26	; 38
      0003F4 26                    1186 	.db #0x26	; 38
      0003F5 26                    1187 	.db #0x26	; 38
      0003F6 26                    1188 	.db #0x26	; 38
      0003F7 26                    1189 	.db #0x26	; 38
      0003F8 26                    1190 	.db #0x26	; 38
      0003F9 26                    1191 	.db #0x26	; 38
      0003FA 26                    1192 	.db #0x26	; 38
      0003FB 26                    1193 	.db #0x26	; 38
      0003FC 26                    1194 	.db #0x26	; 38
      0003FD 26                    1195 	.db #0x26	; 38
      0003FE 26                    1196 	.db #0x26	; 38
      0003FF 26                    1197 	.db #0x26	; 38
      000400 26                    1198 	.db #0x26	; 38
      000401 26                    1199 	.db #0x26	; 38
      000402 26                    1200 	.db #0x26	; 38
      000403 26                    1201 	.db #0x26	; 38
      000404 26                    1202 	.db #0x26	; 38
      000405 26                    1203 	.db #0x26	; 38
      000406 26                    1204 	.db #0x26	; 38
      000407 26                    1205 	.db #0x26	; 38
      000408 26                    1206 	.db #0x26	; 38
      000409 26                    1207 	.db #0x26	; 38
      00040A 26                    1208 	.db #0x26	; 38
      00040B 26                    1209 	.db #0x26	; 38
      00040C 26                    1210 	.db #0x26	; 38
      00040D 26                    1211 	.db #0x26	; 38
      00040E 26                    1212 	.db #0x26	; 38
      00040F 26                    1213 	.db #0x26	; 38
      000410 26                    1214 	.db #0x26	; 38
      000411 26                    1215 	.db #0x26	; 38
      000412 26                    1216 	.db #0x26	; 38
      000413 26                    1217 	.db #0x26	; 38
      000414 26                    1218 	.db #0x26	; 38
      000415 26                    1219 	.db #0x26	; 38
      000416 26                    1220 	.db #0x26	; 38
      000417 26                    1221 	.db #0x26	; 38
      000418 26                    1222 	.db #0x26	; 38
      000419 26                    1223 	.db #0x26	; 38
      00041A 26                    1224 	.db #0x26	; 38
      00041B 26                    1225 	.db #0x26	; 38
      00041C 26                    1226 	.db #0x26	; 38
      00041D 26                    1227 	.db #0x26	; 38
      00041E 26                    1228 	.db #0x26	; 38
      00041F 26                    1229 	.db #0x26	; 38
      000420 26                    1230 	.db #0x26	; 38
      000421 26                    1231 	.db #0x26	; 38
      000422 26                    1232 	.db #0x26	; 38
      000423 26                    1233 	.db #0x26	; 38
      000424 26                    1234 	.db #0x26	; 38
      000425 26                    1235 	.db #0x26	; 38
      000426 26                    1236 	.db #0x26	; 38
      000427 26                    1237 	.db #0x26	; 38
      000428 26                    1238 	.db #0x26	; 38
      000429 26                    1239 	.db #0x26	; 38
      00042A 26                    1240 	.db #0x26	; 38
      00042B 26                    1241 	.db #0x26	; 38
      00042C 26                    1242 	.db #0x26	; 38
      00042D 26                    1243 	.db #0x26	; 38
      00042E 26                    1244 	.db #0x26	; 38
      00042F 26                    1245 	.db #0x26	; 38
      000430 26                    1246 	.db #0x26	; 38
      000431 26                    1247 	.db #0x26	; 38
      000432 26                    1248 	.db #0x26	; 38
      000433 26                    1249 	.db #0x26	; 38
      000434 26                    1250 	.db #0x26	; 38
      000435 26                    1251 	.db #0x26	; 38
      000436 26                    1252 	.db #0x26	; 38
      000437 26                    1253 	.db #0x26	; 38
      000438 26                    1254 	.db #0x26	; 38
      000439 26                    1255 	.db #0x26	; 38
      00043A 26                    1256 	.db #0x26	; 38
      00043B 26                    1257 	.db #0x26	; 38
      00043C 26                    1258 	.db #0x26	; 38
      00043D 26                    1259 	.db #0x26	; 38
      00043E 26                    1260 	.db #0x26	; 38
      00043F 26                    1261 	.db #0x26	; 38
      000440 26                    1262 	.db #0x26	; 38
      000441 26                    1263 	.db #0x26	; 38
      000442 26                    1264 	.db #0x26	; 38
      000443 26                    1265 	.db #0x26	; 38
      000444 26                    1266 	.db #0x26	; 38
      000445 26                    1267 	.db #0x26	; 38
      000446 26                    1268 	.db #0x26	; 38
      000447 26                    1269 	.db #0x26	; 38
      000448 26                    1270 	.db #0x26	; 38
      000449 26                    1271 	.db #0x26	; 38
      00044A 26                    1272 	.db #0x26	; 38
      00044B 26                    1273 	.db #0x26	; 38
      00044C 26                    1274 	.db #0x26	; 38
      00044D 26                    1275 	.db #0x26	; 38
      00044E 26                    1276 	.db #0x26	; 38
      00044F 26                    1277 	.db #0x26	; 38
      000450 26                    1278 	.db #0x26	; 38
      000451 26                    1279 	.db #0x26	; 38
      000452 26                    1280 	.db #0x26	; 38
      000453 26                    1281 	.db #0x26	; 38
      000454 26                    1282 	.db #0x26	; 38
      000455 26                    1283 	.db #0x26	; 38
      000456 26                    1284 	.db #0x26	; 38
      000457 26                    1285 	.db #0x26	; 38
      000458 26                    1286 	.db #0x26	; 38
      000459 26                    1287 	.db #0x26	; 38
      00045A 26                    1288 	.db #0x26	; 38
      00045B 26                    1289 	.db #0x26	; 38
      00045C 26                    1290 	.db #0x26	; 38
      00045D 26                    1291 	.db #0x26	; 38
      00045E 26                    1292 	.db #0x26	; 38
      00045F 26                    1293 	.db #0x26	; 38
      000460 26                    1294 	.db #0x26	; 38
      000461 26                    1295 	.db #0x26	; 38
      000462 26                    1296 	.db #0x26	; 38
      000463 26                    1297 	.db #0x26	; 38
      000464 26                    1298 	.db #0x26	; 38
      000465 26                    1299 	.db #0x26	; 38
      000466 26                    1300 	.db #0x26	; 38
      000467 26                    1301 	.db #0x26	; 38
      000468 26                    1302 	.db #0x26	; 38
      000469 26                    1303 	.db #0x26	; 38
      00046A 26                    1304 	.db #0x26	; 38
      00046B 26                    1305 	.db #0x26	; 38
      00046C 26                    1306 	.db #0x26	; 38
      00046D 26                    1307 	.db #0x26	; 38
      00046E 26                    1308 	.db #0x26	; 38
      00046F 26                    1309 	.db #0x26	; 38
      000470 26                    1310 	.db #0x26	; 38
      000471 26                    1311 	.db #0x26	; 38
      000472 27                    1312 	.db #0x27	; 39
      000473 28                    1313 	.db #0x28	; 40
      000474 26                    1314 	.db #0x26	; 38
      000475 26                    1315 	.db #0x26	; 38
      000476 26                    1316 	.db #0x26	; 38
      000477 26                    1317 	.db #0x26	; 38
      000478 26                    1318 	.db #0x26	; 38
      000479 26                    1319 	.db #0x26	; 38
      00047A 26                    1320 	.db #0x26	; 38
      00047B 26                    1321 	.db #0x26	; 38
      00047C 26                    1322 	.db #0x26	; 38
      00047D 26                    1323 	.db #0x26	; 38
      00047E 26                    1324 	.db #0x26	; 38
      00047F 26                    1325 	.db #0x26	; 38
      000480 26                    1326 	.db #0x26	; 38
      000481 26                    1327 	.db #0x26	; 38
      000482 26                    1328 	.db #0x26	; 38
      000483 26                    1329 	.db #0x26	; 38
      000484 26                    1330 	.db #0x26	; 38
      000485 26                    1331 	.db #0x26	; 38
      000486 26                    1332 	.db #0x26	; 38
      000487                       1333 _backgroundtiles:
      000487 00                    1334 	.db #0x00	; 0
      000488 00                    1335 	.db #0x00	; 0
      000489 00                    1336 	.db #0x00	; 0
      00048A 00                    1337 	.db #0x00	; 0
      00048B 00                    1338 	.db #0x00	; 0
      00048C 00                    1339 	.db #0x00	; 0
      00048D 18                    1340 	.db #0x18	; 24
      00048E 18                    1341 	.db #0x18	; 24
      00048F 18                    1342 	.db #0x18	; 24
      000490 18                    1343 	.db #0x18	; 24
      000491 00                    1344 	.db #0x00	; 0
      000492 00                    1345 	.db #0x00	; 0
      000493 00                    1346 	.db #0x00	; 0
      000494 00                    1347 	.db #0x00	; 0
      000495 00                    1348 	.db #0x00	; 0
      000496 00                    1349 	.db #0x00	; 0
      000497 00                    1350 	.db #0x00	; 0
      000498 00                    1351 	.db #0x00	; 0
      000499 00                    1352 	.db #0x00	; 0
      00049A 00                    1353 	.db #0x00	; 0
      00049B 00                    1354 	.db #0x00	; 0
      00049C 00                    1355 	.db #0x00	; 0
      00049D 00                    1356 	.db #0x00	; 0
      00049E 00                    1357 	.db #0x00	; 0
      00049F 00                    1358 	.db #0x00	; 0
      0004A0 00                    1359 	.db #0x00	; 0
      0004A1 00                    1360 	.db #0x00	; 0
      0004A2 00                    1361 	.db #0x00	; 0
      0004A3 00                    1362 	.db #0x00	; 0
      0004A4 00                    1363 	.db #0x00	; 0
      0004A5 00                    1364 	.db #0x00	; 0
      0004A6 00                    1365 	.db #0x00	; 0
      0004A7 1F                    1366 	.db #0x1f	; 31
      0004A8 1F                    1367 	.db #0x1f	; 31
      0004A9 3F                    1368 	.db #0x3f	; 63
      0004AA 3F                    1369 	.db #0x3f	; 63
      0004AB 7F                    1370 	.db #0x7f	; 127
      0004AC 7F                    1371 	.db #0x7f	; 127
      0004AD FF                    1372 	.db #0xff	; 255
      0004AE FF                    1373 	.db #0xff	; 255
      0004AF FF                    1374 	.db #0xff	; 255
      0004B0 FF                    1375 	.db #0xff	; 255
      0004B1 FF                    1376 	.db #0xff	; 255
      0004B2 FF                    1377 	.db #0xff	; 255
      0004B3 FF                    1378 	.db #0xff	; 255
      0004B4 FF                    1379 	.db #0xff	; 255
      0004B5 FF                    1380 	.db #0xff	; 255
      0004B6 FF                    1381 	.db #0xff	; 255
      0004B7 F8                    1382 	.db #0xf8	; 248
      0004B8 F8                    1383 	.db #0xf8	; 248
      0004B9 FC                    1384 	.db #0xfc	; 252
      0004BA FC                    1385 	.db #0xfc	; 252
      0004BB FE                    1386 	.db #0xfe	; 254
      0004BC FE                    1387 	.db #0xfe	; 254
      0004BD FF                    1388 	.db #0xff	; 255
      0004BE FF                    1389 	.db #0xff	; 255
      0004BF FF                    1390 	.db #0xff	; 255
      0004C0 FF                    1391 	.db #0xff	; 255
      0004C1 FF                    1392 	.db #0xff	; 255
      0004C2 FF                    1393 	.db #0xff	; 255
      0004C3 FF                    1394 	.db #0xff	; 255
      0004C4 FF                    1395 	.db #0xff	; 255
      0004C5 FF                    1396 	.db #0xff	; 255
      0004C6 FF                    1397 	.db #0xff	; 255
      0004C7 FF                    1398 	.db #0xff	; 255
      0004C8 FF                    1399 	.db #0xff	; 255
      0004C9 FF                    1400 	.db #0xff	; 255
      0004CA FF                    1401 	.db #0xff	; 255
      0004CB FF                    1402 	.db #0xff	; 255
      0004CC FF                    1403 	.db #0xff	; 255
      0004CD FF                    1404 	.db #0xff	; 255
      0004CE FF                    1405 	.db #0xff	; 255
      0004CF FF                    1406 	.db #0xff	; 255
      0004D0 FF                    1407 	.db #0xff	; 255
      0004D1 FE                    1408 	.db #0xfe	; 254
      0004D2 FE                    1409 	.db #0xfe	; 254
      0004D3 FC                    1410 	.db #0xfc	; 252
      0004D4 FC                    1411 	.db #0xfc	; 252
      0004D5 F8                    1412 	.db #0xf8	; 248
      0004D6 F8                    1413 	.db #0xf8	; 248
      0004D7 FF                    1414 	.db #0xff	; 255
      0004D8 FF                    1415 	.db #0xff	; 255
      0004D9 FF                    1416 	.db #0xff	; 255
      0004DA FF                    1417 	.db #0xff	; 255
      0004DB FF                    1418 	.db #0xff	; 255
      0004DC FF                    1419 	.db #0xff	; 255
      0004DD FF                    1420 	.db #0xff	; 255
      0004DE FF                    1421 	.db #0xff	; 255
      0004DF FF                    1422 	.db #0xff	; 255
      0004E0 FF                    1423 	.db #0xff	; 255
      0004E1 7F                    1424 	.db #0x7f	; 127
      0004E2 7F                    1425 	.db #0x7f	; 127
      0004E3 3F                    1426 	.db #0x3f	; 63
      0004E4 3F                    1427 	.db #0x3f	; 63
      0004E5 1F                    1428 	.db #0x1f	; 31
      0004E6 1F                    1429 	.db #0x1f	; 31
      0004E7                       1430 _healthblock:
      0004E7 FE                    1431 	.db #0xfe	; 254
      0004E8 FE                    1432 	.db #0xfe	; 254
      0004E9 FE                    1433 	.db #0xfe	; 254
      0004EA FE                    1434 	.db #0xfe	; 254
      0004EB FE                    1435 	.db #0xfe	; 254
      0004EC FE                    1436 	.db #0xfe	; 254
      0004ED FE                    1437 	.db #0xfe	; 254
      0004EE FE                    1438 	.db #0xfe	; 254
      0004EF FE                    1439 	.db #0xfe	; 254
      0004F0 FE                    1440 	.db #0xfe	; 254
      0004F1 FE                    1441 	.db #0xfe	; 254
      0004F2 FE                    1442 	.db #0xfe	; 254
      0004F3 FE                    1443 	.db #0xfe	; 254
      0004F4 FE                    1444 	.db #0xfe	; 254
      0004F5 00                    1445 	.db #0x00	; 0
      0004F6 00                    1446 	.db #0x00	; 0
      0004F7                       1447 _enemy1:
      0004F7 3C                    1448 	.db #0x3c	; 60
      0004F8 3C                    1449 	.db #0x3c	; 60
      0004F9 7E                    1450 	.db #0x7e	; 126
      0004FA 7E                    1451 	.db #0x7e	; 126
      0004FB FF                    1452 	.db #0xff	; 255
      0004FC FF                    1453 	.db #0xff	; 255
      0004FD FF                    1454 	.db #0xff	; 255
      0004FE FF                    1455 	.db #0xff	; 255
      0004FF FF                    1456 	.db #0xff	; 255
      000500 FF                    1457 	.db #0xff	; 255
      000501 FF                    1458 	.db #0xff	; 255
      000502 FF                    1459 	.db #0xff	; 255
      000503 7E                    1460 	.db #0x7e	; 126
      000504 7E                    1461 	.db #0x7e	; 126
      000505 3C                    1462 	.db #0x3c	; 60
      000506 3C                    1463 	.db #0x3c	; 60
      000507                       1464 _projectile1:
      000507 3C                    1465 	.db #0x3c	; 60
      000508 3C                    1466 	.db #0x3c	; 60
      000509 7E                    1467 	.db #0x7e	; 126
      00050A 7E                    1468 	.db #0x7e	; 126
      00050B FF                    1469 	.db #0xff	; 255
      00050C FF                    1470 	.db #0xff	; 255
      00050D FF                    1471 	.db #0xff	; 255
      00050E FF                    1472 	.db #0xff	; 255
      00050F FF                    1473 	.db #0xff	; 255
      000510 FF                    1474 	.db #0xff	; 255
      000511 FF                    1475 	.db #0xff	; 255
      000512 FF                    1476 	.db #0xff	; 255
      000513 7E                    1477 	.db #0x7e	; 126
      000514 7E                    1478 	.db #0x7e	; 126
      000515 3C                    1479 	.db #0x3c	; 60
      000516 3C                    1480 	.db #0x3c	; 60
      000517                       1481 _BLANK:
      000517 26                    1482 	.db #0x26	; 38
      000518                       1483 _EMPTYSPRITE:
      000518 50                    1484 	.db #0x50	; 80	'P'
      000519                       1485 _ENEMYCOUNT:
      000519 05                    1486 	.db #0x05	; 5
      00051A                       1487 _xSpawnPositions:
      00051A 00                    1488 	.db #0x00	; 0
      00051B 60                    1489 	.db #0x60	; 96
      00051C B0                    1490 	.db #0xb0	; 176
      00051D 00                    1491 	.db #0x00	; 0
      00051E B0                    1492 	.db #0xb0	; 176
      00051F 00                    1493 	.db #0x00	; 0
      000520 60                    1494 	.db #0x60	; 96
      000521 B0                    1495 	.db #0xb0	; 176
      000522                       1496 _ySpawnPositions:
      000522 00                    1497 	.db #0x00	; 0
      000523 00                    1498 	.db #0x00	; 0
      000524 00                    1499 	.db #0x00	; 0
      000525 5C                    1500 	.db #0x5c	; 92
      000526 5C                    1501 	.db #0x5c	; 92
      000527 A0                    1502 	.db #0xa0	; 160
      000528 A0                    1503 	.db #0xa0	; 160
      000529 A0                    1504 	.db #0xa0	; 160
      00052A                       1505 _PROJECTILECOUNT:
      00052A 05                    1506 	.db #0x05	; 5
                                   1507 ;main.c:80: void setHealthBar(uint8_t row, uint8_t hp) {
                                   1508 ;	---------------------------------
                                   1509 ; Function setHealthBar
                                   1510 ; ---------------------------------
      00052B                       1511 _setHealthBar::
      00052B E8 FB                 1512 	add	sp, #-5
                                   1513 ;main.c:81: if (hp >= 80) {
      00052D F8 08                 1514 	ldhl	sp,	#8
      00052F 7E                    1515 	ld	a, (hl)
      000530 D6 50                 1516 	sub	a, #0x50
      000532 38 31                 1517 	jr	C, 00102$
                                   1518 ;main.c:82: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      000534 F8 00                 1519 	ldhl	sp,	#0
      000536 4D                    1520 	ld	c, l
      000537 44                    1521 	ld	b, h
      000538 36 50                 1522 	ld	(hl), #0x50
      00053A 69                    1523 	ld	l, c
                                   1524 ;	spillPairReg hl
                                   1525 ;	spillPairReg hl
      00053B 60                    1526 	ld	h, b
                                   1527 ;	spillPairReg hl
                                   1528 ;	spillPairReg hl
      00053C 23                    1529 	inc	hl
      00053D 36 50                 1530 	ld	(hl), #0x50
      00053F 69                    1531 	ld	l, c
                                   1532 ;	spillPairReg hl
                                   1533 ;	spillPairReg hl
      000540 60                    1534 	ld	h, b
                                   1535 ;	spillPairReg hl
                                   1536 ;	spillPairReg hl
      000541 23                    1537 	inc	hl
      000542 23                    1538 	inc	hl
      000543 36 50                 1539 	ld	(hl), #0x50
      000545 69                    1540 	ld	l, c
                                   1541 ;	spillPairReg hl
                                   1542 ;	spillPairReg hl
      000546 60                    1543 	ld	h, b
                                   1544 ;	spillPairReg hl
                                   1545 ;	spillPairReg hl
      000547 23                    1546 	inc	hl
      000548 23                    1547 	inc	hl
      000549 23                    1548 	inc	hl
      00054A 36 50                 1549 	ld	(hl), #0x50
      00054C 21 04 00              1550 	ld	hl, #0x0004
      00054F 09                    1551 	add	hl, bc
      000550 36 50                 1552 	ld	(hl), #0x50
                                   1553 ;main.c:83: set_win_tiles(5,row,5,1,blockmap);
      000552 C5                    1554 	push	bc
      000553 21 05 01              1555 	ld	hl, #0x105
      000556 E5                    1556 	push	hl
      000557 F8 0B                 1557 	ldhl	sp,	#11
      000559 66                    1558 	ld	h, (hl)
      00055A 2E 05                 1559 	ld	l, #0x05
      00055C E5                    1560 	push	hl
      00055D CDr00r00              1561 	call	_set_win_tiles
      000560 E8 06                 1562 	add	sp, #6
                                   1563 ;main.c:84: return;
      000562 C3r39r06              1564 	jp	00109$
      000565                       1565 00102$:
                                   1566 ;main.c:86: if (hp >= 60) {
      000565 F8 08                 1567 	ldhl	sp,	#8
      000567 7E                    1568 	ld	a, (hl)
      000568 D6 3C                 1569 	sub	a, #0x3c
      00056A 38 31                 1570 	jr	C, 00104$
                                   1571 ;main.c:87: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      00056C F8 00                 1572 	ldhl	sp,	#0
      00056E 4D                    1573 	ld	c, l
      00056F 44                    1574 	ld	b, h
      000570 36 50                 1575 	ld	(hl), #0x50
      000572 69                    1576 	ld	l, c
                                   1577 ;	spillPairReg hl
                                   1578 ;	spillPairReg hl
      000573 60                    1579 	ld	h, b
                                   1580 ;	spillPairReg hl
                                   1581 ;	spillPairReg hl
      000574 23                    1582 	inc	hl
      000575 36 50                 1583 	ld	(hl), #0x50
      000577 69                    1584 	ld	l, c
                                   1585 ;	spillPairReg hl
                                   1586 ;	spillPairReg hl
      000578 60                    1587 	ld	h, b
                                   1588 ;	spillPairReg hl
                                   1589 ;	spillPairReg hl
      000579 23                    1590 	inc	hl
      00057A 23                    1591 	inc	hl
      00057B 36 50                 1592 	ld	(hl), #0x50
      00057D 69                    1593 	ld	l, c
                                   1594 ;	spillPairReg hl
                                   1595 ;	spillPairReg hl
      00057E 60                    1596 	ld	h, b
                                   1597 ;	spillPairReg hl
                                   1598 ;	spillPairReg hl
      00057F 23                    1599 	inc	hl
      000580 23                    1600 	inc	hl
      000581 23                    1601 	inc	hl
      000582 36 50                 1602 	ld	(hl), #0x50
      000584 21 04 00              1603 	ld	hl, #0x0004
      000587 09                    1604 	add	hl, bc
      000588 36 00                 1605 	ld	(hl), #0x00
                                   1606 ;main.c:88: set_win_tiles(5,row,5,1,blockmap);
      00058A C5                    1607 	push	bc
      00058B 21 05 01              1608 	ld	hl, #0x105
      00058E E5                    1609 	push	hl
      00058F F8 0B                 1610 	ldhl	sp,	#11
      000591 66                    1611 	ld	h, (hl)
      000592 2E 05                 1612 	ld	l, #0x05
      000594 E5                    1613 	push	hl
      000595 CDr00r00              1614 	call	_set_win_tiles
      000598 E8 06                 1615 	add	sp, #6
                                   1616 ;main.c:89: return;
      00059A C3r39r06              1617 	jp	00109$
      00059D                       1618 00104$:
                                   1619 ;main.c:91: if (hp >= 40) {
      00059D F8 08                 1620 	ldhl	sp,	#8
      00059F 7E                    1621 	ld	a, (hl)
      0005A0 D6 28                 1622 	sub	a, #0x28
      0005A2 38 30                 1623 	jr	C, 00106$
                                   1624 ;main.c:92: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      0005A4 F8 00                 1625 	ldhl	sp,	#0
      0005A6 4D                    1626 	ld	c, l
      0005A7 44                    1627 	ld	b, h
      0005A8 36 50                 1628 	ld	(hl), #0x50
      0005AA 69                    1629 	ld	l, c
                                   1630 ;	spillPairReg hl
                                   1631 ;	spillPairReg hl
      0005AB 60                    1632 	ld	h, b
                                   1633 ;	spillPairReg hl
                                   1634 ;	spillPairReg hl
      0005AC 23                    1635 	inc	hl
      0005AD 36 50                 1636 	ld	(hl), #0x50
      0005AF 69                    1637 	ld	l, c
                                   1638 ;	spillPairReg hl
                                   1639 ;	spillPairReg hl
      0005B0 60                    1640 	ld	h, b
                                   1641 ;	spillPairReg hl
                                   1642 ;	spillPairReg hl
      0005B1 23                    1643 	inc	hl
      0005B2 23                    1644 	inc	hl
      0005B3 36 50                 1645 	ld	(hl), #0x50
      0005B5 59                    1646 	ld	e, c
      0005B6 50                    1647 	ld	d, b
      0005B7 13                    1648 	inc	de
      0005B8 13                    1649 	inc	de
      0005B9 13                    1650 	inc	de
      0005BA AF                    1651 	xor	a, a
      0005BB 12                    1652 	ld	(de), a
      0005BC 21 04 00              1653 	ld	hl, #0x0004
      0005BF 09                    1654 	add	hl, bc
      0005C0 36 00                 1655 	ld	(hl), #0x00
                                   1656 ;main.c:93: set_win_tiles(5,row,5,1,blockmap);
      0005C2 C5                    1657 	push	bc
      0005C3 21 05 01              1658 	ld	hl, #0x105
      0005C6 E5                    1659 	push	hl
      0005C7 F8 0B                 1660 	ldhl	sp,	#11
      0005C9 66                    1661 	ld	h, (hl)
      0005CA 2E 05                 1662 	ld	l, #0x05
      0005CC E5                    1663 	push	hl
      0005CD CDr00r00              1664 	call	_set_win_tiles
      0005D0 E8 06                 1665 	add	sp, #6
                                   1666 ;main.c:94: return;
      0005D2 18 65                 1667 	jr	00109$
      0005D4                       1668 00106$:
                                   1669 ;main.c:96: if (hp >= 20) {
      0005D4 F8 08                 1670 	ldhl	sp,	#8
      0005D6 7E                    1671 	ld	a, (hl)
      0005D7 D6 14                 1672 	sub	a, #0x14
      0005D9 38 30                 1673 	jr	C, 00108$
                                   1674 ;main.c:97: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      0005DB F8 00                 1675 	ldhl	sp,	#0
      0005DD 4D                    1676 	ld	c, l
      0005DE 44                    1677 	ld	b, h
      0005DF 36 50                 1678 	ld	(hl), #0x50
      0005E1 69                    1679 	ld	l, c
                                   1680 ;	spillPairReg hl
                                   1681 ;	spillPairReg hl
      0005E2 60                    1682 	ld	h, b
                                   1683 ;	spillPairReg hl
                                   1684 ;	spillPairReg hl
      0005E3 23                    1685 	inc	hl
      0005E4 36 50                 1686 	ld	(hl), #0x50
      0005E6 59                    1687 	ld	e, c
      0005E7 50                    1688 	ld	d, b
      0005E8 13                    1689 	inc	de
      0005E9 13                    1690 	inc	de
      0005EA AF                    1691 	xor	a, a
      0005EB 12                    1692 	ld	(de), a
      0005EC 59                    1693 	ld	e, c
      0005ED 50                    1694 	ld	d, b
      0005EE 13                    1695 	inc	de
      0005EF 13                    1696 	inc	de
      0005F0 13                    1697 	inc	de
      0005F1 AF                    1698 	xor	a, a
      0005F2 12                    1699 	ld	(de), a
      0005F3 21 04 00              1700 	ld	hl, #0x0004
      0005F6 09                    1701 	add	hl, bc
      0005F7 36 00                 1702 	ld	(hl), #0x00
                                   1703 ;main.c:98: set_win_tiles(5,row,5,1,blockmap);
      0005F9 C5                    1704 	push	bc
      0005FA 21 05 01              1705 	ld	hl, #0x105
      0005FD E5                    1706 	push	hl
      0005FE F8 0B                 1707 	ldhl	sp,	#11
      000600 66                    1708 	ld	h, (hl)
      000601 2E 05                 1709 	ld	l, #0x05
      000603 E5                    1710 	push	hl
      000604 CDr00r00              1711 	call	_set_win_tiles
      000607 E8 06                 1712 	add	sp, #6
                                   1713 ;main.c:99: return;
      000609 18 2E                 1714 	jr	00109$
      00060B                       1715 00108$:
                                   1716 ;main.c:101: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      00060B F8 00                 1717 	ldhl	sp,	#0
      00060D 4D                    1718 	ld	c, l
      00060E 44                    1719 	ld	b, h
      00060F 36 50                 1720 	ld	(hl), #0x50
      000611 59                    1721 	ld	e, c
      000612 50                    1722 	ld	d, b
      000613 13                    1723 	inc	de
      000614 AF                    1724 	xor	a, a
      000615 12                    1725 	ld	(de), a
      000616 59                    1726 	ld	e, c
      000617 50                    1727 	ld	d, b
      000618 13                    1728 	inc	de
      000619 13                    1729 	inc	de
      00061A AF                    1730 	xor	a, a
      00061B 12                    1731 	ld	(de), a
      00061C 59                    1732 	ld	e, c
      00061D 50                    1733 	ld	d, b
      00061E 13                    1734 	inc	de
      00061F 13                    1735 	inc	de
      000620 13                    1736 	inc	de
      000621 AF                    1737 	xor	a, a
      000622 12                    1738 	ld	(de), a
      000623 21 04 00              1739 	ld	hl, #0x0004
      000626 09                    1740 	add	hl, bc
      000627 36 00                 1741 	ld	(hl), #0x00
                                   1742 ;main.c:102: set_win_tiles(5,row,5,1,blockmap);
      000629 C5                    1743 	push	bc
      00062A 21 05 01              1744 	ld	hl, #0x105
      00062D E5                    1745 	push	hl
      00062E F8 0B                 1746 	ldhl	sp,	#11
      000630 66                    1747 	ld	h, (hl)
      000631 2E 05                 1748 	ld	l, #0x05
      000633 E5                    1749 	push	hl
      000634 CDr00r00              1750 	call	_set_win_tiles
      000637 E8 06                 1751 	add	sp, #6
                                   1752 ;main.c:103: return;
      000639                       1753 00109$:
                                   1754 ;main.c:105: }
      000639 E8 05                 1755 	add	sp, #5
      00063B C9                    1756 	ret
                                   1757 ;main.c:107: void updateDirection() {
                                   1758 ;	---------------------------------
                                   1759 ; Function updateDirection
                                   1760 ; ---------------------------------
      00063C                       1761 _updateDirection::
      00063C E8 FC                 1762 	add	sp, #-4
                                   1763 ;main.c:111: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      00063E 21r91r00              1764 	ld	hl, #_joydata
      000641 5E                    1765 	ld	e, (hl)
      000642 7B                    1766 	ld	a, e
      000643 E6 01                 1767 	and	a, #0x01
      000645 F8 00                 1768 	ldhl	sp,	#0
      000647 22                    1769 	ld	(hl+), a
      000648 AF                    1770 	xor	a, a
      000649 22                    1771 	ld	(hl+), a
      00064A 7B                    1772 	ld	a, e
      00064B E6 04                 1773 	and	a, #0x04
      00064D 22                    1774 	ld	(hl+), a
      00064E AF                    1775 	xor	a, a
      00064F 32                    1776 	ld	(hl-), a
      000650 2B                    1777 	dec	hl
      000651 7B                    1778 	ld	a, e
      000652 E6 08                 1779 	and	a, #0x08
      000654 4F                    1780 	ld	c, a
      000655 06 00                 1781 	ld	b, #0x00
      000657 3A                    1782 	ld	a, (hl-)
      000658 B6                    1783 	or	a, (hl)
      000659 28 14                 1784 	jr	Z, 00102$
      00065B F8 03                 1785 	ldhl	sp,	#3
      00065D 3A                    1786 	ld	a, (hl-)
      00065E B6                    1787 	or	a, (hl)
      00065F 20 0E                 1788 	jr	NZ, 00102$
      000661 78                    1789 	ld	a, b
      000662 B1                    1790 	or	a, c
      000663 20 0A                 1791 	jr	NZ, 00102$
                                   1792 ;main.c:112: xDir = 1;
      000665 21r28r00              1793 	ld	hl, #_xDir
      000668 36 01                 1794 	ld	(hl), #0x01
                                   1795 ;main.c:113: yDir = 0;
      00066A 21r29r00              1796 	ld	hl, #_yDir
      00066D 36 00                 1797 	ld	(hl), #0x00
      00066F                       1798 00102$:
                                   1799 ;main.c:115: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      00066F 7B                    1800 	ld	a, e
      000670 E6 02                 1801 	and	a, #0x02
      000672 5F                    1802 	ld	e, a
      000673 16 00                 1803 	ld	d, #0x00
      000675 7A                    1804 	ld	a, d
      000676 B3                    1805 	or	a, e
      000677 28 14                 1806 	jr	Z, 00106$
      000679 F8 03                 1807 	ldhl	sp,	#3
      00067B 3A                    1808 	ld	a, (hl-)
      00067C B6                    1809 	or	a, (hl)
      00067D 20 0E                 1810 	jr	NZ, 00106$
      00067F 78                    1811 	ld	a, b
      000680 B1                    1812 	or	a, c
      000681 20 0A                 1813 	jr	NZ, 00106$
                                   1814 ;main.c:116: xDir = -1;
      000683 21r28r00              1815 	ld	hl, #_xDir
      000686 36 FF                 1816 	ld	(hl), #0xff
                                   1817 ;main.c:117: yDir = 0;
      000688 21r29r00              1818 	ld	hl, #_yDir
      00068B 36 00                 1819 	ld	(hl), #0x00
      00068D                       1820 00106$:
                                   1821 ;main.c:119: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      00068D F8 03                 1822 	ldhl	sp,	#3
      00068F 3A                    1823 	ld	a, (hl-)
      000690 B6                    1824 	or	a, (hl)
      000691 28 13                 1825 	jr	Z, 00110$
      000693 7A                    1826 	ld	a, d
      000694 B3                    1827 	or	a, e
      000695 20 0F                 1828 	jr	NZ, 00110$
      000697 2B                    1829 	dec	hl
      000698 3A                    1830 	ld	a, (hl-)
      000699 B6                    1831 	or	a, (hl)
      00069A 20 0A                 1832 	jr	NZ, 00110$
                                   1833 ;main.c:120: xDir = 0;
      00069C 21r28r00              1834 	ld	hl, #_xDir
      00069F 36 00                 1835 	ld	(hl), #0x00
                                   1836 ;main.c:121: yDir = -1;
      0006A1 21r29r00              1837 	ld	hl, #_yDir
      0006A4 36 FF                 1838 	ld	(hl), #0xff
      0006A6                       1839 00110$:
                                   1840 ;main.c:123: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      0006A6 78                    1841 	ld	a, b
      0006A7 B1                    1842 	or	a, c
      0006A8 28 14                 1843 	jr	Z, 00114$
      0006AA 7A                    1844 	ld	a, d
      0006AB B3                    1845 	or	a, e
      0006AC 20 10                 1846 	jr	NZ, 00114$
      0006AE F8 01                 1847 	ldhl	sp,	#1
      0006B0 3A                    1848 	ld	a, (hl-)
      0006B1 B6                    1849 	or	a, (hl)
      0006B2 20 0A                 1850 	jr	NZ, 00114$
                                   1851 ;main.c:124: xDir = 0;
      0006B4 21r28r00              1852 	ld	hl, #_xDir
      0006B7 36 00                 1853 	ld	(hl), #0x00
                                   1854 ;main.c:125: yDir = 1;
      0006B9 21r29r00              1855 	ld	hl, #_yDir
      0006BC 36 01                 1856 	ld	(hl), #0x01
      0006BE                       1857 00114$:
                                   1858 ;main.c:129: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      0006BE F8 03                 1859 	ldhl	sp,	#3
      0006C0 3A                    1860 	ld	a, (hl-)
      0006C1 B6                    1861 	or	a, (hl)
      0006C2 28 0F                 1862 	jr	Z, 00118$
      0006C4 2B                    1863 	dec	hl
      0006C5 3A                    1864 	ld	a, (hl-)
      0006C6 B6                    1865 	or	a, (hl)
      0006C7 28 0A                 1866 	jr	Z, 00118$
                                   1867 ;main.c:130: xDir = 1;
      0006C9 21r28r00              1868 	ld	hl, #_xDir
      0006CC 36 01                 1869 	ld	(hl), #0x01
                                   1870 ;main.c:131: yDir = -1;
      0006CE 21r29r00              1871 	ld	hl, #_yDir
      0006D1 36 FF                 1872 	ld	(hl), #0xff
      0006D3                       1873 00118$:
                                   1874 ;main.c:133: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      0006D3 F8 03                 1875 	ldhl	sp,	#3
      0006D5 3A                    1876 	ld	a, (hl-)
      0006D6 B6                    1877 	or	a, (hl)
      0006D7 28 0E                 1878 	jr	Z, 00121$
      0006D9 7A                    1879 	ld	a, d
      0006DA B3                    1880 	or	a, e
      0006DB 28 0A                 1881 	jr	Z, 00121$
                                   1882 ;main.c:134: xDir = -1;
      0006DD 21r28r00              1883 	ld	hl, #_xDir
      0006E0 36 FF                 1884 	ld	(hl), #0xff
                                   1885 ;main.c:135: yDir = -1;
      0006E2 21r29r00              1886 	ld	hl, #_yDir
      0006E5 36 FF                 1887 	ld	(hl), #0xff
      0006E7                       1888 00121$:
                                   1889 ;main.c:137: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      0006E7 78                    1890 	ld	a, b
      0006E8 B1                    1891 	or	a, c
      0006E9 28 10                 1892 	jr	Z, 00124$
      0006EB F8 01                 1893 	ldhl	sp,	#1
      0006ED 3A                    1894 	ld	a, (hl-)
      0006EE B6                    1895 	or	a, (hl)
      0006EF 28 0A                 1896 	jr	Z, 00124$
                                   1897 ;main.c:138: xDir = 1;
      0006F1 21r28r00              1898 	ld	hl, #_xDir
      0006F4 36 01                 1899 	ld	(hl), #0x01
                                   1900 ;main.c:139: yDir = 1;
      0006F6 21r29r00              1901 	ld	hl, #_yDir
      0006F9 36 01                 1902 	ld	(hl), #0x01
      0006FB                       1903 00124$:
                                   1904 ;main.c:141: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      0006FB 78                    1905 	ld	a, b
      0006FC B1                    1906 	or	a, c
      0006FD 28 0E                 1907 	jr	Z, 00127$
      0006FF 7A                    1908 	ld	a, d
      000700 B3                    1909 	or	a, e
      000701 28 0A                 1910 	jr	Z, 00127$
                                   1911 ;main.c:142: xDir = -1;
      000703 21r28r00              1912 	ld	hl, #_xDir
      000706 36 FF                 1913 	ld	(hl), #0xff
                                   1914 ;main.c:143: yDir = 1;
      000708 21r29r00              1915 	ld	hl, #_yDir
      00070B 36 01                 1916 	ld	(hl), #0x01
      00070D                       1917 00127$:
                                   1918 ;main.c:148: if (xDir == 0 && yDir == 0) {
      00070D FAr28r00              1919 	ld	a, (#_xDir)
      000710 B7                    1920 	or	a, a
      000711 20 07                 1921 	jr	NZ, 00130$
      000713 FAr29r00              1922 	ld	a, (#_yDir)
      000716 B7                    1923 	or	a, a
                                   1924 ;main.c:149: return;
      000717 CArC8r07              1925 	jp	Z,00157$
      00071A                       1926 00130$:
                                   1927 ;main.c:152: uint8_t direction = 0;
      00071A 0E 00                 1928 	ld	c, #0x00
                                   1929 ;main.c:154: if (xDir == 0 && yDir < 0) {
      00071C FAr29r00              1930 	ld	a, (#_yDir)
      00071F 07                    1931 	rlca
      000720 E6 01                 1932 	and	a,#0x01
      000722 F8 02                 1933 	ldhl	sp,	#2
      000724 77                    1934 	ld	(hl), a
      000725 FAr28r00              1935 	ld	a, (#_xDir)
      000728 B7                    1936 	or	a, a
      000729 20 08                 1937 	jr	NZ, 00133$
      00072B F8 02                 1938 	ldhl	sp,	#2
      00072D 7E                    1939 	ld	a, (hl)
      00072E B7                    1940 	or	a, a
      00072F 28 02                 1941 	jr	Z, 00133$
                                   1942 ;main.c:155: direction = 0;
      000731 0E 00                 1943 	ld	c, #0x00
      000733                       1944 00133$:
                                   1945 ;main.c:157: if (xDir > 0 && yDir < 0) {
      000733 21r28r00              1946 	ld	hl, #_xDir
      000736 5E                    1947 	ld	e, (hl)
      000737 AF                    1948 	xor	a, a
      000738 57                    1949 	ld	d, a
      000739 96                    1950 	sub	a, (hl)
      00073A CB 7B                 1951 	bit	7, e
      00073C 28 07                 1952 	jr	Z, 00349$
      00073E CB 7A                 1953 	bit	7, d
      000740 20 08                 1954 	jr	NZ, 00350$
      000742 BF                    1955 	cp	a, a
      000743 18 05                 1956 	jr	00350$
      000745                       1957 00349$:
      000745 CB 7A                 1958 	bit	7, d
      000747 28 01                 1959 	jr	Z, 00350$
      000749 37                    1960 	scf
      00074A                       1961 00350$:
      00074A 3E 00                 1962 	ld	a, #0x00
      00074C 17                    1963 	rla
      00074D 47                    1964 	ld	b, a
      00074E B7                    1965 	or	a, a
      00074F 28 08                 1966 	jr	Z, 00136$
      000751 F8 02                 1967 	ldhl	sp,	#2
      000753 7E                    1968 	ld	a, (hl)
      000754 B7                    1969 	or	a, a
      000755 28 02                 1970 	jr	Z, 00136$
                                   1971 ;main.c:158: direction = 1;
      000757 0E 01                 1972 	ld	c, #0x01
      000759                       1973 00136$:
                                   1974 ;main.c:160: if (xDir > 0 && yDir == 0) {
      000759 78                    1975 	ld	a, b
      00075A B7                    1976 	or	a, a
      00075B 28 08                 1977 	jr	Z, 00139$
      00075D FAr29r00              1978 	ld	a, (#_yDir)
      000760 B7                    1979 	or	a, a
      000761 20 02                 1980 	jr	NZ, 00139$
                                   1981 ;main.c:161: direction = 2;
      000763 0E 02                 1982 	ld	c, #0x02
      000765                       1983 00139$:
                                   1984 ;main.c:163: if (xDir > 0 && yDir > 0) {
      000765 21r29r00              1985 	ld	hl, #_yDir
      000768 5E                    1986 	ld	e, (hl)
      000769 AF                    1987 	xor	a, a
      00076A 57                    1988 	ld	d, a
      00076B 96                    1989 	sub	a, (hl)
      00076C CB 7B                 1990 	bit	7, e
      00076E 28 07                 1991 	jr	Z, 00351$
      000770 CB 7A                 1992 	bit	7, d
      000772 20 08                 1993 	jr	NZ, 00352$
      000774 BF                    1994 	cp	a, a
      000775 18 05                 1995 	jr	00352$
      000777                       1996 00351$:
      000777 CB 7A                 1997 	bit	7, d
      000779 28 01                 1998 	jr	Z, 00352$
      00077B 37                    1999 	scf
      00077C                       2000 00352$:
      00077C 3E 00                 2001 	ld	a, #0x00
      00077E 17                    2002 	rla
      00077F F8 03                 2003 	ldhl	sp,	#3
      000781 77                    2004 	ld	(hl), a
      000782 78                    2005 	ld	a, b
      000783 B7                    2006 	or	a, a
      000784 28 06                 2007 	jr	Z, 00142$
      000786 7E                    2008 	ld	a, (hl)
      000787 B7                    2009 	or	a, a
      000788 28 02                 2010 	jr	Z, 00142$
                                   2011 ;main.c:164: direction = 3;
      00078A 0E 03                 2012 	ld	c, #0x03
      00078C                       2013 00142$:
                                   2014 ;main.c:166: if (xDir == 0 && yDir > 0) {
      00078C FAr28r00              2015 	ld	a, (#_xDir)
      00078F B7                    2016 	or	a, a
      000790 20 08                 2017 	jr	NZ, 00145$
      000792 F8 03                 2018 	ldhl	sp,	#3
      000794 7E                    2019 	ld	a, (hl)
      000795 B7                    2020 	or	a, a
      000796 28 02                 2021 	jr	Z, 00145$
                                   2022 ;main.c:167: direction = 4;
      000798 0E 04                 2023 	ld	c, #0x04
      00079A                       2024 00145$:
                                   2025 ;main.c:169: if (xDir < 0 && yDir > 0) {
      00079A FAr28r00              2026 	ld	a, (#_xDir)
      00079D 07                    2027 	rlca
      00079E E6 01                 2028 	and	a,#0x01
      0007A0 47                    2029 	ld	b, a
      0007A1 B7                    2030 	or	a, a
      0007A2 28 08                 2031 	jr	Z, 00148$
      0007A4 F8 03                 2032 	ldhl	sp,	#3
      0007A6 7E                    2033 	ld	a, (hl)
      0007A7 B7                    2034 	or	a, a
      0007A8 28 02                 2035 	jr	Z, 00148$
                                   2036 ;main.c:170: direction = 5;
      0007AA 0E 05                 2037 	ld	c, #0x05
      0007AC                       2038 00148$:
                                   2039 ;main.c:172: if (xDir < 0 && yDir == 0) {
      0007AC 78                    2040 	ld	a, b
      0007AD B7                    2041 	or	a, a
      0007AE 28 08                 2042 	jr	Z, 00151$
      0007B0 FAr29r00              2043 	ld	a, (#_yDir)
      0007B3 B7                    2044 	or	a, a
      0007B4 20 02                 2045 	jr	NZ, 00151$
                                   2046 ;main.c:173: direction = 6;
      0007B6 0E 06                 2047 	ld	c, #0x06
      0007B8                       2048 00151$:
                                   2049 ;main.c:175: if (xDir < 0 && yDir < 0) {
      0007B8 78                    2050 	ld	a, b
      0007B9 B7                    2051 	or	a, a
      0007BA 28 08                 2052 	jr	Z, 00154$
      0007BC F8 02                 2053 	ldhl	sp,	#2
      0007BE 7E                    2054 	ld	a, (hl)
      0007BF B7                    2055 	or	a, a
      0007C0 28 02                 2056 	jr	Z, 00154$
                                   2057 ;main.c:176: direction = 7;
      0007C2 0E 07                 2058 	ld	c, #0x07
      0007C4                       2059 00154$:
                                   2060 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0007C4 21r02r00              2061 	ld	hl, #(_shadow_OAM + 2)
      0007C7 71                    2062 	ld	(hl), c
                                   2063 ;main.c:179: set_sprite_tile(0, direction);
      0007C8                       2064 00157$:
                                   2065 ;main.c:180: }
      0007C8 E8 04                 2066 	add	sp, #4
      0007CA C9                    2067 	ret
                                   2068 ;main.c:183: int8_t clamp( int8_t value, int8_t min, int8_t max )
                                   2069 ;	---------------------------------
                                   2070 ; Function clamp
                                   2071 ; ---------------------------------
      0007CB                       2072 _clamp::
                                   2073 ;main.c:185: return (value < min) ? min : (value > max) ? max : value;
      0007CB F8 03                 2074 	ldhl	sp,	#3
      0007CD 3A                    2075 	ld	a, (hl-)
      0007CE 5F                    2076 	ld	e, a
      0007CF 56                    2077 	ld	d, (hl)
      0007D0 2A                    2078 	ld	a, (hl+)
      0007D1 96                    2079 	sub	a, (hl)
      0007D2 CB 7B                 2080 	bit	7, e
      0007D4 28 07                 2081 	jr	Z, 00117$
      0007D6 CB 7A                 2082 	bit	7, d
      0007D8 20 08                 2083 	jr	NZ, 00118$
      0007DA BF                    2084 	cp	a, a
      0007DB 18 05                 2085 	jr	00118$
      0007DD                       2086 00117$:
      0007DD CB 7A                 2087 	bit	7, d
      0007DF 28 01                 2088 	jr	Z, 00118$
      0007E1 37                    2089 	scf
      0007E2                       2090 00118$:
      0007E2 30 04                 2091 	jr	NC, 00103$
      0007E4 F8 03                 2092 	ldhl	sp,	#3
      0007E6 5E                    2093 	ld	e, (hl)
      0007E7 C9                    2094 	ret
      0007E8                       2095 00103$:
      0007E8 F8 02                 2096 	ldhl	sp,	#2
      0007EA 2A                    2097 	ld	a, (hl+)
      0007EB 23                    2098 	inc	hl
      0007EC 5F                    2099 	ld	e, a
      0007ED 56                    2100 	ld	d, (hl)
      0007EE 3A                    2101 	ld	a, (hl-)
      0007EF 2B                    2102 	dec	hl
      0007F0 96                    2103 	sub	a, (hl)
      0007F1 CB 7B                 2104 	bit	7, e
      0007F3 28 07                 2105 	jr	Z, 00119$
      0007F5 CB 7A                 2106 	bit	7, d
      0007F7 20 08                 2107 	jr	NZ, 00120$
      0007F9 BF                    2108 	cp	a, a
      0007FA 18 05                 2109 	jr	00120$
      0007FC                       2110 00119$:
      0007FC CB 7A                 2111 	bit	7, d
      0007FE 28 01                 2112 	jr	Z, 00120$
      000800 37                    2113 	scf
      000801                       2114 00120$:
      000801 30 04                 2115 	jr	NC, 00105$
      000803 F8 04                 2116 	ldhl	sp,	#4
      000805 5E                    2117 	ld	e, (hl)
      000806 C9                    2118 	ret
      000807                       2119 00105$:
      000807 F8 02                 2120 	ldhl	sp,	#2
      000809 5E                    2121 	ld	e, (hl)
                                   2122 ;main.c:186: }
      00080A C9                    2123 	ret
                                   2124 ;main.c:189: uint8_t uClamp( uint8_t value, uint8_t min, uint8_t max )
                                   2125 ;	---------------------------------
                                   2126 ; Function uClamp
                                   2127 ; ---------------------------------
      00080B                       2128 _uClamp::
                                   2129 ;main.c:191: return (value < min) ? min : (value > max) ? max : value;
      00080B F8 02                 2130 	ldhl	sp,	#2
      00080D 2A                    2131 	ld	a, (hl+)
      00080E 96                    2132 	sub	a, (hl)
      00080F 30 02                 2133 	jr	NC, 00103$
      000811 5E                    2134 	ld	e, (hl)
      000812 C9                    2135 	ret
      000813                       2136 00103$:
      000813 F8 04                 2137 	ldhl	sp,	#4
      000815 3A                    2138 	ld	a, (hl-)
      000816 2B                    2139 	dec	hl
      000817 96                    2140 	sub	a, (hl)
      000818 30 04                 2141 	jr	NC, 00105$
      00081A 23                    2142 	inc	hl
      00081B 23                    2143 	inc	hl
      00081C 5E                    2144 	ld	e, (hl)
      00081D C9                    2145 	ret
      00081E                       2146 00105$:
      00081E F8 02                 2147 	ldhl	sp,	#2
      000820 5E                    2148 	ld	e, (hl)
                                   2149 ;main.c:192: }
      000821 C9                    2150 	ret
                                   2151 ;main.c:194: uint16_t u16Clamp( uint16_t value, uint16_t min, uint16_t max )
                                   2152 ;	---------------------------------
                                   2153 ; Function u16Clamp
                                   2154 ; ---------------------------------
      000822                       2155 _u16Clamp::
                                   2156 ;main.c:196: return (value < min) ? min : (value > max) ? max : value;
      000822 F8 02                 2157 	ldhl	sp,	#2
      000824 5D                    2158 	ld	e, l
      000825 54                    2159 	ld	d, h
      000826 F8 04                 2160 	ldhl	sp,	#4
      000828 1A                    2161 	ld	a, (de)
      000829 13                    2162 	inc	de
      00082A 96                    2163 	sub	a, (hl)
      00082B 23                    2164 	inc	hl
      00082C 1A                    2165 	ld	a, (de)
      00082D 9E                    2166 	sbc	a, (hl)
      00082E 30 06                 2167 	jr	NC, 00103$
      000830 F8 04                 2168 	ldhl	sp,	#4
      000832 2A                    2169 	ld	a, (hl+)
      000833 5F                    2170 	ld	e, a
      000834 56                    2171 	ld	d, (hl)
      000835 C9                    2172 	ret
      000836                       2173 00103$:
      000836 F8 06                 2174 	ldhl	sp,	#6
      000838 5D                    2175 	ld	e, l
      000839 54                    2176 	ld	d, h
      00083A F8 02                 2177 	ldhl	sp,	#2
      00083C 1A                    2178 	ld	a, (de)
      00083D 13                    2179 	inc	de
      00083E 96                    2180 	sub	a, (hl)
      00083F 23                    2181 	inc	hl
      000840 1A                    2182 	ld	a, (de)
      000841 9E                    2183 	sbc	a, (hl)
      000842 30 06                 2184 	jr	NC, 00105$
      000844 F8 06                 2185 	ldhl	sp,	#6
      000846 2A                    2186 	ld	a, (hl+)
      000847 5F                    2187 	ld	e, a
      000848 56                    2188 	ld	d, (hl)
      000849 C9                    2189 	ret
      00084A                       2190 00105$:
      00084A F8 02                 2191 	ldhl	sp,	#2
      00084C 2A                    2192 	ld	a, (hl+)
      00084D 5F                    2193 	ld	e, a
      00084E 56                    2194 	ld	d, (hl)
                                   2195 ;main.c:197: }
      00084F C9                    2196 	ret
                                   2197 ;main.c:199: int16_t i16Clamp( int16_t value, int16_t min, int16_t max )
                                   2198 ;	---------------------------------
                                   2199 ; Function i16Clamp
                                   2200 ; ---------------------------------
      000850                       2201 _i16Clamp::
                                   2202 ;main.c:201: return (value < min) ? min : (value > max) ? max : value;
      000850 F8 02                 2203 	ldhl	sp,	#2
      000852 5D                    2204 	ld	e, l
      000853 54                    2205 	ld	d, h
      000854 F8 04                 2206 	ldhl	sp,	#4
      000856 1A                    2207 	ld	a, (de)
      000857 13                    2208 	inc	de
      000858 96                    2209 	sub	a, (hl)
      000859 23                    2210 	inc	hl
      00085A 1A                    2211 	ld	a, (de)
      00085B 9E                    2212 	sbc	a, (hl)
      00085C 1A                    2213 	ld	a, (de)
      00085D 57                    2214 	ld	d, a
      00085E CB 7E                 2215 	bit	7, (hl)
      000860 28 07                 2216 	jr	Z, 00117$
      000862 CB 7A                 2217 	bit	7, d
      000864 20 08                 2218 	jr	NZ, 00118$
      000866 BF                    2219 	cp	a, a
      000867 18 05                 2220 	jr	00118$
      000869                       2221 00117$:
      000869 CB 7A                 2222 	bit	7, d
      00086B 28 01                 2223 	jr	Z, 00118$
      00086D 37                    2224 	scf
      00086E                       2225 00118$:
      00086E 30 06                 2226 	jr	NC, 00103$
      000870 F8 04                 2227 	ldhl	sp,	#4
      000872 2A                    2228 	ld	a, (hl+)
      000873 5F                    2229 	ld	e, a
      000874 56                    2230 	ld	d, (hl)
      000875 C9                    2231 	ret
      000876                       2232 00103$:
      000876 F8 06                 2233 	ldhl	sp,	#6
      000878 5D                    2234 	ld	e, l
      000879 54                    2235 	ld	d, h
      00087A F8 02                 2236 	ldhl	sp,	#2
      00087C 1A                    2237 	ld	a, (de)
      00087D 13                    2238 	inc	de
      00087E 96                    2239 	sub	a, (hl)
      00087F 23                    2240 	inc	hl
      000880 1A                    2241 	ld	a, (de)
      000881 9E                    2242 	sbc	a, (hl)
      000882 1A                    2243 	ld	a, (de)
      000883 57                    2244 	ld	d, a
      000884 CB 7E                 2245 	bit	7, (hl)
      000886 28 07                 2246 	jr	Z, 00119$
      000888 CB 7A                 2247 	bit	7, d
      00088A 20 08                 2248 	jr	NZ, 00120$
      00088C BF                    2249 	cp	a, a
      00088D 18 05                 2250 	jr	00120$
      00088F                       2251 00119$:
      00088F CB 7A                 2252 	bit	7, d
      000891 28 01                 2253 	jr	Z, 00120$
      000893 37                    2254 	scf
      000894                       2255 00120$:
      000894 30 06                 2256 	jr	NC, 00105$
      000896 F8 06                 2257 	ldhl	sp,	#6
      000898 2A                    2258 	ld	a, (hl+)
      000899 5F                    2259 	ld	e, a
      00089A 56                    2260 	ld	d, (hl)
      00089B C9                    2261 	ret
      00089C                       2262 00105$:
      00089C F8 02                 2263 	ldhl	sp,	#2
      00089E 2A                    2264 	ld	a, (hl+)
      00089F 5F                    2265 	ld	e, a
      0008A0 56                    2266 	ld	d, (hl)
                                   2267 ;main.c:202: }
      0008A1 C9                    2268 	ret
                                   2269 ;main.c:203: int8_t abs(int8_t value) {
                                   2270 ;	---------------------------------
                                   2271 ; Function abs
                                   2272 ; ---------------------------------
      0008A2                       2273 _abs::
                                   2274 ;main.c:204: if (value >= 0) return value;
      0008A2 F8 02                 2275 	ldhl	sp,	#2
      0008A4 CB 7E                 2276 	bit	7, (hl)
      0008A6 20 02                 2277 	jr	NZ, 00102$
      0008A8 5E                    2278 	ld	e, (hl)
      0008A9 C9                    2279 	ret
      0008AA                       2280 00102$:
                                   2281 ;main.c:205: else return - value;
      0008AA AF                    2282 	xor	a, a
      0008AB F8 02                 2283 	ldhl	sp,	#2
      0008AD 96                    2284 	sub	a, (hl)
      0008AE 5F                    2285 	ld	e, a
                                   2286 ;main.c:206: }
      0008AF C9                    2287 	ret
                                   2288 ;main.c:208: void moveSpritesWithBackground(int8_t x, int8_t y) {
                                   2289 ;	---------------------------------
                                   2290 ; Function moveSpritesWithBackground
                                   2291 ; ---------------------------------
      0008B0                       2292 _moveSpritesWithBackground::
      0008B0 E8 FB                 2293 	add	sp, #-5
                                   2294 ;main.c:209: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0008B2 F8 04                 2295 	ldhl	sp,	#4
      0008B4 36 00                 2296 	ld	(hl), #0x00
      0008B6                       2297 00103$:
      0008B6 21r19r05              2298 	ld	hl, #_ENEMYCOUNT
      0008B9 4E                    2299 	ld	c, (hl)
      0008BA F8 04                 2300 	ldhl	sp,	#4
      0008BC 7E                    2301 	ld	a, (hl)
      0008BD 91                    2302 	sub	a, c
      0008BE 30 5C                 2303 	jr	NC, 00105$
                                   2304 ;main.c:210: enemies[i].x -= x;
      0008C0 4E                    2305 	ld	c, (hl)
      0008C1 06 00                 2306 	ld	b, #0x00
      0008C3 69                    2307 	ld	l, c
      0008C4 60                    2308 	ld	h, b
      0008C5 29                    2309 	add	hl, hl
      0008C6 29                    2310 	add	hl, hl
      0008C7 09                    2311 	add	hl, bc
      0008C8 29                    2312 	add	hl, hl
      0008C9 29                    2313 	add	hl, hl
      0008CA 01r00r00              2314 	ld	bc,#_enemies
      0008CD 09                    2315 	add	hl,bc
      0008CE 33                    2316 	inc	sp
      0008CF 33                    2317 	inc	sp
      0008D0 5D                    2318 	ld	e, l
      0008D1 54                    2319 	ld	d, h
      0008D2 D5                    2320 	push	de
      0008D3 1A                    2321 	ld	a, (de)
      0008D4 4F                    2322 	ld	c, a
      0008D5 13                    2323 	inc	de
      0008D6 1A                    2324 	ld	a, (de)
      0008D7 47                    2325 	ld	b, a
      0008D8 F8 07                 2326 	ldhl	sp,	#7
      0008DA 7E                    2327 	ld	a, (hl)
      0008DB 5F                    2328 	ld	e, a
      0008DC 07                    2329 	rlca
      0008DD 9F                    2330 	sbc	a, a
      0008DE 57                    2331 	ld	d, a
      0008DF 79                    2332 	ld	a, c
      0008E0 93                    2333 	sub	a, e
      0008E1 4F                    2334 	ld	c, a
      0008E2 78                    2335 	ld	a, b
      0008E3 9A                    2336 	sbc	a, d
      0008E4 47                    2337 	ld	b, a
      0008E5 E1                    2338 	pop	hl
      0008E6 E5                    2339 	push	hl
      0008E7 79                    2340 	ld	a, c
      0008E8 22                    2341 	ld	(hl+), a
      0008E9 70                    2342 	ld	(hl), b
                                   2343 ;main.c:211: enemies[i].y -= y;
      0008EA D1                    2344 	pop	de
      0008EB D5                    2345 	push	de
      0008EC 21 02 00              2346 	ld	hl, #0x0002
      0008EF 19                    2347 	add	hl, de
      0008F0 E5                    2348 	push	hl
      0008F1 7D                    2349 	ld	a, l
      0008F2 F8 04                 2350 	ldhl	sp,	#4
      0008F4 77                    2351 	ld	(hl), a
      0008F5 E1                    2352 	pop	hl
      0008F6 7C                    2353 	ld	a, h
      0008F7 F8 03                 2354 	ldhl	sp,	#3
      0008F9 32                    2355 	ld	(hl-), a
      0008FA 2A                    2356 	ld	a, (hl+)
      0008FB 5F                    2357 	ld	e, a
      0008FC 56                    2358 	ld	d, (hl)
      0008FD 1A                    2359 	ld	a, (de)
      0008FE 4F                    2360 	ld	c, a
      0008FF 13                    2361 	inc	de
      000900 1A                    2362 	ld	a, (de)
      000901 47                    2363 	ld	b, a
      000902 F8 08                 2364 	ldhl	sp,	#8
      000904 7E                    2365 	ld	a, (hl)
      000905 5F                    2366 	ld	e, a
      000906 07                    2367 	rlca
      000907 9F                    2368 	sbc	a, a
      000908 57                    2369 	ld	d, a
      000909 79                    2370 	ld	a, c
      00090A 93                    2371 	sub	a, e
      00090B 4F                    2372 	ld	c, a
      00090C 78                    2373 	ld	a, b
      00090D 9A                    2374 	sbc	a, d
      00090E 47                    2375 	ld	b, a
      00090F F8 02                 2376 	ldhl	sp,	#2
      000911 2A                    2377 	ld	a,	(hl+)
      000912 66                    2378 	ld	h, (hl)
      000913 6F                    2379 	ld	l, a
      000914 79                    2380 	ld	a, c
      000915 22                    2381 	ld	(hl+), a
      000916 70                    2382 	ld	(hl), b
                                   2383 ;main.c:209: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000917 F8 04                 2384 	ldhl	sp,	#4
      000919 34                    2385 	inc	(hl)
      00091A 18 9A                 2386 	jr	00103$
      00091C                       2387 00105$:
                                   2388 ;main.c:222: }
      00091C E8 05                 2389 	add	sp, #5
      00091E C9                    2390 	ret
                                   2391 ;main.c:226: void updateEnemyPositions() {
                                   2392 ;	---------------------------------
                                   2393 ; Function updateEnemyPositions
                                   2394 ; ---------------------------------
      00091F                       2395 _updateEnemyPositions::
      00091F E8 F1                 2396 	add	sp, #-15
                                   2397 ;main.c:229: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000921 F8 0E                 2398 	ldhl	sp,	#14
      000923 36 00                 2399 	ld	(hl), #0x00
      000925                       2400 00138$:
      000925 21r19r05              2401 	ld	hl, #_ENEMYCOUNT
      000928 4E                    2402 	ld	c, (hl)
      000929 F8 0E                 2403 	ldhl	sp,	#14
      00092B 7E                    2404 	ld	a, (hl)
      00092C 91                    2405 	sub	a, c
      00092D D2rF9r0C              2406 	jp	NC, 00117$
                                   2407 ;main.c:231: enemies[i].x -= xOverflow;
      000930 4E                    2408 	ld	c, (hl)
      000931 06 00                 2409 	ld	b, #0x00
      000933 69                    2410 	ld	l, c
      000934 60                    2411 	ld	h, b
      000935 29                    2412 	add	hl, hl
      000936 29                    2413 	add	hl, hl
      000937 09                    2414 	add	hl, bc
      000938 29                    2415 	add	hl, hl
      000939 29                    2416 	add	hl, hl
      00093A 01r00r00              2417 	ld	bc,#_enemies
      00093D 09                    2418 	add	hl,bc
      00093E 33                    2419 	inc	sp
      00093F 33                    2420 	inc	sp
      000940 5D                    2421 	ld	e, l
      000941 54                    2422 	ld	d, h
      000942 D5                    2423 	push	de
      000943 1A                    2424 	ld	a, (de)
      000944 47                    2425 	ld	b, a
      000945 13                    2426 	inc	de
      000946 1A                    2427 	ld	a, (de)
      000947 4F                    2428 	ld	c, a
      000948 58                    2429 	ld	e, b
      000949 51                    2430 	ld	d, c
      00094A 21r38r00              2431 	ld	hl, #_xOverflow
      00094D 2A                    2432 	ld	a,	(hl+)
      00094E 66                    2433 	ld	h, (hl)
      00094F 6F                    2434 	ld	l, a
      000950 7B                    2435 	ld	a, e
      000951 95                    2436 	sub	a, l
      000952 5F                    2437 	ld	e, a
      000953 7A                    2438 	ld	a, d
      000954 9C                    2439 	sbc	a, h
      000955 F8 07                 2440 	ldhl	sp,	#7
      000957 32                    2441 	ld	(hl-), a
      000958 73                    2442 	ld	(hl), e
      000959 D1                    2443 	pop	de
      00095A D5                    2444 	push	de
      00095B 2A                    2445 	ld	a, (hl+)
      00095C 12                    2446 	ld	(de), a
      00095D 13                    2447 	inc	de
      00095E 7E                    2448 	ld	a, (hl)
      00095F 12                    2449 	ld	(de), a
                                   2450 ;main.c:271: enemies[i].y += yMovement;
      000960 D1                    2451 	pop	de
      000961 D5                    2452 	push	de
      000962 21 02 00              2453 	ld	hl, #0x0002
      000965 19                    2454 	add	hl, de
      000966 E5                    2455 	push	hl
      000967 7D                    2456 	ld	a, l
      000968 F8 04                 2457 	ldhl	sp,	#4
      00096A 77                    2458 	ld	(hl), a
      00096B E1                    2459 	pop	hl
      00096C 7C                    2460 	ld	a, h
      00096D F8 03                 2461 	ldhl	sp,	#3
                                   2462 ;main.c:232: enemies[i].y -= yOverflow;
      00096F 32                    2463 	ld	(hl-), a
      000970 2A                    2464 	ld	a, (hl+)
      000971 5F                    2465 	ld	e, a
      000972 56                    2466 	ld	d, (hl)
      000973 1A                    2467 	ld	a, (de)
      000974 4F                    2468 	ld	c, a
      000975 13                    2469 	inc	de
      000976 1A                    2470 	ld	a, (de)
      000977 47                    2471 	ld	b, a
      000978 79                    2472 	ld	a, c
      000979 21r3Ar00              2473 	ld	hl, #_yOverflow
      00097C 96                    2474 	sub	a, (hl)
      00097D 23                    2475 	inc	hl
      00097E 4F                    2476 	ld	c, a
      00097F 78                    2477 	ld	a, b
      000980 9E                    2478 	sbc	a, (hl)
      000981 47                    2479 	ld	b, a
      000982 F8 02                 2480 	ldhl	sp,	#2
      000984 2A                    2481 	ld	a,	(hl+)
      000985 66                    2482 	ld	h, (hl)
      000986 6F                    2483 	ld	l, a
      000987 79                    2484 	ld	a, c
      000988 22                    2485 	ld	(hl+), a
      000989 70                    2486 	ld	(hl), b
                                   2487 ;main.c:235: if (enemies[i].x < playerDrawX) {
      00098A FAr30r00              2488 	ld	a, (#_playerDrawX)
      00098D F8 08                 2489 	ldhl	sp,	#8
      00098F 22                    2490 	ld	(hl+), a
      000990 36 00                 2491 	ld	(hl), #0x00
                                   2492 ;main.c:236: enemies[i].xSpeed += enemies[i].accel;
      000992 D1                    2493 	pop	de
      000993 D5                    2494 	push	de
      000994 21 10 00              2495 	ld	hl, #0x0010
      000997 19                    2496 	add	hl, de
      000998 E5                    2497 	push	hl
      000999 7D                    2498 	ld	a, l
      00099A F8 06                 2499 	ldhl	sp,	#6
      00099C 77                    2500 	ld	(hl), a
      00099D E1                    2501 	pop	hl
      00099E 7C                    2502 	ld	a, h
      00099F F8 05                 2503 	ldhl	sp,	#5
      0009A1 77                    2504 	ld	(hl), a
      0009A2 D1                    2505 	pop	de
      0009A3 D5                    2506 	push	de
      0009A4 21 0F 00              2507 	ld	hl, #0x000f
      0009A7 19                    2508 	add	hl, de
      0009A8 E5                    2509 	push	hl
      0009A9 7D                    2510 	ld	a, l
      0009AA F8 0E                 2511 	ldhl	sp,	#14
      0009AC 77                    2512 	ld	(hl), a
      0009AD E1                    2513 	pop	hl
      0009AE 7C                    2514 	ld	a, h
      0009AF F8 0D                 2515 	ldhl	sp,	#13
      0009B1 77                    2516 	ld	(hl), a
                                   2517 ;main.c:248: enemies[i].xSpeed = i16Clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0009B2 F8 04                 2518 	ldhl	sp,#4
      0009B4 2A                    2519 	ld	a, (hl+)
      0009B5 5F                    2520 	ld	e, a
      0009B6 56                    2521 	ld	d, (hl)
      0009B7 1A                    2522 	ld	a, (de)
      0009B8 4F                    2523 	ld	c, a
      0009B9 13                    2524 	inc	de
      0009BA 1A                    2525 	ld	a, (de)
      0009BB 47                    2526 	ld	b, a
                                   2527 ;main.c:236: enemies[i].xSpeed += enemies[i].accel;
      0009BC F8 0C                 2528 	ldhl	sp,#12
      0009BE 2A                    2529 	ld	a, (hl+)
      0009BF 5F                    2530 	ld	e, a
      0009C0 56                    2531 	ld	d, (hl)
      0009C1 1A                    2532 	ld	a, (de)
      0009C2 F8 0A                 2533 	ldhl	sp,	#10
      0009C4 22                    2534 	ld	(hl+), a
      0009C5 36 00                 2535 	ld	(hl), #0x00
                                   2536 ;main.c:235: if (enemies[i].x < playerDrawX) {
      0009C7 F8 06                 2537 	ldhl	sp,	#6
      0009C9 5D                    2538 	ld	e, l
      0009CA 54                    2539 	ld	d, h
      0009CB F8 08                 2540 	ldhl	sp,	#8
      0009CD 1A                    2541 	ld	a, (de)
      0009CE 13                    2542 	inc	de
      0009CF 96                    2543 	sub	a, (hl)
      0009D0 23                    2544 	inc	hl
      0009D1 1A                    2545 	ld	a, (de)
      0009D2 9E                    2546 	sbc	a, (hl)
      0009D3 1A                    2547 	ld	a, (de)
      0009D4 57                    2548 	ld	d, a
      0009D5 CB 7E                 2549 	bit	7, (hl)
      0009D7 28 07                 2550 	jr	Z, 00242$
      0009D9 CB 7A                 2551 	bit	7, d
      0009DB 20 08                 2552 	jr	NZ, 00243$
      0009DD BF                    2553 	cp	a, a
      0009DE 18 05                 2554 	jr	00243$
      0009E0                       2555 00242$:
      0009E0 CB 7A                 2556 	bit	7, d
      0009E2 28 01                 2557 	jr	Z, 00243$
      0009E4 37                    2558 	scf
      0009E5                       2559 00243$:
      0009E5 30 12                 2560 	jr	NC, 00102$
                                   2561 ;main.c:236: enemies[i].xSpeed += enemies[i].accel;
      0009E7 F8 0A                 2562 	ldhl	sp,	#10
      0009E9 2A                    2563 	ld	a,	(hl+)
      0009EA 66                    2564 	ld	h, (hl)
      0009EB 6F                    2565 	ld	l, a
      0009EC 09                    2566 	add	hl, bc
      0009ED 4D                    2567 	ld	c, l
      0009EE 44                    2568 	ld	b, h
      0009EF F8 04                 2569 	ldhl	sp,	#4
      0009F1 2A                    2570 	ld	a,	(hl+)
      0009F2 66                    2571 	ld	h, (hl)
      0009F3 6F                    2572 	ld	l, a
      0009F4 79                    2573 	ld	a, c
      0009F5 22                    2574 	ld	(hl+), a
      0009F6 70                    2575 	ld	(hl), b
      0009F7 18 14                 2576 	jr	00103$
      0009F9                       2577 00102$:
                                   2578 ;main.c:239: enemies[i].xSpeed -= enemies[i].accel;
      0009F9 F8 0A                 2579 	ldhl	sp,#10
      0009FB 2A                    2580 	ld	a, (hl+)
      0009FC 5F                    2581 	ld	e, a
      0009FD 56                    2582 	ld	d, (hl)
      0009FE 79                    2583 	ld	a, c
      0009FF 93                    2584 	sub	a, e
      000A00 5F                    2585 	ld	e, a
      000A01 78                    2586 	ld	a, b
      000A02 9A                    2587 	sbc	a, d
      000A03 4B                    2588 	ld	c, e
      000A04 47                    2589 	ld	b, a
      000A05 F8 04                 2590 	ldhl	sp,	#4
      000A07 2A                    2591 	ld	a,	(hl+)
      000A08 66                    2592 	ld	h, (hl)
      000A09 6F                    2593 	ld	l, a
      000A0A 79                    2594 	ld	a, c
      000A0B 22                    2595 	ld	(hl+), a
      000A0C 70                    2596 	ld	(hl), b
      000A0D                       2597 00103$:
                                   2598 ;main.c:241: if (enemies[i].y < playerDrawY) {
      000A0D F8 02                 2599 	ldhl	sp,#2
      000A0F 2A                    2600 	ld	a, (hl+)
      000A10 5F                    2601 	ld	e, a
      000A11 56                    2602 	ld	d, (hl)
      000A12 1A                    2603 	ld	a, (de)
      000A13 F8 08                 2604 	ldhl	sp,	#8
      000A15 22                    2605 	ld	(hl+), a
      000A16 13                    2606 	inc	de
      000A17 1A                    2607 	ld	a, (de)
      000A18 77                    2608 	ld	(hl), a
      000A19 FAr31r00              2609 	ld	a, (#_playerDrawY)
      000A1C F8 0A                 2610 	ldhl	sp,	#10
      000A1E 22                    2611 	ld	(hl+), a
      000A1F 36 00                 2612 	ld	(hl), #0x00
                                   2613 ;main.c:242: enemies[i].ySpeed += enemies[i].accel;
      000A21 D1                    2614 	pop	de
      000A22 D5                    2615 	push	de
      000A23 21 12 00              2616 	ld	hl, #0x0012
      000A26 19                    2617 	add	hl, de
      000A27 E5                    2618 	push	hl
      000A28 7D                    2619 	ld	a, l
      000A29 F8 08                 2620 	ldhl	sp,	#8
      000A2B 77                    2621 	ld	(hl), a
      000A2C E1                    2622 	pop	hl
      000A2D 7C                    2623 	ld	a, h
      000A2E F8 07                 2624 	ldhl	sp,	#7
      000A30 77                    2625 	ld	(hl), a
                                   2626 ;main.c:236: enemies[i].xSpeed += enemies[i].accel;
      000A31 F8 0C                 2627 	ldhl	sp,#12
      000A33 2A                    2628 	ld	a, (hl+)
      000A34 5F                    2629 	ld	e, a
      000A35 56                    2630 	ld	d, (hl)
      000A36 1A                    2631 	ld	a, (de)
      000A37 47                    2632 	ld	b, a
                                   2633 ;main.c:242: enemies[i].ySpeed += enemies[i].accel;
      000A38 F8 06                 2634 	ldhl	sp,#6
      000A3A 2A                    2635 	ld	a, (hl+)
      000A3B 5F                    2636 	ld	e, a
      000A3C 56                    2637 	ld	d, (hl)
      000A3D 1A                    2638 	ld	a, (de)
      000A3E 4F                    2639 	ld	c, a
      000A3F 13                    2640 	inc	de
      000A40 1A                    2641 	ld	a, (de)
                                   2642 ;main.c:236: enemies[i].xSpeed += enemies[i].accel;
      000A41 F8 0C                 2643 	ldhl	sp,	#12
      000A43 70                    2644 	ld	(hl), b
      000A44 23                    2645 	inc	hl
      000A45 36 00                 2646 	ld	(hl), #0x00
                                   2647 ;main.c:242: enemies[i].ySpeed += enemies[i].accel;
      000A47 47                    2648 	ld	b, a
                                   2649 ;main.c:241: if (enemies[i].y < playerDrawY) {
      000A48 F8 08                 2650 	ldhl	sp,	#8
      000A4A 5D                    2651 	ld	e, l
      000A4B 54                    2652 	ld	d, h
      000A4C F8 0A                 2653 	ldhl	sp,	#10
      000A4E 1A                    2654 	ld	a, (de)
      000A4F 13                    2655 	inc	de
      000A50 96                    2656 	sub	a, (hl)
      000A51 23                    2657 	inc	hl
      000A52 1A                    2658 	ld	a, (de)
      000A53 9E                    2659 	sbc	a, (hl)
      000A54 1A                    2660 	ld	a, (de)
      000A55 57                    2661 	ld	d, a
      000A56 CB 7E                 2662 	bit	7, (hl)
      000A58 28 07                 2663 	jr	Z, 00244$
      000A5A CB 7A                 2664 	bit	7, d
      000A5C 20 08                 2665 	jr	NZ, 00245$
      000A5E BF                    2666 	cp	a, a
      000A5F 18 05                 2667 	jr	00245$
      000A61                       2668 00244$:
      000A61 CB 7A                 2669 	bit	7, d
      000A63 28 01                 2670 	jr	Z, 00245$
      000A65 37                    2671 	scf
      000A66                       2672 00245$:
      000A66 30 12                 2673 	jr	NC, 00105$
                                   2674 ;main.c:242: enemies[i].ySpeed += enemies[i].accel;
      000A68 F8 0C                 2675 	ldhl	sp,	#12
      000A6A 2A                    2676 	ld	a,	(hl+)
      000A6B 66                    2677 	ld	h, (hl)
      000A6C 6F                    2678 	ld	l, a
      000A6D 09                    2679 	add	hl, bc
      000A6E 4D                    2680 	ld	c, l
      000A6F 44                    2681 	ld	b, h
      000A70 F8 06                 2682 	ldhl	sp,	#6
      000A72 2A                    2683 	ld	a,	(hl+)
      000A73 66                    2684 	ld	h, (hl)
      000A74 6F                    2685 	ld	l, a
      000A75 79                    2686 	ld	a, c
      000A76 22                    2687 	ld	(hl+), a
      000A77 70                    2688 	ld	(hl), b
      000A78 18 14                 2689 	jr	00106$
      000A7A                       2690 00105$:
                                   2691 ;main.c:245: enemies[i].ySpeed -= enemies[i].accel;
      000A7A F8 0C                 2692 	ldhl	sp,#12
      000A7C 2A                    2693 	ld	a, (hl+)
      000A7D 5F                    2694 	ld	e, a
      000A7E 56                    2695 	ld	d, (hl)
      000A7F 79                    2696 	ld	a, c
      000A80 93                    2697 	sub	a, e
      000A81 5F                    2698 	ld	e, a
      000A82 78                    2699 	ld	a, b
      000A83 9A                    2700 	sbc	a, d
      000A84 4B                    2701 	ld	c, e
      000A85 47                    2702 	ld	b, a
      000A86 F8 06                 2703 	ldhl	sp,	#6
      000A88 2A                    2704 	ld	a,	(hl+)
      000A89 66                    2705 	ld	h, (hl)
      000A8A 6F                    2706 	ld	l, a
      000A8B 79                    2707 	ld	a, c
      000A8C 22                    2708 	ld	(hl+), a
      000A8D 70                    2709 	ld	(hl), b
      000A8E                       2710 00106$:
                                   2711 ;main.c:248: enemies[i].xSpeed = i16Clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000A8E D1                    2712 	pop	de
      000A8F D5                    2713 	push	de
      000A90 21 0D 00              2714 	ld	hl, #0x000d
      000A93 19                    2715 	add	hl, de
      000A94 E5                    2716 	push	hl
      000A95 7D                    2717 	ld	a, l
      000A96 F8 0A                 2718 	ldhl	sp,	#10
      000A98 77                    2719 	ld	(hl), a
      000A99 E1                    2720 	pop	hl
      000A9A 7C                    2721 	ld	a, h
      000A9B F8 09                 2722 	ldhl	sp,	#9
      000A9D 32                    2723 	ld	(hl-), a
      000A9E 2A                    2724 	ld	a, (hl+)
      000A9F 5F                    2725 	ld	e, a
      000AA0 2A                    2726 	ld	a, (hl+)
      000AA1 23                    2727 	inc	hl
      000AA2 57                    2728 	ld	d, a
      000AA3 1A                    2729 	ld	a, (de)
      000AA4 4F                    2730 	ld	c, a
      000AA5 13                    2731 	inc	de
      000AA6 1A                    2732 	ld	a, (de)
      000AA7 47                    2733 	ld	b, a
      000AA8 11 00 00              2734 	ld	de, #0x0000
      000AAB 7B                    2735 	ld	a, e
      000AAC 91                    2736 	sub	a, c
      000AAD 5F                    2737 	ld	e, a
      000AAE 7A                    2738 	ld	a, d
      000AAF 98                    2739 	sbc	a, b
      000AB0 32                    2740 	ld	(hl-), a
      000AB1 73                    2741 	ld	(hl), e
      000AB2 F8 04                 2742 	ldhl	sp,#4
      000AB4 2A                    2743 	ld	a, (hl+)
      000AB5 5F                    2744 	ld	e, a
      000AB6 56                    2745 	ld	d, (hl)
      000AB7 1A                    2746 	ld	a, (de)
      000AB8 F8 0C                 2747 	ldhl	sp,	#12
      000ABA 22                    2748 	ld	(hl+), a
      000ABB 13                    2749 	inc	de
      000ABC 1A                    2750 	ld	a, (de)
      000ABD 77                    2751 	ld	(hl), a
      000ABE C5                    2752 	push	bc
      000ABF F8 0C                 2753 	ldhl	sp,	#12
      000AC1 2A                    2754 	ld	a, (hl+)
      000AC2 5F                    2755 	ld	e, a
      000AC3 2A                    2756 	ld	a, (hl+)
      000AC4 57                    2757 	ld	d, a
      000AC5 D5                    2758 	push	de
      000AC6 2A                    2759 	ld	a, (hl+)
      000AC7 5F                    2760 	ld	e, a
      000AC8 56                    2761 	ld	d, (hl)
      000AC9 D5                    2762 	push	de
      000ACA CDr50r08              2763 	call	_i16Clamp
      000ACD E8 06                 2764 	add	sp, #6
      000ACF 4B                    2765 	ld	c, e
      000AD0 42                    2766 	ld	b, d
      000AD1 F8 04                 2767 	ldhl	sp,	#4
      000AD3 2A                    2768 	ld	a,	(hl+)
      000AD4 66                    2769 	ld	h, (hl)
      000AD5 6F                    2770 	ld	l, a
      000AD6 79                    2771 	ld	a, c
      000AD7 22                    2772 	ld	(hl+), a
      000AD8 70                    2773 	ld	(hl), b
                                   2774 ;main.c:249: enemies[i].ySpeed = i16Clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000AD9 F8 08                 2775 	ldhl	sp,#8
      000ADB 2A                    2776 	ld	a, (hl+)
      000ADC 5F                    2777 	ld	e, a
      000ADD 2A                    2778 	ld	a, (hl+)
      000ADE 23                    2779 	inc	hl
      000ADF 57                    2780 	ld	d, a
      000AE0 1A                    2781 	ld	a, (de)
      000AE1 4F                    2782 	ld	c, a
      000AE2 13                    2783 	inc	de
      000AE3 1A                    2784 	ld	a, (de)
      000AE4 47                    2785 	ld	b, a
      000AE5 11 00 00              2786 	ld	de, #0x0000
      000AE8 7B                    2787 	ld	a, e
      000AE9 91                    2788 	sub	a, c
      000AEA 5F                    2789 	ld	e, a
      000AEB 7A                    2790 	ld	a, d
      000AEC 98                    2791 	sbc	a, b
      000AED 32                    2792 	ld	(hl-), a
      000AEE 73                    2793 	ld	(hl), e
      000AEF F8 06                 2794 	ldhl	sp,#6
      000AF1 2A                    2795 	ld	a, (hl+)
      000AF2 5F                    2796 	ld	e, a
      000AF3 56                    2797 	ld	d, (hl)
      000AF4 1A                    2798 	ld	a, (de)
      000AF5 F8 0C                 2799 	ldhl	sp,	#12
      000AF7 22                    2800 	ld	(hl+), a
      000AF8 13                    2801 	inc	de
      000AF9 1A                    2802 	ld	a, (de)
      000AFA 77                    2803 	ld	(hl), a
      000AFB C5                    2804 	push	bc
      000AFC F8 0C                 2805 	ldhl	sp,	#12
      000AFE 2A                    2806 	ld	a, (hl+)
      000AFF 5F                    2807 	ld	e, a
      000B00 2A                    2808 	ld	a, (hl+)
      000B01 57                    2809 	ld	d, a
      000B02 D5                    2810 	push	de
      000B03 2A                    2811 	ld	a, (hl+)
      000B04 5F                    2812 	ld	e, a
      000B05 56                    2813 	ld	d, (hl)
      000B06 D5                    2814 	push	de
      000B07 CDr50r08              2815 	call	_i16Clamp
      000B0A E8 06                 2816 	add	sp, #6
      000B0C 4B                    2817 	ld	c, e
      000B0D 42                    2818 	ld	b, d
      000B0E F8 06                 2819 	ldhl	sp,	#6
      000B10 2A                    2820 	ld	a,	(hl+)
      000B11 66                    2821 	ld	h, (hl)
      000B12 6F                    2822 	ld	l, a
      000B13 79                    2823 	ld	a, c
      000B14 22                    2824 	ld	(hl+), a
      000B15 70                    2825 	ld	(hl), b
                                   2826 ;main.c:252: enemies[i].xReserve += enemies[i].xSpeed;
      000B16 D1                    2827 	pop	de
      000B17 D5                    2828 	push	de
      000B18 21 04 00              2829 	ld	hl, #0x0004
      000B1B 19                    2830 	add	hl, de
      000B1C E5                    2831 	push	hl
      000B1D 7D                    2832 	ld	a, l
      000B1E F8 0E                 2833 	ldhl	sp,	#14
      000B20 77                    2834 	ld	(hl), a
      000B21 E1                    2835 	pop	hl
      000B22 7C                    2836 	ld	a, h
      000B23 F8 0D                 2837 	ldhl	sp,	#13
      000B25 32                    2838 	ld	(hl-), a
      000B26 2A                    2839 	ld	a, (hl+)
      000B27 5F                    2840 	ld	e, a
      000B28 56                    2841 	ld	d, (hl)
      000B29 1A                    2842 	ld	a, (de)
      000B2A F8 04                 2843 	ldhl	sp,#4
      000B2C 5E                    2844 	ld	e, (hl)
      000B2D 23                    2845 	inc	hl
      000B2E 56                    2846 	ld	d, (hl)
      000B2F F5                    2847 	push	af
      000B30 1A                    2848 	ld	a, (de)
      000B31 6F                    2849 	ld	l, a
                                   2850 ;	spillPairReg hl
                                   2851 ;	spillPairReg hl
      000B32 F1                    2852 	pop	af
      000B33 85                    2853 	add	a, l
      000B34 F8 0B                 2854 	ldhl	sp,	#11
      000B36 22                    2855 	ld	(hl+), a
      000B37 2A                    2856 	ld	a, (hl+)
      000B38 5F                    2857 	ld	e, a
      000B39 3A                    2858 	ld	a, (hl-)
      000B3A 2B                    2859 	dec	hl
      000B3B 57                    2860 	ld	d, a
      000B3C 7E                    2861 	ld	a, (hl)
      000B3D 12                    2862 	ld	(de), a
                                   2863 ;main.c:253: enemies[i].yReserve += enemies[i].ySpeed;
      000B3E D1                    2864 	pop	de
      000B3F D5                    2865 	push	de
      000B40 21 05 00              2866 	ld	hl, #0x0005
      000B43 19                    2867 	add	hl, de
      000B44 E5                    2868 	push	hl
      000B45 7D                    2869 	ld	a, l
      000B46 F8 0B                 2870 	ldhl	sp,	#11
      000B48 77                    2871 	ld	(hl), a
      000B49 E1                    2872 	pop	hl
      000B4A 7C                    2873 	ld	a, h
      000B4B F8 0A                 2874 	ldhl	sp,	#10
      000B4D 32                    2875 	ld	(hl-), a
      000B4E 2A                    2876 	ld	a, (hl+)
      000B4F 5F                    2877 	ld	e, a
      000B50 56                    2878 	ld	d, (hl)
      000B51 1A                    2879 	ld	a, (de)
      000B52 81                    2880 	add	a, c
      000B53 4F                    2881 	ld	c, a
      000B54 3A                    2882 	ld	a, (hl-)
      000B55 6E                    2883 	ld	l, (hl)
      000B56 67                    2884 	ld	h, a
      000B57 71                    2885 	ld	(hl), c
                                   2886 ;main.c:257: if (enemies[i].xReserve >> 3 > 0) {
      000B58 F8 0B                 2887 	ldhl	sp,	#11
                                   2888 ;main.c:252: enemies[i].xReserve += enemies[i].xSpeed;
      000B5A 2A                    2889 	ld	a, (hl+)
      000B5B 4F                    2890 	ld	c, a
      000B5C CB 29                 2891 	sra	c
      000B5E CB 29                 2892 	sra	c
      000B60 CB 29                 2893 	sra	c
      000B62 2A                    2894 	ld	a, (hl+)
      000B63 5F                    2895 	ld	e, a
      000B64 3A                    2896 	ld	a, (hl-)
      000B65 2B                    2897 	dec	hl
      000B66 57                    2898 	ld	d, a
      000B67 1A                    2899 	ld	a, (de)
      000B68 77                    2900 	ld	(hl), a
                                   2901 ;main.c:257: if (enemies[i].xReserve >> 3 > 0) {
      000B69 59                    2902 	ld	e, c
      000B6A AF                    2903 	xor	a, a
      000B6B 57                    2904 	ld	d, a
      000B6C 91                    2905 	sub	a, c
      000B6D CB 7B                 2906 	bit	7, e
      000B6F 28 07                 2907 	jr	Z, 00246$
      000B71 CB 7A                 2908 	bit	7, d
      000B73 20 08                 2909 	jr	NZ, 00247$
      000B75 BF                    2910 	cp	a, a
      000B76 18 05                 2911 	jr	00247$
      000B78                       2912 00246$:
      000B78 CB 7A                 2913 	bit	7, d
      000B7A 28 01                 2914 	jr	Z, 00247$
      000B7C 37                    2915 	scf
      000B7D                       2916 00247$:
      000B7D 30 37                 2917 	jr	NC, 00110$
                                   2918 ;main.c:258: int8_t xMovement = enemies[i].xReserve >> 3;
      000B7F F8 0B                 2919 	ldhl	sp,	#11
      000B81 7E                    2920 	ld	a, (hl)
      000B82 CB 2F                 2921 	sra	a
      000B84 CB 2F                 2922 	sra	a
      000B86 CB 2F                 2923 	sra	a
      000B88 77                    2924 	ld	(hl), a
                                   2925 ;main.c:259: enemies[i].x += xMovement;
      000B89 D1                    2926 	pop	de
      000B8A D5                    2927 	push	de
      000B8B 1A                    2928 	ld	a, (de)
      000B8C 4F                    2929 	ld	c, a
      000B8D 13                    2930 	inc	de
      000B8E 1A                    2931 	ld	a, (de)
      000B8F 47                    2932 	ld	b, a
      000B90 7E                    2933 	ld	a, (hl)
      000B91 5F                    2934 	ld	e, a
      000B92 07                    2935 	rlca
      000B93 9F                    2936 	sbc	a, a
      000B94 57                    2937 	ld	d, a
      000B95 69                    2938 	ld	l, c
                                   2939 ;	spillPairReg hl
                                   2940 ;	spillPairReg hl
      000B96 60                    2941 	ld	h, b
                                   2942 ;	spillPairReg hl
                                   2943 ;	spillPairReg hl
      000B97 19                    2944 	add	hl, de
      000B98 4D                    2945 	ld	c, l
      000B99 44                    2946 	ld	b, h
      000B9A E1                    2947 	pop	hl
      000B9B E5                    2948 	push	hl
      000B9C 79                    2949 	ld	a, c
      000B9D 22                    2950 	ld	(hl+), a
      000B9E 70                    2951 	ld	(hl), b
                                   2952 ;main.c:260: enemies[i].xReserve -=  xMovement << 3;
      000B9F F8 0C                 2953 	ldhl	sp,#12
      000BA1 2A                    2954 	ld	a, (hl+)
      000BA2 5F                    2955 	ld	e, a
      000BA3 3A                    2956 	ld	a, (hl-)
      000BA4 2B                    2957 	dec	hl
      000BA5 57                    2958 	ld	d, a
      000BA6 1A                    2959 	ld	a, (de)
      000BA7 F5                    2960 	push	af
      000BA8 2A                    2961 	ld	a, (hl+)
      000BA9 87                    2962 	add	a, a
      000BAA 87                    2963 	add	a, a
      000BAB 87                    2964 	add	a, a
      000BAC 4F                    2965 	ld	c, a
      000BAD F1                    2966 	pop	af
      000BAE 91                    2967 	sub	a, c
      000BAF 4F                    2968 	ld	c, a
      000BB0 2A                    2969 	ld	a,	(hl+)
      000BB1 66                    2970 	ld	h, (hl)
      000BB2 6F                    2971 	ld	l, a
      000BB3 71                    2972 	ld	(hl), c
      000BB4 18 61                 2973 	jr	00111$
      000BB6                       2974 00110$:
                                   2975 ;main.c:263: else if ((-enemies[i].xReserve) >> 3 > 0){
      000BB6 F8 0B                 2976 	ldhl	sp,	#11
      000BB8 7E                    2977 	ld	a, (hl)
      000BB9 4F                    2978 	ld	c, a
      000BBA 07                    2979 	rlca
      000BBB 9F                    2980 	sbc	a, a
      000BBC 47                    2981 	ld	b, a
      000BBD AF                    2982 	xor	a, a
      000BBE 91                    2983 	sub	a, c
      000BBF 4F                    2984 	ld	c, a
      000BC0 9F                    2985 	sbc	a, a
      000BC1 90                    2986 	sub	a, b
      000BC2 47                    2987 	ld	b, a
      000BC3 CB 28                 2988 	sra	b
      000BC5 CB 19                 2989 	rr	c
      000BC7 CB 28                 2990 	sra	b
      000BC9 CB 19                 2991 	rr	c
      000BCB CB 28                 2992 	sra	b
      000BCD CB 19                 2993 	rr	c
      000BCF 58                    2994 	ld	e, b
      000BD0 AF                    2995 	xor	a, a
      000BD1 57                    2996 	ld	d, a
      000BD2 B9                    2997 	cp	a, c
      000BD3 98                    2998 	sbc	a, b
      000BD4 CB 7B                 2999 	bit	7, e
      000BD6 28 07                 3000 	jr	Z, 00248$
      000BD8 CB 7A                 3001 	bit	7, d
      000BDA 20 08                 3002 	jr	NZ, 00249$
      000BDC BF                    3003 	cp	a, a
      000BDD 18 05                 3004 	jr	00249$
      000BDF                       3005 00248$:
      000BDF CB 7A                 3006 	bit	7, d
      000BE1 28 01                 3007 	jr	Z, 00249$
      000BE3 37                    3008 	scf
      000BE4                       3009 00249$:
      000BE4 30 31                 3010 	jr	NC, 00111$
                                   3011 ;main.c:264: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      000BE6 AF                    3012 	xor	a, a
      000BE7 91                    3013 	sub	a, c
      000BE8 4F                    3014 	ld	c, a
      000BE9 F8 0B                 3015 	ldhl	sp,	#11
      000BEB 71                    3016 	ld	(hl), c
                                   3017 ;main.c:265: enemies[i].x += xMovement;
      000BEC D1                    3018 	pop	de
      000BED D5                    3019 	push	de
      000BEE 1A                    3020 	ld	a, (de)
      000BEF 4F                    3021 	ld	c, a
      000BF0 13                    3022 	inc	de
      000BF1 1A                    3023 	ld	a, (de)
      000BF2 47                    3024 	ld	b, a
      000BF3 7E                    3025 	ld	a, (hl)
      000BF4 5F                    3026 	ld	e, a
      000BF5 07                    3027 	rlca
      000BF6 9F                    3028 	sbc	a, a
      000BF7 57                    3029 	ld	d, a
      000BF8 69                    3030 	ld	l, c
                                   3031 ;	spillPairReg hl
                                   3032 ;	spillPairReg hl
      000BF9 60                    3033 	ld	h, b
                                   3034 ;	spillPairReg hl
                                   3035 ;	spillPairReg hl
      000BFA 19                    3036 	add	hl, de
      000BFB 4D                    3037 	ld	c, l
      000BFC 44                    3038 	ld	b, h
      000BFD E1                    3039 	pop	hl
      000BFE E5                    3040 	push	hl
      000BFF 79                    3041 	ld	a, c
      000C00 22                    3042 	ld	(hl+), a
      000C01 70                    3043 	ld	(hl), b
                                   3044 ;main.c:266: enemies[i].xReserve +=  (-xMovement) << 3;
      000C02 F8 0C                 3045 	ldhl	sp,#12
      000C04 2A                    3046 	ld	a, (hl+)
      000C05 5F                    3047 	ld	e, a
      000C06 3A                    3048 	ld	a, (hl-)
      000C07 2B                    3049 	dec	hl
      000C08 57                    3050 	ld	d, a
      000C09 1A                    3051 	ld	a, (de)
      000C0A 4F                    3052 	ld	c, a
      000C0B AF                    3053 	xor	a, a
      000C0C 96                    3054 	sub	a, (hl)
      000C0D 23                    3055 	inc	hl
      000C0E 87                    3056 	add	a, a
      000C0F 87                    3057 	add	a, a
      000C10 87                    3058 	add	a, a
      000C11 81                    3059 	add	a, c
      000C12 4F                    3060 	ld	c, a
      000C13 2A                    3061 	ld	a,	(hl+)
      000C14 66                    3062 	ld	h, (hl)
      000C15 6F                    3063 	ld	l, a
      000C16 71                    3064 	ld	(hl), c
      000C17                       3065 00111$:
                                   3066 ;main.c:269: if (enemies[i].yReserve >> 3 > 0) {
      000C17 F8 09                 3067 	ldhl	sp,#9
      000C19 2A                    3068 	ld	a, (hl+)
      000C1A 5F                    3069 	ld	e, a
      000C1B 56                    3070 	ld	d, (hl)
      000C1C 1A                    3071 	ld	a, (de)
      000C1D F8 0D                 3072 	ldhl	sp,	#13
      000C1F 77                    3073 	ld	(hl), a
      000C20 3A                    3074 	ld	a, (hl-)
      000C21 CB 2F                 3075 	sra	a
      000C23 CB 2F                 3076 	sra	a
      000C25 CB 2F                 3077 	sra	a
      000C27 77                    3078 	ld	(hl), a
      000C28 5E                    3079 	ld	e, (hl)
      000C29 AF                    3080 	xor	a, a
      000C2A 57                    3081 	ld	d, a
      000C2B 96                    3082 	sub	a, (hl)
      000C2C CB 7B                 3083 	bit	7, e
      000C2E 28 07                 3084 	jr	Z, 00250$
      000C30 CB 7A                 3085 	bit	7, d
      000C32 20 08                 3086 	jr	NZ, 00251$
      000C34 BF                    3087 	cp	a, a
      000C35 18 05                 3088 	jr	00251$
      000C37                       3089 00250$:
      000C37 CB 7A                 3090 	bit	7, d
      000C39 28 01                 3091 	jr	Z, 00251$
      000C3B 37                    3092 	scf
      000C3C                       3093 00251$:
      000C3C 30 3B                 3094 	jr	NC, 00115$
                                   3095 ;main.c:270: int8_t yMovement = enemies[i].yReserve >> 3;
      000C3E F8 0C                 3096 	ldhl	sp,	#12
      000C40 2A                    3097 	ld	a, (hl+)
      000C41 77                    3098 	ld	(hl), a
                                   3099 ;main.c:271: enemies[i].y += yMovement;
      000C42 F8 02                 3100 	ldhl	sp,#2
      000C44 2A                    3101 	ld	a, (hl+)
      000C45 5F                    3102 	ld	e, a
      000C46 56                    3103 	ld	d, (hl)
      000C47 1A                    3104 	ld	a, (de)
      000C48 4F                    3105 	ld	c, a
      000C49 13                    3106 	inc	de
      000C4A 1A                    3107 	ld	a, (de)
      000C4B 47                    3108 	ld	b, a
      000C4C F8 0D                 3109 	ldhl	sp,	#13
      000C4E 7E                    3110 	ld	a, (hl)
      000C4F 5F                    3111 	ld	e, a
      000C50 07                    3112 	rlca
      000C51 9F                    3113 	sbc	a, a
      000C52 57                    3114 	ld	d, a
      000C53 69                    3115 	ld	l, c
                                   3116 ;	spillPairReg hl
                                   3117 ;	spillPairReg hl
      000C54 60                    3118 	ld	h, b
                                   3119 ;	spillPairReg hl
                                   3120 ;	spillPairReg hl
      000C55 19                    3121 	add	hl, de
      000C56 4D                    3122 	ld	c, l
      000C57 44                    3123 	ld	b, h
      000C58 F8 02                 3124 	ldhl	sp,	#2
      000C5A 2A                    3125 	ld	a,	(hl+)
      000C5B 66                    3126 	ld	h, (hl)
      000C5C 6F                    3127 	ld	l, a
      000C5D 79                    3128 	ld	a, c
      000C5E 22                    3129 	ld	(hl+), a
      000C5F 70                    3130 	ld	(hl), b
                                   3131 ;main.c:272: enemies[i].yReserve -=  yMovement << 3;
      000C60 F8 09                 3132 	ldhl	sp,#9
      000C62 2A                    3133 	ld	a, (hl+)
      000C63 5F                    3134 	ld	e, a
      000C64 56                    3135 	ld	d, (hl)
      000C65 1A                    3136 	ld	a, (de)
      000C66 F5                    3137 	push	af
      000C67 F8 0F                 3138 	ldhl	sp,	#15
      000C69 7E                    3139 	ld	a, (hl)
      000C6A 87                    3140 	add	a, a
      000C6B 87                    3141 	add	a, a
      000C6C 87                    3142 	add	a, a
      000C6D 4F                    3143 	ld	c, a
      000C6E F1                    3144 	pop	af
      000C6F 91                    3145 	sub	a, c
      000C70 4F                    3146 	ld	c, a
      000C71 F8 09                 3147 	ldhl	sp,	#9
      000C73 2A                    3148 	ld	a,	(hl+)
      000C74 66                    3149 	ld	h, (hl)
      000C75 6F                    3150 	ld	l, a
      000C76 71                    3151 	ld	(hl), c
      000C77 18 7A                 3152 	jr	00139$
      000C79                       3153 00115$:
                                   3154 ;main.c:274: else if ((-enemies[i].yReserve) >> 3 > 0){
      000C79 F8 0D                 3155 	ldhl	sp,	#13
      000C7B 7E                    3156 	ld	a, (hl)
      000C7C F8 07                 3157 	ldhl	sp,	#7
      000C7E 22                    3158 	ld	(hl+), a
      000C7F 07                    3159 	rlca
      000C80 9F                    3160 	sbc	a, a
      000C81 77                    3161 	ld	(hl), a
      000C82 11 00 00              3162 	ld	de, #0x0000
      000C85 3A                    3163 	ld	a, (hl-)
      000C86 6E                    3164 	ld	l, (hl)
      000C87 67                    3165 	ld	h, a
      000C88 7B                    3166 	ld	a, e
      000C89 95                    3167 	sub	a, l
      000C8A 5F                    3168 	ld	e, a
      000C8B 7A                    3169 	ld	a, d
      000C8C 9C                    3170 	sbc	a, h
      000C8D F8 0D                 3171 	ldhl	sp,	#13
      000C8F 32                    3172 	ld	(hl-), a
      000C90 7B                    3173 	ld	a, e
      000C91 22                    3174 	ld	(hl+), a
      000C92 2B                    3175 	dec	hl
      000C93 2A                    3176 	ld	a, (hl+)
      000C94 4F                    3177 	ld	c, a
      000C95 46                    3178 	ld	b, (hl)
      000C96 CB 28                 3179 	sra	b
      000C98 CB 19                 3180 	rr	c
      000C9A CB 28                 3181 	sra	b
      000C9C CB 19                 3182 	rr	c
      000C9E CB 28                 3183 	sra	b
      000CA0 CB 19                 3184 	rr	c
      000CA2 58                    3185 	ld	e, b
      000CA3 AF                    3186 	xor	a, a
      000CA4 57                    3187 	ld	d, a
      000CA5 B9                    3188 	cp	a, c
      000CA6 98                    3189 	sbc	a, b
      000CA7 CB 7B                 3190 	bit	7, e
      000CA9 28 07                 3191 	jr	Z, 00252$
      000CAB CB 7A                 3192 	bit	7, d
      000CAD 20 08                 3193 	jr	NZ, 00253$
      000CAF BF                    3194 	cp	a, a
      000CB0 18 05                 3195 	jr	00253$
      000CB2                       3196 00252$:
      000CB2 CB 7A                 3197 	bit	7, d
      000CB4 28 01                 3198 	jr	Z, 00253$
      000CB6 37                    3199 	scf
      000CB7                       3200 00253$:
      000CB7 30 3A                 3201 	jr	NC, 00139$
                                   3202 ;main.c:275: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      000CB9 AF                    3203 	xor	a, a
      000CBA 91                    3204 	sub	a, c
      000CBB 4F                    3205 	ld	c, a
      000CBC F8 0D                 3206 	ldhl	sp,	#13
      000CBE 71                    3207 	ld	(hl), c
                                   3208 ;main.c:276: enemies[i].y += yMovement;
      000CBF F8 02                 3209 	ldhl	sp,#2
      000CC1 2A                    3210 	ld	a, (hl+)
      000CC2 5F                    3211 	ld	e, a
      000CC3 56                    3212 	ld	d, (hl)
      000CC4 1A                    3213 	ld	a, (de)
      000CC5 4F                    3214 	ld	c, a
      000CC6 13                    3215 	inc	de
      000CC7 1A                    3216 	ld	a, (de)
      000CC8 47                    3217 	ld	b, a
      000CC9 F8 0D                 3218 	ldhl	sp,	#13
      000CCB 7E                    3219 	ld	a, (hl)
      000CCC 5F                    3220 	ld	e, a
      000CCD 07                    3221 	rlca
      000CCE 9F                    3222 	sbc	a, a
      000CCF 57                    3223 	ld	d, a
      000CD0 69                    3224 	ld	l, c
                                   3225 ;	spillPairReg hl
                                   3226 ;	spillPairReg hl
      000CD1 60                    3227 	ld	h, b
                                   3228 ;	spillPairReg hl
                                   3229 ;	spillPairReg hl
      000CD2 19                    3230 	add	hl, de
      000CD3 4D                    3231 	ld	c, l
      000CD4 44                    3232 	ld	b, h
      000CD5 F8 02                 3233 	ldhl	sp,	#2
      000CD7 2A                    3234 	ld	a,	(hl+)
      000CD8 66                    3235 	ld	h, (hl)
      000CD9 6F                    3236 	ld	l, a
      000CDA 79                    3237 	ld	a, c
      000CDB 22                    3238 	ld	(hl+), a
      000CDC 70                    3239 	ld	(hl), b
                                   3240 ;main.c:277: enemies[i].yReserve +=  (-yMovement) << 3;
      000CDD F8 09                 3241 	ldhl	sp,#9
      000CDF 2A                    3242 	ld	a, (hl+)
      000CE0 5F                    3243 	ld	e, a
      000CE1 56                    3244 	ld	d, (hl)
      000CE2 1A                    3245 	ld	a, (de)
      000CE3 4F                    3246 	ld	c, a
      000CE4 AF                    3247 	xor	a, a
      000CE5 F8 0D                 3248 	ldhl	sp,	#13
      000CE7 96                    3249 	sub	a, (hl)
      000CE8 87                    3250 	add	a, a
      000CE9 87                    3251 	add	a, a
      000CEA 87                    3252 	add	a, a
      000CEB 81                    3253 	add	a, c
      000CEC 4F                    3254 	ld	c, a
      000CED F8 09                 3255 	ldhl	sp,	#9
      000CEF 2A                    3256 	ld	a,	(hl+)
      000CF0 66                    3257 	ld	h, (hl)
      000CF1 6F                    3258 	ld	l, a
      000CF2 71                    3259 	ld	(hl), c
      000CF3                       3260 00139$:
                                   3261 ;main.c:229: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000CF3 F8 0E                 3262 	ldhl	sp,	#14
      000CF5 34                    3263 	inc	(hl)
      000CF6 C3r25r09              3264 	jp	00138$
      000CF9                       3265 00117$:
                                   3266 ;main.c:288: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000CF9 F8 0E                 3267 	ldhl	sp,	#14
      000CFB 36 00                 3268 	ld	(hl), #0x00
      000CFD                       3269 00141$:
      000CFD 21r19r05              3270 	ld	hl, #_ENEMYCOUNT
      000D00 4E                    3271 	ld	c, (hl)
      000D01 F8 0E                 3272 	ldhl	sp,	#14
      000D03 7E                    3273 	ld	a, (hl)
      000D04 91                    3274 	sub	a, c
      000D05 D2r6Cr0E              3275 	jp	NC, 00143$
                                   3276 ;main.c:290: if (enemies[i].alive) {
      000D08 4E                    3277 	ld	c, (hl)
      000D09 06 00                 3278 	ld	b, #0x00
      000D0B 69                    3279 	ld	l, c
      000D0C 60                    3280 	ld	h, b
      000D0D 29                    3281 	add	hl, hl
      000D0E 29                    3282 	add	hl, hl
      000D0F 09                    3283 	add	hl, bc
      000D10 29                    3284 	add	hl, hl
      000D11 29                    3285 	add	hl, hl
      000D12 01r00r00              3286 	ld	bc,#_enemies
      000D15 09                    3287 	add	hl,bc
      000D16 E5                    3288 	push	hl
      000D17 7D                    3289 	ld	a, l
      000D18 F8 08                 3290 	ldhl	sp,	#8
      000D1A 77                    3291 	ld	(hl), a
      000D1B E1                    3292 	pop	hl
      000D1C 7C                    3293 	ld	a, h
      000D1D F8 07                 3294 	ldhl	sp,	#7
      000D1F 32                    3295 	ld	(hl-), a
      000D20 2A                    3296 	ld	a, (hl+)
      000D21 5F                    3297 	ld	e, a
      000D22 56                    3298 	ld	d, (hl)
      000D23 21 0A 00              3299 	ld	hl, #0x000a
      000D26 19                    3300 	add	hl, de
      000D27 4D                    3301 	ld	c, l
      000D28 44                    3302 	ld	b, h
      000D29 0A                    3303 	ld	a, (bc)
      000D2A F8 0D                 3304 	ldhl	sp,	#13
      000D2C 77                    3305 	ld	(hl), a
      000D2D 7E                    3306 	ld	a, (hl)
      000D2E B7                    3307 	or	a, a
      000D2F CAr3Er0E              3308 	jp	Z, 00132$
                                   3309 ;main.c:291: if (enemies[i].visible == 1) {
      000D32 F8 06                 3310 	ldhl	sp,#6
      000D34 2A                    3311 	ld	a, (hl+)
      000D35 5F                    3312 	ld	e, a
      000D36 56                    3313 	ld	d, (hl)
      000D37 21 0B 00              3314 	ld	hl, #0x000b
      000D3A 19                    3315 	add	hl, de
      000D3B E5                    3316 	push	hl
      000D3C 7D                    3317 	ld	a, l
      000D3D F8 0A                 3318 	ldhl	sp,	#10
      000D3F 77                    3319 	ld	(hl), a
      000D40 E1                    3320 	pop	hl
      000D41 7C                    3321 	ld	a, h
      000D42 F8 09                 3322 	ldhl	sp,	#9
      000D44 32                    3323 	ld	(hl-), a
      000D45 2A                    3324 	ld	a, (hl+)
      000D46 5F                    3325 	ld	e, a
      000D47 2A                    3326 	ld	a, (hl+)
      000D48 57                    3327 	ld	d, a
      000D49 1A                    3328 	ld	a, (de)
      000D4A 77                    3329 	ld	(hl), a
                                   3330 ;main.c:292: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D4B F8 06                 3331 	ldhl	sp,#6
      000D4D 2A                    3332 	ld	a, (hl+)
      000D4E 5F                    3333 	ld	e, a
      000D4F 56                    3334 	ld	d, (hl)
      000D50 1A                    3335 	ld	a, (de)
      000D51 F8 04                 3336 	ldhl	sp,	#4
      000D53 22                    3337 	ld	(hl+), a
      000D54 13                    3338 	inc	de
      000D55 1A                    3339 	ld	a, (de)
      000D56 22                    3340 	ld	(hl+), a
      000D57 2A                    3341 	ld	a, (hl+)
      000D58 5F                    3342 	ld	e, a
      000D59 56                    3343 	ld	d, (hl)
      000D5A 21 02 00              3344 	ld	hl, #0x0002
      000D5D 19                    3345 	add	hl, de
      000D5E E5                    3346 	push	hl
      000D5F 7D                    3347 	ld	a, l
      000D60 F8 0D                 3348 	ldhl	sp,	#13
      000D62 77                    3349 	ld	(hl), a
      000D63 E1                    3350 	pop	hl
      000D64 7C                    3351 	ld	a, h
      000D65 F8 0C                 3352 	ldhl	sp,	#12
                                   3353 ;main.c:294: set_sprite_tile(10+i, 0x7f);
      000D67 22                    3354 	ld	(hl+), a
      000D68 23                    3355 	inc	hl
      000D69 7E                    3356 	ld	a, (hl)
                                   3357 ;main.c:292: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D6A F8 04                 3358 	ldhl	sp,	#4
      000D6C 4E                    3359 	ld	c, (hl)
      000D6D 23                    3360 	inc	hl
      000D6E 46                    3361 	ld	b, (hl)
                                   3362 ;main.c:294: set_sprite_tile(10+i, 0x7f);
      000D6F C6 0A                 3363 	add	a, #0x0a
      000D71 F8 0D                 3364 	ldhl	sp,	#13
      000D73 77                    3365 	ld	(hl), a
                                   3366 ;main.c:292: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D74 78                    3367 	ld	a, b
      000D75 07                    3368 	rlca
      000D76 E6 01                 3369 	and	a,#0x01
      000D78 6F                    3370 	ld	l, a
                                   3371 ;	spillPairReg hl
                                   3372 ;	spillPairReg hl
                                   3373 ;main.c:291: if (enemies[i].visible == 1) {
      000D79 E5                    3374 	push	hl
      000D7A F8 0C                 3375 	ldhl	sp,	#12
      000D7C 7E                    3376 	ld	a, (hl)
      000D7D 3D                    3377 	dec	a
      000D7E E1                    3378 	pop	hl
      000D7F 20 60                 3379 	jr	NZ, 00129$
                                   3380 ;main.c:292: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000D81 7D                    3381 	ld	a, l
      000D82 B7                    3382 	or	a, a
      000D83 20 44                 3383 	jr	NZ, 00118$
      000D85 58                    3384 	ld	e, b
      000D86 16 00                 3385 	ld	d, #0x00
      000D88 3E AC                 3386 	ld	a, #0xac
      000D8A B9                    3387 	cp	a, c
      000D8B 3E 00                 3388 	ld	a, #0x00
      000D8D 98                    3389 	sbc	a, b
      000D8E CB 7B                 3390 	bit	7, e
      000D90 28 07                 3391 	jr	Z, 00256$
      000D92 CB 7A                 3392 	bit	7, d
      000D94 20 08                 3393 	jr	NZ, 00257$
      000D96 BF                    3394 	cp	a, a
      000D97 18 05                 3395 	jr	00257$
      000D99                       3396 00256$:
      000D99 CB 7A                 3397 	bit	7, d
      000D9B 28 01                 3398 	jr	Z, 00257$
      000D9D 37                    3399 	scf
      000D9E                       3400 00257$:
      000D9E 38 29                 3401 	jr	C, 00118$
      000DA0 F8 0B                 3402 	ldhl	sp,#11
      000DA2 2A                    3403 	ld	a, (hl+)
      000DA3 5F                    3404 	ld	e, a
      000DA4 56                    3405 	ld	d, (hl)
      000DA5 1A                    3406 	ld	a, (de)
      000DA6 4F                    3407 	ld	c, a
      000DA7 13                    3408 	inc	de
      000DA8 1A                    3409 	ld	a, (de)
      000DA9 47                    3410 	ld	b, a
      000DAA CB 78                 3411 	bit	7, b
      000DAC 20 1B                 3412 	jr	NZ, 00118$
      000DAE 58                    3413 	ld	e, b
      000DAF 16 00                 3414 	ld	d, #0x00
      000DB1 3E 98                 3415 	ld	a, #0x98
      000DB3 B9                    3416 	cp	a, c
      000DB4 3E 00                 3417 	ld	a, #0x00
      000DB6 98                    3418 	sbc	a, b
      000DB7 CB 7B                 3419 	bit	7, e
      000DB9 28 07                 3420 	jr	Z, 00258$
      000DBB CB 7A                 3421 	bit	7, d
      000DBD 20 08                 3422 	jr	NZ, 00259$
      000DBF BF                    3423 	cp	a, a
      000DC0 18 05                 3424 	jr	00259$
      000DC2                       3425 00258$:
      000DC2 CB 7A                 3426 	bit	7, d
      000DC4 28 01                 3427 	jr	Z, 00259$
      000DC6 37                    3428 	scf
      000DC7                       3429 00259$:
      000DC7 30 75                 3430 	jr	NC, 00132$
      000DC9                       3431 00118$:
                                   3432 ;main.c:293: enemies[i].visible = 0;
      000DC9 F8 08                 3433 	ldhl	sp,	#8
      000DCB 2A                    3434 	ld	a,	(hl+)
      000DCC 66                    3435 	ld	h, (hl)
      000DCD 6F                    3436 	ld	l, a
      000DCE 36 00                 3437 	ld	(hl), #0x00
                                   3438 ;main.c:294: set_sprite_tile(10+i, 0x7f);
      000DD0 F8 0D                 3439 	ldhl	sp,	#13
                                   3440 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DD2 6E                    3441 	ld	l, (hl)
      000DD3 01r00r00              3442 	ld	bc, #_shadow_OAM+0
                                   3443 ;	spillPairReg hl
                                   3444 ;	spillPairReg hl
      000DD6 26 00                 3445 	ld	h, #0x00
                                   3446 ;	spillPairReg hl
                                   3447 ;	spillPairReg hl
      000DD8 29                    3448 	add	hl, hl
      000DD9 29                    3449 	add	hl, hl
      000DDA 09                    3450 	add	hl, bc
      000DDB 23                    3451 	inc	hl
      000DDC 23                    3452 	inc	hl
      000DDD 36 7F                 3453 	ld	(hl), #0x7f
                                   3454 ;main.c:294: set_sprite_tile(10+i, 0x7f);
      000DDF 18 5D                 3455 	jr	00132$
      000DE1                       3456 00129$:
                                   3457 ;main.c:298: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      000DE1 CB 45                 3458 	bit	0, l
      000DE3 20 59                 3459 	jr	NZ, 00132$
      000DE5 79                    3460 	ld	a, c
      000DE6 D6 AC                 3461 	sub	a, #0xac
      000DE8 78                    3462 	ld	a, b
      000DE9 17                    3463 	rla
      000DEA 3F                    3464 	ccf
      000DEB 1F                    3465 	rra
      000DEC DE 80                 3466 	sbc	a, #0x80
      000DEE 30 4E                 3467 	jr	NC, 00132$
      000DF0 F8 0B                 3468 	ldhl	sp,#11
      000DF2 2A                    3469 	ld	a, (hl+)
      000DF3 5F                    3470 	ld	e, a
      000DF4 56                    3471 	ld	d, (hl)
      000DF5 1A                    3472 	ld	a, (de)
      000DF6 4F                    3473 	ld	c, a
      000DF7 13                    3474 	inc	de
      000DF8 1A                    3475 	ld	a, (de)
      000DF9 47                    3476 	ld	b, a
      000DFA 58                    3477 	ld	e, b
      000DFB AF                    3478 	xor	a, a
      000DFC 57                    3479 	ld	d, a
      000DFD B9                    3480 	cp	a, c
      000DFE 98                    3481 	sbc	a, b
      000DFF CB 7B                 3482 	bit	7, e
      000E01 28 07                 3483 	jr	Z, 00260$
      000E03 CB 7A                 3484 	bit	7, d
      000E05 20 08                 3485 	jr	NZ, 00261$
      000E07 BF                    3486 	cp	a, a
      000E08 18 05                 3487 	jr	00261$
      000E0A                       3488 00260$:
      000E0A CB 7A                 3489 	bit	7, d
      000E0C 28 01                 3490 	jr	Z, 00261$
      000E0E 37                    3491 	scf
      000E0F                       3492 00261$:
      000E0F 30 2D                 3493 	jr	NC, 00132$
      000E11 79                    3494 	ld	a, c
      000E12 D6 98                 3495 	sub	a, #0x98
      000E14 78                    3496 	ld	a, b
      000E15 17                    3497 	rla
      000E16 3F                    3498 	ccf
      000E17 1F                    3499 	rra
      000E18 DE 80                 3500 	sbc	a, #0x80
      000E1A 30 22                 3501 	jr	NC, 00132$
                                   3502 ;main.c:299: enemies[i].visible = 1;
      000E1C F8 08                 3503 	ldhl	sp,	#8
      000E1E 2A                    3504 	ld	a,	(hl+)
      000E1F 66                    3505 	ld	h, (hl)
      000E20 6F                    3506 	ld	l, a
      000E21 36 01                 3507 	ld	(hl), #0x01
                                   3508 ;main.c:300: set_sprite_tile(10+i, enemies[i].sprite0);
      000E23 F8 06                 3509 	ldhl	sp,#6
      000E25 2A                    3510 	ld	a, (hl+)
      000E26 5F                    3511 	ld	e, a
      000E27 56                    3512 	ld	d, (hl)
      000E28 21 06 00              3513 	ld	hl, #0x0006
      000E2B 19                    3514 	add	hl, de
      000E2C 4D                    3515 	ld	c, l
      000E2D 44                    3516 	ld	b, h
      000E2E 0A                    3517 	ld	a, (bc)
      000E2F 4F                    3518 	ld	c, a
      000E30 F8 0D                 3519 	ldhl	sp,	#13
                                   3520 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E32 6E                    3521 	ld	l, (hl)
      000E33 11r00r00              3522 	ld	de, #_shadow_OAM+0
                                   3523 ;	spillPairReg hl
                                   3524 ;	spillPairReg hl
      000E36 26 00                 3525 	ld	h, #0x00
                                   3526 ;	spillPairReg hl
                                   3527 ;	spillPairReg hl
      000E38 29                    3528 	add	hl, hl
      000E39 29                    3529 	add	hl, hl
      000E3A 19                    3530 	add	hl, de
      000E3B 23                    3531 	inc	hl
      000E3C 23                    3532 	inc	hl
      000E3D 71                    3533 	ld	(hl), c
                                   3534 ;main.c:300: set_sprite_tile(10+i, enemies[i].sprite0);
      000E3E                       3535 00132$:
                                   3536 ;main.c:305: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000E3E F8 0E                 3537 	ldhl	sp,	#14
      000E40 4E                    3538 	ld	c, (hl)
      000E41 06 00                 3539 	ld	b, #0x00
      000E43 69                    3540 	ld	l, c
      000E44 60                    3541 	ld	h, b
      000E45 29                    3542 	add	hl, hl
      000E46 29                    3543 	add	hl, hl
      000E47 09                    3544 	add	hl, bc
      000E48 29                    3545 	add	hl, hl
      000E49 29                    3546 	add	hl, hl
      000E4A 11r00r00              3547 	ld	de, #_enemies
      000E4D 19                    3548 	add	hl, de
      000E4E 4D                    3549 	ld	c, l
      000E4F 44                    3550 	ld	b, h
      000E50 03                    3551 	inc	bc
      000E51 03                    3552 	inc	bc
      000E52 0A                    3553 	ld	a, (bc)
      000E53 47                    3554 	ld	b, a
      000E54 4E                    3555 	ld	c, (hl)
      000E55 F8 0E                 3556 	ldhl	sp,	#14
      000E57 7E                    3557 	ld	a, (hl)
      000E58 C6 0A                 3558 	add	a, #0x0a
                                   3559 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E5A 6F                    3560 	ld	l, a
                                   3561 ;	spillPairReg hl
                                   3562 ;	spillPairReg hl
      000E5B 26 00                 3563 	ld	h, #0x00
                                   3564 ;	spillPairReg hl
                                   3565 ;	spillPairReg hl
      000E5D 29                    3566 	add	hl, hl
      000E5E 29                    3567 	add	hl, hl
      000E5F 11r00r00              3568 	ld	de, #_shadow_OAM
      000E62 19                    3569 	add	hl, de
                                   3570 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E63 78                    3571 	ld	a, b
      000E64 22                    3572 	ld	(hl+), a
      000E65 71                    3573 	ld	(hl), c
                                   3574 ;main.c:288: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E66 F8 0E                 3575 	ldhl	sp,	#14
      000E68 34                    3576 	inc	(hl)
      000E69 C3rFDr0C              3577 	jp	00141$
      000E6C                       3578 00143$:
                                   3579 ;main.c:307: }
      000E6C E8 0F                 3580 	add	sp, #15
      000E6E C9                    3581 	ret
                                   3582 ;main.c:309: void initEnemies(uint8_t loadSprites) {
                                   3583 ;	---------------------------------
                                   3584 ; Function initEnemies
                                   3585 ; ---------------------------------
      000E6F                       3586 _initEnemies::
      000E6F E8 F5                 3587 	add	sp, #-11
                                   3588 ;main.c:311: if (loadSprites) {
      000E71 F8 0D                 3589 	ldhl	sp,	#13
      000E73 7E                    3590 	ld	a, (hl)
      000E74 B7                    3591 	or	a, a
      000E75 28 0D                 3592 	jr	Z, 00116$
                                   3593 ;main.c:313: set_sprite_data(9, 2, enemy1);
      000E77 11rF7r04              3594 	ld	de, #_enemy1
      000E7A D5                    3595 	push	de
      000E7B 21 09 02              3596 	ld	hl, #0x209
      000E7E E5                    3597 	push	hl
      000E7F CDr00r00              3598 	call	_set_sprite_data
      000E82 E8 04                 3599 	add	sp, #4
                                   3600 ;main.c:318: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E84                       3601 00116$:
      000E84 F8 0A                 3602 	ldhl	sp,	#10
      000E86 36 00                 3603 	ld	(hl), #0x00
      000E88                       3604 00109$:
      000E88 21r19r05              3605 	ld	hl, #_ENEMYCOUNT
      000E8B 4E                    3606 	ld	c, (hl)
      000E8C F8 0A                 3607 	ldhl	sp,	#10
      000E8E 7E                    3608 	ld	a, (hl)
      000E8F 91                    3609 	sub	a, c
      000E90 D2rB8r0F              3610 	jp	NC, 00111$
                                   3611 ;main.c:319: if (enemies[i].alive == 0) {
      000E93 4E                    3612 	ld	c, (hl)
      000E94 06 00                 3613 	ld	b, #0x00
      000E96 69                    3614 	ld	l, c
      000E97 60                    3615 	ld	h, b
      000E98 29                    3616 	add	hl, hl
      000E99 29                    3617 	add	hl, hl
      000E9A 09                    3618 	add	hl, bc
      000E9B 29                    3619 	add	hl, hl
      000E9C 29                    3620 	add	hl, hl
      000E9D 01r00r00              3621 	ld	bc,#_enemies
      000EA0 09                    3622 	add	hl,bc
      000EA1 E5                    3623 	push	hl
      000EA2 7D                    3624 	ld	a, l
      000EA3 F8 0A                 3625 	ldhl	sp,	#10
      000EA5 77                    3626 	ld	(hl), a
      000EA6 E1                    3627 	pop	hl
      000EA7 7C                    3628 	ld	a, h
      000EA8 F8 09                 3629 	ldhl	sp,	#9
      000EAA 32                    3630 	ld	(hl-), a
      000EAB 2A                    3631 	ld	a, (hl+)
      000EAC 5F                    3632 	ld	e, a
      000EAD 56                    3633 	ld	d, (hl)
      000EAE 21 0A 00              3634 	ld	hl, #0x000a
      000EB1 19                    3635 	add	hl, de
      000EB2 4D                    3636 	ld	c, l
      000EB3 44                    3637 	ld	b, h
      000EB4 0A                    3638 	ld	a, (bc)
      000EB5 F8 07                 3639 	ldhl	sp,	#7
      000EB7 77                    3640 	ld	(hl), a
      000EB8 7E                    3641 	ld	a, (hl)
      000EB9 B7                    3642 	or	a, a
      000EBA C2rB2r0F              3643 	jp	NZ, 00110$
                                   3644 ;main.c:321: enemies[i] = blob;
      000EBD 23                    3645 	inc	hl
      000EBE 01r08r00              3646 	ld	bc, #_blob
      000EC1 2A                    3647 	ld	a, (hl+)
      000EC2 5F                    3648 	ld	e, a
      000EC3 56                    3649 	ld	d, (hl)
      000EC4 21 14 00              3650 	ld	hl, #0x0014
      000EC7 E5                    3651 	push	hl
      000EC8 C5                    3652 	push	bc
      000EC9 D5                    3653 	push	de
      000ECA CDr00r00              3654 	call	___memcpy
      000ECD E8 06                 3655 	add	sp, #6
                                   3656 ;main.c:324: uint8_t posIndex =  ((uint8_t)rand()) % (uint8_t)8;//(rand() & 8);
      000ECF CDr00r00              3657 	call	_rand
      000ED2 7B                    3658 	ld	a, e
      000ED3 E6 07                 3659 	and	a, #0x07
      000ED5 4F                    3660 	ld	c, a
                                   3661 ;main.c:325: enemies[i].x = xSpawnPositions[posIndex];
      000ED6 21r1Ar05              3662 	ld	hl, #_xSpawnPositions
      000ED9 06 00                 3663 	ld	b, #0x00
      000EDB 09                    3664 	add	hl, bc
      000EDC 7E                    3665 	ld	a, (hl)
      000EDD F8 00                 3666 	ldhl	sp,	#0
      000EDF 22                    3667 	ld	(hl+), a
      000EE0 36 00                 3668 	ld	(hl), #0x00
      000EE2 F8 08                 3669 	ldhl	sp,#8
      000EE4 2A                    3670 	ld	a, (hl+)
      000EE5 5F                    3671 	ld	e, a
      000EE6 56                    3672 	ld	d, (hl)
      000EE7 F8 00                 3673 	ldhl	sp,	#0
      000EE9 2A                    3674 	ld	a, (hl+)
      000EEA 12                    3675 	ld	(de), a
      000EEB 13                    3676 	inc	de
      000EEC 7E                    3677 	ld	a, (hl)
      000EED 12                    3678 	ld	(de), a
                                   3679 ;main.c:326: enemies[i].y = ySpawnPositions[posIndex];
      000EEE F8 08                 3680 	ldhl	sp,	#8
      000EF0 2A                    3681 	ld	a, (hl+)
      000EF1 5F                    3682 	ld	e, a
      000EF2 56                    3683 	ld	d, (hl)
      000EF3 13                    3684 	inc	de
      000EF4 13                    3685 	inc	de
      000EF5 21r22r05              3686 	ld	hl, #_ySpawnPositions
      000EF8 06 00                 3687 	ld	b, #0x00
      000EFA 09                    3688 	add	hl, bc
      000EFB 7E                    3689 	ld	a, (hl)
      000EFC F8 02                 3690 	ldhl	sp,	#2
      000EFE 22                    3691 	ld	(hl+), a
      000EFF AF                    3692 	xor	a, a
      000F00 32                    3693 	ld	(hl-), a
      000F01 2A                    3694 	ld	a, (hl+)
      000F02 12                    3695 	ld	(de), a
      000F03 13                    3696 	inc	de
      000F04 7E                    3697 	ld	a, (hl)
      000F05 12                    3698 	ld	(de), a
                                   3699 ;main.c:329: set_sprite_tile(10+i, enemies[i].sprite0);
      000F06 F8 08                 3700 	ldhl	sp,#8
      000F08 2A                    3701 	ld	a, (hl+)
      000F09 5F                    3702 	ld	e, a
      000F0A 56                    3703 	ld	d, (hl)
      000F0B 21 06 00              3704 	ld	hl, #0x0006
      000F0E 19                    3705 	add	hl, de
      000F0F 4D                    3706 	ld	c, l
      000F10 44                    3707 	ld	b, h
      000F11 0A                    3708 	ld	a, (bc)
      000F12 F8 04                 3709 	ldhl	sp,	#4
      000F14 77                    3710 	ld	(hl), a
      000F15 F8 0A                 3711 	ldhl	sp,	#10
      000F17 7E                    3712 	ld	a, (hl)
      000F18 C6 0A                 3713 	add	a, #0x0a
      000F1A F8 05                 3714 	ldhl	sp,	#5
      000F1C 77                    3715 	ld	(hl), a
      000F1D 4E                    3716 	ld	c, (hl)
                                   3717 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F1E F8 08                 3718 	ldhl	sp,	#8
      000F20 79                    3719 	ld	a, c
      000F21 22                    3720 	ld	(hl+), a
      000F22 36 00                 3721 	ld	(hl), #0x00
      000F24 3E 02                 3722 	ld	a, #0x02
      000F26                       3723 00134$:
      000F26 F8 08                 3724 	ldhl	sp,	#8
      000F28 CB 26                 3725 	sla	(hl)
      000F2A 23                    3726 	inc	hl
      000F2B CB 16                 3727 	rl	(hl)
      000F2D 3D                    3728 	dec	a
      000F2E 20 F6                 3729 	jr	NZ, 00134$
      000F30 2B                    3730 	dec	hl
      000F31 2A                    3731 	ld	a, (hl+)
      000F32 5F                    3732 	ld	e, a
      000F33 56                    3733 	ld	d, (hl)
      000F34 21r00r00              3734 	ld	hl, #_shadow_OAM
      000F37 19                    3735 	add	hl, de
      000F38 E5                    3736 	push	hl
      000F39 7D                    3737 	ld	a, l
      000F3A F8 08                 3738 	ldhl	sp,	#8
      000F3C 77                    3739 	ld	(hl), a
      000F3D E1                    3740 	pop	hl
      000F3E 7C                    3741 	ld	a, h
      000F3F F8 07                 3742 	ldhl	sp,	#7
      000F41 32                    3743 	ld	(hl-), a
      000F42 2A                    3744 	ld	a, (hl+)
      000F43 5F                    3745 	ld	e, a
      000F44 56                    3746 	ld	d, (hl)
      000F45 21 02 00              3747 	ld	hl, #0x0002
      000F48 19                    3748 	add	hl, de
      000F49 E5                    3749 	push	hl
      000F4A 7D                    3750 	ld	a, l
      000F4B F8 0A                 3751 	ldhl	sp,	#10
      000F4D 77                    3752 	ld	(hl), a
      000F4E E1                    3753 	pop	hl
      000F4F 7C                    3754 	ld	a, h
      000F50 F8 09                 3755 	ldhl	sp,	#9
      000F52 32                    3756 	ld	(hl-), a
      000F53 2A                    3757 	ld	a, (hl+)
      000F54 5F                    3758 	ld	e, a
      000F55 56                    3759 	ld	d, (hl)
      000F56 F8 04                 3760 	ldhl	sp,	#4
                                   3761 ;main.c:330: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000F58 3A                    3762 	ld	a, (hl-)
      000F59 2B                    3763 	dec	hl
      000F5A 12                    3764 	ld	(de), a
      000F5B 7E                    3765 	ld	a, (hl)
      000F5C F8 09                 3766 	ldhl	sp,	#9
      000F5E 77                    3767 	ld	(hl), a
      000F5F F8 00                 3768 	ldhl	sp,	#0
      000F61 7E                    3769 	ld	a, (hl)
      000F62 F8 08                 3770 	ldhl	sp,	#8
      000F64 77                    3771 	ld	(hl), a
      000F65 F8 05                 3772 	ldhl	sp,	#5
      000F67 2A                    3773 	ld	a, (hl+)
      000F68 23                    3774 	inc	hl
      000F69 77                    3775 	ld	(hl), a
                                   3776 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000F6A 3A                    3777 	ld	a, (hl-)
      000F6B 22                    3778 	ld	(hl+), a
      000F6C 36 00                 3779 	ld	(hl), #0x00
      000F6E 3E 02                 3780 	ld	a, #0x02
      000F70                       3781 00135$:
      000F70 F8 06                 3782 	ldhl	sp,	#6
      000F72 CB 26                 3783 	sla	(hl)
      000F74 23                    3784 	inc	hl
      000F75 CB 16                 3785 	rl	(hl)
      000F77 3D                    3786 	dec	a
      000F78 20 F6                 3787 	jr	NZ, 00135$
      000F7A 2B                    3788 	dec	hl
      000F7B 2A                    3789 	ld	a, (hl+)
      000F7C 5F                    3790 	ld	e, a
      000F7D 56                    3791 	ld	d, (hl)
      000F7E 21r00r00              3792 	ld	hl, #_shadow_OAM
      000F81 19                    3793 	add	hl, de
      000F82 E5                    3794 	push	hl
      000F83 7D                    3795 	ld	a, l
      000F84 F8 06                 3796 	ldhl	sp,	#6
      000F86 77                    3797 	ld	(hl), a
      000F87 E1                    3798 	pop	hl
      000F88 7C                    3799 	ld	a, h
      000F89 F8 05                 3800 	ldhl	sp,	#5
      000F8B 32                    3801 	ld	(hl-), a
      000F8C 2A                    3802 	ld	a, (hl+)
      000F8D 23                    3803 	inc	hl
      000F8E 32                    3804 	ld	(hl-), a
      000F8F 2A                    3805 	ld	a, (hl+)
      000F90 23                    3806 	inc	hl
                                   3807 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000F91 32                    3808 	ld	(hl-), a
      000F92 2A                    3809 	ld	a, (hl+)
      000F93 5F                    3810 	ld	e, a
      000F94 2A                    3811 	ld	a, (hl+)
      000F95 23                    3812 	inc	hl
      000F96 57                    3813 	ld	d, a
      000F97 3A                    3814 	ld	a, (hl-)
      000F98 2B                    3815 	dec	hl
      000F99 2B                    3816 	dec	hl
      000F9A 12                    3817 	ld	(de), a
      000F9B 2A                    3818 	ld	a, (hl+)
      000F9C 5F                    3819 	ld	e, a
      000F9D 56                    3820 	ld	d, (hl)
      000F9E 6B                    3821 	ld	l, e
      000F9F 62                    3822 	ld	h, d
      000FA0 23                    3823 	inc	hl
      000FA1 E5                    3824 	push	hl
      000FA2 7D                    3825 	ld	a, l
      000FA3 F8 06                 3826 	ldhl	sp,	#6
      000FA5 77                    3827 	ld	(hl), a
      000FA6 E1                    3828 	pop	hl
      000FA7 7C                    3829 	ld	a, h
      000FA8 F8 05                 3830 	ldhl	sp,	#5
      000FAA 32                    3831 	ld	(hl-), a
      000FAB 2A                    3832 	ld	a, (hl+)
      000FAC 5F                    3833 	ld	e, a
      000FAD 56                    3834 	ld	d, (hl)
      000FAE F8 08                 3835 	ldhl	sp,	#8
      000FB0 7E                    3836 	ld	a, (hl)
      000FB1 12                    3837 	ld	(de), a
                                   3838 ;main.c:330: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000FB2                       3839 00110$:
                                   3840 ;main.c:318: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000FB2 F8 0A                 3841 	ldhl	sp,	#10
      000FB4 34                    3842 	inc	(hl)
      000FB5 C3r88r0E              3843 	jp	00109$
      000FB8                       3844 00111$:
                                   3845 ;main.c:333: }
      000FB8 E8 0B                 3846 	add	sp, #11
      000FBA C9                    3847 	ret
                                   3848 ;main.c:336: void move() {
                                   3849 ;	---------------------------------
                                   3850 ; Function move
                                   3851 ; ---------------------------------
      000FBB                       3852 _move::
                                   3853 ;main.c:340: if (joydata & J_A) {
      000FBB FAr91r00              3854 	ld	a, (#_joydata)
      000FBE CB 67                 3855 	bit	4, a
      000FC0 28 16                 3856 	jr	Z, 00102$
                                   3857 ;main.c:341: xSpeed += xDir + xDir + xDir;
      000FC2 21r28r00              3858 	ld	hl, #_xDir
      000FC5 7E                    3859 	ld	a, (hl)
      000FC6 87                    3860 	add	a, a
      000FC7 86                    3861 	add	a, (hl)
      000FC8 21r2Ar00              3862 	ld	hl, #_xSpeed
      000FCB 86                    3863 	add	a, (hl)
      000FCC 77                    3864 	ld	(hl), a
                                   3865 ;main.c:342: ySpeed += yDir + yDir + yDir;
      000FCD 21r29r00              3866 	ld	hl, #_yDir
      000FD0 7E                    3867 	ld	a, (hl)
      000FD1 87                    3868 	add	a, a
      000FD2 86                    3869 	add	a, (hl)
      000FD3 21r2Br00              3870 	ld	hl, #_ySpeed
      000FD6 86                    3871 	add	a, (hl)
      000FD7 77                    3872 	ld	(hl), a
      000FD8                       3873 00102$:
                                   3874 ;main.c:346: xSpeed = clamp(xSpeed, -100, 100);
      000FD8 21 9C 64              3875 	ld	hl, #0x649c
      000FDB E5                    3876 	push	hl
      000FDC FAr2Ar00              3877 	ld	a, (#_xSpeed)
      000FDF F5                    3878 	push	af
      000FE0 33                    3879 	inc	sp
      000FE1 CDrCBr07              3880 	call	_clamp
      000FE4 E8 03                 3881 	add	sp, #3
      000FE6 21r2Ar00              3882 	ld	hl, #_xSpeed
      000FE9 73                    3883 	ld	(hl), e
                                   3884 ;main.c:347: ySpeed = clamp(ySpeed, -100, 100);
      000FEA 21 9C 64              3885 	ld	hl, #0x649c
      000FED E5                    3886 	push	hl
      000FEE FAr2Br00              3887 	ld	a, (#_ySpeed)
      000FF1 F5                    3888 	push	af
      000FF2 33                    3889 	inc	sp
      000FF3 CDrCBr07              3890 	call	_clamp
      000FF6 E8 03                 3891 	add	sp, #3
      000FF8 21r2Br00              3892 	ld	hl, #_ySpeed
      000FFB 73                    3893 	ld	(hl), e
                                   3894 ;main.c:349: xOverflow = 0;
      000FFC AF                    3895 	xor	a, a
      000FFD 21r38r00              3896 	ld	hl, #_xOverflow
      001000 22                    3897 	ld	(hl+), a
      001001 77                    3898 	ld	(hl), a
                                   3899 ;main.c:350: yOverflow = 0;
      001002 AF                    3900 	xor	a, a
      001003 21r3Ar00              3901 	ld	hl, #_yOverflow
      001006 22                    3902 	ld	(hl+), a
      001007 77                    3903 	ld	(hl), a
                                   3904 ;main.c:355: uint8_t xCollisionPoint = playerDrawX -4; 
      001008 21r30r00              3905 	ld	hl, #_playerDrawX
      00100B 46                    3906 	ld	b, (hl)
      00100C 78                    3907 	ld	a, b
      00100D C6 FC                 3908 	add	a, #0xfc
      00100F 4F                    3909 	ld	c, a
                                   3910 ;main.c:357: if (xSpeed > 0) {
      001010 21r2Ar00              3911 	ld	hl, #_xSpeed
      001013 5E                    3912 	ld	e, (hl)
      001014 AF                    3913 	xor	a, a
      001015 57                    3914 	ld	d, a
      001016 96                    3915 	sub	a, (hl)
      001017 CB 7B                 3916 	bit	7, e
      001019 28 07                 3917 	jr	Z, 00229$
      00101B CB 7A                 3918 	bit	7, d
      00101D 20 08                 3919 	jr	NZ, 00230$
      00101F BF                    3920 	cp	a, a
      001020 18 05                 3921 	jr	00230$
      001022                       3922 00229$:
      001022 CB 7A                 3923 	bit	7, d
      001024 28 01                 3924 	jr	Z, 00230$
      001026 37                    3925 	scf
      001027                       3926 00230$:
      001027 30 04                 3927 	jr	NC, 00104$
                                   3928 ;main.c:358: xCollisionPoint = playerDrawX; //right edge
      001029 21r30r00              3929 	ld	hl, #_playerDrawX
      00102C 4E                    3930 	ld	c, (hl)
      00102D                       3931 00104$:
                                   3932 ;main.c:360: if (xSpeed < 0) {
      00102D FAr2Ar00              3933 	ld	a, (#_xSpeed)
      001030 CB 7F                 3934 	bit	7, a
      001032 28 04                 3935 	jr	Z, 00106$
                                   3936 ;main.c:361: xCollisionPoint = playerDrawX -8; //left edge
      001034 78                    3937 	ld	a, b
      001035 C6 F8                 3938 	add	a, #0xf8
      001037 4F                    3939 	ld	c, a
      001038                       3940 00106$:
                                   3941 ;main.c:365: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      001038 06 00                 3942 	ld	b, #0x00
      00103A 79                    3943 	ld	a, c
      00103B 21r32r00              3944 	ld	hl, #_bgX
      00103E 86                    3945 	add	a, (hl)
      00103F 23                    3946 	inc	hl
      001040 4F                    3947 	ld	c, a
      001041 78                    3948 	ld	a, b
      001042 8E                    3949 	adc	a, (hl)
      001043 47                    3950 	ld	b, a
      001044 CB 28                 3951 	sra	b
      001046 CB 19                 3952 	rr	c
      001048 CB 28                 3953 	sra	b
      00104A CB 19                 3954 	rr	c
      00104C CB 28                 3955 	sra	b
      00104E CB 19                 3956 	rr	c
      001050 11 20 00              3957 	ld	de, #0x0020
      001053 D5                    3958 	push	de
      001054 C5                    3959 	push	bc
      001055 CDr00r00              3960 	call	__modsint
      001058 E8 04                 3961 	add	sp, #4
                                   3962 ;main.c:369: uint8_t bgindY = ((playerDrawY-12 + bgY) >> 3)%32; 
      00105A FAr31r00              3963 	ld	a, (#_playerDrawY)
      00105D 06 00                 3964 	ld	b, #0x00
      00105F C6 F4                 3965 	add	a, #0xf4
      001061 4F                    3966 	ld	c, a
      001062 78                    3967 	ld	a, b
      001063 CE FF                 3968 	adc	a, #0xff
      001065 47                    3969 	ld	b, a
      001066 79                    3970 	ld	a, c
      001067 21r34r00              3971 	ld	hl, #_bgY
      00106A 86                    3972 	add	a, (hl)
      00106B 23                    3973 	inc	hl
      00106C 4F                    3974 	ld	c, a
      00106D 78                    3975 	ld	a, b
      00106E 8E                    3976 	adc	a, (hl)
      00106F 47                    3977 	ld	b, a
      001070 CB 28                 3978 	sra	b
      001072 CB 19                 3979 	rr	c
      001074 CB 28                 3980 	sra	b
      001076 CB 19                 3981 	rr	c
      001078 CB 28                 3982 	sra	b
      00107A CB 19                 3983 	rr	c
      00107C D5                    3984 	push	de
      00107D 21 20 00              3985 	ld	hl, #0x0020
      001080 E5                    3986 	push	hl
      001081 C5                    3987 	push	bc
      001082 CDr00r00              3988 	call	__modsint
      001085 E8 04                 3989 	add	sp, #4
      001087 6B                    3990 	ld	l, e
                                   3991 ;	spillPairReg hl
                                   3992 ;	spillPairReg hl
                                   3993 ;	spillPairReg hl
                                   3994 ;	spillPairReg hl
      001088 D1                    3995 	pop	de
                                   3996 ;main.c:372: uint16_t ind = 32*bgindY + bgindX;
      001089 26 00                 3997 	ld	h, #0x00
                                   3998 ;	spillPairReg hl
                                   3999 ;	spillPairReg hl
      00108B 29                    4000 	add	hl, hl
      00108C 29                    4001 	add	hl, hl
      00108D 29                    4002 	add	hl, hl
      00108E 29                    4003 	add	hl, hl
      00108F 29                    4004 	add	hl, hl
      001090 19                    4005 	add	hl, de
                                   4006 ;main.c:373: uint8_t result = background1[ind] != BLANK[0];
      001091 01r87r00              4007 	ld	bc,#_background1
      001094 09                    4008 	add	hl,bc
      001095 4E                    4009 	ld	c, (hl)
      001096 21r17r05              4010 	ld	hl, #_BLANK
      001099 46                    4011 	ld	b, (hl)
      00109A 79                    4012 	ld	a, c
      00109B 90                    4013 	sub	a, b
      00109C 3E 01                 4014 	ld	a, #0x01
      00109E 28 01                 4015 	jr	Z, 00232$
      0010A0 AF                    4016 	xor	a, a
      0010A1                       4017 00232$:
                                   4018 ;main.c:374: if (result == 0) {
      0010A1 EE 01                 4019 	xor	a,#0x01
      0010A3 C2r66r11              4020 	jp	NZ, 00111$
                                   4021 ;main.c:375: playerX+=xSpeed;
      0010A6 FAr2Ar00              4022 	ld	a, (#_xSpeed)
      0010A9 4F                    4023 	ld	c, a
      0010AA 07                    4024 	rlca
      0010AB 9F                    4025 	sbc	a, a
      0010AC 47                    4026 	ld	b, a
      0010AD 21r2Cr00              4027 	ld	hl, #_playerX
      0010B0 6E                    4028 	ld	l, (hl)
                                   4029 ;	spillPairReg hl
                                   4030 ;	spillPairReg hl
      0010B1 FAr2Dr00              4031 	ld	a, (_playerX + 1)
      0010B4 67                    4032 	ld	h, a
                                   4033 ;	spillPairReg hl
                                   4034 ;	spillPairReg hl
      0010B5 09                    4035 	add	hl, bc
      0010B6 4D                    4036 	ld	c, l
      0010B7 7C                    4037 	ld	a, h
      0010B8 21r2Cr00              4038 	ld	hl, #_playerX
      0010BB 71                    4039 	ld	(hl), c
      0010BC 23                    4040 	inc	hl
                                   4041 ;main.c:377: uint16_t limitedPlayerX = u16Clamp(playerX, 58<<5, 110<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      0010BD 32                    4042 	ld	(hl-), a
      0010BE 11 C0 0D              4043 	ld	de, #0x0dc0
      0010C1 D5                    4044 	push	de
      0010C2 11 40 07              4045 	ld	de, #0x0740
      0010C5 D5                    4046 	push	de
      0010C6 2A                    4047 	ld	a, (hl+)
      0010C7 5F                    4048 	ld	e, a
      0010C8 56                    4049 	ld	d, (hl)
      0010C9 D5                    4050 	push	de
      0010CA CDr22r08              4051 	call	_u16Clamp
      0010CD E8 06                 4052 	add	sp, #6
      0010CF 4B                    4053 	ld	c, e
      0010D0 42                    4054 	ld	b, d
                                   4055 ;main.c:379: xOverflow = (playerX - limitedPlayerX);
      0010D1 FAr2Cr00              4056 	ld	a, (#_playerX)
      0010D4 91                    4057 	sub	a, c
      0010D5 EAr38r00              4058 	ld	(#_xOverflow),a
      0010D8 FAr2Dr00              4059 	ld	a, (#_playerX + 1)
      0010DB 98                    4060 	sbc	a, b
      0010DC 21r39r00              4061 	ld	hl, #_xOverflow + 1
                                   4062 ;main.c:380: if (xOverflow >= 0) {
      0010DF 32                    4063 	ld	(hl-), a
      0010E0 6E                    4064 	ld	l, (hl)
                                   4065 ;	spillPairReg hl
                                   4066 ;	spillPairReg hl
      0010E1 FAr39r00              4067 	ld	a, (_xOverflow + 1)
                                   4068 ;	spillPairReg hl
                                   4069 ;	spillPairReg hl
      0010E4 CB 7F                 4070 	bit	7,a
      0010E6 20 22                 4071 	jr	NZ, 00108$
                                   4072 ;main.c:381: xOverflow = xOverflow >> 5;
      0010E8 21r39r00              4073 	ld	hl, #_xOverflow + 1
      0010EB CB 2E                 4074 	sra	(hl)
      0010ED 2B                    4075 	dec	hl
      0010EE CB 1E                 4076 	rr	(hl)
      0010F0 23                    4077 	inc	hl
      0010F1 CB 2E                 4078 	sra	(hl)
      0010F3 2B                    4079 	dec	hl
      0010F4 CB 1E                 4080 	rr	(hl)
      0010F6 23                    4081 	inc	hl
      0010F7 CB 2E                 4082 	sra	(hl)
      0010F9 2B                    4083 	dec	hl
      0010FA CB 1E                 4084 	rr	(hl)
      0010FC 23                    4085 	inc	hl
      0010FD CB 2E                 4086 	sra	(hl)
      0010FF 2B                    4087 	dec	hl
      001100 CB 1E                 4088 	rr	(hl)
      001102 23                    4089 	inc	hl
      001103 CB 2E                 4090 	sra	(hl)
      001105 2B                    4091 	dec	hl
      001106 CB 1E                 4092 	rr	(hl)
      001108 18 25                 4093 	jr	00109$
      00110A                       4094 00108$:
                                   4095 ;main.c:384: xOverflow = -((-xOverflow) >> 5);
      00110A AF                    4096 	xor	a, a
      00110B 21r38r00              4097 	ld	hl, #_xOverflow
      00110E 96                    4098 	sub	a, (hl)
      00110F 23                    4099 	inc	hl
      001110 5F                    4100 	ld	e, a
      001111 9F                    4101 	sbc	a, a
      001112 96                    4102 	sub	a, (hl)
      001113 2B                    4103 	dec	hl
      001114 57                    4104 	ld	d, a
      001115 CB 2A                 4105 	sra	d
      001117 CB 1B                 4106 	rr	e
      001119 CB 2A                 4107 	sra	d
      00111B CB 1B                 4108 	rr	e
      00111D CB 2A                 4109 	sra	d
      00111F CB 1B                 4110 	rr	e
      001121 CB 2A                 4111 	sra	d
      001123 CB 1B                 4112 	rr	e
      001125 CB 2A                 4113 	sra	d
      001127 CB 1B                 4114 	rr	e
      001129 AF                    4115 	xor	a, a
      00112A 93                    4116 	sub	a, e
      00112B 22                    4117 	ld	(hl+), a
      00112C 9F                    4118 	sbc	a, a
      00112D 92                    4119 	sub	a, d
      00112E 77                    4120 	ld	(hl), a
      00112F                       4121 00109$:
                                   4122 ;main.c:386: bgX += xOverflow;
      00112F FAr32r00              4123 	ld	a, (#_bgX)
      001132 21r38r00              4124 	ld	hl, #_xOverflow
      001135 86                    4125 	add	a, (hl)
      001136 21r32r00              4126 	ld	hl, #_bgX
      001139 22                    4127 	ld	(hl+), a
      00113A 7E                    4128 	ld	a, (hl)
      00113B 21r39r00              4129 	ld	hl, #_xOverflow + 1
      00113E 8E                    4130 	adc	a, (hl)
      00113F EAr33r00              4131 	ld	(#_bgX + 1),a
                                   4132 ;main.c:387: playerX = limitedPlayerX;
      001142 21r2Cr00              4133 	ld	hl, #_playerX
      001145 79                    4134 	ld	a, c
      001146 22                    4135 	ld	(hl+), a
                                   4136 ;main.c:388: playerDrawX=playerX >> 5;
      001147 78                    4137 	ld	a, b
      001148 32                    4138 	ld	(hl-), a
      001149 2A                    4139 	ld	a, (hl+)
      00114A 4F                    4140 	ld	c, a
      00114B 46                    4141 	ld	b, (hl)
      00114C CB 38                 4142 	srl	b
      00114E CB 19                 4143 	rr	c
      001150 CB 38                 4144 	srl	b
      001152 CB 19                 4145 	rr	c
      001154 CB 38                 4146 	srl	b
      001156 CB 19                 4147 	rr	c
      001158 CB 38                 4148 	srl	b
      00115A CB 19                 4149 	rr	c
      00115C CB 38                 4150 	srl	b
      00115E CB 19                 4151 	rr	c
      001160 21r30r00              4152 	ld	hl, #_playerDrawX
      001163 71                    4153 	ld	(hl), c
      001164 18 05                 4154 	jr	00112$
      001166                       4155 00111$:
                                   4156 ;main.c:396: xSpeed = 0;
      001166 21r2Ar00              4157 	ld	hl, #_xSpeed
      001169 36 00                 4158 	ld	(hl), #0x00
      00116B                       4159 00112$:
                                   4160 ;main.c:404: uint8_t yCollisionPoint = playerDrawY -12; 
      00116B 21r31r00              4161 	ld	hl, #_playerDrawY
      00116E 46                    4162 	ld	b, (hl)
      00116F 78                    4163 	ld	a, b
      001170 C6 F4                 4164 	add	a, #0xf4
      001172 4F                    4165 	ld	c, a
                                   4166 ;main.c:406: if (ySpeed > 0) {
      001173 21r2Br00              4167 	ld	hl, #_ySpeed
      001176 5E                    4168 	ld	e, (hl)
      001177 AF                    4169 	xor	a, a
      001178 57                    4170 	ld	d, a
      001179 96                    4171 	sub	a, (hl)
      00117A CB 7B                 4172 	bit	7, e
      00117C 28 07                 4173 	jr	Z, 00233$
      00117E CB 7A                 4174 	bit	7, d
      001180 20 08                 4175 	jr	NZ, 00234$
      001182 BF                    4176 	cp	a, a
      001183 18 05                 4177 	jr	00234$
      001185                       4178 00233$:
      001185 CB 7A                 4179 	bit	7, d
      001187 28 01                 4180 	jr	Z, 00234$
      001189 37                    4181 	scf
      00118A                       4182 00234$:
      00118A 30 04                 4183 	jr	NC, 00114$
                                   4184 ;main.c:407: yCollisionPoint = playerDrawY - 8; //bottom edge, only half the height, so -8
      00118C 78                    4185 	ld	a, b
      00118D C6 F8                 4186 	add	a, #0xf8
      00118F 4F                    4187 	ld	c, a
      001190                       4188 00114$:
                                   4189 ;main.c:409: if (ySpeed < 0) {
      001190 FAr2Br00              4190 	ld	a, (#_ySpeed)
      001193 CB 7F                 4191 	bit	7, a
      001195 28 04                 4192 	jr	Z, 00116$
                                   4193 ;main.c:410: yCollisionPoint = playerDrawY -16; //top edge, 
      001197 78                    4194 	ld	a, b
      001198 C6 F0                 4195 	add	a, #0xf0
      00119A 4F                    4196 	ld	c, a
      00119B                       4197 00116$:
                                   4198 ;main.c:414: bgindX = ((playerDrawX -4 + bgX) >> 3)%32;
      00119B FAr30r00              4199 	ld	a, (#_playerDrawX)
      00119E 06 00                 4200 	ld	b, #0x00
      0011A0 C6 FC                 4201 	add	a, #0xfc
      0011A2 5F                    4202 	ld	e, a
      0011A3 78                    4203 	ld	a, b
      0011A4 CE FF                 4204 	adc	a, #0xff
      0011A6 57                    4205 	ld	d, a
      0011A7 7B                    4206 	ld	a, e
      0011A8 21r32r00              4207 	ld	hl, #_bgX
      0011AB 86                    4208 	add	a, (hl)
      0011AC 23                    4209 	inc	hl
      0011AD 5F                    4210 	ld	e, a
      0011AE 7A                    4211 	ld	a, d
      0011AF 8E                    4212 	adc	a, (hl)
      0011B0 57                    4213 	ld	d, a
      0011B1 CB 2A                 4214 	sra	d
      0011B3 CB 1B                 4215 	rr	e
      0011B5 CB 2A                 4216 	sra	d
      0011B7 CB 1B                 4217 	rr	e
      0011B9 CB 2A                 4218 	sra	d
      0011BB CB 1B                 4219 	rr	e
      0011BD C5                    4220 	push	bc
      0011BE 21 20 00              4221 	ld	hl, #0x0020
      0011C1 E5                    4222 	push	hl
      0011C2 D5                    4223 	push	de
      0011C3 CDr00r00              4224 	call	__modsint
      0011C6 E8 04                 4225 	add	sp, #4
      0011C8 C1                    4226 	pop	bc
                                   4227 ;main.c:417: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      0011C9 06 00                 4228 	ld	b, #0x00
      0011CB 79                    4229 	ld	a, c
      0011CC 21r34r00              4230 	ld	hl, #_bgY
      0011CF 86                    4231 	add	a, (hl)
      0011D0 23                    4232 	inc	hl
      0011D1 4F                    4233 	ld	c, a
      0011D2 78                    4234 	ld	a, b
      0011D3 8E                    4235 	adc	a, (hl)
      0011D4 47                    4236 	ld	b, a
      0011D5 CB 28                 4237 	sra	b
      0011D7 CB 19                 4238 	rr	c
      0011D9 CB 28                 4239 	sra	b
      0011DB CB 19                 4240 	rr	c
      0011DD CB 28                 4241 	sra	b
      0011DF CB 19                 4242 	rr	c
      0011E1 D5                    4243 	push	de
      0011E2 21 20 00              4244 	ld	hl, #0x0020
      0011E5 E5                    4245 	push	hl
      0011E6 C5                    4246 	push	bc
      0011E7 CDr00r00              4247 	call	__modsint
      0011EA E8 04                 4248 	add	sp, #4
      0011EC 6B                    4249 	ld	l, e
                                   4250 ;	spillPairReg hl
                                   4251 ;	spillPairReg hl
      0011ED D1                    4252 	pop	de
                                   4253 ;main.c:420: ind = 32*bgindY + bgindX;
      0011EE 26 00                 4254 	ld	h, #0x00
                                   4255 ;	spillPairReg hl
                                   4256 ;	spillPairReg hl
      0011F0 29                    4257 	add	hl, hl
      0011F1 29                    4258 	add	hl, hl
      0011F2 29                    4259 	add	hl, hl
      0011F3 29                    4260 	add	hl, hl
      0011F4 29                    4261 	add	hl, hl
      0011F5 19                    4262 	add	hl, de
                                   4263 ;main.c:421: result = background1[ind] != BLANK[0];
      0011F6 11r87r00              4264 	ld	de, #_background1
      0011F9 19                    4265 	add	hl, de
      0011FA 4E                    4266 	ld	c, (hl)
      0011FB 21r17r05              4267 	ld	hl, #_BLANK
      0011FE 46                    4268 	ld	b, (hl)
      0011FF 79                    4269 	ld	a, c
      001200 90                    4270 	sub	a, b
      001201 3E 01                 4271 	ld	a, #0x01
      001203 28 01                 4272 	jr	Z, 00236$
      001205 AF                    4273 	xor	a, a
      001206                       4274 00236$:
                                   4275 ;main.c:422: if (result == 0) {
      001206 EE 01                 4276 	xor	a,#0x01
      001208 C2rCCr12              4277 	jp	NZ, 00121$
                                   4278 ;main.c:423: playerY += ySpeed;
      00120B FAr2Br00              4279 	ld	a, (#_ySpeed)
      00120E 4F                    4280 	ld	c, a
      00120F 07                    4281 	rlca
      001210 9F                    4282 	sbc	a, a
      001211 47                    4283 	ld	b, a
      001212 21r2Er00              4284 	ld	hl, #_playerY
      001215 6E                    4285 	ld	l, (hl)
                                   4286 ;	spillPairReg hl
                                   4287 ;	spillPairReg hl
      001216 FAr2Fr00              4288 	ld	a, (_playerY + 1)
      001219 67                    4289 	ld	h, a
                                   4290 ;	spillPairReg hl
                                   4291 ;	spillPairReg hl
      00121A 09                    4292 	add	hl, bc
      00121B 4D                    4293 	ld	c, l
      00121C 44                    4294 	ld	b, h
      00121D 21r2Er00              4295 	ld	hl, #_playerY
      001220 79                    4296 	ld	a, c
      001221 22                    4297 	ld	(hl+), a
                                   4298 ;main.c:425: uint16_t limitedPlayerY = u16Clamp(playerY, 61<<5, 107<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001222 78                    4299 	ld	a, b
      001223 32                    4300 	ld	(hl-), a
      001224 11 60 0D              4301 	ld	de, #0x0d60
      001227 D5                    4302 	push	de
      001228 11 A0 07              4303 	ld	de, #0x07a0
      00122B D5                    4304 	push	de
      00122C 2A                    4305 	ld	a, (hl+)
      00122D 5F                    4306 	ld	e, a
      00122E 56                    4307 	ld	d, (hl)
      00122F D5                    4308 	push	de
      001230 CDr22r08              4309 	call	_u16Clamp
      001233 E8 06                 4310 	add	sp, #6
      001235 4B                    4311 	ld	c, e
      001236 42                    4312 	ld	b, d
                                   4313 ;main.c:427: yOverflow = (playerY - limitedPlayerY);
      001237 FAr2Er00              4314 	ld	a, (#_playerY)
      00123A 91                    4315 	sub	a, c
      00123B EAr3Ar00              4316 	ld	(#_yOverflow),a
      00123E FAr2Fr00              4317 	ld	a, (#_playerY + 1)
      001241 98                    4318 	sbc	a, b
      001242 21r3Br00              4319 	ld	hl, #_yOverflow + 1
                                   4320 ;main.c:428: if (yOverflow >= 0) {
      001245 32                    4321 	ld	(hl-), a
      001246 6E                    4322 	ld	l, (hl)
                                   4323 ;	spillPairReg hl
                                   4324 ;	spillPairReg hl
      001247 FAr3Br00              4325 	ld	a, (_yOverflow + 1)
                                   4326 ;	spillPairReg hl
                                   4327 ;	spillPairReg hl
      00124A CB 7F                 4328 	bit	7,a
      00124C 20 22                 4329 	jr	NZ, 00118$
                                   4330 ;main.c:429: yOverflow = yOverflow >> 5;
      00124E 21r3Br00              4331 	ld	hl, #_yOverflow + 1
      001251 CB 2E                 4332 	sra	(hl)
      001253 2B                    4333 	dec	hl
      001254 CB 1E                 4334 	rr	(hl)
      001256 23                    4335 	inc	hl
      001257 CB 2E                 4336 	sra	(hl)
      001259 2B                    4337 	dec	hl
      00125A CB 1E                 4338 	rr	(hl)
      00125C 23                    4339 	inc	hl
      00125D CB 2E                 4340 	sra	(hl)
      00125F 2B                    4341 	dec	hl
      001260 CB 1E                 4342 	rr	(hl)
      001262 23                    4343 	inc	hl
      001263 CB 2E                 4344 	sra	(hl)
      001265 2B                    4345 	dec	hl
      001266 CB 1E                 4346 	rr	(hl)
      001268 23                    4347 	inc	hl
      001269 CB 2E                 4348 	sra	(hl)
      00126B 2B                    4349 	dec	hl
      00126C CB 1E                 4350 	rr	(hl)
      00126E 18 25                 4351 	jr	00119$
      001270                       4352 00118$:
                                   4353 ;main.c:432: yOverflow = -((-yOverflow) >> 5);
      001270 AF                    4354 	xor	a, a
      001271 21r3Ar00              4355 	ld	hl, #_yOverflow
      001274 96                    4356 	sub	a, (hl)
      001275 23                    4357 	inc	hl
      001276 5F                    4358 	ld	e, a
      001277 9F                    4359 	sbc	a, a
      001278 96                    4360 	sub	a, (hl)
      001279 2B                    4361 	dec	hl
      00127A 57                    4362 	ld	d, a
      00127B CB 2A                 4363 	sra	d
      00127D CB 1B                 4364 	rr	e
      00127F CB 2A                 4365 	sra	d
      001281 CB 1B                 4366 	rr	e
      001283 CB 2A                 4367 	sra	d
      001285 CB 1B                 4368 	rr	e
      001287 CB 2A                 4369 	sra	d
      001289 CB 1B                 4370 	rr	e
      00128B CB 2A                 4371 	sra	d
      00128D CB 1B                 4372 	rr	e
      00128F AF                    4373 	xor	a, a
      001290 93                    4374 	sub	a, e
      001291 22                    4375 	ld	(hl+), a
      001292 9F                    4376 	sbc	a, a
      001293 92                    4377 	sub	a, d
      001294 77                    4378 	ld	(hl), a
      001295                       4379 00119$:
                                   4380 ;main.c:434: bgY += yOverflow;
      001295 FAr34r00              4381 	ld	a, (#_bgY)
      001298 21r3Ar00              4382 	ld	hl, #_yOverflow
      00129B 86                    4383 	add	a, (hl)
      00129C 21r34r00              4384 	ld	hl, #_bgY
      00129F 22                    4385 	ld	(hl+), a
      0012A0 7E                    4386 	ld	a, (hl)
      0012A1 21r3Br00              4387 	ld	hl, #_yOverflow + 1
      0012A4 8E                    4388 	adc	a, (hl)
      0012A5 EAr35r00              4389 	ld	(#_bgY + 1),a
                                   4390 ;main.c:435: playerY = limitedPlayerY;
      0012A8 21r2Er00              4391 	ld	hl, #_playerY
      0012AB 79                    4392 	ld	a, c
      0012AC 22                    4393 	ld	(hl+), a
                                   4394 ;main.c:436: playerDrawY=playerY >> 5;
      0012AD 78                    4395 	ld	a, b
      0012AE 32                    4396 	ld	(hl-), a
      0012AF 2A                    4397 	ld	a, (hl+)
      0012B0 4F                    4398 	ld	c, a
      0012B1 46                    4399 	ld	b, (hl)
      0012B2 CB 38                 4400 	srl	b
      0012B4 CB 19                 4401 	rr	c
      0012B6 CB 38                 4402 	srl	b
      0012B8 CB 19                 4403 	rr	c
      0012BA CB 38                 4404 	srl	b
      0012BC CB 19                 4405 	rr	c
      0012BE CB 38                 4406 	srl	b
      0012C0 CB 19                 4407 	rr	c
      0012C2 CB 38                 4408 	srl	b
      0012C4 CB 19                 4409 	rr	c
      0012C6 21r31r00              4410 	ld	hl, #_playerDrawY
      0012C9 71                    4411 	ld	(hl), c
      0012CA 18 05                 4412 	jr	00122$
      0012CC                       4413 00121$:
                                   4414 ;main.c:441: ySpeed = 0;
      0012CC 21r2Br00              4415 	ld	hl, #_ySpeed
      0012CF 36 00                 4416 	ld	(hl), #0x00
      0012D1                       4417 00122$:
                                   4418 ;main.c:445: move_sprite(0, playerDrawX, playerDrawY);
      0012D1 21r31r00              4419 	ld	hl, #_playerDrawY
      0012D4 4E                    4420 	ld	c, (hl)
      0012D5 21r30r00              4421 	ld	hl, #_playerDrawX
      0012D8 46                    4422 	ld	b, (hl)
                                   4423 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0012D9 21r00r00              4424 	ld	hl, #_shadow_OAM
                                   4425 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0012DC 79                    4426 	ld	a, c
      0012DD 22                    4427 	ld	(hl+), a
      0012DE 70                    4428 	ld	(hl), b
                                   4429 ;main.c:448: if (bgX >= 256) {
      0012DF 21r32r00              4430 	ld	hl, #_bgX
      0012E2 2A                    4431 	ld	a, (hl+)
      0012E3 4F                    4432 	ld	c, a
      0012E4 46                    4433 	ld	b, (hl)
      0012E5 78                    4434 	ld	a, b
      0012E6 EE 80                 4435 	xor	a, #0x80
      0012E8 D6 81                 4436 	sub	a, #0x81
      0012EA 38 0F                 4437 	jr	C, 00124$
                                   4438 ;main.c:449: bgX = bgX % 256;
      0012EC AF                    4439 	xor	a, a
      0012ED 3C                    4440 	inc	a
      0012EE F5                    4441 	push	af
      0012EF C5                    4442 	push	bc
      0012F0 CDr00r00              4443 	call	__modsint
      0012F3 E8 04                 4444 	add	sp, #4
      0012F5 21r32r00              4445 	ld	hl, #_bgX
      0012F8 7B                    4446 	ld	a, e
      0012F9 22                    4447 	ld	(hl+), a
      0012FA 72                    4448 	ld	(hl), d
      0012FB                       4449 00124$:
                                   4450 ;main.c:451: if (bgX < 0) {
      0012FB 21r32r00              4451 	ld	hl, #_bgX
      0012FE 2A                    4452 	ld	a, (hl+)
      0012FF 4F                    4453 	ld	c, a
      001300 46                    4454 	ld	b, (hl)
      001301 CB 78                 4455 	bit	7, b
      001303 28 15                 4456 	jr	Z, 00126$
                                   4457 ;main.c:452: bgX = 255 - (bgX % 256);
      001305 AF                    4458 	xor	a, a
      001306 3C                    4459 	inc	a
      001307 F5                    4460 	push	af
      001308 C5                    4461 	push	bc
      001309 CDr00r00              4462 	call	__modsint
      00130C E8 04                 4463 	add	sp, #4
      00130E 3E FF                 4464 	ld	a, #0xff
      001310 93                    4465 	sub	a, e
      001311 4F                    4466 	ld	c, a
      001312 9F                    4467 	sbc	a, a
      001313 92                    4468 	sub	a, d
      001314 21r32r00              4469 	ld	hl, #_bgX
      001317 71                    4470 	ld	(hl), c
      001318 23                    4471 	inc	hl
      001319 77                    4472 	ld	(hl), a
      00131A                       4473 00126$:
                                   4474 ;main.c:454: if (bgY >= 256) {
      00131A 21r34r00              4475 	ld	hl, #_bgY
      00131D 2A                    4476 	ld	a, (hl+)
      00131E 4F                    4477 	ld	c, a
      00131F 46                    4478 	ld	b, (hl)
      001320 78                    4479 	ld	a, b
      001321 EE 80                 4480 	xor	a, #0x80
      001323 D6 81                 4481 	sub	a, #0x81
      001325 38 0F                 4482 	jr	C, 00128$
                                   4483 ;main.c:455: bgY = bgY % 256;
      001327 AF                    4484 	xor	a, a
      001328 3C                    4485 	inc	a
      001329 F5                    4486 	push	af
      00132A C5                    4487 	push	bc
      00132B CDr00r00              4488 	call	__modsint
      00132E E8 04                 4489 	add	sp, #4
      001330 21r34r00              4490 	ld	hl, #_bgY
      001333 7B                    4491 	ld	a, e
      001334 22                    4492 	ld	(hl+), a
      001335 72                    4493 	ld	(hl), d
      001336                       4494 00128$:
                                   4495 ;main.c:457: if (bgY < 0) {
      001336 21r34r00              4496 	ld	hl, #_bgY
      001339 2A                    4497 	ld	a, (hl+)
      00133A 4F                    4498 	ld	c, a
      00133B 46                    4499 	ld	b, (hl)
      00133C CB 78                 4500 	bit	7, b
      00133E 28 15                 4501 	jr	Z, 00130$
                                   4502 ;main.c:458: bgY = 255 - (bgY % 256);
      001340 AF                    4503 	xor	a, a
      001341 3C                    4504 	inc	a
      001342 F5                    4505 	push	af
      001343 C5                    4506 	push	bc
      001344 CDr00r00              4507 	call	__modsint
      001347 E8 04                 4508 	add	sp, #4
      001349 3E FF                 4509 	ld	a, #0xff
      00134B 93                    4510 	sub	a, e
      00134C 4F                    4511 	ld	c, a
      00134D 9F                    4512 	sbc	a, a
      00134E 92                    4513 	sub	a, d
      00134F 21r34r00              4514 	ld	hl, #_bgY
      001352 71                    4515 	ld	(hl), c
      001353 23                    4516 	inc	hl
      001354 77                    4517 	ld	(hl), a
      001355                       4518 00130$:
                                   4519 ;main.c:461: move_bkg(bgX, bgY);
      001355 21r34r00              4520 	ld	hl, #_bgY
      001358 4E                    4521 	ld	c, (hl)
      001359 FAr32r00              4522 	ld	a, (#_bgX)
      00135C E0r00                 4523 	ldh	(_SCX_REG + 0), a
                                   4524 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      00135E 79                    4525 	ld	a, c
      00135F E0r00                 4526 	ldh	(_SCY_REG + 0), a
                                   4527 ;main.c:464: if (ySpeed > 0) ySpeed--;
      001361 21r2Br00              4528 	ld	hl, #_ySpeed
      001364 5E                    4529 	ld	e, (hl)
      001365 AF                    4530 	xor	a, a
      001366 57                    4531 	ld	d, a
      001367 96                    4532 	sub	a, (hl)
      001368 CB 7B                 4533 	bit	7, e
      00136A 28 07                 4534 	jr	Z, 00237$
      00136C CB 7A                 4535 	bit	7, d
      00136E 20 08                 4536 	jr	NZ, 00238$
      001370 BF                    4537 	cp	a, a
      001371 18 05                 4538 	jr	00238$
      001373                       4539 00237$:
      001373 CB 7A                 4540 	bit	7, d
      001375 28 01                 4541 	jr	Z, 00238$
      001377 37                    4542 	scf
      001378                       4543 00238$:
      001378 30 04                 4544 	jr	NC, 00132$
      00137A 21r2Br00              4545 	ld	hl, #_ySpeed
      00137D 35                    4546 	dec	(hl)
      00137E                       4547 00132$:
                                   4548 ;main.c:465: if (ySpeed < 0) ySpeed++;
      00137E 21r2Br00              4549 	ld	hl, #_ySpeed
      001381 CB 7E                 4550 	bit	7, (hl)
      001383 28 01                 4551 	jr	Z, 00134$
      001385 34                    4552 	inc	(hl)
      001386                       4553 00134$:
                                   4554 ;main.c:466: if (xSpeed > 0) xSpeed--;
      001386 21r2Ar00              4555 	ld	hl, #_xSpeed
      001389 5E                    4556 	ld	e, (hl)
      00138A AF                    4557 	xor	a, a
      00138B 57                    4558 	ld	d, a
      00138C 96                    4559 	sub	a, (hl)
      00138D CB 7B                 4560 	bit	7, e
      00138F 28 07                 4561 	jr	Z, 00239$
      001391 CB 7A                 4562 	bit	7, d
      001393 20 08                 4563 	jr	NZ, 00240$
      001395 BF                    4564 	cp	a, a
      001396 18 05                 4565 	jr	00240$
      001398                       4566 00239$:
      001398 CB 7A                 4567 	bit	7, d
      00139A 28 01                 4568 	jr	Z, 00240$
      00139C 37                    4569 	scf
      00139D                       4570 00240$:
      00139D 30 04                 4571 	jr	NC, 00136$
      00139F 21r2Ar00              4572 	ld	hl, #_xSpeed
      0013A2 35                    4573 	dec	(hl)
      0013A3                       4574 00136$:
                                   4575 ;main.c:467: if (xSpeed < 0) xSpeed++;
      0013A3 21r2Ar00              4576 	ld	hl, #_xSpeed
      0013A6 CB 7E                 4577 	bit	7, (hl)
      0013A8 C8                    4578 	ret	Z
      0013A9 34                    4579 	inc	(hl)
                                   4580 ;main.c:471: }
      0013AA C9                    4581 	ret
                                   4582 ;main.c:473: void takeDamage(int16_t amount) {
                                   4583 ;	---------------------------------
                                   4584 ; Function takeDamage
                                   4585 ; ---------------------------------
      0013AB                       4586 _takeDamage::
      0013AB 3B                    4587 	dec	sp
                                   4588 ;main.c:474: if (amount > shield) {
      0013AC FAr93r00              4589 	ld	a, (#_shield)
      0013AF 4F                    4590 	ld	c, a
      0013B0 07                    4591 	rlca
      0013B1 9F                    4592 	sbc	a, a
      0013B2 47                    4593 	ld	b, a
                                   4594 ;main.c:476: hull -= (amount - shield);
      0013B3 F8 03                 4595 	ldhl	sp,	#3
      0013B5 7E                    4596 	ld	a, (hl)
      0013B6 F8 00                 4597 	ldhl	sp,	#0
      0013B8 77                    4598 	ld	(hl), a
                                   4599 ;main.c:474: if (amount > shield) {
      0013B9 F8 03                 4600 	ldhl	sp,	#3
      0013BB 79                    4601 	ld	a, c
      0013BC 96                    4602 	sub	a, (hl)
      0013BD 23                    4603 	inc	hl
      0013BE 78                    4604 	ld	a, b
      0013BF 9E                    4605 	sbc	a, (hl)
      0013C0 78                    4606 	ld	a, b
      0013C1 57                    4607 	ld	d, a
      0013C2 CB 7E                 4608 	bit	7, (hl)
      0013C4 28 07                 4609 	jr	Z, 00111$
      0013C6 CB 7A                 4610 	bit	7, d
      0013C8 20 08                 4611 	jr	NZ, 00112$
      0013CA BF                    4612 	cp	a, a
      0013CB 18 05                 4613 	jr	00112$
      0013CD                       4614 00111$:
      0013CD CB 7A                 4615 	bit	7, d
      0013CF 28 01                 4616 	jr	Z, 00112$
      0013D1 37                    4617 	scf
      0013D2                       4618 00112$:
      0013D2 30 10                 4619 	jr	NC, 00102$
                                   4620 ;main.c:475: shield = 0;
      0013D4 21r93r00              4621 	ld	hl, #_shield
      0013D7 36 00                 4622 	ld	(hl), #0x00
                                   4623 ;main.c:476: hull -= (amount - shield);
      0013D9 FAr92r00              4624 	ld	a, (#_hull)
      0013DC F8 00                 4625 	ldhl	sp,	#0
      0013DE 96                    4626 	sub	a, (hl)
      0013DF EAr92r00              4627 	ld	(#_hull),a
      0013E2 18 09                 4628 	jr	00104$
      0013E4                       4629 00102$:
                                   4630 ;main.c:479: shield -= amount;
      0013E4 FAr93r00              4631 	ld	a, (#_shield)
      0013E7 F8 00                 4632 	ldhl	sp,	#0
      0013E9 96                    4633 	sub	a, (hl)
      0013EA EAr93r00              4634 	ld	(#_shield),a
      0013ED                       4635 00104$:
                                   4636 ;main.c:481: }
      0013ED 33                    4637 	inc	sp
      0013EE C9                    4638 	ret
                                   4639 ;main.c:483: void checkCollision() {
                                   4640 ;	---------------------------------
                                   4641 ; Function checkCollision
                                   4642 ; ---------------------------------
      0013EF                       4643 _checkCollision::
      0013EF E8 F2                 4644 	add	sp, #-14
                                   4645 ;main.c:486: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0013F1 F8 0D                 4646 	ldhl	sp,	#13
      0013F3 36 00                 4647 	ld	(hl), #0x00
      0013F5                       4648 00112$:
      0013F5 21r19r05              4649 	ld	hl, #_ENEMYCOUNT
      0013F8 4E                    4650 	ld	c, (hl)
      0013F9 F8 0D                 4651 	ldhl	sp,	#13
      0013FB 7E                    4652 	ld	a, (hl)
      0013FC 91                    4653 	sub	a, c
      0013FD D2r6Fr15              4654 	jp	NC, 00114$
                                   4655 ;main.c:487: if (enemies[i].visible && enemies[i].alive) {
      001400 4E                    4656 	ld	c, (hl)
      001401 06 00                 4657 	ld	b, #0x00
      001403 69                    4658 	ld	l, c
      001404 60                    4659 	ld	h, b
      001405 29                    4660 	add	hl, hl
      001406 29                    4661 	add	hl, hl
      001407 09                    4662 	add	hl, bc
      001408 29                    4663 	add	hl, hl
      001409 29                    4664 	add	hl, hl
      00140A 01r00r00              4665 	ld	bc,#_enemies
      00140D 09                    4666 	add	hl,bc
      00140E 33                    4667 	inc	sp
      00140F 33                    4668 	inc	sp
      001410 5D                    4669 	ld	e, l
      001411 54                    4670 	ld	d, h
      001412 D5                    4671 	push	de
      001413 21 0B 00              4672 	ld	hl, #0x000b
      001416 19                    4673 	add	hl, de
      001417 4D                    4674 	ld	c, l
      001418 44                    4675 	ld	b, h
      001419 0A                    4676 	ld	a, (bc)
      00141A F8 0C                 4677 	ldhl	sp,	#12
      00141C 77                    4678 	ld	(hl), a
      00141D 7E                    4679 	ld	a, (hl)
      00141E B7                    4680 	or	a, a
      00141F CAr69r15              4681 	jp	Z, 00113$
      001422 D1                    4682 	pop	de
      001423 D5                    4683 	push	de
      001424 21 0A 00              4684 	ld	hl, #0x000a
      001427 19                    4685 	add	hl, de
      001428 E5                    4686 	push	hl
      001429 7D                    4687 	ld	a, l
      00142A F8 04                 4688 	ldhl	sp,	#4
      00142C 77                    4689 	ld	(hl), a
      00142D E1                    4690 	pop	hl
      00142E 7C                    4691 	ld	a, h
      00142F F8 03                 4692 	ldhl	sp,	#3
      001431 32                    4693 	ld	(hl-), a
      001432 2A                    4694 	ld	a, (hl+)
      001433 5F                    4695 	ld	e, a
      001434 56                    4696 	ld	d, (hl)
      001435 1A                    4697 	ld	a, (de)
      001436 B7                    4698 	or	a, a
      001437 CAr69r15              4699 	jp	Z, 00113$
                                   4700 ;main.c:488: uint8_t x = enemies[i].x;
                                   4701 ;main.c:489: uint8_t y = enemies[i].y;
      00143A 23                    4702 	inc	hl
      00143B D1                    4703 	pop	de
      00143C D5                    4704 	push	de
      00143D 1A                    4705 	ld	a, (de)
      00143E 4F                    4706 	ld	c, a
      00143F D1                    4707 	pop	de
      001440 D5                    4708 	push	de
      001441 13                    4709 	inc	de
      001442 13                    4710 	inc	de
      001443 1A                    4711 	ld	a, (de)
      001444 77                    4712 	ld	(hl), a
                                   4713 ;main.c:491: if (x > playerDrawX - PLAYERSIZE && x - (8>>(enemies[i].spriteCount-1)) < playerDrawX
      001445 FAr30r00              4714 	ld	a, (#_playerDrawX)
      001448 F8 0B                 4715 	ldhl	sp,	#11
      00144A 22                    4716 	ld	(hl+), a
      00144B 36 00                 4717 	ld	(hl), #0x00
      00144D FAr27r00              4718 	ld	a, (#_PLAYERSIZE)
      001450 F8 05                 4719 	ldhl	sp,	#5
      001452 22                    4720 	ld	(hl+), a
      001453 36 00                 4721 	ld	(hl), #0x00
      001455 F8 0B                 4722 	ldhl	sp,#11
      001457 2A                    4723 	ld	a, (hl+)
      001458 5F                    4724 	ld	e, a
      001459 56                    4725 	ld	d, (hl)
      00145A F8 05                 4726 	ldhl	sp,	#5
      00145C 2A                    4727 	ld	a,	(hl+)
      00145D 66                    4728 	ld	h, (hl)
      00145E 6F                    4729 	ld	l, a
      00145F 7B                    4730 	ld	a, e
      001460 95                    4731 	sub	a, l
      001461 5F                    4732 	ld	e, a
      001462 7A                    4733 	ld	a, d
      001463 9C                    4734 	sbc	a, h
      001464 F8 0A                 4735 	ldhl	sp,	#10
      001466 32                    4736 	ld	(hl-), a
      001467 73                    4737 	ld	(hl), e
      001468 06 00                 4738 	ld	b, #0x00
      00146A 2A                    4739 	ld	a, (hl+)
      00146B 91                    4740 	sub	a, c
      00146C 7E                    4741 	ld	a, (hl)
      00146D 98                    4742 	sbc	a, b
      00146E 56                    4743 	ld	d, (hl)
      00146F 78                    4744 	ld	a, b
      001470 CB 7F                 4745 	bit	7,a
      001472 28 07                 4746 	jr	Z, 00157$
      001474 CB 7A                 4747 	bit	7, d
      001476 20 08                 4748 	jr	NZ, 00158$
      001478 BF                    4749 	cp	a, a
      001479 18 05                 4750 	jr	00158$
      00147B                       4751 00157$:
      00147B CB 7A                 4752 	bit	7, d
      00147D 28 01                 4753 	jr	Z, 00158$
      00147F 37                    4754 	scf
      001480                       4755 00158$:
      001480 D2r69r15              4756 	jp	NC, 00113$
      001483 D1                    4757 	pop	de
      001484 D5                    4758 	push	de
      001485 21 08 00              4759 	ld	hl, #0x0008
      001488 19                    4760 	add	hl, de
      001489 5D                    4761 	ld	e, l
      00148A 54                    4762 	ld	d, h
      00148B 1A                    4763 	ld	a, (de)
      00148C 5F                    4764 	ld	e, a
      00148D 1D                    4765 	dec	e
      00148E F8 07                 4766 	ldhl	sp,	#7
      001490 3E 08                 4767 	ld	a, #0x08
      001492 22                    4768 	ld	(hl+), a
      001493 AF                    4769 	xor	a, a
      001494 77                    4770 	ld	(hl), a
      001495 1C                    4771 	inc	e
      001496 18 07                 4772 	jr	00160$
      001498                       4773 00159$:
      001498 F8 08                 4774 	ldhl	sp,	#8
      00149A CB 2E                 4775 	sra	(hl)
      00149C 2B                    4776 	dec	hl
      00149D CB 1E                 4777 	rr	(hl)
      00149F                       4778 00160$:
      00149F 1D                    4779 	dec	e
      0014A0 20 F6                 4780 	jr	NZ, 00159$
      0014A2 F8 07                 4781 	ldhl	sp,#7
      0014A4 2A                    4782 	ld	a, (hl+)
      0014A5 5F                    4783 	ld	e, a
      0014A6 56                    4784 	ld	d, (hl)
      0014A7 79                    4785 	ld	a, c
      0014A8 93                    4786 	sub	a, e
      0014A9 5F                    4787 	ld	e, a
      0014AA 78                    4788 	ld	a, b
      0014AB 9A                    4789 	sbc	a, d
      0014AC 47                    4790 	ld	b, a
      0014AD 4B                    4791 	ld	c, e
      0014AE F8 0B                 4792 	ldhl	sp,	#11
      0014B0 79                    4793 	ld	a, c
      0014B1 96                    4794 	sub	a, (hl)
      0014B2 23                    4795 	inc	hl
      0014B3 78                    4796 	ld	a, b
      0014B4 9E                    4797 	sbc	a, (hl)
      0014B5 78                    4798 	ld	a, b
      0014B6 57                    4799 	ld	d, a
      0014B7 CB 7E                 4800 	bit	7, (hl)
      0014B9 28 07                 4801 	jr	Z, 00161$
      0014BB CB 7A                 4802 	bit	7, d
      0014BD 20 08                 4803 	jr	NZ, 00162$
      0014BF BF                    4804 	cp	a, a
      0014C0 18 05                 4805 	jr	00162$
      0014C2                       4806 00161$:
      0014C2 CB 7A                 4807 	bit	7, d
      0014C4 28 01                 4808 	jr	Z, 00162$
      0014C6 37                    4809 	scf
      0014C7                       4810 00162$:
      0014C7 D2r69r15              4811 	jp	NC, 00113$
                                   4812 ;main.c:492: && y > playerDrawY - PLAYERSIZE && y -(8>>(enemies[i].spriteCount-1)) < playerDrawY ) 
      0014CA FAr31r00              4813 	ld	a, (#_playerDrawY)
      0014CD F8 09                 4814 	ldhl	sp,	#9
      0014CF 22                    4815 	ld	(hl+), a
      0014D0 AF                    4816 	xor	a, a
      0014D1 32                    4817 	ld	(hl-), a
      0014D2 2A                    4818 	ld	a, (hl+)
      0014D3 5F                    4819 	ld	e, a
      0014D4 56                    4820 	ld	d, (hl)
      0014D5 F8 05                 4821 	ldhl	sp,	#5
      0014D7 2A                    4822 	ld	a,	(hl+)
      0014D8 66                    4823 	ld	h, (hl)
      0014D9 6F                    4824 	ld	l, a
      0014DA 7B                    4825 	ld	a, e
      0014DB 95                    4826 	sub	a, l
      0014DC 5F                    4827 	ld	e, a
      0014DD 7A                    4828 	ld	a, d
      0014DE 9C                    4829 	sbc	a, h
      0014DF F8 0C                 4830 	ldhl	sp,	#12
      0014E1 32                    4831 	ld	(hl-), a
      0014E2 73                    4832 	ld	(hl), e
      0014E3 F8 04                 4833 	ldhl	sp,	#4
      0014E5 4E                    4834 	ld	c, (hl)
      0014E6 06 00                 4835 	ld	b, #0x00
      0014E8 F8 0B                 4836 	ldhl	sp,	#11
      0014EA 2A                    4837 	ld	a, (hl+)
      0014EB 91                    4838 	sub	a, c
      0014EC 7E                    4839 	ld	a, (hl)
      0014ED 98                    4840 	sbc	a, b
      0014EE 56                    4841 	ld	d, (hl)
      0014EF 78                    4842 	ld	a, b
      0014F0 CB 7F                 4843 	bit	7,a
      0014F2 28 07                 4844 	jr	Z, 00163$
      0014F4 CB 7A                 4845 	bit	7, d
      0014F6 20 08                 4846 	jr	NZ, 00164$
      0014F8 BF                    4847 	cp	a, a
      0014F9 18 05                 4848 	jr	00164$
      0014FB                       4849 00163$:
      0014FB CB 7A                 4850 	bit	7, d
      0014FD 28 01                 4851 	jr	Z, 00164$
      0014FF 37                    4852 	scf
      001500                       4853 00164$:
      001500 30 67                 4854 	jr	NC, 00113$
      001502 F8 07                 4855 	ldhl	sp,#7
      001504 2A                    4856 	ld	a, (hl+)
      001505 5F                    4857 	ld	e, a
      001506 2A                    4858 	ld	a, (hl+)
      001507 57                    4859 	ld	d, a
      001508 79                    4860 	ld	a, c
      001509 93                    4861 	sub	a, e
      00150A 5F                    4862 	ld	e, a
      00150B 78                    4863 	ld	a, b
      00150C 9A                    4864 	sbc	a, d
      00150D 47                    4865 	ld	b, a
      00150E 7B                    4866 	ld	a, e
      00150F 96                    4867 	sub	a, (hl)
      001510 23                    4868 	inc	hl
      001511 78                    4869 	ld	a, b
      001512 9E                    4870 	sbc	a, (hl)
      001513 78                    4871 	ld	a, b
      001514 57                    4872 	ld	d, a
      001515 CB 7E                 4873 	bit	7, (hl)
      001517 28 07                 4874 	jr	Z, 00165$
      001519 CB 7A                 4875 	bit	7, d
      00151B 20 08                 4876 	jr	NZ, 00166$
      00151D BF                    4877 	cp	a, a
      00151E 18 05                 4878 	jr	00166$
      001520                       4879 00165$:
      001520 CB 7A                 4880 	bit	7, d
      001522 28 01                 4881 	jr	Z, 00166$
      001524 37                    4882 	scf
      001525                       4883 00166$:
      001525 30 42                 4884 	jr	NC, 00113$
                                   4885 ;main.c:494: set_sprite_tile(10+i, 0x7f);
      001527 F8 0D                 4886 	ldhl	sp,	#13
      001529 7E                    4887 	ld	a, (hl)
      00152A C6 0A                 4888 	add	a, #0x0a
      00152C 4F                    4889 	ld	c, a
                                   4890 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00152D 26 00                 4891 	ld	h, #0x00
                                   4892 ;	spillPairReg hl
                                   4893 ;	spillPairReg hl
      00152F 69                    4894 	ld	l, c
      001530 29                    4895 	add	hl, hl
      001531 29                    4896 	add	hl, hl
      001532 11r00r00              4897 	ld	de, #_shadow_OAM
      001535 19                    4898 	add	hl, de
      001536 23                    4899 	inc	hl
      001537 23                    4900 	inc	hl
      001538 36 7F                 4901 	ld	(hl), #0x7f
                                   4902 ;main.c:495: enemies[i].alive = 0;
      00153A F8 02                 4903 	ldhl	sp,	#2
      00153C 2A                    4904 	ld	a,	(hl+)
      00153D 66                    4905 	ld	h, (hl)
      00153E 6F                    4906 	ld	l, a
      00153F 36 00                 4907 	ld	(hl), #0x00
                                   4908 ;main.c:496: takeDamage(enemies[i].damage);
      001541 D1                    4909 	pop	de
      001542 D5                    4910 	push	de
      001543 21 0C 00              4911 	ld	hl, #0x000c
      001546 19                    4912 	add	hl, de
      001547 E5                    4913 	push	hl
      001548 7D                    4914 	ld	a, l
      001549 F8 0D                 4915 	ldhl	sp,	#13
      00154B 77                    4916 	ld	(hl), a
      00154C E1                    4917 	pop	hl
      00154D 7C                    4918 	ld	a, h
      00154E F8 0C                 4919 	ldhl	sp,	#12
      001550 32                    4920 	ld	(hl-), a
      001551 2A                    4921 	ld	a, (hl+)
      001552 5F                    4922 	ld	e, a
      001553 56                    4923 	ld	d, (hl)
      001554 1A                    4924 	ld	a, (de)
      001555 77                    4925 	ld	(hl), a
      001556 3A                    4926 	ld	a, (hl-)
      001557 22                    4927 	ld	(hl+), a
      001558 AF                    4928 	xor	a, a
      001559 32                    4929 	ld	(hl-), a
      00155A 2A                    4930 	ld	a, (hl+)
      00155B 5F                    4931 	ld	e, a
      00155C 56                    4932 	ld	d, (hl)
      00155D D5                    4933 	push	de
      00155E CDrABr13              4934 	call	_takeDamage
      001561 E1                    4935 	pop	hl
                                   4936 ;main.c:497: initEnemies(0);
      001562 AF                    4937 	xor	a, a
      001563 F5                    4938 	push	af
      001564 33                    4939 	inc	sp
      001565 CDr6Fr0E              4940 	call	_initEnemies
      001568 33                    4941 	inc	sp
      001569                       4942 00113$:
                                   4943 ;main.c:486: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001569 F8 0D                 4944 	ldhl	sp,	#13
      00156B 34                    4945 	inc	(hl)
      00156C C3rF5r13              4946 	jp	00112$
      00156F                       4947 00114$:
                                   4948 ;main.c:518: }
      00156F E8 0E                 4949 	add	sp, #14
      001571 C9                    4950 	ret
                                   4951 ;main.c:521: void updateShieldsAndHull() {
                                   4952 ;	---------------------------------
                                   4953 ; Function updateShieldsAndHull
                                   4954 ; ---------------------------------
      001572                       4955 _updateShieldsAndHull::
                                   4956 ;main.c:522: if (shield < maxShield) {
      001572 21r37r00              4957 	ld	hl, #_maxShield
      001575 5E                    4958 	ld	e, (hl)
      001576 FAr93r00              4959 	ld	a, (#_shield)
      001579 57                    4960 	ld	d,a
      00157A 21r37r00              4961 	ld	hl, #_maxShield
      00157D 96                    4962 	sub	a, (hl)
      00157E CB 7B                 4963 	bit	7, e
      001580 28 07                 4964 	jr	Z, 00110$
      001582 CB 7A                 4965 	bit	7, d
      001584 20 08                 4966 	jr	NZ, 00111$
      001586 BF                    4967 	cp	a, a
      001587 18 05                 4968 	jr	00111$
      001589                       4969 00110$:
      001589 CB 7A                 4970 	bit	7, d
      00158B 28 01                 4971 	jr	Z, 00111$
      00158D 37                    4972 	scf
      00158E                       4973 00111$:
      00158E 30 04                 4974 	jr	NC, 00102$
                                   4975 ;main.c:523: shield += 1;
      001590 21r93r00              4976 	ld	hl, #_shield
      001593 34                    4977 	inc	(hl)
      001594                       4978 00102$:
                                   4979 ;main.c:525: setHealthBar(0, hull);
      001594 FAr92r00              4980 	ld	a, (#_hull)
      001597 67                    4981 	ld	h, a
      001598 2E 00                 4982 	ld	l, #0x00
      00159A E5                    4983 	push	hl
      00159B CDr2Br05              4984 	call	_setHealthBar
      00159E E1                    4985 	pop	hl
                                   4986 ;main.c:526: setHealthBar(1, shield);
      00159F FAr93r00              4987 	ld	a, (#_shield)
      0015A2 67                    4988 	ld	h, a
      0015A3 2E 01                 4989 	ld	l, #0x01
      0015A5 E5                    4990 	push	hl
      0015A6 CDr2Br05              4991 	call	_setHealthBar
      0015A9 E1                    4992 	pop	hl
                                   4993 ;main.c:527: }
      0015AA C9                    4994 	ret
                                   4995 ;main.c:529: void fire() {
                                   4996 ;	---------------------------------
                                   4997 ; Function fire
                                   4998 ; ---------------------------------
      0015AB                       4999 _fire::
                                   5000 ;main.c:536: oldestProjectile += 1;
      0015AB 21r25r00              5001 	ld	hl, #_oldestProjectile
      0015AE 34                    5002 	inc	(hl)
      0015AF 7E                    5003 	ld	a, (hl)
                                   5004 ;main.c:537: if (oldestProjectile >= PROJECTILECOUNT) {
      0015B0 21r2Ar05              5005 	ld	hl, #_PROJECTILECOUNT
      0015B3 4E                    5006 	ld	c, (hl)
      0015B4 21r25r00              5007 	ld	hl, #_oldestProjectile
      0015B7 7E                    5008 	ld	a, (hl)
      0015B8 91                    5009 	sub	a, c
      0015B9 38 02                 5010 	jr	C, 00102$
                                   5011 ;main.c:538: oldestProjectile = 0;
      0015BB 36 00                 5012 	ld	(hl), #0x00
      0015BD                       5013 00102$:
                                   5014 ;main.c:541: projectiles[oldestProjectile] = weakProjectile;
      0015BD 21r25r00              5015 	ld	hl, #_oldestProjectile
      0015C0 4E                    5016 	ld	c, (hl)
      0015C1 06 00                 5017 	ld	b, #0x00
      0015C3 69                    5018 	ld	l, c
      0015C4 60                    5019 	ld	h, b
      0015C5 29                    5020 	add	hl, hl
      0015C6 29                    5021 	add	hl, hl
      0015C7 29                    5022 	add	hl, hl
      0015C8 09                    5023 	add	hl, bc
      0015C9 01r64r00              5024 	ld	bc,#_projectiles
      0015CC 09                    5025 	add	hl,bc
      0015CD 11 09 00              5026 	ld	de, #0x0009
      0015D0 D5                    5027 	push	de
      0015D1 11r1Cr00              5028 	ld	de, #_weakProjectile
      0015D4 D5                    5029 	push	de
      0015D5 E5                    5030 	push	hl
      0015D6 CDr00r00              5031 	call	___memcpy
      0015D9 E8 06                 5032 	add	sp, #6
                                   5033 ;main.c:542: projectiles[oldestProjectile].x = playerDrawX;
      0015DB 21r25r00              5034 	ld	hl, #_oldestProjectile
      0015DE 4E                    5035 	ld	c, (hl)
      0015DF 06 00                 5036 	ld	b, #0x00
      0015E1 69                    5037 	ld	l, c
      0015E2 60                    5038 	ld	h, b
      0015E3 29                    5039 	add	hl, hl
      0015E4 29                    5040 	add	hl, hl
      0015E5 29                    5041 	add	hl, hl
      0015E6 09                    5042 	add	hl, bc
      0015E7 01r64r00              5043 	ld	bc,#_projectiles
      0015EA 09                    5044 	add	hl,bc
      0015EB E5                    5045 	push	hl
      0015EC FAr30r00              5046 	ld	a, (#_playerDrawX)
      0015EF E1                    5047 	pop	hl
      0015F0 0E 00                 5048 	ld	c, #0x00
      0015F2 22                    5049 	ld	(hl+), a
      0015F3 71                    5050 	ld	(hl), c
                                   5051 ;main.c:543: projectiles[oldestProjectile].y = playerDrawY;
      0015F4 21r25r00              5052 	ld	hl, #_oldestProjectile
      0015F7 4E                    5053 	ld	c, (hl)
      0015F8 06 00                 5054 	ld	b, #0x00
      0015FA 69                    5055 	ld	l, c
      0015FB 60                    5056 	ld	h, b
      0015FC 29                    5057 	add	hl, hl
      0015FD 29                    5058 	add	hl, hl
      0015FE 29                    5059 	add	hl, hl
      0015FF 09                    5060 	add	hl, bc
      001600 01r64r00              5061 	ld	bc,#_projectiles
      001603 09                    5062 	add	hl,bc
      001604 23                    5063 	inc	hl
      001605 23                    5064 	inc	hl
      001606 E5                    5065 	push	hl
      001607 FAr31r00              5066 	ld	a, (#_playerDrawY)
      00160A E1                    5067 	pop	hl
      00160B 0E 00                 5068 	ld	c, #0x00
      00160D 22                    5069 	ld	(hl+), a
      00160E 71                    5070 	ld	(hl), c
                                   5071 ;main.c:545: set_sprite_tile(20+oldestProjectile, 20);
      00160F FAr25r00              5072 	ld	a, (#_oldestProjectile)
      001612 C6 14                 5073 	add	a, #0x14
                                   5074 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001614 6F                    5075 	ld	l, a
      001615 01r00r00              5076 	ld	bc, #_shadow_OAM+0
                                   5077 ;	spillPairReg hl
                                   5078 ;	spillPairReg hl
      001618 26 00                 5079 	ld	h, #0x00
                                   5080 ;	spillPairReg hl
                                   5081 ;	spillPairReg hl
      00161A 29                    5082 	add	hl, hl
      00161B 29                    5083 	add	hl, hl
      00161C 09                    5084 	add	hl, bc
      00161D 23                    5085 	inc	hl
      00161E 23                    5086 	inc	hl
      00161F 36 14                 5087 	ld	(hl), #0x14
                                   5088 ;main.c:546: move_sprite(20+oldestProjectile, playerDrawX, playerDrawY);
      001621 21r31r00              5089 	ld	hl, #_playerDrawY
      001624 46                    5090 	ld	b, (hl)
      001625 21r30r00              5091 	ld	hl, #_playerDrawX
      001628 4E                    5092 	ld	c, (hl)
      001629 FAr25r00              5093 	ld	a, (#_oldestProjectile)
      00162C C6 14                 5094 	add	a, #0x14
                                   5095 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00162E 6F                    5096 	ld	l, a
                                   5097 ;	spillPairReg hl
                                   5098 ;	spillPairReg hl
      00162F 26 00                 5099 	ld	h, #0x00
                                   5100 ;	spillPairReg hl
                                   5101 ;	spillPairReg hl
      001631 29                    5102 	add	hl, hl
      001632 29                    5103 	add	hl, hl
      001633 11r00r00              5104 	ld	de, #_shadow_OAM
      001636 19                    5105 	add	hl, de
                                   5106 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001637 78                    5107 	ld	a, b
      001638 22                    5108 	ld	(hl+), a
      001639 71                    5109 	ld	(hl), c
                                   5110 ;main.c:547: fireCooldown = 30;
      00163A 21r26r00              5111 	ld	hl, #_fireCooldown
      00163D 36 1E                 5112 	ld	(hl), #0x1e
                                   5113 ;main.c:549: }
      00163F C9                    5114 	ret
                                   5115 ;main.c:552: void moveProjectiles() {
                                   5116 ;	---------------------------------
                                   5117 ; Function moveProjectiles
                                   5118 ; ---------------------------------
      001640                       5119 _moveProjectiles::
      001640 E8 F8                 5120 	add	sp, #-8
                                   5121 ;main.c:554: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001642 F8 07                 5122 	ldhl	sp,	#7
      001644 36 00                 5123 	ld	(hl), #0x00
      001646                       5124 00110$:
      001646 21r2Ar05              5125 	ld	hl, #_PROJECTILECOUNT
      001649 4E                    5126 	ld	c, (hl)
      00164A F8 07                 5127 	ldhl	sp,	#7
      00164C 7E                    5128 	ld	a, (hl)
      00164D 91                    5129 	sub	a, c
      00164E D2r59r17              5130 	jp	NC, 00112$
                                   5131 ;main.c:555: projectiles[i].x -= xOverflow;
      001651 4E                    5132 	ld	c, (hl)
      001652 06 00                 5133 	ld	b, #0x00
      001654 69                    5134 	ld	l, c
      001655 60                    5135 	ld	h, b
      001656 29                    5136 	add	hl, hl
      001657 29                    5137 	add	hl, hl
      001658 29                    5138 	add	hl, hl
      001659 09                    5139 	add	hl, bc
      00165A 01r64r00              5140 	ld	bc,#_projectiles
      00165D 09                    5141 	add	hl,bc
      00165E 33                    5142 	inc	sp
      00165F 33                    5143 	inc	sp
      001660 5D                    5144 	ld	e, l
      001661 54                    5145 	ld	d, h
      001662 D5                    5146 	push	de
      001663 1A                    5147 	ld	a, (de)
      001664 4F                    5148 	ld	c, a
      001665 13                    5149 	inc	de
      001666 1A                    5150 	ld	a, (de)
      001667 47                    5151 	ld	b, a
      001668 79                    5152 	ld	a, c
      001669 21r38r00              5153 	ld	hl, #_xOverflow
      00166C 96                    5154 	sub	a, (hl)
      00166D 23                    5155 	inc	hl
      00166E 4F                    5156 	ld	c, a
      00166F 78                    5157 	ld	a, b
      001670 9E                    5158 	sbc	a, (hl)
      001671 47                    5159 	ld	b, a
      001672 E1                    5160 	pop	hl
      001673 E5                    5161 	push	hl
      001674 79                    5162 	ld	a, c
      001675 22                    5163 	ld	(hl+), a
      001676 70                    5164 	ld	(hl), b
                                   5165 ;main.c:556: projectiles[i].y -= yOverflow;
      001677 D1                    5166 	pop	de
      001678 D5                    5167 	push	de
      001679 21 02 00              5168 	ld	hl, #0x0002
      00167C 19                    5169 	add	hl, de
      00167D E5                    5170 	push	hl
      00167E 7D                    5171 	ld	a, l
      00167F F8 04                 5172 	ldhl	sp,	#4
      001681 77                    5173 	ld	(hl), a
      001682 E1                    5174 	pop	hl
      001683 7C                    5175 	ld	a, h
      001684 F8 03                 5176 	ldhl	sp,	#3
      001686 32                    5177 	ld	(hl-), a
      001687 2A                    5178 	ld	a, (hl+)
      001688 5F                    5179 	ld	e, a
      001689 56                    5180 	ld	d, (hl)
      00168A 1A                    5181 	ld	a, (de)
      00168B 4F                    5182 	ld	c, a
      00168C 13                    5183 	inc	de
      00168D 1A                    5184 	ld	a, (de)
      00168E 47                    5185 	ld	b, a
      00168F 79                    5186 	ld	a, c
      001690 21r3Ar00              5187 	ld	hl, #_yOverflow
      001693 96                    5188 	sub	a, (hl)
      001694 23                    5189 	inc	hl
      001695 4F                    5190 	ld	c, a
      001696 78                    5191 	ld	a, b
      001697 9E                    5192 	sbc	a, (hl)
      001698 47                    5193 	ld	b, a
      001699 F8 02                 5194 	ldhl	sp,	#2
      00169B 2A                    5195 	ld	a,	(hl+)
      00169C 66                    5196 	ld	h, (hl)
      00169D 6F                    5197 	ld	l, a
      00169E 79                    5198 	ld	a, c
      00169F 22                    5199 	ld	(hl+), a
      0016A0 70                    5200 	ld	(hl), b
                                   5201 ;main.c:558: if (projectiles[i].active) {
      0016A1 D1                    5202 	pop	de
      0016A2 D5                    5203 	push	de
      0016A3 21 08 00              5204 	ld	hl, #0x0008
      0016A6 19                    5205 	add	hl, de
      0016A7 4D                    5206 	ld	c, l
      0016A8 44                    5207 	ld	b, h
      0016A9 0A                    5208 	ld	a, (bc)
      0016AA B7                    5209 	or	a, a
      0016AB CAr53r17              5210 	jp	Z, 00111$
                                   5211 ;main.c:559: int16_t newY = projectiles[i].y - 1;
      0016AE F8 02                 5212 	ldhl	sp,#2
      0016B0 2A                    5213 	ld	a, (hl+)
      0016B1 5F                    5214 	ld	e, a
                                   5215 ;main.c:560: move_sprite(20+i, projectiles[i].x, newY);
      0016B2 2A                    5216 	ld	a, (hl+)
      0016B3 57                    5217 	ld	d, a
      0016B4 1A                    5218 	ld	a, (de)
      0016B5 4F                    5219 	ld	c, a
      0016B6 13                    5220 	inc	de
      0016B7 1A                    5221 	ld	a, (de)
      0016B8 47                    5222 	ld	b, a
      0016B9 0B                    5223 	dec	bc
      0016BA 79                    5224 	ld	a, c
      0016BB 22                    5225 	ld	(hl+), a
      0016BC D1                    5226 	pop	de
      0016BD D5                    5227 	push	de
      0016BE 1A                    5228 	ld	a, (de)
      0016BF 22                    5229 	ld	(hl+), a
      0016C0 23                    5230 	inc	hl
      0016C1 3A                    5231 	ld	a, (hl-)
      0016C2 C6 14                 5232 	add	a, #0x14
      0016C4 77                    5233 	ld	(hl), a
      0016C5 5E                    5234 	ld	e, (hl)
                                   5235 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0016C6 26 00                 5236 	ld	h, #0x00
                                   5237 ;	spillPairReg hl
                                   5238 ;	spillPairReg hl
      0016C8 6B                    5239 	ld	l, e
      0016C9 29                    5240 	add	hl, hl
      0016CA 29                    5241 	add	hl, hl
      0016CB 7D                    5242 	ld	a, l
      0016CC C6r00                 5243 	add	a, #<(_shadow_OAM)
      0016CE 5F                    5244 	ld	e, a
      0016CF 7C                    5245 	ld	a, h
      0016D0 CEs00                 5246 	adc	a, #>(_shadow_OAM)
      0016D2 57                    5247 	ld	d, a
                                   5248 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0016D3 F8 04                 5249 	ldhl	sp,	#4
      0016D5 2A                    5250 	ld	a, (hl+)
      0016D6 12                    5251 	ld	(de), a
      0016D7 13                    5252 	inc	de
      0016D8 7E                    5253 	ld	a, (hl)
      0016D9 12                    5254 	ld	(de), a
                                   5255 ;main.c:561: projectiles[i].y = newY;
      0016DA F8 02                 5256 	ldhl	sp,	#2
      0016DC 2A                    5257 	ld	a,	(hl+)
      0016DD 66                    5258 	ld	h, (hl)
      0016DE 6F                    5259 	ld	l, a
      0016DF 79                    5260 	ld	a, c
      0016E0 22                    5261 	ld	(hl+), a
      0016E1 70                    5262 	ld	(hl), b
                                   5263 ;main.c:565: if (abs(projectiles[i].x - playerDrawX) > 100 || abs(projectiles[i].y - playerDrawY) > 100) {
      0016E2 D1                    5264 	pop	de
      0016E3 D5                    5265 	push	de
      0016E4 1A                    5266 	ld	a, (de)
      0016E5 21r30r00              5267 	ld	hl, #_playerDrawX
      0016E8 4E                    5268 	ld	c, (hl)
      0016E9 91                    5269 	sub	a, c
      0016EA F5                    5270 	push	af
      0016EB 33                    5271 	inc	sp
      0016EC CDrA2r08              5272 	call	_abs
      0016EF 33                    5273 	inc	sp
      0016F0 4B                    5274 	ld	c,e
      0016F1 3E 64                 5275 	ld	a,#0x64
      0016F3 57                    5276 	ld	d,a
      0016F4 91                    5277 	sub	a, c
      0016F5 CB 7B                 5278 	bit	7, e
      0016F7 28 07                 5279 	jr	Z, 00135$
      0016F9 CB 7A                 5280 	bit	7, d
      0016FB 20 08                 5281 	jr	NZ, 00136$
      0016FD BF                    5282 	cp	a, a
      0016FE 18 05                 5283 	jr	00136$
      001700                       5284 00135$:
      001700 CB 7A                 5285 	bit	7, d
      001702 28 01                 5286 	jr	Z, 00136$
      001704 37                    5287 	scf
      001705                       5288 00136$:
      001705 38 28                 5289 	jr	C, 00101$
      001707 F8 02                 5290 	ldhl	sp,#2
      001709 2A                    5291 	ld	a, (hl+)
      00170A 5F                    5292 	ld	e, a
      00170B 56                    5293 	ld	d, (hl)
      00170C 1A                    5294 	ld	a, (de)
      00170D 21r31r00              5295 	ld	hl, #_playerDrawY
      001710 4E                    5296 	ld	c, (hl)
      001711 91                    5297 	sub	a, c
      001712 F5                    5298 	push	af
      001713 33                    5299 	inc	sp
      001714 CDrA2r08              5300 	call	_abs
      001717 33                    5301 	inc	sp
      001718 4B                    5302 	ld	c,e
      001719 3E 64                 5303 	ld	a,#0x64
      00171B 57                    5304 	ld	d,a
      00171C 91                    5305 	sub	a, c
      00171D CB 7B                 5306 	bit	7, e
      00171F 28 07                 5307 	jr	Z, 00137$
      001721 CB 7A                 5308 	bit	7, d
      001723 20 08                 5309 	jr	NZ, 00138$
      001725 BF                    5310 	cp	a, a
      001726 18 05                 5311 	jr	00138$
      001728                       5312 00137$:
      001728 CB 7A                 5313 	bit	7, d
      00172A 28 01                 5314 	jr	Z, 00138$
      00172C 37                    5315 	scf
      00172D                       5316 00138$:
      00172D 30 24                 5317 	jr	NC, 00111$
      00172F                       5318 00101$:
                                   5319 ;main.c:566: projectiles[i].active = 0;
      00172F F8 07                 5320 	ldhl	sp,	#7
      001731 4E                    5321 	ld	c, (hl)
      001732 06 00                 5322 	ld	b, #0x00
      001734 69                    5323 	ld	l, c
      001735 60                    5324 	ld	h, b
      001736 29                    5325 	add	hl, hl
      001737 29                    5326 	add	hl, hl
      001738 29                    5327 	add	hl, hl
      001739 09                    5328 	add	hl, bc
      00173A 11r64r00              5329 	ld	de, #_projectiles
      00173D 19                    5330 	add	hl, de
      00173E 01 08 00              5331 	ld	bc, #0x0008
      001741 09                    5332 	add	hl, bc
      001742 36 00                 5333 	ld	(hl), #0x00
                                   5334 ;main.c:567: set_sprite_tile(20+i, 0x7f);
      001744 F8 06                 5335 	ldhl	sp,	#6
                                   5336 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001746 6E                    5337 	ld	l, (hl)
                                   5338 ;	spillPairReg hl
                                   5339 ;	spillPairReg hl
      001747 26 00                 5340 	ld	h, #0x00
                                   5341 ;	spillPairReg hl
                                   5342 ;	spillPairReg hl
      001749 29                    5343 	add	hl, hl
      00174A 29                    5344 	add	hl, hl
      00174B 11r00r00              5345 	ld	de, #_shadow_OAM
      00174E 19                    5346 	add	hl, de
      00174F 23                    5347 	inc	hl
      001750 23                    5348 	inc	hl
      001751 36 7F                 5349 	ld	(hl), #0x7f
                                   5350 ;main.c:567: set_sprite_tile(20+i, 0x7f);
      001753                       5351 00111$:
                                   5352 ;main.c:554: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001753 F8 07                 5353 	ldhl	sp,	#7
      001755 34                    5354 	inc	(hl)
      001756 C3r46r16              5355 	jp	00110$
      001759                       5356 00112$:
                                   5357 ;main.c:572: }
      001759 E8 08                 5358 	add	sp, #8
      00175B C9                    5359 	ret
                                   5360 ;main.c:575: void initProjectiles() {
                                   5361 ;	---------------------------------
                                   5362 ; Function initProjectiles
                                   5363 ; ---------------------------------
      00175C                       5364 _initProjectiles::
                                   5365 ;main.c:576: set_sprite_data(20, 2, projectile1);
      00175C 11r07r05              5366 	ld	de, #_projectile1
      00175F D5                    5367 	push	de
      001760 21 14 02              5368 	ld	hl, #0x214
      001763 E5                    5369 	push	hl
      001764 CDr00r00              5370 	call	_set_sprite_data
      001767 E8 04                 5371 	add	sp, #4
                                   5372 ;main.c:578: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001769 AF                    5373 	xor	a, a
      00176A                       5374 00103$:
      00176A 21r2Ar05              5375 	ld	hl, #_PROJECTILECOUNT
      00176D 4E                    5376 	ld	c, (hl)
      00176E B9                    5377 	cp	a, c
      00176F D0                    5378 	ret	NC
      001770 3C                    5379 	inc	a
                                   5380 ;main.c:582: }
      001771 18 F7                 5381 	jr	00103$
                                   5382 ;main.c:584: void initGame() {
                                   5383 ;	---------------------------------
                                   5384 ; Function initGame
                                   5385 ; ---------------------------------
      001773                       5386 _initGame::
                                   5387 ;main.c:587: xDir = 0;
      001773 21r28r00              5388 	ld	hl, #_xDir
      001776 36 00                 5389 	ld	(hl), #0x00
                                   5390 ;main.c:588: yDir = 0;
      001778 21r29r00              5391 	ld	hl, #_yDir
      00177B 36 00                 5392 	ld	(hl), #0x00
                                   5393 ;main.c:589: xSpeed = 0;
      00177D 21r2Ar00              5394 	ld	hl, #_xSpeed
      001780 36 00                 5395 	ld	(hl), #0x00
                                   5396 ;main.c:590: ySpeed = 0;
      001782 21r2Br00              5397 	ld	hl, #_ySpeed
      001785 36 00                 5398 	ld	(hl), #0x00
                                   5399 ;main.c:593: playerX = 80<<5;
      001787 21r2Cr00              5400 	ld	hl, #_playerX
      00178A 36 00                 5401 	ld	(hl), #0x00
      00178C 23                    5402 	inc	hl
      00178D 36 0A                 5403 	ld	(hl), #0x0a
                                   5404 ;main.c:594: playerY = 80<<5;
      00178F 21r2Er00              5405 	ld	hl, #_playerY
      001792 36 00                 5406 	ld	(hl), #0x00
      001794 23                    5407 	inc	hl
      001795 36 0A                 5408 	ld	(hl), #0x0a
                                   5409 ;main.c:596: playerDrawX = 80;
      001797 21r30r00              5410 	ld	hl, #_playerDrawX
      00179A 36 50                 5411 	ld	(hl), #0x50
                                   5412 ;main.c:597: playerDrawY = 80;
      00179C 21r31r00              5413 	ld	hl, #_playerDrawY
      00179F 36 50                 5414 	ld	(hl), #0x50
                                   5415 ;main.c:600: bgX = 0;
      0017A1 AF                    5416 	xor	a, a
      0017A2 21r32r00              5417 	ld	hl, #_bgX
      0017A5 22                    5418 	ld	(hl+), a
      0017A6 77                    5419 	ld	(hl), a
                                   5420 ;main.c:601: bgY = 0;
      0017A7 AF                    5421 	xor	a, a
      0017A8 21r34r00              5422 	ld	hl, #_bgY
      0017AB 22                    5423 	ld	(hl+), a
      0017AC 77                    5424 	ld	(hl), a
                                   5425 ;main.c:603: hull = maxHull;
      0017AD FAr36r00              5426 	ld	a, (#_maxHull)
      0017B0 EAr92r00              5427 	ld	(#_hull),a
                                   5428 ;main.c:604: shield = maxShield;
      0017B3 FAr37r00              5429 	ld	a, (#_maxShield)
      0017B6 EAr93r00              5430 	ld	(#_shield),a
                                   5431 ;main.c:606: DISPLAY_ON;
      0017B9 F0r00                 5432 	ldh	a, (_LCDC_REG + 0)
      0017BB F6 80                 5433 	or	a, #0x80
      0017BD E0r00                 5434 	ldh	(_LCDC_REG + 0), a
                                   5435 ;main.c:607: SPRITES_8x8;
      0017BF F0r00                 5436 	ldh	a, (_LCDC_REG + 0)
      0017C1 E6 FB                 5437 	and	a, #0xfb
      0017C3 E0r00                 5438 	ldh	(_LCDC_REG + 0), a
                                   5439 ;main.c:608: set_sprite_data(0, 8, cross);
      0017C5 11r07r00              5440 	ld	de, #_cross
      0017C8 D5                    5441 	push	de
      0017C9 21 00 08              5442 	ld	hl, #0x800
      0017CC E5                    5443 	push	hl
      0017CD CDr00r00              5444 	call	_set_sprite_data
      0017D0 E8 04                 5445 	add	sp, #4
                                   5446 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0017D2 21r02r00              5447 	ld	hl, #(_shadow_OAM + 2)
      0017D5 36 00                 5448 	ld	(hl), #0x00
                                   5449 ;main.c:611: SHOW_SPRITES;
      0017D7 F0r00                 5450 	ldh	a, (_LCDC_REG + 0)
      0017D9 F6 02                 5451 	or	a, #0x02
      0017DB E0r00                 5452 	ldh	(_LCDC_REG + 0), a
                                   5453 ;main.c:615: font_init();
      0017DD CDr00r00              5454 	call	_font_init
                                   5455 ;main.c:616: min_font = font_load(font_min); // 36 tiles of characters
      0017E0 11r00r00              5456 	ld	de, #_font_min
      0017E3 D5                    5457 	push	de
      0017E4 CDr00r00              5458 	call	_font_load
      0017E7 E1                    5459 	pop	hl
      0017E8 21r94r00              5460 	ld	hl, #_min_font
      0017EB 7B                    5461 	ld	a, e
      0017EC 22                    5462 	ld	(hl+), a
                                   5463 ;main.c:617: font_set(min_font);
      0017ED 7A                    5464 	ld	a, d
      0017EE 32                    5465 	ld	(hl-), a
      0017EF 2A                    5466 	ld	a, (hl+)
      0017F0 5F                    5467 	ld	e, a
      0017F1 56                    5468 	ld	d, (hl)
      0017F2 D5                    5469 	push	de
      0017F3 CDr00r00              5470 	call	_font_set
      0017F6 E1                    5471 	pop	hl
                                   5472 ;main.c:618: set_win_tiles(1,0,4,1,hullabel);
      0017F7 11r00r00              5473 	ld	de, #_hullabel
      0017FA D5                    5474 	push	de
      0017FB 21 04 01              5475 	ld	hl, #0x104
      0017FE E5                    5476 	push	hl
      0017FF 21 01 00              5477 	ld	hl, #0x01
      001802 E5                    5478 	push	hl
      001803 CDr00r00              5479 	call	_set_win_tiles
      001806 E8 06                 5480 	add	sp, #6
                                   5481 ;main.c:619: set_win_tiles(1,1,5,1,shieldlabel);
      001808 11r04r00              5482 	ld	de, #_shieldlabel
      00180B D5                    5483 	push	de
      00180C 21 05 01              5484 	ld	hl, #0x105
      00180F E5                    5485 	push	hl
      001810 21 01 01              5486 	ld	hl, #0x101
      001813 E5                    5487 	push	hl
      001814 CDr00r00              5488 	call	_set_win_tiles
      001817 E8 06                 5489 	add	sp, #6
                                   5490 ;main.c:624: set_bkg_data(0x50,1,healthblock);
      001819 11rE7r04              5491 	ld	de, #_healthblock
      00181C D5                    5492 	push	de
      00181D 21 50 01              5493 	ld	hl, #0x150
      001820 E5                    5494 	push	hl
      001821 CDr00r00              5495 	call	_set_bkg_data
      001824 E8 04                 5496 	add	sp, #4
                                   5497 ;main.c:626: setHealthBar(0, hull);
      001826 FAr92r00              5498 	ld	a, (#_hull)
      001829 67                    5499 	ld	h, a
      00182A 2E 00                 5500 	ld	l, #0x00
      00182C E5                    5501 	push	hl
      00182D CDr2Br05              5502 	call	_setHealthBar
      001830 E1                    5503 	pop	hl
                                   5504 ;main.c:627: setHealthBar(1, shield);
      001831 FAr93r00              5505 	ld	a, (#_shield)
      001834 67                    5506 	ld	h, a
      001835 2E 01                 5507 	ld	l, #0x01
      001837 E5                    5508 	push	hl
      001838 CDr2Br05              5509 	call	_setHealthBar
      00183B E1                    5510 	pop	hl
                                   5511 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      00183C 3E 07                 5512 	ld	a, #0x07
      00183E E0r00                 5513 	ldh	(_WX_REG + 0), a
      001840 3E 7E                 5514 	ld	a, #0x7e
      001842 E0r00                 5515 	ldh	(_WY_REG + 0), a
                                   5516 ;main.c:630: SHOW_WIN;;
      001844 F0r00                 5517 	ldh	a, (_LCDC_REG + 0)
      001846 F6 20                 5518 	or	a, #0x20
      001848 E0r00                 5519 	ldh	(_LCDC_REG + 0), a
                                   5520 ;main.c:635: set_bkg_data(0x25, 6, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      00184A 11r87r04              5521 	ld	de, #_backgroundtiles
      00184D D5                    5522 	push	de
      00184E 21 25 06              5523 	ld	hl, #0x625
      001851 E5                    5524 	push	hl
      001852 CDr00r00              5525 	call	_set_bkg_data
      001855 E8 04                 5526 	add	sp, #4
                                   5527 ;main.c:636: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      001857 11r87r00              5528 	ld	de, #_background1
      00185A D5                    5529 	push	de
      00185B 21 20 20              5530 	ld	hl, #0x2020
      00185E E5                    5531 	push	hl
      00185F AF                    5532 	xor	a, a
      001860 0F                    5533 	rrca
      001861 F5                    5534 	push	af
      001862 CDr00r00              5535 	call	_set_bkg_tiles
      001865 E8 06                 5536 	add	sp, #6
                                   5537 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001867 AF                    5538 	xor	a, a
      001868 E0r00                 5539 	ldh	(_SCX_REG + 0), a
      00186A AF                    5540 	xor	a, a
      00186B E0r00                 5541 	ldh	(_SCY_REG + 0), a
                                   5542 ;main.c:638: SHOW_BKG;
      00186D F0r00                 5543 	ldh	a, (_LCDC_REG + 0)
      00186F F6 01                 5544 	or	a, #0x01
      001871 E0r00                 5545 	ldh	(_LCDC_REG + 0), a
                                   5546 ;main.c:644: }
      001873 C9                    5547 	ret
                                   5548 ;main.c:646: void main(){
                                   5549 ;	---------------------------------
                                   5550 ; Function main
                                   5551 ; ---------------------------------
      001874                       5552 _main::
                                   5553 ;main.c:658: waitpad(J_A);
      001874 3E 10                 5554 	ld	a, #0x10
      001876 F5                    5555 	push	af
      001877 33                    5556 	inc	sp
      001878 CDr00r00              5557 	call	_waitpad
      00187B 33                    5558 	inc	sp
                                   5559 ;main.c:659: uint16_t seed = LY_REG;
      00187C F0r00                 5560 	ldh	a, (_LY_REG + 0)
      00187E 4F                    5561 	ld	c, a
      00187F 06 00                 5562 	ld	b, #0x00
                                   5563 ;main.c:660: seed |= (uint16_t)DIV_REG << 8;
      001881 F0r00                 5564 	ldh	a, (_DIV_REG + 0)
      001883 5F                    5565 	ld	e, a
      001884 AF                    5566 	xor	a, a
      001885 B1                    5567 	or	a, c
      001886 4F                    5568 	ld	c, a
      001887 7B                    5569 	ld	a, e
      001888 B0                    5570 	or	a, b
      001889 47                    5571 	ld	b, a
                                   5572 ;main.c:661: initrand(seed);
      00188A C5                    5573 	push	bc
      00188B CDr00r00              5574 	call	_initrand
      00188E E1                    5575 	pop	hl
                                   5576 ;main.c:666: initGame();
      00188F CDr73r17              5577 	call	_initGame
                                   5578 ;main.c:667: initEnemies(1);
      001892 3E 01                 5579 	ld	a, #0x01
      001894 F5                    5580 	push	af
      001895 33                    5581 	inc	sp
      001896 CDr6Fr0E              5582 	call	_initEnemies
      001899 33                    5583 	inc	sp
                                   5584 ;main.c:668: initProjectiles();
      00189A CDr5Cr17              5585 	call	_initProjectiles
                                   5586 ;main.c:670: while(1) {
      00189D                       5587 00107$:
                                   5588 ;main.c:673: joydata = joypad(); // query for button states
      00189D CDr00r00              5589 	call	_joypad
      0018A0 21r91r00              5590 	ld	hl, #_joydata
      0018A3 73                    5591 	ld	(hl), e
                                   5592 ;main.c:675: updateDirection(); // set player direction
      0018A4 CDr3Cr06              5593 	call	_updateDirection
                                   5594 ;main.c:678: move(); 
      0018A7 CDrBBr0F              5595 	call	_move
                                   5596 ;main.c:680: updateEnemyPositions();
      0018AA CDr1Fr09              5597 	call	_updateEnemyPositions
                                   5598 ;main.c:683: checkCollision(); 
      0018AD CDrEFr13              5599 	call	_checkCollision
                                   5600 ;main.c:685: updateShieldsAndHull();
      0018B0 CDr72r15              5601 	call	_updateShieldsAndHull
                                   5602 ;main.c:688: if (joydata & J_B && fireCooldown == 0) {
      0018B3 FAr91r00              5603 	ld	a, (#_joydata)
      0018B6 CB 6F                 5604 	bit	5, a
      0018B8 28 09                 5605 	jr	Z, 00102$
      0018BA FAr26r00              5606 	ld	a, (#_fireCooldown)
      0018BD B7                    5607 	or	a, a
      0018BE 20 03                 5608 	jr	NZ, 00102$
                                   5609 ;main.c:689: fire();
      0018C0 CDrABr15              5610 	call	_fire
      0018C3                       5611 00102$:
                                   5612 ;main.c:691: if (fireCooldown > 0) {
      0018C3 21r26r00              5613 	ld	hl, #_fireCooldown
      0018C6 7E                    5614 	ld	a, (hl)
      0018C7 B7                    5615 	or	a, a
      0018C8 28 01                 5616 	jr	Z, 00105$
                                   5617 ;main.c:692: --fireCooldown;
      0018CA 35                    5618 	dec	(hl)
      0018CB                       5619 00105$:
                                   5620 ;main.c:695: moveProjectiles();
      0018CB CDr40r16              5621 	call	_moveProjectiles
                                   5622 ;main.c:699: struct Enemy *ptr = enemies;
                                   5623 ;main.c:700: printf("%d ", (ptr->damage));
      0018CE FAr0Cr00              5624 	ld	a, (#(_enemies + 12) + 0)
      0018D1 4F                    5625 	ld	c, a
      0018D2 06 00                 5626 	ld	b, #0x00
      0018D4 C5                    5627 	push	bc
      0018D5 11rF9r18              5628 	ld	de, #___str_0
      0018D8 D5                    5629 	push	de
      0018D9 CDr00r00              5630 	call	_printf
      0018DC E8 04                 5631 	add	sp, #4
                                   5632 ;main.c:701: ptr++;
                                   5633 ;main.c:702: printf("%d\n", (ptr->damage));
      0018DE FAr20r00              5634 	ld	a, (#(_enemies + 32) + 0)
      0018E1 4F                    5635 	ld	c, a
      0018E2 06 00                 5636 	ld	b, #0x00
      0018E4 C5                    5637 	push	bc
      0018E5 11rFDr18              5638 	ld	de, #___str_1
      0018E8 D5                    5639 	push	de
      0018E9 CDr00r00              5640 	call	_printf
      0018EC E8 04                 5641 	add	sp, #4
                                   5642 ;main.c:706: SHOW_WIN;	
      0018EE F0r00                 5643 	ldh	a, (_LCDC_REG + 0)
      0018F0 F6 20                 5644 	or	a, #0x20
      0018F2 E0r00                 5645 	ldh	(_LCDC_REG + 0), a
                                   5646 ;main.c:707: wait_vbl_done(); // Idle until next frame
      0018F4 CDr00r00              5647 	call	_wait_vbl_done
                                   5648 ;main.c:712: }
      0018F7 18 A4                 5649 	jr	00107$
      0018F9                       5650 ___str_0:
      0018F9 25 64 20              5651 	.ascii "%d "
      0018FC 00                    5652 	.db 0x00
      0018FD                       5653 ___str_1:
      0018FD 25 64                 5654 	.ascii "%d"
      0018FF 0A                    5655 	.db 0x0a
      001900 00                    5656 	.db 0x00
                                   5657 	.area _CODE
                                   5658 	.area _INITIALIZER
      000000                       5659 __xinit__hullabel:
      000000 12                    5660 	.db #0x12	; 18
      000001 1F                    5661 	.db #0x1f	; 31
      000002 16                    5662 	.db #0x16	; 22
      000003 16                    5663 	.db #0x16	; 22
      000004                       5664 __xinit__shieldlabel:
      000004 1D                    5665 	.db #0x1d	; 29
      000005 12                    5666 	.db #0x12	; 18
      000006 16                    5667 	.db #0x16	; 22
      000007 0E                    5668 	.db #0x0e	; 14
      000008                       5669 __xinit__blob:
      000008 00 00                 5670 	.dw #0x0000
      00000A 00 00                 5671 	.dw #0x0000
      00000C 00                    5672 	.db #0x00	;  0
      00000D 00                    5673 	.db #0x00	;  0
      00000E 09                    5674 	.db #0x09	; 9
      00000F 00                    5675 	.db #0x00	; 0
      000010 01 00                 5676 	.dw #0x0001
      000012 01                    5677 	.db #0x01	; 1
      000013 01                    5678 	.db #0x01	; 1
      000014 32                    5679 	.db #0x32	; 50	'2'
      000015 0A 00                 5680 	.dw #0x000a
      000017 01                    5681 	.db #0x01	; 1
      000018 00 00                 5682 	.dw #0x0000
      00001A 00 00                 5683 	.dw #0x0000
      00001C                       5684 __xinit__weakProjectile:
      00001C 00 00                 5685 	.dw #0x0000
      00001E 00 00                 5686 	.dw #0x0000
      000020 00                    5687 	.db #0x00	;  0
      000021 FF                    5688 	.db #0xff	; -1
      000022 02                    5689 	.db #0x02	; 2
      000023 00                    5690 	.db #0x00	; 0
      000024 01                    5691 	.db #0x01	; 1
      000025                       5692 __xinit__oldestProjectile:
      000025 00                    5693 	.db #0x00	; 0
      000026                       5694 __xinit__fireCooldown:
      000026 00                    5695 	.db #0x00	; 0
      000027                       5696 __xinit__PLAYERSIZE:
      000027 08                    5697 	.db #0x08	; 8
      000028                       5698 __xinit__xDir:
      000028 00                    5699 	.db #0x00	;  0
      000029                       5700 __xinit__yDir:
      000029 00                    5701 	.db #0x00	;  0
      00002A                       5702 __xinit__xSpeed:
      00002A 00                    5703 	.db #0x00	;  0
      00002B                       5704 __xinit__ySpeed:
      00002B 00                    5705 	.db #0x00	;  0
      00002C                       5706 __xinit__playerX:
      00002C 00 0A                 5707 	.dw #0x0a00
      00002E                       5708 __xinit__playerY:
      00002E 00 0A                 5709 	.dw #0x0a00
      000030                       5710 __xinit__playerDrawX:
      000030 50                    5711 	.db #0x50	; 80	'P'
      000031                       5712 __xinit__playerDrawY:
      000031 50                    5713 	.db #0x50	; 80	'P'
      000032                       5714 __xinit__bgX:
      000032 00 00                 5715 	.dw #0x0000
      000034                       5716 __xinit__bgY:
      000034 00 00                 5717 	.dw #0x0000
      000036                       5718 __xinit__maxHull:
      000036 64                    5719 	.db #0x64	;  100	'd'
      000037                       5720 __xinit__maxShield:
      000037 64                    5721 	.db #0x64	;  100	'd'
      000038                       5722 __xinit__xOverflow:
      000038 00 00                 5723 	.dw #0x0000
      00003A                       5724 __xinit__yOverflow:
      00003A 00 00                 5725 	.dw #0x0000
                                   5726 	.area _CABS (ABS)
