                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _updateShieldsAndHull
                                     14 	.globl _checkCollision
                                     15 	.globl _takeDamage
                                     16 	.globl _move
                                     17 	.globl _initEnemies
                                     18 	.globl _updateEnemyPositions
                                     19 	.globl _moveEnemiesWithBackground
                                     20 	.globl _abs
                                     21 	.globl _u16Clamp
                                     22 	.globl _uClamp
                                     23 	.globl _clamp
                                     24 	.globl _updateDirection
                                     25 	.globl _setHealthBar
                                     26 	.globl _interruptLCD
                                     27 	.globl _rand
                                     28 	.globl _initrand
                                     29 	.globl _font_set
                                     30 	.globl _font_load
                                     31 	.globl _font_init
                                     32 	.globl _printf
                                     33 	.globl _set_sprite_data
                                     34 	.globl _set_win_tiles
                                     35 	.globl _set_bkg_tiles
                                     36 	.globl _set_bkg_data
                                     37 	.globl _wait_vbl_done
                                     38 	.globl _waitpad
                                     39 	.globl _joypad
                                     40 	.globl _maxShield
                                     41 	.globl _maxHull
                                     42 	.globl _bgY
                                     43 	.globl _bgX
                                     44 	.globl _playerDrawY
                                     45 	.globl _playerDrawX
                                     46 	.globl _playerY
                                     47 	.globl _playerX
                                     48 	.globl _ySpeed
                                     49 	.globl _xSpeed
                                     50 	.globl _yDir
                                     51 	.globl _xDir
                                     52 	.globl _PLAYERSIZE
                                     53 	.globl _blob
                                     54 	.globl _shieldlabel
                                     55 	.globl _hullabel
                                     56 	.globl _min_font
                                     57 	.globl _shield
                                     58 	.globl _hull
                                     59 	.globl _joydata
                                     60 	.globl _enemies
                                     61 	.globl _ENEMYCOUNT
                                     62 	.globl _EMPTYSPRITE
                                     63 	.globl _BLANK
                                     64 	.globl _enemy1
                                     65 	.globl _healthblock
                                     66 	.globl _backgroundtiles
                                     67 	.globl _background1
                                     68 	.globl _cross
                                     69 ;--------------------------------------------------------
                                     70 ; special function registers
                                     71 ;--------------------------------------------------------
                                     72 ;--------------------------------------------------------
                                     73 ; ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area _DATA
      000000                         76 _enemies::
      000000                         77 	.ds 55
      000037                         78 _joydata::
      000037                         79 	.ds 1
      000038                         80 _hull::
      000038                         81 	.ds 1
      000039                         82 _shield::
      000039                         83 	.ds 1
      00003A                         84 _min_font::
      00003A                         85 	.ds 2
                                     86 ;--------------------------------------------------------
                                     87 ; ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area _INITIALIZED
      000000                         90 _hullabel::
      000000                         91 	.ds 4
      000004                         92 _shieldlabel::
      000004                         93 	.ds 4
      000008                         94 _blob::
      000008                         95 	.ds 11
      000013                         96 _PLAYERSIZE::
      000013                         97 	.ds 1
      000014                         98 _xDir::
      000014                         99 	.ds 1
      000015                        100 _yDir::
      000015                        101 	.ds 1
      000016                        102 _xSpeed::
      000016                        103 	.ds 1
      000017                        104 _ySpeed::
      000017                        105 	.ds 1
      000018                        106 _playerX::
      000018                        107 	.ds 2
      00001A                        108 _playerY::
      00001A                        109 	.ds 2
      00001C                        110 _playerDrawX::
      00001C                        111 	.ds 1
      00001D                        112 _playerDrawY::
      00001D                        113 	.ds 1
      00001E                        114 _bgX::
      00001E                        115 	.ds 2
      000020                        116 _bgY::
      000020                        117 	.ds 2
      000022                        118 _maxHull::
      000022                        119 	.ds 1
      000023                        120 _maxShield::
      000023                        121 	.ds 1
                                    122 ;--------------------------------------------------------
                                    123 ; absolute external ram data
                                    124 ;--------------------------------------------------------
                                    125 	.area _DABS (ABS)
                                    126 ;--------------------------------------------------------
                                    127 ; global & static initialisations
                                    128 ;--------------------------------------------------------
                                    129 	.area _HOME
                                    130 	.area _GSINIT
                                    131 	.area _GSFINAL
                                    132 	.area _GSINIT
                                    133 ;--------------------------------------------------------
                                    134 ; Home
                                    135 ;--------------------------------------------------------
                                    136 	.area _HOME
                                    137 	.area _HOME
                                    138 ;--------------------------------------------------------
                                    139 ; code
                                    140 ;--------------------------------------------------------
                                    141 	.area _CODE
                                    142 ;main.c:52: void interruptLCD(){
                                    143 ;	---------------------------------
                                    144 ; Function interruptLCD
                                    145 ; ---------------------------------
      000000                        146 _interruptLCD::
                                    147 ;main.c:53: HIDE_WIN;
      000000 F0r00                  148 	ldh	a, (_LCDC_REG + 0)
      000002 E6 DF                  149 	and	a, #0xdf
      000004 E0r00                  150 	ldh	(_LCDC_REG + 0), a
                                    151 ;main.c:54: }
      000006 C9                     152 	ret
      000007                        153 _cross:
      000007 18                     154 	.db #0x18	; 24
      000008 18                     155 	.db #0x18	; 24
      000009 18                     156 	.db #0x18	; 24
      00000A 18                     157 	.db #0x18	; 24
      00000B 3C                     158 	.db #0x3c	; 60
      00000C 3C                     159 	.db #0x3c	; 60
      00000D 3C                     160 	.db #0x3c	; 60
      00000E 3C                     161 	.db #0x3c	; 60
      00000F 7E                     162 	.db #0x7e	; 126
      000010 7E                     163 	.db #0x7e	; 126
      000011 7E                     164 	.db #0x7e	; 126
      000012 7E                     165 	.db #0x7e	; 126
      000013 FF                     166 	.db #0xff	; 255
      000014 FF                     167 	.db #0xff	; 255
      000015 FF                     168 	.db #0xff	; 255
      000016 FF                     169 	.db #0xff	; 255
      000017 0F                     170 	.db #0x0f	; 15
      000018 0F                     171 	.db #0x0f	; 15
      000019 3F                     172 	.db #0x3f	; 63
      00001A 3F                     173 	.db #0x3f	; 63
      00001B FF                     174 	.db #0xff	; 255
      00001C FF                     175 	.db #0xff	; 255
      00001D FF                     176 	.db #0xff	; 255
      00001E FF                     177 	.db #0xff	; 255
      00001F 7E                     178 	.db #0x7e	; 126
      000020 7E                     179 	.db #0x7e	; 126
      000021 3E                     180 	.db #0x3e	; 62
      000022 3E                     181 	.db #0x3e	; 62
      000023 1C                     182 	.db #0x1c	; 28
      000024 1C                     183 	.db #0x1c	; 28
      000025 0C                     184 	.db #0x0c	; 12
      000026 0C                     185 	.db #0x0c	; 12
      000027 C0                     186 	.db #0xc0	; 192
      000028 C0                     187 	.db #0xc0	; 192
      000029 F0                     188 	.db #0xf0	; 240
      00002A F0                     189 	.db #0xf0	; 240
      00002B FC                     190 	.db #0xfc	; 252
      00002C FC                     191 	.db #0xfc	; 252
      00002D FF                     192 	.db #0xff	; 255
      00002E FF                     193 	.db #0xff	; 255
      00002F FF                     194 	.db #0xff	; 255
      000030 FF                     195 	.db #0xff	; 255
      000031 FC                     196 	.db #0xfc	; 252
      000032 FC                     197 	.db #0xfc	; 252
      000033 F0                     198 	.db #0xf0	; 240
      000034 F0                     199 	.db #0xf0	; 240
      000035 C0                     200 	.db #0xc0	; 192
      000036 C0                     201 	.db #0xc0	; 192
      000037 0C                     202 	.db #0x0c	; 12
      000038 0C                     203 	.db #0x0c	; 12
      000039 1C                     204 	.db #0x1c	; 28
      00003A 1C                     205 	.db #0x1c	; 28
      00003B 3E                     206 	.db #0x3e	; 62
      00003C 3E                     207 	.db #0x3e	; 62
      00003D 7E                     208 	.db #0x7e	; 126
      00003E 7E                     209 	.db #0x7e	; 126
      00003F FF                     210 	.db #0xff	; 255
      000040 FF                     211 	.db #0xff	; 255
      000041 FF                     212 	.db #0xff	; 255
      000042 FF                     213 	.db #0xff	; 255
      000043 3F                     214 	.db #0x3f	; 63
      000044 3F                     215 	.db #0x3f	; 63
      000045 0F                     216 	.db #0x0f	; 15
      000046 0F                     217 	.db #0x0f	; 15
      000047 FF                     218 	.db #0xff	; 255
      000048 FF                     219 	.db #0xff	; 255
      000049 FF                     220 	.db #0xff	; 255
      00004A FF                     221 	.db #0xff	; 255
      00004B 7E                     222 	.db #0x7e	; 126
      00004C 7E                     223 	.db #0x7e	; 126
      00004D 7E                     224 	.db #0x7e	; 126
      00004E 7E                     225 	.db #0x7e	; 126
      00004F 3C                     226 	.db #0x3c	; 60
      000050 3C                     227 	.db #0x3c	; 60
      000051 3C                     228 	.db #0x3c	; 60
      000052 3C                     229 	.db #0x3c	; 60
      000053 18                     230 	.db #0x18	; 24
      000054 18                     231 	.db #0x18	; 24
      000055 18                     232 	.db #0x18	; 24
      000056 18                     233 	.db #0x18	; 24
      000057 30                     234 	.db #0x30	; 48	'0'
      000058 30                     235 	.db #0x30	; 48	'0'
      000059 38                     236 	.db #0x38	; 56	'8'
      00005A 38                     237 	.db #0x38	; 56	'8'
      00005B 7C                     238 	.db #0x7c	; 124
      00005C 7C                     239 	.db #0x7c	; 124
      00005D 7E                     240 	.db #0x7e	; 126
      00005E 7E                     241 	.db #0x7e	; 126
      00005F FF                     242 	.db #0xff	; 255
      000060 FF                     243 	.db #0xff	; 255
      000061 FF                     244 	.db #0xff	; 255
      000062 FF                     245 	.db #0xff	; 255
      000063 FC                     246 	.db #0xfc	; 252
      000064 FC                     247 	.db #0xfc	; 252
      000065 F0                     248 	.db #0xf0	; 240
      000066 F0                     249 	.db #0xf0	; 240
      000067 03                     250 	.db #0x03	; 3
      000068 03                     251 	.db #0x03	; 3
      000069 0F                     252 	.db #0x0f	; 15
      00006A 0F                     253 	.db #0x0f	; 15
      00006B 3F                     254 	.db #0x3f	; 63
      00006C 3F                     255 	.db #0x3f	; 63
      00006D FF                     256 	.db #0xff	; 255
      00006E FF                     257 	.db #0xff	; 255
      00006F FF                     258 	.db #0xff	; 255
      000070 FF                     259 	.db #0xff	; 255
      000071 3F                     260 	.db #0x3f	; 63
      000072 3F                     261 	.db #0x3f	; 63
      000073 0F                     262 	.db #0x0f	; 15
      000074 0F                     263 	.db #0x0f	; 15
      000075 03                     264 	.db #0x03	; 3
      000076 03                     265 	.db #0x03	; 3
      000077 F0                     266 	.db #0xf0	; 240
      000078 F0                     267 	.db #0xf0	; 240
      000079 FC                     268 	.db #0xfc	; 252
      00007A FC                     269 	.db #0xfc	; 252
      00007B FF                     270 	.db #0xff	; 255
      00007C FF                     271 	.db #0xff	; 255
      00007D FF                     272 	.db #0xff	; 255
      00007E FF                     273 	.db #0xff	; 255
      00007F 7E                     274 	.db #0x7e	; 126
      000080 7E                     275 	.db #0x7e	; 126
      000081 7C                     276 	.db #0x7c	; 124
      000082 7C                     277 	.db #0x7c	; 124
      000083 38                     278 	.db #0x38	; 56	'8'
      000084 38                     279 	.db #0x38	; 56	'8'
      000085 30                     280 	.db #0x30	; 48	'0'
      000086 30                     281 	.db #0x30	; 48	'0'
      000087                        282 _background1:
      000087 26                     283 	.db #0x26	; 38
      000088 26                     284 	.db #0x26	; 38
      000089 26                     285 	.db #0x26	; 38
      00008A 26                     286 	.db #0x26	; 38
      00008B 26                     287 	.db #0x26	; 38
      00008C 26                     288 	.db #0x26	; 38
      00008D 26                     289 	.db #0x26	; 38
      00008E 26                     290 	.db #0x26	; 38
      00008F 26                     291 	.db #0x26	; 38
      000090 26                     292 	.db #0x26	; 38
      000091 26                     293 	.db #0x26	; 38
      000092 2A                     294 	.db #0x2a	; 42
      000093 29                     295 	.db #0x29	; 41
      000094 26                     296 	.db #0x26	; 38
      000095 26                     297 	.db #0x26	; 38
      000096 26                     298 	.db #0x26	; 38
      000097 26                     299 	.db #0x26	; 38
      000098 26                     300 	.db #0x26	; 38
      000099 26                     301 	.db #0x26	; 38
      00009A 26                     302 	.db #0x26	; 38
      00009B 26                     303 	.db #0x26	; 38
      00009C 26                     304 	.db #0x26	; 38
      00009D 26                     305 	.db #0x26	; 38
      00009E 26                     306 	.db #0x26	; 38
      00009F 26                     307 	.db #0x26	; 38
      0000A0 26                     308 	.db #0x26	; 38
      0000A1 26                     309 	.db #0x26	; 38
      0000A2 26                     310 	.db #0x26	; 38
      0000A3 26                     311 	.db #0x26	; 38
      0000A4 26                     312 	.db #0x26	; 38
      0000A5 26                     313 	.db #0x26	; 38
      0000A6 26                     314 	.db #0x26	; 38
      0000A7 26                     315 	.db #0x26	; 38
      0000A8 26                     316 	.db #0x26	; 38
      0000A9 26                     317 	.db #0x26	; 38
      0000AA 26                     318 	.db #0x26	; 38
      0000AB 26                     319 	.db #0x26	; 38
      0000AC 26                     320 	.db #0x26	; 38
      0000AD 26                     321 	.db #0x26	; 38
      0000AE 26                     322 	.db #0x26	; 38
      0000AF 26                     323 	.db #0x26	; 38
      0000B0 26                     324 	.db #0x26	; 38
      0000B1 26                     325 	.db #0x26	; 38
      0000B2 25                     326 	.db #0x25	; 37
      0000B3 26                     327 	.db #0x26	; 38
      0000B4 26                     328 	.db #0x26	; 38
      0000B5 26                     329 	.db #0x26	; 38
      0000B6 26                     330 	.db #0x26	; 38
      0000B7 26                     331 	.db #0x26	; 38
      0000B8 26                     332 	.db #0x26	; 38
      0000B9 26                     333 	.db #0x26	; 38
      0000BA 26                     334 	.db #0x26	; 38
      0000BB 26                     335 	.db #0x26	; 38
      0000BC 26                     336 	.db #0x26	; 38
      0000BD 26                     337 	.db #0x26	; 38
      0000BE 26                     338 	.db #0x26	; 38
      0000BF 26                     339 	.db #0x26	; 38
      0000C0 26                     340 	.db #0x26	; 38
      0000C1 26                     341 	.db #0x26	; 38
      0000C2 26                     342 	.db #0x26	; 38
      0000C3 26                     343 	.db #0x26	; 38
      0000C4 26                     344 	.db #0x26	; 38
      0000C5 26                     345 	.db #0x26	; 38
      0000C6 26                     346 	.db #0x26	; 38
      0000C7 26                     347 	.db #0x26	; 38
      0000C8 26                     348 	.db #0x26	; 38
      0000C9 26                     349 	.db #0x26	; 38
      0000CA 26                     350 	.db #0x26	; 38
      0000CB 26                     351 	.db #0x26	; 38
      0000CC 26                     352 	.db #0x26	; 38
      0000CD 26                     353 	.db #0x26	; 38
      0000CE 26                     354 	.db #0x26	; 38
      0000CF 26                     355 	.db #0x26	; 38
      0000D0 26                     356 	.db #0x26	; 38
      0000D1 26                     357 	.db #0x26	; 38
      0000D2 26                     358 	.db #0x26	; 38
      0000D3 26                     359 	.db #0x26	; 38
      0000D4 26                     360 	.db #0x26	; 38
      0000D5 26                     361 	.db #0x26	; 38
      0000D6 26                     362 	.db #0x26	; 38
      0000D7 26                     363 	.db #0x26	; 38
      0000D8 26                     364 	.db #0x26	; 38
      0000D9 26                     365 	.db #0x26	; 38
      0000DA 26                     366 	.db #0x26	; 38
      0000DB 26                     367 	.db #0x26	; 38
      0000DC 26                     368 	.db #0x26	; 38
      0000DD 26                     369 	.db #0x26	; 38
      0000DE 26                     370 	.db #0x26	; 38
      0000DF 26                     371 	.db #0x26	; 38
      0000E0 26                     372 	.db #0x26	; 38
      0000E1 26                     373 	.db #0x26	; 38
      0000E2 26                     374 	.db #0x26	; 38
      0000E3 26                     375 	.db #0x26	; 38
      0000E4 26                     376 	.db #0x26	; 38
      0000E5 26                     377 	.db #0x26	; 38
      0000E6 26                     378 	.db #0x26	; 38
      0000E7 26                     379 	.db #0x26	; 38
      0000E8 26                     380 	.db #0x26	; 38
      0000E9 26                     381 	.db #0x26	; 38
      0000EA 26                     382 	.db #0x26	; 38
      0000EB 26                     383 	.db #0x26	; 38
      0000EC 26                     384 	.db #0x26	; 38
      0000ED 26                     385 	.db #0x26	; 38
      0000EE 26                     386 	.db #0x26	; 38
      0000EF 26                     387 	.db #0x26	; 38
      0000F0 26                     388 	.db #0x26	; 38
      0000F1 26                     389 	.db #0x26	; 38
      0000F2 26                     390 	.db #0x26	; 38
      0000F3 26                     391 	.db #0x26	; 38
      0000F4 26                     392 	.db #0x26	; 38
      0000F5 26                     393 	.db #0x26	; 38
      0000F6 26                     394 	.db #0x26	; 38
      0000F7 26                     395 	.db #0x26	; 38
      0000F8 26                     396 	.db #0x26	; 38
      0000F9 26                     397 	.db #0x26	; 38
      0000FA 26                     398 	.db #0x26	; 38
      0000FB 26                     399 	.db #0x26	; 38
      0000FC 26                     400 	.db #0x26	; 38
      0000FD 26                     401 	.db #0x26	; 38
      0000FE 26                     402 	.db #0x26	; 38
      0000FF 26                     403 	.db #0x26	; 38
      000100 26                     404 	.db #0x26	; 38
      000101 26                     405 	.db #0x26	; 38
      000102 26                     406 	.db #0x26	; 38
      000103 26                     407 	.db #0x26	; 38
      000104 26                     408 	.db #0x26	; 38
      000105 26                     409 	.db #0x26	; 38
      000106 26                     410 	.db #0x26	; 38
      000107 26                     411 	.db #0x26	; 38
      000108 26                     412 	.db #0x26	; 38
      000109 26                     413 	.db #0x26	; 38
      00010A 26                     414 	.db #0x26	; 38
      00010B 26                     415 	.db #0x26	; 38
      00010C 26                     416 	.db #0x26	; 38
      00010D 26                     417 	.db #0x26	; 38
      00010E 26                     418 	.db #0x26	; 38
      00010F 26                     419 	.db #0x26	; 38
      000110 26                     420 	.db #0x26	; 38
      000111 26                     421 	.db #0x26	; 38
      000112 26                     422 	.db #0x26	; 38
      000113 26                     423 	.db #0x26	; 38
      000114 26                     424 	.db #0x26	; 38
      000115 26                     425 	.db #0x26	; 38
      000116 26                     426 	.db #0x26	; 38
      000117 26                     427 	.db #0x26	; 38
      000118 26                     428 	.db #0x26	; 38
      000119 26                     429 	.db #0x26	; 38
      00011A 26                     430 	.db #0x26	; 38
      00011B 26                     431 	.db #0x26	; 38
      00011C 26                     432 	.db #0x26	; 38
      00011D 26                     433 	.db #0x26	; 38
      00011E 26                     434 	.db #0x26	; 38
      00011F 26                     435 	.db #0x26	; 38
      000120 26                     436 	.db #0x26	; 38
      000121 26                     437 	.db #0x26	; 38
      000122 26                     438 	.db #0x26	; 38
      000123 26                     439 	.db #0x26	; 38
      000124 26                     440 	.db #0x26	; 38
      000125 26                     441 	.db #0x26	; 38
      000126 26                     442 	.db #0x26	; 38
      000127 26                     443 	.db #0x26	; 38
      000128 26                     444 	.db #0x26	; 38
      000129 26                     445 	.db #0x26	; 38
      00012A 26                     446 	.db #0x26	; 38
      00012B 26                     447 	.db #0x26	; 38
      00012C 26                     448 	.db #0x26	; 38
      00012D 26                     449 	.db #0x26	; 38
      00012E 26                     450 	.db #0x26	; 38
      00012F 26                     451 	.db #0x26	; 38
      000130 26                     452 	.db #0x26	; 38
      000131 26                     453 	.db #0x26	; 38
      000132 26                     454 	.db #0x26	; 38
      000133 26                     455 	.db #0x26	; 38
      000134 26                     456 	.db #0x26	; 38
      000135 26                     457 	.db #0x26	; 38
      000136 26                     458 	.db #0x26	; 38
      000137 26                     459 	.db #0x26	; 38
      000138 26                     460 	.db #0x26	; 38
      000139 26                     461 	.db #0x26	; 38
      00013A 26                     462 	.db #0x26	; 38
      00013B 26                     463 	.db #0x26	; 38
      00013C 26                     464 	.db #0x26	; 38
      00013D 26                     465 	.db #0x26	; 38
      00013E 26                     466 	.db #0x26	; 38
      00013F 26                     467 	.db #0x26	; 38
      000140 26                     468 	.db #0x26	; 38
      000141 26                     469 	.db #0x26	; 38
      000142 26                     470 	.db #0x26	; 38
      000143 26                     471 	.db #0x26	; 38
      000144 26                     472 	.db #0x26	; 38
      000145 26                     473 	.db #0x26	; 38
      000146 26                     474 	.db #0x26	; 38
      000147 26                     475 	.db #0x26	; 38
      000148 26                     476 	.db #0x26	; 38
      000149 26                     477 	.db #0x26	; 38
      00014A 26                     478 	.db #0x26	; 38
      00014B 26                     479 	.db #0x26	; 38
      00014C 26                     480 	.db #0x26	; 38
      00014D 26                     481 	.db #0x26	; 38
      00014E 26                     482 	.db #0x26	; 38
      00014F 26                     483 	.db #0x26	; 38
      000150 26                     484 	.db #0x26	; 38
      000151 26                     485 	.db #0x26	; 38
      000152 26                     486 	.db #0x26	; 38
      000153 26                     487 	.db #0x26	; 38
      000154 26                     488 	.db #0x26	; 38
      000155 26                     489 	.db #0x26	; 38
      000156 26                     490 	.db #0x26	; 38
      000157 26                     491 	.db #0x26	; 38
      000158 26                     492 	.db #0x26	; 38
      000159 26                     493 	.db #0x26	; 38
      00015A 26                     494 	.db #0x26	; 38
      00015B 26                     495 	.db #0x26	; 38
      00015C 26                     496 	.db #0x26	; 38
      00015D 26                     497 	.db #0x26	; 38
      00015E 26                     498 	.db #0x26	; 38
      00015F 26                     499 	.db #0x26	; 38
      000160 26                     500 	.db #0x26	; 38
      000161 26                     501 	.db #0x26	; 38
      000162 26                     502 	.db #0x26	; 38
      000163 26                     503 	.db #0x26	; 38
      000164 26                     504 	.db #0x26	; 38
      000165 26                     505 	.db #0x26	; 38
      000166 26                     506 	.db #0x26	; 38
      000167 26                     507 	.db #0x26	; 38
      000168 26                     508 	.db #0x26	; 38
      000169 26                     509 	.db #0x26	; 38
      00016A 26                     510 	.db #0x26	; 38
      00016B 26                     511 	.db #0x26	; 38
      00016C 26                     512 	.db #0x26	; 38
      00016D 26                     513 	.db #0x26	; 38
      00016E 26                     514 	.db #0x26	; 38
      00016F 26                     515 	.db #0x26	; 38
      000170 26                     516 	.db #0x26	; 38
      000171 26                     517 	.db #0x26	; 38
      000172 26                     518 	.db #0x26	; 38
      000173 26                     519 	.db #0x26	; 38
      000174 26                     520 	.db #0x26	; 38
      000175 26                     521 	.db #0x26	; 38
      000176 26                     522 	.db #0x26	; 38
      000177 26                     523 	.db #0x26	; 38
      000178 26                     524 	.db #0x26	; 38
      000179 26                     525 	.db #0x26	; 38
      00017A 26                     526 	.db #0x26	; 38
      00017B 26                     527 	.db #0x26	; 38
      00017C 26                     528 	.db #0x26	; 38
      00017D 26                     529 	.db #0x26	; 38
      00017E 26                     530 	.db #0x26	; 38
      00017F 26                     531 	.db #0x26	; 38
      000180 26                     532 	.db #0x26	; 38
      000181 26                     533 	.db #0x26	; 38
      000182 26                     534 	.db #0x26	; 38
      000183 26                     535 	.db #0x26	; 38
      000184 26                     536 	.db #0x26	; 38
      000185 26                     537 	.db #0x26	; 38
      000186 26                     538 	.db #0x26	; 38
      000187 26                     539 	.db #0x26	; 38
      000188 26                     540 	.db #0x26	; 38
      000189 26                     541 	.db #0x26	; 38
      00018A 26                     542 	.db #0x26	; 38
      00018B 26                     543 	.db #0x26	; 38
      00018C 26                     544 	.db #0x26	; 38
      00018D 26                     545 	.db #0x26	; 38
      00018E 26                     546 	.db #0x26	; 38
      00018F 26                     547 	.db #0x26	; 38
      000190 26                     548 	.db #0x26	; 38
      000191 26                     549 	.db #0x26	; 38
      000192 26                     550 	.db #0x26	; 38
      000193 26                     551 	.db #0x26	; 38
      000194 26                     552 	.db #0x26	; 38
      000195 26                     553 	.db #0x26	; 38
      000196 26                     554 	.db #0x26	; 38
      000197 26                     555 	.db #0x26	; 38
      000198 26                     556 	.db #0x26	; 38
      000199 26                     557 	.db #0x26	; 38
      00019A 26                     558 	.db #0x26	; 38
      00019B 26                     559 	.db #0x26	; 38
      00019C 26                     560 	.db #0x26	; 38
      00019D 26                     561 	.db #0x26	; 38
      00019E 26                     562 	.db #0x26	; 38
      00019F 26                     563 	.db #0x26	; 38
      0001A0 26                     564 	.db #0x26	; 38
      0001A1 26                     565 	.db #0x26	; 38
      0001A2 26                     566 	.db #0x26	; 38
      0001A3 26                     567 	.db #0x26	; 38
      0001A4 26                     568 	.db #0x26	; 38
      0001A5 26                     569 	.db #0x26	; 38
      0001A6 26                     570 	.db #0x26	; 38
      0001A7 26                     571 	.db #0x26	; 38
      0001A8 26                     572 	.db #0x26	; 38
      0001A9 26                     573 	.db #0x26	; 38
      0001AA 26                     574 	.db #0x26	; 38
      0001AB 26                     575 	.db #0x26	; 38
      0001AC 26                     576 	.db #0x26	; 38
      0001AD 26                     577 	.db #0x26	; 38
      0001AE 26                     578 	.db #0x26	; 38
      0001AF 26                     579 	.db #0x26	; 38
      0001B0 26                     580 	.db #0x26	; 38
      0001B1 26                     581 	.db #0x26	; 38
      0001B2 26                     582 	.db #0x26	; 38
      0001B3 26                     583 	.db #0x26	; 38
      0001B4 26                     584 	.db #0x26	; 38
      0001B5 26                     585 	.db #0x26	; 38
      0001B6 26                     586 	.db #0x26	; 38
      0001B7 26                     587 	.db #0x26	; 38
      0001B8 26                     588 	.db #0x26	; 38
      0001B9 26                     589 	.db #0x26	; 38
      0001BA 25                     590 	.db #0x25	; 37
      0001BB 26                     591 	.db #0x26	; 38
      0001BC 26                     592 	.db #0x26	; 38
      0001BD 26                     593 	.db #0x26	; 38
      0001BE 26                     594 	.db #0x26	; 38
      0001BF 26                     595 	.db #0x26	; 38
      0001C0 26                     596 	.db #0x26	; 38
      0001C1 26                     597 	.db #0x26	; 38
      0001C2 26                     598 	.db #0x26	; 38
      0001C3 26                     599 	.db #0x26	; 38
      0001C4 26                     600 	.db #0x26	; 38
      0001C5 26                     601 	.db #0x26	; 38
      0001C6 26                     602 	.db #0x26	; 38
      0001C7 26                     603 	.db #0x26	; 38
      0001C8 26                     604 	.db #0x26	; 38
      0001C9 26                     605 	.db #0x26	; 38
      0001CA 26                     606 	.db #0x26	; 38
      0001CB 26                     607 	.db #0x26	; 38
      0001CC 26                     608 	.db #0x26	; 38
      0001CD 26                     609 	.db #0x26	; 38
      0001CE 26                     610 	.db #0x26	; 38
      0001CF 26                     611 	.db #0x26	; 38
      0001D0 26                     612 	.db #0x26	; 38
      0001D1 26                     613 	.db #0x26	; 38
      0001D2 26                     614 	.db #0x26	; 38
      0001D3 26                     615 	.db #0x26	; 38
      0001D4 26                     616 	.db #0x26	; 38
      0001D5 26                     617 	.db #0x26	; 38
      0001D6 26                     618 	.db #0x26	; 38
      0001D7 26                     619 	.db #0x26	; 38
      0001D8 26                     620 	.db #0x26	; 38
      0001D9 26                     621 	.db #0x26	; 38
      0001DA 27                     622 	.db #0x27	; 39
      0001DB 28                     623 	.db #0x28	; 40
      0001DC 26                     624 	.db #0x26	; 38
      0001DD 26                     625 	.db #0x26	; 38
      0001DE 26                     626 	.db #0x26	; 38
      0001DF 26                     627 	.db #0x26	; 38
      0001E0 26                     628 	.db #0x26	; 38
      0001E1 26                     629 	.db #0x26	; 38
      0001E2 26                     630 	.db #0x26	; 38
      0001E3 26                     631 	.db #0x26	; 38
      0001E4 26                     632 	.db #0x26	; 38
      0001E5 26                     633 	.db #0x26	; 38
      0001E6 26                     634 	.db #0x26	; 38
      0001E7 26                     635 	.db #0x26	; 38
      0001E8 26                     636 	.db #0x26	; 38
      0001E9 26                     637 	.db #0x26	; 38
      0001EA 26                     638 	.db #0x26	; 38
      0001EB 26                     639 	.db #0x26	; 38
      0001EC 26                     640 	.db #0x26	; 38
      0001ED 26                     641 	.db #0x26	; 38
      0001EE 25                     642 	.db #0x25	; 37
      0001EF 26                     643 	.db #0x26	; 38
      0001F0 26                     644 	.db #0x26	; 38
      0001F1 26                     645 	.db #0x26	; 38
      0001F2 26                     646 	.db #0x26	; 38
      0001F3 26                     647 	.db #0x26	; 38
      0001F4 26                     648 	.db #0x26	; 38
      0001F5 26                     649 	.db #0x26	; 38
      0001F6 26                     650 	.db #0x26	; 38
      0001F7 26                     651 	.db #0x26	; 38
      0001F8 26                     652 	.db #0x26	; 38
      0001F9 26                     653 	.db #0x26	; 38
      0001FA 2A                     654 	.db #0x2a	; 42
      0001FB 29                     655 	.db #0x29	; 41
      0001FC 26                     656 	.db #0x26	; 38
      0001FD 26                     657 	.db #0x26	; 38
      0001FE 26                     658 	.db #0x26	; 38
      0001FF 26                     659 	.db #0x26	; 38
      000200 26                     660 	.db #0x26	; 38
      000201 26                     661 	.db #0x26	; 38
      000202 26                     662 	.db #0x26	; 38
      000203 26                     663 	.db #0x26	; 38
      000204 26                     664 	.db #0x26	; 38
      000205 26                     665 	.db #0x26	; 38
      000206 26                     666 	.db #0x26	; 38
      000207 26                     667 	.db #0x26	; 38
      000208 26                     668 	.db #0x26	; 38
      000209 26                     669 	.db #0x26	; 38
      00020A 26                     670 	.db #0x26	; 38
      00020B 26                     671 	.db #0x26	; 38
      00020C 26                     672 	.db #0x26	; 38
      00020D 26                     673 	.db #0x26	; 38
      00020E 27                     674 	.db #0x27	; 39
      00020F 28                     675 	.db #0x28	; 40
      000210 26                     676 	.db #0x26	; 38
      000211 26                     677 	.db #0x26	; 38
      000212 26                     678 	.db #0x26	; 38
      000213 26                     679 	.db #0x26	; 38
      000214 26                     680 	.db #0x26	; 38
      000215 26                     681 	.db #0x26	; 38
      000216 26                     682 	.db #0x26	; 38
      000217 26                     683 	.db #0x26	; 38
      000218 26                     684 	.db #0x26	; 38
      000219 26                     685 	.db #0x26	; 38
      00021A 26                     686 	.db #0x26	; 38
      00021B 26                     687 	.db #0x26	; 38
      00021C 26                     688 	.db #0x26	; 38
      00021D 26                     689 	.db #0x26	; 38
      00021E 26                     690 	.db #0x26	; 38
      00021F 26                     691 	.db #0x26	; 38
      000220 26                     692 	.db #0x26	; 38
      000221 26                     693 	.db #0x26	; 38
      000222 26                     694 	.db #0x26	; 38
      000223 26                     695 	.db #0x26	; 38
      000224 26                     696 	.db #0x26	; 38
      000225 26                     697 	.db #0x26	; 38
      000226 26                     698 	.db #0x26	; 38
      000227 26                     699 	.db #0x26	; 38
      000228 26                     700 	.db #0x26	; 38
      000229 26                     701 	.db #0x26	; 38
      00022A 26                     702 	.db #0x26	; 38
      00022B 26                     703 	.db #0x26	; 38
      00022C 26                     704 	.db #0x26	; 38
      00022D 26                     705 	.db #0x26	; 38
      00022E 2A                     706 	.db #0x2a	; 42
      00022F 29                     707 	.db #0x29	; 41
      000230 26                     708 	.db #0x26	; 38
      000231 26                     709 	.db #0x26	; 38
      000232 26                     710 	.db #0x26	; 38
      000233 26                     711 	.db #0x26	; 38
      000234 26                     712 	.db #0x26	; 38
      000235 26                     713 	.db #0x26	; 38
      000236 26                     714 	.db #0x26	; 38
      000237 26                     715 	.db #0x26	; 38
      000238 26                     716 	.db #0x26	; 38
      000239 26                     717 	.db #0x26	; 38
      00023A 26                     718 	.db #0x26	; 38
      00023B 26                     719 	.db #0x26	; 38
      00023C 26                     720 	.db #0x26	; 38
      00023D 26                     721 	.db #0x26	; 38
      00023E 26                     722 	.db #0x26	; 38
      00023F 26                     723 	.db #0x26	; 38
      000240 26                     724 	.db #0x26	; 38
      000241 26                     725 	.db #0x26	; 38
      000242 26                     726 	.db #0x26	; 38
      000243 26                     727 	.db #0x26	; 38
      000244 26                     728 	.db #0x26	; 38
      000245 26                     729 	.db #0x26	; 38
      000246 26                     730 	.db #0x26	; 38
      000247 26                     731 	.db #0x26	; 38
      000248 26                     732 	.db #0x26	; 38
      000249 26                     733 	.db #0x26	; 38
      00024A 26                     734 	.db #0x26	; 38
      00024B 26                     735 	.db #0x26	; 38
      00024C 26                     736 	.db #0x26	; 38
      00024D 26                     737 	.db #0x26	; 38
      00024E 26                     738 	.db #0x26	; 38
      00024F 26                     739 	.db #0x26	; 38
      000250 26                     740 	.db #0x26	; 38
      000251 26                     741 	.db #0x26	; 38
      000252 26                     742 	.db #0x26	; 38
      000253 26                     743 	.db #0x26	; 38
      000254 26                     744 	.db #0x26	; 38
      000255 26                     745 	.db #0x26	; 38
      000256 26                     746 	.db #0x26	; 38
      000257 26                     747 	.db #0x26	; 38
      000258 26                     748 	.db #0x26	; 38
      000259 26                     749 	.db #0x26	; 38
      00025A 26                     750 	.db #0x26	; 38
      00025B 26                     751 	.db #0x26	; 38
      00025C 26                     752 	.db #0x26	; 38
      00025D 26                     753 	.db #0x26	; 38
      00025E 26                     754 	.db #0x26	; 38
      00025F 26                     755 	.db #0x26	; 38
      000260 26                     756 	.db #0x26	; 38
      000261 26                     757 	.db #0x26	; 38
      000262 26                     758 	.db #0x26	; 38
      000263 26                     759 	.db #0x26	; 38
      000264 26                     760 	.db #0x26	; 38
      000265 26                     761 	.db #0x26	; 38
      000266 26                     762 	.db #0x26	; 38
      000267 26                     763 	.db #0x26	; 38
      000268 26                     764 	.db #0x26	; 38
      000269 26                     765 	.db #0x26	; 38
      00026A 26                     766 	.db #0x26	; 38
      00026B 26                     767 	.db #0x26	; 38
      00026C 26                     768 	.db #0x26	; 38
      00026D 26                     769 	.db #0x26	; 38
      00026E 26                     770 	.db #0x26	; 38
      00026F 26                     771 	.db #0x26	; 38
      000270 26                     772 	.db #0x26	; 38
      000271 26                     773 	.db #0x26	; 38
      000272 26                     774 	.db #0x26	; 38
      000273 26                     775 	.db #0x26	; 38
      000274 26                     776 	.db #0x26	; 38
      000275 26                     777 	.db #0x26	; 38
      000276 26                     778 	.db #0x26	; 38
      000277 26                     779 	.db #0x26	; 38
      000278 26                     780 	.db #0x26	; 38
      000279 26                     781 	.db #0x26	; 38
      00027A 26                     782 	.db #0x26	; 38
      00027B 26                     783 	.db #0x26	; 38
      00027C 26                     784 	.db #0x26	; 38
      00027D 26                     785 	.db #0x26	; 38
      00027E 26                     786 	.db #0x26	; 38
      00027F 26                     787 	.db #0x26	; 38
      000280 26                     788 	.db #0x26	; 38
      000281 26                     789 	.db #0x26	; 38
      000282 26                     790 	.db #0x26	; 38
      000283 26                     791 	.db #0x26	; 38
      000284 26                     792 	.db #0x26	; 38
      000285 26                     793 	.db #0x26	; 38
      000286 26                     794 	.db #0x26	; 38
      000287 25                     795 	.db #0x25	; 37
      000288 26                     796 	.db #0x26	; 38
      000289 26                     797 	.db #0x26	; 38
      00028A 26                     798 	.db #0x26	; 38
      00028B 26                     799 	.db #0x26	; 38
      00028C 26                     800 	.db #0x26	; 38
      00028D 26                     801 	.db #0x26	; 38
      00028E 26                     802 	.db #0x26	; 38
      00028F 26                     803 	.db #0x26	; 38
      000290 26                     804 	.db #0x26	; 38
      000291 26                     805 	.db #0x26	; 38
      000292 26                     806 	.db #0x26	; 38
      000293 26                     807 	.db #0x26	; 38
      000294 26                     808 	.db #0x26	; 38
      000295 26                     809 	.db #0x26	; 38
      000296 26                     810 	.db #0x26	; 38
      000297 26                     811 	.db #0x26	; 38
      000298 26                     812 	.db #0x26	; 38
      000299 26                     813 	.db #0x26	; 38
      00029A 26                     814 	.db #0x26	; 38
      00029B 26                     815 	.db #0x26	; 38
      00029C 26                     816 	.db #0x26	; 38
      00029D 26                     817 	.db #0x26	; 38
      00029E 26                     818 	.db #0x26	; 38
      00029F 26                     819 	.db #0x26	; 38
      0002A0 26                     820 	.db #0x26	; 38
      0002A1 26                     821 	.db #0x26	; 38
      0002A2 26                     822 	.db #0x26	; 38
      0002A3 26                     823 	.db #0x26	; 38
      0002A4 26                     824 	.db #0x26	; 38
      0002A5 26                     825 	.db #0x26	; 38
      0002A6 26                     826 	.db #0x26	; 38
      0002A7 28                     827 	.db #0x28	; 40
      0002A8 26                     828 	.db #0x26	; 38
      0002A9 26                     829 	.db #0x26	; 38
      0002AA 26                     830 	.db #0x26	; 38
      0002AB 26                     831 	.db #0x26	; 38
      0002AC 26                     832 	.db #0x26	; 38
      0002AD 26                     833 	.db #0x26	; 38
      0002AE 26                     834 	.db #0x26	; 38
      0002AF 26                     835 	.db #0x26	; 38
      0002B0 26                     836 	.db #0x26	; 38
      0002B1 26                     837 	.db #0x26	; 38
      0002B2 26                     838 	.db #0x26	; 38
      0002B3 26                     839 	.db #0x26	; 38
      0002B4 26                     840 	.db #0x26	; 38
      0002B5 26                     841 	.db #0x26	; 38
      0002B6 26                     842 	.db #0x26	; 38
      0002B7 26                     843 	.db #0x26	; 38
      0002B8 26                     844 	.db #0x26	; 38
      0002B9 26                     845 	.db #0x26	; 38
      0002BA 26                     846 	.db #0x26	; 38
      0002BB 26                     847 	.db #0x26	; 38
      0002BC 26                     848 	.db #0x26	; 38
      0002BD 26                     849 	.db #0x26	; 38
      0002BE 26                     850 	.db #0x26	; 38
      0002BF 26                     851 	.db #0x26	; 38
      0002C0 26                     852 	.db #0x26	; 38
      0002C1 26                     853 	.db #0x26	; 38
      0002C2 26                     854 	.db #0x26	; 38
      0002C3 26                     855 	.db #0x26	; 38
      0002C4 26                     856 	.db #0x26	; 38
      0002C5 26                     857 	.db #0x26	; 38
      0002C6 27                     858 	.db #0x27	; 39
      0002C7 29                     859 	.db #0x29	; 41
      0002C8 26                     860 	.db #0x26	; 38
      0002C9 26                     861 	.db #0x26	; 38
      0002CA 26                     862 	.db #0x26	; 38
      0002CB 26                     863 	.db #0x26	; 38
      0002CC 26                     864 	.db #0x26	; 38
      0002CD 26                     865 	.db #0x26	; 38
      0002CE 26                     866 	.db #0x26	; 38
      0002CF 26                     867 	.db #0x26	; 38
      0002D0 26                     868 	.db #0x26	; 38
      0002D1 26                     869 	.db #0x26	; 38
      0002D2 26                     870 	.db #0x26	; 38
      0002D3 26                     871 	.db #0x26	; 38
      0002D4 26                     872 	.db #0x26	; 38
      0002D5 26                     873 	.db #0x26	; 38
      0002D6 26                     874 	.db #0x26	; 38
      0002D7 26                     875 	.db #0x26	; 38
      0002D8 26                     876 	.db #0x26	; 38
      0002D9 26                     877 	.db #0x26	; 38
      0002DA 26                     878 	.db #0x26	; 38
      0002DB 26                     879 	.db #0x26	; 38
      0002DC 26                     880 	.db #0x26	; 38
      0002DD 26                     881 	.db #0x26	; 38
      0002DE 26                     882 	.db #0x26	; 38
      0002DF 26                     883 	.db #0x26	; 38
      0002E0 26                     884 	.db #0x26	; 38
      0002E1 26                     885 	.db #0x26	; 38
      0002E2 26                     886 	.db #0x26	; 38
      0002E3 26                     887 	.db #0x26	; 38
      0002E4 26                     888 	.db #0x26	; 38
      0002E5 26                     889 	.db #0x26	; 38
      0002E6 2A                     890 	.db #0x2a	; 42
      0002E7 26                     891 	.db #0x26	; 38
      0002E8 26                     892 	.db #0x26	; 38
      0002E9 26                     893 	.db #0x26	; 38
      0002EA 26                     894 	.db #0x26	; 38
      0002EB 26                     895 	.db #0x26	; 38
      0002EC 26                     896 	.db #0x26	; 38
      0002ED 26                     897 	.db #0x26	; 38
      0002EE 26                     898 	.db #0x26	; 38
      0002EF 26                     899 	.db #0x26	; 38
      0002F0 26                     900 	.db #0x26	; 38
      0002F1 26                     901 	.db #0x26	; 38
      0002F2 26                     902 	.db #0x26	; 38
      0002F3 26                     903 	.db #0x26	; 38
      0002F4 26                     904 	.db #0x26	; 38
      0002F5 26                     905 	.db #0x26	; 38
      0002F6 26                     906 	.db #0x26	; 38
      0002F7 26                     907 	.db #0x26	; 38
      0002F8 26                     908 	.db #0x26	; 38
      0002F9 26                     909 	.db #0x26	; 38
      0002FA 26                     910 	.db #0x26	; 38
      0002FB 26                     911 	.db #0x26	; 38
      0002FC 26                     912 	.db #0x26	; 38
      0002FD 26                     913 	.db #0x26	; 38
      0002FE 26                     914 	.db #0x26	; 38
      0002FF 26                     915 	.db #0x26	; 38
      000300 26                     916 	.db #0x26	; 38
      000301 26                     917 	.db #0x26	; 38
      000302 26                     918 	.db #0x26	; 38
      000303 26                     919 	.db #0x26	; 38
      000304 26                     920 	.db #0x26	; 38
      000305 26                     921 	.db #0x26	; 38
      000306 26                     922 	.db #0x26	; 38
      000307 26                     923 	.db #0x26	; 38
      000308 26                     924 	.db #0x26	; 38
      000309 26                     925 	.db #0x26	; 38
      00030A 26                     926 	.db #0x26	; 38
      00030B 26                     927 	.db #0x26	; 38
      00030C 26                     928 	.db #0x26	; 38
      00030D 26                     929 	.db #0x26	; 38
      00030E 26                     930 	.db #0x26	; 38
      00030F 26                     931 	.db #0x26	; 38
      000310 26                     932 	.db #0x26	; 38
      000311 26                     933 	.db #0x26	; 38
      000312 26                     934 	.db #0x26	; 38
      000313 26                     935 	.db #0x26	; 38
      000314 26                     936 	.db #0x26	; 38
      000315 26                     937 	.db #0x26	; 38
      000316 26                     938 	.db #0x26	; 38
      000317 26                     939 	.db #0x26	; 38
      000318 26                     940 	.db #0x26	; 38
      000319 26                     941 	.db #0x26	; 38
      00031A 26                     942 	.db #0x26	; 38
      00031B 26                     943 	.db #0x26	; 38
      00031C 26                     944 	.db #0x26	; 38
      00031D 26                     945 	.db #0x26	; 38
      00031E 26                     946 	.db #0x26	; 38
      00031F 26                     947 	.db #0x26	; 38
      000320 26                     948 	.db #0x26	; 38
      000321 26                     949 	.db #0x26	; 38
      000322 26                     950 	.db #0x26	; 38
      000323 26                     951 	.db #0x26	; 38
      000324 26                     952 	.db #0x26	; 38
      000325 26                     953 	.db #0x26	; 38
      000326 26                     954 	.db #0x26	; 38
      000327 26                     955 	.db #0x26	; 38
      000328 26                     956 	.db #0x26	; 38
      000329 26                     957 	.db #0x26	; 38
      00032A 26                     958 	.db #0x26	; 38
      00032B 26                     959 	.db #0x26	; 38
      00032C 26                     960 	.db #0x26	; 38
      00032D 26                     961 	.db #0x26	; 38
      00032E 26                     962 	.db #0x26	; 38
      00032F 26                     963 	.db #0x26	; 38
      000330 26                     964 	.db #0x26	; 38
      000331 26                     965 	.db #0x26	; 38
      000332 26                     966 	.db #0x26	; 38
      000333 26                     967 	.db #0x26	; 38
      000334 26                     968 	.db #0x26	; 38
      000335 26                     969 	.db #0x26	; 38
      000336 26                     970 	.db #0x26	; 38
      000337 26                     971 	.db #0x26	; 38
      000338 26                     972 	.db #0x26	; 38
      000339 26                     973 	.db #0x26	; 38
      00033A 26                     974 	.db #0x26	; 38
      00033B 26                     975 	.db #0x26	; 38
      00033C 26                     976 	.db #0x26	; 38
      00033D 26                     977 	.db #0x26	; 38
      00033E 26                     978 	.db #0x26	; 38
      00033F 26                     979 	.db #0x26	; 38
      000340 26                     980 	.db #0x26	; 38
      000341 26                     981 	.db #0x26	; 38
      000342 26                     982 	.db #0x26	; 38
      000343 26                     983 	.db #0x26	; 38
      000344 26                     984 	.db #0x26	; 38
      000345 26                     985 	.db #0x26	; 38
      000346 26                     986 	.db #0x26	; 38
      000347 26                     987 	.db #0x26	; 38
      000348 26                     988 	.db #0x26	; 38
      000349 26                     989 	.db #0x26	; 38
      00034A 26                     990 	.db #0x26	; 38
      00034B 26                     991 	.db #0x26	; 38
      00034C 26                     992 	.db #0x26	; 38
      00034D 26                     993 	.db #0x26	; 38
      00034E 26                     994 	.db #0x26	; 38
      00034F 26                     995 	.db #0x26	; 38
      000350 26                     996 	.db #0x26	; 38
      000351 26                     997 	.db #0x26	; 38
      000352 26                     998 	.db #0x26	; 38
      000353 26                     999 	.db #0x26	; 38
      000354 26                    1000 	.db #0x26	; 38
      000355 26                    1001 	.db #0x26	; 38
      000356 26                    1002 	.db #0x26	; 38
      000357 26                    1003 	.db #0x26	; 38
      000358 26                    1004 	.db #0x26	; 38
      000359 26                    1005 	.db #0x26	; 38
      00035A 26                    1006 	.db #0x26	; 38
      00035B 26                    1007 	.db #0x26	; 38
      00035C 26                    1008 	.db #0x26	; 38
      00035D 26                    1009 	.db #0x26	; 38
      00035E 26                    1010 	.db #0x26	; 38
      00035F 26                    1011 	.db #0x26	; 38
      000360 26                    1012 	.db #0x26	; 38
      000361 26                    1013 	.db #0x26	; 38
      000362 26                    1014 	.db #0x26	; 38
      000363 26                    1015 	.db #0x26	; 38
      000364 26                    1016 	.db #0x26	; 38
      000365 26                    1017 	.db #0x26	; 38
      000366 26                    1018 	.db #0x26	; 38
      000367 26                    1019 	.db #0x26	; 38
      000368 26                    1020 	.db #0x26	; 38
      000369 26                    1021 	.db #0x26	; 38
      00036A 26                    1022 	.db #0x26	; 38
      00036B 26                    1023 	.db #0x26	; 38
      00036C 26                    1024 	.db #0x26	; 38
      00036D 26                    1025 	.db #0x26	; 38
      00036E 26                    1026 	.db #0x26	; 38
      00036F 26                    1027 	.db #0x26	; 38
      000370 26                    1028 	.db #0x26	; 38
      000371 26                    1029 	.db #0x26	; 38
      000372 26                    1030 	.db #0x26	; 38
      000373 26                    1031 	.db #0x26	; 38
      000374 26                    1032 	.db #0x26	; 38
      000375 26                    1033 	.db #0x26	; 38
      000376 26                    1034 	.db #0x26	; 38
      000377 26                    1035 	.db #0x26	; 38
      000378 25                    1036 	.db #0x25	; 37
      000379 26                    1037 	.db #0x26	; 38
      00037A 26                    1038 	.db #0x26	; 38
      00037B 26                    1039 	.db #0x26	; 38
      00037C 26                    1040 	.db #0x26	; 38
      00037D 26                    1041 	.db #0x26	; 38
      00037E 26                    1042 	.db #0x26	; 38
      00037F 26                    1043 	.db #0x26	; 38
      000380 26                    1044 	.db #0x26	; 38
      000381 26                    1045 	.db #0x26	; 38
      000382 26                    1046 	.db #0x26	; 38
      000383 26                    1047 	.db #0x26	; 38
      000384 26                    1048 	.db #0x26	; 38
      000385 26                    1049 	.db #0x26	; 38
      000386 26                    1050 	.db #0x26	; 38
      000387 26                    1051 	.db #0x26	; 38
      000388 26                    1052 	.db #0x26	; 38
      000389 26                    1053 	.db #0x26	; 38
      00038A 26                    1054 	.db #0x26	; 38
      00038B 26                    1055 	.db #0x26	; 38
      00038C 26                    1056 	.db #0x26	; 38
      00038D 26                    1057 	.db #0x26	; 38
      00038E 26                    1058 	.db #0x26	; 38
      00038F 26                    1059 	.db #0x26	; 38
      000390 26                    1060 	.db #0x26	; 38
      000391 26                    1061 	.db #0x26	; 38
      000392 26                    1062 	.db #0x26	; 38
      000393 26                    1063 	.db #0x26	; 38
      000394 26                    1064 	.db #0x26	; 38
      000395 26                    1065 	.db #0x26	; 38
      000396 26                    1066 	.db #0x26	; 38
      000397 26                    1067 	.db #0x26	; 38
      000398 27                    1068 	.db #0x27	; 39
      000399 28                    1069 	.db #0x28	; 40
      00039A 26                    1070 	.db #0x26	; 38
      00039B 26                    1071 	.db #0x26	; 38
      00039C 26                    1072 	.db #0x26	; 38
      00039D 26                    1073 	.db #0x26	; 38
      00039E 26                    1074 	.db #0x26	; 38
      00039F 26                    1075 	.db #0x26	; 38
      0003A0 26                    1076 	.db #0x26	; 38
      0003A1 26                    1077 	.db #0x26	; 38
      0003A2 26                    1078 	.db #0x26	; 38
      0003A3 26                    1079 	.db #0x26	; 38
      0003A4 26                    1080 	.db #0x26	; 38
      0003A5 26                    1081 	.db #0x26	; 38
      0003A6 26                    1082 	.db #0x26	; 38
      0003A7 26                    1083 	.db #0x26	; 38
      0003A8 26                    1084 	.db #0x26	; 38
      0003A9 26                    1085 	.db #0x26	; 38
      0003AA 26                    1086 	.db #0x26	; 38
      0003AB 26                    1087 	.db #0x26	; 38
      0003AC 26                    1088 	.db #0x26	; 38
      0003AD 26                    1089 	.db #0x26	; 38
      0003AE 26                    1090 	.db #0x26	; 38
      0003AF 26                    1091 	.db #0x26	; 38
      0003B0 26                    1092 	.db #0x26	; 38
      0003B1 26                    1093 	.db #0x26	; 38
      0003B2 26                    1094 	.db #0x26	; 38
      0003B3 26                    1095 	.db #0x26	; 38
      0003B4 26                    1096 	.db #0x26	; 38
      0003B5 26                    1097 	.db #0x26	; 38
      0003B6 26                    1098 	.db #0x26	; 38
      0003B7 26                    1099 	.db #0x26	; 38
      0003B8 2A                    1100 	.db #0x2a	; 42
      0003B9 29                    1101 	.db #0x29	; 41
      0003BA 26                    1102 	.db #0x26	; 38
      0003BB 26                    1103 	.db #0x26	; 38
      0003BC 26                    1104 	.db #0x26	; 38
      0003BD 26                    1105 	.db #0x26	; 38
      0003BE 26                    1106 	.db #0x26	; 38
      0003BF 26                    1107 	.db #0x26	; 38
      0003C0 26                    1108 	.db #0x26	; 38
      0003C1 26                    1109 	.db #0x26	; 38
      0003C2 26                    1110 	.db #0x26	; 38
      0003C3 26                    1111 	.db #0x26	; 38
      0003C4 26                    1112 	.db #0x26	; 38
      0003C5 26                    1113 	.db #0x26	; 38
      0003C6 26                    1114 	.db #0x26	; 38
      0003C7 26                    1115 	.db #0x26	; 38
      0003C8 26                    1116 	.db #0x26	; 38
      0003C9 26                    1117 	.db #0x26	; 38
      0003CA 26                    1118 	.db #0x26	; 38
      0003CB 26                    1119 	.db #0x26	; 38
      0003CC 26                    1120 	.db #0x26	; 38
      0003CD 26                    1121 	.db #0x26	; 38
      0003CE 26                    1122 	.db #0x26	; 38
      0003CF 26                    1123 	.db #0x26	; 38
      0003D0 26                    1124 	.db #0x26	; 38
      0003D1 26                    1125 	.db #0x26	; 38
      0003D2 26                    1126 	.db #0x26	; 38
      0003D3 26                    1127 	.db #0x26	; 38
      0003D4 26                    1128 	.db #0x26	; 38
      0003D5 26                    1129 	.db #0x26	; 38
      0003D6 26                    1130 	.db #0x26	; 38
      0003D7 26                    1131 	.db #0x26	; 38
      0003D8 26                    1132 	.db #0x26	; 38
      0003D9 26                    1133 	.db #0x26	; 38
      0003DA 26                    1134 	.db #0x26	; 38
      0003DB 26                    1135 	.db #0x26	; 38
      0003DC 26                    1136 	.db #0x26	; 38
      0003DD 26                    1137 	.db #0x26	; 38
      0003DE 26                    1138 	.db #0x26	; 38
      0003DF 26                    1139 	.db #0x26	; 38
      0003E0 26                    1140 	.db #0x26	; 38
      0003E1 26                    1141 	.db #0x26	; 38
      0003E2 26                    1142 	.db #0x26	; 38
      0003E3 26                    1143 	.db #0x26	; 38
      0003E4 26                    1144 	.db #0x26	; 38
      0003E5 26                    1145 	.db #0x26	; 38
      0003E6 26                    1146 	.db #0x26	; 38
      0003E7 26                    1147 	.db #0x26	; 38
      0003E8 26                    1148 	.db #0x26	; 38
      0003E9 26                    1149 	.db #0x26	; 38
      0003EA 26                    1150 	.db #0x26	; 38
      0003EB 26                    1151 	.db #0x26	; 38
      0003EC 26                    1152 	.db #0x26	; 38
      0003ED 26                    1153 	.db #0x26	; 38
      0003EE 26                    1154 	.db #0x26	; 38
      0003EF 26                    1155 	.db #0x26	; 38
      0003F0 26                    1156 	.db #0x26	; 38
      0003F1 26                    1157 	.db #0x26	; 38
      0003F2 26                    1158 	.db #0x26	; 38
      0003F3 26                    1159 	.db #0x26	; 38
      0003F4 26                    1160 	.db #0x26	; 38
      0003F5 26                    1161 	.db #0x26	; 38
      0003F6 26                    1162 	.db #0x26	; 38
      0003F7 26                    1163 	.db #0x26	; 38
      0003F8 26                    1164 	.db #0x26	; 38
      0003F9 26                    1165 	.db #0x26	; 38
      0003FA 26                    1166 	.db #0x26	; 38
      0003FB 26                    1167 	.db #0x26	; 38
      0003FC 26                    1168 	.db #0x26	; 38
      0003FD 26                    1169 	.db #0x26	; 38
      0003FE 26                    1170 	.db #0x26	; 38
      0003FF 26                    1171 	.db #0x26	; 38
      000400 26                    1172 	.db #0x26	; 38
      000401 26                    1173 	.db #0x26	; 38
      000402 26                    1174 	.db #0x26	; 38
      000403 26                    1175 	.db #0x26	; 38
      000404 26                    1176 	.db #0x26	; 38
      000405 26                    1177 	.db #0x26	; 38
      000406 26                    1178 	.db #0x26	; 38
      000407 26                    1179 	.db #0x26	; 38
      000408 26                    1180 	.db #0x26	; 38
      000409 26                    1181 	.db #0x26	; 38
      00040A 26                    1182 	.db #0x26	; 38
      00040B 26                    1183 	.db #0x26	; 38
      00040C 26                    1184 	.db #0x26	; 38
      00040D 26                    1185 	.db #0x26	; 38
      00040E 26                    1186 	.db #0x26	; 38
      00040F 26                    1187 	.db #0x26	; 38
      000410 26                    1188 	.db #0x26	; 38
      000411 26                    1189 	.db #0x26	; 38
      000412 26                    1190 	.db #0x26	; 38
      000413 26                    1191 	.db #0x26	; 38
      000414 26                    1192 	.db #0x26	; 38
      000415 26                    1193 	.db #0x26	; 38
      000416 26                    1194 	.db #0x26	; 38
      000417 26                    1195 	.db #0x26	; 38
      000418 26                    1196 	.db #0x26	; 38
      000419 26                    1197 	.db #0x26	; 38
      00041A 26                    1198 	.db #0x26	; 38
      00041B 26                    1199 	.db #0x26	; 38
      00041C 26                    1200 	.db #0x26	; 38
      00041D 26                    1201 	.db #0x26	; 38
      00041E 26                    1202 	.db #0x26	; 38
      00041F 26                    1203 	.db #0x26	; 38
      000420 26                    1204 	.db #0x26	; 38
      000421 26                    1205 	.db #0x26	; 38
      000422 26                    1206 	.db #0x26	; 38
      000423 26                    1207 	.db #0x26	; 38
      000424 26                    1208 	.db #0x26	; 38
      000425 26                    1209 	.db #0x26	; 38
      000426 26                    1210 	.db #0x26	; 38
      000427 26                    1211 	.db #0x26	; 38
      000428 26                    1212 	.db #0x26	; 38
      000429 26                    1213 	.db #0x26	; 38
      00042A 26                    1214 	.db #0x26	; 38
      00042B 26                    1215 	.db #0x26	; 38
      00042C 26                    1216 	.db #0x26	; 38
      00042D 26                    1217 	.db #0x26	; 38
      00042E 26                    1218 	.db #0x26	; 38
      00042F 26                    1219 	.db #0x26	; 38
      000430 26                    1220 	.db #0x26	; 38
      000431 26                    1221 	.db #0x26	; 38
      000432 26                    1222 	.db #0x26	; 38
      000433 26                    1223 	.db #0x26	; 38
      000434 26                    1224 	.db #0x26	; 38
      000435 26                    1225 	.db #0x26	; 38
      000436 26                    1226 	.db #0x26	; 38
      000437 26                    1227 	.db #0x26	; 38
      000438 26                    1228 	.db #0x26	; 38
      000439 26                    1229 	.db #0x26	; 38
      00043A 26                    1230 	.db #0x26	; 38
      00043B 26                    1231 	.db #0x26	; 38
      00043C 26                    1232 	.db #0x26	; 38
      00043D 26                    1233 	.db #0x26	; 38
      00043E 26                    1234 	.db #0x26	; 38
      00043F 26                    1235 	.db #0x26	; 38
      000440 26                    1236 	.db #0x26	; 38
      000441 26                    1237 	.db #0x26	; 38
      000442 26                    1238 	.db #0x26	; 38
      000443 26                    1239 	.db #0x26	; 38
      000444 26                    1240 	.db #0x26	; 38
      000445 26                    1241 	.db #0x26	; 38
      000446 26                    1242 	.db #0x26	; 38
      000447 26                    1243 	.db #0x26	; 38
      000448 26                    1244 	.db #0x26	; 38
      000449 26                    1245 	.db #0x26	; 38
      00044A 26                    1246 	.db #0x26	; 38
      00044B 26                    1247 	.db #0x26	; 38
      00044C 26                    1248 	.db #0x26	; 38
      00044D 26                    1249 	.db #0x26	; 38
      00044E 26                    1250 	.db #0x26	; 38
      00044F 26                    1251 	.db #0x26	; 38
      000450 26                    1252 	.db #0x26	; 38
      000451 26                    1253 	.db #0x26	; 38
      000452 26                    1254 	.db #0x26	; 38
      000453 26                    1255 	.db #0x26	; 38
      000454 26                    1256 	.db #0x26	; 38
      000455 26                    1257 	.db #0x26	; 38
      000456 26                    1258 	.db #0x26	; 38
      000457 26                    1259 	.db #0x26	; 38
      000458 26                    1260 	.db #0x26	; 38
      000459 26                    1261 	.db #0x26	; 38
      00045A 26                    1262 	.db #0x26	; 38
      00045B 26                    1263 	.db #0x26	; 38
      00045C 26                    1264 	.db #0x26	; 38
      00045D 26                    1265 	.db #0x26	; 38
      00045E 26                    1266 	.db #0x26	; 38
      00045F 26                    1267 	.db #0x26	; 38
      000460 26                    1268 	.db #0x26	; 38
      000461 26                    1269 	.db #0x26	; 38
      000462 26                    1270 	.db #0x26	; 38
      000463 26                    1271 	.db #0x26	; 38
      000464 26                    1272 	.db #0x26	; 38
      000465 26                    1273 	.db #0x26	; 38
      000466 26                    1274 	.db #0x26	; 38
      000467 26                    1275 	.db #0x26	; 38
      000468 26                    1276 	.db #0x26	; 38
      000469 26                    1277 	.db #0x26	; 38
      00046A 26                    1278 	.db #0x26	; 38
      00046B 26                    1279 	.db #0x26	; 38
      00046C 26                    1280 	.db #0x26	; 38
      00046D 26                    1281 	.db #0x26	; 38
      00046E 26                    1282 	.db #0x26	; 38
      00046F 26                    1283 	.db #0x26	; 38
      000470 26                    1284 	.db #0x26	; 38
      000471 26                    1285 	.db #0x26	; 38
      000472 27                    1286 	.db #0x27	; 39
      000473 28                    1287 	.db #0x28	; 40
      000474 26                    1288 	.db #0x26	; 38
      000475 26                    1289 	.db #0x26	; 38
      000476 26                    1290 	.db #0x26	; 38
      000477 26                    1291 	.db #0x26	; 38
      000478 26                    1292 	.db #0x26	; 38
      000479 26                    1293 	.db #0x26	; 38
      00047A 26                    1294 	.db #0x26	; 38
      00047B 26                    1295 	.db #0x26	; 38
      00047C 26                    1296 	.db #0x26	; 38
      00047D 26                    1297 	.db #0x26	; 38
      00047E 26                    1298 	.db #0x26	; 38
      00047F 26                    1299 	.db #0x26	; 38
      000480 26                    1300 	.db #0x26	; 38
      000481 26                    1301 	.db #0x26	; 38
      000482 26                    1302 	.db #0x26	; 38
      000483 26                    1303 	.db #0x26	; 38
      000484 26                    1304 	.db #0x26	; 38
      000485 26                    1305 	.db #0x26	; 38
      000486 26                    1306 	.db #0x26	; 38
      000487                       1307 _backgroundtiles:
      000487 00                    1308 	.db #0x00	; 0
      000488 00                    1309 	.db #0x00	; 0
      000489 00                    1310 	.db #0x00	; 0
      00048A 00                    1311 	.db #0x00	; 0
      00048B 00                    1312 	.db #0x00	; 0
      00048C 00                    1313 	.db #0x00	; 0
      00048D 18                    1314 	.db #0x18	; 24
      00048E 18                    1315 	.db #0x18	; 24
      00048F 18                    1316 	.db #0x18	; 24
      000490 18                    1317 	.db #0x18	; 24
      000491 00                    1318 	.db #0x00	; 0
      000492 00                    1319 	.db #0x00	; 0
      000493 00                    1320 	.db #0x00	; 0
      000494 00                    1321 	.db #0x00	; 0
      000495 00                    1322 	.db #0x00	; 0
      000496 00                    1323 	.db #0x00	; 0
      000497 00                    1324 	.db #0x00	; 0
      000498 00                    1325 	.db #0x00	; 0
      000499 00                    1326 	.db #0x00	; 0
      00049A 00                    1327 	.db #0x00	; 0
      00049B 00                    1328 	.db #0x00	; 0
      00049C 00                    1329 	.db #0x00	; 0
      00049D 00                    1330 	.db #0x00	; 0
      00049E 00                    1331 	.db #0x00	; 0
      00049F 00                    1332 	.db #0x00	; 0
      0004A0 00                    1333 	.db #0x00	; 0
      0004A1 00                    1334 	.db #0x00	; 0
      0004A2 00                    1335 	.db #0x00	; 0
      0004A3 00                    1336 	.db #0x00	; 0
      0004A4 00                    1337 	.db #0x00	; 0
      0004A5 00                    1338 	.db #0x00	; 0
      0004A6 00                    1339 	.db #0x00	; 0
      0004A7 1F                    1340 	.db #0x1f	; 31
      0004A8 1F                    1341 	.db #0x1f	; 31
      0004A9 3F                    1342 	.db #0x3f	; 63
      0004AA 3F                    1343 	.db #0x3f	; 63
      0004AB 7F                    1344 	.db #0x7f	; 127
      0004AC 7F                    1345 	.db #0x7f	; 127
      0004AD FF                    1346 	.db #0xff	; 255
      0004AE FF                    1347 	.db #0xff	; 255
      0004AF FF                    1348 	.db #0xff	; 255
      0004B0 FF                    1349 	.db #0xff	; 255
      0004B1 FF                    1350 	.db #0xff	; 255
      0004B2 FF                    1351 	.db #0xff	; 255
      0004B3 FF                    1352 	.db #0xff	; 255
      0004B4 FF                    1353 	.db #0xff	; 255
      0004B5 FF                    1354 	.db #0xff	; 255
      0004B6 FF                    1355 	.db #0xff	; 255
      0004B7 F8                    1356 	.db #0xf8	; 248
      0004B8 F8                    1357 	.db #0xf8	; 248
      0004B9 FC                    1358 	.db #0xfc	; 252
      0004BA FC                    1359 	.db #0xfc	; 252
      0004BB FE                    1360 	.db #0xfe	; 254
      0004BC FE                    1361 	.db #0xfe	; 254
      0004BD FF                    1362 	.db #0xff	; 255
      0004BE FF                    1363 	.db #0xff	; 255
      0004BF FF                    1364 	.db #0xff	; 255
      0004C0 FF                    1365 	.db #0xff	; 255
      0004C1 FF                    1366 	.db #0xff	; 255
      0004C2 FF                    1367 	.db #0xff	; 255
      0004C3 FF                    1368 	.db #0xff	; 255
      0004C4 FF                    1369 	.db #0xff	; 255
      0004C5 FF                    1370 	.db #0xff	; 255
      0004C6 FF                    1371 	.db #0xff	; 255
      0004C7 FF                    1372 	.db #0xff	; 255
      0004C8 FF                    1373 	.db #0xff	; 255
      0004C9 FF                    1374 	.db #0xff	; 255
      0004CA FF                    1375 	.db #0xff	; 255
      0004CB FF                    1376 	.db #0xff	; 255
      0004CC FF                    1377 	.db #0xff	; 255
      0004CD FF                    1378 	.db #0xff	; 255
      0004CE FF                    1379 	.db #0xff	; 255
      0004CF FF                    1380 	.db #0xff	; 255
      0004D0 FF                    1381 	.db #0xff	; 255
      0004D1 FE                    1382 	.db #0xfe	; 254
      0004D2 FE                    1383 	.db #0xfe	; 254
      0004D3 FC                    1384 	.db #0xfc	; 252
      0004D4 FC                    1385 	.db #0xfc	; 252
      0004D5 F8                    1386 	.db #0xf8	; 248
      0004D6 F8                    1387 	.db #0xf8	; 248
      0004D7 FF                    1388 	.db #0xff	; 255
      0004D8 FF                    1389 	.db #0xff	; 255
      0004D9 FF                    1390 	.db #0xff	; 255
      0004DA FF                    1391 	.db #0xff	; 255
      0004DB FF                    1392 	.db #0xff	; 255
      0004DC FF                    1393 	.db #0xff	; 255
      0004DD FF                    1394 	.db #0xff	; 255
      0004DE FF                    1395 	.db #0xff	; 255
      0004DF FF                    1396 	.db #0xff	; 255
      0004E0 FF                    1397 	.db #0xff	; 255
      0004E1 7F                    1398 	.db #0x7f	; 127
      0004E2 7F                    1399 	.db #0x7f	; 127
      0004E3 3F                    1400 	.db #0x3f	; 63
      0004E4 3F                    1401 	.db #0x3f	; 63
      0004E5 1F                    1402 	.db #0x1f	; 31
      0004E6 1F                    1403 	.db #0x1f	; 31
      0004E7                       1404 _healthblock:
      0004E7 FE                    1405 	.db #0xfe	; 254
      0004E8 FE                    1406 	.db #0xfe	; 254
      0004E9 FE                    1407 	.db #0xfe	; 254
      0004EA FE                    1408 	.db #0xfe	; 254
      0004EB FE                    1409 	.db #0xfe	; 254
      0004EC FE                    1410 	.db #0xfe	; 254
      0004ED FE                    1411 	.db #0xfe	; 254
      0004EE FE                    1412 	.db #0xfe	; 254
      0004EF FE                    1413 	.db #0xfe	; 254
      0004F0 FE                    1414 	.db #0xfe	; 254
      0004F1 FE                    1415 	.db #0xfe	; 254
      0004F2 FE                    1416 	.db #0xfe	; 254
      0004F3 FE                    1417 	.db #0xfe	; 254
      0004F4 FE                    1418 	.db #0xfe	; 254
      0004F5 00                    1419 	.db #0x00	; 0
      0004F6 00                    1420 	.db #0x00	; 0
      0004F7                       1421 _enemy1:
      0004F7 3C                    1422 	.db #0x3c	; 60
      0004F8 3C                    1423 	.db #0x3c	; 60
      0004F9 7E                    1424 	.db #0x7e	; 126
      0004FA 7E                    1425 	.db #0x7e	; 126
      0004FB FF                    1426 	.db #0xff	; 255
      0004FC FF                    1427 	.db #0xff	; 255
      0004FD FF                    1428 	.db #0xff	; 255
      0004FE FF                    1429 	.db #0xff	; 255
      0004FF FF                    1430 	.db #0xff	; 255
      000500 FF                    1431 	.db #0xff	; 255
      000501 FF                    1432 	.db #0xff	; 255
      000502 FF                    1433 	.db #0xff	; 255
      000503 7E                    1434 	.db #0x7e	; 126
      000504 7E                    1435 	.db #0x7e	; 126
      000505 3C                    1436 	.db #0x3c	; 60
      000506 3C                    1437 	.db #0x3c	; 60
      000507                       1438 _BLANK:
      000507 26                    1439 	.db #0x26	; 38
      000508                       1440 _EMPTYSPRITE:
      000508 50                    1441 	.db #0x50	; 80	'P'
      000509                       1442 _ENEMYCOUNT:
      000509 05                    1443 	.db #0x05	; 5
                                   1444 ;main.c:56: void setHealthBar(uint8_t row, uint8_t hp) {
                                   1445 ;	---------------------------------
                                   1446 ; Function setHealthBar
                                   1447 ; ---------------------------------
      00050A                       1448 _setHealthBar::
      00050A E8 FB                 1449 	add	sp, #-5
                                   1450 ;main.c:57: if (hp >= 80) {
      00050C F8 08                 1451 	ldhl	sp,	#8
      00050E 7E                    1452 	ld	a, (hl)
      00050F D6 50                 1453 	sub	a, #0x50
      000511 38 31                 1454 	jr	C, 00102$
                                   1455 ;main.c:58: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      000513 F8 00                 1456 	ldhl	sp,	#0
      000515 4D                    1457 	ld	c, l
      000516 44                    1458 	ld	b, h
      000517 36 50                 1459 	ld	(hl), #0x50
      000519 69                    1460 	ld	l, c
                                   1461 ;	spillPairReg hl
                                   1462 ;	spillPairReg hl
      00051A 60                    1463 	ld	h, b
                                   1464 ;	spillPairReg hl
                                   1465 ;	spillPairReg hl
      00051B 23                    1466 	inc	hl
      00051C 36 50                 1467 	ld	(hl), #0x50
      00051E 69                    1468 	ld	l, c
                                   1469 ;	spillPairReg hl
                                   1470 ;	spillPairReg hl
      00051F 60                    1471 	ld	h, b
                                   1472 ;	spillPairReg hl
                                   1473 ;	spillPairReg hl
      000520 23                    1474 	inc	hl
      000521 23                    1475 	inc	hl
      000522 36 50                 1476 	ld	(hl), #0x50
      000524 69                    1477 	ld	l, c
                                   1478 ;	spillPairReg hl
                                   1479 ;	spillPairReg hl
      000525 60                    1480 	ld	h, b
                                   1481 ;	spillPairReg hl
                                   1482 ;	spillPairReg hl
      000526 23                    1483 	inc	hl
      000527 23                    1484 	inc	hl
      000528 23                    1485 	inc	hl
      000529 36 50                 1486 	ld	(hl), #0x50
      00052B 21 04 00              1487 	ld	hl, #0x0004
      00052E 09                    1488 	add	hl, bc
      00052F 36 50                 1489 	ld	(hl), #0x50
                                   1490 ;main.c:59: set_win_tiles(5,row,5,1,blockmap);
      000531 C5                    1491 	push	bc
      000532 21 05 01              1492 	ld	hl, #0x105
      000535 E5                    1493 	push	hl
      000536 F8 0B                 1494 	ldhl	sp,	#11
      000538 66                    1495 	ld	h, (hl)
      000539 2E 05                 1496 	ld	l, #0x05
      00053B E5                    1497 	push	hl
      00053C CDr00r00              1498 	call	_set_win_tiles
      00053F E8 06                 1499 	add	sp, #6
                                   1500 ;main.c:60: return;
      000541 C3r18r06              1501 	jp	00109$
      000544                       1502 00102$:
                                   1503 ;main.c:62: if (hp >= 60) {
      000544 F8 08                 1504 	ldhl	sp,	#8
      000546 7E                    1505 	ld	a, (hl)
      000547 D6 3C                 1506 	sub	a, #0x3c
      000549 38 31                 1507 	jr	C, 00104$
                                   1508 ;main.c:63: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      00054B F8 00                 1509 	ldhl	sp,	#0
      00054D 4D                    1510 	ld	c, l
      00054E 44                    1511 	ld	b, h
      00054F 36 50                 1512 	ld	(hl), #0x50
      000551 69                    1513 	ld	l, c
                                   1514 ;	spillPairReg hl
                                   1515 ;	spillPairReg hl
      000552 60                    1516 	ld	h, b
                                   1517 ;	spillPairReg hl
                                   1518 ;	spillPairReg hl
      000553 23                    1519 	inc	hl
      000554 36 50                 1520 	ld	(hl), #0x50
      000556 69                    1521 	ld	l, c
                                   1522 ;	spillPairReg hl
                                   1523 ;	spillPairReg hl
      000557 60                    1524 	ld	h, b
                                   1525 ;	spillPairReg hl
                                   1526 ;	spillPairReg hl
      000558 23                    1527 	inc	hl
      000559 23                    1528 	inc	hl
      00055A 36 50                 1529 	ld	(hl), #0x50
      00055C 69                    1530 	ld	l, c
                                   1531 ;	spillPairReg hl
                                   1532 ;	spillPairReg hl
      00055D 60                    1533 	ld	h, b
                                   1534 ;	spillPairReg hl
                                   1535 ;	spillPairReg hl
      00055E 23                    1536 	inc	hl
      00055F 23                    1537 	inc	hl
      000560 23                    1538 	inc	hl
      000561 36 50                 1539 	ld	(hl), #0x50
      000563 21 04 00              1540 	ld	hl, #0x0004
      000566 09                    1541 	add	hl, bc
      000567 36 00                 1542 	ld	(hl), #0x00
                                   1543 ;main.c:64: set_win_tiles(5,row,5,1,blockmap);
      000569 C5                    1544 	push	bc
      00056A 21 05 01              1545 	ld	hl, #0x105
      00056D E5                    1546 	push	hl
      00056E F8 0B                 1547 	ldhl	sp,	#11
      000570 66                    1548 	ld	h, (hl)
      000571 2E 05                 1549 	ld	l, #0x05
      000573 E5                    1550 	push	hl
      000574 CDr00r00              1551 	call	_set_win_tiles
      000577 E8 06                 1552 	add	sp, #6
                                   1553 ;main.c:65: return;
      000579 C3r18r06              1554 	jp	00109$
      00057C                       1555 00104$:
                                   1556 ;main.c:67: if (hp >= 40) {
      00057C F8 08                 1557 	ldhl	sp,	#8
      00057E 7E                    1558 	ld	a, (hl)
      00057F D6 28                 1559 	sub	a, #0x28
      000581 38 30                 1560 	jr	C, 00106$
                                   1561 ;main.c:68: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000583 F8 00                 1562 	ldhl	sp,	#0
      000585 4D                    1563 	ld	c, l
      000586 44                    1564 	ld	b, h
      000587 36 50                 1565 	ld	(hl), #0x50
      000589 69                    1566 	ld	l, c
                                   1567 ;	spillPairReg hl
                                   1568 ;	spillPairReg hl
      00058A 60                    1569 	ld	h, b
                                   1570 ;	spillPairReg hl
                                   1571 ;	spillPairReg hl
      00058B 23                    1572 	inc	hl
      00058C 36 50                 1573 	ld	(hl), #0x50
      00058E 69                    1574 	ld	l, c
                                   1575 ;	spillPairReg hl
                                   1576 ;	spillPairReg hl
      00058F 60                    1577 	ld	h, b
                                   1578 ;	spillPairReg hl
                                   1579 ;	spillPairReg hl
      000590 23                    1580 	inc	hl
      000591 23                    1581 	inc	hl
      000592 36 50                 1582 	ld	(hl), #0x50
      000594 59                    1583 	ld	e, c
      000595 50                    1584 	ld	d, b
      000596 13                    1585 	inc	de
      000597 13                    1586 	inc	de
      000598 13                    1587 	inc	de
      000599 AF                    1588 	xor	a, a
      00059A 12                    1589 	ld	(de), a
      00059B 21 04 00              1590 	ld	hl, #0x0004
      00059E 09                    1591 	add	hl, bc
      00059F 36 00                 1592 	ld	(hl), #0x00
                                   1593 ;main.c:69: set_win_tiles(5,row,5,1,blockmap);
      0005A1 C5                    1594 	push	bc
      0005A2 21 05 01              1595 	ld	hl, #0x105
      0005A5 E5                    1596 	push	hl
      0005A6 F8 0B                 1597 	ldhl	sp,	#11
      0005A8 66                    1598 	ld	h, (hl)
      0005A9 2E 05                 1599 	ld	l, #0x05
      0005AB E5                    1600 	push	hl
      0005AC CDr00r00              1601 	call	_set_win_tiles
      0005AF E8 06                 1602 	add	sp, #6
                                   1603 ;main.c:70: return;
      0005B1 18 65                 1604 	jr	00109$
      0005B3                       1605 00106$:
                                   1606 ;main.c:72: if (hp >= 20) {
      0005B3 F8 08                 1607 	ldhl	sp,	#8
      0005B5 7E                    1608 	ld	a, (hl)
      0005B6 D6 14                 1609 	sub	a, #0x14
      0005B8 38 30                 1610 	jr	C, 00108$
                                   1611 ;main.c:73: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      0005BA F8 00                 1612 	ldhl	sp,	#0
      0005BC 4D                    1613 	ld	c, l
      0005BD 44                    1614 	ld	b, h
      0005BE 36 50                 1615 	ld	(hl), #0x50
      0005C0 69                    1616 	ld	l, c
                                   1617 ;	spillPairReg hl
                                   1618 ;	spillPairReg hl
      0005C1 60                    1619 	ld	h, b
                                   1620 ;	spillPairReg hl
                                   1621 ;	spillPairReg hl
      0005C2 23                    1622 	inc	hl
      0005C3 36 50                 1623 	ld	(hl), #0x50
      0005C5 59                    1624 	ld	e, c
      0005C6 50                    1625 	ld	d, b
      0005C7 13                    1626 	inc	de
      0005C8 13                    1627 	inc	de
      0005C9 AF                    1628 	xor	a, a
      0005CA 12                    1629 	ld	(de), a
      0005CB 59                    1630 	ld	e, c
      0005CC 50                    1631 	ld	d, b
      0005CD 13                    1632 	inc	de
      0005CE 13                    1633 	inc	de
      0005CF 13                    1634 	inc	de
      0005D0 AF                    1635 	xor	a, a
      0005D1 12                    1636 	ld	(de), a
      0005D2 21 04 00              1637 	ld	hl, #0x0004
      0005D5 09                    1638 	add	hl, bc
      0005D6 36 00                 1639 	ld	(hl), #0x00
                                   1640 ;main.c:74: set_win_tiles(5,row,5,1,blockmap);
      0005D8 C5                    1641 	push	bc
      0005D9 21 05 01              1642 	ld	hl, #0x105
      0005DC E5                    1643 	push	hl
      0005DD F8 0B                 1644 	ldhl	sp,	#11
      0005DF 66                    1645 	ld	h, (hl)
      0005E0 2E 05                 1646 	ld	l, #0x05
      0005E2 E5                    1647 	push	hl
      0005E3 CDr00r00              1648 	call	_set_win_tiles
      0005E6 E8 06                 1649 	add	sp, #6
                                   1650 ;main.c:75: return;
      0005E8 18 2E                 1651 	jr	00109$
      0005EA                       1652 00108$:
                                   1653 ;main.c:77: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      0005EA F8 00                 1654 	ldhl	sp,	#0
      0005EC 4D                    1655 	ld	c, l
      0005ED 44                    1656 	ld	b, h
      0005EE 36 50                 1657 	ld	(hl), #0x50
      0005F0 59                    1658 	ld	e, c
      0005F1 50                    1659 	ld	d, b
      0005F2 13                    1660 	inc	de
      0005F3 AF                    1661 	xor	a, a
      0005F4 12                    1662 	ld	(de), a
      0005F5 59                    1663 	ld	e, c
      0005F6 50                    1664 	ld	d, b
      0005F7 13                    1665 	inc	de
      0005F8 13                    1666 	inc	de
      0005F9 AF                    1667 	xor	a, a
      0005FA 12                    1668 	ld	(de), a
      0005FB 59                    1669 	ld	e, c
      0005FC 50                    1670 	ld	d, b
      0005FD 13                    1671 	inc	de
      0005FE 13                    1672 	inc	de
      0005FF 13                    1673 	inc	de
      000600 AF                    1674 	xor	a, a
      000601 12                    1675 	ld	(de), a
      000602 21 04 00              1676 	ld	hl, #0x0004
      000605 09                    1677 	add	hl, bc
      000606 36 00                 1678 	ld	(hl), #0x00
                                   1679 ;main.c:78: set_win_tiles(5,row,5,1,blockmap);
      000608 C5                    1680 	push	bc
      000609 21 05 01              1681 	ld	hl, #0x105
      00060C E5                    1682 	push	hl
      00060D F8 0B                 1683 	ldhl	sp,	#11
      00060F 66                    1684 	ld	h, (hl)
      000610 2E 05                 1685 	ld	l, #0x05
      000612 E5                    1686 	push	hl
      000613 CDr00r00              1687 	call	_set_win_tiles
      000616 E8 06                 1688 	add	sp, #6
                                   1689 ;main.c:79: return;
      000618                       1690 00109$:
                                   1691 ;main.c:81: }
      000618 E8 05                 1692 	add	sp, #5
      00061A C9                    1693 	ret
                                   1694 ;main.c:83: void updateDirection() {
                                   1695 ;	---------------------------------
                                   1696 ; Function updateDirection
                                   1697 ; ---------------------------------
      00061B                       1698 _updateDirection::
      00061B E8 FC                 1699 	add	sp, #-4
                                   1700 ;main.c:87: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      00061D 21r37r00              1701 	ld	hl, #_joydata
      000620 5E                    1702 	ld	e, (hl)
      000621 7B                    1703 	ld	a, e
      000622 E6 01                 1704 	and	a, #0x01
      000624 F8 00                 1705 	ldhl	sp,	#0
      000626 22                    1706 	ld	(hl+), a
      000627 AF                    1707 	xor	a, a
      000628 22                    1708 	ld	(hl+), a
      000629 7B                    1709 	ld	a, e
      00062A E6 04                 1710 	and	a, #0x04
      00062C 22                    1711 	ld	(hl+), a
      00062D AF                    1712 	xor	a, a
      00062E 32                    1713 	ld	(hl-), a
      00062F 2B                    1714 	dec	hl
      000630 7B                    1715 	ld	a, e
      000631 E6 08                 1716 	and	a, #0x08
      000633 4F                    1717 	ld	c, a
      000634 06 00                 1718 	ld	b, #0x00
      000636 3A                    1719 	ld	a, (hl-)
      000637 B6                    1720 	or	a, (hl)
      000638 28 14                 1721 	jr	Z, 00102$
      00063A F8 03                 1722 	ldhl	sp,	#3
      00063C 3A                    1723 	ld	a, (hl-)
      00063D B6                    1724 	or	a, (hl)
      00063E 20 0E                 1725 	jr	NZ, 00102$
      000640 78                    1726 	ld	a, b
      000641 B1                    1727 	or	a, c
      000642 20 0A                 1728 	jr	NZ, 00102$
                                   1729 ;main.c:88: xDir = 1;
      000644 21r14r00              1730 	ld	hl, #_xDir
      000647 36 01                 1731 	ld	(hl), #0x01
                                   1732 ;main.c:89: yDir = 0;
      000649 21r15r00              1733 	ld	hl, #_yDir
      00064C 36 00                 1734 	ld	(hl), #0x00
      00064E                       1735 00102$:
                                   1736 ;main.c:91: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      00064E 7B                    1737 	ld	a, e
      00064F E6 02                 1738 	and	a, #0x02
      000651 5F                    1739 	ld	e, a
      000652 16 00                 1740 	ld	d, #0x00
      000654 7A                    1741 	ld	a, d
      000655 B3                    1742 	or	a, e
      000656 28 14                 1743 	jr	Z, 00106$
      000658 F8 03                 1744 	ldhl	sp,	#3
      00065A 3A                    1745 	ld	a, (hl-)
      00065B B6                    1746 	or	a, (hl)
      00065C 20 0E                 1747 	jr	NZ, 00106$
      00065E 78                    1748 	ld	a, b
      00065F B1                    1749 	or	a, c
      000660 20 0A                 1750 	jr	NZ, 00106$
                                   1751 ;main.c:92: xDir = -1;
      000662 21r14r00              1752 	ld	hl, #_xDir
      000665 36 FF                 1753 	ld	(hl), #0xff
                                   1754 ;main.c:93: yDir = 0;
      000667 21r15r00              1755 	ld	hl, #_yDir
      00066A 36 00                 1756 	ld	(hl), #0x00
      00066C                       1757 00106$:
                                   1758 ;main.c:95: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      00066C F8 03                 1759 	ldhl	sp,	#3
      00066E 3A                    1760 	ld	a, (hl-)
      00066F B6                    1761 	or	a, (hl)
      000670 28 13                 1762 	jr	Z, 00110$
      000672 7A                    1763 	ld	a, d
      000673 B3                    1764 	or	a, e
      000674 20 0F                 1765 	jr	NZ, 00110$
      000676 2B                    1766 	dec	hl
      000677 3A                    1767 	ld	a, (hl-)
      000678 B6                    1768 	or	a, (hl)
      000679 20 0A                 1769 	jr	NZ, 00110$
                                   1770 ;main.c:96: xDir = 0;
      00067B 21r14r00              1771 	ld	hl, #_xDir
      00067E 36 00                 1772 	ld	(hl), #0x00
                                   1773 ;main.c:97: yDir = -1;
      000680 21r15r00              1774 	ld	hl, #_yDir
      000683 36 FF                 1775 	ld	(hl), #0xff
      000685                       1776 00110$:
                                   1777 ;main.c:99: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000685 78                    1778 	ld	a, b
      000686 B1                    1779 	or	a, c
      000687 28 14                 1780 	jr	Z, 00114$
      000689 7A                    1781 	ld	a, d
      00068A B3                    1782 	or	a, e
      00068B 20 10                 1783 	jr	NZ, 00114$
      00068D F8 01                 1784 	ldhl	sp,	#1
      00068F 3A                    1785 	ld	a, (hl-)
      000690 B6                    1786 	or	a, (hl)
      000691 20 0A                 1787 	jr	NZ, 00114$
                                   1788 ;main.c:100: xDir = 0;
      000693 21r14r00              1789 	ld	hl, #_xDir
      000696 36 00                 1790 	ld	(hl), #0x00
                                   1791 ;main.c:101: yDir = 1;
      000698 21r15r00              1792 	ld	hl, #_yDir
      00069B 36 01                 1793 	ld	(hl), #0x01
      00069D                       1794 00114$:
                                   1795 ;main.c:105: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      00069D F8 03                 1796 	ldhl	sp,	#3
      00069F 3A                    1797 	ld	a, (hl-)
      0006A0 B6                    1798 	or	a, (hl)
      0006A1 28 0F                 1799 	jr	Z, 00118$
      0006A3 2B                    1800 	dec	hl
      0006A4 3A                    1801 	ld	a, (hl-)
      0006A5 B6                    1802 	or	a, (hl)
      0006A6 28 0A                 1803 	jr	Z, 00118$
                                   1804 ;main.c:106: xDir = 1;
      0006A8 21r14r00              1805 	ld	hl, #_xDir
      0006AB 36 01                 1806 	ld	(hl), #0x01
                                   1807 ;main.c:107: yDir = -1;
      0006AD 21r15r00              1808 	ld	hl, #_yDir
      0006B0 36 FF                 1809 	ld	(hl), #0xff
      0006B2                       1810 00118$:
                                   1811 ;main.c:109: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      0006B2 F8 03                 1812 	ldhl	sp,	#3
      0006B4 3A                    1813 	ld	a, (hl-)
      0006B5 B6                    1814 	or	a, (hl)
      0006B6 28 0E                 1815 	jr	Z, 00121$
      0006B8 7A                    1816 	ld	a, d
      0006B9 B3                    1817 	or	a, e
      0006BA 28 0A                 1818 	jr	Z, 00121$
                                   1819 ;main.c:110: xDir = -1;
      0006BC 21r14r00              1820 	ld	hl, #_xDir
      0006BF 36 FF                 1821 	ld	(hl), #0xff
                                   1822 ;main.c:111: yDir = -1;
      0006C1 21r15r00              1823 	ld	hl, #_yDir
      0006C4 36 FF                 1824 	ld	(hl), #0xff
      0006C6                       1825 00121$:
                                   1826 ;main.c:113: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      0006C6 78                    1827 	ld	a, b
      0006C7 B1                    1828 	or	a, c
      0006C8 28 10                 1829 	jr	Z, 00124$
      0006CA F8 01                 1830 	ldhl	sp,	#1
      0006CC 3A                    1831 	ld	a, (hl-)
      0006CD B6                    1832 	or	a, (hl)
      0006CE 28 0A                 1833 	jr	Z, 00124$
                                   1834 ;main.c:114: xDir = 1;
      0006D0 21r14r00              1835 	ld	hl, #_xDir
      0006D3 36 01                 1836 	ld	(hl), #0x01
                                   1837 ;main.c:115: yDir = 1;
      0006D5 21r15r00              1838 	ld	hl, #_yDir
      0006D8 36 01                 1839 	ld	(hl), #0x01
      0006DA                       1840 00124$:
                                   1841 ;main.c:117: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      0006DA 78                    1842 	ld	a, b
      0006DB B1                    1843 	or	a, c
      0006DC 28 0E                 1844 	jr	Z, 00127$
      0006DE 7A                    1845 	ld	a, d
      0006DF B3                    1846 	or	a, e
      0006E0 28 0A                 1847 	jr	Z, 00127$
                                   1848 ;main.c:118: xDir = -1;
      0006E2 21r14r00              1849 	ld	hl, #_xDir
      0006E5 36 FF                 1850 	ld	(hl), #0xff
                                   1851 ;main.c:119: yDir = 1;
      0006E7 21r15r00              1852 	ld	hl, #_yDir
      0006EA 36 01                 1853 	ld	(hl), #0x01
      0006EC                       1854 00127$:
                                   1855 ;main.c:124: if (xDir == 0 && yDir == 0) {
      0006EC FAr14r00              1856 	ld	a, (#_xDir)
      0006EF B7                    1857 	or	a, a
      0006F0 20 07                 1858 	jr	NZ, 00130$
      0006F2 FAr15r00              1859 	ld	a, (#_yDir)
      0006F5 B7                    1860 	or	a, a
                                   1861 ;main.c:125: return;
      0006F6 CArA7r07              1862 	jp	Z,00157$
      0006F9                       1863 00130$:
                                   1864 ;main.c:128: uint8_t direction = 0;
      0006F9 0E 00                 1865 	ld	c, #0x00
                                   1866 ;main.c:130: if (xDir == 0 && yDir < 0) {
      0006FB FAr15r00              1867 	ld	a, (#_yDir)
      0006FE 07                    1868 	rlca
      0006FF E6 01                 1869 	and	a,#0x01
      000701 F8 02                 1870 	ldhl	sp,	#2
      000703 77                    1871 	ld	(hl), a
      000704 FAr14r00              1872 	ld	a, (#_xDir)
      000707 B7                    1873 	or	a, a
      000708 20 08                 1874 	jr	NZ, 00133$
      00070A F8 02                 1875 	ldhl	sp,	#2
      00070C 7E                    1876 	ld	a, (hl)
      00070D B7                    1877 	or	a, a
      00070E 28 02                 1878 	jr	Z, 00133$
                                   1879 ;main.c:131: direction = 0;
      000710 0E 00                 1880 	ld	c, #0x00
      000712                       1881 00133$:
                                   1882 ;main.c:133: if (xDir > 0 && yDir < 0) {
      000712 21r14r00              1883 	ld	hl, #_xDir
      000715 5E                    1884 	ld	e, (hl)
      000716 AF                    1885 	xor	a, a
      000717 57                    1886 	ld	d, a
      000718 96                    1887 	sub	a, (hl)
      000719 CB 7B                 1888 	bit	7, e
      00071B 28 07                 1889 	jr	Z, 00349$
      00071D CB 7A                 1890 	bit	7, d
      00071F 20 08                 1891 	jr	NZ, 00350$
      000721 BF                    1892 	cp	a, a
      000722 18 05                 1893 	jr	00350$
      000724                       1894 00349$:
      000724 CB 7A                 1895 	bit	7, d
      000726 28 01                 1896 	jr	Z, 00350$
      000728 37                    1897 	scf
      000729                       1898 00350$:
      000729 3E 00                 1899 	ld	a, #0x00
      00072B 17                    1900 	rla
      00072C 47                    1901 	ld	b, a
      00072D B7                    1902 	or	a, a
      00072E 28 08                 1903 	jr	Z, 00136$
      000730 F8 02                 1904 	ldhl	sp,	#2
      000732 7E                    1905 	ld	a, (hl)
      000733 B7                    1906 	or	a, a
      000734 28 02                 1907 	jr	Z, 00136$
                                   1908 ;main.c:134: direction = 1;
      000736 0E 01                 1909 	ld	c, #0x01
      000738                       1910 00136$:
                                   1911 ;main.c:136: if (xDir > 0 && yDir == 0) {
      000738 78                    1912 	ld	a, b
      000739 B7                    1913 	or	a, a
      00073A 28 08                 1914 	jr	Z, 00139$
      00073C FAr15r00              1915 	ld	a, (#_yDir)
      00073F B7                    1916 	or	a, a
      000740 20 02                 1917 	jr	NZ, 00139$
                                   1918 ;main.c:137: direction = 2;
      000742 0E 02                 1919 	ld	c, #0x02
      000744                       1920 00139$:
                                   1921 ;main.c:139: if (xDir > 0 && yDir > 0) {
      000744 21r15r00              1922 	ld	hl, #_yDir
      000747 5E                    1923 	ld	e, (hl)
      000748 AF                    1924 	xor	a, a
      000749 57                    1925 	ld	d, a
      00074A 96                    1926 	sub	a, (hl)
      00074B CB 7B                 1927 	bit	7, e
      00074D 28 07                 1928 	jr	Z, 00351$
      00074F CB 7A                 1929 	bit	7, d
      000751 20 08                 1930 	jr	NZ, 00352$
      000753 BF                    1931 	cp	a, a
      000754 18 05                 1932 	jr	00352$
      000756                       1933 00351$:
      000756 CB 7A                 1934 	bit	7, d
      000758 28 01                 1935 	jr	Z, 00352$
      00075A 37                    1936 	scf
      00075B                       1937 00352$:
      00075B 3E 00                 1938 	ld	a, #0x00
      00075D 17                    1939 	rla
      00075E F8 03                 1940 	ldhl	sp,	#3
      000760 77                    1941 	ld	(hl), a
      000761 78                    1942 	ld	a, b
      000762 B7                    1943 	or	a, a
      000763 28 06                 1944 	jr	Z, 00142$
      000765 7E                    1945 	ld	a, (hl)
      000766 B7                    1946 	or	a, a
      000767 28 02                 1947 	jr	Z, 00142$
                                   1948 ;main.c:140: direction = 3;
      000769 0E 03                 1949 	ld	c, #0x03
      00076B                       1950 00142$:
                                   1951 ;main.c:142: if (xDir == 0 && yDir > 0) {
      00076B FAr14r00              1952 	ld	a, (#_xDir)
      00076E B7                    1953 	or	a, a
      00076F 20 08                 1954 	jr	NZ, 00145$
      000771 F8 03                 1955 	ldhl	sp,	#3
      000773 7E                    1956 	ld	a, (hl)
      000774 B7                    1957 	or	a, a
      000775 28 02                 1958 	jr	Z, 00145$
                                   1959 ;main.c:143: direction = 4;
      000777 0E 04                 1960 	ld	c, #0x04
      000779                       1961 00145$:
                                   1962 ;main.c:145: if (xDir < 0 && yDir > 0) {
      000779 FAr14r00              1963 	ld	a, (#_xDir)
      00077C 07                    1964 	rlca
      00077D E6 01                 1965 	and	a,#0x01
      00077F 47                    1966 	ld	b, a
      000780 B7                    1967 	or	a, a
      000781 28 08                 1968 	jr	Z, 00148$
      000783 F8 03                 1969 	ldhl	sp,	#3
      000785 7E                    1970 	ld	a, (hl)
      000786 B7                    1971 	or	a, a
      000787 28 02                 1972 	jr	Z, 00148$
                                   1973 ;main.c:146: direction = 5;
      000789 0E 05                 1974 	ld	c, #0x05
      00078B                       1975 00148$:
                                   1976 ;main.c:148: if (xDir < 0 && yDir == 0) {
      00078B 78                    1977 	ld	a, b
      00078C B7                    1978 	or	a, a
      00078D 28 08                 1979 	jr	Z, 00151$
      00078F FAr15r00              1980 	ld	a, (#_yDir)
      000792 B7                    1981 	or	a, a
      000793 20 02                 1982 	jr	NZ, 00151$
                                   1983 ;main.c:149: direction = 6;
      000795 0E 06                 1984 	ld	c, #0x06
      000797                       1985 00151$:
                                   1986 ;main.c:151: if (xDir < 0 && yDir < 0) {
      000797 78                    1987 	ld	a, b
      000798 B7                    1988 	or	a, a
      000799 28 08                 1989 	jr	Z, 00154$
      00079B F8 02                 1990 	ldhl	sp,	#2
      00079D 7E                    1991 	ld	a, (hl)
      00079E B7                    1992 	or	a, a
      00079F 28 02                 1993 	jr	Z, 00154$
                                   1994 ;main.c:152: direction = 7;
      0007A1 0E 07                 1995 	ld	c, #0x07
      0007A3                       1996 00154$:
                                   1997 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0007A3 21r02r00              1998 	ld	hl, #(_shadow_OAM + 2)
      0007A6 71                    1999 	ld	(hl), c
                                   2000 ;main.c:155: set_sprite_tile(0, direction);
      0007A7                       2001 00157$:
                                   2002 ;main.c:156: }
      0007A7 E8 04                 2003 	add	sp, #4
      0007A9 C9                    2004 	ret
                                   2005 ;main.c:159: int8_t clamp( int8_t value, int8_t min, int8_t max )
                                   2006 ;	---------------------------------
                                   2007 ; Function clamp
                                   2008 ; ---------------------------------
      0007AA                       2009 _clamp::
                                   2010 ;main.c:161: return (value < min) ? min : (value > max) ? max : value;
      0007AA F8 03                 2011 	ldhl	sp,	#3
      0007AC 3A                    2012 	ld	a, (hl-)
      0007AD 5F                    2013 	ld	e, a
      0007AE 56                    2014 	ld	d, (hl)
      0007AF 2A                    2015 	ld	a, (hl+)
      0007B0 96                    2016 	sub	a, (hl)
      0007B1 CB 7B                 2017 	bit	7, e
      0007B3 28 07                 2018 	jr	Z, 00117$
      0007B5 CB 7A                 2019 	bit	7, d
      0007B7 20 08                 2020 	jr	NZ, 00118$
      0007B9 BF                    2021 	cp	a, a
      0007BA 18 05                 2022 	jr	00118$
      0007BC                       2023 00117$:
      0007BC CB 7A                 2024 	bit	7, d
      0007BE 28 01                 2025 	jr	Z, 00118$
      0007C0 37                    2026 	scf
      0007C1                       2027 00118$:
      0007C1 30 04                 2028 	jr	NC, 00103$
      0007C3 F8 03                 2029 	ldhl	sp,	#3
      0007C5 5E                    2030 	ld	e, (hl)
      0007C6 C9                    2031 	ret
      0007C7                       2032 00103$:
      0007C7 F8 02                 2033 	ldhl	sp,	#2
      0007C9 2A                    2034 	ld	a, (hl+)
      0007CA 23                    2035 	inc	hl
      0007CB 5F                    2036 	ld	e, a
      0007CC 56                    2037 	ld	d, (hl)
      0007CD 3A                    2038 	ld	a, (hl-)
      0007CE 2B                    2039 	dec	hl
      0007CF 96                    2040 	sub	a, (hl)
      0007D0 CB 7B                 2041 	bit	7, e
      0007D2 28 07                 2042 	jr	Z, 00119$
      0007D4 CB 7A                 2043 	bit	7, d
      0007D6 20 08                 2044 	jr	NZ, 00120$
      0007D8 BF                    2045 	cp	a, a
      0007D9 18 05                 2046 	jr	00120$
      0007DB                       2047 00119$:
      0007DB CB 7A                 2048 	bit	7, d
      0007DD 28 01                 2049 	jr	Z, 00120$
      0007DF 37                    2050 	scf
      0007E0                       2051 00120$:
      0007E0 30 04                 2052 	jr	NC, 00105$
      0007E2 F8 04                 2053 	ldhl	sp,	#4
      0007E4 5E                    2054 	ld	e, (hl)
      0007E5 C9                    2055 	ret
      0007E6                       2056 00105$:
      0007E6 F8 02                 2057 	ldhl	sp,	#2
      0007E8 5E                    2058 	ld	e, (hl)
                                   2059 ;main.c:162: }
      0007E9 C9                    2060 	ret
                                   2061 ;main.c:165: uint8_t uClamp( uint8_t value, uint8_t min, uint8_t max )
                                   2062 ;	---------------------------------
                                   2063 ; Function uClamp
                                   2064 ; ---------------------------------
      0007EA                       2065 _uClamp::
                                   2066 ;main.c:167: return (value < min) ? min : (value > max) ? max : value;
      0007EA F8 02                 2067 	ldhl	sp,	#2
      0007EC 2A                    2068 	ld	a, (hl+)
      0007ED 96                    2069 	sub	a, (hl)
      0007EE 30 02                 2070 	jr	NC, 00103$
      0007F0 5E                    2071 	ld	e, (hl)
      0007F1 C9                    2072 	ret
      0007F2                       2073 00103$:
      0007F2 F8 04                 2074 	ldhl	sp,	#4
      0007F4 3A                    2075 	ld	a, (hl-)
      0007F5 2B                    2076 	dec	hl
      0007F6 96                    2077 	sub	a, (hl)
      0007F7 30 04                 2078 	jr	NC, 00105$
      0007F9 23                    2079 	inc	hl
      0007FA 23                    2080 	inc	hl
      0007FB 5E                    2081 	ld	e, (hl)
      0007FC C9                    2082 	ret
      0007FD                       2083 00105$:
      0007FD F8 02                 2084 	ldhl	sp,	#2
      0007FF 5E                    2085 	ld	e, (hl)
                                   2086 ;main.c:168: }
      000800 C9                    2087 	ret
                                   2088 ;main.c:170: uint16_t u16Clamp( uint16_t value, uint16_t min, uint16_t max )
                                   2089 ;	---------------------------------
                                   2090 ; Function u16Clamp
                                   2091 ; ---------------------------------
      000801                       2092 _u16Clamp::
                                   2093 ;main.c:172: return (value < min) ? min : (value > max) ? max : value;
      000801 F8 02                 2094 	ldhl	sp,	#2
      000803 5D                    2095 	ld	e, l
      000804 54                    2096 	ld	d, h
      000805 F8 04                 2097 	ldhl	sp,	#4
      000807 1A                    2098 	ld	a, (de)
      000808 13                    2099 	inc	de
      000809 96                    2100 	sub	a, (hl)
      00080A 23                    2101 	inc	hl
      00080B 1A                    2102 	ld	a, (de)
      00080C 9E                    2103 	sbc	a, (hl)
      00080D 30 06                 2104 	jr	NC, 00103$
      00080F F8 04                 2105 	ldhl	sp,	#4
      000811 2A                    2106 	ld	a, (hl+)
      000812 5F                    2107 	ld	e, a
      000813 56                    2108 	ld	d, (hl)
      000814 C9                    2109 	ret
      000815                       2110 00103$:
      000815 F8 06                 2111 	ldhl	sp,	#6
      000817 5D                    2112 	ld	e, l
      000818 54                    2113 	ld	d, h
      000819 F8 02                 2114 	ldhl	sp,	#2
      00081B 1A                    2115 	ld	a, (de)
      00081C 13                    2116 	inc	de
      00081D 96                    2117 	sub	a, (hl)
      00081E 23                    2118 	inc	hl
      00081F 1A                    2119 	ld	a, (de)
      000820 9E                    2120 	sbc	a, (hl)
      000821 30 06                 2121 	jr	NC, 00105$
      000823 F8 06                 2122 	ldhl	sp,	#6
      000825 2A                    2123 	ld	a, (hl+)
      000826 5F                    2124 	ld	e, a
      000827 56                    2125 	ld	d, (hl)
      000828 C9                    2126 	ret
      000829                       2127 00105$:
      000829 F8 02                 2128 	ldhl	sp,	#2
      00082B 2A                    2129 	ld	a, (hl+)
      00082C 5F                    2130 	ld	e, a
      00082D 56                    2131 	ld	d, (hl)
                                   2132 ;main.c:173: }
      00082E C9                    2133 	ret
                                   2134 ;main.c:175: int8_t abs(int8_t value) {
                                   2135 ;	---------------------------------
                                   2136 ; Function abs
                                   2137 ; ---------------------------------
      00082F                       2138 _abs::
                                   2139 ;main.c:176: if (value >= 0) return value;
      00082F F8 02                 2140 	ldhl	sp,	#2
      000831 CB 7E                 2141 	bit	7, (hl)
      000833 20 02                 2142 	jr	NZ, 00102$
      000835 5E                    2143 	ld	e, (hl)
      000836 C9                    2144 	ret
      000837                       2145 00102$:
                                   2146 ;main.c:177: else return - value;
      000837 AF                    2147 	xor	a, a
      000838 F8 02                 2148 	ldhl	sp,	#2
      00083A 96                    2149 	sub	a, (hl)
      00083B 5F                    2150 	ld	e, a
                                   2151 ;main.c:178: }
      00083C C9                    2152 	ret
                                   2153 ;main.c:180: void moveEnemiesWithBackground(int16_t x, int16_t y) {
                                   2154 ;	---------------------------------
                                   2155 ; Function moveEnemiesWithBackground
                                   2156 ; ---------------------------------
      00083D                       2157 _moveEnemiesWithBackground::
      00083D E8 FB                 2158 	add	sp, #-5
                                   2159 ;main.c:181: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00083F F8 04                 2160 	ldhl	sp,	#4
      000841 36 00                 2161 	ld	(hl), #0x00
      000843                       2162 00103$:
      000843 21r09r05              2163 	ld	hl, #_ENEMYCOUNT
      000846 4E                    2164 	ld	c, (hl)
      000847 F8 04                 2165 	ldhl	sp,	#4
      000849 7E                    2166 	ld	a, (hl)
      00084A 91                    2167 	sub	a, c
      00084B 30 57                 2168 	jr	NC, 00105$
                                   2169 ;main.c:182: enemies[i].x -= x;
      00084D 4E                    2170 	ld	c, (hl)
      00084E 06 00                 2171 	ld	b, #0x00
      000850 69                    2172 	ld	l, c
      000851 60                    2173 	ld	h, b
      000852 29                    2174 	add	hl, hl
      000853 29                    2175 	add	hl, hl
      000854 09                    2176 	add	hl, bc
      000855 29                    2177 	add	hl, hl
      000856 09                    2178 	add	hl, bc
      000857 01r00r00              2179 	ld	bc,#_enemies
      00085A 09                    2180 	add	hl,bc
      00085B 4D                    2181 	ld	c, l
      00085C 44                    2182 	ld	b, h
      00085D 59                    2183 	ld	e, c
      00085E 50                    2184 	ld	d, b
      00085F 1A                    2185 	ld	a, (de)
      000860 F8 00                 2186 	ldhl	sp,	#0
      000862 22                    2187 	ld	(hl+), a
      000863 13                    2188 	inc	de
      000864 1A                    2189 	ld	a, (de)
      000865 77                    2190 	ld	(hl), a
      000866 D1                    2191 	pop	de
      000867 D5                    2192 	push	de
      000868 F8 07                 2193 	ldhl	sp,	#7
      00086A 2A                    2194 	ld	a,	(hl+)
      00086B 66                    2195 	ld	h, (hl)
      00086C 6F                    2196 	ld	l, a
      00086D 7B                    2197 	ld	a, e
      00086E 95                    2198 	sub	a, l
      00086F 5F                    2199 	ld	e, a
      000870 7A                    2200 	ld	a, d
      000871 9C                    2201 	sbc	a, h
      000872 F8 03                 2202 	ldhl	sp,	#3
      000874 32                    2203 	ld	(hl-), a
      000875 73                    2204 	ld	(hl), e
      000876 59                    2205 	ld	e, c
      000877 50                    2206 	ld	d, b
      000878 2A                    2207 	ld	a, (hl+)
      000879 12                    2208 	ld	(de), a
      00087A 13                    2209 	inc	de
                                   2210 ;main.c:183: enemies[i].y -= y;
      00087B 3A                    2211 	ld	a, (hl-)
      00087C 12                    2212 	ld	(de), a
      00087D 03                    2213 	inc	bc
      00087E 03                    2214 	inc	bc
      00087F 79                    2215 	ld	a, c
      000880 22                    2216 	ld	(hl+), a
      000881 78                    2217 	ld	a, b
      000882 32                    2218 	ld	(hl-), a
      000883 2A                    2219 	ld	a, (hl+)
      000884 5F                    2220 	ld	e, a
      000885 56                    2221 	ld	d, (hl)
      000886 1A                    2222 	ld	a, (de)
      000887 4F                    2223 	ld	c, a
      000888 13                    2224 	inc	de
      000889 1A                    2225 	ld	a, (de)
      00088A 47                    2226 	ld	b, a
      00088B F8 09                 2227 	ldhl	sp,#9
      00088D 2A                    2228 	ld	a, (hl+)
      00088E 5F                    2229 	ld	e, a
      00088F 56                    2230 	ld	d, (hl)
      000890 79                    2231 	ld	a, c
      000891 93                    2232 	sub	a, e
      000892 5F                    2233 	ld	e, a
      000893 78                    2234 	ld	a, b
      000894 9A                    2235 	sbc	a, d
      000895 47                    2236 	ld	b, a
      000896 4B                    2237 	ld	c, e
      000897 F8 02                 2238 	ldhl	sp,	#2
      000899 2A                    2239 	ld	a,	(hl+)
      00089A 66                    2240 	ld	h, (hl)
      00089B 6F                    2241 	ld	l, a
      00089C 79                    2242 	ld	a, c
      00089D 22                    2243 	ld	(hl+), a
      00089E 70                    2244 	ld	(hl), b
                                   2245 ;main.c:181: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00089F F8 04                 2246 	ldhl	sp,	#4
      0008A1 34                    2247 	inc	(hl)
      0008A2 18 9F                 2248 	jr	00103$
      0008A4                       2249 00105$:
                                   2250 ;main.c:185: }
      0008A4 E8 05                 2251 	add	sp, #5
      0008A6 C9                    2252 	ret
                                   2253 ;main.c:187: void updateEnemyPositions() {
                                   2254 ;	---------------------------------
                                   2255 ; Function updateEnemyPositions
                                   2256 ; ---------------------------------
      0008A7                       2257 _updateEnemyPositions::
      0008A7 E8 F4                 2258 	add	sp, #-12
                                   2259 ;main.c:188: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0008A9 F8 0B                 2260 	ldhl	sp,	#11
      0008AB 36 00                 2261 	ld	(hl), #0x00
      0008AD                       2262 00121$:
      0008AD 21r09r05              2263 	ld	hl, #_ENEMYCOUNT
      0008B0 4E                    2264 	ld	c, (hl)
      0008B1 F8 0B                 2265 	ldhl	sp,	#11
      0008B3 7E                    2266 	ld	a, (hl)
      0008B4 91                    2267 	sub	a, c
      0008B5 D2r96r0A              2268 	jp	NC, 00123$
                                   2269 ;main.c:190: if (enemies[i].alive) {
      0008B8 4E                    2270 	ld	c, (hl)
      0008B9 06 00                 2271 	ld	b, #0x00
      0008BB 69                    2272 	ld	l, c
      0008BC 60                    2273 	ld	h, b
      0008BD 29                    2274 	add	hl, hl
      0008BE 29                    2275 	add	hl, hl
      0008BF 09                    2276 	add	hl, bc
      0008C0 29                    2277 	add	hl, hl
      0008C1 09                    2278 	add	hl, bc
      0008C2 01r00r00              2279 	ld	bc,#_enemies
      0008C5 09                    2280 	add	hl,bc
      0008C6 33                    2281 	inc	sp
      0008C7 33                    2282 	inc	sp
      0008C8 5D                    2283 	ld	e, l
      0008C9 54                    2284 	ld	d, h
      0008CA D5                    2285 	push	de
      0008CB 21 08 00              2286 	ld	hl, #0x0008
      0008CE 19                    2287 	add	hl, de
      0008CF 4D                    2288 	ld	c, l
      0008D0 44                    2289 	ld	b, h
      0008D1 0A                    2290 	ld	a, (bc)
      0008D2 F8 0A                 2291 	ldhl	sp,	#10
      0008D4 77                    2292 	ld	(hl), a
      0008D5 7E                    2293 	ld	a, (hl)
      0008D6 B7                    2294 	or	a, a
      0008D7 CAr5Fr0A              2295 	jp	Z, 00115$
                                   2296 ;main.c:191: if (enemies[i].visible == 1) {
      0008DA D1                    2297 	pop	de
      0008DB D5                    2298 	push	de
      0008DC 21 09 00              2299 	ld	hl, #0x0009
      0008DF 19                    2300 	add	hl, de
      0008E0 E5                    2301 	push	hl
      0008E1 7D                    2302 	ld	a, l
      0008E2 F8 04                 2303 	ldhl	sp,	#4
      0008E4 77                    2304 	ld	(hl), a
      0008E5 E1                    2305 	pop	hl
      0008E6 7C                    2306 	ld	a, h
      0008E7 F8 03                 2307 	ldhl	sp,	#3
      0008E9 32                    2308 	ld	(hl-), a
      0008EA 2A                    2309 	ld	a, (hl+)
      0008EB 5F                    2310 	ld	e, a
      0008EC 2A                    2311 	ld	a, (hl+)
      0008ED 57                    2312 	ld	d, a
      0008EE 1A                    2313 	ld	a, (de)
      0008EF 77                    2314 	ld	(hl), a
                                   2315 ;main.c:192: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0008F0 D1                    2316 	pop	de
      0008F1 D5                    2317 	push	de
      0008F2 1A                    2318 	ld	a, (de)
      0008F3 4F                    2319 	ld	c, a
      0008F4 13                    2320 	inc	de
      0008F5 1A                    2321 	ld	a, (de)
      0008F6 47                    2322 	ld	b, a
      0008F7 D1                    2323 	pop	de
      0008F8 D5                    2324 	push	de
      0008F9 21 02 00              2325 	ld	hl, #0x0002
      0008FC 19                    2326 	add	hl, de
      0008FD E5                    2327 	push	hl
      0008FE 7D                    2328 	ld	a, l
      0008FF F8 07                 2329 	ldhl	sp,	#7
      000901 77                    2330 	ld	(hl), a
      000902 E1                    2331 	pop	hl
      000903 7C                    2332 	ld	a, h
      000904 F8 06                 2333 	ldhl	sp,	#6
      000906 77                    2334 	ld	(hl), a
                                   2335 ;main.c:194: set_sprite_tile(10+i, EMPTYSPRITE);
      000907 F8 0B                 2336 	ldhl	sp,	#11
      000909 7E                    2337 	ld	a, (hl)
                                   2338 ;main.c:192: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      00090A F8 07                 2339 	ldhl	sp,	#7
      00090C 71                    2340 	ld	(hl), c
      00090D 23                    2341 	inc	hl
      00090E 70                    2342 	ld	(hl), b
                                   2343 ;main.c:194: set_sprite_tile(10+i, EMPTYSPRITE);
      00090F 23                    2344 	inc	hl
      000910 C6 0A                 2345 	add	a, #0x0a
                                   2346 ;main.c:192: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000912 32                    2347 	ld	(hl-), a
      000913 2A                    2348 	ld	a, (hl+)
      000914 23                    2349 	inc	hl
      000915 07                    2350 	rlca
      000916 E6 01                 2351 	and	a,#0x01
      000918 77                    2352 	ld	(hl), a
                                   2353 ;main.c:191: if (enemies[i].visible == 1) {
      000919 F8 04                 2354 	ldhl	sp,	#4
      00091B 7E                    2355 	ld	a, (hl)
      00091C 3D                    2356 	dec	a
      00091D C2rB7r09              2357 	jp	NZ,00112$
                                   2358 ;main.c:192: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000920 F8 0A                 2359 	ldhl	sp,	#10
      000922 7E                    2360 	ld	a, (hl)
      000923 B7                    2361 	or	a, a
      000924 20 48                 2362 	jr	NZ, 00101$
      000926 F8 07                 2363 	ldhl	sp,	#7
      000928 3E AC                 2364 	ld	a, #0xac
      00092A 96                    2365 	sub	a, (hl)
      00092B 23                    2366 	inc	hl
      00092C 3E 00                 2367 	ld	a, #0x00
      00092E 9E                    2368 	sbc	a, (hl)
      00092F 3E 00                 2369 	ld	a, #0x00
      000931 57                    2370 	ld	d, a
      000932 CB 7E                 2371 	bit	7, (hl)
      000934 28 07                 2372 	jr	Z, 00183$
      000936 CB 7A                 2373 	bit	7, d
      000938 20 08                 2374 	jr	NZ, 00184$
      00093A BF                    2375 	cp	a, a
      00093B 18 05                 2376 	jr	00184$
      00093D                       2377 00183$:
      00093D CB 7A                 2378 	bit	7, d
      00093F 28 01                 2379 	jr	Z, 00184$
      000941 37                    2380 	scf
      000942                       2381 00184$:
      000942 38 2A                 2382 	jr	C, 00101$
      000944 F8 05                 2383 	ldhl	sp,#5
      000946 2A                    2384 	ld	a, (hl+)
      000947 5F                    2385 	ld	e, a
      000948 56                    2386 	ld	d, (hl)
      000949 1A                    2387 	ld	a, (de)
      00094A 4F                    2388 	ld	c, a
      00094B 13                    2389 	inc	de
      00094C 1A                    2390 	ld	a, (de)
      00094D 47                    2391 	ld	b, a
      00094E CB 78                 2392 	bit	7, b
      000950 20 1C                 2393 	jr	NZ, 00101$
      000952 58                    2394 	ld	e, b
      000953 16 00                 2395 	ld	d, #0x00
      000955 3E 98                 2396 	ld	a, #0x98
      000957 B9                    2397 	cp	a, c
      000958 3E 00                 2398 	ld	a, #0x00
      00095A 98                    2399 	sbc	a, b
      00095B CB 7B                 2400 	bit	7, e
      00095D 28 07                 2401 	jr	Z, 00185$
      00095F CB 7A                 2402 	bit	7, d
      000961 20 08                 2403 	jr	NZ, 00186$
      000963 BF                    2404 	cp	a, a
      000964 18 05                 2405 	jr	00186$
      000966                       2406 00185$:
      000966 CB 7A                 2407 	bit	7, d
      000968 28 01                 2408 	jr	Z, 00186$
      00096A 37                    2409 	scf
      00096B                       2410 00186$:
      00096B D2r5Fr0A              2411 	jp	NC, 00115$
      00096E                       2412 00101$:
                                   2413 ;main.c:193: enemies[i].visible = 0;
      00096E F8 02                 2414 	ldhl	sp,	#2
      000970 2A                    2415 	ld	a,	(hl+)
      000971 66                    2416 	ld	h, (hl)
      000972 6F                    2417 	ld	l, a
      000973 36 00                 2418 	ld	(hl), #0x00
                                   2419 ;main.c:194: set_sprite_tile(10+i, EMPTYSPRITE);
      000975 FAr08r05              2420 	ld	a, (#_EMPTYSPRITE)
      000978 F8 0A                 2421 	ldhl	sp,	#10
      00097A 32                    2422 	ld	(hl-), a
                                   2423 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00097B 3A                    2424 	ld	a, (hl-)
      00097C 22                    2425 	ld	(hl+), a
      00097D 36 00                 2426 	ld	(hl), #0x00
      00097F 3E 02                 2427 	ld	a, #0x02
      000981                       2428 00187$:
      000981 F8 08                 2429 	ldhl	sp,	#8
      000983 CB 26                 2430 	sla	(hl)
      000985 23                    2431 	inc	hl
      000986 CB 16                 2432 	rl	(hl)
      000988 3D                    2433 	dec	a
      000989 20 F6                 2434 	jr	NZ, 00187$
      00098B 2B                    2435 	dec	hl
      00098C 2A                    2436 	ld	a, (hl+)
      00098D 5F                    2437 	ld	e, a
      00098E 56                    2438 	ld	d, (hl)
      00098F 21r00r00              2439 	ld	hl, #_shadow_OAM
      000992 19                    2440 	add	hl, de
      000993 E5                    2441 	push	hl
      000994 7D                    2442 	ld	a, l
      000995 F8 08                 2443 	ldhl	sp,	#8
      000997 77                    2444 	ld	(hl), a
      000998 E1                    2445 	pop	hl
      000999 7C                    2446 	ld	a, h
      00099A F8 07                 2447 	ldhl	sp,	#7
      00099C 32                    2448 	ld	(hl-), a
      00099D 2A                    2449 	ld	a, (hl+)
      00099E 5F                    2450 	ld	e, a
      00099F 56                    2451 	ld	d, (hl)
      0009A0 21 02 00              2452 	ld	hl, #0x0002
      0009A3 19                    2453 	add	hl, de
      0009A4 E5                    2454 	push	hl
      0009A5 7D                    2455 	ld	a, l
      0009A6 F8 0A                 2456 	ldhl	sp,	#10
      0009A8 77                    2457 	ld	(hl), a
      0009A9 E1                    2458 	pop	hl
      0009AA 7C                    2459 	ld	a, h
      0009AB F8 09                 2460 	ldhl	sp,	#9
      0009AD 32                    2461 	ld	(hl-), a
      0009AE 2A                    2462 	ld	a, (hl+)
      0009AF 5F                    2463 	ld	e, a
      0009B0 2A                    2464 	ld	a, (hl+)
      0009B1 57                    2465 	ld	d, a
      0009B2 7E                    2466 	ld	a, (hl)
      0009B3 12                    2467 	ld	(de), a
                                   2468 ;main.c:194: set_sprite_tile(10+i, EMPTYSPRITE);
      0009B4 C3r5Fr0A              2469 	jp	00115$
      0009B7                       2470 00112$:
                                   2471 ;main.c:198: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      0009B7 F8 0A                 2472 	ldhl	sp,	#10
      0009B9 CB 46                 2473 	bit	0, (hl)
      0009BB C2r5Fr0A              2474 	jp	NZ, 00115$
      0009BE F8 07                 2475 	ldhl	sp,	#7
      0009C0 2A                    2476 	ld	a, (hl+)
      0009C1 D6 AC                 2477 	sub	a, #0xac
      0009C3 7E                    2478 	ld	a, (hl)
      0009C4 DE 00                 2479 	sbc	a, #0x00
      0009C6 56                    2480 	ld	d, (hl)
      0009C7 3E 00                 2481 	ld	a, #0x00
      0009C9 CB 7F                 2482 	bit	7,a
      0009CB 28 07                 2483 	jr	Z, 00188$
      0009CD CB 7A                 2484 	bit	7, d
      0009CF 20 08                 2485 	jr	NZ, 00189$
      0009D1 BF                    2486 	cp	a, a
      0009D2 18 05                 2487 	jr	00189$
      0009D4                       2488 00188$:
      0009D4 CB 7A                 2489 	bit	7, d
      0009D6 28 01                 2490 	jr	Z, 00189$
      0009D8 37                    2491 	scf
      0009D9                       2492 00189$:
      0009D9 D2r5Fr0A              2493 	jp	NC, 00115$
      0009DC F8 05                 2494 	ldhl	sp,#5
      0009DE 2A                    2495 	ld	a, (hl+)
      0009DF 5F                    2496 	ld	e, a
      0009E0 56                    2497 	ld	d, (hl)
      0009E1 1A                    2498 	ld	a, (de)
      0009E2 4F                    2499 	ld	c, a
      0009E3 13                    2500 	inc	de
      0009E4 1A                    2501 	ld	a, (de)
      0009E5 47                    2502 	ld	b, a
      0009E6 58                    2503 	ld	e, b
      0009E7 AF                    2504 	xor	a, a
      0009E8 57                    2505 	ld	d, a
      0009E9 B9                    2506 	cp	a, c
      0009EA 98                    2507 	sbc	a, b
      0009EB CB 7B                 2508 	bit	7, e
      0009ED 28 07                 2509 	jr	Z, 00190$
      0009EF CB 7A                 2510 	bit	7, d
      0009F1 20 08                 2511 	jr	NZ, 00191$
      0009F3 BF                    2512 	cp	a, a
      0009F4 18 05                 2513 	jr	00191$
      0009F6                       2514 00190$:
      0009F6 CB 7A                 2515 	bit	7, d
      0009F8 28 01                 2516 	jr	Z, 00191$
      0009FA 37                    2517 	scf
      0009FB                       2518 00191$:
      0009FB 30 62                 2519 	jr	NC, 00115$
      0009FD 79                    2520 	ld	a, c
      0009FE D6 98                 2521 	sub	a, #0x98
      000A00 78                    2522 	ld	a, b
      000A01 17                    2523 	rla
      000A02 3F                    2524 	ccf
      000A03 1F                    2525 	rra
      000A04 DE 80                 2526 	sbc	a, #0x80
      000A06 30 57                 2527 	jr	NC, 00115$
                                   2528 ;main.c:199: enemies[i].visible = 1;
      000A08 F8 02                 2529 	ldhl	sp,	#2
      000A0A 2A                    2530 	ld	a,	(hl+)
      000A0B 66                    2531 	ld	h, (hl)
      000A0C 6F                    2532 	ld	l, a
      000A0D 36 01                 2533 	ld	(hl), #0x01
                                   2534 ;main.c:200: set_sprite_tile(10+i, enemies[i].sprite0);
      000A0F D1                    2535 	pop	de
      000A10 D5                    2536 	push	de
      000A11 21 04 00              2537 	ld	hl, #0x0004
      000A14 19                    2538 	add	hl, de
      000A15 E5                    2539 	push	hl
      000A16 7D                    2540 	ld	a, l
      000A17 F8 09                 2541 	ldhl	sp,	#9
      000A19 77                    2542 	ld	(hl), a
      000A1A E1                    2543 	pop	hl
      000A1B 7C                    2544 	ld	a, h
      000A1C F8 08                 2545 	ldhl	sp,	#8
      000A1E 32                    2546 	ld	(hl-), a
      000A1F 2A                    2547 	ld	a, (hl+)
      000A20 5F                    2548 	ld	e, a
      000A21 2A                    2549 	ld	a, (hl+)
      000A22 23                    2550 	inc	hl
      000A23 57                    2551 	ld	d, a
      000A24 1A                    2552 	ld	a, (de)
                                   2553 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000A25 32                    2554 	ld	(hl-), a
      000A26 3A                    2555 	ld	a, (hl-)
      000A27 22                    2556 	ld	(hl+), a
      000A28 36 00                 2557 	ld	(hl), #0x00
      000A2A 3E 02                 2558 	ld	a, #0x02
      000A2C                       2559 00192$:
      000A2C F8 08                 2560 	ldhl	sp,	#8
      000A2E CB 26                 2561 	sla	(hl)
      000A30 23                    2562 	inc	hl
      000A31 CB 16                 2563 	rl	(hl)
      000A33 3D                    2564 	dec	a
      000A34 20 F6                 2565 	jr	NZ, 00192$
      000A36 2B                    2566 	dec	hl
      000A37 2A                    2567 	ld	a, (hl+)
      000A38 5F                    2568 	ld	e, a
      000A39 56                    2569 	ld	d, (hl)
      000A3A 21r00r00              2570 	ld	hl, #_shadow_OAM
      000A3D 19                    2571 	add	hl, de
      000A3E E5                    2572 	push	hl
      000A3F 7D                    2573 	ld	a, l
      000A40 F8 08                 2574 	ldhl	sp,	#8
      000A42 77                    2575 	ld	(hl), a
      000A43 E1                    2576 	pop	hl
      000A44 7C                    2577 	ld	a, h
      000A45 F8 07                 2578 	ldhl	sp,	#7
      000A47 32                    2579 	ld	(hl-), a
      000A48 2A                    2580 	ld	a, (hl+)
      000A49 5F                    2581 	ld	e, a
      000A4A 56                    2582 	ld	d, (hl)
      000A4B 21 02 00              2583 	ld	hl, #0x0002
      000A4E 19                    2584 	add	hl, de
      000A4F E5                    2585 	push	hl
      000A50 7D                    2586 	ld	a, l
      000A51 F8 0A                 2587 	ldhl	sp,	#10
      000A53 77                    2588 	ld	(hl), a
      000A54 E1                    2589 	pop	hl
      000A55 7C                    2590 	ld	a, h
      000A56 F8 09                 2591 	ldhl	sp,	#9
      000A58 32                    2592 	ld	(hl-), a
      000A59 2A                    2593 	ld	a, (hl+)
      000A5A 5F                    2594 	ld	e, a
      000A5B 2A                    2595 	ld	a, (hl+)
      000A5C 57                    2596 	ld	d, a
      000A5D 7E                    2597 	ld	a, (hl)
      000A5E 12                    2598 	ld	(de), a
                                   2599 ;main.c:200: set_sprite_tile(10+i, enemies[i].sprite0);
      000A5F                       2600 00115$:
                                   2601 ;main.c:205: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000A5F F8 0B                 2602 	ldhl	sp,	#11
      000A61 4E                    2603 	ld	c, (hl)
      000A62 06 00                 2604 	ld	b, #0x00
      000A64 69                    2605 	ld	l, c
      000A65 60                    2606 	ld	h, b
      000A66 29                    2607 	add	hl, hl
      000A67 29                    2608 	add	hl, hl
      000A68 09                    2609 	add	hl, bc
      000A69 29                    2610 	add	hl, hl
      000A6A 09                    2611 	add	hl, bc
      000A6B 11r00r00              2612 	ld	de, #_enemies
      000A6E 19                    2613 	add	hl, de
      000A6F 4D                    2614 	ld	c, l
      000A70 44                    2615 	ld	b, h
      000A71 03                    2616 	inc	bc
      000A72 03                    2617 	inc	bc
      000A73 0A                    2618 	ld	a, (bc)
      000A74 4F                    2619 	ld	c, a
      000A75 7E                    2620 	ld	a, (hl)
      000A76 F8 0A                 2621 	ldhl	sp,	#10
      000A78 77                    2622 	ld	(hl), a
      000A79 F8 0B                 2623 	ldhl	sp,	#11
      000A7B 7E                    2624 	ld	a, (hl)
      000A7C C6 0A                 2625 	add	a, #0x0a
                                   2626 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000A7E 6F                    2627 	ld	l, a
                                   2628 ;	spillPairReg hl
                                   2629 ;	spillPairReg hl
      000A7F 26 00                 2630 	ld	h, #0x00
                                   2631 ;	spillPairReg hl
                                   2632 ;	spillPairReg hl
      000A81 29                    2633 	add	hl, hl
      000A82 29                    2634 	add	hl, hl
      000A83 7D                    2635 	ld	a, l
      000A84 C6r00                 2636 	add	a, #<(_shadow_OAM)
      000A86 5F                    2637 	ld	e, a
      000A87 7C                    2638 	ld	a, h
      000A88 CEs00                 2639 	adc	a, #>(_shadow_OAM)
      000A8A 57                    2640 	ld	d, a
                                   2641 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000A8B 79                    2642 	ld	a, c
      000A8C 12                    2643 	ld	(de), a
      000A8D 13                    2644 	inc	de
      000A8E F8 0A                 2645 	ldhl	sp,	#10
                                   2646 ;main.c:188: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000A90 2A                    2647 	ld	a, (hl+)
      000A91 12                    2648 	ld	(de), a
      000A92 34                    2649 	inc	(hl)
      000A93 C3rADr08              2650 	jp	00121$
      000A96                       2651 00123$:
                                   2652 ;main.c:207: }
      000A96 E8 0C                 2653 	add	sp, #12
      000A98 C9                    2654 	ret
                                   2655 ;main.c:209: void initEnemies() {
                                   2656 ;	---------------------------------
                                   2657 ; Function initEnemies
                                   2658 ; ---------------------------------
      000A99                       2659 _initEnemies::
      000A99 E8 FB                 2660 	add	sp, #-5
                                   2661 ;main.c:212: set_sprite_data(9, 1, enemy1);
      000A9B 11rF7r04              2662 	ld	de, #_enemy1
      000A9E D5                    2663 	push	de
      000A9F 21 09 01              2664 	ld	hl, #0x109
      000AA2 E5                    2665 	push	hl
      000AA3 CDr00r00              2666 	call	_set_sprite_data
      000AA6 E8 04                 2667 	add	sp, #4
                                   2668 ;main.c:215: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000AA8 F8 04                 2669 	ldhl	sp,	#4
      000AAA 36 00                 2670 	ld	(hl), #0x00
      000AAC                       2671 00105$:
      000AAC 21r09r05              2672 	ld	hl, #_ENEMYCOUNT
      000AAF 4E                    2673 	ld	c, (hl)
      000AB0 F8 04                 2674 	ldhl	sp,	#4
      000AB2 7E                    2675 	ld	a, (hl)
      000AB3 91                    2676 	sub	a, c
      000AB4 D2r61r0B              2677 	jp	NC, 00107$
                                   2678 ;main.c:216: enemies[i].x = (rand() & 7) << 3;
      000AB7 4E                    2679 	ld	c, (hl)
      000AB8 06 00                 2680 	ld	b, #0x00
      000ABA 69                    2681 	ld	l, c
      000ABB 60                    2682 	ld	h, b
      000ABC 29                    2683 	add	hl, hl
      000ABD 29                    2684 	add	hl, hl
      000ABE 09                    2685 	add	hl, bc
      000ABF 29                    2686 	add	hl, hl
      000AC0 09                    2687 	add	hl, bc
      000AC1 01r00r00              2688 	ld	bc,#_enemies
      000AC4 09                    2689 	add	hl,bc
      000AC5 E5                    2690 	push	hl
      000AC6 CDr00r00              2691 	call	_rand
      000AC9 7B                    2692 	ld	a, e
      000ACA C1                    2693 	pop	bc
      000ACB E6 07                 2694 	and	a, #0x07
      000ACD 26 00                 2695 	ld	h, #0x00
                                   2696 ;	spillPairReg hl
                                   2697 ;	spillPairReg hl
      000ACF 6F                    2698 	ld	l, a
      000AD0 29                    2699 	add	hl, hl
      000AD1 29                    2700 	add	hl, hl
      000AD2 29                    2701 	add	hl, hl
      000AD3 5D                    2702 	ld	e, l
      000AD4 54                    2703 	ld	d, h
      000AD5 69                    2704 	ld	l, c
      000AD6 60                    2705 	ld	h, b
      000AD7 7B                    2706 	ld	a, e
      000AD8 22                    2707 	ld	(hl+), a
      000AD9 72                    2708 	ld	(hl), d
                                   2709 ;main.c:217: enemies[i].y = (rand() & 7) << 3;
      000ADA 21 02 00              2710 	ld	hl, #0x0002
      000ADD 09                    2711 	add	hl, bc
      000ADE E5                    2712 	push	hl
      000ADF 7D                    2713 	ld	a, l
      000AE0 F8 04                 2714 	ldhl	sp,	#4
      000AE2 77                    2715 	ld	(hl), a
      000AE3 E1                    2716 	pop	hl
      000AE4 7C                    2717 	ld	a, h
      000AE5 F8 03                 2718 	ldhl	sp,	#3
      000AE7 77                    2719 	ld	(hl), a
      000AE8 C5                    2720 	push	bc
      000AE9 CDr00r00              2721 	call	_rand
      000AEC 7B                    2722 	ld	a, e
      000AED C1                    2723 	pop	bc
      000AEE E6 07                 2724 	and	a, #0x07
      000AF0 6F                    2725 	ld	l, a
                                   2726 ;	spillPairReg hl
                                   2727 ;	spillPairReg hl
      000AF1 26 00                 2728 	ld	h, #0x00
                                   2729 ;	spillPairReg hl
                                   2730 ;	spillPairReg hl
      000AF3 29                    2731 	add	hl, hl
      000AF4 29                    2732 	add	hl, hl
      000AF5 29                    2733 	add	hl, hl
      000AF6 7D                    2734 	ld	a, l
      000AF7 5C                    2735 	ld	e, h
      000AF8 F8 00                 2736 	ldhl	sp,	#0
      000AFA 22                    2737 	ld	(hl+), a
      000AFB 7B                    2738 	ld	a, e
      000AFC 22                    2739 	ld	(hl+), a
      000AFD 2A                    2740 	ld	a, (hl+)
      000AFE 5F                    2741 	ld	e, a
      000AFF 56                    2742 	ld	d, (hl)
      000B00 F8 00                 2743 	ldhl	sp,	#0
      000B02 2A                    2744 	ld	a, (hl+)
      000B03 12                    2745 	ld	(de), a
      000B04 13                    2746 	inc	de
      000B05 7E                    2747 	ld	a, (hl)
      000B06 12                    2748 	ld	(de), a
                                   2749 ;main.c:219: enemies[i].sprite0 = 9;
      000B07 21 04 00              2750 	ld	hl, #0x0004
      000B0A 09                    2751 	add	hl, bc
      000B0B 5D                    2752 	ld	e, l
      000B0C 54                    2753 	ld	d, h
      000B0D 36 09                 2754 	ld	(hl), #0x09
                                   2755 ;main.c:220: enemies[i].spriteCount = 1;
      000B0F 21 06 00              2756 	ld	hl, #0x0006
      000B12 09                    2757 	add	hl, bc
      000B13 3E 01                 2758 	ld	a, #0x01
      000B15 22                    2759 	ld	(hl+), a
      000B16 36 00                 2760 	ld	(hl), #0x00
                                   2761 ;main.c:221: enemies[i].alive = 1;
      000B18 21 08 00              2762 	ld	hl, #0x0008
      000B1B 09                    2763 	add	hl, bc
      000B1C 36 01                 2764 	ld	(hl), #0x01
                                   2765 ;main.c:222: enemies[i].visible = 1;
      000B1E 21 09 00              2766 	ld	hl, #0x0009
      000B21 09                    2767 	add	hl, bc
      000B22 36 01                 2768 	ld	(hl), #0x01
                                   2769 ;main.c:223: enemies[i].damage = 50;
      000B24 21 0A 00              2770 	ld	hl, #0x000a
      000B27 09                    2771 	add	hl, bc
      000B28 36 32                 2772 	ld	(hl), #0x32
                                   2773 ;main.c:225: set_sprite_tile(10+i, enemies[i].sprite0);
      000B2A 1A                    2774 	ld	a, (de)
      000B2B 5F                    2775 	ld	e, a
      000B2C F8 04                 2776 	ldhl	sp,	#4
      000B2E 3A                    2777 	ld	a, (hl-)
      000B2F 2B                    2778 	dec	hl
      000B30 C6 0A                 2779 	add	a, #0x0a
      000B32 77                    2780 	ld	(hl), a
      000B33 56                    2781 	ld	d, (hl)
                                   2782 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B34 26 00                 2783 	ld	h, #0x00
                                   2784 ;	spillPairReg hl
                                   2785 ;	spillPairReg hl
      000B36 6A                    2786 	ld	l, d
      000B37 29                    2787 	add	hl, hl
      000B38 29                    2788 	add	hl, hl
      000B39 D5                    2789 	push	de
      000B3A 11r00r00              2790 	ld	de, #_shadow_OAM
      000B3D 19                    2791 	add	hl, de
      000B3E 23                    2792 	inc	hl
      000B3F 23                    2793 	inc	hl
      000B40 D1                    2794 	pop	de
      000B41 73                    2795 	ld	(hl), e
                                   2796 ;main.c:226: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000B42 F8 00                 2797 	ldhl	sp,	#0
      000B44 5E                    2798 	ld	e, (hl)
      000B45 0A                    2799 	ld	a, (bc)
      000B46 F8 03                 2800 	ldhl	sp,	#3
      000B48 32                    2801 	ld	(hl-), a
                                   2802 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000B49 6E                    2803 	ld	l, (hl)
                                   2804 ;	spillPairReg hl
                                   2805 ;	spillPairReg hl
      000B4A 26 00                 2806 	ld	h, #0x00
                                   2807 ;	spillPairReg hl
                                   2808 ;	spillPairReg hl
      000B4C 29                    2809 	add	hl, hl
      000B4D 29                    2810 	add	hl, hl
      000B4E 7D                    2811 	ld	a, l
      000B4F C6r00                 2812 	add	a, #<(_shadow_OAM)
      000B51 4F                    2813 	ld	c, a
      000B52 7C                    2814 	ld	a, h
      000B53 CEs00                 2815 	adc	a, #>(_shadow_OAM)
      000B55 47                    2816 	ld	b, a
                                   2817 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000B56 7B                    2818 	ld	a, e
      000B57 02                    2819 	ld	(bc), a
      000B58 03                    2820 	inc	bc
      000B59 F8 03                 2821 	ldhl	sp,	#3
                                   2822 ;main.c:215: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000B5B 2A                    2823 	ld	a, (hl+)
      000B5C 02                    2824 	ld	(bc), a
      000B5D 34                    2825 	inc	(hl)
      000B5E C3rACr0A              2826 	jp	00105$
      000B61                       2827 00107$:
                                   2828 ;main.c:228: }
      000B61 E8 05                 2829 	add	sp, #5
      000B63 C9                    2830 	ret
                                   2831 ;main.c:231: void move() {
                                   2832 ;	---------------------------------
                                   2833 ; Function move
                                   2834 ; ---------------------------------
      000B64                       2835 _move::
      000B64 E8 F8                 2836 	add	sp, #-8
                                   2837 ;main.c:235: if (joydata & J_A) {
      000B66 FAr37r00              2838 	ld	a, (#_joydata)
      000B69 CB 67                 2839 	bit	4, a
      000B6B 28 16                 2840 	jr	Z, 00102$
                                   2841 ;main.c:236: xSpeed += xDir + xDir + xDir;
      000B6D 21r14r00              2842 	ld	hl, #_xDir
      000B70 7E                    2843 	ld	a, (hl)
      000B71 87                    2844 	add	a, a
      000B72 86                    2845 	add	a, (hl)
      000B73 21r16r00              2846 	ld	hl, #_xSpeed
      000B76 86                    2847 	add	a, (hl)
      000B77 77                    2848 	ld	(hl), a
                                   2849 ;main.c:237: ySpeed += yDir + yDir + yDir;
      000B78 21r15r00              2850 	ld	hl, #_yDir
      000B7B 7E                    2851 	ld	a, (hl)
      000B7C 87                    2852 	add	a, a
      000B7D 86                    2853 	add	a, (hl)
      000B7E 21r17r00              2854 	ld	hl, #_ySpeed
      000B81 86                    2855 	add	a, (hl)
      000B82 77                    2856 	ld	(hl), a
      000B83                       2857 00102$:
                                   2858 ;main.c:241: xSpeed = clamp(xSpeed, -100, 100);
      000B83 21 9C 64              2859 	ld	hl, #0x649c
      000B86 E5                    2860 	push	hl
      000B87 FAr16r00              2861 	ld	a, (#_xSpeed)
      000B8A F5                    2862 	push	af
      000B8B 33                    2863 	inc	sp
      000B8C CDrAAr07              2864 	call	_clamp
      000B8F E8 03                 2865 	add	sp, #3
      000B91 21r16r00              2866 	ld	hl, #_xSpeed
      000B94 73                    2867 	ld	(hl), e
                                   2868 ;main.c:242: ySpeed = clamp(ySpeed, -100, 100);
      000B95 21 9C 64              2869 	ld	hl, #0x649c
      000B98 E5                    2870 	push	hl
      000B99 FAr17r00              2871 	ld	a, (#_ySpeed)
      000B9C F5                    2872 	push	af
      000B9D 33                    2873 	inc	sp
      000B9E CDrAAr07              2874 	call	_clamp
      000BA1 E8 03                 2875 	add	sp, #3
      000BA3 21r17r00              2876 	ld	hl, #_ySpeed
      000BA6 73                    2877 	ld	(hl), e
                                   2878 ;main.c:244: int16_t xOverflow = 0;
      000BA7 AF                    2879 	xor	a, a
      000BA8 F8 02                 2880 	ldhl	sp,	#2
      000BAA 22                    2881 	ld	(hl+), a
      000BAB 77                    2882 	ld	(hl), a
                                   2883 ;main.c:245: int16_t yOverflow = 0;
      000BAC AF                    2884 	xor	a, a
      000BAD F8 00                 2885 	ldhl	sp,	#0
      000BAF 22                    2886 	ld	(hl+), a
      000BB0 77                    2887 	ld	(hl), a
                                   2888 ;main.c:250: uint8_t xCollisionPoint = playerDrawX -4; 
      000BB1 21r1Cr00              2889 	ld	hl, #_playerDrawX
      000BB4 46                    2890 	ld	b, (hl)
      000BB5 78                    2891 	ld	a, b
      000BB6 C6 FC                 2892 	add	a, #0xfc
      000BB8 4F                    2893 	ld	c, a
                                   2894 ;main.c:252: if (xSpeed > 0) {
      000BB9 21r16r00              2895 	ld	hl, #_xSpeed
      000BBC 5E                    2896 	ld	e, (hl)
      000BBD AF                    2897 	xor	a, a
      000BBE 57                    2898 	ld	d, a
      000BBF 96                    2899 	sub	a, (hl)
      000BC0 CB 7B                 2900 	bit	7, e
      000BC2 28 07                 2901 	jr	Z, 00229$
      000BC4 CB 7A                 2902 	bit	7, d
      000BC6 20 08                 2903 	jr	NZ, 00230$
      000BC8 BF                    2904 	cp	a, a
      000BC9 18 05                 2905 	jr	00230$
      000BCB                       2906 00229$:
      000BCB CB 7A                 2907 	bit	7, d
      000BCD 28 01                 2908 	jr	Z, 00230$
      000BCF 37                    2909 	scf
      000BD0                       2910 00230$:
      000BD0 30 04                 2911 	jr	NC, 00104$
                                   2912 ;main.c:253: xCollisionPoint = playerDrawX; //right edge
      000BD2 21r1Cr00              2913 	ld	hl, #_playerDrawX
      000BD5 4E                    2914 	ld	c, (hl)
      000BD6                       2915 00104$:
                                   2916 ;main.c:255: if (xSpeed < 0) {
      000BD6 FAr16r00              2917 	ld	a, (#_xSpeed)
      000BD9 CB 7F                 2918 	bit	7, a
      000BDB 28 04                 2919 	jr	Z, 00106$
                                   2920 ;main.c:256: xCollisionPoint = playerDrawX -8; //left edge
      000BDD 78                    2921 	ld	a, b
      000BDE C6 F8                 2922 	add	a, #0xf8
      000BE0 4F                    2923 	ld	c, a
      000BE1                       2924 00106$:
                                   2925 ;main.c:260: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      000BE1 06 00                 2926 	ld	b, #0x00
      000BE3 79                    2927 	ld	a, c
      000BE4 21r1Er00              2928 	ld	hl, #_bgX
      000BE7 86                    2929 	add	a, (hl)
      000BE8 23                    2930 	inc	hl
      000BE9 4F                    2931 	ld	c, a
      000BEA 78                    2932 	ld	a, b
      000BEB 8E                    2933 	adc	a, (hl)
      000BEC 47                    2934 	ld	b, a
      000BED CB 28                 2935 	sra	b
      000BEF CB 19                 2936 	rr	c
      000BF1 CB 28                 2937 	sra	b
      000BF3 CB 19                 2938 	rr	c
      000BF5 CB 28                 2939 	sra	b
      000BF7 CB 19                 2940 	rr	c
      000BF9 11 20 00              2941 	ld	de, #0x0020
      000BFC D5                    2942 	push	de
      000BFD C5                    2943 	push	bc
      000BFE CDr00r00              2944 	call	__modsint
      000C01 E8 04                 2945 	add	sp, #4
                                   2946 ;main.c:264: uint8_t bgindY = ((playerDrawY-12 + bgY) >> 3)%32; 
      000C03 FAr1Dr00              2947 	ld	a, (#_playerDrawY)
      000C06 06 00                 2948 	ld	b, #0x00
      000C08 C6 F4                 2949 	add	a, #0xf4
      000C0A 4F                    2950 	ld	c, a
      000C0B 78                    2951 	ld	a, b
      000C0C CE FF                 2952 	adc	a, #0xff
      000C0E 47                    2953 	ld	b, a
      000C0F 79                    2954 	ld	a, c
      000C10 21r20r00              2955 	ld	hl, #_bgY
      000C13 86                    2956 	add	a, (hl)
      000C14 23                    2957 	inc	hl
      000C15 4F                    2958 	ld	c, a
      000C16 78                    2959 	ld	a, b
      000C17 8E                    2960 	adc	a, (hl)
      000C18 47                    2961 	ld	b, a
      000C19 CB 28                 2962 	sra	b
      000C1B CB 19                 2963 	rr	c
      000C1D CB 28                 2964 	sra	b
      000C1F CB 19                 2965 	rr	c
      000C21 CB 28                 2966 	sra	b
      000C23 CB 19                 2967 	rr	c
      000C25 D5                    2968 	push	de
      000C26 21 20 00              2969 	ld	hl, #0x0020
      000C29 E5                    2970 	push	hl
      000C2A C5                    2971 	push	bc
      000C2B CDr00r00              2972 	call	__modsint
      000C2E E8 04                 2973 	add	sp, #4
      000C30 6B                    2974 	ld	l, e
                                   2975 ;	spillPairReg hl
                                   2976 ;	spillPairReg hl
                                   2977 ;	spillPairReg hl
                                   2978 ;	spillPairReg hl
      000C31 D1                    2979 	pop	de
                                   2980 ;main.c:267: uint16_t ind = 32*bgindY + bgindX;
      000C32 26 00                 2981 	ld	h, #0x00
                                   2982 ;	spillPairReg hl
                                   2983 ;	spillPairReg hl
      000C34 29                    2984 	add	hl, hl
      000C35 29                    2985 	add	hl, hl
      000C36 29                    2986 	add	hl, hl
      000C37 29                    2987 	add	hl, hl
      000C38 29                    2988 	add	hl, hl
      000C39 19                    2989 	add	hl, de
                                   2990 ;main.c:268: uint8_t result = background1[ind] != BLANK[0];
      000C3A 01r87r00              2991 	ld	bc,#_background1
      000C3D 09                    2992 	add	hl,bc
      000C3E 4E                    2993 	ld	c, (hl)
      000C3F 21r07r05              2994 	ld	hl, #_BLANK
      000C42 46                    2995 	ld	b, (hl)
      000C43 79                    2996 	ld	a, c
      000C44 90                    2997 	sub	a, b
      000C45 3E 01                 2998 	ld	a, #0x01
      000C47 28 01                 2999 	jr	Z, 00232$
      000C49 AF                    3000 	xor	a, a
      000C4A                       3001 00232$:
                                   3002 ;main.c:269: if (result == 0) {
      000C4A EE 01                 3003 	xor	a,#0x01
      000C4C C2r32r0D              3004 	jp	NZ, 00111$
                                   3005 ;main.c:270: playerX+=xSpeed;
      000C4F FAr16r00              3006 	ld	a, (#_xSpeed)
      000C52 4F                    3007 	ld	c, a
      000C53 07                    3008 	rlca
      000C54 9F                    3009 	sbc	a, a
      000C55 47                    3010 	ld	b, a
      000C56 21r18r00              3011 	ld	hl, #_playerX
      000C59 6E                    3012 	ld	l, (hl)
                                   3013 ;	spillPairReg hl
                                   3014 ;	spillPairReg hl
      000C5A FAr19r00              3015 	ld	a, (_playerX + 1)
      000C5D 67                    3016 	ld	h, a
                                   3017 ;	spillPairReg hl
                                   3018 ;	spillPairReg hl
      000C5E 09                    3019 	add	hl, bc
      000C5F 4D                    3020 	ld	c, l
      000C60 7C                    3021 	ld	a, h
      000C61 21r18r00              3022 	ld	hl, #_playerX
      000C64 71                    3023 	ld	(hl), c
      000C65 23                    3024 	inc	hl
                                   3025 ;main.c:272: uint16_t limitedPlayerX = u16Clamp(playerX, 58<<5, 110<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      000C66 32                    3026 	ld	(hl-), a
      000C67 11 C0 0D              3027 	ld	de, #0x0dc0
      000C6A D5                    3028 	push	de
      000C6B 11 40 07              3029 	ld	de, #0x0740
      000C6E D5                    3030 	push	de
      000C6F 2A                    3031 	ld	a, (hl+)
      000C70 5F                    3032 	ld	e, a
      000C71 56                    3033 	ld	d, (hl)
      000C72 D5                    3034 	push	de
      000C73 CDr01r08              3035 	call	_u16Clamp
      000C76 E8 06                 3036 	add	sp, #6
      000C78 4B                    3037 	ld	c, e
      000C79 42                    3038 	ld	b, d
                                   3039 ;main.c:274: xOverflow = (playerX - limitedPlayerX);
      000C7A 21r18r00              3040 	ld	hl, #_playerX
      000C7D 2A                    3041 	ld	a, (hl+)
      000C7E 91                    3042 	sub	a, c
      000C7F 5F                    3043 	ld	e, a
      000C80 7E                    3044 	ld	a, (hl)
      000C81 98                    3045 	sbc	a, b
      000C82 57                    3046 	ld	d, a
      000C83 F8 04                 3047 	ldhl	sp,	#4
      000C85 7B                    3048 	ld	a, e
      000C86 22                    3049 	ld	(hl+), a
                                   3050 ;main.c:275: if (xOverflow >= 0) {
      000C87 7A                    3051 	ld	a, d
      000C88 32                    3052 	ld	(hl-), a
      000C89 2A                    3053 	ld	a, (hl+)
      000C8A 23                    3054 	inc	hl
      000C8B 32                    3055 	ld	(hl-), a
      000C8C 2A                    3056 	ld	a, (hl+)
      000C8D 23                    3057 	inc	hl
      000C8E 77                    3058 	ld	(hl), a
      000C8F CB 7E                 3059 	bit	7, (hl)
      000C91 20 29                 3060 	jr	NZ, 00108$
                                   3061 ;main.c:276: xOverflow = xOverflow >> 5;
      000C93 F8 04                 3062 	ldhl	sp,	#4
      000C95 3A                    3063 	ld	a, (hl-)
      000C96 2B                    3064 	dec	hl
      000C97 77                    3065 	ld	(hl), a
      000C98 F8 05                 3066 	ldhl	sp,	#5
      000C9A 3A                    3067 	ld	a, (hl-)
      000C9B 2B                    3068 	dec	hl
      000C9C 77                    3069 	ld	(hl), a
      000C9D CB 2E                 3070 	sra	(hl)
      000C9F 2B                    3071 	dec	hl
      000CA0 CB 1E                 3072 	rr	(hl)
      000CA2 23                    3073 	inc	hl
      000CA3 CB 2E                 3074 	sra	(hl)
      000CA5 2B                    3075 	dec	hl
      000CA6 CB 1E                 3076 	rr	(hl)
      000CA8 23                    3077 	inc	hl
      000CA9 CB 2E                 3078 	sra	(hl)
      000CAB 2B                    3079 	dec	hl
      000CAC CB 1E                 3080 	rr	(hl)
      000CAE 23                    3081 	inc	hl
      000CAF CB 2E                 3082 	sra	(hl)
      000CB1 2B                    3083 	dec	hl
      000CB2 CB 1E                 3084 	rr	(hl)
      000CB4 23                    3085 	inc	hl
      000CB5 CB 2E                 3086 	sra	(hl)
      000CB7 2B                    3087 	dec	hl
      000CB8 CB 1E                 3088 	rr	(hl)
      000CBA 18 3E                 3089 	jr	00109$
      000CBC                       3090 00108$:
                                   3091 ;main.c:279: xOverflow = -((-xOverflow) >> 5);
      000CBC 11 00 00              3092 	ld	de, #0x0000
      000CBF F8 04                 3093 	ldhl	sp,	#4
      000CC1 2A                    3094 	ld	a,	(hl+)
      000CC2 66                    3095 	ld	h, (hl)
      000CC3 6F                    3096 	ld	l, a
      000CC4 7B                    3097 	ld	a, e
      000CC5 95                    3098 	sub	a, l
      000CC6 5F                    3099 	ld	e, a
      000CC7 7A                    3100 	ld	a, d
      000CC8 9C                    3101 	sbc	a, h
      000CC9 F8 07                 3102 	ldhl	sp,	#7
      000CCB 32                    3103 	ld	(hl-), a
      000CCC 7B                    3104 	ld	a, e
      000CCD 22                    3105 	ld	(hl+), a
      000CCE CB 2E                 3106 	sra	(hl)
      000CD0 2B                    3107 	dec	hl
      000CD1 CB 1E                 3108 	rr	(hl)
      000CD3 23                    3109 	inc	hl
      000CD4 CB 2E                 3110 	sra	(hl)
      000CD6 2B                    3111 	dec	hl
      000CD7 CB 1E                 3112 	rr	(hl)
      000CD9 23                    3113 	inc	hl
      000CDA CB 2E                 3114 	sra	(hl)
      000CDC 2B                    3115 	dec	hl
      000CDD CB 1E                 3116 	rr	(hl)
      000CDF 23                    3117 	inc	hl
      000CE0 CB 2E                 3118 	sra	(hl)
      000CE2 2B                    3119 	dec	hl
      000CE3 CB 1E                 3120 	rr	(hl)
      000CE5 23                    3121 	inc	hl
      000CE6 CB 2E                 3122 	sra	(hl)
      000CE8 2B                    3123 	dec	hl
      000CE9 CB 1E                 3124 	rr	(hl)
      000CEB 11 00 00              3125 	ld	de, #0x0000
      000CEE 2A                    3126 	ld	a,	(hl+)
      000CEF 66                    3127 	ld	h, (hl)
      000CF0 6F                    3128 	ld	l, a
      000CF1 7B                    3129 	ld	a, e
      000CF2 95                    3130 	sub	a, l
      000CF3 5F                    3131 	ld	e, a
      000CF4 7A                    3132 	ld	a, d
      000CF5 9C                    3133 	sbc	a, h
      000CF6 F8 03                 3134 	ldhl	sp,	#3
      000CF8 32                    3135 	ld	(hl-), a
      000CF9 73                    3136 	ld	(hl), e
      000CFA                       3137 00109$:
                                   3138 ;main.c:281: bgX += xOverflow;
      000CFA 21r1Er00              3139 	ld	hl, #_bgX
      000CFD 2A                    3140 	ld	a, (hl+)
      000CFE 5F                    3141 	ld	e, a
      000CFF 56                    3142 	ld	d, (hl)
      000D00 F8 02                 3143 	ldhl	sp,	#2
      000D02 2A                    3144 	ld	a,	(hl+)
      000D03 66                    3145 	ld	h, (hl)
      000D04 6F                    3146 	ld	l, a
      000D05 19                    3147 	add	hl, de
      000D06 5D                    3148 	ld	e, l
      000D07 54                    3149 	ld	d, h
      000D08 21r1Er00              3150 	ld	hl, #_bgX
      000D0B 7B                    3151 	ld	a, e
      000D0C 22                    3152 	ld	(hl+), a
      000D0D 72                    3153 	ld	(hl), d
                                   3154 ;main.c:282: playerX = limitedPlayerX;
      000D0E 21r18r00              3155 	ld	hl, #_playerX
      000D11 79                    3156 	ld	a, c
      000D12 22                    3157 	ld	(hl+), a
                                   3158 ;main.c:283: playerDrawX=playerX >> 5;
      000D13 78                    3159 	ld	a, b
      000D14 32                    3160 	ld	(hl-), a
      000D15 2A                    3161 	ld	a, (hl+)
      000D16 4F                    3162 	ld	c, a
      000D17 46                    3163 	ld	b, (hl)
      000D18 CB 38                 3164 	srl	b
      000D1A CB 19                 3165 	rr	c
      000D1C CB 38                 3166 	srl	b
      000D1E CB 19                 3167 	rr	c
      000D20 CB 38                 3168 	srl	b
      000D22 CB 19                 3169 	rr	c
      000D24 CB 38                 3170 	srl	b
      000D26 CB 19                 3171 	rr	c
      000D28 CB 38                 3172 	srl	b
      000D2A CB 19                 3173 	rr	c
      000D2C 21r1Cr00              3174 	ld	hl, #_playerDrawX
      000D2F 71                    3175 	ld	(hl), c
      000D30 18 05                 3176 	jr	00112$
      000D32                       3177 00111$:
                                   3178 ;main.c:291: xSpeed = 0;
      000D32 21r16r00              3179 	ld	hl, #_xSpeed
      000D35 36 00                 3180 	ld	(hl), #0x00
      000D37                       3181 00112$:
                                   3182 ;main.c:299: uint8_t yCollisionPoint = playerDrawY -12; 
      000D37 21r1Dr00              3183 	ld	hl, #_playerDrawY
      000D3A 46                    3184 	ld	b, (hl)
      000D3B 78                    3185 	ld	a, b
      000D3C C6 F4                 3186 	add	a, #0xf4
      000D3E 4F                    3187 	ld	c, a
                                   3188 ;main.c:301: if (ySpeed > 0) {
      000D3F 21r17r00              3189 	ld	hl, #_ySpeed
      000D42 5E                    3190 	ld	e, (hl)
      000D43 AF                    3191 	xor	a, a
      000D44 57                    3192 	ld	d, a
      000D45 96                    3193 	sub	a, (hl)
      000D46 CB 7B                 3194 	bit	7, e
      000D48 28 07                 3195 	jr	Z, 00233$
      000D4A CB 7A                 3196 	bit	7, d
      000D4C 20 08                 3197 	jr	NZ, 00234$
      000D4E BF                    3198 	cp	a, a
      000D4F 18 05                 3199 	jr	00234$
      000D51                       3200 00233$:
      000D51 CB 7A                 3201 	bit	7, d
      000D53 28 01                 3202 	jr	Z, 00234$
      000D55 37                    3203 	scf
      000D56                       3204 00234$:
      000D56 30 04                 3205 	jr	NC, 00114$
                                   3206 ;main.c:302: yCollisionPoint = playerDrawY - 8; //bottom edge, only half the height, so -8
      000D58 78                    3207 	ld	a, b
      000D59 C6 F8                 3208 	add	a, #0xf8
      000D5B 4F                    3209 	ld	c, a
      000D5C                       3210 00114$:
                                   3211 ;main.c:304: if (ySpeed < 0) {
      000D5C FAr17r00              3212 	ld	a, (#_ySpeed)
      000D5F CB 7F                 3213 	bit	7, a
      000D61 28 04                 3214 	jr	Z, 00116$
                                   3215 ;main.c:305: yCollisionPoint = playerDrawY -16; //top edge, 
      000D63 78                    3216 	ld	a, b
      000D64 C6 F0                 3217 	add	a, #0xf0
      000D66 4F                    3218 	ld	c, a
      000D67                       3219 00116$:
                                   3220 ;main.c:309: bgindX = ((playerDrawX -4 + bgX) >> 3)%32;
      000D67 FAr1Cr00              3221 	ld	a, (#_playerDrawX)
      000D6A 06 00                 3222 	ld	b, #0x00
      000D6C C6 FC                 3223 	add	a, #0xfc
      000D6E 5F                    3224 	ld	e, a
      000D6F 78                    3225 	ld	a, b
      000D70 CE FF                 3226 	adc	a, #0xff
      000D72 57                    3227 	ld	d, a
      000D73 7B                    3228 	ld	a, e
      000D74 21r1Er00              3229 	ld	hl, #_bgX
      000D77 86                    3230 	add	a, (hl)
      000D78 23                    3231 	inc	hl
      000D79 5F                    3232 	ld	e, a
      000D7A 7A                    3233 	ld	a, d
      000D7B 8E                    3234 	adc	a, (hl)
      000D7C 57                    3235 	ld	d, a
      000D7D CB 2A                 3236 	sra	d
      000D7F CB 1B                 3237 	rr	e
      000D81 CB 2A                 3238 	sra	d
      000D83 CB 1B                 3239 	rr	e
      000D85 CB 2A                 3240 	sra	d
      000D87 CB 1B                 3241 	rr	e
      000D89 C5                    3242 	push	bc
      000D8A 21 20 00              3243 	ld	hl, #0x0020
      000D8D E5                    3244 	push	hl
      000D8E D5                    3245 	push	de
      000D8F CDr00r00              3246 	call	__modsint
      000D92 E8 04                 3247 	add	sp, #4
      000D94 C1                    3248 	pop	bc
                                   3249 ;main.c:312: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      000D95 06 00                 3250 	ld	b, #0x00
      000D97 79                    3251 	ld	a, c
      000D98 21r20r00              3252 	ld	hl, #_bgY
      000D9B 86                    3253 	add	a, (hl)
      000D9C 23                    3254 	inc	hl
      000D9D 4F                    3255 	ld	c, a
      000D9E 78                    3256 	ld	a, b
      000D9F 8E                    3257 	adc	a, (hl)
      000DA0 47                    3258 	ld	b, a
      000DA1 CB 28                 3259 	sra	b
      000DA3 CB 19                 3260 	rr	c
      000DA5 CB 28                 3261 	sra	b
      000DA7 CB 19                 3262 	rr	c
      000DA9 CB 28                 3263 	sra	b
      000DAB CB 19                 3264 	rr	c
      000DAD D5                    3265 	push	de
      000DAE 21 20 00              3266 	ld	hl, #0x0020
      000DB1 E5                    3267 	push	hl
      000DB2 C5                    3268 	push	bc
      000DB3 CDr00r00              3269 	call	__modsint
      000DB6 E8 04                 3270 	add	sp, #4
      000DB8 6B                    3271 	ld	l, e
                                   3272 ;	spillPairReg hl
                                   3273 ;	spillPairReg hl
      000DB9 D1                    3274 	pop	de
                                   3275 ;main.c:315: ind = 32*bgindY + bgindX;
      000DBA 26 00                 3276 	ld	h, #0x00
                                   3277 ;	spillPairReg hl
                                   3278 ;	spillPairReg hl
      000DBC 29                    3279 	add	hl, hl
      000DBD 29                    3280 	add	hl, hl
      000DBE 29                    3281 	add	hl, hl
      000DBF 29                    3282 	add	hl, hl
      000DC0 29                    3283 	add	hl, hl
      000DC1 19                    3284 	add	hl, de
                                   3285 ;main.c:316: result = background1[ind] != BLANK[0];
      000DC2 11r87r00              3286 	ld	de, #_background1
      000DC5 19                    3287 	add	hl, de
      000DC6 4E                    3288 	ld	c, (hl)
      000DC7 21r07r05              3289 	ld	hl, #_BLANK
      000DCA 46                    3290 	ld	b, (hl)
      000DCB 79                    3291 	ld	a, c
      000DCC 90                    3292 	sub	a, b
      000DCD 3E 01                 3293 	ld	a, #0x01
      000DCF 28 01                 3294 	jr	Z, 00236$
      000DD1 AF                    3295 	xor	a, a
      000DD2                       3296 00236$:
                                   3297 ;main.c:317: if (result == 0) {
      000DD2 EE 01                 3298 	xor	a,#0x01
      000DD4 C2rB6r0E              3299 	jp	NZ, 00121$
                                   3300 ;main.c:318: playerY += ySpeed;
      000DD7 FAr17r00              3301 	ld	a, (#_ySpeed)
      000DDA 4F                    3302 	ld	c, a
      000DDB 07                    3303 	rlca
      000DDC 9F                    3304 	sbc	a, a
      000DDD 47                    3305 	ld	b, a
      000DDE 21r1Ar00              3306 	ld	hl, #_playerY
      000DE1 6E                    3307 	ld	l, (hl)
                                   3308 ;	spillPairReg hl
                                   3309 ;	spillPairReg hl
      000DE2 FAr1Br00              3310 	ld	a, (_playerY + 1)
      000DE5 67                    3311 	ld	h, a
                                   3312 ;	spillPairReg hl
                                   3313 ;	spillPairReg hl
      000DE6 09                    3314 	add	hl, bc
      000DE7 4D                    3315 	ld	c, l
      000DE8 44                    3316 	ld	b, h
      000DE9 21r1Ar00              3317 	ld	hl, #_playerY
      000DEC 79                    3318 	ld	a, c
      000DED 22                    3319 	ld	(hl+), a
                                   3320 ;main.c:320: uint16_t limitedPlayerY = u16Clamp(playerY, 61<<5, 107<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      000DEE 78                    3321 	ld	a, b
      000DEF 32                    3322 	ld	(hl-), a
      000DF0 11 60 0D              3323 	ld	de, #0x0d60
      000DF3 D5                    3324 	push	de
      000DF4 11 A0 07              3325 	ld	de, #0x07a0
      000DF7 D5                    3326 	push	de
      000DF8 2A                    3327 	ld	a, (hl+)
      000DF9 5F                    3328 	ld	e, a
      000DFA 56                    3329 	ld	d, (hl)
      000DFB D5                    3330 	push	de
      000DFC CDr01r08              3331 	call	_u16Clamp
      000DFF E8 06                 3332 	add	sp, #6
      000E01 F8 04                 3333 	ldhl	sp,	#4
      000E03 7B                    3334 	ld	a, e
      000E04 22                    3335 	ld	(hl+), a
      000E05 72                    3336 	ld	(hl), d
                                   3337 ;main.c:322: yOverflow = (playerY - limitedPlayerY);
      000E06 21r1Ar00              3338 	ld	hl, #_playerY
      000E09 2A                    3339 	ld	a, (hl+)
      000E0A 5F                    3340 	ld	e, a
      000E0B 56                    3341 	ld	d, (hl)
      000E0C F8 04                 3342 	ldhl	sp,	#4
      000E0E 2A                    3343 	ld	a,	(hl+)
      000E0F 66                    3344 	ld	h, (hl)
      000E10 6F                    3345 	ld	l, a
      000E11 7B                    3346 	ld	a, e
      000E12 95                    3347 	sub	a, l
      000E13 5F                    3348 	ld	e, a
      000E14 7A                    3349 	ld	a, d
      000E15 9C                    3350 	sbc	a, h
      000E16 47                    3351 	ld	b, a
      000E17 4B                    3352 	ld	c, e
      000E18 33                    3353 	inc	sp
      000E19 33                    3354 	inc	sp
      000E1A C5                    3355 	push	bc
      000E1B CB 78                 3356 	bit	7, b
      000E1D 20 21                 3357 	jr	NZ, 00118$
                                   3358 ;main.c:324: yOverflow = yOverflow >> 5;
      000E1F F8 01                 3359 	ldhl	sp,	#1
      000E21 CB 2E                 3360 	sra	(hl)
      000E23 2B                    3361 	dec	hl
      000E24 CB 1E                 3362 	rr	(hl)
      000E26 23                    3363 	inc	hl
      000E27 CB 2E                 3364 	sra	(hl)
      000E29 2B                    3365 	dec	hl
      000E2A CB 1E                 3366 	rr	(hl)
      000E2C 23                    3367 	inc	hl
      000E2D CB 2E                 3368 	sra	(hl)
      000E2F 2B                    3369 	dec	hl
      000E30 CB 1E                 3370 	rr	(hl)
      000E32 23                    3371 	inc	hl
      000E33 CB 2E                 3372 	sra	(hl)
      000E35 2B                    3373 	dec	hl
      000E36 CB 1E                 3374 	rr	(hl)
      000E38 23                    3375 	inc	hl
      000E39 CB 2E                 3376 	sra	(hl)
      000E3B 2B                    3377 	dec	hl
      000E3C CB 1E                 3378 	rr	(hl)
      000E3E 18 3B                 3379 	jr	00119$
      000E40                       3380 00118$:
                                   3381 ;main.c:327: yOverflow = -((-yOverflow) >> 5);
      000E40 11 00 00              3382 	ld	de, #0x0000
      000E43 E1                    3383 	pop	hl
      000E44 E5                    3384 	push	hl
      000E45 7B                    3385 	ld	a, e
      000E46 95                    3386 	sub	a, l
      000E47 5F                    3387 	ld	e, a
      000E48 7A                    3388 	ld	a, d
      000E49 9C                    3389 	sbc	a, h
      000E4A F8 07                 3390 	ldhl	sp,	#7
      000E4C 32                    3391 	ld	(hl-), a
      000E4D 7B                    3392 	ld	a, e
      000E4E 22                    3393 	ld	(hl+), a
      000E4F CB 2E                 3394 	sra	(hl)
      000E51 2B                    3395 	dec	hl
      000E52 CB 1E                 3396 	rr	(hl)
      000E54 23                    3397 	inc	hl
      000E55 CB 2E                 3398 	sra	(hl)
      000E57 2B                    3399 	dec	hl
      000E58 CB 1E                 3400 	rr	(hl)
      000E5A 23                    3401 	inc	hl
      000E5B CB 2E                 3402 	sra	(hl)
      000E5D 2B                    3403 	dec	hl
      000E5E CB 1E                 3404 	rr	(hl)
      000E60 23                    3405 	inc	hl
      000E61 CB 2E                 3406 	sra	(hl)
      000E63 2B                    3407 	dec	hl
      000E64 CB 1E                 3408 	rr	(hl)
      000E66 23                    3409 	inc	hl
      000E67 CB 2E                 3410 	sra	(hl)
      000E69 2B                    3411 	dec	hl
      000E6A CB 1E                 3412 	rr	(hl)
      000E6C 11 00 00              3413 	ld	de, #0x0000
      000E6F 2A                    3414 	ld	a,	(hl+)
      000E70 66                    3415 	ld	h, (hl)
      000E71 6F                    3416 	ld	l, a
      000E72 7B                    3417 	ld	a, e
      000E73 95                    3418 	sub	a, l
      000E74 5F                    3419 	ld	e, a
      000E75 7A                    3420 	ld	a, d
      000E76 9C                    3421 	sbc	a, h
      000E77 F8 01                 3422 	ldhl	sp,	#1
      000E79 32                    3423 	ld	(hl-), a
      000E7A 73                    3424 	ld	(hl), e
      000E7B                       3425 00119$:
                                   3426 ;main.c:329: bgY += yOverflow;
      000E7B 21r20r00              3427 	ld	hl, #_bgY
      000E7E 2A                    3428 	ld	a, (hl+)
      000E7F 5F                    3429 	ld	e, a
      000E80 56                    3430 	ld	d, (hl)
      000E81 E1                    3431 	pop	hl
      000E82 E5                    3432 	push	hl
      000E83 19                    3433 	add	hl, de
      000E84 5D                    3434 	ld	e, l
      000E85 54                    3435 	ld	d, h
      000E86 21r20r00              3436 	ld	hl, #_bgY
      000E89 7B                    3437 	ld	a, e
      000E8A 22                    3438 	ld	(hl+), a
      000E8B 72                    3439 	ld	(hl), d
                                   3440 ;main.c:330: playerY = limitedPlayerY;
      000E8C F8 04                 3441 	ldhl	sp,	#4
      000E8E 7E                    3442 	ld	a, (hl)
      000E8F EAr1Ar00              3443 	ld	(#_playerY),a
      000E92 F8 05                 3444 	ldhl	sp,	#5
      000E94 7E                    3445 	ld	a, (hl)
      000E95 21r1Br00              3446 	ld	hl, #_playerY + 1
                                   3447 ;main.c:331: playerDrawY=playerY >> 5;
      000E98 32                    3448 	ld	(hl-), a
      000E99 2A                    3449 	ld	a, (hl+)
      000E9A 4F                    3450 	ld	c, a
      000E9B 46                    3451 	ld	b, (hl)
      000E9C CB 38                 3452 	srl	b
      000E9E CB 19                 3453 	rr	c
      000EA0 CB 38                 3454 	srl	b
      000EA2 CB 19                 3455 	rr	c
      000EA4 CB 38                 3456 	srl	b
      000EA6 CB 19                 3457 	rr	c
      000EA8 CB 38                 3458 	srl	b
      000EAA CB 19                 3459 	rr	c
      000EAC CB 38                 3460 	srl	b
      000EAE CB 19                 3461 	rr	c
      000EB0 21r1Dr00              3462 	ld	hl, #_playerDrawY
      000EB3 71                    3463 	ld	(hl), c
      000EB4 18 05                 3464 	jr	00122$
      000EB6                       3465 00121$:
                                   3466 ;main.c:336: ySpeed = 0;
      000EB6 21r17r00              3467 	ld	hl, #_ySpeed
      000EB9 36 00                 3468 	ld	(hl), #0x00
      000EBB                       3469 00122$:
                                   3470 ;main.c:340: move_sprite(0, playerDrawX, playerDrawY);
      000EBB 21r1Dr00              3471 	ld	hl, #_playerDrawY
      000EBE 4E                    3472 	ld	c, (hl)
      000EBF 21r1Cr00              3473 	ld	hl, #_playerDrawX
      000EC2 46                    3474 	ld	b, (hl)
                                   3475 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000EC3 21r00r00              3476 	ld	hl, #_shadow_OAM
                                   3477 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000EC6 79                    3478 	ld	a, c
      000EC7 22                    3479 	ld	(hl+), a
      000EC8 70                    3480 	ld	(hl), b
                                   3481 ;main.c:343: if (bgX >= 256) {
      000EC9 21r1Er00              3482 	ld	hl, #_bgX
      000ECC 2A                    3483 	ld	a, (hl+)
      000ECD 4F                    3484 	ld	c, a
      000ECE 46                    3485 	ld	b, (hl)
      000ECF 78                    3486 	ld	a, b
      000ED0 EE 80                 3487 	xor	a, #0x80
      000ED2 D6 81                 3488 	sub	a, #0x81
      000ED4 38 0F                 3489 	jr	C, 00124$
                                   3490 ;main.c:344: bgX = bgX % 256;
      000ED6 AF                    3491 	xor	a, a
      000ED7 3C                    3492 	inc	a
      000ED8 F5                    3493 	push	af
      000ED9 C5                    3494 	push	bc
      000EDA CDr00r00              3495 	call	__modsint
      000EDD E8 04                 3496 	add	sp, #4
      000EDF 21r1Er00              3497 	ld	hl, #_bgX
      000EE2 7B                    3498 	ld	a, e
      000EE3 22                    3499 	ld	(hl+), a
      000EE4 72                    3500 	ld	(hl), d
      000EE5                       3501 00124$:
                                   3502 ;main.c:346: if (bgX < 0) {
      000EE5 FAr1Er00              3503 	ld	a, (#_bgX)
      000EE8 F8 06                 3504 	ldhl	sp,	#6
      000EEA 77                    3505 	ld	(hl), a
      000EEB FAr1Fr00              3506 	ld	a, (#_bgX + 1)
      000EEE F8 07                 3507 	ldhl	sp,	#7
      000EF0 77                    3508 	ld	(hl), a
      000EF1 CB 7E                 3509 	bit	7, (hl)
      000EF3 28 2D                 3510 	jr	Z, 00126$
                                   3511 ;main.c:347: bgX = 255 - (bgX % 256);
      000EF5 2B                    3512 	dec	hl
      000EF6 AF                    3513 	xor	a, a
      000EF7 3C                    3514 	inc	a
      000EF8 F5                    3515 	push	af
      000EF9 2A                    3516 	ld	a, (hl+)
      000EFA 5F                    3517 	ld	e, a
      000EFB 56                    3518 	ld	d, (hl)
      000EFC D5                    3519 	push	de
      000EFD CDr00r00              3520 	call	__modsint
      000F00 E8 04                 3521 	add	sp, #4
      000F02 F8 04                 3522 	ldhl	sp,	#4
      000F04 7B                    3523 	ld	a, e
      000F05 22                    3524 	ld	(hl+), a
      000F06 72                    3525 	ld	(hl), d
      000F07 11 FF 00              3526 	ld	de, #0x00ff
      000F0A F8 04                 3527 	ldhl	sp,	#4
      000F0C 2A                    3528 	ld	a,	(hl+)
      000F0D 66                    3529 	ld	h, (hl)
      000F0E 6F                    3530 	ld	l, a
      000F0F 7B                    3531 	ld	a, e
      000F10 95                    3532 	sub	a, l
      000F11 5F                    3533 	ld	e, a
      000F12 7A                    3534 	ld	a, d
      000F13 9C                    3535 	sbc	a, h
      000F14 F8 07                 3536 	ldhl	sp,	#7
      000F16 32                    3537 	ld	(hl-), a
      000F17 73                    3538 	ld	(hl), e
      000F18 7E                    3539 	ld	a, (hl)
      000F19 EAr1Er00              3540 	ld	(#_bgX),a
      000F1C F8 07                 3541 	ldhl	sp,	#7
      000F1E 7E                    3542 	ld	a, (hl)
      000F1F EAr1Fr00              3543 	ld	(#_bgX + 1),a
      000F22                       3544 00126$:
                                   3545 ;main.c:349: if (bgY >= 256) {
      000F22 21r20r00              3546 	ld	hl, #_bgY
      000F25 2A                    3547 	ld	a, (hl+)
      000F26 4F                    3548 	ld	c, a
      000F27 46                    3549 	ld	b, (hl)
      000F28 78                    3550 	ld	a, b
      000F29 EE 80                 3551 	xor	a, #0x80
      000F2B D6 81                 3552 	sub	a, #0x81
      000F2D 38 0F                 3553 	jr	C, 00128$
                                   3554 ;main.c:350: bgY = bgY % 256;
      000F2F AF                    3555 	xor	a, a
      000F30 3C                    3556 	inc	a
      000F31 F5                    3557 	push	af
      000F32 C5                    3558 	push	bc
      000F33 CDr00r00              3559 	call	__modsint
      000F36 E8 04                 3560 	add	sp, #4
      000F38 21r20r00              3561 	ld	hl, #_bgY
      000F3B 7B                    3562 	ld	a, e
      000F3C 22                    3563 	ld	(hl+), a
      000F3D 72                    3564 	ld	(hl), d
      000F3E                       3565 00128$:
                                   3566 ;main.c:352: if (bgY < 0) {
      000F3E FAr20r00              3567 	ld	a, (#_bgY)
      000F41 F8 06                 3568 	ldhl	sp,	#6
      000F43 77                    3569 	ld	(hl), a
      000F44 FAr21r00              3570 	ld	a, (#_bgY + 1)
      000F47 F8 07                 3571 	ldhl	sp,	#7
      000F49 77                    3572 	ld	(hl), a
      000F4A CB 7E                 3573 	bit	7, (hl)
      000F4C 28 2D                 3574 	jr	Z, 00130$
                                   3575 ;main.c:353: bgY = 255 - (bgY % 256);
      000F4E 2B                    3576 	dec	hl
      000F4F AF                    3577 	xor	a, a
      000F50 3C                    3578 	inc	a
      000F51 F5                    3579 	push	af
      000F52 2A                    3580 	ld	a, (hl+)
      000F53 5F                    3581 	ld	e, a
      000F54 56                    3582 	ld	d, (hl)
      000F55 D5                    3583 	push	de
      000F56 CDr00r00              3584 	call	__modsint
      000F59 E8 04                 3585 	add	sp, #4
      000F5B F8 04                 3586 	ldhl	sp,	#4
      000F5D 7B                    3587 	ld	a, e
      000F5E 22                    3588 	ld	(hl+), a
      000F5F 72                    3589 	ld	(hl), d
      000F60 11 FF 00              3590 	ld	de, #0x00ff
      000F63 F8 04                 3591 	ldhl	sp,	#4
      000F65 2A                    3592 	ld	a,	(hl+)
      000F66 66                    3593 	ld	h, (hl)
      000F67 6F                    3594 	ld	l, a
      000F68 7B                    3595 	ld	a, e
      000F69 95                    3596 	sub	a, l
      000F6A 5F                    3597 	ld	e, a
      000F6B 7A                    3598 	ld	a, d
      000F6C 9C                    3599 	sbc	a, h
      000F6D F8 07                 3600 	ldhl	sp,	#7
      000F6F 32                    3601 	ld	(hl-), a
      000F70 73                    3602 	ld	(hl), e
      000F71 7E                    3603 	ld	a, (hl)
      000F72 EAr20r00              3604 	ld	(#_bgY),a
      000F75 F8 07                 3605 	ldhl	sp,	#7
      000F77 7E                    3606 	ld	a, (hl)
      000F78 EAr21r00              3607 	ld	(#_bgY + 1),a
      000F7B                       3608 00130$:
                                   3609 ;main.c:356: move_bkg(bgX, bgY);
      000F7B 21r20r00              3610 	ld	hl, #_bgY
      000F7E 4E                    3611 	ld	c, (hl)
      000F7F FAr1Er00              3612 	ld	a, (#_bgX)
      000F82 E0r00                 3613 	ldh	(_SCX_REG + 0), a
                                   3614 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      000F84 79                    3615 	ld	a, c
      000F85 E0r00                 3616 	ldh	(_SCY_REG + 0), a
                                   3617 ;main.c:357: moveEnemiesWithBackground(xOverflow, yOverflow);
      000F87 D1                    3618 	pop	de
      000F88 D5                    3619 	push	de
      000F89 D5                    3620 	push	de
      000F8A F8 04                 3621 	ldhl	sp,	#4
      000F8C 2A                    3622 	ld	a, (hl+)
      000F8D 5F                    3623 	ld	e, a
      000F8E 56                    3624 	ld	d, (hl)
      000F8F D5                    3625 	push	de
      000F90 CDr3Dr08              3626 	call	_moveEnemiesWithBackground
      000F93 E8 04                 3627 	add	sp, #4
                                   3628 ;main.c:360: if (ySpeed > 0) ySpeed--;
      000F95 21r17r00              3629 	ld	hl, #_ySpeed
      000F98 5E                    3630 	ld	e, (hl)
      000F99 AF                    3631 	xor	a, a
      000F9A 57                    3632 	ld	d, a
      000F9B 96                    3633 	sub	a, (hl)
      000F9C CB 7B                 3634 	bit	7, e
      000F9E 28 07                 3635 	jr	Z, 00237$
      000FA0 CB 7A                 3636 	bit	7, d
      000FA2 20 08                 3637 	jr	NZ, 00238$
      000FA4 BF                    3638 	cp	a, a
      000FA5 18 05                 3639 	jr	00238$
      000FA7                       3640 00237$:
      000FA7 CB 7A                 3641 	bit	7, d
      000FA9 28 01                 3642 	jr	Z, 00238$
      000FAB 37                    3643 	scf
      000FAC                       3644 00238$:
      000FAC 30 04                 3645 	jr	NC, 00132$
      000FAE 21r17r00              3646 	ld	hl, #_ySpeed
      000FB1 35                    3647 	dec	(hl)
      000FB2                       3648 00132$:
                                   3649 ;main.c:361: if (ySpeed < 0) ySpeed++;
      000FB2 21r17r00              3650 	ld	hl, #_ySpeed
      000FB5 CB 7E                 3651 	bit	7, (hl)
      000FB7 28 01                 3652 	jr	Z, 00134$
      000FB9 34                    3653 	inc	(hl)
      000FBA                       3654 00134$:
                                   3655 ;main.c:362: if (xSpeed > 0) xSpeed--;
      000FBA 21r16r00              3656 	ld	hl, #_xSpeed
      000FBD 5E                    3657 	ld	e, (hl)
      000FBE AF                    3658 	xor	a, a
      000FBF 57                    3659 	ld	d, a
      000FC0 96                    3660 	sub	a, (hl)
      000FC1 CB 7B                 3661 	bit	7, e
      000FC3 28 07                 3662 	jr	Z, 00239$
      000FC5 CB 7A                 3663 	bit	7, d
      000FC7 20 08                 3664 	jr	NZ, 00240$
      000FC9 BF                    3665 	cp	a, a
      000FCA 18 05                 3666 	jr	00240$
      000FCC                       3667 00239$:
      000FCC CB 7A                 3668 	bit	7, d
      000FCE 28 01                 3669 	jr	Z, 00240$
      000FD0 37                    3670 	scf
      000FD1                       3671 00240$:
      000FD1 30 04                 3672 	jr	NC, 00136$
      000FD3 21r16r00              3673 	ld	hl, #_xSpeed
      000FD6 35                    3674 	dec	(hl)
      000FD7                       3675 00136$:
                                   3676 ;main.c:363: if (xSpeed < 0) xSpeed++;
      000FD7 21r16r00              3677 	ld	hl, #_xSpeed
      000FDA CB 7E                 3678 	bit	7, (hl)
      000FDC 28 01                 3679 	jr	Z, 00141$
      000FDE 34                    3680 	inc	(hl)
      000FDF                       3681 00141$:
                                   3682 ;main.c:367: }
      000FDF E8 08                 3683 	add	sp, #8
      000FE1 C9                    3684 	ret
                                   3685 ;main.c:369: void takeDamage(int16_t amount) {
                                   3686 ;	---------------------------------
                                   3687 ; Function takeDamage
                                   3688 ; ---------------------------------
      000FE2                       3689 _takeDamage::
      000FE2 3B                    3690 	dec	sp
                                   3691 ;main.c:370: if (amount > shield) {
      000FE3 FAr39r00              3692 	ld	a, (#_shield)
      000FE6 4F                    3693 	ld	c, a
      000FE7 07                    3694 	rlca
      000FE8 9F                    3695 	sbc	a, a
      000FE9 47                    3696 	ld	b, a
                                   3697 ;main.c:372: hull -= (amount - shield);
      000FEA F8 03                 3698 	ldhl	sp,	#3
      000FEC 7E                    3699 	ld	a, (hl)
      000FED F8 00                 3700 	ldhl	sp,	#0
      000FEF 77                    3701 	ld	(hl), a
                                   3702 ;main.c:370: if (amount > shield) {
      000FF0 F8 03                 3703 	ldhl	sp,	#3
      000FF2 79                    3704 	ld	a, c
      000FF3 96                    3705 	sub	a, (hl)
      000FF4 23                    3706 	inc	hl
      000FF5 78                    3707 	ld	a, b
      000FF6 9E                    3708 	sbc	a, (hl)
      000FF7 78                    3709 	ld	a, b
      000FF8 57                    3710 	ld	d, a
      000FF9 CB 7E                 3711 	bit	7, (hl)
      000FFB 28 07                 3712 	jr	Z, 00111$
      000FFD CB 7A                 3713 	bit	7, d
      000FFF 20 08                 3714 	jr	NZ, 00112$
      001001 BF                    3715 	cp	a, a
      001002 18 05                 3716 	jr	00112$
      001004                       3717 00111$:
      001004 CB 7A                 3718 	bit	7, d
      001006 28 01                 3719 	jr	Z, 00112$
      001008 37                    3720 	scf
      001009                       3721 00112$:
      001009 30 10                 3722 	jr	NC, 00102$
                                   3723 ;main.c:371: shield = 0;
      00100B 21r39r00              3724 	ld	hl, #_shield
      00100E 36 00                 3725 	ld	(hl), #0x00
                                   3726 ;main.c:372: hull -= (amount - shield);
      001010 FAr38r00              3727 	ld	a, (#_hull)
      001013 F8 00                 3728 	ldhl	sp,	#0
      001015 96                    3729 	sub	a, (hl)
      001016 EAr38r00              3730 	ld	(#_hull),a
      001019 18 09                 3731 	jr	00104$
      00101B                       3732 00102$:
                                   3733 ;main.c:375: shield -= amount;
      00101B FAr39r00              3734 	ld	a, (#_shield)
      00101E F8 00                 3735 	ldhl	sp,	#0
      001020 96                    3736 	sub	a, (hl)
      001021 EAr39r00              3737 	ld	(#_shield),a
      001024                       3738 00104$:
                                   3739 ;main.c:377: }
      001024 33                    3740 	inc	sp
      001025 C9                    3741 	ret
                                   3742 ;main.c:379: void checkCollision() {
                                   3743 ;	---------------------------------
                                   3744 ; Function checkCollision
                                   3745 ; ---------------------------------
      001026                       3746 _checkCollision::
      001026 E8 F2                 3747 	add	sp, #-14
                                   3748 ;main.c:382: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001028 F8 0D                 3749 	ldhl	sp,	#13
      00102A 36 00                 3750 	ld	(hl), #0x00
      00102C                       3751 00112$:
      00102C 21r09r05              3752 	ld	hl, #_ENEMYCOUNT
      00102F 4E                    3753 	ld	c, (hl)
      001030 F8 0D                 3754 	ldhl	sp,	#13
      001032 7E                    3755 	ld	a, (hl)
      001033 91                    3756 	sub	a, c
      001034 D2rA1r11              3757 	jp	NC, 00114$
                                   3758 ;main.c:383: if (enemies[i].visible && enemies[i].alive) {
      001037 4E                    3759 	ld	c, (hl)
      001038 06 00                 3760 	ld	b, #0x00
      00103A 69                    3761 	ld	l, c
      00103B 60                    3762 	ld	h, b
      00103C 29                    3763 	add	hl, hl
      00103D 29                    3764 	add	hl, hl
      00103E 09                    3765 	add	hl, bc
      00103F 29                    3766 	add	hl, hl
      001040 09                    3767 	add	hl, bc
      001041 01r00r00              3768 	ld	bc,#_enemies
      001044 09                    3769 	add	hl,bc
      001045 33                    3770 	inc	sp
      001046 33                    3771 	inc	sp
      001047 5D                    3772 	ld	e, l
      001048 54                    3773 	ld	d, h
      001049 D5                    3774 	push	de
      00104A 21 09 00              3775 	ld	hl, #0x0009
      00104D 19                    3776 	add	hl, de
      00104E 4D                    3777 	ld	c, l
      00104F 44                    3778 	ld	b, h
      001050 0A                    3779 	ld	a, (bc)
      001051 F8 0C                 3780 	ldhl	sp,	#12
      001053 77                    3781 	ld	(hl), a
      001054 7E                    3782 	ld	a, (hl)
      001055 B7                    3783 	or	a, a
      001056 CAr9Br11              3784 	jp	Z, 00113$
      001059 D1                    3785 	pop	de
      00105A D5                    3786 	push	de
      00105B 21 08 00              3787 	ld	hl, #0x0008
      00105E 19                    3788 	add	hl, de
      00105F E5                    3789 	push	hl
      001060 7D                    3790 	ld	a, l
      001061 F8 04                 3791 	ldhl	sp,	#4
      001063 77                    3792 	ld	(hl), a
      001064 E1                    3793 	pop	hl
      001065 7C                    3794 	ld	a, h
      001066 F8 03                 3795 	ldhl	sp,	#3
      001068 32                    3796 	ld	(hl-), a
      001069 2A                    3797 	ld	a, (hl+)
      00106A 5F                    3798 	ld	e, a
      00106B 56                    3799 	ld	d, (hl)
      00106C 1A                    3800 	ld	a, (de)
      00106D B7                    3801 	or	a, a
      00106E CAr9Br11              3802 	jp	Z, 00113$
                                   3803 ;main.c:384: uint8_t x = enemies[i].x;
                                   3804 ;main.c:385: uint8_t y = enemies[i].y;
      001071 23                    3805 	inc	hl
      001072 D1                    3806 	pop	de
      001073 D5                    3807 	push	de
      001074 1A                    3808 	ld	a, (de)
      001075 4F                    3809 	ld	c, a
      001076 D1                    3810 	pop	de
      001077 D5                    3811 	push	de
      001078 13                    3812 	inc	de
      001079 13                    3813 	inc	de
      00107A 1A                    3814 	ld	a, (de)
      00107B 77                    3815 	ld	(hl), a
                                   3816 ;main.c:387: if (x > playerDrawX - PLAYERSIZE && x - (8>>(enemies[i].spriteCount-1)) < playerDrawX
      00107C FAr1Cr00              3817 	ld	a, (#_playerDrawX)
      00107F F8 0B                 3818 	ldhl	sp,	#11
      001081 22                    3819 	ld	(hl+), a
      001082 36 00                 3820 	ld	(hl), #0x00
      001084 FAr13r00              3821 	ld	a, (#_PLAYERSIZE)
      001087 F8 05                 3822 	ldhl	sp,	#5
      001089 22                    3823 	ld	(hl+), a
      00108A 36 00                 3824 	ld	(hl), #0x00
      00108C F8 0B                 3825 	ldhl	sp,#11
      00108E 2A                    3826 	ld	a, (hl+)
      00108F 5F                    3827 	ld	e, a
      001090 56                    3828 	ld	d, (hl)
      001091 F8 05                 3829 	ldhl	sp,	#5
      001093 2A                    3830 	ld	a,	(hl+)
      001094 66                    3831 	ld	h, (hl)
      001095 6F                    3832 	ld	l, a
      001096 7B                    3833 	ld	a, e
      001097 95                    3834 	sub	a, l
      001098 5F                    3835 	ld	e, a
      001099 7A                    3836 	ld	a, d
      00109A 9C                    3837 	sbc	a, h
      00109B F8 0A                 3838 	ldhl	sp,	#10
      00109D 32                    3839 	ld	(hl-), a
      00109E 73                    3840 	ld	(hl), e
      00109F 06 00                 3841 	ld	b, #0x00
      0010A1 2A                    3842 	ld	a, (hl+)
      0010A2 91                    3843 	sub	a, c
      0010A3 7E                    3844 	ld	a, (hl)
      0010A4 98                    3845 	sbc	a, b
      0010A5 56                    3846 	ld	d, (hl)
      0010A6 78                    3847 	ld	a, b
      0010A7 CB 7F                 3848 	bit	7,a
      0010A9 28 07                 3849 	jr	Z, 00157$
      0010AB CB 7A                 3850 	bit	7, d
      0010AD 20 08                 3851 	jr	NZ, 00158$
      0010AF BF                    3852 	cp	a, a
      0010B0 18 05                 3853 	jr	00158$
      0010B2                       3854 00157$:
      0010B2 CB 7A                 3855 	bit	7, d
      0010B4 28 01                 3856 	jr	Z, 00158$
      0010B6 37                    3857 	scf
      0010B7                       3858 00158$:
      0010B7 D2r9Br11              3859 	jp	NC, 00113$
      0010BA D1                    3860 	pop	de
      0010BB D5                    3861 	push	de
      0010BC 21 06 00              3862 	ld	hl, #0x0006
      0010BF 19                    3863 	add	hl, de
      0010C0 5D                    3864 	ld	e, l
      0010C1 54                    3865 	ld	d, h
      0010C2 1A                    3866 	ld	a, (de)
      0010C3 5F                    3867 	ld	e, a
      0010C4 1D                    3868 	dec	e
      0010C5 F8 07                 3869 	ldhl	sp,	#7
      0010C7 3E 08                 3870 	ld	a, #0x08
      0010C9 22                    3871 	ld	(hl+), a
      0010CA AF                    3872 	xor	a, a
      0010CB 77                    3873 	ld	(hl), a
      0010CC 1C                    3874 	inc	e
      0010CD 18 07                 3875 	jr	00160$
      0010CF                       3876 00159$:
      0010CF F8 08                 3877 	ldhl	sp,	#8
      0010D1 CB 2E                 3878 	sra	(hl)
      0010D3 2B                    3879 	dec	hl
      0010D4 CB 1E                 3880 	rr	(hl)
      0010D6                       3881 00160$:
      0010D6 1D                    3882 	dec	e
      0010D7 20 F6                 3883 	jr	NZ, 00159$
      0010D9 F8 07                 3884 	ldhl	sp,#7
      0010DB 2A                    3885 	ld	a, (hl+)
      0010DC 5F                    3886 	ld	e, a
      0010DD 56                    3887 	ld	d, (hl)
      0010DE 79                    3888 	ld	a, c
      0010DF 93                    3889 	sub	a, e
      0010E0 5F                    3890 	ld	e, a
      0010E1 78                    3891 	ld	a, b
      0010E2 9A                    3892 	sbc	a, d
      0010E3 47                    3893 	ld	b, a
      0010E4 4B                    3894 	ld	c, e
      0010E5 F8 0B                 3895 	ldhl	sp,	#11
      0010E7 79                    3896 	ld	a, c
      0010E8 96                    3897 	sub	a, (hl)
      0010E9 23                    3898 	inc	hl
      0010EA 78                    3899 	ld	a, b
      0010EB 9E                    3900 	sbc	a, (hl)
      0010EC 78                    3901 	ld	a, b
      0010ED 57                    3902 	ld	d, a
      0010EE CB 7E                 3903 	bit	7, (hl)
      0010F0 28 07                 3904 	jr	Z, 00161$
      0010F2 CB 7A                 3905 	bit	7, d
      0010F4 20 08                 3906 	jr	NZ, 00162$
      0010F6 BF                    3907 	cp	a, a
      0010F7 18 05                 3908 	jr	00162$
      0010F9                       3909 00161$:
      0010F9 CB 7A                 3910 	bit	7, d
      0010FB 28 01                 3911 	jr	Z, 00162$
      0010FD 37                    3912 	scf
      0010FE                       3913 00162$:
      0010FE D2r9Br11              3914 	jp	NC, 00113$
                                   3915 ;main.c:388: && y > playerDrawY - PLAYERSIZE && y -(8>>(enemies[i].spriteCount-1)) < playerDrawY ) 
      001101 FAr1Dr00              3916 	ld	a, (#_playerDrawY)
      001104 F8 09                 3917 	ldhl	sp,	#9
      001106 22                    3918 	ld	(hl+), a
      001107 AF                    3919 	xor	a, a
      001108 32                    3920 	ld	(hl-), a
      001109 2A                    3921 	ld	a, (hl+)
      00110A 5F                    3922 	ld	e, a
      00110B 56                    3923 	ld	d, (hl)
      00110C F8 05                 3924 	ldhl	sp,	#5
      00110E 2A                    3925 	ld	a,	(hl+)
      00110F 66                    3926 	ld	h, (hl)
      001110 6F                    3927 	ld	l, a
      001111 7B                    3928 	ld	a, e
      001112 95                    3929 	sub	a, l
      001113 5F                    3930 	ld	e, a
      001114 7A                    3931 	ld	a, d
      001115 9C                    3932 	sbc	a, h
      001116 F8 0C                 3933 	ldhl	sp,	#12
      001118 32                    3934 	ld	(hl-), a
      001119 73                    3935 	ld	(hl), e
      00111A F8 04                 3936 	ldhl	sp,	#4
      00111C 4E                    3937 	ld	c, (hl)
      00111D 06 00                 3938 	ld	b, #0x00
      00111F F8 0B                 3939 	ldhl	sp,	#11
      001121 2A                    3940 	ld	a, (hl+)
      001122 91                    3941 	sub	a, c
      001123 7E                    3942 	ld	a, (hl)
      001124 98                    3943 	sbc	a, b
      001125 56                    3944 	ld	d, (hl)
      001126 78                    3945 	ld	a, b
      001127 CB 7F                 3946 	bit	7,a
      001129 28 07                 3947 	jr	Z, 00163$
      00112B CB 7A                 3948 	bit	7, d
      00112D 20 08                 3949 	jr	NZ, 00164$
      00112F BF                    3950 	cp	a, a
      001130 18 05                 3951 	jr	00164$
      001132                       3952 00163$:
      001132 CB 7A                 3953 	bit	7, d
      001134 28 01                 3954 	jr	Z, 00164$
      001136 37                    3955 	scf
      001137                       3956 00164$:
      001137 30 62                 3957 	jr	NC, 00113$
      001139 F8 07                 3958 	ldhl	sp,#7
      00113B 2A                    3959 	ld	a, (hl+)
      00113C 5F                    3960 	ld	e, a
      00113D 2A                    3961 	ld	a, (hl+)
      00113E 57                    3962 	ld	d, a
      00113F 79                    3963 	ld	a, c
      001140 93                    3964 	sub	a, e
      001141 5F                    3965 	ld	e, a
      001142 78                    3966 	ld	a, b
      001143 9A                    3967 	sbc	a, d
      001144 47                    3968 	ld	b, a
      001145 7B                    3969 	ld	a, e
      001146 96                    3970 	sub	a, (hl)
      001147 23                    3971 	inc	hl
      001148 78                    3972 	ld	a, b
      001149 9E                    3973 	sbc	a, (hl)
      00114A 78                    3974 	ld	a, b
      00114B 57                    3975 	ld	d, a
      00114C CB 7E                 3976 	bit	7, (hl)
      00114E 28 07                 3977 	jr	Z, 00165$
      001150 CB 7A                 3978 	bit	7, d
      001152 20 08                 3979 	jr	NZ, 00166$
      001154 BF                    3980 	cp	a, a
      001155 18 05                 3981 	jr	00166$
      001157                       3982 00165$:
      001157 CB 7A                 3983 	bit	7, d
      001159 28 01                 3984 	jr	Z, 00166$
      00115B 37                    3985 	scf
      00115C                       3986 00166$:
      00115C 30 3D                 3987 	jr	NC, 00113$
                                   3988 ;main.c:390: set_sprite_tile(10+i, EMPTYSPRITE);
      00115E 21r08r05              3989 	ld	hl, #_EMPTYSPRITE
      001161 4E                    3990 	ld	c, (hl)
      001162 F8 0D                 3991 	ldhl	sp,	#13
      001164 7E                    3992 	ld	a, (hl)
      001165 C6 0A                 3993 	add	a, #0x0a
                                   3994 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001167 6F                    3995 	ld	l, a
                                   3996 ;	spillPairReg hl
                                   3997 ;	spillPairReg hl
      001168 26 00                 3998 	ld	h, #0x00
                                   3999 ;	spillPairReg hl
                                   4000 ;	spillPairReg hl
      00116A 29                    4001 	add	hl, hl
      00116B 29                    4002 	add	hl, hl
      00116C 11r00r00              4003 	ld	de, #_shadow_OAM
      00116F 19                    4004 	add	hl, de
      001170 23                    4005 	inc	hl
      001171 23                    4006 	inc	hl
      001172 71                    4007 	ld	(hl), c
                                   4008 ;main.c:391: enemies[i].alive = 0;
      001173 F8 02                 4009 	ldhl	sp,	#2
      001175 2A                    4010 	ld	a,	(hl+)
      001176 66                    4011 	ld	h, (hl)
      001177 6F                    4012 	ld	l, a
      001178 36 00                 4013 	ld	(hl), #0x00
                                   4014 ;main.c:392: takeDamage(enemies[i].damage);
      00117A D1                    4015 	pop	de
      00117B D5                    4016 	push	de
      00117C 21 0A 00              4017 	ld	hl, #0x000a
      00117F 19                    4018 	add	hl, de
      001180 E5                    4019 	push	hl
      001181 7D                    4020 	ld	a, l
      001182 F8 0D                 4021 	ldhl	sp,	#13
      001184 77                    4022 	ld	(hl), a
      001185 E1                    4023 	pop	hl
      001186 7C                    4024 	ld	a, h
      001187 F8 0C                 4025 	ldhl	sp,	#12
      001189 32                    4026 	ld	(hl-), a
      00118A 2A                    4027 	ld	a, (hl+)
      00118B 5F                    4028 	ld	e, a
      00118C 56                    4029 	ld	d, (hl)
      00118D 1A                    4030 	ld	a, (de)
      00118E 77                    4031 	ld	(hl), a
      00118F 3A                    4032 	ld	a, (hl-)
      001190 22                    4033 	ld	(hl+), a
      001191 AF                    4034 	xor	a, a
      001192 32                    4035 	ld	(hl-), a
      001193 2A                    4036 	ld	a, (hl+)
      001194 5F                    4037 	ld	e, a
      001195 56                    4038 	ld	d, (hl)
      001196 D5                    4039 	push	de
      001197 CDrE2r0F              4040 	call	_takeDamage
      00119A E1                    4041 	pop	hl
      00119B                       4042 00113$:
                                   4043 ;main.c:382: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00119B F8 0D                 4044 	ldhl	sp,	#13
      00119D 34                    4045 	inc	(hl)
      00119E C3r2Cr10              4046 	jp	00112$
      0011A1                       4047 00114$:
                                   4048 ;main.c:399: }
      0011A1 E8 0E                 4049 	add	sp, #14
      0011A3 C9                    4050 	ret
                                   4051 ;main.c:402: void updateShieldsAndHull() {
                                   4052 ;	---------------------------------
                                   4053 ; Function updateShieldsAndHull
                                   4054 ; ---------------------------------
      0011A4                       4055 _updateShieldsAndHull::
                                   4056 ;main.c:403: if (shield < maxShield) {
      0011A4 21r23r00              4057 	ld	hl, #_maxShield
      0011A7 5E                    4058 	ld	e, (hl)
      0011A8 FAr39r00              4059 	ld	a, (#_shield)
      0011AB 57                    4060 	ld	d,a
      0011AC 21r23r00              4061 	ld	hl, #_maxShield
      0011AF 96                    4062 	sub	a, (hl)
      0011B0 CB 7B                 4063 	bit	7, e
      0011B2 28 07                 4064 	jr	Z, 00110$
      0011B4 CB 7A                 4065 	bit	7, d
      0011B6 20 08                 4066 	jr	NZ, 00111$
      0011B8 BF                    4067 	cp	a, a
      0011B9 18 05                 4068 	jr	00111$
      0011BB                       4069 00110$:
      0011BB CB 7A                 4070 	bit	7, d
      0011BD 28 01                 4071 	jr	Z, 00111$
      0011BF 37                    4072 	scf
      0011C0                       4073 00111$:
      0011C0 30 04                 4074 	jr	NC, 00102$
                                   4075 ;main.c:404: shield += 1;
      0011C2 21r39r00              4076 	ld	hl, #_shield
      0011C5 34                    4077 	inc	(hl)
      0011C6                       4078 00102$:
                                   4079 ;main.c:406: setHealthBar(0, hull);
      0011C6 FAr38r00              4080 	ld	a, (#_hull)
      0011C9 67                    4081 	ld	h, a
      0011CA 2E 00                 4082 	ld	l, #0x00
      0011CC E5                    4083 	push	hl
      0011CD CDr0Ar05              4084 	call	_setHealthBar
      0011D0 E1                    4085 	pop	hl
                                   4086 ;main.c:407: setHealthBar(1, shield);
      0011D1 FAr39r00              4087 	ld	a, (#_shield)
      0011D4 67                    4088 	ld	h, a
      0011D5 2E 01                 4089 	ld	l, #0x01
      0011D7 E5                    4090 	push	hl
      0011D8 CDr0Ar05              4091 	call	_setHealthBar
      0011DB E1                    4092 	pop	hl
                                   4093 ;main.c:408: }
      0011DC C9                    4094 	ret
                                   4095 ;main.c:410: void initGame() {
                                   4096 ;	---------------------------------
                                   4097 ; Function initGame
                                   4098 ; ---------------------------------
      0011DD                       4099 _initGame::
                                   4100 ;main.c:413: xDir = 0;
      0011DD 21r14r00              4101 	ld	hl, #_xDir
      0011E0 36 00                 4102 	ld	(hl), #0x00
                                   4103 ;main.c:414: yDir = 0;
      0011E2 21r15r00              4104 	ld	hl, #_yDir
      0011E5 36 00                 4105 	ld	(hl), #0x00
                                   4106 ;main.c:415: xSpeed = 0;
      0011E7 21r16r00              4107 	ld	hl, #_xSpeed
      0011EA 36 00                 4108 	ld	(hl), #0x00
                                   4109 ;main.c:416: ySpeed = 0;
      0011EC 21r17r00              4110 	ld	hl, #_ySpeed
      0011EF 36 00                 4111 	ld	(hl), #0x00
                                   4112 ;main.c:419: playerX = 80<<5;
      0011F1 21r18r00              4113 	ld	hl, #_playerX
      0011F4 36 00                 4114 	ld	(hl), #0x00
      0011F6 23                    4115 	inc	hl
      0011F7 36 0A                 4116 	ld	(hl), #0x0a
                                   4117 ;main.c:420: playerY = 80<<5;
      0011F9 21r1Ar00              4118 	ld	hl, #_playerY
      0011FC 36 00                 4119 	ld	(hl), #0x00
      0011FE 23                    4120 	inc	hl
      0011FF 36 0A                 4121 	ld	(hl), #0x0a
                                   4122 ;main.c:422: playerDrawX = 80;
      001201 21r1Cr00              4123 	ld	hl, #_playerDrawX
      001204 36 50                 4124 	ld	(hl), #0x50
                                   4125 ;main.c:423: playerDrawY = 80;
      001206 21r1Dr00              4126 	ld	hl, #_playerDrawY
      001209 36 50                 4127 	ld	(hl), #0x50
                                   4128 ;main.c:426: bgX = 0;
      00120B AF                    4129 	xor	a, a
      00120C 21r1Er00              4130 	ld	hl, #_bgX
      00120F 22                    4131 	ld	(hl+), a
      001210 77                    4132 	ld	(hl), a
                                   4133 ;main.c:427: bgY = 0;
      001211 AF                    4134 	xor	a, a
      001212 21r20r00              4135 	ld	hl, #_bgY
      001215 22                    4136 	ld	(hl+), a
      001216 77                    4137 	ld	(hl), a
                                   4138 ;main.c:429: hull = maxHull;
      001217 FAr22r00              4139 	ld	a, (#_maxHull)
      00121A EAr38r00              4140 	ld	(#_hull),a
                                   4141 ;main.c:430: shield = maxShield;
      00121D FAr23r00              4142 	ld	a, (#_maxShield)
      001220 EAr39r00              4143 	ld	(#_shield),a
                                   4144 ;main.c:432: DISPLAY_ON;
      001223 F0r00                 4145 	ldh	a, (_LCDC_REG + 0)
      001225 F6 80                 4146 	or	a, #0x80
      001227 E0r00                 4147 	ldh	(_LCDC_REG + 0), a
                                   4148 ;main.c:433: SPRITES_8x8;
      001229 F0r00                 4149 	ldh	a, (_LCDC_REG + 0)
      00122B E6 FB                 4150 	and	a, #0xfb
      00122D E0r00                 4151 	ldh	(_LCDC_REG + 0), a
                                   4152 ;main.c:434: set_sprite_data(0, 8, cross);
      00122F 11r07r00              4153 	ld	de, #_cross
      001232 D5                    4154 	push	de
      001233 21 00 08              4155 	ld	hl, #0x800
      001236 E5                    4156 	push	hl
      001237 CDr00r00              4157 	call	_set_sprite_data
      00123A E8 04                 4158 	add	sp, #4
                                   4159 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00123C 21r02r00              4160 	ld	hl, #(_shadow_OAM + 2)
      00123F 36 00                 4161 	ld	(hl), #0x00
                                   4162 ;main.c:437: SHOW_SPRITES;
      001241 F0r00                 4163 	ldh	a, (_LCDC_REG + 0)
      001243 F6 02                 4164 	or	a, #0x02
      001245 E0r00                 4165 	ldh	(_LCDC_REG + 0), a
                                   4166 ;main.c:441: font_init();
      001247 CDr00r00              4167 	call	_font_init
                                   4168 ;main.c:442: min_font = font_load(font_min); // 36 tiles of characters
      00124A 11r00r00              4169 	ld	de, #_font_min
      00124D D5                    4170 	push	de
      00124E CDr00r00              4171 	call	_font_load
      001251 E1                    4172 	pop	hl
      001252 21r3Ar00              4173 	ld	hl, #_min_font
      001255 7B                    4174 	ld	a, e
      001256 22                    4175 	ld	(hl+), a
                                   4176 ;main.c:443: font_set(min_font);
      001257 7A                    4177 	ld	a, d
      001258 32                    4178 	ld	(hl-), a
      001259 2A                    4179 	ld	a, (hl+)
      00125A 5F                    4180 	ld	e, a
      00125B 56                    4181 	ld	d, (hl)
      00125C D5                    4182 	push	de
      00125D CDr00r00              4183 	call	_font_set
      001260 E1                    4184 	pop	hl
                                   4185 ;main.c:444: set_win_tiles(1,0,4,1,hullabel);
      001261 11r00r00              4186 	ld	de, #_hullabel
      001264 D5                    4187 	push	de
      001265 21 04 01              4188 	ld	hl, #0x104
      001268 E5                    4189 	push	hl
      001269 21 01 00              4190 	ld	hl, #0x01
      00126C E5                    4191 	push	hl
      00126D CDr00r00              4192 	call	_set_win_tiles
      001270 E8 06                 4193 	add	sp, #6
                                   4194 ;main.c:445: set_win_tiles(1,1,5,1,shieldlabel);
      001272 11r04r00              4195 	ld	de, #_shieldlabel
      001275 D5                    4196 	push	de
      001276 21 05 01              4197 	ld	hl, #0x105
      001279 E5                    4198 	push	hl
      00127A 21 01 01              4199 	ld	hl, #0x101
      00127D E5                    4200 	push	hl
      00127E CDr00r00              4201 	call	_set_win_tiles
      001281 E8 06                 4202 	add	sp, #6
                                   4203 ;main.c:450: set_bkg_data(0x50,1,healthblock);
      001283 11rE7r04              4204 	ld	de, #_healthblock
      001286 D5                    4205 	push	de
      001287 21 50 01              4206 	ld	hl, #0x150
      00128A E5                    4207 	push	hl
      00128B CDr00r00              4208 	call	_set_bkg_data
      00128E E8 04                 4209 	add	sp, #4
                                   4210 ;main.c:452: setHealthBar(0, hull);
      001290 FAr38r00              4211 	ld	a, (#_hull)
      001293 67                    4212 	ld	h, a
      001294 2E 00                 4213 	ld	l, #0x00
      001296 E5                    4214 	push	hl
      001297 CDr0Ar05              4215 	call	_setHealthBar
      00129A E1                    4216 	pop	hl
                                   4217 ;main.c:453: setHealthBar(1, shield);
      00129B FAr39r00              4218 	ld	a, (#_shield)
      00129E 67                    4219 	ld	h, a
      00129F 2E 01                 4220 	ld	l, #0x01
      0012A1 E5                    4221 	push	hl
      0012A2 CDr0Ar05              4222 	call	_setHealthBar
      0012A5 E1                    4223 	pop	hl
                                   4224 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      0012A6 3E 07                 4225 	ld	a, #0x07
      0012A8 E0r00                 4226 	ldh	(_WX_REG + 0), a
      0012AA 3E 7C                 4227 	ld	a, #0x7c
      0012AC E0r00                 4228 	ldh	(_WY_REG + 0), a
                                   4229 ;main.c:456: SHOW_WIN;;
      0012AE F0r00                 4230 	ldh	a, (_LCDC_REG + 0)
      0012B0 F6 20                 4231 	or	a, #0x20
      0012B2 E0r00                 4232 	ldh	(_LCDC_REG + 0), a
                                   4233 ;main.c:461: set_bkg_data(0x25, 6, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      0012B4 11r87r04              4234 	ld	de, #_backgroundtiles
      0012B7 D5                    4235 	push	de
      0012B8 21 25 06              4236 	ld	hl, #0x625
      0012BB E5                    4237 	push	hl
      0012BC CDr00r00              4238 	call	_set_bkg_data
      0012BF E8 04                 4239 	add	sp, #4
                                   4240 ;main.c:462: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      0012C1 11r87r00              4241 	ld	de, #_background1
      0012C4 D5                    4242 	push	de
      0012C5 21 20 20              4243 	ld	hl, #0x2020
      0012C8 E5                    4244 	push	hl
      0012C9 AF                    4245 	xor	a, a
      0012CA 0F                    4246 	rrca
      0012CB F5                    4247 	push	af
      0012CC CDr00r00              4248 	call	_set_bkg_tiles
      0012CF E8 06                 4249 	add	sp, #6
                                   4250 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      0012D1 AF                    4251 	xor	a, a
      0012D2 E0r00                 4252 	ldh	(_SCX_REG + 0), a
      0012D4 AF                    4253 	xor	a, a
      0012D5 E0r00                 4254 	ldh	(_SCY_REG + 0), a
                                   4255 ;main.c:464: SHOW_BKG;
      0012D7 F0r00                 4256 	ldh	a, (_LCDC_REG + 0)
      0012D9 F6 01                 4257 	or	a, #0x01
      0012DB E0r00                 4258 	ldh	(_LCDC_REG + 0), a
                                   4259 ;main.c:470: }
      0012DD C9                    4260 	ret
                                   4261 ;main.c:472: void main(){
                                   4262 ;	---------------------------------
                                   4263 ; Function main
                                   4264 ; ---------------------------------
      0012DE                       4265 _main::
                                   4266 ;main.c:483: printf("PRESS A TO START");
      0012DE 11r28r13              4267 	ld	de, #___str_0
      0012E1 D5                    4268 	push	de
      0012E2 CDr00r00              4269 	call	_printf
      0012E5 E1                    4270 	pop	hl
                                   4271 ;main.c:484: waitpad(J_A);
      0012E6 3E 10                 4272 	ld	a, #0x10
      0012E8 F5                    4273 	push	af
      0012E9 33                    4274 	inc	sp
      0012EA CDr00r00              4275 	call	_waitpad
      0012ED 33                    4276 	inc	sp
                                   4277 ;main.c:485: uint16_t seed = LY_REG;
      0012EE F0r00                 4278 	ldh	a, (_LY_REG + 0)
      0012F0 4F                    4279 	ld	c, a
      0012F1 06 00                 4280 	ld	b, #0x00
                                   4281 ;main.c:486: seed |= (uint16_t)DIV_REG << 8;
      0012F3 F0r00                 4282 	ldh	a, (_DIV_REG + 0)
      0012F5 5F                    4283 	ld	e, a
      0012F6 AF                    4284 	xor	a, a
      0012F7 B1                    4285 	or	a, c
      0012F8 4F                    4286 	ld	c, a
      0012F9 7B                    4287 	ld	a, e
      0012FA B0                    4288 	or	a, b
      0012FB 47                    4289 	ld	b, a
                                   4290 ;main.c:487: initrand(seed);
      0012FC C5                    4291 	push	bc
      0012FD CDr00r00              4292 	call	_initrand
      001300 E1                    4293 	pop	hl
                                   4294 ;main.c:492: initGame();
      001301 CDrDDr11              4295 	call	_initGame
                                   4296 ;main.c:493: initEnemies();
      001304 CDr99r0A              4297 	call	_initEnemies
                                   4298 ;main.c:495: while(1) {
      001307                       4299 00102$:
                                   4300 ;main.c:496: joydata = joypad(); // query for button states
      001307 CDr00r00              4301 	call	_joypad
      00130A 21r37r00              4302 	ld	hl, #_joydata
      00130D 73                    4303 	ld	(hl), e
                                   4304 ;main.c:498: updateDirection(); // set player direction
      00130E CDr1Br06              4305 	call	_updateDirection
                                   4306 ;main.c:501: move(); 
      001311 CDr64r0B              4307 	call	_move
                                   4308 ;main.c:503: updateEnemyPositions();
      001314 CDrA7r08              4309 	call	_updateEnemyPositions
                                   4310 ;main.c:506: checkCollision(); 
      001317 CDr26r10              4311 	call	_checkCollision
                                   4312 ;main.c:508: updateShieldsAndHull();
      00131A CDrA4r11              4313 	call	_updateShieldsAndHull
                                   4314 ;main.c:510: SHOW_WIN;	
      00131D F0r00                 4315 	ldh	a, (_LCDC_REG + 0)
      00131F F6 20                 4316 	or	a, #0x20
      001321 E0r00                 4317 	ldh	(_LCDC_REG + 0), a
                                   4318 ;main.c:511: wait_vbl_done(); // Idle until next frame
      001323 CDr00r00              4319 	call	_wait_vbl_done
                                   4320 ;main.c:516: }
      001326 18 DF                 4321 	jr	00102$
      001328                       4322 ___str_0:
      001328 50 52 45 53 53 20 41  4323 	.ascii "PRESS A TO START"
             20 54 4F 20 53 54 41
             52 54
      001338 00                    4324 	.db 0x00
                                   4325 	.area _CODE
                                   4326 	.area _INITIALIZER
      000000                       4327 __xinit__hullabel:
      000000 12                    4328 	.db #0x12	; 18
      000001 1F                    4329 	.db #0x1f	; 31
      000002 16                    4330 	.db #0x16	; 22
      000003 16                    4331 	.db #0x16	; 22
      000004                       4332 __xinit__shieldlabel:
      000004 1D                    4333 	.db #0x1d	; 29
      000005 12                    4334 	.db #0x12	; 18
      000006 16                    4335 	.db #0x16	; 22
      000007 0E                    4336 	.db #0x0e	; 14
      000008                       4337 __xinit__blob:
      000008 0A 00                 4338 	.dw #0x000a
      00000A 0A 00                 4339 	.dw #0x000a
      00000C 00                    4340 	.db #0x00	; 0
      00000D 00                    4341 	.db #0x00	; 0
      00000E 01 00                 4342 	.dw #0x0001
      000010 01                    4343 	.db #0x01	; 1
      000011 00                    4344 	.db #0x00	; 0
      000012 00                    4345 	.db #0x00	; 0
      000013                       4346 __xinit__PLAYERSIZE:
      000013 08                    4347 	.db #0x08	; 8
      000014                       4348 __xinit__xDir:
      000014 00                    4349 	.db #0x00	;  0
      000015                       4350 __xinit__yDir:
      000015 00                    4351 	.db #0x00	;  0
      000016                       4352 __xinit__xSpeed:
      000016 00                    4353 	.db #0x00	;  0
      000017                       4354 __xinit__ySpeed:
      000017 00                    4355 	.db #0x00	;  0
      000018                       4356 __xinit__playerX:
      000018 00 0A                 4357 	.dw #0x0a00
      00001A                       4358 __xinit__playerY:
      00001A 00 0A                 4359 	.dw #0x0a00
      00001C                       4360 __xinit__playerDrawX:
      00001C 50                    4361 	.db #0x50	; 80	'P'
      00001D                       4362 __xinit__playerDrawY:
      00001D 50                    4363 	.db #0x50	; 80	'P'
      00001E                       4364 __xinit__bgX:
      00001E 00 00                 4365 	.dw #0x0000
      000020                       4366 __xinit__bgY:
      000020 00 00                 4367 	.dw #0x0000
      000022                       4368 __xinit__maxHull:
      000022 64                    4369 	.db #0x64	;  100	'd'
      000023                       4370 __xinit__maxShield:
      000023 64                    4371 	.db #0x64	;  100	'd'
                                   4372 	.area _CABS (ABS)
