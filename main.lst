                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _moveProjectiles
                                     15 	.globl _fire
                                     16 	.globl _checkCollision
                                     17 	.globl _takeDamage
                                     18 	.globl _move
                                     19 	.globl _initEnemies
                                     20 	.globl _updateEnemyPositions
                                     21 	.globl _updateDirection
                                     22 	.globl _setHealthBar
                                     23 	.globl _interruptLCD
                                     24 	.globl _rand
                                     25 	.globl _initrand
                                     26 	.globl _font_set
                                     27 	.globl _font_load
                                     28 	.globl _font_init
                                     29 	.globl _set_sprite_data
                                     30 	.globl _set_win_tiles
                                     31 	.globl _set_bkg_tiles
                                     32 	.globl _set_bkg_data
                                     33 	.globl _wait_vbl_done
                                     34 	.globl _waitpad
                                     35 	.globl _joypad
                                     36 	.globl _enemyCollisionCount
                                     37 	.globl _yOverflow
                                     38 	.globl _xOverflow
                                     39 	.globl _bgY
                                     40 	.globl _bgX
                                     41 	.globl _playerDrawY
                                     42 	.globl _playerDrawX
                                     43 	.globl _playerY
                                     44 	.globl _playerX
                                     45 	.globl _ySpeed
                                     46 	.globl _xSpeed
                                     47 	.globl _yDir
                                     48 	.globl _xDir
                                     49 	.globl _fireCooldown
                                     50 	.globl _oldestProjectile
                                     51 	.globl _weakProjectile
                                     52 	.globl _blob
                                     53 	.globl _shieldlabel
                                     54 	.globl _hullabel
                                     55 	.globl _min_font
                                     56 	.globl _shield
                                     57 	.globl _hull
                                     58 	.globl _joydata
                                     59 	.globl _projectiles
                                     60 	.globl _enemies
                                     61 	.globl _maxShield
                                     62 	.globl _maxHull
                                     63 	.globl _PLAYERSIZE
                                     64 	.globl _PROJECTILECOUNT
                                     65 	.globl _ySpawnPositions
                                     66 	.globl _xSpawnPositions
                                     67 	.globl _ENEMYCOUNT
                                     68 	.globl _EMPTYSPRITE
                                     69 	.globl _BLANK
                                     70 	.globl _projectile1
                                     71 	.globl _enemy1
                                     72 	.globl _healthblock
                                     73 	.globl _backgroundtiles
                                     74 	.globl _background1
                                     75 	.globl _cross
                                     76 ;--------------------------------------------------------
                                     77 ; special function registers
                                     78 ;--------------------------------------------------------
                                     79 ;--------------------------------------------------------
                                     80 ; ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area _DATA
      000000                         83 _enemies::
      000000                         84 	.ds 80
      000050                         85 _projectiles::
      000050                         86 	.ds 50
      000082                         87 _joydata::
      000082                         88 	.ds 1
      000083                         89 _hull::
      000083                         90 	.ds 1
      000084                         91 _shield::
      000084                         92 	.ds 1
      000085                         93 _min_font::
      000085                         94 	.ds 2
                                     95 ;--------------------------------------------------------
                                     96 ; ram data
                                     97 ;--------------------------------------------------------
                                     98 	.area _INITIALIZED
      000000                         99 _hullabel::
      000000                        100 	.ds 4
      000004                        101 _shieldlabel::
      000004                        102 	.ds 4
      000008                        103 _blob::
      000008                        104 	.ds 16
      000018                        105 _weakProjectile::
      000018                        106 	.ds 10
      000022                        107 _oldestProjectile::
      000022                        108 	.ds 1
      000023                        109 _fireCooldown::
      000023                        110 	.ds 1
      000024                        111 _xDir::
      000024                        112 	.ds 1
      000025                        113 _yDir::
      000025                        114 	.ds 1
      000026                        115 _xSpeed::
      000026                        116 	.ds 1
      000027                        117 _ySpeed::
      000027                        118 	.ds 1
      000028                        119 _playerX::
      000028                        120 	.ds 2
      00002A                        121 _playerY::
      00002A                        122 	.ds 2
      00002C                        123 _playerDrawX::
      00002C                        124 	.ds 1
      00002D                        125 _playerDrawY::
      00002D                        126 	.ds 1
      00002E                        127 _bgX::
      00002E                        128 	.ds 2
      000030                        129 _bgY::
      000030                        130 	.ds 2
      000032                        131 _xOverflow::
      000032                        132 	.ds 2
      000034                        133 _yOverflow::
      000034                        134 	.ds 2
      000036                        135 _enemyCollisionCount::
      000036                        136 	.ds 1
                                    137 ;--------------------------------------------------------
                                    138 ; absolute external ram data
                                    139 ;--------------------------------------------------------
                                    140 	.area _DABS (ABS)
                                    141 ;--------------------------------------------------------
                                    142 ; global & static initialisations
                                    143 ;--------------------------------------------------------
                                    144 	.area _HOME
                                    145 	.area _GSINIT
                                    146 	.area _GSFINAL
                                    147 	.area _GSINIT
                                    148 ;--------------------------------------------------------
                                    149 ; Home
                                    150 ;--------------------------------------------------------
                                    151 	.area _HOME
                                    152 	.area _HOME
                                    153 ;--------------------------------------------------------
                                    154 ; code
                                    155 ;--------------------------------------------------------
                                    156 	.area _CODE
                                    157 ;main.c:81: void interruptLCD(){
                                    158 ;	---------------------------------
                                    159 ; Function interruptLCD
                                    160 ; ---------------------------------
      000000                        161 _interruptLCD::
                                    162 ;main.c:82: HIDE_WIN;
      000000 F0r00                  163 	ldh	a, (_LCDC_REG + 0)
      000002 E6 DF                  164 	and	a, #0xdf
      000004 E0r00                  165 	ldh	(_LCDC_REG + 0), a
                                    166 ;main.c:83: }
      000006 C9                     167 	ret
      000007                        168 _cross:
      000007 18                     169 	.db #0x18	; 24
      000008 18                     170 	.db #0x18	; 24
      000009 18                     171 	.db #0x18	; 24
      00000A 18                     172 	.db #0x18	; 24
      00000B 3C                     173 	.db #0x3c	; 60
      00000C 3C                     174 	.db #0x3c	; 60
      00000D 3C                     175 	.db #0x3c	; 60
      00000E 3C                     176 	.db #0x3c	; 60
      00000F 7E                     177 	.db #0x7e	; 126
      000010 7E                     178 	.db #0x7e	; 126
      000011 7E                     179 	.db #0x7e	; 126
      000012 7E                     180 	.db #0x7e	; 126
      000013 FF                     181 	.db #0xff	; 255
      000014 FF                     182 	.db #0xff	; 255
      000015 FF                     183 	.db #0xff	; 255
      000016 FF                     184 	.db #0xff	; 255
      000017 0F                     185 	.db #0x0f	; 15
      000018 0F                     186 	.db #0x0f	; 15
      000019 3F                     187 	.db #0x3f	; 63
      00001A 3F                     188 	.db #0x3f	; 63
      00001B FF                     189 	.db #0xff	; 255
      00001C FF                     190 	.db #0xff	; 255
      00001D FF                     191 	.db #0xff	; 255
      00001E FF                     192 	.db #0xff	; 255
      00001F 7E                     193 	.db #0x7e	; 126
      000020 7E                     194 	.db #0x7e	; 126
      000021 3E                     195 	.db #0x3e	; 62
      000022 3E                     196 	.db #0x3e	; 62
      000023 1C                     197 	.db #0x1c	; 28
      000024 1C                     198 	.db #0x1c	; 28
      000025 0C                     199 	.db #0x0c	; 12
      000026 0C                     200 	.db #0x0c	; 12
      000027 C0                     201 	.db #0xc0	; 192
      000028 C0                     202 	.db #0xc0	; 192
      000029 F0                     203 	.db #0xf0	; 240
      00002A F0                     204 	.db #0xf0	; 240
      00002B FC                     205 	.db #0xfc	; 252
      00002C FC                     206 	.db #0xfc	; 252
      00002D FF                     207 	.db #0xff	; 255
      00002E FF                     208 	.db #0xff	; 255
      00002F FF                     209 	.db #0xff	; 255
      000030 FF                     210 	.db #0xff	; 255
      000031 FC                     211 	.db #0xfc	; 252
      000032 FC                     212 	.db #0xfc	; 252
      000033 F0                     213 	.db #0xf0	; 240
      000034 F0                     214 	.db #0xf0	; 240
      000035 C0                     215 	.db #0xc0	; 192
      000036 C0                     216 	.db #0xc0	; 192
      000037 0C                     217 	.db #0x0c	; 12
      000038 0C                     218 	.db #0x0c	; 12
      000039 1C                     219 	.db #0x1c	; 28
      00003A 1C                     220 	.db #0x1c	; 28
      00003B 3E                     221 	.db #0x3e	; 62
      00003C 3E                     222 	.db #0x3e	; 62
      00003D 7E                     223 	.db #0x7e	; 126
      00003E 7E                     224 	.db #0x7e	; 126
      00003F FF                     225 	.db #0xff	; 255
      000040 FF                     226 	.db #0xff	; 255
      000041 FF                     227 	.db #0xff	; 255
      000042 FF                     228 	.db #0xff	; 255
      000043 3F                     229 	.db #0x3f	; 63
      000044 3F                     230 	.db #0x3f	; 63
      000045 0F                     231 	.db #0x0f	; 15
      000046 0F                     232 	.db #0x0f	; 15
      000047 FF                     233 	.db #0xff	; 255
      000048 FF                     234 	.db #0xff	; 255
      000049 FF                     235 	.db #0xff	; 255
      00004A FF                     236 	.db #0xff	; 255
      00004B 7E                     237 	.db #0x7e	; 126
      00004C 7E                     238 	.db #0x7e	; 126
      00004D 7E                     239 	.db #0x7e	; 126
      00004E 7E                     240 	.db #0x7e	; 126
      00004F 3C                     241 	.db #0x3c	; 60
      000050 3C                     242 	.db #0x3c	; 60
      000051 3C                     243 	.db #0x3c	; 60
      000052 3C                     244 	.db #0x3c	; 60
      000053 18                     245 	.db #0x18	; 24
      000054 18                     246 	.db #0x18	; 24
      000055 18                     247 	.db #0x18	; 24
      000056 18                     248 	.db #0x18	; 24
      000057 30                     249 	.db #0x30	; 48	'0'
      000058 30                     250 	.db #0x30	; 48	'0'
      000059 38                     251 	.db #0x38	; 56	'8'
      00005A 38                     252 	.db #0x38	; 56	'8'
      00005B 7C                     253 	.db #0x7c	; 124
      00005C 7C                     254 	.db #0x7c	; 124
      00005D 7E                     255 	.db #0x7e	; 126
      00005E 7E                     256 	.db #0x7e	; 126
      00005F FF                     257 	.db #0xff	; 255
      000060 FF                     258 	.db #0xff	; 255
      000061 FF                     259 	.db #0xff	; 255
      000062 FF                     260 	.db #0xff	; 255
      000063 FC                     261 	.db #0xfc	; 252
      000064 FC                     262 	.db #0xfc	; 252
      000065 F0                     263 	.db #0xf0	; 240
      000066 F0                     264 	.db #0xf0	; 240
      000067 03                     265 	.db #0x03	; 3
      000068 03                     266 	.db #0x03	; 3
      000069 0F                     267 	.db #0x0f	; 15
      00006A 0F                     268 	.db #0x0f	; 15
      00006B 3F                     269 	.db #0x3f	; 63
      00006C 3F                     270 	.db #0x3f	; 63
      00006D FF                     271 	.db #0xff	; 255
      00006E FF                     272 	.db #0xff	; 255
      00006F FF                     273 	.db #0xff	; 255
      000070 FF                     274 	.db #0xff	; 255
      000071 3F                     275 	.db #0x3f	; 63
      000072 3F                     276 	.db #0x3f	; 63
      000073 0F                     277 	.db #0x0f	; 15
      000074 0F                     278 	.db #0x0f	; 15
      000075 03                     279 	.db #0x03	; 3
      000076 03                     280 	.db #0x03	; 3
      000077 F0                     281 	.db #0xf0	; 240
      000078 F0                     282 	.db #0xf0	; 240
      000079 FC                     283 	.db #0xfc	; 252
      00007A FC                     284 	.db #0xfc	; 252
      00007B FF                     285 	.db #0xff	; 255
      00007C FF                     286 	.db #0xff	; 255
      00007D FF                     287 	.db #0xff	; 255
      00007E FF                     288 	.db #0xff	; 255
      00007F 7E                     289 	.db #0x7e	; 126
      000080 7E                     290 	.db #0x7e	; 126
      000081 7C                     291 	.db #0x7c	; 124
      000082 7C                     292 	.db #0x7c	; 124
      000083 38                     293 	.db #0x38	; 56	'8'
      000084 38                     294 	.db #0x38	; 56	'8'
      000085 30                     295 	.db #0x30	; 48	'0'
      000086 30                     296 	.db #0x30	; 48	'0'
      000087                        297 _background1:
      000087 26                     298 	.db #0x26	; 38
      000088 26                     299 	.db #0x26	; 38
      000089 26                     300 	.db #0x26	; 38
      00008A 26                     301 	.db #0x26	; 38
      00008B 26                     302 	.db #0x26	; 38
      00008C 26                     303 	.db #0x26	; 38
      00008D 26                     304 	.db #0x26	; 38
      00008E 26                     305 	.db #0x26	; 38
      00008F 26                     306 	.db #0x26	; 38
      000090 26                     307 	.db #0x26	; 38
      000091 26                     308 	.db #0x26	; 38
      000092 2A                     309 	.db #0x2a	; 42
      000093 29                     310 	.db #0x29	; 41
      000094 26                     311 	.db #0x26	; 38
      000095 26                     312 	.db #0x26	; 38
      000096 26                     313 	.db #0x26	; 38
      000097 26                     314 	.db #0x26	; 38
      000098 26                     315 	.db #0x26	; 38
      000099 26                     316 	.db #0x26	; 38
      00009A 26                     317 	.db #0x26	; 38
      00009B 26                     318 	.db #0x26	; 38
      00009C 26                     319 	.db #0x26	; 38
      00009D 26                     320 	.db #0x26	; 38
      00009E 26                     321 	.db #0x26	; 38
      00009F 26                     322 	.db #0x26	; 38
      0000A0 26                     323 	.db #0x26	; 38
      0000A1 26                     324 	.db #0x26	; 38
      0000A2 26                     325 	.db #0x26	; 38
      0000A3 26                     326 	.db #0x26	; 38
      0000A4 26                     327 	.db #0x26	; 38
      0000A5 26                     328 	.db #0x26	; 38
      0000A6 26                     329 	.db #0x26	; 38
      0000A7 26                     330 	.db #0x26	; 38
      0000A8 26                     331 	.db #0x26	; 38
      0000A9 26                     332 	.db #0x26	; 38
      0000AA 26                     333 	.db #0x26	; 38
      0000AB 26                     334 	.db #0x26	; 38
      0000AC 26                     335 	.db #0x26	; 38
      0000AD 26                     336 	.db #0x26	; 38
      0000AE 26                     337 	.db #0x26	; 38
      0000AF 26                     338 	.db #0x26	; 38
      0000B0 26                     339 	.db #0x26	; 38
      0000B1 26                     340 	.db #0x26	; 38
      0000B2 25                     341 	.db #0x25	; 37
      0000B3 26                     342 	.db #0x26	; 38
      0000B4 26                     343 	.db #0x26	; 38
      0000B5 26                     344 	.db #0x26	; 38
      0000B6 26                     345 	.db #0x26	; 38
      0000B7 26                     346 	.db #0x26	; 38
      0000B8 26                     347 	.db #0x26	; 38
      0000B9 26                     348 	.db #0x26	; 38
      0000BA 26                     349 	.db #0x26	; 38
      0000BB 26                     350 	.db #0x26	; 38
      0000BC 26                     351 	.db #0x26	; 38
      0000BD 26                     352 	.db #0x26	; 38
      0000BE 26                     353 	.db #0x26	; 38
      0000BF 26                     354 	.db #0x26	; 38
      0000C0 26                     355 	.db #0x26	; 38
      0000C1 26                     356 	.db #0x26	; 38
      0000C2 26                     357 	.db #0x26	; 38
      0000C3 26                     358 	.db #0x26	; 38
      0000C4 26                     359 	.db #0x26	; 38
      0000C5 26                     360 	.db #0x26	; 38
      0000C6 26                     361 	.db #0x26	; 38
      0000C7 26                     362 	.db #0x26	; 38
      0000C8 26                     363 	.db #0x26	; 38
      0000C9 26                     364 	.db #0x26	; 38
      0000CA 26                     365 	.db #0x26	; 38
      0000CB 26                     366 	.db #0x26	; 38
      0000CC 26                     367 	.db #0x26	; 38
      0000CD 26                     368 	.db #0x26	; 38
      0000CE 26                     369 	.db #0x26	; 38
      0000CF 26                     370 	.db #0x26	; 38
      0000D0 26                     371 	.db #0x26	; 38
      0000D1 26                     372 	.db #0x26	; 38
      0000D2 26                     373 	.db #0x26	; 38
      0000D3 26                     374 	.db #0x26	; 38
      0000D4 26                     375 	.db #0x26	; 38
      0000D5 26                     376 	.db #0x26	; 38
      0000D6 26                     377 	.db #0x26	; 38
      0000D7 26                     378 	.db #0x26	; 38
      0000D8 26                     379 	.db #0x26	; 38
      0000D9 26                     380 	.db #0x26	; 38
      0000DA 26                     381 	.db #0x26	; 38
      0000DB 26                     382 	.db #0x26	; 38
      0000DC 26                     383 	.db #0x26	; 38
      0000DD 26                     384 	.db #0x26	; 38
      0000DE 26                     385 	.db #0x26	; 38
      0000DF 26                     386 	.db #0x26	; 38
      0000E0 26                     387 	.db #0x26	; 38
      0000E1 26                     388 	.db #0x26	; 38
      0000E2 26                     389 	.db #0x26	; 38
      0000E3 26                     390 	.db #0x26	; 38
      0000E4 26                     391 	.db #0x26	; 38
      0000E5 26                     392 	.db #0x26	; 38
      0000E6 26                     393 	.db #0x26	; 38
      0000E7 26                     394 	.db #0x26	; 38
      0000E8 26                     395 	.db #0x26	; 38
      0000E9 26                     396 	.db #0x26	; 38
      0000EA 26                     397 	.db #0x26	; 38
      0000EB 26                     398 	.db #0x26	; 38
      0000EC 26                     399 	.db #0x26	; 38
      0000ED 26                     400 	.db #0x26	; 38
      0000EE 26                     401 	.db #0x26	; 38
      0000EF 26                     402 	.db #0x26	; 38
      0000F0 26                     403 	.db #0x26	; 38
      0000F1 26                     404 	.db #0x26	; 38
      0000F2 26                     405 	.db #0x26	; 38
      0000F3 26                     406 	.db #0x26	; 38
      0000F4 26                     407 	.db #0x26	; 38
      0000F5 26                     408 	.db #0x26	; 38
      0000F6 26                     409 	.db #0x26	; 38
      0000F7 26                     410 	.db #0x26	; 38
      0000F8 26                     411 	.db #0x26	; 38
      0000F9 26                     412 	.db #0x26	; 38
      0000FA 26                     413 	.db #0x26	; 38
      0000FB 26                     414 	.db #0x26	; 38
      0000FC 26                     415 	.db #0x26	; 38
      0000FD 26                     416 	.db #0x26	; 38
      0000FE 26                     417 	.db #0x26	; 38
      0000FF 26                     418 	.db #0x26	; 38
      000100 26                     419 	.db #0x26	; 38
      000101 26                     420 	.db #0x26	; 38
      000102 26                     421 	.db #0x26	; 38
      000103 26                     422 	.db #0x26	; 38
      000104 26                     423 	.db #0x26	; 38
      000105 26                     424 	.db #0x26	; 38
      000106 26                     425 	.db #0x26	; 38
      000107 26                     426 	.db #0x26	; 38
      000108 26                     427 	.db #0x26	; 38
      000109 26                     428 	.db #0x26	; 38
      00010A 26                     429 	.db #0x26	; 38
      00010B 26                     430 	.db #0x26	; 38
      00010C 26                     431 	.db #0x26	; 38
      00010D 26                     432 	.db #0x26	; 38
      00010E 26                     433 	.db #0x26	; 38
      00010F 26                     434 	.db #0x26	; 38
      000110 26                     435 	.db #0x26	; 38
      000111 26                     436 	.db #0x26	; 38
      000112 26                     437 	.db #0x26	; 38
      000113 26                     438 	.db #0x26	; 38
      000114 26                     439 	.db #0x26	; 38
      000115 26                     440 	.db #0x26	; 38
      000116 26                     441 	.db #0x26	; 38
      000117 26                     442 	.db #0x26	; 38
      000118 26                     443 	.db #0x26	; 38
      000119 26                     444 	.db #0x26	; 38
      00011A 26                     445 	.db #0x26	; 38
      00011B 26                     446 	.db #0x26	; 38
      00011C 26                     447 	.db #0x26	; 38
      00011D 26                     448 	.db #0x26	; 38
      00011E 26                     449 	.db #0x26	; 38
      00011F 26                     450 	.db #0x26	; 38
      000120 26                     451 	.db #0x26	; 38
      000121 26                     452 	.db #0x26	; 38
      000122 26                     453 	.db #0x26	; 38
      000123 26                     454 	.db #0x26	; 38
      000124 26                     455 	.db #0x26	; 38
      000125 26                     456 	.db #0x26	; 38
      000126 26                     457 	.db #0x26	; 38
      000127 26                     458 	.db #0x26	; 38
      000128 26                     459 	.db #0x26	; 38
      000129 26                     460 	.db #0x26	; 38
      00012A 26                     461 	.db #0x26	; 38
      00012B 26                     462 	.db #0x26	; 38
      00012C 26                     463 	.db #0x26	; 38
      00012D 26                     464 	.db #0x26	; 38
      00012E 26                     465 	.db #0x26	; 38
      00012F 26                     466 	.db #0x26	; 38
      000130 26                     467 	.db #0x26	; 38
      000131 26                     468 	.db #0x26	; 38
      000132 26                     469 	.db #0x26	; 38
      000133 26                     470 	.db #0x26	; 38
      000134 26                     471 	.db #0x26	; 38
      000135 26                     472 	.db #0x26	; 38
      000136 26                     473 	.db #0x26	; 38
      000137 26                     474 	.db #0x26	; 38
      000138 26                     475 	.db #0x26	; 38
      000139 26                     476 	.db #0x26	; 38
      00013A 26                     477 	.db #0x26	; 38
      00013B 26                     478 	.db #0x26	; 38
      00013C 26                     479 	.db #0x26	; 38
      00013D 26                     480 	.db #0x26	; 38
      00013E 26                     481 	.db #0x26	; 38
      00013F 26                     482 	.db #0x26	; 38
      000140 26                     483 	.db #0x26	; 38
      000141 26                     484 	.db #0x26	; 38
      000142 26                     485 	.db #0x26	; 38
      000143 26                     486 	.db #0x26	; 38
      000144 26                     487 	.db #0x26	; 38
      000145 26                     488 	.db #0x26	; 38
      000146 26                     489 	.db #0x26	; 38
      000147 26                     490 	.db #0x26	; 38
      000148 26                     491 	.db #0x26	; 38
      000149 26                     492 	.db #0x26	; 38
      00014A 26                     493 	.db #0x26	; 38
      00014B 26                     494 	.db #0x26	; 38
      00014C 26                     495 	.db #0x26	; 38
      00014D 26                     496 	.db #0x26	; 38
      00014E 26                     497 	.db #0x26	; 38
      00014F 26                     498 	.db #0x26	; 38
      000150 26                     499 	.db #0x26	; 38
      000151 26                     500 	.db #0x26	; 38
      000152 26                     501 	.db #0x26	; 38
      000153 26                     502 	.db #0x26	; 38
      000154 26                     503 	.db #0x26	; 38
      000155 26                     504 	.db #0x26	; 38
      000156 26                     505 	.db #0x26	; 38
      000157 26                     506 	.db #0x26	; 38
      000158 26                     507 	.db #0x26	; 38
      000159 26                     508 	.db #0x26	; 38
      00015A 26                     509 	.db #0x26	; 38
      00015B 26                     510 	.db #0x26	; 38
      00015C 26                     511 	.db #0x26	; 38
      00015D 26                     512 	.db #0x26	; 38
      00015E 26                     513 	.db #0x26	; 38
      00015F 26                     514 	.db #0x26	; 38
      000160 26                     515 	.db #0x26	; 38
      000161 26                     516 	.db #0x26	; 38
      000162 26                     517 	.db #0x26	; 38
      000163 26                     518 	.db #0x26	; 38
      000164 26                     519 	.db #0x26	; 38
      000165 26                     520 	.db #0x26	; 38
      000166 26                     521 	.db #0x26	; 38
      000167 26                     522 	.db #0x26	; 38
      000168 26                     523 	.db #0x26	; 38
      000169 26                     524 	.db #0x26	; 38
      00016A 26                     525 	.db #0x26	; 38
      00016B 26                     526 	.db #0x26	; 38
      00016C 26                     527 	.db #0x26	; 38
      00016D 26                     528 	.db #0x26	; 38
      00016E 26                     529 	.db #0x26	; 38
      00016F 26                     530 	.db #0x26	; 38
      000170 26                     531 	.db #0x26	; 38
      000171 26                     532 	.db #0x26	; 38
      000172 26                     533 	.db #0x26	; 38
      000173 26                     534 	.db #0x26	; 38
      000174 26                     535 	.db #0x26	; 38
      000175 26                     536 	.db #0x26	; 38
      000176 26                     537 	.db #0x26	; 38
      000177 26                     538 	.db #0x26	; 38
      000178 26                     539 	.db #0x26	; 38
      000179 26                     540 	.db #0x26	; 38
      00017A 26                     541 	.db #0x26	; 38
      00017B 26                     542 	.db #0x26	; 38
      00017C 26                     543 	.db #0x26	; 38
      00017D 26                     544 	.db #0x26	; 38
      00017E 26                     545 	.db #0x26	; 38
      00017F 26                     546 	.db #0x26	; 38
      000180 26                     547 	.db #0x26	; 38
      000181 26                     548 	.db #0x26	; 38
      000182 26                     549 	.db #0x26	; 38
      000183 26                     550 	.db #0x26	; 38
      000184 26                     551 	.db #0x26	; 38
      000185 26                     552 	.db #0x26	; 38
      000186 26                     553 	.db #0x26	; 38
      000187 26                     554 	.db #0x26	; 38
      000188 26                     555 	.db #0x26	; 38
      000189 26                     556 	.db #0x26	; 38
      00018A 26                     557 	.db #0x26	; 38
      00018B 26                     558 	.db #0x26	; 38
      00018C 26                     559 	.db #0x26	; 38
      00018D 26                     560 	.db #0x26	; 38
      00018E 26                     561 	.db #0x26	; 38
      00018F 26                     562 	.db #0x26	; 38
      000190 26                     563 	.db #0x26	; 38
      000191 26                     564 	.db #0x26	; 38
      000192 26                     565 	.db #0x26	; 38
      000193 26                     566 	.db #0x26	; 38
      000194 26                     567 	.db #0x26	; 38
      000195 26                     568 	.db #0x26	; 38
      000196 26                     569 	.db #0x26	; 38
      000197 26                     570 	.db #0x26	; 38
      000198 26                     571 	.db #0x26	; 38
      000199 26                     572 	.db #0x26	; 38
      00019A 26                     573 	.db #0x26	; 38
      00019B 26                     574 	.db #0x26	; 38
      00019C 26                     575 	.db #0x26	; 38
      00019D 26                     576 	.db #0x26	; 38
      00019E 26                     577 	.db #0x26	; 38
      00019F 26                     578 	.db #0x26	; 38
      0001A0 26                     579 	.db #0x26	; 38
      0001A1 26                     580 	.db #0x26	; 38
      0001A2 26                     581 	.db #0x26	; 38
      0001A3 26                     582 	.db #0x26	; 38
      0001A4 26                     583 	.db #0x26	; 38
      0001A5 26                     584 	.db #0x26	; 38
      0001A6 26                     585 	.db #0x26	; 38
      0001A7 26                     586 	.db #0x26	; 38
      0001A8 26                     587 	.db #0x26	; 38
      0001A9 26                     588 	.db #0x26	; 38
      0001AA 26                     589 	.db #0x26	; 38
      0001AB 26                     590 	.db #0x26	; 38
      0001AC 26                     591 	.db #0x26	; 38
      0001AD 26                     592 	.db #0x26	; 38
      0001AE 26                     593 	.db #0x26	; 38
      0001AF 26                     594 	.db #0x26	; 38
      0001B0 26                     595 	.db #0x26	; 38
      0001B1 26                     596 	.db #0x26	; 38
      0001B2 26                     597 	.db #0x26	; 38
      0001B3 26                     598 	.db #0x26	; 38
      0001B4 26                     599 	.db #0x26	; 38
      0001B5 26                     600 	.db #0x26	; 38
      0001B6 26                     601 	.db #0x26	; 38
      0001B7 26                     602 	.db #0x26	; 38
      0001B8 26                     603 	.db #0x26	; 38
      0001B9 26                     604 	.db #0x26	; 38
      0001BA 25                     605 	.db #0x25	; 37
      0001BB 26                     606 	.db #0x26	; 38
      0001BC 26                     607 	.db #0x26	; 38
      0001BD 26                     608 	.db #0x26	; 38
      0001BE 26                     609 	.db #0x26	; 38
      0001BF 26                     610 	.db #0x26	; 38
      0001C0 26                     611 	.db #0x26	; 38
      0001C1 26                     612 	.db #0x26	; 38
      0001C2 26                     613 	.db #0x26	; 38
      0001C3 26                     614 	.db #0x26	; 38
      0001C4 26                     615 	.db #0x26	; 38
      0001C5 26                     616 	.db #0x26	; 38
      0001C6 26                     617 	.db #0x26	; 38
      0001C7 26                     618 	.db #0x26	; 38
      0001C8 26                     619 	.db #0x26	; 38
      0001C9 26                     620 	.db #0x26	; 38
      0001CA 26                     621 	.db #0x26	; 38
      0001CB 26                     622 	.db #0x26	; 38
      0001CC 26                     623 	.db #0x26	; 38
      0001CD 26                     624 	.db #0x26	; 38
      0001CE 26                     625 	.db #0x26	; 38
      0001CF 26                     626 	.db #0x26	; 38
      0001D0 26                     627 	.db #0x26	; 38
      0001D1 26                     628 	.db #0x26	; 38
      0001D2 26                     629 	.db #0x26	; 38
      0001D3 26                     630 	.db #0x26	; 38
      0001D4 26                     631 	.db #0x26	; 38
      0001D5 26                     632 	.db #0x26	; 38
      0001D6 26                     633 	.db #0x26	; 38
      0001D7 26                     634 	.db #0x26	; 38
      0001D8 26                     635 	.db #0x26	; 38
      0001D9 26                     636 	.db #0x26	; 38
      0001DA 27                     637 	.db #0x27	; 39
      0001DB 28                     638 	.db #0x28	; 40
      0001DC 26                     639 	.db #0x26	; 38
      0001DD 26                     640 	.db #0x26	; 38
      0001DE 26                     641 	.db #0x26	; 38
      0001DF 26                     642 	.db #0x26	; 38
      0001E0 26                     643 	.db #0x26	; 38
      0001E1 26                     644 	.db #0x26	; 38
      0001E2 26                     645 	.db #0x26	; 38
      0001E3 26                     646 	.db #0x26	; 38
      0001E4 26                     647 	.db #0x26	; 38
      0001E5 26                     648 	.db #0x26	; 38
      0001E6 26                     649 	.db #0x26	; 38
      0001E7 26                     650 	.db #0x26	; 38
      0001E8 26                     651 	.db #0x26	; 38
      0001E9 26                     652 	.db #0x26	; 38
      0001EA 26                     653 	.db #0x26	; 38
      0001EB 26                     654 	.db #0x26	; 38
      0001EC 26                     655 	.db #0x26	; 38
      0001ED 26                     656 	.db #0x26	; 38
      0001EE 25                     657 	.db #0x25	; 37
      0001EF 26                     658 	.db #0x26	; 38
      0001F0 26                     659 	.db #0x26	; 38
      0001F1 26                     660 	.db #0x26	; 38
      0001F2 26                     661 	.db #0x26	; 38
      0001F3 26                     662 	.db #0x26	; 38
      0001F4 26                     663 	.db #0x26	; 38
      0001F5 26                     664 	.db #0x26	; 38
      0001F6 26                     665 	.db #0x26	; 38
      0001F7 26                     666 	.db #0x26	; 38
      0001F8 26                     667 	.db #0x26	; 38
      0001F9 26                     668 	.db #0x26	; 38
      0001FA 2A                     669 	.db #0x2a	; 42
      0001FB 29                     670 	.db #0x29	; 41
      0001FC 26                     671 	.db #0x26	; 38
      0001FD 26                     672 	.db #0x26	; 38
      0001FE 26                     673 	.db #0x26	; 38
      0001FF 26                     674 	.db #0x26	; 38
      000200 26                     675 	.db #0x26	; 38
      000201 26                     676 	.db #0x26	; 38
      000202 26                     677 	.db #0x26	; 38
      000203 26                     678 	.db #0x26	; 38
      000204 26                     679 	.db #0x26	; 38
      000205 26                     680 	.db #0x26	; 38
      000206 26                     681 	.db #0x26	; 38
      000207 26                     682 	.db #0x26	; 38
      000208 26                     683 	.db #0x26	; 38
      000209 26                     684 	.db #0x26	; 38
      00020A 26                     685 	.db #0x26	; 38
      00020B 26                     686 	.db #0x26	; 38
      00020C 26                     687 	.db #0x26	; 38
      00020D 26                     688 	.db #0x26	; 38
      00020E 27                     689 	.db #0x27	; 39
      00020F 28                     690 	.db #0x28	; 40
      000210 26                     691 	.db #0x26	; 38
      000211 26                     692 	.db #0x26	; 38
      000212 26                     693 	.db #0x26	; 38
      000213 26                     694 	.db #0x26	; 38
      000214 26                     695 	.db #0x26	; 38
      000215 26                     696 	.db #0x26	; 38
      000216 26                     697 	.db #0x26	; 38
      000217 26                     698 	.db #0x26	; 38
      000218 26                     699 	.db #0x26	; 38
      000219 26                     700 	.db #0x26	; 38
      00021A 26                     701 	.db #0x26	; 38
      00021B 26                     702 	.db #0x26	; 38
      00021C 26                     703 	.db #0x26	; 38
      00021D 26                     704 	.db #0x26	; 38
      00021E 26                     705 	.db #0x26	; 38
      00021F 26                     706 	.db #0x26	; 38
      000220 26                     707 	.db #0x26	; 38
      000221 26                     708 	.db #0x26	; 38
      000222 26                     709 	.db #0x26	; 38
      000223 26                     710 	.db #0x26	; 38
      000224 26                     711 	.db #0x26	; 38
      000225 26                     712 	.db #0x26	; 38
      000226 26                     713 	.db #0x26	; 38
      000227 26                     714 	.db #0x26	; 38
      000228 26                     715 	.db #0x26	; 38
      000229 26                     716 	.db #0x26	; 38
      00022A 26                     717 	.db #0x26	; 38
      00022B 26                     718 	.db #0x26	; 38
      00022C 26                     719 	.db #0x26	; 38
      00022D 26                     720 	.db #0x26	; 38
      00022E 2A                     721 	.db #0x2a	; 42
      00022F 29                     722 	.db #0x29	; 41
      000230 26                     723 	.db #0x26	; 38
      000231 26                     724 	.db #0x26	; 38
      000232 26                     725 	.db #0x26	; 38
      000233 26                     726 	.db #0x26	; 38
      000234 26                     727 	.db #0x26	; 38
      000235 26                     728 	.db #0x26	; 38
      000236 26                     729 	.db #0x26	; 38
      000237 26                     730 	.db #0x26	; 38
      000238 26                     731 	.db #0x26	; 38
      000239 26                     732 	.db #0x26	; 38
      00023A 26                     733 	.db #0x26	; 38
      00023B 26                     734 	.db #0x26	; 38
      00023C 26                     735 	.db #0x26	; 38
      00023D 26                     736 	.db #0x26	; 38
      00023E 26                     737 	.db #0x26	; 38
      00023F 26                     738 	.db #0x26	; 38
      000240 26                     739 	.db #0x26	; 38
      000241 26                     740 	.db #0x26	; 38
      000242 26                     741 	.db #0x26	; 38
      000243 26                     742 	.db #0x26	; 38
      000244 26                     743 	.db #0x26	; 38
      000245 26                     744 	.db #0x26	; 38
      000246 26                     745 	.db #0x26	; 38
      000247 26                     746 	.db #0x26	; 38
      000248 26                     747 	.db #0x26	; 38
      000249 26                     748 	.db #0x26	; 38
      00024A 26                     749 	.db #0x26	; 38
      00024B 26                     750 	.db #0x26	; 38
      00024C 26                     751 	.db #0x26	; 38
      00024D 26                     752 	.db #0x26	; 38
      00024E 26                     753 	.db #0x26	; 38
      00024F 26                     754 	.db #0x26	; 38
      000250 26                     755 	.db #0x26	; 38
      000251 26                     756 	.db #0x26	; 38
      000252 26                     757 	.db #0x26	; 38
      000253 26                     758 	.db #0x26	; 38
      000254 26                     759 	.db #0x26	; 38
      000255 26                     760 	.db #0x26	; 38
      000256 26                     761 	.db #0x26	; 38
      000257 26                     762 	.db #0x26	; 38
      000258 26                     763 	.db #0x26	; 38
      000259 26                     764 	.db #0x26	; 38
      00025A 26                     765 	.db #0x26	; 38
      00025B 26                     766 	.db #0x26	; 38
      00025C 26                     767 	.db #0x26	; 38
      00025D 26                     768 	.db #0x26	; 38
      00025E 26                     769 	.db #0x26	; 38
      00025F 26                     770 	.db #0x26	; 38
      000260 26                     771 	.db #0x26	; 38
      000261 26                     772 	.db #0x26	; 38
      000262 26                     773 	.db #0x26	; 38
      000263 26                     774 	.db #0x26	; 38
      000264 26                     775 	.db #0x26	; 38
      000265 26                     776 	.db #0x26	; 38
      000266 26                     777 	.db #0x26	; 38
      000267 26                     778 	.db #0x26	; 38
      000268 26                     779 	.db #0x26	; 38
      000269 26                     780 	.db #0x26	; 38
      00026A 26                     781 	.db #0x26	; 38
      00026B 26                     782 	.db #0x26	; 38
      00026C 26                     783 	.db #0x26	; 38
      00026D 26                     784 	.db #0x26	; 38
      00026E 26                     785 	.db #0x26	; 38
      00026F 26                     786 	.db #0x26	; 38
      000270 26                     787 	.db #0x26	; 38
      000271 26                     788 	.db #0x26	; 38
      000272 26                     789 	.db #0x26	; 38
      000273 26                     790 	.db #0x26	; 38
      000274 26                     791 	.db #0x26	; 38
      000275 26                     792 	.db #0x26	; 38
      000276 26                     793 	.db #0x26	; 38
      000277 26                     794 	.db #0x26	; 38
      000278 26                     795 	.db #0x26	; 38
      000279 26                     796 	.db #0x26	; 38
      00027A 26                     797 	.db #0x26	; 38
      00027B 26                     798 	.db #0x26	; 38
      00027C 26                     799 	.db #0x26	; 38
      00027D 26                     800 	.db #0x26	; 38
      00027E 26                     801 	.db #0x26	; 38
      00027F 26                     802 	.db #0x26	; 38
      000280 26                     803 	.db #0x26	; 38
      000281 26                     804 	.db #0x26	; 38
      000282 26                     805 	.db #0x26	; 38
      000283 26                     806 	.db #0x26	; 38
      000284 26                     807 	.db #0x26	; 38
      000285 26                     808 	.db #0x26	; 38
      000286 26                     809 	.db #0x26	; 38
      000287 25                     810 	.db #0x25	; 37
      000288 26                     811 	.db #0x26	; 38
      000289 26                     812 	.db #0x26	; 38
      00028A 26                     813 	.db #0x26	; 38
      00028B 26                     814 	.db #0x26	; 38
      00028C 26                     815 	.db #0x26	; 38
      00028D 26                     816 	.db #0x26	; 38
      00028E 26                     817 	.db #0x26	; 38
      00028F 26                     818 	.db #0x26	; 38
      000290 26                     819 	.db #0x26	; 38
      000291 26                     820 	.db #0x26	; 38
      000292 26                     821 	.db #0x26	; 38
      000293 26                     822 	.db #0x26	; 38
      000294 26                     823 	.db #0x26	; 38
      000295 26                     824 	.db #0x26	; 38
      000296 26                     825 	.db #0x26	; 38
      000297 26                     826 	.db #0x26	; 38
      000298 26                     827 	.db #0x26	; 38
      000299 26                     828 	.db #0x26	; 38
      00029A 26                     829 	.db #0x26	; 38
      00029B 26                     830 	.db #0x26	; 38
      00029C 26                     831 	.db #0x26	; 38
      00029D 26                     832 	.db #0x26	; 38
      00029E 26                     833 	.db #0x26	; 38
      00029F 26                     834 	.db #0x26	; 38
      0002A0 26                     835 	.db #0x26	; 38
      0002A1 26                     836 	.db #0x26	; 38
      0002A2 26                     837 	.db #0x26	; 38
      0002A3 26                     838 	.db #0x26	; 38
      0002A4 26                     839 	.db #0x26	; 38
      0002A5 26                     840 	.db #0x26	; 38
      0002A6 26                     841 	.db #0x26	; 38
      0002A7 28                     842 	.db #0x28	; 40
      0002A8 26                     843 	.db #0x26	; 38
      0002A9 26                     844 	.db #0x26	; 38
      0002AA 26                     845 	.db #0x26	; 38
      0002AB 26                     846 	.db #0x26	; 38
      0002AC 26                     847 	.db #0x26	; 38
      0002AD 26                     848 	.db #0x26	; 38
      0002AE 26                     849 	.db #0x26	; 38
      0002AF 26                     850 	.db #0x26	; 38
      0002B0 26                     851 	.db #0x26	; 38
      0002B1 26                     852 	.db #0x26	; 38
      0002B2 26                     853 	.db #0x26	; 38
      0002B3 26                     854 	.db #0x26	; 38
      0002B4 26                     855 	.db #0x26	; 38
      0002B5 26                     856 	.db #0x26	; 38
      0002B6 26                     857 	.db #0x26	; 38
      0002B7 26                     858 	.db #0x26	; 38
      0002B8 26                     859 	.db #0x26	; 38
      0002B9 26                     860 	.db #0x26	; 38
      0002BA 26                     861 	.db #0x26	; 38
      0002BB 26                     862 	.db #0x26	; 38
      0002BC 26                     863 	.db #0x26	; 38
      0002BD 26                     864 	.db #0x26	; 38
      0002BE 26                     865 	.db #0x26	; 38
      0002BF 26                     866 	.db #0x26	; 38
      0002C0 26                     867 	.db #0x26	; 38
      0002C1 26                     868 	.db #0x26	; 38
      0002C2 26                     869 	.db #0x26	; 38
      0002C3 26                     870 	.db #0x26	; 38
      0002C4 26                     871 	.db #0x26	; 38
      0002C5 26                     872 	.db #0x26	; 38
      0002C6 27                     873 	.db #0x27	; 39
      0002C7 29                     874 	.db #0x29	; 41
      0002C8 26                     875 	.db #0x26	; 38
      0002C9 26                     876 	.db #0x26	; 38
      0002CA 26                     877 	.db #0x26	; 38
      0002CB 26                     878 	.db #0x26	; 38
      0002CC 26                     879 	.db #0x26	; 38
      0002CD 26                     880 	.db #0x26	; 38
      0002CE 26                     881 	.db #0x26	; 38
      0002CF 26                     882 	.db #0x26	; 38
      0002D0 26                     883 	.db #0x26	; 38
      0002D1 26                     884 	.db #0x26	; 38
      0002D2 26                     885 	.db #0x26	; 38
      0002D3 26                     886 	.db #0x26	; 38
      0002D4 26                     887 	.db #0x26	; 38
      0002D5 26                     888 	.db #0x26	; 38
      0002D6 26                     889 	.db #0x26	; 38
      0002D7 26                     890 	.db #0x26	; 38
      0002D8 26                     891 	.db #0x26	; 38
      0002D9 26                     892 	.db #0x26	; 38
      0002DA 26                     893 	.db #0x26	; 38
      0002DB 26                     894 	.db #0x26	; 38
      0002DC 26                     895 	.db #0x26	; 38
      0002DD 26                     896 	.db #0x26	; 38
      0002DE 26                     897 	.db #0x26	; 38
      0002DF 26                     898 	.db #0x26	; 38
      0002E0 26                     899 	.db #0x26	; 38
      0002E1 26                     900 	.db #0x26	; 38
      0002E2 26                     901 	.db #0x26	; 38
      0002E3 26                     902 	.db #0x26	; 38
      0002E4 26                     903 	.db #0x26	; 38
      0002E5 26                     904 	.db #0x26	; 38
      0002E6 2A                     905 	.db #0x2a	; 42
      0002E7 26                     906 	.db #0x26	; 38
      0002E8 26                     907 	.db #0x26	; 38
      0002E9 26                     908 	.db #0x26	; 38
      0002EA 26                     909 	.db #0x26	; 38
      0002EB 26                     910 	.db #0x26	; 38
      0002EC 26                     911 	.db #0x26	; 38
      0002ED 26                     912 	.db #0x26	; 38
      0002EE 26                     913 	.db #0x26	; 38
      0002EF 26                     914 	.db #0x26	; 38
      0002F0 26                     915 	.db #0x26	; 38
      0002F1 26                     916 	.db #0x26	; 38
      0002F2 26                     917 	.db #0x26	; 38
      0002F3 26                     918 	.db #0x26	; 38
      0002F4 26                     919 	.db #0x26	; 38
      0002F5 26                     920 	.db #0x26	; 38
      0002F6 26                     921 	.db #0x26	; 38
      0002F7 26                     922 	.db #0x26	; 38
      0002F8 26                     923 	.db #0x26	; 38
      0002F9 26                     924 	.db #0x26	; 38
      0002FA 26                     925 	.db #0x26	; 38
      0002FB 26                     926 	.db #0x26	; 38
      0002FC 26                     927 	.db #0x26	; 38
      0002FD 26                     928 	.db #0x26	; 38
      0002FE 26                     929 	.db #0x26	; 38
      0002FF 26                     930 	.db #0x26	; 38
      000300 26                     931 	.db #0x26	; 38
      000301 26                     932 	.db #0x26	; 38
      000302 26                     933 	.db #0x26	; 38
      000303 26                     934 	.db #0x26	; 38
      000304 26                     935 	.db #0x26	; 38
      000305 26                     936 	.db #0x26	; 38
      000306 26                     937 	.db #0x26	; 38
      000307 26                     938 	.db #0x26	; 38
      000308 26                     939 	.db #0x26	; 38
      000309 26                     940 	.db #0x26	; 38
      00030A 26                     941 	.db #0x26	; 38
      00030B 26                     942 	.db #0x26	; 38
      00030C 26                     943 	.db #0x26	; 38
      00030D 26                     944 	.db #0x26	; 38
      00030E 26                     945 	.db #0x26	; 38
      00030F 26                     946 	.db #0x26	; 38
      000310 26                     947 	.db #0x26	; 38
      000311 26                     948 	.db #0x26	; 38
      000312 26                     949 	.db #0x26	; 38
      000313 26                     950 	.db #0x26	; 38
      000314 26                     951 	.db #0x26	; 38
      000315 26                     952 	.db #0x26	; 38
      000316 26                     953 	.db #0x26	; 38
      000317 26                     954 	.db #0x26	; 38
      000318 26                     955 	.db #0x26	; 38
      000319 26                     956 	.db #0x26	; 38
      00031A 26                     957 	.db #0x26	; 38
      00031B 26                     958 	.db #0x26	; 38
      00031C 26                     959 	.db #0x26	; 38
      00031D 26                     960 	.db #0x26	; 38
      00031E 26                     961 	.db #0x26	; 38
      00031F 26                     962 	.db #0x26	; 38
      000320 26                     963 	.db #0x26	; 38
      000321 26                     964 	.db #0x26	; 38
      000322 26                     965 	.db #0x26	; 38
      000323 26                     966 	.db #0x26	; 38
      000324 26                     967 	.db #0x26	; 38
      000325 26                     968 	.db #0x26	; 38
      000326 26                     969 	.db #0x26	; 38
      000327 26                     970 	.db #0x26	; 38
      000328 26                     971 	.db #0x26	; 38
      000329 26                     972 	.db #0x26	; 38
      00032A 26                     973 	.db #0x26	; 38
      00032B 26                     974 	.db #0x26	; 38
      00032C 26                     975 	.db #0x26	; 38
      00032D 26                     976 	.db #0x26	; 38
      00032E 26                     977 	.db #0x26	; 38
      00032F 26                     978 	.db #0x26	; 38
      000330 26                     979 	.db #0x26	; 38
      000331 26                     980 	.db #0x26	; 38
      000332 26                     981 	.db #0x26	; 38
      000333 26                     982 	.db #0x26	; 38
      000334 26                     983 	.db #0x26	; 38
      000335 26                     984 	.db #0x26	; 38
      000336 26                     985 	.db #0x26	; 38
      000337 26                     986 	.db #0x26	; 38
      000338 26                     987 	.db #0x26	; 38
      000339 26                     988 	.db #0x26	; 38
      00033A 26                     989 	.db #0x26	; 38
      00033B 26                     990 	.db #0x26	; 38
      00033C 26                     991 	.db #0x26	; 38
      00033D 26                     992 	.db #0x26	; 38
      00033E 26                     993 	.db #0x26	; 38
      00033F 26                     994 	.db #0x26	; 38
      000340 26                     995 	.db #0x26	; 38
      000341 26                     996 	.db #0x26	; 38
      000342 26                     997 	.db #0x26	; 38
      000343 26                     998 	.db #0x26	; 38
      000344 26                     999 	.db #0x26	; 38
      000345 26                    1000 	.db #0x26	; 38
      000346 26                    1001 	.db #0x26	; 38
      000347 26                    1002 	.db #0x26	; 38
      000348 26                    1003 	.db #0x26	; 38
      000349 26                    1004 	.db #0x26	; 38
      00034A 26                    1005 	.db #0x26	; 38
      00034B 26                    1006 	.db #0x26	; 38
      00034C 26                    1007 	.db #0x26	; 38
      00034D 26                    1008 	.db #0x26	; 38
      00034E 26                    1009 	.db #0x26	; 38
      00034F 26                    1010 	.db #0x26	; 38
      000350 26                    1011 	.db #0x26	; 38
      000351 26                    1012 	.db #0x26	; 38
      000352 26                    1013 	.db #0x26	; 38
      000353 26                    1014 	.db #0x26	; 38
      000354 26                    1015 	.db #0x26	; 38
      000355 26                    1016 	.db #0x26	; 38
      000356 26                    1017 	.db #0x26	; 38
      000357 26                    1018 	.db #0x26	; 38
      000358 26                    1019 	.db #0x26	; 38
      000359 26                    1020 	.db #0x26	; 38
      00035A 26                    1021 	.db #0x26	; 38
      00035B 26                    1022 	.db #0x26	; 38
      00035C 26                    1023 	.db #0x26	; 38
      00035D 26                    1024 	.db #0x26	; 38
      00035E 26                    1025 	.db #0x26	; 38
      00035F 26                    1026 	.db #0x26	; 38
      000360 26                    1027 	.db #0x26	; 38
      000361 26                    1028 	.db #0x26	; 38
      000362 26                    1029 	.db #0x26	; 38
      000363 26                    1030 	.db #0x26	; 38
      000364 26                    1031 	.db #0x26	; 38
      000365 26                    1032 	.db #0x26	; 38
      000366 26                    1033 	.db #0x26	; 38
      000367 26                    1034 	.db #0x26	; 38
      000368 26                    1035 	.db #0x26	; 38
      000369 26                    1036 	.db #0x26	; 38
      00036A 26                    1037 	.db #0x26	; 38
      00036B 26                    1038 	.db #0x26	; 38
      00036C 26                    1039 	.db #0x26	; 38
      00036D 26                    1040 	.db #0x26	; 38
      00036E 26                    1041 	.db #0x26	; 38
      00036F 26                    1042 	.db #0x26	; 38
      000370 26                    1043 	.db #0x26	; 38
      000371 26                    1044 	.db #0x26	; 38
      000372 26                    1045 	.db #0x26	; 38
      000373 26                    1046 	.db #0x26	; 38
      000374 26                    1047 	.db #0x26	; 38
      000375 26                    1048 	.db #0x26	; 38
      000376 26                    1049 	.db #0x26	; 38
      000377 26                    1050 	.db #0x26	; 38
      000378 25                    1051 	.db #0x25	; 37
      000379 26                    1052 	.db #0x26	; 38
      00037A 26                    1053 	.db #0x26	; 38
      00037B 26                    1054 	.db #0x26	; 38
      00037C 26                    1055 	.db #0x26	; 38
      00037D 26                    1056 	.db #0x26	; 38
      00037E 26                    1057 	.db #0x26	; 38
      00037F 26                    1058 	.db #0x26	; 38
      000380 26                    1059 	.db #0x26	; 38
      000381 26                    1060 	.db #0x26	; 38
      000382 26                    1061 	.db #0x26	; 38
      000383 26                    1062 	.db #0x26	; 38
      000384 26                    1063 	.db #0x26	; 38
      000385 26                    1064 	.db #0x26	; 38
      000386 26                    1065 	.db #0x26	; 38
      000387 26                    1066 	.db #0x26	; 38
      000388 26                    1067 	.db #0x26	; 38
      000389 26                    1068 	.db #0x26	; 38
      00038A 26                    1069 	.db #0x26	; 38
      00038B 26                    1070 	.db #0x26	; 38
      00038C 26                    1071 	.db #0x26	; 38
      00038D 26                    1072 	.db #0x26	; 38
      00038E 26                    1073 	.db #0x26	; 38
      00038F 26                    1074 	.db #0x26	; 38
      000390 26                    1075 	.db #0x26	; 38
      000391 26                    1076 	.db #0x26	; 38
      000392 26                    1077 	.db #0x26	; 38
      000393 26                    1078 	.db #0x26	; 38
      000394 26                    1079 	.db #0x26	; 38
      000395 26                    1080 	.db #0x26	; 38
      000396 26                    1081 	.db #0x26	; 38
      000397 26                    1082 	.db #0x26	; 38
      000398 27                    1083 	.db #0x27	; 39
      000399 28                    1084 	.db #0x28	; 40
      00039A 26                    1085 	.db #0x26	; 38
      00039B 26                    1086 	.db #0x26	; 38
      00039C 26                    1087 	.db #0x26	; 38
      00039D 26                    1088 	.db #0x26	; 38
      00039E 26                    1089 	.db #0x26	; 38
      00039F 26                    1090 	.db #0x26	; 38
      0003A0 26                    1091 	.db #0x26	; 38
      0003A1 26                    1092 	.db #0x26	; 38
      0003A2 26                    1093 	.db #0x26	; 38
      0003A3 26                    1094 	.db #0x26	; 38
      0003A4 26                    1095 	.db #0x26	; 38
      0003A5 26                    1096 	.db #0x26	; 38
      0003A6 26                    1097 	.db #0x26	; 38
      0003A7 26                    1098 	.db #0x26	; 38
      0003A8 26                    1099 	.db #0x26	; 38
      0003A9 26                    1100 	.db #0x26	; 38
      0003AA 26                    1101 	.db #0x26	; 38
      0003AB 26                    1102 	.db #0x26	; 38
      0003AC 26                    1103 	.db #0x26	; 38
      0003AD 26                    1104 	.db #0x26	; 38
      0003AE 26                    1105 	.db #0x26	; 38
      0003AF 26                    1106 	.db #0x26	; 38
      0003B0 26                    1107 	.db #0x26	; 38
      0003B1 26                    1108 	.db #0x26	; 38
      0003B2 26                    1109 	.db #0x26	; 38
      0003B3 26                    1110 	.db #0x26	; 38
      0003B4 26                    1111 	.db #0x26	; 38
      0003B5 26                    1112 	.db #0x26	; 38
      0003B6 26                    1113 	.db #0x26	; 38
      0003B7 26                    1114 	.db #0x26	; 38
      0003B8 2A                    1115 	.db #0x2a	; 42
      0003B9 29                    1116 	.db #0x29	; 41
      0003BA 26                    1117 	.db #0x26	; 38
      0003BB 26                    1118 	.db #0x26	; 38
      0003BC 26                    1119 	.db #0x26	; 38
      0003BD 26                    1120 	.db #0x26	; 38
      0003BE 26                    1121 	.db #0x26	; 38
      0003BF 26                    1122 	.db #0x26	; 38
      0003C0 26                    1123 	.db #0x26	; 38
      0003C1 26                    1124 	.db #0x26	; 38
      0003C2 26                    1125 	.db #0x26	; 38
      0003C3 26                    1126 	.db #0x26	; 38
      0003C4 26                    1127 	.db #0x26	; 38
      0003C5 26                    1128 	.db #0x26	; 38
      0003C6 26                    1129 	.db #0x26	; 38
      0003C7 26                    1130 	.db #0x26	; 38
      0003C8 26                    1131 	.db #0x26	; 38
      0003C9 26                    1132 	.db #0x26	; 38
      0003CA 26                    1133 	.db #0x26	; 38
      0003CB 26                    1134 	.db #0x26	; 38
      0003CC 26                    1135 	.db #0x26	; 38
      0003CD 26                    1136 	.db #0x26	; 38
      0003CE 26                    1137 	.db #0x26	; 38
      0003CF 26                    1138 	.db #0x26	; 38
      0003D0 26                    1139 	.db #0x26	; 38
      0003D1 26                    1140 	.db #0x26	; 38
      0003D2 26                    1141 	.db #0x26	; 38
      0003D3 26                    1142 	.db #0x26	; 38
      0003D4 26                    1143 	.db #0x26	; 38
      0003D5 26                    1144 	.db #0x26	; 38
      0003D6 26                    1145 	.db #0x26	; 38
      0003D7 26                    1146 	.db #0x26	; 38
      0003D8 26                    1147 	.db #0x26	; 38
      0003D9 26                    1148 	.db #0x26	; 38
      0003DA 26                    1149 	.db #0x26	; 38
      0003DB 26                    1150 	.db #0x26	; 38
      0003DC 26                    1151 	.db #0x26	; 38
      0003DD 26                    1152 	.db #0x26	; 38
      0003DE 26                    1153 	.db #0x26	; 38
      0003DF 26                    1154 	.db #0x26	; 38
      0003E0 26                    1155 	.db #0x26	; 38
      0003E1 26                    1156 	.db #0x26	; 38
      0003E2 26                    1157 	.db #0x26	; 38
      0003E3 26                    1158 	.db #0x26	; 38
      0003E4 26                    1159 	.db #0x26	; 38
      0003E5 26                    1160 	.db #0x26	; 38
      0003E6 26                    1161 	.db #0x26	; 38
      0003E7 26                    1162 	.db #0x26	; 38
      0003E8 26                    1163 	.db #0x26	; 38
      0003E9 26                    1164 	.db #0x26	; 38
      0003EA 26                    1165 	.db #0x26	; 38
      0003EB 26                    1166 	.db #0x26	; 38
      0003EC 26                    1167 	.db #0x26	; 38
      0003ED 26                    1168 	.db #0x26	; 38
      0003EE 26                    1169 	.db #0x26	; 38
      0003EF 26                    1170 	.db #0x26	; 38
      0003F0 26                    1171 	.db #0x26	; 38
      0003F1 26                    1172 	.db #0x26	; 38
      0003F2 26                    1173 	.db #0x26	; 38
      0003F3 26                    1174 	.db #0x26	; 38
      0003F4 26                    1175 	.db #0x26	; 38
      0003F5 26                    1176 	.db #0x26	; 38
      0003F6 26                    1177 	.db #0x26	; 38
      0003F7 26                    1178 	.db #0x26	; 38
      0003F8 26                    1179 	.db #0x26	; 38
      0003F9 26                    1180 	.db #0x26	; 38
      0003FA 26                    1181 	.db #0x26	; 38
      0003FB 26                    1182 	.db #0x26	; 38
      0003FC 26                    1183 	.db #0x26	; 38
      0003FD 26                    1184 	.db #0x26	; 38
      0003FE 26                    1185 	.db #0x26	; 38
      0003FF 26                    1186 	.db #0x26	; 38
      000400 26                    1187 	.db #0x26	; 38
      000401 26                    1188 	.db #0x26	; 38
      000402 26                    1189 	.db #0x26	; 38
      000403 26                    1190 	.db #0x26	; 38
      000404 26                    1191 	.db #0x26	; 38
      000405 26                    1192 	.db #0x26	; 38
      000406 26                    1193 	.db #0x26	; 38
      000407 26                    1194 	.db #0x26	; 38
      000408 26                    1195 	.db #0x26	; 38
      000409 26                    1196 	.db #0x26	; 38
      00040A 26                    1197 	.db #0x26	; 38
      00040B 26                    1198 	.db #0x26	; 38
      00040C 26                    1199 	.db #0x26	; 38
      00040D 26                    1200 	.db #0x26	; 38
      00040E 26                    1201 	.db #0x26	; 38
      00040F 26                    1202 	.db #0x26	; 38
      000410 26                    1203 	.db #0x26	; 38
      000411 26                    1204 	.db #0x26	; 38
      000412 26                    1205 	.db #0x26	; 38
      000413 26                    1206 	.db #0x26	; 38
      000414 26                    1207 	.db #0x26	; 38
      000415 26                    1208 	.db #0x26	; 38
      000416 26                    1209 	.db #0x26	; 38
      000417 26                    1210 	.db #0x26	; 38
      000418 26                    1211 	.db #0x26	; 38
      000419 26                    1212 	.db #0x26	; 38
      00041A 26                    1213 	.db #0x26	; 38
      00041B 26                    1214 	.db #0x26	; 38
      00041C 26                    1215 	.db #0x26	; 38
      00041D 26                    1216 	.db #0x26	; 38
      00041E 26                    1217 	.db #0x26	; 38
      00041F 26                    1218 	.db #0x26	; 38
      000420 26                    1219 	.db #0x26	; 38
      000421 26                    1220 	.db #0x26	; 38
      000422 26                    1221 	.db #0x26	; 38
      000423 26                    1222 	.db #0x26	; 38
      000424 26                    1223 	.db #0x26	; 38
      000425 26                    1224 	.db #0x26	; 38
      000426 26                    1225 	.db #0x26	; 38
      000427 26                    1226 	.db #0x26	; 38
      000428 26                    1227 	.db #0x26	; 38
      000429 26                    1228 	.db #0x26	; 38
      00042A 26                    1229 	.db #0x26	; 38
      00042B 26                    1230 	.db #0x26	; 38
      00042C 26                    1231 	.db #0x26	; 38
      00042D 26                    1232 	.db #0x26	; 38
      00042E 26                    1233 	.db #0x26	; 38
      00042F 26                    1234 	.db #0x26	; 38
      000430 26                    1235 	.db #0x26	; 38
      000431 26                    1236 	.db #0x26	; 38
      000432 26                    1237 	.db #0x26	; 38
      000433 26                    1238 	.db #0x26	; 38
      000434 26                    1239 	.db #0x26	; 38
      000435 26                    1240 	.db #0x26	; 38
      000436 26                    1241 	.db #0x26	; 38
      000437 26                    1242 	.db #0x26	; 38
      000438 26                    1243 	.db #0x26	; 38
      000439 26                    1244 	.db #0x26	; 38
      00043A 26                    1245 	.db #0x26	; 38
      00043B 26                    1246 	.db #0x26	; 38
      00043C 26                    1247 	.db #0x26	; 38
      00043D 26                    1248 	.db #0x26	; 38
      00043E 26                    1249 	.db #0x26	; 38
      00043F 26                    1250 	.db #0x26	; 38
      000440 26                    1251 	.db #0x26	; 38
      000441 26                    1252 	.db #0x26	; 38
      000442 26                    1253 	.db #0x26	; 38
      000443 26                    1254 	.db #0x26	; 38
      000444 26                    1255 	.db #0x26	; 38
      000445 26                    1256 	.db #0x26	; 38
      000446 26                    1257 	.db #0x26	; 38
      000447 26                    1258 	.db #0x26	; 38
      000448 26                    1259 	.db #0x26	; 38
      000449 26                    1260 	.db #0x26	; 38
      00044A 26                    1261 	.db #0x26	; 38
      00044B 26                    1262 	.db #0x26	; 38
      00044C 26                    1263 	.db #0x26	; 38
      00044D 26                    1264 	.db #0x26	; 38
      00044E 26                    1265 	.db #0x26	; 38
      00044F 26                    1266 	.db #0x26	; 38
      000450 26                    1267 	.db #0x26	; 38
      000451 26                    1268 	.db #0x26	; 38
      000452 26                    1269 	.db #0x26	; 38
      000453 26                    1270 	.db #0x26	; 38
      000454 26                    1271 	.db #0x26	; 38
      000455 26                    1272 	.db #0x26	; 38
      000456 26                    1273 	.db #0x26	; 38
      000457 26                    1274 	.db #0x26	; 38
      000458 26                    1275 	.db #0x26	; 38
      000459 26                    1276 	.db #0x26	; 38
      00045A 26                    1277 	.db #0x26	; 38
      00045B 26                    1278 	.db #0x26	; 38
      00045C 26                    1279 	.db #0x26	; 38
      00045D 26                    1280 	.db #0x26	; 38
      00045E 26                    1281 	.db #0x26	; 38
      00045F 26                    1282 	.db #0x26	; 38
      000460 26                    1283 	.db #0x26	; 38
      000461 26                    1284 	.db #0x26	; 38
      000462 26                    1285 	.db #0x26	; 38
      000463 26                    1286 	.db #0x26	; 38
      000464 26                    1287 	.db #0x26	; 38
      000465 26                    1288 	.db #0x26	; 38
      000466 26                    1289 	.db #0x26	; 38
      000467 26                    1290 	.db #0x26	; 38
      000468 26                    1291 	.db #0x26	; 38
      000469 26                    1292 	.db #0x26	; 38
      00046A 26                    1293 	.db #0x26	; 38
      00046B 26                    1294 	.db #0x26	; 38
      00046C 26                    1295 	.db #0x26	; 38
      00046D 26                    1296 	.db #0x26	; 38
      00046E 26                    1297 	.db #0x26	; 38
      00046F 26                    1298 	.db #0x26	; 38
      000470 26                    1299 	.db #0x26	; 38
      000471 26                    1300 	.db #0x26	; 38
      000472 27                    1301 	.db #0x27	; 39
      000473 28                    1302 	.db #0x28	; 40
      000474 26                    1303 	.db #0x26	; 38
      000475 26                    1304 	.db #0x26	; 38
      000476 26                    1305 	.db #0x26	; 38
      000477 26                    1306 	.db #0x26	; 38
      000478 26                    1307 	.db #0x26	; 38
      000479 26                    1308 	.db #0x26	; 38
      00047A 26                    1309 	.db #0x26	; 38
      00047B 26                    1310 	.db #0x26	; 38
      00047C 26                    1311 	.db #0x26	; 38
      00047D 26                    1312 	.db #0x26	; 38
      00047E 26                    1313 	.db #0x26	; 38
      00047F 26                    1314 	.db #0x26	; 38
      000480 26                    1315 	.db #0x26	; 38
      000481 26                    1316 	.db #0x26	; 38
      000482 26                    1317 	.db #0x26	; 38
      000483 26                    1318 	.db #0x26	; 38
      000484 26                    1319 	.db #0x26	; 38
      000485 26                    1320 	.db #0x26	; 38
      000486 26                    1321 	.db #0x26	; 38
      000487                       1322 _backgroundtiles:
      000487 00                    1323 	.db #0x00	; 0
      000488 00                    1324 	.db #0x00	; 0
      000489 00                    1325 	.db #0x00	; 0
      00048A 00                    1326 	.db #0x00	; 0
      00048B 00                    1327 	.db #0x00	; 0
      00048C 00                    1328 	.db #0x00	; 0
      00048D 18                    1329 	.db #0x18	; 24
      00048E 18                    1330 	.db #0x18	; 24
      00048F 18                    1331 	.db #0x18	; 24
      000490 18                    1332 	.db #0x18	; 24
      000491 00                    1333 	.db #0x00	; 0
      000492 00                    1334 	.db #0x00	; 0
      000493 00                    1335 	.db #0x00	; 0
      000494 00                    1336 	.db #0x00	; 0
      000495 00                    1337 	.db #0x00	; 0
      000496 00                    1338 	.db #0x00	; 0
      000497 00                    1339 	.db #0x00	; 0
      000498 00                    1340 	.db #0x00	; 0
      000499 00                    1341 	.db #0x00	; 0
      00049A 00                    1342 	.db #0x00	; 0
      00049B 00                    1343 	.db #0x00	; 0
      00049C 00                    1344 	.db #0x00	; 0
      00049D 00                    1345 	.db #0x00	; 0
      00049E 00                    1346 	.db #0x00	; 0
      00049F 00                    1347 	.db #0x00	; 0
      0004A0 00                    1348 	.db #0x00	; 0
      0004A1 00                    1349 	.db #0x00	; 0
      0004A2 00                    1350 	.db #0x00	; 0
      0004A3 00                    1351 	.db #0x00	; 0
      0004A4 00                    1352 	.db #0x00	; 0
      0004A5 00                    1353 	.db #0x00	; 0
      0004A6 00                    1354 	.db #0x00	; 0
      0004A7 1F                    1355 	.db #0x1f	; 31
      0004A8 1F                    1356 	.db #0x1f	; 31
      0004A9 3F                    1357 	.db #0x3f	; 63
      0004AA 3F                    1358 	.db #0x3f	; 63
      0004AB 7F                    1359 	.db #0x7f	; 127
      0004AC 7F                    1360 	.db #0x7f	; 127
      0004AD FF                    1361 	.db #0xff	; 255
      0004AE FF                    1362 	.db #0xff	; 255
      0004AF FF                    1363 	.db #0xff	; 255
      0004B0 FF                    1364 	.db #0xff	; 255
      0004B1 FF                    1365 	.db #0xff	; 255
      0004B2 FF                    1366 	.db #0xff	; 255
      0004B3 FF                    1367 	.db #0xff	; 255
      0004B4 FF                    1368 	.db #0xff	; 255
      0004B5 FF                    1369 	.db #0xff	; 255
      0004B6 FF                    1370 	.db #0xff	; 255
      0004B7 F8                    1371 	.db #0xf8	; 248
      0004B8 F8                    1372 	.db #0xf8	; 248
      0004B9 FC                    1373 	.db #0xfc	; 252
      0004BA FC                    1374 	.db #0xfc	; 252
      0004BB FE                    1375 	.db #0xfe	; 254
      0004BC FE                    1376 	.db #0xfe	; 254
      0004BD FF                    1377 	.db #0xff	; 255
      0004BE FF                    1378 	.db #0xff	; 255
      0004BF FF                    1379 	.db #0xff	; 255
      0004C0 FF                    1380 	.db #0xff	; 255
      0004C1 FF                    1381 	.db #0xff	; 255
      0004C2 FF                    1382 	.db #0xff	; 255
      0004C3 FF                    1383 	.db #0xff	; 255
      0004C4 FF                    1384 	.db #0xff	; 255
      0004C5 FF                    1385 	.db #0xff	; 255
      0004C6 FF                    1386 	.db #0xff	; 255
      0004C7 FF                    1387 	.db #0xff	; 255
      0004C8 FF                    1388 	.db #0xff	; 255
      0004C9 FF                    1389 	.db #0xff	; 255
      0004CA FF                    1390 	.db #0xff	; 255
      0004CB FF                    1391 	.db #0xff	; 255
      0004CC FF                    1392 	.db #0xff	; 255
      0004CD FF                    1393 	.db #0xff	; 255
      0004CE FF                    1394 	.db #0xff	; 255
      0004CF FF                    1395 	.db #0xff	; 255
      0004D0 FF                    1396 	.db #0xff	; 255
      0004D1 FE                    1397 	.db #0xfe	; 254
      0004D2 FE                    1398 	.db #0xfe	; 254
      0004D3 FC                    1399 	.db #0xfc	; 252
      0004D4 FC                    1400 	.db #0xfc	; 252
      0004D5 F8                    1401 	.db #0xf8	; 248
      0004D6 F8                    1402 	.db #0xf8	; 248
      0004D7 FF                    1403 	.db #0xff	; 255
      0004D8 FF                    1404 	.db #0xff	; 255
      0004D9 FF                    1405 	.db #0xff	; 255
      0004DA FF                    1406 	.db #0xff	; 255
      0004DB FF                    1407 	.db #0xff	; 255
      0004DC FF                    1408 	.db #0xff	; 255
      0004DD FF                    1409 	.db #0xff	; 255
      0004DE FF                    1410 	.db #0xff	; 255
      0004DF FF                    1411 	.db #0xff	; 255
      0004E0 FF                    1412 	.db #0xff	; 255
      0004E1 7F                    1413 	.db #0x7f	; 127
      0004E2 7F                    1414 	.db #0x7f	; 127
      0004E3 3F                    1415 	.db #0x3f	; 63
      0004E4 3F                    1416 	.db #0x3f	; 63
      0004E5 1F                    1417 	.db #0x1f	; 31
      0004E6 1F                    1418 	.db #0x1f	; 31
      0004E7                       1419 _healthblock:
      0004E7 FE                    1420 	.db #0xfe	; 254
      0004E8 FE                    1421 	.db #0xfe	; 254
      0004E9 FE                    1422 	.db #0xfe	; 254
      0004EA FE                    1423 	.db #0xfe	; 254
      0004EB FE                    1424 	.db #0xfe	; 254
      0004EC FE                    1425 	.db #0xfe	; 254
      0004ED FE                    1426 	.db #0xfe	; 254
      0004EE FE                    1427 	.db #0xfe	; 254
      0004EF FE                    1428 	.db #0xfe	; 254
      0004F0 FE                    1429 	.db #0xfe	; 254
      0004F1 FE                    1430 	.db #0xfe	; 254
      0004F2 FE                    1431 	.db #0xfe	; 254
      0004F3 FE                    1432 	.db #0xfe	; 254
      0004F4 FE                    1433 	.db #0xfe	; 254
      0004F5 00                    1434 	.db #0x00	; 0
      0004F6 00                    1435 	.db #0x00	; 0
      0004F7                       1436 _enemy1:
      0004F7 3C                    1437 	.db #0x3c	; 60
      0004F8 3C                    1438 	.db #0x3c	; 60
      0004F9 7E                    1439 	.db #0x7e	; 126
      0004FA 7E                    1440 	.db #0x7e	; 126
      0004FB FF                    1441 	.db #0xff	; 255
      0004FC FF                    1442 	.db #0xff	; 255
      0004FD FF                    1443 	.db #0xff	; 255
      0004FE FF                    1444 	.db #0xff	; 255
      0004FF FF                    1445 	.db #0xff	; 255
      000500 FF                    1446 	.db #0xff	; 255
      000501 FF                    1447 	.db #0xff	; 255
      000502 FF                    1448 	.db #0xff	; 255
      000503 7E                    1449 	.db #0x7e	; 126
      000504 7E                    1450 	.db #0x7e	; 126
      000505 3C                    1451 	.db #0x3c	; 60
      000506 3C                    1452 	.db #0x3c	; 60
      000507                       1453 _projectile1:
      000507 3C                    1454 	.db #0x3c	; 60
      000508 3C                    1455 	.db #0x3c	; 60
      000509 7E                    1456 	.db #0x7e	; 126
      00050A 7E                    1457 	.db #0x7e	; 126
      00050B FF                    1458 	.db #0xff	; 255
      00050C FF                    1459 	.db #0xff	; 255
      00050D FF                    1460 	.db #0xff	; 255
      00050E FF                    1461 	.db #0xff	; 255
      00050F FF                    1462 	.db #0xff	; 255
      000510 FF                    1463 	.db #0xff	; 255
      000511 FF                    1464 	.db #0xff	; 255
      000512 FF                    1465 	.db #0xff	; 255
      000513 7E                    1466 	.db #0x7e	; 126
      000514 7E                    1467 	.db #0x7e	; 126
      000515 3C                    1468 	.db #0x3c	; 60
      000516 3C                    1469 	.db #0x3c	; 60
      000517                       1470 _BLANK:
      000517 26                    1471 	.db #0x26	; 38
      000518                       1472 _EMPTYSPRITE:
      000518 50                    1473 	.db #0x50	; 80	'P'
      000519                       1474 _ENEMYCOUNT:
      000519 05                    1475 	.db #0x05	; 5
      00051A                       1476 _xSpawnPositions:
      00051A 00                    1477 	.db #0x00	; 0
      00051B 60                    1478 	.db #0x60	; 96
      00051C B0                    1479 	.db #0xb0	; 176
      00051D 00                    1480 	.db #0x00	; 0
      00051E B0                    1481 	.db #0xb0	; 176
      00051F 00                    1482 	.db #0x00	; 0
      000520 60                    1483 	.db #0x60	; 96
      000521 B0                    1484 	.db #0xb0	; 176
      000522                       1485 _ySpawnPositions:
      000522 00                    1486 	.db #0x00	; 0
      000523 00                    1487 	.db #0x00	; 0
      000524 00                    1488 	.db #0x00	; 0
      000525 5C                    1489 	.db #0x5c	; 92
      000526 5C                    1490 	.db #0x5c	; 92
      000527 A0                    1491 	.db #0xa0	; 160
      000528 A0                    1492 	.db #0xa0	; 160
      000529 A0                    1493 	.db #0xa0	; 160
      00052A                       1494 _PROJECTILECOUNT:
      00052A 05                    1495 	.db #0x05	; 5
      00052B                       1496 _PLAYERSIZE:
      00052B 08                    1497 	.db #0x08	; 8
      00052C                       1498 _maxHull:
      00052C 64                    1499 	.db #0x64	;  100	'd'
      00052D                       1500 _maxShield:
      00052D 64                    1501 	.db #0x64	;  100	'd'
                                   1502 ;main.c:85: void setHealthBar(uint8_t row, uint8_t hp) {
                                   1503 ;	---------------------------------
                                   1504 ; Function setHealthBar
                                   1505 ; ---------------------------------
      00052E                       1506 _setHealthBar::
      00052E E8 FB                 1507 	add	sp, #-5
                                   1508 ;main.c:86: if (hp >= 80) {
      000530 F8 08                 1509 	ldhl	sp,	#8
      000532 7E                    1510 	ld	a, (hl)
      000533 D6 50                 1511 	sub	a, #0x50
      000535 38 31                 1512 	jr	C, 00102$
                                   1513 ;main.c:87: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      000537 F8 00                 1514 	ldhl	sp,	#0
      000539 4D                    1515 	ld	c, l
      00053A 44                    1516 	ld	b, h
      00053B 36 50                 1517 	ld	(hl), #0x50
      00053D 69                    1518 	ld	l, c
                                   1519 ;	spillPairReg hl
                                   1520 ;	spillPairReg hl
      00053E 60                    1521 	ld	h, b
                                   1522 ;	spillPairReg hl
                                   1523 ;	spillPairReg hl
      00053F 23                    1524 	inc	hl
      000540 36 50                 1525 	ld	(hl), #0x50
      000542 69                    1526 	ld	l, c
                                   1527 ;	spillPairReg hl
                                   1528 ;	spillPairReg hl
      000543 60                    1529 	ld	h, b
                                   1530 ;	spillPairReg hl
                                   1531 ;	spillPairReg hl
      000544 23                    1532 	inc	hl
      000545 23                    1533 	inc	hl
      000546 36 50                 1534 	ld	(hl), #0x50
      000548 69                    1535 	ld	l, c
                                   1536 ;	spillPairReg hl
                                   1537 ;	spillPairReg hl
      000549 60                    1538 	ld	h, b
                                   1539 ;	spillPairReg hl
                                   1540 ;	spillPairReg hl
      00054A 23                    1541 	inc	hl
      00054B 23                    1542 	inc	hl
      00054C 23                    1543 	inc	hl
      00054D 36 50                 1544 	ld	(hl), #0x50
      00054F 21 04 00              1545 	ld	hl, #0x0004
      000552 09                    1546 	add	hl, bc
      000553 36 50                 1547 	ld	(hl), #0x50
                                   1548 ;main.c:88: set_win_tiles(5,row,5,1,blockmap);
      000555 C5                    1549 	push	bc
      000556 21 05 01              1550 	ld	hl, #0x105
      000559 E5                    1551 	push	hl
      00055A F8 0B                 1552 	ldhl	sp,	#11
      00055C 66                    1553 	ld	h, (hl)
      00055D 2E 05                 1554 	ld	l, #0x05
      00055F E5                    1555 	push	hl
      000560 CDr00r00              1556 	call	_set_win_tiles
      000563 E8 06                 1557 	add	sp, #6
                                   1558 ;main.c:89: return;
      000565 C3r3Cr06              1559 	jp	00109$
      000568                       1560 00102$:
                                   1561 ;main.c:91: if (hp >= 60) {
      000568 F8 08                 1562 	ldhl	sp,	#8
      00056A 7E                    1563 	ld	a, (hl)
      00056B D6 3C                 1564 	sub	a, #0x3c
      00056D 38 31                 1565 	jr	C, 00104$
                                   1566 ;main.c:92: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      00056F F8 00                 1567 	ldhl	sp,	#0
      000571 4D                    1568 	ld	c, l
      000572 44                    1569 	ld	b, h
      000573 36 50                 1570 	ld	(hl), #0x50
      000575 69                    1571 	ld	l, c
                                   1572 ;	spillPairReg hl
                                   1573 ;	spillPairReg hl
      000576 60                    1574 	ld	h, b
                                   1575 ;	spillPairReg hl
                                   1576 ;	spillPairReg hl
      000577 23                    1577 	inc	hl
      000578 36 50                 1578 	ld	(hl), #0x50
      00057A 69                    1579 	ld	l, c
                                   1580 ;	spillPairReg hl
                                   1581 ;	spillPairReg hl
      00057B 60                    1582 	ld	h, b
                                   1583 ;	spillPairReg hl
                                   1584 ;	spillPairReg hl
      00057C 23                    1585 	inc	hl
      00057D 23                    1586 	inc	hl
      00057E 36 50                 1587 	ld	(hl), #0x50
      000580 69                    1588 	ld	l, c
                                   1589 ;	spillPairReg hl
                                   1590 ;	spillPairReg hl
      000581 60                    1591 	ld	h, b
                                   1592 ;	spillPairReg hl
                                   1593 ;	spillPairReg hl
      000582 23                    1594 	inc	hl
      000583 23                    1595 	inc	hl
      000584 23                    1596 	inc	hl
      000585 36 50                 1597 	ld	(hl), #0x50
      000587 21 04 00              1598 	ld	hl, #0x0004
      00058A 09                    1599 	add	hl, bc
      00058B 36 00                 1600 	ld	(hl), #0x00
                                   1601 ;main.c:93: set_win_tiles(5,row,5,1,blockmap);
      00058D C5                    1602 	push	bc
      00058E 21 05 01              1603 	ld	hl, #0x105
      000591 E5                    1604 	push	hl
      000592 F8 0B                 1605 	ldhl	sp,	#11
      000594 66                    1606 	ld	h, (hl)
      000595 2E 05                 1607 	ld	l, #0x05
      000597 E5                    1608 	push	hl
      000598 CDr00r00              1609 	call	_set_win_tiles
      00059B E8 06                 1610 	add	sp, #6
                                   1611 ;main.c:94: return;
      00059D C3r3Cr06              1612 	jp	00109$
      0005A0                       1613 00104$:
                                   1614 ;main.c:96: if (hp >= 40) {
      0005A0 F8 08                 1615 	ldhl	sp,	#8
      0005A2 7E                    1616 	ld	a, (hl)
      0005A3 D6 28                 1617 	sub	a, #0x28
      0005A5 38 30                 1618 	jr	C, 00106$
                                   1619 ;main.c:97: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      0005A7 F8 00                 1620 	ldhl	sp,	#0
      0005A9 4D                    1621 	ld	c, l
      0005AA 44                    1622 	ld	b, h
      0005AB 36 50                 1623 	ld	(hl), #0x50
      0005AD 69                    1624 	ld	l, c
                                   1625 ;	spillPairReg hl
                                   1626 ;	spillPairReg hl
      0005AE 60                    1627 	ld	h, b
                                   1628 ;	spillPairReg hl
                                   1629 ;	spillPairReg hl
      0005AF 23                    1630 	inc	hl
      0005B0 36 50                 1631 	ld	(hl), #0x50
      0005B2 69                    1632 	ld	l, c
                                   1633 ;	spillPairReg hl
                                   1634 ;	spillPairReg hl
      0005B3 60                    1635 	ld	h, b
                                   1636 ;	spillPairReg hl
                                   1637 ;	spillPairReg hl
      0005B4 23                    1638 	inc	hl
      0005B5 23                    1639 	inc	hl
      0005B6 36 50                 1640 	ld	(hl), #0x50
      0005B8 59                    1641 	ld	e, c
      0005B9 50                    1642 	ld	d, b
      0005BA 13                    1643 	inc	de
      0005BB 13                    1644 	inc	de
      0005BC 13                    1645 	inc	de
      0005BD AF                    1646 	xor	a, a
      0005BE 12                    1647 	ld	(de), a
      0005BF 21 04 00              1648 	ld	hl, #0x0004
      0005C2 09                    1649 	add	hl, bc
      0005C3 36 00                 1650 	ld	(hl), #0x00
                                   1651 ;main.c:98: set_win_tiles(5,row,5,1,blockmap);
      0005C5 C5                    1652 	push	bc
      0005C6 21 05 01              1653 	ld	hl, #0x105
      0005C9 E5                    1654 	push	hl
      0005CA F8 0B                 1655 	ldhl	sp,	#11
      0005CC 66                    1656 	ld	h, (hl)
      0005CD 2E 05                 1657 	ld	l, #0x05
      0005CF E5                    1658 	push	hl
      0005D0 CDr00r00              1659 	call	_set_win_tiles
      0005D3 E8 06                 1660 	add	sp, #6
                                   1661 ;main.c:99: return;
      0005D5 18 65                 1662 	jr	00109$
      0005D7                       1663 00106$:
                                   1664 ;main.c:101: if (hp >= 20) {
      0005D7 F8 08                 1665 	ldhl	sp,	#8
      0005D9 7E                    1666 	ld	a, (hl)
      0005DA D6 14                 1667 	sub	a, #0x14
      0005DC 38 30                 1668 	jr	C, 00108$
                                   1669 ;main.c:102: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      0005DE F8 00                 1670 	ldhl	sp,	#0
      0005E0 4D                    1671 	ld	c, l
      0005E1 44                    1672 	ld	b, h
      0005E2 36 50                 1673 	ld	(hl), #0x50
      0005E4 69                    1674 	ld	l, c
                                   1675 ;	spillPairReg hl
                                   1676 ;	spillPairReg hl
      0005E5 60                    1677 	ld	h, b
                                   1678 ;	spillPairReg hl
                                   1679 ;	spillPairReg hl
      0005E6 23                    1680 	inc	hl
      0005E7 36 50                 1681 	ld	(hl), #0x50
      0005E9 59                    1682 	ld	e, c
      0005EA 50                    1683 	ld	d, b
      0005EB 13                    1684 	inc	de
      0005EC 13                    1685 	inc	de
      0005ED AF                    1686 	xor	a, a
      0005EE 12                    1687 	ld	(de), a
      0005EF 59                    1688 	ld	e, c
      0005F0 50                    1689 	ld	d, b
      0005F1 13                    1690 	inc	de
      0005F2 13                    1691 	inc	de
      0005F3 13                    1692 	inc	de
      0005F4 AF                    1693 	xor	a, a
      0005F5 12                    1694 	ld	(de), a
      0005F6 21 04 00              1695 	ld	hl, #0x0004
      0005F9 09                    1696 	add	hl, bc
      0005FA 36 00                 1697 	ld	(hl), #0x00
                                   1698 ;main.c:103: set_win_tiles(5,row,5,1,blockmap);
      0005FC C5                    1699 	push	bc
      0005FD 21 05 01              1700 	ld	hl, #0x105
      000600 E5                    1701 	push	hl
      000601 F8 0B                 1702 	ldhl	sp,	#11
      000603 66                    1703 	ld	h, (hl)
      000604 2E 05                 1704 	ld	l, #0x05
      000606 E5                    1705 	push	hl
      000607 CDr00r00              1706 	call	_set_win_tiles
      00060A E8 06                 1707 	add	sp, #6
                                   1708 ;main.c:104: return;
      00060C 18 2E                 1709 	jr	00109$
      00060E                       1710 00108$:
                                   1711 ;main.c:106: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      00060E F8 00                 1712 	ldhl	sp,	#0
      000610 4D                    1713 	ld	c, l
      000611 44                    1714 	ld	b, h
      000612 36 50                 1715 	ld	(hl), #0x50
      000614 59                    1716 	ld	e, c
      000615 50                    1717 	ld	d, b
      000616 13                    1718 	inc	de
      000617 AF                    1719 	xor	a, a
      000618 12                    1720 	ld	(de), a
      000619 59                    1721 	ld	e, c
      00061A 50                    1722 	ld	d, b
      00061B 13                    1723 	inc	de
      00061C 13                    1724 	inc	de
      00061D AF                    1725 	xor	a, a
      00061E 12                    1726 	ld	(de), a
      00061F 59                    1727 	ld	e, c
      000620 50                    1728 	ld	d, b
      000621 13                    1729 	inc	de
      000622 13                    1730 	inc	de
      000623 13                    1731 	inc	de
      000624 AF                    1732 	xor	a, a
      000625 12                    1733 	ld	(de), a
      000626 21 04 00              1734 	ld	hl, #0x0004
      000629 09                    1735 	add	hl, bc
      00062A 36 00                 1736 	ld	(hl), #0x00
                                   1737 ;main.c:107: set_win_tiles(5,row,5,1,blockmap);
      00062C C5                    1738 	push	bc
      00062D 21 05 01              1739 	ld	hl, #0x105
      000630 E5                    1740 	push	hl
      000631 F8 0B                 1741 	ldhl	sp,	#11
      000633 66                    1742 	ld	h, (hl)
      000634 2E 05                 1743 	ld	l, #0x05
      000636 E5                    1744 	push	hl
      000637 CDr00r00              1745 	call	_set_win_tiles
      00063A E8 06                 1746 	add	sp, #6
                                   1747 ;main.c:108: return;
      00063C                       1748 00109$:
                                   1749 ;main.c:110: }
      00063C E8 05                 1750 	add	sp, #5
      00063E C9                    1751 	ret
                                   1752 ;main.c:112: void updateDirection() {
                                   1753 ;	---------------------------------
                                   1754 ; Function updateDirection
                                   1755 ; ---------------------------------
      00063F                       1756 _updateDirection::
      00063F E8 FC                 1757 	add	sp, #-4
                                   1758 ;main.c:116: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000641 21r82r00              1759 	ld	hl, #_joydata
      000644 5E                    1760 	ld	e, (hl)
      000645 7B                    1761 	ld	a, e
      000646 E6 01                 1762 	and	a, #0x01
      000648 F8 00                 1763 	ldhl	sp,	#0
      00064A 22                    1764 	ld	(hl+), a
      00064B AF                    1765 	xor	a, a
      00064C 22                    1766 	ld	(hl+), a
      00064D 7B                    1767 	ld	a, e
      00064E E6 04                 1768 	and	a, #0x04
      000650 22                    1769 	ld	(hl+), a
      000651 AF                    1770 	xor	a, a
      000652 32                    1771 	ld	(hl-), a
      000653 2B                    1772 	dec	hl
      000654 7B                    1773 	ld	a, e
      000655 E6 08                 1774 	and	a, #0x08
      000657 4F                    1775 	ld	c, a
      000658 06 00                 1776 	ld	b, #0x00
      00065A 3A                    1777 	ld	a, (hl-)
      00065B B6                    1778 	or	a, (hl)
      00065C 28 14                 1779 	jr	Z, 00102$
      00065E F8 03                 1780 	ldhl	sp,	#3
      000660 3A                    1781 	ld	a, (hl-)
      000661 B6                    1782 	or	a, (hl)
      000662 20 0E                 1783 	jr	NZ, 00102$
      000664 78                    1784 	ld	a, b
      000665 B1                    1785 	or	a, c
      000666 20 0A                 1786 	jr	NZ, 00102$
                                   1787 ;main.c:117: xDir = 1;
      000668 21r24r00              1788 	ld	hl, #_xDir
      00066B 36 01                 1789 	ld	(hl), #0x01
                                   1790 ;main.c:118: yDir = 0;
      00066D 21r25r00              1791 	ld	hl, #_yDir
      000670 36 00                 1792 	ld	(hl), #0x00
      000672                       1793 00102$:
                                   1794 ;main.c:120: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000672 7B                    1795 	ld	a, e
      000673 E6 02                 1796 	and	a, #0x02
      000675 5F                    1797 	ld	e, a
      000676 16 00                 1798 	ld	d, #0x00
      000678 7A                    1799 	ld	a, d
      000679 B3                    1800 	or	a, e
      00067A 28 14                 1801 	jr	Z, 00106$
      00067C F8 03                 1802 	ldhl	sp,	#3
      00067E 3A                    1803 	ld	a, (hl-)
      00067F B6                    1804 	or	a, (hl)
      000680 20 0E                 1805 	jr	NZ, 00106$
      000682 78                    1806 	ld	a, b
      000683 B1                    1807 	or	a, c
      000684 20 0A                 1808 	jr	NZ, 00106$
                                   1809 ;main.c:121: xDir = -1;
      000686 21r24r00              1810 	ld	hl, #_xDir
      000689 36 FF                 1811 	ld	(hl), #0xff
                                   1812 ;main.c:122: yDir = 0;
      00068B 21r25r00              1813 	ld	hl, #_yDir
      00068E 36 00                 1814 	ld	(hl), #0x00
      000690                       1815 00106$:
                                   1816 ;main.c:124: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000690 F8 03                 1817 	ldhl	sp,	#3
      000692 3A                    1818 	ld	a, (hl-)
      000693 B6                    1819 	or	a, (hl)
      000694 28 13                 1820 	jr	Z, 00110$
      000696 7A                    1821 	ld	a, d
      000697 B3                    1822 	or	a, e
      000698 20 0F                 1823 	jr	NZ, 00110$
      00069A 2B                    1824 	dec	hl
      00069B 3A                    1825 	ld	a, (hl-)
      00069C B6                    1826 	or	a, (hl)
      00069D 20 0A                 1827 	jr	NZ, 00110$
                                   1828 ;main.c:125: xDir = 0;
      00069F 21r24r00              1829 	ld	hl, #_xDir
      0006A2 36 00                 1830 	ld	(hl), #0x00
                                   1831 ;main.c:126: yDir = -1;
      0006A4 21r25r00              1832 	ld	hl, #_yDir
      0006A7 36 FF                 1833 	ld	(hl), #0xff
      0006A9                       1834 00110$:
                                   1835 ;main.c:128: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      0006A9 78                    1836 	ld	a, b
      0006AA B1                    1837 	or	a, c
      0006AB 28 14                 1838 	jr	Z, 00114$
      0006AD 7A                    1839 	ld	a, d
      0006AE B3                    1840 	or	a, e
      0006AF 20 10                 1841 	jr	NZ, 00114$
      0006B1 F8 01                 1842 	ldhl	sp,	#1
      0006B3 3A                    1843 	ld	a, (hl-)
      0006B4 B6                    1844 	or	a, (hl)
      0006B5 20 0A                 1845 	jr	NZ, 00114$
                                   1846 ;main.c:129: xDir = 0;
      0006B7 21r24r00              1847 	ld	hl, #_xDir
      0006BA 36 00                 1848 	ld	(hl), #0x00
                                   1849 ;main.c:130: yDir = 1;
      0006BC 21r25r00              1850 	ld	hl, #_yDir
      0006BF 36 01                 1851 	ld	(hl), #0x01
      0006C1                       1852 00114$:
                                   1853 ;main.c:134: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      0006C1 F8 03                 1854 	ldhl	sp,	#3
      0006C3 3A                    1855 	ld	a, (hl-)
      0006C4 B6                    1856 	or	a, (hl)
      0006C5 28 0F                 1857 	jr	Z, 00118$
      0006C7 2B                    1858 	dec	hl
      0006C8 3A                    1859 	ld	a, (hl-)
      0006C9 B6                    1860 	or	a, (hl)
      0006CA 28 0A                 1861 	jr	Z, 00118$
                                   1862 ;main.c:135: xDir = 1;
      0006CC 21r24r00              1863 	ld	hl, #_xDir
      0006CF 36 01                 1864 	ld	(hl), #0x01
                                   1865 ;main.c:136: yDir = -1;
      0006D1 21r25r00              1866 	ld	hl, #_yDir
      0006D4 36 FF                 1867 	ld	(hl), #0xff
      0006D6                       1868 00118$:
                                   1869 ;main.c:138: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      0006D6 F8 03                 1870 	ldhl	sp,	#3
      0006D8 3A                    1871 	ld	a, (hl-)
      0006D9 B6                    1872 	or	a, (hl)
      0006DA 28 0E                 1873 	jr	Z, 00121$
      0006DC 7A                    1874 	ld	a, d
      0006DD B3                    1875 	or	a, e
      0006DE 28 0A                 1876 	jr	Z, 00121$
                                   1877 ;main.c:139: xDir = -1;
      0006E0 21r24r00              1878 	ld	hl, #_xDir
      0006E3 36 FF                 1879 	ld	(hl), #0xff
                                   1880 ;main.c:140: yDir = -1;
      0006E5 21r25r00              1881 	ld	hl, #_yDir
      0006E8 36 FF                 1882 	ld	(hl), #0xff
      0006EA                       1883 00121$:
                                   1884 ;main.c:142: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      0006EA 78                    1885 	ld	a, b
      0006EB B1                    1886 	or	a, c
      0006EC 28 10                 1887 	jr	Z, 00124$
      0006EE F8 01                 1888 	ldhl	sp,	#1
      0006F0 3A                    1889 	ld	a, (hl-)
      0006F1 B6                    1890 	or	a, (hl)
      0006F2 28 0A                 1891 	jr	Z, 00124$
                                   1892 ;main.c:143: xDir = 1;
      0006F4 21r24r00              1893 	ld	hl, #_xDir
      0006F7 36 01                 1894 	ld	(hl), #0x01
                                   1895 ;main.c:144: yDir = 1;
      0006F9 21r25r00              1896 	ld	hl, #_yDir
      0006FC 36 01                 1897 	ld	(hl), #0x01
      0006FE                       1898 00124$:
                                   1899 ;main.c:146: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      0006FE 78                    1900 	ld	a, b
      0006FF B1                    1901 	or	a, c
      000700 28 0E                 1902 	jr	Z, 00127$
      000702 7A                    1903 	ld	a, d
      000703 B3                    1904 	or	a, e
      000704 28 0A                 1905 	jr	Z, 00127$
                                   1906 ;main.c:147: xDir = -1;
      000706 21r24r00              1907 	ld	hl, #_xDir
      000709 36 FF                 1908 	ld	(hl), #0xff
                                   1909 ;main.c:148: yDir = 1;
      00070B 21r25r00              1910 	ld	hl, #_yDir
      00070E 36 01                 1911 	ld	(hl), #0x01
      000710                       1912 00127$:
                                   1913 ;main.c:153: if (xDir == 0 && yDir == 0) {
      000710 FAr24r00              1914 	ld	a, (#_xDir)
      000713 B7                    1915 	or	a, a
      000714 20 07                 1916 	jr	NZ, 00130$
      000716 FAr25r00              1917 	ld	a, (#_yDir)
      000719 B7                    1918 	or	a, a
                                   1919 ;main.c:154: return;
      00071A CArCBr07              1920 	jp	Z,00157$
      00071D                       1921 00130$:
                                   1922 ;main.c:157: uint8_t direction = 0;
      00071D 0E 00                 1923 	ld	c, #0x00
                                   1924 ;main.c:159: if (xDir == 0 && yDir < 0) {
      00071F FAr25r00              1925 	ld	a, (#_yDir)
      000722 07                    1926 	rlca
      000723 E6 01                 1927 	and	a,#0x01
      000725 F8 02                 1928 	ldhl	sp,	#2
      000727 77                    1929 	ld	(hl), a
      000728 FAr24r00              1930 	ld	a, (#_xDir)
      00072B B7                    1931 	or	a, a
      00072C 20 08                 1932 	jr	NZ, 00133$
      00072E F8 02                 1933 	ldhl	sp,	#2
      000730 7E                    1934 	ld	a, (hl)
      000731 B7                    1935 	or	a, a
      000732 28 02                 1936 	jr	Z, 00133$
                                   1937 ;main.c:160: direction = 0;
      000734 0E 00                 1938 	ld	c, #0x00
      000736                       1939 00133$:
                                   1940 ;main.c:162: if (xDir > 0 && yDir < 0) {
      000736 21r24r00              1941 	ld	hl, #_xDir
      000739 5E                    1942 	ld	e, (hl)
      00073A AF                    1943 	xor	a, a
      00073B 57                    1944 	ld	d, a
      00073C 96                    1945 	sub	a, (hl)
      00073D CB 7B                 1946 	bit	7, e
      00073F 28 07                 1947 	jr	Z, 00349$
      000741 CB 7A                 1948 	bit	7, d
      000743 20 08                 1949 	jr	NZ, 00350$
      000745 BF                    1950 	cp	a, a
      000746 18 05                 1951 	jr	00350$
      000748                       1952 00349$:
      000748 CB 7A                 1953 	bit	7, d
      00074A 28 01                 1954 	jr	Z, 00350$
      00074C 37                    1955 	scf
      00074D                       1956 00350$:
      00074D 3E 00                 1957 	ld	a, #0x00
      00074F 17                    1958 	rla
      000750 47                    1959 	ld	b, a
      000751 B7                    1960 	or	a, a
      000752 28 08                 1961 	jr	Z, 00136$
      000754 F8 02                 1962 	ldhl	sp,	#2
      000756 7E                    1963 	ld	a, (hl)
      000757 B7                    1964 	or	a, a
      000758 28 02                 1965 	jr	Z, 00136$
                                   1966 ;main.c:163: direction = 1;
      00075A 0E 01                 1967 	ld	c, #0x01
      00075C                       1968 00136$:
                                   1969 ;main.c:165: if (xDir > 0 && yDir == 0) {
      00075C 78                    1970 	ld	a, b
      00075D B7                    1971 	or	a, a
      00075E 28 08                 1972 	jr	Z, 00139$
      000760 FAr25r00              1973 	ld	a, (#_yDir)
      000763 B7                    1974 	or	a, a
      000764 20 02                 1975 	jr	NZ, 00139$
                                   1976 ;main.c:166: direction = 2;
      000766 0E 02                 1977 	ld	c, #0x02
      000768                       1978 00139$:
                                   1979 ;main.c:168: if (xDir > 0 && yDir > 0) {
      000768 21r25r00              1980 	ld	hl, #_yDir
      00076B 5E                    1981 	ld	e, (hl)
      00076C AF                    1982 	xor	a, a
      00076D 57                    1983 	ld	d, a
      00076E 96                    1984 	sub	a, (hl)
      00076F CB 7B                 1985 	bit	7, e
      000771 28 07                 1986 	jr	Z, 00351$
      000773 CB 7A                 1987 	bit	7, d
      000775 20 08                 1988 	jr	NZ, 00352$
      000777 BF                    1989 	cp	a, a
      000778 18 05                 1990 	jr	00352$
      00077A                       1991 00351$:
      00077A CB 7A                 1992 	bit	7, d
      00077C 28 01                 1993 	jr	Z, 00352$
      00077E 37                    1994 	scf
      00077F                       1995 00352$:
      00077F 3E 00                 1996 	ld	a, #0x00
      000781 17                    1997 	rla
      000782 F8 03                 1998 	ldhl	sp,	#3
      000784 77                    1999 	ld	(hl), a
      000785 78                    2000 	ld	a, b
      000786 B7                    2001 	or	a, a
      000787 28 06                 2002 	jr	Z, 00142$
      000789 7E                    2003 	ld	a, (hl)
      00078A B7                    2004 	or	a, a
      00078B 28 02                 2005 	jr	Z, 00142$
                                   2006 ;main.c:169: direction = 3;
      00078D 0E 03                 2007 	ld	c, #0x03
      00078F                       2008 00142$:
                                   2009 ;main.c:171: if (xDir == 0 && yDir > 0) {
      00078F FAr24r00              2010 	ld	a, (#_xDir)
      000792 B7                    2011 	or	a, a
      000793 20 08                 2012 	jr	NZ, 00145$
      000795 F8 03                 2013 	ldhl	sp,	#3
      000797 7E                    2014 	ld	a, (hl)
      000798 B7                    2015 	or	a, a
      000799 28 02                 2016 	jr	Z, 00145$
                                   2017 ;main.c:172: direction = 4;
      00079B 0E 04                 2018 	ld	c, #0x04
      00079D                       2019 00145$:
                                   2020 ;main.c:174: if (xDir < 0 && yDir > 0) {
      00079D FAr24r00              2021 	ld	a, (#_xDir)
      0007A0 07                    2022 	rlca
      0007A1 E6 01                 2023 	and	a,#0x01
      0007A3 47                    2024 	ld	b, a
      0007A4 B7                    2025 	or	a, a
      0007A5 28 08                 2026 	jr	Z, 00148$
      0007A7 F8 03                 2027 	ldhl	sp,	#3
      0007A9 7E                    2028 	ld	a, (hl)
      0007AA B7                    2029 	or	a, a
      0007AB 28 02                 2030 	jr	Z, 00148$
                                   2031 ;main.c:175: direction = 5;
      0007AD 0E 05                 2032 	ld	c, #0x05
      0007AF                       2033 00148$:
                                   2034 ;main.c:177: if (xDir < 0 && yDir == 0) {
      0007AF 78                    2035 	ld	a, b
      0007B0 B7                    2036 	or	a, a
      0007B1 28 08                 2037 	jr	Z, 00151$
      0007B3 FAr25r00              2038 	ld	a, (#_yDir)
      0007B6 B7                    2039 	or	a, a
      0007B7 20 02                 2040 	jr	NZ, 00151$
                                   2041 ;main.c:178: direction = 6;
      0007B9 0E 06                 2042 	ld	c, #0x06
      0007BB                       2043 00151$:
                                   2044 ;main.c:180: if (xDir < 0 && yDir < 0) {
      0007BB 78                    2045 	ld	a, b
      0007BC B7                    2046 	or	a, a
      0007BD 28 08                 2047 	jr	Z, 00154$
      0007BF F8 02                 2048 	ldhl	sp,	#2
      0007C1 7E                    2049 	ld	a, (hl)
      0007C2 B7                    2050 	or	a, a
      0007C3 28 02                 2051 	jr	Z, 00154$
                                   2052 ;main.c:181: direction = 7;
      0007C5 0E 07                 2053 	ld	c, #0x07
      0007C7                       2054 00154$:
                                   2055 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0007C7 21r02r00              2056 	ld	hl, #(_shadow_OAM + 2)
      0007CA 71                    2057 	ld	(hl), c
                                   2058 ;main.c:184: set_sprite_tile(0, direction);
      0007CB                       2059 00157$:
                                   2060 ;main.c:185: }
      0007CB E8 04                 2061 	add	sp, #4
      0007CD C9                    2062 	ret
                                   2063 ;main.c:217: void updateEnemyPositions() {
                                   2064 ;	---------------------------------
                                   2065 ; Function updateEnemyPositions
                                   2066 ; ---------------------------------
      0007CE                       2067 _updateEnemyPositions::
      0007CE E8 F0                 2068 	add	sp, #-16
                                   2069 ;main.c:220: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0007D0 F8 0F                 2070 	ldhl	sp,	#15
      0007D2 36 00                 2071 	ld	(hl), #0x00
      0007D4                       2072 00140$:
      0007D4 21r19r05              2073 	ld	hl, #_ENEMYCOUNT
      0007D7 4E                    2074 	ld	c, (hl)
      0007D8 F8 0F                 2075 	ldhl	sp,	#15
      0007DA 7E                    2076 	ld	a, (hl)
      0007DB 91                    2077 	sub	a, c
      0007DC D2rF5r0B              2078 	jp	NC, 00117$
                                   2079 ;main.c:222: enemies[i].x -= xOverflow;
      0007DF 7E                    2080 	ld	a, (hl)
      0007E0 16 00                 2081 	ld	d, #0x00
      0007E2 87                    2082 	add	a, a
      0007E3 CB 12                 2083 	rl	d
      0007E5 87                    2084 	add	a, a
      0007E6 CB 12                 2085 	rl	d
      0007E8 87                    2086 	add	a, a
      0007E9 CB 12                 2087 	rl	d
      0007EB 87                    2088 	add	a, a
      0007EC CB 12                 2089 	rl	d
                                   2090 ;main.c:232: if (enemies[i].y < playerDrawY) {
      0007EE 5F                    2091 	ld	e, a
      0007EF 21r00r00              2092 	ld	hl, #_enemies
      0007F2 19                    2093 	add	hl, de
      0007F3 E5                    2094 	push	hl
      0007F4 7D                    2095 	ld	a, l
      0007F5 F8 06                 2096 	ldhl	sp,	#6
      0007F7 77                    2097 	ld	(hl), a
      0007F8 E1                    2098 	pop	hl
      0007F9 7C                    2099 	ld	a, h
      0007FA F8 05                 2100 	ldhl	sp,	#5
                                   2101 ;main.c:222: enemies[i].x -= xOverflow;
      0007FC 32                    2102 	ld	(hl-), a
      0007FD 2A                    2103 	ld	a, (hl+)
      0007FE 5F                    2104 	ld	e, a
      0007FF 56                    2105 	ld	d, (hl)
      000800 1A                    2106 	ld	a, (de)
      000801 47                    2107 	ld	b, a
      000802 13                    2108 	inc	de
      000803 1A                    2109 	ld	a, (de)
      000804 4F                    2110 	ld	c, a
      000805 58                    2111 	ld	e, b
      000806 51                    2112 	ld	d, c
      000807 21r32r00              2113 	ld	hl, #_xOverflow
      00080A 2A                    2114 	ld	a,	(hl+)
      00080B 66                    2115 	ld	h, (hl)
      00080C 6F                    2116 	ld	l, a
      00080D 7B                    2117 	ld	a, e
      00080E 95                    2118 	sub	a, l
      00080F 5F                    2119 	ld	e, a
      000810 7A                    2120 	ld	a, d
      000811 9C                    2121 	sbc	a, h
      000812 F8 0C                 2122 	ldhl	sp,	#12
      000814 32                    2123 	ld	(hl-), a
      000815 73                    2124 	ld	(hl), e
      000816 F8 04                 2125 	ldhl	sp,#4
      000818 2A                    2126 	ld	a, (hl+)
      000819 5F                    2127 	ld	e, a
      00081A 56                    2128 	ld	d, (hl)
      00081B F8 0B                 2129 	ldhl	sp,	#11
      00081D 2A                    2130 	ld	a, (hl+)
      00081E 12                    2131 	ld	(de), a
      00081F 13                    2132 	inc	de
      000820 7E                    2133 	ld	a, (hl)
      000821 12                    2134 	ld	(de), a
                                   2135 ;main.c:223: enemies[i].y -= yOverflow;
      000822 F8 04                 2136 	ldhl	sp,#4
      000824 2A                    2137 	ld	a, (hl+)
      000825 5F                    2138 	ld	e, a
      000826 56                    2139 	ld	d, (hl)
      000827 21 02 00              2140 	ld	hl, #0x0002
      00082A 19                    2141 	add	hl, de
      00082B E5                    2142 	push	hl
      00082C 7D                    2143 	ld	a, l
      00082D F8 08                 2144 	ldhl	sp,	#8
      00082F 77                    2145 	ld	(hl), a
      000830 E1                    2146 	pop	hl
      000831 7C                    2147 	ld	a, h
      000832 F8 07                 2148 	ldhl	sp,	#7
      000834 32                    2149 	ld	(hl-), a
      000835 2A                    2150 	ld	a, (hl+)
      000836 5F                    2151 	ld	e, a
      000837 56                    2152 	ld	d, (hl)
      000838 1A                    2153 	ld	a, (de)
      000839 4F                    2154 	ld	c, a
      00083A 13                    2155 	inc	de
      00083B 1A                    2156 	ld	a, (de)
      00083C 47                    2157 	ld	b, a
      00083D 79                    2158 	ld	a, c
      00083E 21r34r00              2159 	ld	hl, #_yOverflow
      000841 96                    2160 	sub	a, (hl)
      000842 23                    2161 	inc	hl
      000843 4F                    2162 	ld	c, a
      000844 78                    2163 	ld	a, b
      000845 9E                    2164 	sbc	a, (hl)
      000846 47                    2165 	ld	b, a
      000847 F8 06                 2166 	ldhl	sp,	#6
      000849 2A                    2167 	ld	a,	(hl+)
      00084A 66                    2168 	ld	h, (hl)
      00084B 6F                    2169 	ld	l, a
      00084C 79                    2170 	ld	a, c
      00084D 22                    2171 	ld	(hl+), a
      00084E 70                    2172 	ld	(hl), b
                                   2173 ;main.c:226: if (enemies[i].x < playerDrawX) {
      00084F 21r2Cr00              2174 	ld	hl, #_playerDrawX
      000852 4E                    2175 	ld	c, (hl)
      000853 06 00                 2176 	ld	b, #0x00
                                   2177 ;main.c:239: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000855 F8 04                 2178 	ldhl	sp,#4
      000857 2A                    2179 	ld	a, (hl+)
      000858 5F                    2180 	ld	e, a
      000859 56                    2181 	ld	d, (hl)
      00085A 21 0E 00              2182 	ld	hl, #0x000e
      00085D 19                    2183 	add	hl, de
      00085E E5                    2184 	push	hl
      00085F 7D                    2185 	ld	a, l
      000860 F8 0A                 2186 	ldhl	sp,	#10
      000862 77                    2187 	ld	(hl), a
      000863 E1                    2188 	pop	hl
      000864 7C                    2189 	ld	a, h
      000865 F8 09                 2190 	ldhl	sp,	#9
      000867 77                    2191 	ld	(hl), a
                                   2192 ;main.c:227: enemies[i].xSpeed += enemies[i].accel;
      000868 F8 04                 2193 	ldhl	sp,#4
      00086A 2A                    2194 	ld	a, (hl+)
      00086B 5F                    2195 	ld	e, a
      00086C 56                    2196 	ld	d, (hl)
      00086D 21 0D 00              2197 	ld	hl, #0x000d
      000870 19                    2198 	add	hl, de
      000871 33                    2199 	inc	sp
      000872 33                    2200 	inc	sp
      000873 E5                    2201 	push	hl
      000874 F8 08                 2202 	ldhl	sp,#8
      000876 2A                    2203 	ld	a, (hl+)
      000877 5F                    2204 	ld	e, a
      000878 56                    2205 	ld	d, (hl)
      000879 1A                    2206 	ld	a, (de)
      00087A F8 0D                 2207 	ldhl	sp,	#13
      00087C 22                    2208 	ld	(hl+), a
      00087D D1                    2209 	pop	de
      00087E D5                    2210 	push	de
      00087F 1A                    2211 	ld	a, (de)
      000880 77                    2212 	ld	(hl), a
                                   2213 ;main.c:226: if (enemies[i].x < playerDrawX) {
      000881 F8 0B                 2214 	ldhl	sp,	#11
      000883 2A                    2215 	ld	a, (hl+)
      000884 91                    2216 	sub	a, c
      000885 7E                    2217 	ld	a, (hl)
      000886 98                    2218 	sbc	a, b
      000887 56                    2219 	ld	d, (hl)
      000888 78                    2220 	ld	a, b
      000889 CB 7F                 2221 	bit	7,a
      00088B 28 07                 2222 	jr	Z, 00273$
      00088D CB 7A                 2223 	bit	7, d
      00088F 20 08                 2224 	jr	NZ, 00274$
      000891 BF                    2225 	cp	a, a
      000892 18 05                 2226 	jr	00274$
      000894                       2227 00273$:
      000894 CB 7A                 2228 	bit	7, d
      000896 28 01                 2229 	jr	Z, 00274$
      000898 37                    2230 	scf
      000899                       2231 00274$:
      000899 30 0D                 2232 	jr	NC, 00102$
                                   2233 ;main.c:227: enemies[i].xSpeed += enemies[i].accel;
      00089B F8 0E                 2234 	ldhl	sp,	#14
      00089D 3A                    2235 	ld	a, (hl-)
      00089E 86                    2236 	add	a, (hl)
      00089F 4F                    2237 	ld	c, a
      0008A0 F8 08                 2238 	ldhl	sp,	#8
      0008A2 2A                    2239 	ld	a,	(hl+)
      0008A3 66                    2240 	ld	h, (hl)
      0008A4 6F                    2241 	ld	l, a
      0008A5 71                    2242 	ld	(hl), c
      0008A6 18 0B                 2243 	jr	00103$
      0008A8                       2244 00102$:
                                   2245 ;main.c:230: enemies[i].xSpeed -= enemies[i].accel;
      0008A8 F8 0D                 2246 	ldhl	sp,	#13
      0008AA 2A                    2247 	ld	a, (hl+)
      0008AB 96                    2248 	sub	a, (hl)
      0008AC 4F                    2249 	ld	c, a
      0008AD F8 08                 2250 	ldhl	sp,	#8
      0008AF 2A                    2251 	ld	a,	(hl+)
      0008B0 66                    2252 	ld	h, (hl)
      0008B1 6F                    2253 	ld	l, a
      0008B2 71                    2254 	ld	(hl), c
      0008B3                       2255 00103$:
                                   2256 ;main.c:232: if (enemies[i].y < playerDrawY) {
      0008B3 F8 06                 2257 	ldhl	sp,#6
      0008B5 2A                    2258 	ld	a, (hl+)
      0008B6 5F                    2259 	ld	e, a
      0008B7 56                    2260 	ld	d, (hl)
      0008B8 1A                    2261 	ld	a, (de)
      0008B9 F8 02                 2262 	ldhl	sp,	#2
      0008BB 22                    2263 	ld	(hl+), a
      0008BC 13                    2264 	inc	de
      0008BD 1A                    2265 	ld	a, (de)
      0008BE 77                    2266 	ld	(hl), a
      0008BF 21r2Dr00              2267 	ld	hl, #_playerDrawY
      0008C2 4E                    2268 	ld	c, (hl)
      0008C3 06 00                 2269 	ld	b, #0x00
                                   2270 ;main.c:240: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0008C5 F8 04                 2271 	ldhl	sp,#4
      0008C7 2A                    2272 	ld	a, (hl+)
      0008C8 5F                    2273 	ld	e, a
      0008C9 56                    2274 	ld	d, (hl)
      0008CA 21 0F 00              2275 	ld	hl, #0x000f
      0008CD 19                    2276 	add	hl, de
      0008CE E5                    2277 	push	hl
      0008CF 7D                    2278 	ld	a, l
      0008D0 F8 0C                 2279 	ldhl	sp,	#12
      0008D2 77                    2280 	ld	(hl), a
      0008D3 E1                    2281 	pop	hl
      0008D4 7C                    2282 	ld	a, h
      0008D5 F8 0B                 2283 	ldhl	sp,	#11
                                   2284 ;main.c:233: enemies[i].ySpeed += enemies[i].accel;
      0008D7 32                    2285 	ld	(hl-), a
      0008D8 2A                    2286 	ld	a, (hl+)
      0008D9 5F                    2287 	ld	e, a
      0008DA 2A                    2288 	ld	a, (hl+)
      0008DB 23                    2289 	inc	hl
      0008DC 57                    2290 	ld	d, a
      0008DD 1A                    2291 	ld	a, (de)
      0008DE 22                    2292 	ld	(hl+), a
      0008DF D1                    2293 	pop	de
      0008E0 D5                    2294 	push	de
      0008E1 1A                    2295 	ld	a, (de)
      0008E2 77                    2296 	ld	(hl), a
                                   2297 ;main.c:232: if (enemies[i].y < playerDrawY) {
      0008E3 F8 02                 2298 	ldhl	sp,	#2
      0008E5 2A                    2299 	ld	a, (hl+)
      0008E6 91                    2300 	sub	a, c
      0008E7 7E                    2301 	ld	a, (hl)
      0008E8 98                    2302 	sbc	a, b
      0008E9 56                    2303 	ld	d, (hl)
      0008EA 78                    2304 	ld	a, b
      0008EB CB 7F                 2305 	bit	7,a
      0008ED 28 07                 2306 	jr	Z, 00275$
      0008EF CB 7A                 2307 	bit	7, d
      0008F1 20 08                 2308 	jr	NZ, 00276$
      0008F3 BF                    2309 	cp	a, a
      0008F4 18 05                 2310 	jr	00276$
      0008F6                       2311 00275$:
      0008F6 CB 7A                 2312 	bit	7, d
      0008F8 28 01                 2313 	jr	Z, 00276$
      0008FA 37                    2314 	scf
      0008FB                       2315 00276$:
      0008FB 30 0D                 2316 	jr	NC, 00105$
                                   2317 ;main.c:233: enemies[i].ySpeed += enemies[i].accel;
      0008FD F8 0E                 2318 	ldhl	sp,	#14
      0008FF 3A                    2319 	ld	a, (hl-)
      000900 86                    2320 	add	a, (hl)
      000901 4F                    2321 	ld	c, a
      000902 F8 0A                 2322 	ldhl	sp,	#10
      000904 2A                    2323 	ld	a,	(hl+)
      000905 66                    2324 	ld	h, (hl)
      000906 6F                    2325 	ld	l, a
      000907 71                    2326 	ld	(hl), c
      000908 18 0B                 2327 	jr	00106$
      00090A                       2328 00105$:
                                   2329 ;main.c:236: enemies[i].ySpeed -= enemies[i].accel;
      00090A F8 0D                 2330 	ldhl	sp,	#13
      00090C 2A                    2331 	ld	a, (hl+)
      00090D 96                    2332 	sub	a, (hl)
      00090E 4F                    2333 	ld	c, a
      00090F F8 0A                 2334 	ldhl	sp,	#10
      000911 2A                    2335 	ld	a,	(hl+)
      000912 66                    2336 	ld	h, (hl)
      000913 6F                    2337 	ld	l, a
      000914 71                    2338 	ld	(hl), c
      000915                       2339 00106$:
                                   2340 ;main.c:239: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000915 F8 04                 2341 	ldhl	sp,#4
      000917 2A                    2342 	ld	a, (hl+)
      000918 5F                    2343 	ld	e, a
      000919 56                    2344 	ld	d, (hl)
      00091A 21 0C 00              2345 	ld	hl, #0x000c
      00091D 19                    2346 	add	hl, de
      00091E 4D                    2347 	ld	c, l
      00091F 44                    2348 	ld	b, h
      000920 0A                    2349 	ld	a, (bc)
      000921 5F                    2350 	ld	e, a
      000922 F8 0C                 2351 	ldhl	sp,	#12
      000924 7B                    2352 	ld	a, e
      000925 22                    2353 	ld	(hl+), a
      000926 AF                    2354 	xor	a, a
      000927 93                    2355 	sub	a, e
      000928 77                    2356 	ld	(hl), a
      000929 F8 08                 2357 	ldhl	sp,#8
      00092B 2A                    2358 	ld	a, (hl+)
      00092C 5F                    2359 	ld	e, a
      00092D 56                    2360 	ld	d, (hl)
      00092E 1A                    2361 	ld	a, (de)
      00092F F8 0E                 2362 	ldhl	sp,	#14
                                   2363 ;main.c:190: return (value < min) ? min : (value > max) ? max : value;
      000931 32                    2364 	ld	(hl-), a
      000932 2A                    2365 	ld	a, (hl+)
      000933 5F                    2366 	ld	e, a
      000934 56                    2367 	ld	d, (hl)
      000935 3A                    2368 	ld	a, (hl-)
      000936 96                    2369 	sub	a, (hl)
      000937 CB 7B                 2370 	bit	7, e
      000939 28 07                 2371 	jr	Z, 00277$
      00093B CB 7A                 2372 	bit	7, d
      00093D 20 08                 2373 	jr	NZ, 00278$
      00093F BF                    2374 	cp	a, a
      000940 18 05                 2375 	jr	00278$
      000942                       2376 00277$:
      000942 CB 7A                 2377 	bit	7, d
      000944 28 01                 2378 	jr	Z, 00278$
      000946 37                    2379 	scf
      000947                       2380 00278$:
      000947 30 05                 2381 	jr	NC, 00147$
      000949 F8 0D                 2382 	ldhl	sp,	#13
      00094B 7E                    2383 	ld	a, (hl)
      00094C 18 23                 2384 	jr	00148$
      00094E                       2385 00147$:
      00094E F8 0E                 2386 	ldhl	sp,	#14
      000950 3A                    2387 	ld	a, (hl-)
      000951 2B                    2388 	dec	hl
      000952 5F                    2389 	ld	e, a
      000953 56                    2390 	ld	d, (hl)
      000954 2A                    2391 	ld	a, (hl+)
      000955 23                    2392 	inc	hl
      000956 96                    2393 	sub	a, (hl)
      000957 CB 7B                 2394 	bit	7, e
      000959 28 07                 2395 	jr	Z, 00279$
      00095B CB 7A                 2396 	bit	7, d
      00095D 20 08                 2397 	jr	NZ, 00280$
      00095F BF                    2398 	cp	a, a
      000960 18 05                 2399 	jr	00280$
      000962                       2400 00279$:
      000962 CB 7A                 2401 	bit	7, d
      000964 28 01                 2402 	jr	Z, 00280$
      000966 37                    2403 	scf
      000967                       2404 00280$:
      000967 30 05                 2405 	jr	NC, 00149$
      000969 F8 0C                 2406 	ldhl	sp,	#12
      00096B 7E                    2407 	ld	a, (hl)
      00096C 18 03                 2408 	jr	00150$
      00096E                       2409 00149$:
      00096E F8 0E                 2410 	ldhl	sp,	#14
      000970 7E                    2411 	ld	a, (hl)
      000971                       2412 00150$:
      000971                       2413 00148$:
                                   2414 ;main.c:239: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000971 F8 08                 2415 	ldhl	sp,	#8
      000973 F5                    2416 	push	af
      000974 2A                    2417 	ld	a,	(hl+)
      000975 66                    2418 	ld	h, (hl)
      000976 6F                    2419 	ld	l, a
      000977 F1                    2420 	pop	af
      000978 77                    2421 	ld	(hl), a
                                   2422 ;main.c:240: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000979 0A                    2423 	ld	a, (bc)
      00097A 47                    2424 	ld	b, a
      00097B 48                    2425 	ld	c, b
      00097C AF                    2426 	xor	a, a
      00097D 90                    2427 	sub	a, b
      00097E 47                    2428 	ld	b, a
      00097F F8 0A                 2429 	ldhl	sp,#10
      000981 2A                    2430 	ld	a, (hl+)
      000982 5F                    2431 	ld	e, a
      000983 56                    2432 	ld	d, (hl)
      000984 1A                    2433 	ld	a, (de)
      000985 6F                    2434 	ld	l, a
                                   2435 ;	spillPairReg hl
                                   2436 ;	spillPairReg hl
                                   2437 ;main.c:190: return (value < min) ? min : (value > max) ? max : value;
      000986 58                    2438 	ld	e, b
      000987 7D                    2439 	ld	a,l
      000988 57                    2440 	ld	d,a
      000989 90                    2441 	sub	a, b
      00098A CB 7B                 2442 	bit	7, e
      00098C 28 07                 2443 	jr	Z, 00281$
      00098E CB 7A                 2444 	bit	7, d
      000990 20 08                 2445 	jr	NZ, 00282$
      000992 BF                    2446 	cp	a, a
      000993 18 05                 2447 	jr	00282$
      000995                       2448 00281$:
      000995 CB 7A                 2449 	bit	7, d
      000997 28 01                 2450 	jr	Z, 00282$
      000999 37                    2451 	scf
      00099A                       2452 00282$:
      00099A 30 03                 2453 	jr	NC, 00151$
      00099C 48                    2454 	ld	c, b
      00099D 18 17                 2455 	jr	00152$
      00099F                       2456 00151$:
      00099F 5D                    2457 	ld	e, l
      0009A0 79                    2458 	ld	a,c
      0009A1 57                    2459 	ld	d,a
      0009A2 95                    2460 	sub	a, l
      0009A3 CB 7B                 2461 	bit	7, e
      0009A5 28 07                 2462 	jr	Z, 00283$
      0009A7 CB 7A                 2463 	bit	7, d
      0009A9 20 08                 2464 	jr	NZ, 00284$
      0009AB BF                    2465 	cp	a, a
      0009AC 18 05                 2466 	jr	00284$
      0009AE                       2467 00283$:
      0009AE CB 7A                 2468 	bit	7, d
      0009B0 28 01                 2469 	jr	Z, 00284$
      0009B2 37                    2470 	scf
      0009B3                       2471 00284$:
      0009B3 38 01                 2472 	jr	C, 00154$
      0009B5 4D                    2473 	ld	c, l
      0009B6                       2474 00154$:
      0009B6                       2475 00152$:
                                   2476 ;main.c:240: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0009B6 F8 0A                 2477 	ldhl	sp,	#10
      0009B8 2A                    2478 	ld	a,	(hl+)
      0009B9 66                    2479 	ld	h, (hl)
      0009BA 6F                    2480 	ld	l, a
      0009BB 71                    2481 	ld	(hl), c
                                   2482 ;main.c:243: enemies[i].xReserve += enemies[i].xSpeed;
      0009BC F8 04                 2483 	ldhl	sp,#4
      0009BE 2A                    2484 	ld	a, (hl+)
      0009BF 5F                    2485 	ld	e, a
      0009C0 56                    2486 	ld	d, (hl)
      0009C1 21 04 00              2487 	ld	hl, #0x0004
      0009C4 19                    2488 	add	hl, de
      0009C5 E5                    2489 	push	hl
      0009C6 7D                    2490 	ld	a, l
      0009C7 F8 0D                 2491 	ldhl	sp,	#13
      0009C9 77                    2492 	ld	(hl), a
      0009CA E1                    2493 	pop	hl
      0009CB 7C                    2494 	ld	a, h
      0009CC F8 0C                 2495 	ldhl	sp,	#12
      0009CE 32                    2496 	ld	(hl-), a
      0009CF 2A                    2497 	ld	a, (hl+)
      0009D0 5F                    2498 	ld	e, a
      0009D1 56                    2499 	ld	d, (hl)
      0009D2 1A                    2500 	ld	a, (de)
      0009D3 47                    2501 	ld	b, a
      0009D4 F8 08                 2502 	ldhl	sp,#8
      0009D6 2A                    2503 	ld	a, (hl+)
      0009D7 5F                    2504 	ld	e, a
      0009D8 2A                    2505 	ld	a, (hl+)
      0009D9 23                    2506 	inc	hl
      0009DA 57                    2507 	ld	d, a
      0009DB 1A                    2508 	ld	a, (de)
      0009DC 80                    2509 	add	a, b
      0009DD 47                    2510 	ld	b, a
      0009DE 2A                    2511 	ld	a,	(hl+)
      0009DF 66                    2512 	ld	h, (hl)
      0009E0 6F                    2513 	ld	l, a
      0009E1 70                    2514 	ld	(hl), b
                                   2515 ;main.c:244: enemies[i].yReserve += enemies[i].ySpeed;
      0009E2 F8 04                 2516 	ldhl	sp,#4
      0009E4 2A                    2517 	ld	a, (hl+)
      0009E5 5F                    2518 	ld	e, a
      0009E6 56                    2519 	ld	d, (hl)
      0009E7 21 05 00              2520 	ld	hl, #0x0005
      0009EA 19                    2521 	add	hl, de
      0009EB E5                    2522 	push	hl
      0009EC 7D                    2523 	ld	a, l
      0009ED F8 0F                 2524 	ldhl	sp,	#15
      0009EF 77                    2525 	ld	(hl), a
      0009F0 E1                    2526 	pop	hl
      0009F1 7C                    2527 	ld	a, h
      0009F2 F8 0E                 2528 	ldhl	sp,	#14
      0009F4 32                    2529 	ld	(hl-), a
      0009F5 2A                    2530 	ld	a, (hl+)
      0009F6 5F                    2531 	ld	e, a
      0009F7 56                    2532 	ld	d, (hl)
      0009F8 1A                    2533 	ld	a, (de)
      0009F9 81                    2534 	add	a, c
      0009FA 4F                    2535 	ld	c, a
      0009FB 3A                    2536 	ld	a, (hl-)
      0009FC 6E                    2537 	ld	l, (hl)
      0009FD 67                    2538 	ld	h, a
      0009FE 71                    2539 	ld	(hl), c
                                   2540 ;main.c:248: if (enemies[i].xReserve >> 3 > 0) {
      0009FF CB 28                 2541 	sra	b
      000A01 CB 28                 2542 	sra	b
      000A03 CB 28                 2543 	sra	b
                                   2544 ;main.c:243: enemies[i].xReserve += enemies[i].xSpeed;
      000A05 F8 0B                 2545 	ldhl	sp,#11
      000A07 2A                    2546 	ld	a, (hl+)
      000A08 5F                    2547 	ld	e, a
      000A09 3A                    2548 	ld	a, (hl-)
      000A0A 2B                    2549 	dec	hl
      000A0B 57                    2550 	ld	d, a
      000A0C 1A                    2551 	ld	a, (de)
      000A0D 77                    2552 	ld	(hl), a
                                   2553 ;main.c:248: if (enemies[i].xReserve >> 3 > 0) {
      000A0E 58                    2554 	ld	e, b
      000A0F AF                    2555 	xor	a, a
      000A10 57                    2556 	ld	d, a
      000A11 90                    2557 	sub	a, b
      000A12 CB 7B                 2558 	bit	7, e
      000A14 28 07                 2559 	jr	Z, 00285$
      000A16 CB 7A                 2560 	bit	7, d
      000A18 20 08                 2561 	jr	NZ, 00286$
      000A1A BF                    2562 	cp	a, a
      000A1B 18 05                 2563 	jr	00286$
      000A1D                       2564 00285$:
      000A1D CB 7A                 2565 	bit	7, d
      000A1F 28 01                 2566 	jr	Z, 00286$
      000A21 37                    2567 	scf
      000A22                       2568 00286$:
      000A22 30 3F                 2569 	jr	NC, 00110$
                                   2570 ;main.c:249: int8_t xMovement = enemies[i].xReserve >> 3;
      000A24 F8 0A                 2571 	ldhl	sp,	#10
      000A26 7E                    2572 	ld	a, (hl)
      000A27 CB 2F                 2573 	sra	a
      000A29 CB 2F                 2574 	sra	a
      000A2B CB 2F                 2575 	sra	a
      000A2D 77                    2576 	ld	(hl), a
                                   2577 ;main.c:250: enemies[i].x += xMovement;
      000A2E F8 04                 2578 	ldhl	sp,#4
      000A30 2A                    2579 	ld	a, (hl+)
      000A31 5F                    2580 	ld	e, a
      000A32 56                    2581 	ld	d, (hl)
      000A33 1A                    2582 	ld	a, (de)
      000A34 4F                    2583 	ld	c, a
      000A35 13                    2584 	inc	de
      000A36 1A                    2585 	ld	a, (de)
      000A37 47                    2586 	ld	b, a
      000A38 F8 0A                 2587 	ldhl	sp,	#10
      000A3A 7E                    2588 	ld	a, (hl)
      000A3B 5F                    2589 	ld	e, a
      000A3C 07                    2590 	rlca
      000A3D 9F                    2591 	sbc	a, a
      000A3E 57                    2592 	ld	d, a
      000A3F 69                    2593 	ld	l, c
                                   2594 ;	spillPairReg hl
                                   2595 ;	spillPairReg hl
      000A40 60                    2596 	ld	h, b
                                   2597 ;	spillPairReg hl
                                   2598 ;	spillPairReg hl
      000A41 19                    2599 	add	hl, de
      000A42 4D                    2600 	ld	c, l
      000A43 44                    2601 	ld	b, h
      000A44 F8 04                 2602 	ldhl	sp,	#4
      000A46 2A                    2603 	ld	a,	(hl+)
      000A47 66                    2604 	ld	h, (hl)
      000A48 6F                    2605 	ld	l, a
      000A49 79                    2606 	ld	a, c
      000A4A 22                    2607 	ld	(hl+), a
      000A4B 70                    2608 	ld	(hl), b
                                   2609 ;main.c:251: enemies[i].xReserve -=  xMovement << 3;
      000A4C F8 0B                 2610 	ldhl	sp,#11
      000A4E 2A                    2611 	ld	a, (hl+)
      000A4F 5F                    2612 	ld	e, a
      000A50 3A                    2613 	ld	a, (hl-)
      000A51 2B                    2614 	dec	hl
      000A52 57                    2615 	ld	d, a
      000A53 1A                    2616 	ld	a, (de)
      000A54 F5                    2617 	push	af
      000A55 2A                    2618 	ld	a, (hl+)
      000A56 87                    2619 	add	a, a
      000A57 87                    2620 	add	a, a
      000A58 87                    2621 	add	a, a
      000A59 4F                    2622 	ld	c, a
      000A5A F1                    2623 	pop	af
      000A5B 91                    2624 	sub	a, c
      000A5C 4F                    2625 	ld	c, a
      000A5D 2A                    2626 	ld	a,	(hl+)
      000A5E 66                    2627 	ld	h, (hl)
      000A5F 6F                    2628 	ld	l, a
      000A60 71                    2629 	ld	(hl), c
      000A61 18 69                 2630 	jr	00111$
      000A63                       2631 00110$:
                                   2632 ;main.c:254: else if ((-enemies[i].xReserve) >> 3 > 0){
      000A63 F8 0A                 2633 	ldhl	sp,	#10
      000A65 7E                    2634 	ld	a, (hl)
      000A66 4F                    2635 	ld	c, a
      000A67 07                    2636 	rlca
      000A68 9F                    2637 	sbc	a, a
      000A69 47                    2638 	ld	b, a
      000A6A AF                    2639 	xor	a, a
      000A6B 91                    2640 	sub	a, c
      000A6C 4F                    2641 	ld	c, a
      000A6D 9F                    2642 	sbc	a, a
      000A6E 90                    2643 	sub	a, b
      000A6F 47                    2644 	ld	b, a
      000A70 CB 28                 2645 	sra	b
      000A72 CB 19                 2646 	rr	c
      000A74 CB 28                 2647 	sra	b
      000A76 CB 19                 2648 	rr	c
      000A78 CB 28                 2649 	sra	b
      000A7A CB 19                 2650 	rr	c
      000A7C 58                    2651 	ld	e, b
      000A7D AF                    2652 	xor	a, a
      000A7E 57                    2653 	ld	d, a
      000A7F B9                    2654 	cp	a, c
      000A80 98                    2655 	sbc	a, b
      000A81 CB 7B                 2656 	bit	7, e
      000A83 28 07                 2657 	jr	Z, 00287$
      000A85 CB 7A                 2658 	bit	7, d
      000A87 20 08                 2659 	jr	NZ, 00288$
      000A89 BF                    2660 	cp	a, a
      000A8A 18 05                 2661 	jr	00288$
      000A8C                       2662 00287$:
      000A8C CB 7A                 2663 	bit	7, d
      000A8E 28 01                 2664 	jr	Z, 00288$
      000A90 37                    2665 	scf
      000A91                       2666 00288$:
      000A91 30 39                 2667 	jr	NC, 00111$
                                   2668 ;main.c:255: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      000A93 AF                    2669 	xor	a, a
      000A94 91                    2670 	sub	a, c
      000A95 4F                    2671 	ld	c, a
      000A96 F8 0A                 2672 	ldhl	sp,	#10
      000A98 71                    2673 	ld	(hl), c
                                   2674 ;main.c:256: enemies[i].x += xMovement;
      000A99 F8 04                 2675 	ldhl	sp,#4
      000A9B 2A                    2676 	ld	a, (hl+)
      000A9C 5F                    2677 	ld	e, a
      000A9D 56                    2678 	ld	d, (hl)
      000A9E 1A                    2679 	ld	a, (de)
      000A9F 4F                    2680 	ld	c, a
      000AA0 13                    2681 	inc	de
      000AA1 1A                    2682 	ld	a, (de)
      000AA2 47                    2683 	ld	b, a
      000AA3 F8 0A                 2684 	ldhl	sp,	#10
      000AA5 7E                    2685 	ld	a, (hl)
      000AA6 5F                    2686 	ld	e, a
      000AA7 07                    2687 	rlca
      000AA8 9F                    2688 	sbc	a, a
      000AA9 57                    2689 	ld	d, a
      000AAA 69                    2690 	ld	l, c
                                   2691 ;	spillPairReg hl
                                   2692 ;	spillPairReg hl
      000AAB 60                    2693 	ld	h, b
                                   2694 ;	spillPairReg hl
                                   2695 ;	spillPairReg hl
      000AAC 19                    2696 	add	hl, de
      000AAD 4D                    2697 	ld	c, l
      000AAE 44                    2698 	ld	b, h
      000AAF F8 04                 2699 	ldhl	sp,	#4
      000AB1 2A                    2700 	ld	a,	(hl+)
      000AB2 66                    2701 	ld	h, (hl)
      000AB3 6F                    2702 	ld	l, a
      000AB4 79                    2703 	ld	a, c
      000AB5 22                    2704 	ld	(hl+), a
      000AB6 70                    2705 	ld	(hl), b
                                   2706 ;main.c:257: enemies[i].xReserve +=  (-xMovement) << 3;
      000AB7 F8 0B                 2707 	ldhl	sp,#11
      000AB9 2A                    2708 	ld	a, (hl+)
      000ABA 5F                    2709 	ld	e, a
      000ABB 3A                    2710 	ld	a, (hl-)
      000ABC 2B                    2711 	dec	hl
      000ABD 57                    2712 	ld	d, a
      000ABE 1A                    2713 	ld	a, (de)
      000ABF 4F                    2714 	ld	c, a
      000AC0 AF                    2715 	xor	a, a
      000AC1 96                    2716 	sub	a, (hl)
      000AC2 23                    2717 	inc	hl
      000AC3 87                    2718 	add	a, a
      000AC4 87                    2719 	add	a, a
      000AC5 87                    2720 	add	a, a
      000AC6 81                    2721 	add	a, c
      000AC7 4F                    2722 	ld	c, a
      000AC8 2A                    2723 	ld	a,	(hl+)
      000AC9 66                    2724 	ld	h, (hl)
      000ACA 6F                    2725 	ld	l, a
      000ACB 71                    2726 	ld	(hl), c
      000ACC                       2727 00111$:
                                   2728 ;main.c:260: if (enemies[i].yReserve >> 3 > 0) {
      000ACC F8 0D                 2729 	ldhl	sp,#13
      000ACE 2A                    2730 	ld	a, (hl+)
      000ACF 5F                    2731 	ld	e, a
      000AD0 56                    2732 	ld	d, (hl)
      000AD1 1A                    2733 	ld	a, (de)
      000AD2 F8 0B                 2734 	ldhl	sp,	#11
      000AD4 77                    2735 	ld	(hl), a
      000AD5 2A                    2736 	ld	a, (hl+)
      000AD6 CB 2F                 2737 	sra	a
      000AD8 CB 2F                 2738 	sra	a
      000ADA CB 2F                 2739 	sra	a
      000ADC 77                    2740 	ld	(hl), a
      000ADD 5E                    2741 	ld	e, (hl)
      000ADE AF                    2742 	xor	a, a
      000ADF 57                    2743 	ld	d, a
      000AE0 96                    2744 	sub	a, (hl)
      000AE1 CB 7B                 2745 	bit	7, e
      000AE3 28 07                 2746 	jr	Z, 00289$
      000AE5 CB 7A                 2747 	bit	7, d
      000AE7 20 08                 2748 	jr	NZ, 00290$
      000AE9 BF                    2749 	cp	a, a
      000AEA 18 05                 2750 	jr	00290$
      000AEC                       2751 00289$:
      000AEC CB 7A                 2752 	bit	7, d
      000AEE 28 01                 2753 	jr	Z, 00290$
      000AF0 37                    2754 	scf
      000AF1                       2755 00290$:
      000AF1 30 5B                 2756 	jr	NC, 00115$
                                   2757 ;main.c:261: int8_t yMovement = enemies[i].yReserve >> 3;
      000AF3 F8 0C                 2758 	ldhl	sp,	#12
      000AF5 7E                    2759 	ld	a, (hl)
      000AF6 F8 08                 2760 	ldhl	sp,	#8
                                   2761 ;main.c:262: enemies[i].y += yMovement;
      000AF8 32                    2762 	ld	(hl-), a
      000AF9 2B                    2763 	dec	hl
      000AFA 2A                    2764 	ld	a, (hl+)
      000AFB 5F                    2765 	ld	e, a
      000AFC 56                    2766 	ld	d, (hl)
      000AFD 1A                    2767 	ld	a, (de)
      000AFE F8 0B                 2768 	ldhl	sp,	#11
      000B00 22                    2769 	ld	(hl+), a
      000B01 13                    2770 	inc	de
      000B02 1A                    2771 	ld	a, (de)
      000B03 77                    2772 	ld	(hl), a
      000B04 F8 08                 2773 	ldhl	sp,	#8
      000B06 7E                    2774 	ld	a, (hl)
      000B07 F8 04                 2775 	ldhl	sp,	#4
      000B09 22                    2776 	ld	(hl+), a
      000B0A 07                    2777 	rlca
      000B0B 9F                    2778 	sbc	a, a
      000B0C 77                    2779 	ld	(hl), a
      000B0D F8 0B                 2780 	ldhl	sp,	#11
      000B0F 3A                    2781 	ld	a, (hl-)
      000B10 2B                    2782 	dec	hl
      000B11 77                    2783 	ld	(hl), a
      000B12 F8 0C                 2784 	ldhl	sp,	#12
      000B14 3A                    2785 	ld	a, (hl-)
      000B15 2B                    2786 	dec	hl
      000B16 32                    2787 	ld	(hl-), a
      000B17 2A                    2788 	ld	a, (hl+)
      000B18 5F                    2789 	ld	e, a
      000B19 56                    2790 	ld	d, (hl)
      000B1A F8 04                 2791 	ldhl	sp,	#4
      000B1C 2A                    2792 	ld	a,	(hl+)
      000B1D 66                    2793 	ld	h, (hl)
      000B1E 6F                    2794 	ld	l, a
      000B1F 19                    2795 	add	hl, de
      000B20 E5                    2796 	push	hl
      000B21 7D                    2797 	ld	a, l
      000B22 F8 0D                 2798 	ldhl	sp,	#13
      000B24 77                    2799 	ld	(hl), a
      000B25 E1                    2800 	pop	hl
      000B26 7C                    2801 	ld	a, h
      000B27 F8 0C                 2802 	ldhl	sp,	#12
      000B29 77                    2803 	ld	(hl), a
      000B2A F8 06                 2804 	ldhl	sp,#6
      000B2C 2A                    2805 	ld	a, (hl+)
      000B2D 5F                    2806 	ld	e, a
      000B2E 56                    2807 	ld	d, (hl)
      000B2F F8 0B                 2808 	ldhl	sp,	#11
      000B31 2A                    2809 	ld	a, (hl+)
      000B32 12                    2810 	ld	(de), a
      000B33 13                    2811 	inc	de
                                   2812 ;main.c:263: enemies[i].yReserve -=  yMovement << 3;
      000B34 2A                    2813 	ld	a, (hl+)
      000B35 12                    2814 	ld	(de), a
      000B36 2A                    2815 	ld	a, (hl+)
      000B37 5F                    2816 	ld	e, a
      000B38 56                    2817 	ld	d, (hl)
      000B39 1A                    2818 	ld	a, (de)
      000B3A F5                    2819 	push	af
      000B3B F8 0A                 2820 	ldhl	sp,	#10
      000B3D 7E                    2821 	ld	a, (hl)
      000B3E 87                    2822 	add	a, a
      000B3F 87                    2823 	add	a, a
      000B40 87                    2824 	add	a, a
      000B41 4F                    2825 	ld	c, a
      000B42 F1                    2826 	pop	af
      000B43 91                    2827 	sub	a, c
      000B44 4F                    2828 	ld	c, a
      000B45 F8 0D                 2829 	ldhl	sp,	#13
      000B47 2A                    2830 	ld	a,	(hl+)
      000B48 66                    2831 	ld	h, (hl)
      000B49 6F                    2832 	ld	l, a
      000B4A 71                    2833 	ld	(hl), c
      000B4B C3rEFr0B              2834 	jp	00141$
      000B4E                       2835 00115$:
                                   2836 ;main.c:265: else if ((-enemies[i].yReserve) >> 3 > 0){
      000B4E F8 0B                 2837 	ldhl	sp,	#11
      000B50 7E                    2838 	ld	a, (hl)
      000B51 F8 08                 2839 	ldhl	sp,	#8
      000B53 22                    2840 	ld	(hl+), a
      000B54 07                    2841 	rlca
      000B55 9F                    2842 	sbc	a, a
      000B56 77                    2843 	ld	(hl), a
      000B57 11 00 00              2844 	ld	de, #0x0000
      000B5A 3A                    2845 	ld	a, (hl-)
      000B5B 6E                    2846 	ld	l, (hl)
      000B5C 67                    2847 	ld	h, a
      000B5D 7B                    2848 	ld	a, e
      000B5E 95                    2849 	sub	a, l
      000B5F 5F                    2850 	ld	e, a
      000B60 7A                    2851 	ld	a, d
      000B61 9C                    2852 	sbc	a, h
      000B62 F8 0C                 2853 	ldhl	sp,	#12
      000B64 32                    2854 	ld	(hl-), a
      000B65 7B                    2855 	ld	a, e
      000B66 22                    2856 	ld	(hl+), a
      000B67 CB 2E                 2857 	sra	(hl)
      000B69 2B                    2858 	dec	hl
      000B6A CB 1E                 2859 	rr	(hl)
      000B6C 23                    2860 	inc	hl
      000B6D CB 2E                 2861 	sra	(hl)
      000B6F 2B                    2862 	dec	hl
      000B70 CB 1E                 2863 	rr	(hl)
      000B72 23                    2864 	inc	hl
      000B73 CB 2E                 2865 	sra	(hl)
      000B75 2B                    2866 	dec	hl
      000B76 CB 1E                 2867 	rr	(hl)
      000B78 AF                    2868 	xor	a, a
      000B79 96                    2869 	sub	a, (hl)
      000B7A 23                    2870 	inc	hl
      000B7B 3E 00                 2871 	ld	a, #0x00
      000B7D 9E                    2872 	sbc	a, (hl)
      000B7E 3E 00                 2873 	ld	a, #0x00
      000B80 57                    2874 	ld	d, a
      000B81 CB 7E                 2875 	bit	7, (hl)
      000B83 28 07                 2876 	jr	Z, 00291$
      000B85 CB 7A                 2877 	bit	7, d
      000B87 20 08                 2878 	jr	NZ, 00292$
      000B89 BF                    2879 	cp	a, a
      000B8A 18 05                 2880 	jr	00292$
      000B8C                       2881 00291$:
      000B8C CB 7A                 2882 	bit	7, d
      000B8E 28 01                 2883 	jr	Z, 00292$
      000B90 37                    2884 	scf
      000B91                       2885 00292$:
      000B91 30 5C                 2886 	jr	NC, 00141$
                                   2887 ;main.c:266: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      000B93 F8 0B                 2888 	ldhl	sp,	#11
      000B95 2A                    2889 	ld	a, (hl+)
      000B96 4F                    2890 	ld	c, a
      000B97 AF                    2891 	xor	a, a
      000B98 91                    2892 	sub	a, c
      000B99 77                    2893 	ld	(hl), a
      000B9A 7E                    2894 	ld	a, (hl)
      000B9B F8 08                 2895 	ldhl	sp,	#8
                                   2896 ;main.c:267: enemies[i].y += yMovement;
      000B9D 32                    2897 	ld	(hl-), a
      000B9E 2B                    2898 	dec	hl
      000B9F 2A                    2899 	ld	a, (hl+)
      000BA0 5F                    2900 	ld	e, a
      000BA1 56                    2901 	ld	d, (hl)
      000BA2 1A                    2902 	ld	a, (de)
      000BA3 F8 0B                 2903 	ldhl	sp,	#11
      000BA5 22                    2904 	ld	(hl+), a
      000BA6 13                    2905 	inc	de
      000BA7 1A                    2906 	ld	a, (de)
      000BA8 77                    2907 	ld	(hl), a
      000BA9 F8 08                 2908 	ldhl	sp,	#8
      000BAB 7E                    2909 	ld	a, (hl)
      000BAC F8 04                 2910 	ldhl	sp,	#4
      000BAE 22                    2911 	ld	(hl+), a
      000BAF 07                    2912 	rlca
      000BB0 9F                    2913 	sbc	a, a
      000BB1 77                    2914 	ld	(hl), a
      000BB2 F8 0B                 2915 	ldhl	sp,	#11
      000BB4 3A                    2916 	ld	a, (hl-)
      000BB5 2B                    2917 	dec	hl
      000BB6 77                    2918 	ld	(hl), a
      000BB7 F8 0C                 2919 	ldhl	sp,	#12
      000BB9 3A                    2920 	ld	a, (hl-)
      000BBA 2B                    2921 	dec	hl
      000BBB 32                    2922 	ld	(hl-), a
      000BBC 2A                    2923 	ld	a, (hl+)
      000BBD 5F                    2924 	ld	e, a
      000BBE 56                    2925 	ld	d, (hl)
      000BBF F8 04                 2926 	ldhl	sp,	#4
      000BC1 2A                    2927 	ld	a,	(hl+)
      000BC2 66                    2928 	ld	h, (hl)
      000BC3 6F                    2929 	ld	l, a
      000BC4 19                    2930 	add	hl, de
      000BC5 E5                    2931 	push	hl
      000BC6 7D                    2932 	ld	a, l
      000BC7 F8 0D                 2933 	ldhl	sp,	#13
      000BC9 77                    2934 	ld	(hl), a
      000BCA E1                    2935 	pop	hl
      000BCB 7C                    2936 	ld	a, h
      000BCC F8 0C                 2937 	ldhl	sp,	#12
      000BCE 77                    2938 	ld	(hl), a
      000BCF F8 06                 2939 	ldhl	sp,#6
      000BD1 2A                    2940 	ld	a, (hl+)
      000BD2 5F                    2941 	ld	e, a
      000BD3 56                    2942 	ld	d, (hl)
      000BD4 F8 0B                 2943 	ldhl	sp,	#11
      000BD6 2A                    2944 	ld	a, (hl+)
      000BD7 12                    2945 	ld	(de), a
      000BD8 13                    2946 	inc	de
                                   2947 ;main.c:268: enemies[i].yReserve +=  (-yMovement) << 3;
      000BD9 2A                    2948 	ld	a, (hl+)
      000BDA 12                    2949 	ld	(de), a
      000BDB 2A                    2950 	ld	a, (hl+)
      000BDC 5F                    2951 	ld	e, a
      000BDD 56                    2952 	ld	d, (hl)
      000BDE 1A                    2953 	ld	a, (de)
      000BDF 4F                    2954 	ld	c, a
      000BE0 AF                    2955 	xor	a, a
      000BE1 F8 08                 2956 	ldhl	sp,	#8
      000BE3 96                    2957 	sub	a, (hl)
      000BE4 87                    2958 	add	a, a
      000BE5 87                    2959 	add	a, a
      000BE6 87                    2960 	add	a, a
      000BE7 81                    2961 	add	a, c
      000BE8 4F                    2962 	ld	c, a
      000BE9 F8 0D                 2963 	ldhl	sp,	#13
      000BEB 2A                    2964 	ld	a,	(hl+)
      000BEC 66                    2965 	ld	h, (hl)
      000BED 6F                    2966 	ld	l, a
      000BEE 71                    2967 	ld	(hl), c
      000BEF                       2968 00141$:
                                   2969 ;main.c:220: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000BEF F8 0F                 2970 	ldhl	sp,	#15
      000BF1 34                    2971 	inc	(hl)
      000BF2 C3rD4r07              2972 	jp	00140$
      000BF5                       2973 00117$:
                                   2974 ;main.c:279: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000BF5 F8 0F                 2975 	ldhl	sp,	#15
      000BF7 36 00                 2976 	ld	(hl), #0x00
      000BF9                       2977 00143$:
      000BF9 21r19r05              2978 	ld	hl, #_ENEMYCOUNT
      000BFC 4E                    2979 	ld	c, (hl)
      000BFD F8 0F                 2980 	ldhl	sp,	#15
      000BFF 7E                    2981 	ld	a, (hl)
      000C00 91                    2982 	sub	a, c
      000C01 D2r6Br0D              2983 	jp	NC, 00145$
                                   2984 ;main.c:281: if (enemies[i].alive) {
      000C04 7E                    2985 	ld	a, (hl)
      000C05 16 00                 2986 	ld	d, #0x00
      000C07 87                    2987 	add	a, a
      000C08 CB 12                 2988 	rl	d
      000C0A 87                    2989 	add	a, a
      000C0B CB 12                 2990 	rl	d
      000C0D 87                    2991 	add	a, a
      000C0E CB 12                 2992 	rl	d
      000C10 87                    2993 	add	a, a
      000C11 CB 12                 2994 	rl	d
      000C13 5F                    2995 	ld	e, a
      000C14 21r00r00              2996 	ld	hl, #_enemies
      000C17 19                    2997 	add	hl, de
      000C18 E5                    2998 	push	hl
      000C19 7D                    2999 	ld	a, l
      000C1A F8 09                 3000 	ldhl	sp,	#9
      000C1C 77                    3001 	ld	(hl), a
      000C1D E1                    3002 	pop	hl
      000C1E 7C                    3003 	ld	a, h
      000C1F F8 08                 3004 	ldhl	sp,	#8
      000C21 32                    3005 	ld	(hl-), a
      000C22 2A                    3006 	ld	a, (hl+)
      000C23 5F                    3007 	ld	e, a
      000C24 56                    3008 	ld	d, (hl)
      000C25 21 09 00              3009 	ld	hl, #0x0009
      000C28 19                    3010 	add	hl, de
      000C29 4D                    3011 	ld	c, l
      000C2A 44                    3012 	ld	b, h
      000C2B 0A                    3013 	ld	a, (bc)
      000C2C F8 0E                 3014 	ldhl	sp,	#14
      000C2E 77                    3015 	ld	(hl), a
      000C2F 7E                    3016 	ld	a, (hl)
      000C30 B7                    3017 	or	a, a
      000C31 CAr40r0D              3018 	jp	Z, 00132$
                                   3019 ;main.c:282: if (enemies[i].visible == 1) {
      000C34 F8 07                 3020 	ldhl	sp,#7
      000C36 2A                    3021 	ld	a, (hl+)
      000C37 5F                    3022 	ld	e, a
      000C38 56                    3023 	ld	d, (hl)
      000C39 21 0A 00              3024 	ld	hl, #0x000a
      000C3C 19                    3025 	add	hl, de
      000C3D E5                    3026 	push	hl
      000C3E 7D                    3027 	ld	a, l
      000C3F F8 0B                 3028 	ldhl	sp,	#11
      000C41 77                    3029 	ld	(hl), a
      000C42 E1                    3030 	pop	hl
      000C43 7C                    3031 	ld	a, h
      000C44 F8 0A                 3032 	ldhl	sp,	#10
      000C46 32                    3033 	ld	(hl-), a
      000C47 2A                    3034 	ld	a, (hl+)
      000C48 5F                    3035 	ld	e, a
      000C49 2A                    3036 	ld	a, (hl+)
      000C4A 57                    3037 	ld	d, a
      000C4B 1A                    3038 	ld	a, (de)
      000C4C 77                    3039 	ld	(hl), a
                                   3040 ;main.c:283: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000C4D F8 07                 3041 	ldhl	sp,#7
      000C4F 2A                    3042 	ld	a, (hl+)
      000C50 5F                    3043 	ld	e, a
      000C51 56                    3044 	ld	d, (hl)
      000C52 1A                    3045 	ld	a, (de)
      000C53 F8 05                 3046 	ldhl	sp,	#5
      000C55 22                    3047 	ld	(hl+), a
      000C56 13                    3048 	inc	de
      000C57 1A                    3049 	ld	a, (de)
      000C58 22                    3050 	ld	(hl+), a
      000C59 2A                    3051 	ld	a, (hl+)
      000C5A 5F                    3052 	ld	e, a
      000C5B 56                    3053 	ld	d, (hl)
      000C5C 21 02 00              3054 	ld	hl, #0x0002
      000C5F 19                    3055 	add	hl, de
      000C60 E5                    3056 	push	hl
      000C61 7D                    3057 	ld	a, l
      000C62 F8 0E                 3058 	ldhl	sp,	#14
      000C64 77                    3059 	ld	(hl), a
      000C65 E1                    3060 	pop	hl
      000C66 7C                    3061 	ld	a, h
      000C67 F8 0D                 3062 	ldhl	sp,	#13
                                   3063 ;main.c:285: set_sprite_tile(10+i, 0x7f);
      000C69 22                    3064 	ld	(hl+), a
      000C6A 23                    3065 	inc	hl
      000C6B 7E                    3066 	ld	a, (hl)
                                   3067 ;main.c:283: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000C6C F8 05                 3068 	ldhl	sp,	#5
      000C6E 4E                    3069 	ld	c, (hl)
      000C6F 23                    3070 	inc	hl
      000C70 46                    3071 	ld	b, (hl)
                                   3072 ;main.c:285: set_sprite_tile(10+i, 0x7f);
      000C71 C6 0A                 3073 	add	a, #0x0a
      000C73 F8 0E                 3074 	ldhl	sp,	#14
      000C75 77                    3075 	ld	(hl), a
                                   3076 ;main.c:283: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000C76 78                    3077 	ld	a, b
      000C77 07                    3078 	rlca
      000C78 E6 01                 3079 	and	a,#0x01
      000C7A 6F                    3080 	ld	l, a
                                   3081 ;	spillPairReg hl
                                   3082 ;	spillPairReg hl
                                   3083 ;main.c:282: if (enemies[i].visible == 1) {
      000C7B E5                    3084 	push	hl
      000C7C F8 0D                 3085 	ldhl	sp,	#13
      000C7E 7E                    3086 	ld	a, (hl)
      000C7F 3D                    3087 	dec	a
      000C80 E1                    3088 	pop	hl
      000C81 20 60                 3089 	jr	NZ, 00129$
                                   3090 ;main.c:283: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000C83 7D                    3091 	ld	a, l
      000C84 B7                    3092 	or	a, a
      000C85 20 44                 3093 	jr	NZ, 00118$
      000C87 58                    3094 	ld	e, b
      000C88 16 00                 3095 	ld	d, #0x00
      000C8A 3E AC                 3096 	ld	a, #0xac
      000C8C B9                    3097 	cp	a, c
      000C8D 3E 00                 3098 	ld	a, #0x00
      000C8F 98                    3099 	sbc	a, b
      000C90 CB 7B                 3100 	bit	7, e
      000C92 28 07                 3101 	jr	Z, 00296$
      000C94 CB 7A                 3102 	bit	7, d
      000C96 20 08                 3103 	jr	NZ, 00297$
      000C98 BF                    3104 	cp	a, a
      000C99 18 05                 3105 	jr	00297$
      000C9B                       3106 00296$:
      000C9B CB 7A                 3107 	bit	7, d
      000C9D 28 01                 3108 	jr	Z, 00297$
      000C9F 37                    3109 	scf
      000CA0                       3110 00297$:
      000CA0 38 29                 3111 	jr	C, 00118$
      000CA2 F8 0C                 3112 	ldhl	sp,#12
      000CA4 2A                    3113 	ld	a, (hl+)
      000CA5 5F                    3114 	ld	e, a
      000CA6 56                    3115 	ld	d, (hl)
      000CA7 1A                    3116 	ld	a, (de)
      000CA8 4F                    3117 	ld	c, a
      000CA9 13                    3118 	inc	de
      000CAA 1A                    3119 	ld	a, (de)
      000CAB 47                    3120 	ld	b, a
      000CAC CB 78                 3121 	bit	7, b
      000CAE 20 1B                 3122 	jr	NZ, 00118$
      000CB0 58                    3123 	ld	e, b
      000CB1 16 00                 3124 	ld	d, #0x00
      000CB3 3E 98                 3125 	ld	a, #0x98
      000CB5 B9                    3126 	cp	a, c
      000CB6 3E 00                 3127 	ld	a, #0x00
      000CB8 98                    3128 	sbc	a, b
      000CB9 CB 7B                 3129 	bit	7, e
      000CBB 28 07                 3130 	jr	Z, 00298$
      000CBD CB 7A                 3131 	bit	7, d
      000CBF 20 08                 3132 	jr	NZ, 00299$
      000CC1 BF                    3133 	cp	a, a
      000CC2 18 05                 3134 	jr	00299$
      000CC4                       3135 00298$:
      000CC4 CB 7A                 3136 	bit	7, d
      000CC6 28 01                 3137 	jr	Z, 00299$
      000CC8 37                    3138 	scf
      000CC9                       3139 00299$:
      000CC9 30 75                 3140 	jr	NC, 00132$
      000CCB                       3141 00118$:
                                   3142 ;main.c:284: enemies[i].visible = 0;
      000CCB F8 09                 3143 	ldhl	sp,	#9
      000CCD 2A                    3144 	ld	a,	(hl+)
      000CCE 66                    3145 	ld	h, (hl)
      000CCF 6F                    3146 	ld	l, a
      000CD0 36 00                 3147 	ld	(hl), #0x00
                                   3148 ;main.c:285: set_sprite_tile(10+i, 0x7f);
      000CD2 F8 0E                 3149 	ldhl	sp,	#14
                                   3150 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000CD4 6E                    3151 	ld	l, (hl)
      000CD5 01r00r00              3152 	ld	bc, #_shadow_OAM+0
                                   3153 ;	spillPairReg hl
                                   3154 ;	spillPairReg hl
      000CD8 26 00                 3155 	ld	h, #0x00
                                   3156 ;	spillPairReg hl
                                   3157 ;	spillPairReg hl
      000CDA 29                    3158 	add	hl, hl
      000CDB 29                    3159 	add	hl, hl
      000CDC 09                    3160 	add	hl, bc
      000CDD 23                    3161 	inc	hl
      000CDE 23                    3162 	inc	hl
      000CDF 36 7F                 3163 	ld	(hl), #0x7f
                                   3164 ;main.c:285: set_sprite_tile(10+i, 0x7f);
      000CE1 18 5D                 3165 	jr	00132$
      000CE3                       3166 00129$:
                                   3167 ;main.c:289: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      000CE3 CB 45                 3168 	bit	0, l
      000CE5 20 59                 3169 	jr	NZ, 00132$
      000CE7 79                    3170 	ld	a, c
      000CE8 D6 AC                 3171 	sub	a, #0xac
      000CEA 78                    3172 	ld	a, b
      000CEB 17                    3173 	rla
      000CEC 3F                    3174 	ccf
      000CED 1F                    3175 	rra
      000CEE DE 80                 3176 	sbc	a, #0x80
      000CF0 30 4E                 3177 	jr	NC, 00132$
      000CF2 F8 0C                 3178 	ldhl	sp,#12
      000CF4 2A                    3179 	ld	a, (hl+)
      000CF5 5F                    3180 	ld	e, a
      000CF6 56                    3181 	ld	d, (hl)
      000CF7 1A                    3182 	ld	a, (de)
      000CF8 4F                    3183 	ld	c, a
      000CF9 13                    3184 	inc	de
      000CFA 1A                    3185 	ld	a, (de)
      000CFB 47                    3186 	ld	b, a
      000CFC 58                    3187 	ld	e, b
      000CFD AF                    3188 	xor	a, a
      000CFE 57                    3189 	ld	d, a
      000CFF B9                    3190 	cp	a, c
      000D00 98                    3191 	sbc	a, b
      000D01 CB 7B                 3192 	bit	7, e
      000D03 28 07                 3193 	jr	Z, 00300$
      000D05 CB 7A                 3194 	bit	7, d
      000D07 20 08                 3195 	jr	NZ, 00301$
      000D09 BF                    3196 	cp	a, a
      000D0A 18 05                 3197 	jr	00301$
      000D0C                       3198 00300$:
      000D0C CB 7A                 3199 	bit	7, d
      000D0E 28 01                 3200 	jr	Z, 00301$
      000D10 37                    3201 	scf
      000D11                       3202 00301$:
      000D11 30 2D                 3203 	jr	NC, 00132$
      000D13 79                    3204 	ld	a, c
      000D14 D6 98                 3205 	sub	a, #0x98
      000D16 78                    3206 	ld	a, b
      000D17 17                    3207 	rla
      000D18 3F                    3208 	ccf
      000D19 1F                    3209 	rra
      000D1A DE 80                 3210 	sbc	a, #0x80
      000D1C 30 22                 3211 	jr	NC, 00132$
                                   3212 ;main.c:290: enemies[i].visible = 1;
      000D1E F8 09                 3213 	ldhl	sp,	#9
      000D20 2A                    3214 	ld	a,	(hl+)
      000D21 66                    3215 	ld	h, (hl)
      000D22 6F                    3216 	ld	l, a
      000D23 36 01                 3217 	ld	(hl), #0x01
                                   3218 ;main.c:291: set_sprite_tile(10+i, enemies[i].sprite0);
      000D25 F8 07                 3219 	ldhl	sp,#7
      000D27 2A                    3220 	ld	a, (hl+)
      000D28 5F                    3221 	ld	e, a
      000D29 56                    3222 	ld	d, (hl)
      000D2A 21 06 00              3223 	ld	hl, #0x0006
      000D2D 19                    3224 	add	hl, de
      000D2E 4D                    3225 	ld	c, l
      000D2F 44                    3226 	ld	b, h
      000D30 0A                    3227 	ld	a, (bc)
      000D31 4F                    3228 	ld	c, a
      000D32 F8 0E                 3229 	ldhl	sp,	#14
                                   3230 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000D34 6E                    3231 	ld	l, (hl)
      000D35 11r00r00              3232 	ld	de, #_shadow_OAM+0
                                   3233 ;	spillPairReg hl
                                   3234 ;	spillPairReg hl
      000D38 26 00                 3235 	ld	h, #0x00
                                   3236 ;	spillPairReg hl
                                   3237 ;	spillPairReg hl
      000D3A 29                    3238 	add	hl, hl
      000D3B 29                    3239 	add	hl, hl
      000D3C 19                    3240 	add	hl, de
      000D3D 23                    3241 	inc	hl
      000D3E 23                    3242 	inc	hl
      000D3F 71                    3243 	ld	(hl), c
                                   3244 ;main.c:291: set_sprite_tile(10+i, enemies[i].sprite0);
      000D40                       3245 00132$:
                                   3246 ;main.c:296: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000D40 F8 0F                 3247 	ldhl	sp,	#15
      000D42 6E                    3248 	ld	l, (hl)
      000D43 26 00                 3249 	ld	h, #0x00
      000D45 29                    3250 	add	hl, hl
      000D46 29                    3251 	add	hl, hl
      000D47 29                    3252 	add	hl, hl
      000D48 29                    3253 	add	hl, hl
      000D49 11r00r00              3254 	ld	de, #_enemies
      000D4C 19                    3255 	add	hl, de
      000D4D 4D                    3256 	ld	c, l
      000D4E 44                    3257 	ld	b, h
      000D4F 03                    3258 	inc	bc
      000D50 03                    3259 	inc	bc
      000D51 0A                    3260 	ld	a, (bc)
      000D52 47                    3261 	ld	b, a
      000D53 4E                    3262 	ld	c, (hl)
      000D54 F8 0F                 3263 	ldhl	sp,	#15
      000D56 7E                    3264 	ld	a, (hl)
      000D57 C6 0A                 3265 	add	a, #0x0a
                                   3266 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000D59 6F                    3267 	ld	l, a
                                   3268 ;	spillPairReg hl
                                   3269 ;	spillPairReg hl
      000D5A 26 00                 3270 	ld	h, #0x00
                                   3271 ;	spillPairReg hl
                                   3272 ;	spillPairReg hl
      000D5C 29                    3273 	add	hl, hl
      000D5D 29                    3274 	add	hl, hl
      000D5E 11r00r00              3275 	ld	de, #_shadow_OAM
      000D61 19                    3276 	add	hl, de
                                   3277 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000D62 78                    3278 	ld	a, b
      000D63 22                    3279 	ld	(hl+), a
      000D64 71                    3280 	ld	(hl), c
                                   3281 ;main.c:279: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D65 F8 0F                 3282 	ldhl	sp,	#15
      000D67 34                    3283 	inc	(hl)
      000D68 C3rF9r0B              3284 	jp	00143$
      000D6B                       3285 00145$:
                                   3286 ;main.c:298: }
      000D6B E8 10                 3287 	add	sp, #16
      000D6D C9                    3288 	ret
                                   3289 ;main.c:300: void initEnemies(uint8_t loadSprites) {
                                   3290 ;	---------------------------------
                                   3291 ; Function initEnemies
                                   3292 ; ---------------------------------
      000D6E                       3293 _initEnemies::
      000D6E E8 F9                 3294 	add	sp, #-7
                                   3295 ;main.c:302: if (loadSprites) {
      000D70 F8 09                 3296 	ldhl	sp,	#9
      000D72 7E                    3297 	ld	a, (hl)
      000D73 B7                    3298 	or	a, a
      000D74 28 0D                 3299 	jr	Z, 00116$
                                   3300 ;main.c:304: set_sprite_data(9, 2, enemy1);
      000D76 11rF7r04              3301 	ld	de, #_enemy1
      000D79 D5                    3302 	push	de
      000D7A 21 09 02              3303 	ld	hl, #0x209
      000D7D E5                    3304 	push	hl
      000D7E CDr00r00              3305 	call	_set_sprite_data
      000D81 E8 04                 3306 	add	sp, #4
                                   3307 ;main.c:309: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D83                       3308 00116$:
      000D83 0E 00                 3309 	ld	c, #0x00
      000D85                       3310 00109$:
      000D85 21r19r05              3311 	ld	hl, #_ENEMYCOUNT
      000D88 46                    3312 	ld	b, (hl)
      000D89 79                    3313 	ld	a, c
      000D8A 90                    3314 	sub	a, b
      000D8B D2r28r0E              3315 	jp	NC, 00111$
                                   3316 ;main.c:310: if (enemies[i].alive == 0) {
      000D8E 69                    3317 	ld	l, c
                                   3318 ;	spillPairReg hl
                                   3319 ;	spillPairReg hl
      000D8F 26 00                 3320 	ld	h, #0x00
                                   3321 ;	spillPairReg hl
                                   3322 ;	spillPairReg hl
      000D91 29                    3323 	add	hl, hl
      000D92 29                    3324 	add	hl, hl
      000D93 29                    3325 	add	hl, hl
      000D94 29                    3326 	add	hl, hl
      000D95 5D                    3327 	ld	e, l
      000D96 54                    3328 	ld	d, h
      000D97 21r00r00              3329 	ld	hl, #_enemies
      000D9A 19                    3330 	add	hl, de
      000D9B 33                    3331 	inc	sp
      000D9C 33                    3332 	inc	sp
      000D9D 5D                    3333 	ld	e, l
      000D9E 54                    3334 	ld	d, h
      000D9F D5                    3335 	push	de
      000DA0 21 09 00              3336 	ld	hl, #0x0009
      000DA3 19                    3337 	add	hl, de
      000DA4 5D                    3338 	ld	e, l
      000DA5 54                    3339 	ld	d, h
      000DA6 1A                    3340 	ld	a, (de)
      000DA7 B7                    3341 	or	a, a
      000DA8 20 7A                 3342 	jr	NZ, 00110$
                                   3343 ;main.c:312: enemies[i] = blob;
      000DAA D1                    3344 	pop	de
      000DAB D5                    3345 	push	de
      000DAC C5                    3346 	push	bc
      000DAD 21 10 00              3347 	ld	hl, #0x0010
      000DB0 E5                    3348 	push	hl
      000DB1 21r08r00              3349 	ld	hl, #_blob
      000DB4 E5                    3350 	push	hl
      000DB5 D5                    3351 	push	de
      000DB6 CDr00r00              3352 	call	___memcpy
      000DB9 E8 06                 3353 	add	sp, #6
      000DBB CDr00r00              3354 	call	_rand
      000DBE 7B                    3355 	ld	a, e
      000DBF C1                    3356 	pop	bc
      000DC0 E6 07                 3357 	and	a, #0x07
                                   3358 ;main.c:316: enemies[i].x = xSpawnPositions[posIndex];
      000DC2 47                    3359 	ld	b, a
      000DC3 C6r1A                 3360 	add	a,#<(_xSpawnPositions)
      000DC5 5F                    3361 	ld	e, a
      000DC6 3Es05                 3362 	ld	a, #>(_xSpawnPositions)
      000DC8 CE 00                 3363 	adc	a, #0x00
      000DCA 57                    3364 	ld	d, a
      000DCB 1A                    3365 	ld	a, (de)
      000DCC F8 02                 3366 	ldhl	sp,	#2
      000DCE 22                    3367 	ld	(hl+), a
      000DCF AF                    3368 	xor	a, a
      000DD0 32                    3369 	ld	(hl-), a
      000DD1 D1                    3370 	pop	de
      000DD2 D5                    3371 	push	de
      000DD3 2A                    3372 	ld	a, (hl+)
      000DD4 12                    3373 	ld	(de), a
      000DD5 13                    3374 	inc	de
      000DD6 7E                    3375 	ld	a, (hl)
      000DD7 12                    3376 	ld	(de), a
                                   3377 ;main.c:317: enemies[i].y = ySpawnPositions[posIndex];
      000DD8 D1                    3378 	pop	de
      000DD9 D5                    3379 	push	de
      000DDA 13                    3380 	inc	de
      000DDB 13                    3381 	inc	de
      000DDC 78                    3382 	ld	a, b
      000DDD C6r22                 3383 	add	a, #<(_ySpawnPositions)
      000DDF 6F                    3384 	ld	l, a
                                   3385 ;	spillPairReg hl
                                   3386 ;	spillPairReg hl
      000DE0 3E 00                 3387 	ld	a, #0x00
      000DE2 CEs05                 3388 	adc	a, #>(_ySpawnPositions)
      000DE4 67                    3389 	ld	h, a
                                   3390 ;	spillPairReg hl
                                   3391 ;	spillPairReg hl
      000DE5 7E                    3392 	ld	a, (hl)
      000DE6 F8 04                 3393 	ldhl	sp,	#4
      000DE8 22                    3394 	ld	(hl+), a
      000DE9 AF                    3395 	xor	a, a
      000DEA 32                    3396 	ld	(hl-), a
      000DEB 2A                    3397 	ld	a, (hl+)
      000DEC 12                    3398 	ld	(de), a
      000DED 13                    3399 	inc	de
      000DEE 7E                    3400 	ld	a, (hl)
      000DEF 12                    3401 	ld	(de), a
                                   3402 ;main.c:319: set_sprite_tile(10+i, enemies[i].sprite0);
      000DF0 D1                    3403 	pop	de
      000DF1 D5                    3404 	push	de
      000DF2 21 06 00              3405 	ld	hl, #0x0006
      000DF5 19                    3406 	add	hl, de
      000DF6 5D                    3407 	ld	e, l
      000DF7 54                    3408 	ld	d, h
      000DF8 1A                    3409 	ld	a, (de)
      000DF9 47                    3410 	ld	b, a
      000DFA 79                    3411 	ld	a, c
      000DFB C6 0A                 3412 	add	a, #0x0a
      000DFD F8 06                 3413 	ldhl	sp,	#6
      000DFF 77                    3414 	ld	(hl), a
      000E00 5E                    3415 	ld	e, (hl)
                                   3416 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E01 26 00                 3417 	ld	h, #0x00
                                   3418 ;	spillPairReg hl
                                   3419 ;	spillPairReg hl
      000E03 6B                    3420 	ld	l, e
      000E04 29                    3421 	add	hl, hl
      000E05 29                    3422 	add	hl, hl
      000E06 11r00r00              3423 	ld	de, #_shadow_OAM
      000E09 19                    3424 	add	hl, de
      000E0A 23                    3425 	inc	hl
      000E0B 23                    3426 	inc	hl
      000E0C 70                    3427 	ld	(hl), b
                                   3428 ;main.c:320: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000E0D F8 04                 3429 	ldhl	sp,	#4
      000E0F 3A                    3430 	ld	a, (hl-)
      000E10 2B                    3431 	dec	hl
      000E11 5F                    3432 	ld	e, a
      000E12 46                    3433 	ld	b, (hl)
      000E13 F8 06                 3434 	ldhl	sp,	#6
      000E15 56                    3435 	ld	d, (hl)
                                   3436 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E16 26 00                 3437 	ld	h, #0x00
                                   3438 ;	spillPairReg hl
                                   3439 ;	spillPairReg hl
      000E18 6A                    3440 	ld	l, d
      000E19 29                    3441 	add	hl, hl
      000E1A 29                    3442 	add	hl, hl
      000E1B D5                    3443 	push	de
      000E1C 11r00r00              3444 	ld	de, #_shadow_OAM
      000E1F 19                    3445 	add	hl, de
      000E20 D1                    3446 	pop	de
                                   3447 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E21 7B                    3448 	ld	a, e
      000E22 22                    3449 	ld	(hl+), a
      000E23 70                    3450 	ld	(hl), b
                                   3451 ;main.c:320: move_sprite(10+i, enemies[i].x, enemies[i].y);
      000E24                       3452 00110$:
                                   3453 ;main.c:309: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E24 0C                    3454 	inc	c
      000E25 C3r85r0D              3455 	jp	00109$
      000E28                       3456 00111$:
                                   3457 ;main.c:323: }
      000E28 E8 07                 3458 	add	sp, #7
      000E2A C9                    3459 	ret
                                   3460 ;main.c:326: void move() {
                                   3461 ;	---------------------------------
                                   3462 ; Function move
                                   3463 ; ---------------------------------
      000E2B                       3464 _move::
      000E2B 3B                    3465 	dec	sp
                                   3466 ;main.c:330: if (joydata & J_A) {
      000E2C FAr82r00              3467 	ld	a, (#_joydata)
      000E2F CB 67                 3468 	bit	4, a
      000E31 28 16                 3469 	jr	Z, 00102$
                                   3470 ;main.c:331: xSpeed += xDir + xDir + xDir;
      000E33 21r24r00              3471 	ld	hl, #_xDir
      000E36 7E                    3472 	ld	a, (hl)
      000E37 87                    3473 	add	a, a
      000E38 86                    3474 	add	a, (hl)
      000E39 21r26r00              3475 	ld	hl, #_xSpeed
      000E3C 86                    3476 	add	a, (hl)
      000E3D 77                    3477 	ld	(hl), a
                                   3478 ;main.c:332: ySpeed += yDir + yDir + yDir;
      000E3E 21r25r00              3479 	ld	hl, #_yDir
      000E41 7E                    3480 	ld	a, (hl)
      000E42 87                    3481 	add	a, a
      000E43 86                    3482 	add	a, (hl)
      000E44 21r27r00              3483 	ld	hl, #_ySpeed
      000E47 86                    3484 	add	a, (hl)
      000E48 77                    3485 	ld	(hl), a
      000E49                       3486 00102$:
                                   3487 ;main.c:336: xSpeed = clamp(xSpeed, -100, 100);
      000E49 21r26r00              3488 	ld	hl, #_xSpeed
      000E4C 4E                    3489 	ld	c, (hl)
                                   3490 ;main.c:190: return (value < min) ? min : (value > max) ? max : value;
      000E4D 79                    3491 	ld	a, c
      000E4E EE 80                 3492 	xor	a, #0x80
      000E50 D6 1C                 3493 	sub	a, #0x1c
      000E52 30 04                 3494 	jr	NC, 00147$
      000E54 0E 9C                 3495 	ld	c, #0x9c
      000E56 18 19                 3496 	jr	00148$
      000E58                       3497 00147$:
      000E58 59                    3498 	ld	e, c
      000E59 3E 64                 3499 	ld	a,#0x64
      000E5B 57                    3500 	ld	d,a
      000E5C 91                    3501 	sub	a, c
      000E5D CB 7B                 3502 	bit	7, e
      000E5F 28 07                 3503 	jr	Z, 00289$
      000E61 CB 7A                 3504 	bit	7, d
      000E63 20 08                 3505 	jr	NZ, 00290$
      000E65 BF                    3506 	cp	a, a
      000E66 18 05                 3507 	jr	00290$
      000E68                       3508 00289$:
      000E68 CB 7A                 3509 	bit	7, d
      000E6A 28 01                 3510 	jr	Z, 00290$
      000E6C 37                    3511 	scf
      000E6D                       3512 00290$:
      000E6D 30 02                 3513 	jr	NC, 00149$
      000E6F 0E 64                 3514 	ld	c, #0x64
      000E71                       3515 00149$:
      000E71                       3516 00148$:
      000E71 21r26r00              3517 	ld	hl, #_xSpeed
      000E74 71                    3518 	ld	(hl), c
                                   3519 ;main.c:337: ySpeed = clamp(ySpeed, -100, 100);
      000E75 21r27r00              3520 	ld	hl, #_ySpeed
      000E78 4E                    3521 	ld	c, (hl)
                                   3522 ;main.c:190: return (value < min) ? min : (value > max) ? max : value;
      000E79 79                    3523 	ld	a, c
      000E7A EE 80                 3524 	xor	a, #0x80
      000E7C D6 1C                 3525 	sub	a, #0x1c
      000E7E 30 04                 3526 	jr	NC, 00151$
      000E80 0E 9C                 3527 	ld	c, #0x9c
      000E82 18 19                 3528 	jr	00152$
      000E84                       3529 00151$:
      000E84 59                    3530 	ld	e, c
      000E85 3E 64                 3531 	ld	a,#0x64
      000E87 57                    3532 	ld	d,a
      000E88 91                    3533 	sub	a, c
      000E89 CB 7B                 3534 	bit	7, e
      000E8B 28 07                 3535 	jr	Z, 00291$
      000E8D CB 7A                 3536 	bit	7, d
      000E8F 20 08                 3537 	jr	NZ, 00292$
      000E91 BF                    3538 	cp	a, a
      000E92 18 05                 3539 	jr	00292$
      000E94                       3540 00291$:
      000E94 CB 7A                 3541 	bit	7, d
      000E96 28 01                 3542 	jr	Z, 00292$
      000E98 37                    3543 	scf
      000E99                       3544 00292$:
      000E99 30 02                 3545 	jr	NC, 00153$
      000E9B 0E 64                 3546 	ld	c, #0x64
      000E9D                       3547 00153$:
      000E9D                       3548 00152$:
      000E9D 21r27r00              3549 	ld	hl, #_ySpeed
      000EA0 71                    3550 	ld	(hl), c
                                   3551 ;main.c:339: xOverflow = 0;
      000EA1 AF                    3552 	xor	a, a
      000EA2 21r32r00              3553 	ld	hl, #_xOverflow
      000EA5 22                    3554 	ld	(hl+), a
      000EA6 77                    3555 	ld	(hl), a
                                   3556 ;main.c:340: yOverflow = 0;
      000EA7 AF                    3557 	xor	a, a
      000EA8 21r34r00              3558 	ld	hl, #_yOverflow
      000EAB 22                    3559 	ld	(hl+), a
      000EAC 77                    3560 	ld	(hl), a
                                   3561 ;main.c:345: uint8_t xCollisionPoint = playerDrawX -4; 
      000EAD 21r2Cr00              3562 	ld	hl, #_playerDrawX
      000EB0 46                    3563 	ld	b, (hl)
      000EB1 78                    3564 	ld	a, b
      000EB2 C6 FC                 3565 	add	a, #0xfc
      000EB4 4F                    3566 	ld	c, a
                                   3567 ;main.c:347: if (xSpeed > 0) {
      000EB5 21r26r00              3568 	ld	hl, #_xSpeed
      000EB8 5E                    3569 	ld	e, (hl)
      000EB9 AF                    3570 	xor	a, a
      000EBA 57                    3571 	ld	d, a
      000EBB 96                    3572 	sub	a, (hl)
      000EBC CB 7B                 3573 	bit	7, e
      000EBE 28 07                 3574 	jr	Z, 00293$
      000EC0 CB 7A                 3575 	bit	7, d
      000EC2 20 08                 3576 	jr	NZ, 00294$
      000EC4 BF                    3577 	cp	a, a
      000EC5 18 05                 3578 	jr	00294$
      000EC7                       3579 00293$:
      000EC7 CB 7A                 3580 	bit	7, d
      000EC9 28 01                 3581 	jr	Z, 00294$
      000ECB 37                    3582 	scf
      000ECC                       3583 00294$:
      000ECC 30 04                 3584 	jr	NC, 00104$
                                   3585 ;main.c:348: xCollisionPoint = playerDrawX; //right edge
      000ECE 21r2Cr00              3586 	ld	hl, #_playerDrawX
      000ED1 4E                    3587 	ld	c, (hl)
      000ED2                       3588 00104$:
                                   3589 ;main.c:350: if (xSpeed < 0) {
      000ED2 FAr26r00              3590 	ld	a, (#_xSpeed)
      000ED5 CB 7F                 3591 	bit	7, a
      000ED7 28 04                 3592 	jr	Z, 00106$
                                   3593 ;main.c:351: xCollisionPoint = playerDrawX -8; //left edge
      000ED9 78                    3594 	ld	a, b
      000EDA C6 F8                 3595 	add	a, #0xf8
      000EDC 4F                    3596 	ld	c, a
      000EDD                       3597 00106$:
                                   3598 ;main.c:355: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      000EDD 06 00                 3599 	ld	b, #0x00
      000EDF 79                    3600 	ld	a, c
      000EE0 21r2Er00              3601 	ld	hl, #_bgX
      000EE3 86                    3602 	add	a, (hl)
      000EE4 23                    3603 	inc	hl
      000EE5 4F                    3604 	ld	c, a
      000EE6 78                    3605 	ld	a, b
      000EE7 8E                    3606 	adc	a, (hl)
      000EE8 47                    3607 	ld	b, a
      000EE9 CB 28                 3608 	sra	b
      000EEB CB 19                 3609 	rr	c
      000EED CB 28                 3610 	sra	b
      000EEF CB 19                 3611 	rr	c
      000EF1 CB 28                 3612 	sra	b
      000EF3 CB 19                 3613 	rr	c
      000EF5 11 20 00              3614 	ld	de, #0x0020
      000EF8 D5                    3615 	push	de
      000EF9 C5                    3616 	push	bc
      000EFA CDr00r00              3617 	call	__modsint
      000EFD E8 04                 3618 	add	sp, #4
                                   3619 ;main.c:359: uint8_t bgindY = ((playerDrawY-12 + bgY) >> 3)%32; 
      000EFF FAr2Dr00              3620 	ld	a, (#_playerDrawY)
      000F02 06 00                 3621 	ld	b, #0x00
      000F04 C6 F4                 3622 	add	a, #0xf4
      000F06 4F                    3623 	ld	c, a
      000F07 78                    3624 	ld	a, b
      000F08 CE FF                 3625 	adc	a, #0xff
      000F0A 47                    3626 	ld	b, a
      000F0B 79                    3627 	ld	a, c
      000F0C 21r30r00              3628 	ld	hl, #_bgY
      000F0F 86                    3629 	add	a, (hl)
      000F10 23                    3630 	inc	hl
      000F11 4F                    3631 	ld	c, a
      000F12 78                    3632 	ld	a, b
      000F13 8E                    3633 	adc	a, (hl)
      000F14 47                    3634 	ld	b, a
      000F15 CB 28                 3635 	sra	b
      000F17 CB 19                 3636 	rr	c
      000F19 CB 28                 3637 	sra	b
      000F1B CB 19                 3638 	rr	c
      000F1D CB 28                 3639 	sra	b
      000F1F CB 19                 3640 	rr	c
      000F21 D5                    3641 	push	de
      000F22 21 20 00              3642 	ld	hl, #0x0020
      000F25 E5                    3643 	push	hl
      000F26 C5                    3644 	push	bc
      000F27 CDr00r00              3645 	call	__modsint
      000F2A E8 04                 3646 	add	sp, #4
      000F2C 6B                    3647 	ld	l, e
                                   3648 ;	spillPairReg hl
                                   3649 ;	spillPairReg hl
                                   3650 ;	spillPairReg hl
                                   3651 ;	spillPairReg hl
      000F2D D1                    3652 	pop	de
                                   3653 ;main.c:362: uint16_t ind = 32*bgindY + bgindX;
      000F2E 26 00                 3654 	ld	h, #0x00
                                   3655 ;	spillPairReg hl
                                   3656 ;	spillPairReg hl
      000F30 29                    3657 	add	hl, hl
      000F31 29                    3658 	add	hl, hl
      000F32 29                    3659 	add	hl, hl
      000F33 29                    3660 	add	hl, hl
      000F34 29                    3661 	add	hl, hl
      000F35 19                    3662 	add	hl, de
                                   3663 ;main.c:363: uint8_t result = background1[ind] != BLANK[0];
      000F36 01r87r00              3664 	ld	bc,#_background1
      000F39 09                    3665 	add	hl,bc
      000F3A 4E                    3666 	ld	c, (hl)
      000F3B FAr17r05              3667 	ld	a, (#_BLANK + 0)
      000F3E F8 00                 3668 	ldhl	sp,	#0
      000F40 77                    3669 	ld	(hl), a
      000F41 79                    3670 	ld	a, c
      000F42 F8 00                 3671 	ldhl	sp,	#0
      000F44 96                    3672 	sub	a, (hl)
      000F45 3E 01                 3673 	ld	a, #0x01
      000F47 28 01                 3674 	jr	Z, 00296$
      000F49 AF                    3675 	xor	a, a
      000F4A                       3676 00296$:
                                   3677 ;main.c:364: if (result == 0) {
      000F4A EE 01                 3678 	xor	a,#0x01
      000F4C C2r19r10              3679 	jp	NZ, 00111$
                                   3680 ;main.c:365: playerX+=xSpeed;
      000F4F FAr26r00              3681 	ld	a, (#_xSpeed)
      000F52 4F                    3682 	ld	c, a
      000F53 07                    3683 	rlca
      000F54 9F                    3684 	sbc	a, a
      000F55 47                    3685 	ld	b, a
      000F56 21r28r00              3686 	ld	hl, #_playerX
      000F59 6E                    3687 	ld	l, (hl)
                                   3688 ;	spillPairReg hl
                                   3689 ;	spillPairReg hl
      000F5A FAr29r00              3690 	ld	a, (_playerX + 1)
      000F5D 67                    3691 	ld	h, a
                                   3692 ;	spillPairReg hl
                                   3693 ;	spillPairReg hl
      000F5E 09                    3694 	add	hl, bc
      000F5F 4D                    3695 	ld	c, l
      000F60 7C                    3696 	ld	a, h
      000F61 21r28r00              3697 	ld	hl, #_playerX
      000F64 71                    3698 	ld	(hl), c
      000F65 23                    3699 	inc	hl
                                   3700 ;main.c:367: uint16_t limitedPlayerX = u16Clamp(playerX, 58<<5, 110<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      000F66 32                    3701 	ld	(hl-), a
      000F67 2A                    3702 	ld	a, (hl+)
      000F68 4F                    3703 	ld	c, a
      000F69 46                    3704 	ld	b, (hl)
      000F6A 79                    3705 	ld	a, c
      000F6B D6 40                 3706 	sub	a, #0x40
      000F6D 78                    3707 	ld	a, b
      000F6E DE 07                 3708 	sbc	a, #0x07
      000F70 30 05                 3709 	jr	NC, 00155$
      000F72 01 40 07              3710 	ld	bc, #0x0740
      000F75 18 0B                 3711 	jr	00156$
      000F77                       3712 00155$:
      000F77 3E C0                 3713 	ld	a, #0xc0
      000F79 B9                    3714 	cp	a, c
      000F7A 3E 0D                 3715 	ld	a, #0x0d
      000F7C 98                    3716 	sbc	a, b
      000F7D 30 03                 3717 	jr	NC, 00157$
      000F7F 01 C0 0D              3718 	ld	bc, #0x0dc0
      000F82                       3719 00157$:
      000F82                       3720 00156$:
      000F82 59                    3721 	ld	e,c
      000F83 50                    3722 	ld	d,b
                                   3723 ;main.c:369: xOverflow = (playerX - limitedPlayerX);
      000F84 FAr28r00              3724 	ld	a, (#_playerX)
      000F87 93                    3725 	sub	a, e
      000F88 EAr32r00              3726 	ld	(#_xOverflow),a
      000F8B FAr29r00              3727 	ld	a, (#_playerX + 1)
      000F8E 9A                    3728 	sbc	a, d
      000F8F 21r33r00              3729 	ld	hl, #_xOverflow + 1
                                   3730 ;main.c:370: if (xOverflow >= 0) {
      000F92 32                    3731 	ld	(hl-), a
      000F93 6E                    3732 	ld	l, (hl)
                                   3733 ;	spillPairReg hl
                                   3734 ;	spillPairReg hl
      000F94 FAr33r00              3735 	ld	a, (_xOverflow + 1)
                                   3736 ;	spillPairReg hl
                                   3737 ;	spillPairReg hl
      000F97 CB 7F                 3738 	bit	7,a
      000F99 20 22                 3739 	jr	NZ, 00108$
                                   3740 ;main.c:371: xOverflow = xOverflow >> 5;
      000F9B 21r33r00              3741 	ld	hl, #_xOverflow + 1
      000F9E CB 2E                 3742 	sra	(hl)
      000FA0 2B                    3743 	dec	hl
      000FA1 CB 1E                 3744 	rr	(hl)
      000FA3 23                    3745 	inc	hl
      000FA4 CB 2E                 3746 	sra	(hl)
      000FA6 2B                    3747 	dec	hl
      000FA7 CB 1E                 3748 	rr	(hl)
      000FA9 23                    3749 	inc	hl
      000FAA CB 2E                 3750 	sra	(hl)
      000FAC 2B                    3751 	dec	hl
      000FAD CB 1E                 3752 	rr	(hl)
      000FAF 23                    3753 	inc	hl
      000FB0 CB 2E                 3754 	sra	(hl)
      000FB2 2B                    3755 	dec	hl
      000FB3 CB 1E                 3756 	rr	(hl)
      000FB5 23                    3757 	inc	hl
      000FB6 CB 2E                 3758 	sra	(hl)
      000FB8 2B                    3759 	dec	hl
      000FB9 CB 1E                 3760 	rr	(hl)
      000FBB 18 25                 3761 	jr	00109$
      000FBD                       3762 00108$:
                                   3763 ;main.c:374: xOverflow = -((-xOverflow) >> 5);
      000FBD AF                    3764 	xor	a, a
      000FBE 21r32r00              3765 	ld	hl, #_xOverflow
      000FC1 96                    3766 	sub	a, (hl)
      000FC2 23                    3767 	inc	hl
      000FC3 5F                    3768 	ld	e, a
      000FC4 9F                    3769 	sbc	a, a
      000FC5 96                    3770 	sub	a, (hl)
      000FC6 2B                    3771 	dec	hl
      000FC7 57                    3772 	ld	d, a
      000FC8 CB 2A                 3773 	sra	d
      000FCA CB 1B                 3774 	rr	e
      000FCC CB 2A                 3775 	sra	d
      000FCE CB 1B                 3776 	rr	e
      000FD0 CB 2A                 3777 	sra	d
      000FD2 CB 1B                 3778 	rr	e
      000FD4 CB 2A                 3779 	sra	d
      000FD6 CB 1B                 3780 	rr	e
      000FD8 CB 2A                 3781 	sra	d
      000FDA CB 1B                 3782 	rr	e
      000FDC AF                    3783 	xor	a, a
      000FDD 93                    3784 	sub	a, e
      000FDE 22                    3785 	ld	(hl+), a
      000FDF 9F                    3786 	sbc	a, a
      000FE0 92                    3787 	sub	a, d
      000FE1 77                    3788 	ld	(hl), a
      000FE2                       3789 00109$:
                                   3790 ;main.c:376: bgX += xOverflow;
      000FE2 FAr2Er00              3791 	ld	a, (#_bgX)
      000FE5 21r32r00              3792 	ld	hl, #_xOverflow
      000FE8 86                    3793 	add	a, (hl)
      000FE9 21r2Er00              3794 	ld	hl, #_bgX
      000FEC 22                    3795 	ld	(hl+), a
      000FED 7E                    3796 	ld	a, (hl)
      000FEE 21r33r00              3797 	ld	hl, #_xOverflow + 1
      000FF1 8E                    3798 	adc	a, (hl)
      000FF2 EAr2Fr00              3799 	ld	(#_bgX + 1),a
                                   3800 ;main.c:377: playerX = limitedPlayerX;
      000FF5 21r28r00              3801 	ld	hl, #_playerX
      000FF8 79                    3802 	ld	a, c
      000FF9 22                    3803 	ld	(hl+), a
                                   3804 ;main.c:378: playerDrawX=playerX >> 5;
      000FFA 78                    3805 	ld	a, b
      000FFB 32                    3806 	ld	(hl-), a
      000FFC 2A                    3807 	ld	a, (hl+)
      000FFD 4F                    3808 	ld	c, a
      000FFE 46                    3809 	ld	b, (hl)
      000FFF CB 38                 3810 	srl	b
      001001 CB 19                 3811 	rr	c
      001003 CB 38                 3812 	srl	b
      001005 CB 19                 3813 	rr	c
      001007 CB 38                 3814 	srl	b
      001009 CB 19                 3815 	rr	c
      00100B CB 38                 3816 	srl	b
      00100D CB 19                 3817 	rr	c
      00100F CB 38                 3818 	srl	b
      001011 CB 19                 3819 	rr	c
      001013 21r2Cr00              3820 	ld	hl, #_playerDrawX
      001016 71                    3821 	ld	(hl), c
      001017 18 05                 3822 	jr	00112$
      001019                       3823 00111$:
                                   3824 ;main.c:386: xSpeed = 0;
      001019 21r26r00              3825 	ld	hl, #_xSpeed
      00101C 36 00                 3826 	ld	(hl), #0x00
      00101E                       3827 00112$:
                                   3828 ;main.c:394: uint8_t yCollisionPoint = playerDrawY -12; 
      00101E 21r2Dr00              3829 	ld	hl, #_playerDrawY
      001021 46                    3830 	ld	b, (hl)
      001022 78                    3831 	ld	a, b
      001023 C6 F4                 3832 	add	a, #0xf4
      001025 4F                    3833 	ld	c, a
                                   3834 ;main.c:396: if (ySpeed > 0) {
      001026 21r27r00              3835 	ld	hl, #_ySpeed
      001029 5E                    3836 	ld	e, (hl)
      00102A AF                    3837 	xor	a, a
      00102B 57                    3838 	ld	d, a
      00102C 96                    3839 	sub	a, (hl)
      00102D CB 7B                 3840 	bit	7, e
      00102F 28 07                 3841 	jr	Z, 00297$
      001031 CB 7A                 3842 	bit	7, d
      001033 20 08                 3843 	jr	NZ, 00298$
      001035 BF                    3844 	cp	a, a
      001036 18 05                 3845 	jr	00298$
      001038                       3846 00297$:
      001038 CB 7A                 3847 	bit	7, d
      00103A 28 01                 3848 	jr	Z, 00298$
      00103C 37                    3849 	scf
      00103D                       3850 00298$:
      00103D 30 04                 3851 	jr	NC, 00114$
                                   3852 ;main.c:397: yCollisionPoint = playerDrawY - 8; //bottom edge, only half the height, so -8
      00103F 78                    3853 	ld	a, b
      001040 C6 F8                 3854 	add	a, #0xf8
      001042 4F                    3855 	ld	c, a
      001043                       3856 00114$:
                                   3857 ;main.c:399: if (ySpeed < 0) {
      001043 FAr27r00              3858 	ld	a, (#_ySpeed)
      001046 CB 7F                 3859 	bit	7, a
      001048 28 04                 3860 	jr	Z, 00116$
                                   3861 ;main.c:400: yCollisionPoint = playerDrawY -16; //top edge, 
      00104A 78                    3862 	ld	a, b
      00104B C6 F0                 3863 	add	a, #0xf0
      00104D 4F                    3864 	ld	c, a
      00104E                       3865 00116$:
                                   3866 ;main.c:404: bgindX = ((playerDrawX -4 + bgX) >> 3)%32;
      00104E FAr2Cr00              3867 	ld	a, (#_playerDrawX)
      001051 06 00                 3868 	ld	b, #0x00
      001053 C6 FC                 3869 	add	a, #0xfc
      001055 5F                    3870 	ld	e, a
      001056 78                    3871 	ld	a, b
      001057 CE FF                 3872 	adc	a, #0xff
      001059 57                    3873 	ld	d, a
      00105A 7B                    3874 	ld	a, e
      00105B 21r2Er00              3875 	ld	hl, #_bgX
      00105E 86                    3876 	add	a, (hl)
      00105F 23                    3877 	inc	hl
      001060 5F                    3878 	ld	e, a
      001061 7A                    3879 	ld	a, d
      001062 8E                    3880 	adc	a, (hl)
      001063 57                    3881 	ld	d, a
      001064 CB 2A                 3882 	sra	d
      001066 CB 1B                 3883 	rr	e
      001068 CB 2A                 3884 	sra	d
      00106A CB 1B                 3885 	rr	e
      00106C CB 2A                 3886 	sra	d
      00106E CB 1B                 3887 	rr	e
      001070 C5                    3888 	push	bc
      001071 21 20 00              3889 	ld	hl, #0x0020
      001074 E5                    3890 	push	hl
      001075 D5                    3891 	push	de
      001076 CDr00r00              3892 	call	__modsint
      001079 E8 04                 3893 	add	sp, #4
      00107B C1                    3894 	pop	bc
                                   3895 ;main.c:407: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      00107C 06 00                 3896 	ld	b, #0x00
      00107E 79                    3897 	ld	a, c
      00107F 21r30r00              3898 	ld	hl, #_bgY
      001082 86                    3899 	add	a, (hl)
      001083 23                    3900 	inc	hl
      001084 4F                    3901 	ld	c, a
      001085 78                    3902 	ld	a, b
      001086 8E                    3903 	adc	a, (hl)
      001087 47                    3904 	ld	b, a
      001088 CB 28                 3905 	sra	b
      00108A CB 19                 3906 	rr	c
      00108C CB 28                 3907 	sra	b
      00108E CB 19                 3908 	rr	c
      001090 CB 28                 3909 	sra	b
      001092 CB 19                 3910 	rr	c
      001094 D5                    3911 	push	de
      001095 21 20 00              3912 	ld	hl, #0x0020
      001098 E5                    3913 	push	hl
      001099 C5                    3914 	push	bc
      00109A CDr00r00              3915 	call	__modsint
      00109D E8 04                 3916 	add	sp, #4
      00109F 6B                    3917 	ld	l, e
                                   3918 ;	spillPairReg hl
                                   3919 ;	spillPairReg hl
      0010A0 D1                    3920 	pop	de
                                   3921 ;main.c:410: ind = 32*bgindY + bgindX;
      0010A1 26 00                 3922 	ld	h, #0x00
                                   3923 ;	spillPairReg hl
                                   3924 ;	spillPairReg hl
      0010A3 29                    3925 	add	hl, hl
      0010A4 29                    3926 	add	hl, hl
      0010A5 29                    3927 	add	hl, hl
      0010A6 29                    3928 	add	hl, hl
      0010A7 29                    3929 	add	hl, hl
      0010A8 19                    3930 	add	hl, de
                                   3931 ;main.c:411: result = background1[ind] != BLANK[0];
      0010A9 11r87r00              3932 	ld	de, #_background1
      0010AC 19                    3933 	add	hl, de
      0010AD 4E                    3934 	ld	c, (hl)
      0010AE F8 00                 3935 	ldhl	sp,	#0
      0010B0 7E                    3936 	ld	a, (hl)
      0010B1 91                    3937 	sub	a, c
      0010B2 3E 01                 3938 	ld	a, #0x01
      0010B4 28 01                 3939 	jr	Z, 00300$
      0010B6 AF                    3940 	xor	a, a
      0010B7                       3941 00300$:
                                   3942 ;main.c:412: if (result == 0) {
      0010B7 EE 01                 3943 	xor	a,#0x01
      0010B9 C2r87r11              3944 	jp	NZ, 00121$
                                   3945 ;main.c:413: playerY += ySpeed;
      0010BC FAr27r00              3946 	ld	a, (#_ySpeed)
      0010BF 4F                    3947 	ld	c, a
      0010C0 07                    3948 	rlca
      0010C1 9F                    3949 	sbc	a, a
      0010C2 47                    3950 	ld	b, a
      0010C3 21r2Ar00              3951 	ld	hl, #_playerY
      0010C6 6E                    3952 	ld	l, (hl)
                                   3953 ;	spillPairReg hl
                                   3954 ;	spillPairReg hl
      0010C7 FAr2Br00              3955 	ld	a, (_playerY + 1)
      0010CA 67                    3956 	ld	h, a
                                   3957 ;	spillPairReg hl
                                   3958 ;	spillPairReg hl
      0010CB 09                    3959 	add	hl, bc
      0010CC 4D                    3960 	ld	c, l
      0010CD 44                    3961 	ld	b, h
      0010CE 21r2Ar00              3962 	ld	hl, #_playerY
      0010D1 79                    3963 	ld	a, c
      0010D2 22                    3964 	ld	(hl+), a
                                   3965 ;main.c:415: uint16_t limitedPlayerY = u16Clamp(playerY, 61<<5, 107<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      0010D3 78                    3966 	ld	a, b
      0010D4 32                    3967 	ld	(hl-), a
      0010D5 2A                    3968 	ld	a, (hl+)
      0010D6 5F                    3969 	ld	e, a
      0010D7 56                    3970 	ld	d, (hl)
      0010D8 7B                    3971 	ld	a, e
      0010D9 D6 A0                 3972 	sub	a, #0xa0
      0010DB 7A                    3973 	ld	a, d
      0010DC DE 07                 3974 	sbc	a, #0x07
      0010DE 30 05                 3975 	jr	NC, 00159$
      0010E0 11 A0 07              3976 	ld	de, #0x07a0
      0010E3 18 0B                 3977 	jr	00160$
      0010E5                       3978 00159$:
      0010E5 3E 60                 3979 	ld	a, #0x60
      0010E7 BB                    3980 	cp	a, e
      0010E8 3E 0D                 3981 	ld	a, #0x0d
      0010EA 9A                    3982 	sbc	a, d
      0010EB 30 03                 3983 	jr	NC, 00161$
      0010ED 11 60 0D              3984 	ld	de, #0x0d60
      0010F0                       3985 00161$:
      0010F0                       3986 00160$:
      0010F0 4B                    3987 	ld	c, e
      0010F1 42                    3988 	ld	b, d
                                   3989 ;main.c:417: yOverflow = (playerY - limitedPlayerY);
      0010F2 FAr2Ar00              3990 	ld	a, (#_playerY)
      0010F5 93                    3991 	sub	a, e
      0010F6 EAr34r00              3992 	ld	(#_yOverflow),a
      0010F9 FAr2Br00              3993 	ld	a, (#_playerY + 1)
      0010FC 9A                    3994 	sbc	a, d
      0010FD 21r35r00              3995 	ld	hl, #_yOverflow + 1
                                   3996 ;main.c:418: if (yOverflow >= 0) {
      001100 32                    3997 	ld	(hl-), a
      001101 6E                    3998 	ld	l, (hl)
                                   3999 ;	spillPairReg hl
                                   4000 ;	spillPairReg hl
      001102 FAr35r00              4001 	ld	a, (_yOverflow + 1)
                                   4002 ;	spillPairReg hl
                                   4003 ;	spillPairReg hl
      001105 CB 7F                 4004 	bit	7,a
      001107 20 22                 4005 	jr	NZ, 00118$
                                   4006 ;main.c:419: yOverflow = yOverflow >> 5;
      001109 21r35r00              4007 	ld	hl, #_yOverflow + 1
      00110C CB 2E                 4008 	sra	(hl)
      00110E 2B                    4009 	dec	hl
      00110F CB 1E                 4010 	rr	(hl)
      001111 23                    4011 	inc	hl
      001112 CB 2E                 4012 	sra	(hl)
      001114 2B                    4013 	dec	hl
      001115 CB 1E                 4014 	rr	(hl)
      001117 23                    4015 	inc	hl
      001118 CB 2E                 4016 	sra	(hl)
      00111A 2B                    4017 	dec	hl
      00111B CB 1E                 4018 	rr	(hl)
      00111D 23                    4019 	inc	hl
      00111E CB 2E                 4020 	sra	(hl)
      001120 2B                    4021 	dec	hl
      001121 CB 1E                 4022 	rr	(hl)
      001123 23                    4023 	inc	hl
      001124 CB 2E                 4024 	sra	(hl)
      001126 2B                    4025 	dec	hl
      001127 CB 1E                 4026 	rr	(hl)
      001129 18 25                 4027 	jr	00119$
      00112B                       4028 00118$:
                                   4029 ;main.c:422: yOverflow = -((-yOverflow) >> 5);
      00112B AF                    4030 	xor	a, a
      00112C 21r34r00              4031 	ld	hl, #_yOverflow
      00112F 96                    4032 	sub	a, (hl)
      001130 23                    4033 	inc	hl
      001131 5F                    4034 	ld	e, a
      001132 9F                    4035 	sbc	a, a
      001133 96                    4036 	sub	a, (hl)
      001134 2B                    4037 	dec	hl
      001135 57                    4038 	ld	d, a
      001136 CB 2A                 4039 	sra	d
      001138 CB 1B                 4040 	rr	e
      00113A CB 2A                 4041 	sra	d
      00113C CB 1B                 4042 	rr	e
      00113E CB 2A                 4043 	sra	d
      001140 CB 1B                 4044 	rr	e
      001142 CB 2A                 4045 	sra	d
      001144 CB 1B                 4046 	rr	e
      001146 CB 2A                 4047 	sra	d
      001148 CB 1B                 4048 	rr	e
      00114A AF                    4049 	xor	a, a
      00114B 93                    4050 	sub	a, e
      00114C 22                    4051 	ld	(hl+), a
      00114D 9F                    4052 	sbc	a, a
      00114E 92                    4053 	sub	a, d
      00114F 77                    4054 	ld	(hl), a
      001150                       4055 00119$:
                                   4056 ;main.c:424: bgY += yOverflow;
      001150 FAr30r00              4057 	ld	a, (#_bgY)
      001153 21r34r00              4058 	ld	hl, #_yOverflow
      001156 86                    4059 	add	a, (hl)
      001157 21r30r00              4060 	ld	hl, #_bgY
      00115A 22                    4061 	ld	(hl+), a
      00115B 7E                    4062 	ld	a, (hl)
      00115C 21r35r00              4063 	ld	hl, #_yOverflow + 1
      00115F 8E                    4064 	adc	a, (hl)
      001160 EAr31r00              4065 	ld	(#_bgY + 1),a
                                   4066 ;main.c:425: playerY = limitedPlayerY;
      001163 21r2Ar00              4067 	ld	hl, #_playerY
      001166 79                    4068 	ld	a, c
      001167 22                    4069 	ld	(hl+), a
                                   4070 ;main.c:426: playerDrawY=playerY >> 5;
      001168 78                    4071 	ld	a, b
      001169 32                    4072 	ld	(hl-), a
      00116A 2A                    4073 	ld	a, (hl+)
      00116B 4F                    4074 	ld	c, a
      00116C 46                    4075 	ld	b, (hl)
      00116D CB 38                 4076 	srl	b
      00116F CB 19                 4077 	rr	c
      001171 CB 38                 4078 	srl	b
      001173 CB 19                 4079 	rr	c
      001175 CB 38                 4080 	srl	b
      001177 CB 19                 4081 	rr	c
      001179 CB 38                 4082 	srl	b
      00117B CB 19                 4083 	rr	c
      00117D CB 38                 4084 	srl	b
      00117F CB 19                 4085 	rr	c
      001181 21r2Dr00              4086 	ld	hl, #_playerDrawY
      001184 71                    4087 	ld	(hl), c
      001185 18 05                 4088 	jr	00122$
      001187                       4089 00121$:
                                   4090 ;main.c:431: ySpeed = 0;
      001187 21r27r00              4091 	ld	hl, #_ySpeed
      00118A 36 00                 4092 	ld	(hl), #0x00
      00118C                       4093 00122$:
                                   4094 ;main.c:435: move_sprite(0, playerDrawX, playerDrawY);
      00118C 21r2Dr00              4095 	ld	hl, #_playerDrawY
      00118F 4E                    4096 	ld	c, (hl)
      001190 21r2Cr00              4097 	ld	hl, #_playerDrawX
      001193 46                    4098 	ld	b, (hl)
                                   4099 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001194 21r00r00              4100 	ld	hl, #_shadow_OAM
                                   4101 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001197 79                    4102 	ld	a, c
      001198 22                    4103 	ld	(hl+), a
      001199 70                    4104 	ld	(hl), b
                                   4105 ;main.c:438: if (bgX >= 256) {
      00119A 21r2Er00              4106 	ld	hl, #_bgX
      00119D 2A                    4107 	ld	a, (hl+)
      00119E 4F                    4108 	ld	c, a
      00119F 46                    4109 	ld	b, (hl)
      0011A0 78                    4110 	ld	a, b
      0011A1 EE 80                 4111 	xor	a, #0x80
      0011A3 D6 81                 4112 	sub	a, #0x81
      0011A5 38 0F                 4113 	jr	C, 00124$
                                   4114 ;main.c:439: bgX = bgX % 256;
      0011A7 AF                    4115 	xor	a, a
      0011A8 3C                    4116 	inc	a
      0011A9 F5                    4117 	push	af
      0011AA C5                    4118 	push	bc
      0011AB CDr00r00              4119 	call	__modsint
      0011AE E8 04                 4120 	add	sp, #4
      0011B0 21r2Er00              4121 	ld	hl, #_bgX
      0011B3 7B                    4122 	ld	a, e
      0011B4 22                    4123 	ld	(hl+), a
      0011B5 72                    4124 	ld	(hl), d
      0011B6                       4125 00124$:
                                   4126 ;main.c:441: if (bgX < 0) {
      0011B6 21r2Er00              4127 	ld	hl, #_bgX
      0011B9 2A                    4128 	ld	a, (hl+)
      0011BA 4F                    4129 	ld	c, a
      0011BB 46                    4130 	ld	b, (hl)
      0011BC CB 78                 4131 	bit	7, b
      0011BE 28 15                 4132 	jr	Z, 00126$
                                   4133 ;main.c:442: bgX = 255 - (bgX % 256);
      0011C0 AF                    4134 	xor	a, a
      0011C1 3C                    4135 	inc	a
      0011C2 F5                    4136 	push	af
      0011C3 C5                    4137 	push	bc
      0011C4 CDr00r00              4138 	call	__modsint
      0011C7 E8 04                 4139 	add	sp, #4
      0011C9 3E FF                 4140 	ld	a, #0xff
      0011CB 93                    4141 	sub	a, e
      0011CC 4F                    4142 	ld	c, a
      0011CD 9F                    4143 	sbc	a, a
      0011CE 92                    4144 	sub	a, d
      0011CF 21r2Er00              4145 	ld	hl, #_bgX
      0011D2 71                    4146 	ld	(hl), c
      0011D3 23                    4147 	inc	hl
      0011D4 77                    4148 	ld	(hl), a
      0011D5                       4149 00126$:
                                   4150 ;main.c:444: if (bgY >= 256) {
      0011D5 21r30r00              4151 	ld	hl, #_bgY
      0011D8 2A                    4152 	ld	a, (hl+)
      0011D9 4F                    4153 	ld	c, a
      0011DA 46                    4154 	ld	b, (hl)
      0011DB 78                    4155 	ld	a, b
      0011DC EE 80                 4156 	xor	a, #0x80
      0011DE D6 81                 4157 	sub	a, #0x81
      0011E0 38 0F                 4158 	jr	C, 00128$
                                   4159 ;main.c:445: bgY = bgY % 256;
      0011E2 AF                    4160 	xor	a, a
      0011E3 3C                    4161 	inc	a
      0011E4 F5                    4162 	push	af
      0011E5 C5                    4163 	push	bc
      0011E6 CDr00r00              4164 	call	__modsint
      0011E9 E8 04                 4165 	add	sp, #4
      0011EB 21r30r00              4166 	ld	hl, #_bgY
      0011EE 7B                    4167 	ld	a, e
      0011EF 22                    4168 	ld	(hl+), a
      0011F0 72                    4169 	ld	(hl), d
      0011F1                       4170 00128$:
                                   4171 ;main.c:447: if (bgY < 0) {
      0011F1 21r30r00              4172 	ld	hl, #_bgY
      0011F4 2A                    4173 	ld	a, (hl+)
      0011F5 4F                    4174 	ld	c, a
      0011F6 46                    4175 	ld	b, (hl)
      0011F7 CB 78                 4176 	bit	7, b
      0011F9 28 15                 4177 	jr	Z, 00130$
                                   4178 ;main.c:448: bgY = 255 - (bgY % 256);
      0011FB AF                    4179 	xor	a, a
      0011FC 3C                    4180 	inc	a
      0011FD F5                    4181 	push	af
      0011FE C5                    4182 	push	bc
      0011FF CDr00r00              4183 	call	__modsint
      001202 E8 04                 4184 	add	sp, #4
      001204 3E FF                 4185 	ld	a, #0xff
      001206 93                    4186 	sub	a, e
      001207 4F                    4187 	ld	c, a
      001208 9F                    4188 	sbc	a, a
      001209 92                    4189 	sub	a, d
      00120A 21r30r00              4190 	ld	hl, #_bgY
      00120D 71                    4191 	ld	(hl), c
      00120E 23                    4192 	inc	hl
      00120F 77                    4193 	ld	(hl), a
      001210                       4194 00130$:
                                   4195 ;main.c:451: move_bkg(bgX, bgY);
      001210 21r30r00              4196 	ld	hl, #_bgY
      001213 4E                    4197 	ld	c, (hl)
      001214 FAr2Er00              4198 	ld	a, (#_bgX)
      001217 E0r00                 4199 	ldh	(_SCX_REG + 0), a
                                   4200 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001219 79                    4201 	ld	a, c
      00121A E0r00                 4202 	ldh	(_SCY_REG + 0), a
                                   4203 ;main.c:454: if (ySpeed > 0) ySpeed--;
      00121C 21r27r00              4204 	ld	hl, #_ySpeed
      00121F 5E                    4205 	ld	e, (hl)
      001220 AF                    4206 	xor	a, a
      001221 57                    4207 	ld	d, a
      001222 96                    4208 	sub	a, (hl)
      001223 CB 7B                 4209 	bit	7, e
      001225 28 07                 4210 	jr	Z, 00301$
      001227 CB 7A                 4211 	bit	7, d
      001229 20 08                 4212 	jr	NZ, 00302$
      00122B BF                    4213 	cp	a, a
      00122C 18 05                 4214 	jr	00302$
      00122E                       4215 00301$:
      00122E CB 7A                 4216 	bit	7, d
      001230 28 01                 4217 	jr	Z, 00302$
      001232 37                    4218 	scf
      001233                       4219 00302$:
      001233 30 04                 4220 	jr	NC, 00132$
      001235 21r27r00              4221 	ld	hl, #_ySpeed
      001238 35                    4222 	dec	(hl)
      001239                       4223 00132$:
                                   4224 ;main.c:455: if (ySpeed < 0) ySpeed++;
      001239 21r27r00              4225 	ld	hl, #_ySpeed
      00123C CB 7E                 4226 	bit	7, (hl)
      00123E 28 01                 4227 	jr	Z, 00134$
      001240 34                    4228 	inc	(hl)
      001241                       4229 00134$:
                                   4230 ;main.c:456: if (xSpeed > 0) xSpeed--;
      001241 21r26r00              4231 	ld	hl, #_xSpeed
      001244 5E                    4232 	ld	e, (hl)
      001245 AF                    4233 	xor	a, a
      001246 57                    4234 	ld	d, a
      001247 96                    4235 	sub	a, (hl)
      001248 CB 7B                 4236 	bit	7, e
      00124A 28 07                 4237 	jr	Z, 00303$
      00124C CB 7A                 4238 	bit	7, d
      00124E 20 08                 4239 	jr	NZ, 00304$
      001250 BF                    4240 	cp	a, a
      001251 18 05                 4241 	jr	00304$
      001253                       4242 00303$:
      001253 CB 7A                 4243 	bit	7, d
      001255 28 01                 4244 	jr	Z, 00304$
      001257 37                    4245 	scf
      001258                       4246 00304$:
      001258 30 04                 4247 	jr	NC, 00136$
      00125A 21r26r00              4248 	ld	hl, #_xSpeed
      00125D 35                    4249 	dec	(hl)
      00125E                       4250 00136$:
                                   4251 ;main.c:457: if (xSpeed < 0) xSpeed++;
      00125E 21r26r00              4252 	ld	hl, #_xSpeed
      001261 CB 7E                 4253 	bit	7, (hl)
      001263 28 01                 4254 	jr	Z, 00145$
      001265 34                    4255 	inc	(hl)
      001266                       4256 00145$:
                                   4257 ;main.c:461: }
      001266 33                    4258 	inc	sp
      001267 C9                    4259 	ret
                                   4260 ;main.c:463: void takeDamage(int16_t amount) {
                                   4261 ;	---------------------------------
                                   4262 ; Function takeDamage
                                   4263 ; ---------------------------------
      001268                       4264 _takeDamage::
      001268 3B                    4265 	dec	sp
                                   4266 ;main.c:464: if (amount > shield) {
      001269 FAr84r00              4267 	ld	a, (#_shield)
      00126C 4F                    4268 	ld	c, a
      00126D 07                    4269 	rlca
      00126E 9F                    4270 	sbc	a, a
      00126F 47                    4271 	ld	b, a
                                   4272 ;main.c:466: hull -= (amount - shield);
      001270 F8 03                 4273 	ldhl	sp,	#3
      001272 7E                    4274 	ld	a, (hl)
      001273 F8 00                 4275 	ldhl	sp,	#0
      001275 77                    4276 	ld	(hl), a
                                   4277 ;main.c:464: if (amount > shield) {
      001276 F8 03                 4278 	ldhl	sp,	#3
      001278 79                    4279 	ld	a, c
      001279 96                    4280 	sub	a, (hl)
      00127A 23                    4281 	inc	hl
      00127B 78                    4282 	ld	a, b
      00127C 9E                    4283 	sbc	a, (hl)
      00127D 78                    4284 	ld	a, b
      00127E 57                    4285 	ld	d, a
      00127F CB 7E                 4286 	bit	7, (hl)
      001281 28 07                 4287 	jr	Z, 00111$
      001283 CB 7A                 4288 	bit	7, d
      001285 20 08                 4289 	jr	NZ, 00112$
      001287 BF                    4290 	cp	a, a
      001288 18 05                 4291 	jr	00112$
      00128A                       4292 00111$:
      00128A CB 7A                 4293 	bit	7, d
      00128C 28 01                 4294 	jr	Z, 00112$
      00128E 37                    4295 	scf
      00128F                       4296 00112$:
      00128F 30 10                 4297 	jr	NC, 00102$
                                   4298 ;main.c:465: shield = 0;
      001291 21r84r00              4299 	ld	hl, #_shield
      001294 36 00                 4300 	ld	(hl), #0x00
                                   4301 ;main.c:466: hull -= (amount - shield);
      001296 FAr83r00              4302 	ld	a, (#_hull)
      001299 F8 00                 4303 	ldhl	sp,	#0
      00129B 96                    4304 	sub	a, (hl)
      00129C EAr83r00              4305 	ld	(#_hull),a
      00129F 18 09                 4306 	jr	00104$
      0012A1                       4307 00102$:
                                   4308 ;main.c:469: shield -= amount;
      0012A1 FAr84r00              4309 	ld	a, (#_shield)
      0012A4 F8 00                 4310 	ldhl	sp,	#0
      0012A6 96                    4311 	sub	a, (hl)
      0012A7 EAr84r00              4312 	ld	(#_shield),a
      0012AA                       4313 00104$:
                                   4314 ;main.c:471: }
      0012AA 33                    4315 	inc	sp
      0012AB C9                    4316 	ret
                                   4317 ;main.c:473: void checkCollision() {
                                   4318 ;	---------------------------------
                                   4319 ; Function checkCollision
                                   4320 ; ---------------------------------
      0012AC                       4321 _checkCollision::
      0012AC E8 ED                 4322 	add	sp, #-19
                                   4323 ;main.c:480: struct Enemy *eptr = enemies;
                                   4324 ;main.c:483: while (i < ENEMYCOUNT) {
      0012AE 21r19r05              4325 	ld	hl, #_ENEMYCOUNT
      0012B1 4E                    4326 	ld	c, (hl)
      0012B2 AF                    4327 	xor	a, a
      0012B3 91                    4328 	sub	a, c
      0012B4 D2rDFr15              4329 	jp	NC, 00123$
                                   4330 ;main.c:484: eptr += enemyCollisionCount;
      0012B7 21r36r00              4331 	ld	hl, #_enemyCollisionCount
      0012BA 6E                    4332 	ld	l, (hl)
                                   4333 ;	spillPairReg hl
                                   4334 ;	spillPairReg hl
      0012BB 26 00                 4335 	ld	h, #0x00
                                   4336 ;	spillPairReg hl
                                   4337 ;	spillPairReg hl
      0012BD 29                    4338 	add	hl, hl
      0012BE 29                    4339 	add	hl, hl
      0012BF 29                    4340 	add	hl, hl
      0012C0 29                    4341 	add	hl, hl
      0012C1 11r00r00              4342 	ld	de, #_enemies
      0012C4 19                    4343 	add	hl, de
      0012C5 4D                    4344 	ld	c, l
      0012C6 44                    4345 	ld	b, h
                                   4346 ;main.c:485: if (eptr->visible && eptr->alive) {
      0012C7 21 0A 00              4347 	ld	hl, #0x000a
      0012CA 09                    4348 	add	hl, bc
      0012CB 7E                    4349 	ld	a, (hl)
      0012CC B7                    4350 	or	a, a
      0012CD CAr1Fr14              4351 	jp	Z, 00108$
      0012D0 21 09 00              4352 	ld	hl, #0x0009
      0012D3 09                    4353 	add	hl, bc
      0012D4 E5                    4354 	push	hl
      0012D5 7D                    4355 	ld	a, l
      0012D6 F8 0B                 4356 	ldhl	sp,	#11
      0012D8 77                    4357 	ld	(hl), a
      0012D9 E1                    4358 	pop	hl
      0012DA 7C                    4359 	ld	a, h
      0012DB F8 0A                 4360 	ldhl	sp,	#10
      0012DD 32                    4361 	ld	(hl-), a
      0012DE 2A                    4362 	ld	a, (hl+)
      0012DF 5F                    4363 	ld	e, a
      0012E0 56                    4364 	ld	d, (hl)
      0012E1 1A                    4365 	ld	a, (de)
      0012E2 B7                    4366 	or	a, a
      0012E3 CAr1Fr14              4367 	jp	Z, 00108$
                                   4368 ;main.c:487: if (eptr->x > playerDrawX - PLAYERSIZE && eptr->x - (8>>(eptr->spriteCount-1)) < playerDrawX) 
      0012E6 59                    4369 	ld	e, c
      0012E7 50                    4370 	ld	d, b
      0012E8 1A                    4371 	ld	a, (de)
      0012E9 F8 0F                 4372 	ldhl	sp,	#15
      0012EB 22                    4373 	ld	(hl+), a
      0012EC 13                    4374 	inc	de
      0012ED 1A                    4375 	ld	a, (de)
      0012EE 77                    4376 	ld	(hl), a
      0012EF FAr2Cr00              4377 	ld	a, (#_playerDrawX)
      0012F2 F8 0D                 4378 	ldhl	sp,	#13
      0012F4 22                    4379 	ld	(hl+), a
      0012F5 36 00                 4380 	ld	(hl), #0x00
      0012F7 FAr2Br05              4381 	ld	a, (#_PLAYERSIZE)
      0012FA F8 07                 4382 	ldhl	sp,	#7
      0012FC 22                    4383 	ld	(hl+), a
      0012FD 36 00                 4384 	ld	(hl), #0x00
      0012FF F8 0D                 4385 	ldhl	sp,#13
      001301 2A                    4386 	ld	a, (hl+)
      001302 5F                    4387 	ld	e, a
      001303 56                    4388 	ld	d, (hl)
      001304 F8 07                 4389 	ldhl	sp,	#7
      001306 2A                    4390 	ld	a,	(hl+)
      001307 66                    4391 	ld	h, (hl)
      001308 6F                    4392 	ld	l, a
      001309 7B                    4393 	ld	a, e
      00130A 95                    4394 	sub	a, l
      00130B 5F                    4395 	ld	e, a
      00130C 7A                    4396 	ld	a, d
      00130D 9C                    4397 	sbc	a, h
      00130E F8 12                 4398 	ldhl	sp,	#18
      001310 32                    4399 	ld	(hl-), a
      001311 73                    4400 	ld	(hl), e
      001312 F8 11                 4401 	ldhl	sp,	#17
      001314 5D                    4402 	ld	e, l
      001315 54                    4403 	ld	d, h
      001316 F8 0F                 4404 	ldhl	sp,	#15
      001318 1A                    4405 	ld	a, (de)
      001319 13                    4406 	inc	de
      00131A 96                    4407 	sub	a, (hl)
      00131B 23                    4408 	inc	hl
      00131C 1A                    4409 	ld	a, (de)
      00131D 9E                    4410 	sbc	a, (hl)
      00131E 1A                    4411 	ld	a, (de)
      00131F 57                    4412 	ld	d, a
      001320 5E                    4413 	ld	e, (hl)
      001321 CB 7B                 4414 	bit	7, e
      001323 28 07                 4415 	jr	Z, 00208$
      001325 CB 7A                 4416 	bit	7, d
      001327 20 08                 4417 	jr	NZ, 00209$
      001329 BF                    4418 	cp	a, a
      00132A 18 05                 4419 	jr	00209$
      00132C                       4420 00208$:
      00132C CB 7A                 4421 	bit	7, d
      00132E 28 01                 4422 	jr	Z, 00209$
      001330 37                    4423 	scf
      001331                       4424 00209$:
      001331 D2r1Fr14              4425 	jp	NC, 00108$
      001334 21 08 00              4426 	ld	hl, #0x0008
      001337 09                    4427 	add	hl, bc
      001338 5E                    4428 	ld	e, (hl)
      001339 1D                    4429 	dec	e
      00133A F8 0B                 4430 	ldhl	sp,	#11
      00133C 3E 08                 4431 	ld	a, #0x08
      00133E 22                    4432 	ld	(hl+), a
      00133F AF                    4433 	xor	a, a
      001340 77                    4434 	ld	(hl), a
      001341 1C                    4435 	inc	e
      001342 18 07                 4436 	jr	00211$
      001344                       4437 00210$:
      001344 F8 0C                 4438 	ldhl	sp,	#12
      001346 CB 2E                 4439 	sra	(hl)
      001348 2B                    4440 	dec	hl
      001349 CB 1E                 4441 	rr	(hl)
      00134B                       4442 00211$:
      00134B 1D                    4443 	dec	e
      00134C 20 F6                 4444 	jr	NZ, 00210$
      00134E F8 0F                 4445 	ldhl	sp,#15
      001350 2A                    4446 	ld	a, (hl+)
      001351 5F                    4447 	ld	e, a
      001352 56                    4448 	ld	d, (hl)
      001353 F8 0B                 4449 	ldhl	sp,	#11
      001355 2A                    4450 	ld	a,	(hl+)
      001356 66                    4451 	ld	h, (hl)
      001357 6F                    4452 	ld	l, a
      001358 7B                    4453 	ld	a, e
      001359 95                    4454 	sub	a, l
      00135A 5F                    4455 	ld	e, a
      00135B 7A                    4456 	ld	a, d
      00135C 9C                    4457 	sbc	a, h
      00135D F8 12                 4458 	ldhl	sp,	#18
      00135F 32                    4459 	ld	(hl-), a
      001360 73                    4460 	ld	(hl), e
      001361 F8 11                 4461 	ldhl	sp,	#17
      001363 5D                    4462 	ld	e, l
      001364 54                    4463 	ld	d, h
      001365 F8 0D                 4464 	ldhl	sp,	#13
      001367 1A                    4465 	ld	a, (de)
      001368 13                    4466 	inc	de
      001369 96                    4467 	sub	a, (hl)
      00136A 23                    4468 	inc	hl
      00136B 1A                    4469 	ld	a, (de)
      00136C 9E                    4470 	sbc	a, (hl)
      00136D 1A                    4471 	ld	a, (de)
      00136E 57                    4472 	ld	d, a
      00136F 5E                    4473 	ld	e, (hl)
      001370 CB 7B                 4474 	bit	7, e
      001372 28 07                 4475 	jr	Z, 00212$
      001374 CB 7A                 4476 	bit	7, d
      001376 20 08                 4477 	jr	NZ, 00213$
      001378 BF                    4478 	cp	a, a
      001379 18 05                 4479 	jr	00213$
      00137B                       4480 00212$:
      00137B CB 7A                 4481 	bit	7, d
      00137D 28 01                 4482 	jr	Z, 00213$
      00137F 37                    4483 	scf
      001380                       4484 00213$:
      001380 D2r1Fr14              4485 	jp	NC, 00108$
                                   4486 ;main.c:489: if (eptr->y > playerDrawY - PLAYERSIZE && eptr->y -(8>>(eptr->spriteCount-1)) < playerDrawY) {
      001383 69                    4487 	ld	l, c
                                   4488 ;	spillPairReg hl
                                   4489 ;	spillPairReg hl
      001384 60                    4490 	ld	h, b
                                   4491 ;	spillPairReg hl
                                   4492 ;	spillPairReg hl
      001385 23                    4493 	inc	hl
      001386 23                    4494 	inc	hl
      001387 5D                    4495 	ld	e, l
      001388 54                    4496 	ld	d, h
      001389 1A                    4497 	ld	a, (de)
      00138A F8 11                 4498 	ldhl	sp,	#17
      00138C 22                    4499 	ld	(hl+), a
      00138D 13                    4500 	inc	de
      00138E 1A                    4501 	ld	a, (de)
      00138F 77                    4502 	ld	(hl), a
      001390 FAr2Dr00              4503 	ld	a, (#_playerDrawY)
      001393 F8 0D                 4504 	ldhl	sp,	#13
      001395 22                    4505 	ld	(hl+), a
      001396 AF                    4506 	xor	a, a
      001397 32                    4507 	ld	(hl-), a
      001398 2A                    4508 	ld	a, (hl+)
      001399 5F                    4509 	ld	e, a
      00139A 56                    4510 	ld	d, (hl)
      00139B F8 07                 4511 	ldhl	sp,	#7
      00139D 2A                    4512 	ld	a,	(hl+)
      00139E 66                    4513 	ld	h, (hl)
      00139F 6F                    4514 	ld	l, a
      0013A0 7B                    4515 	ld	a, e
      0013A1 95                    4516 	sub	a, l
      0013A2 5F                    4517 	ld	e, a
      0013A3 7A                    4518 	ld	a, d
      0013A4 9C                    4519 	sbc	a, h
      0013A5 F8 10                 4520 	ldhl	sp,	#16
      0013A7 32                    4521 	ld	(hl-), a
      0013A8 73                    4522 	ld	(hl), e
      0013A9 F8 0F                 4523 	ldhl	sp,	#15
      0013AB 5D                    4524 	ld	e, l
      0013AC 54                    4525 	ld	d, h
      0013AD F8 11                 4526 	ldhl	sp,	#17
      0013AF 1A                    4527 	ld	a, (de)
      0013B0 13                    4528 	inc	de
      0013B1 96                    4529 	sub	a, (hl)
      0013B2 23                    4530 	inc	hl
      0013B3 1A                    4531 	ld	a, (de)
      0013B4 9E                    4532 	sbc	a, (hl)
      0013B5 1A                    4533 	ld	a, (de)
      0013B6 57                    4534 	ld	d, a
      0013B7 5E                    4535 	ld	e, (hl)
      0013B8 CB 7B                 4536 	bit	7, e
      0013BA 28 07                 4537 	jr	Z, 00214$
      0013BC CB 7A                 4538 	bit	7, d
      0013BE 20 08                 4539 	jr	NZ, 00215$
      0013C0 BF                    4540 	cp	a, a
      0013C1 18 05                 4541 	jr	00215$
      0013C3                       4542 00214$:
      0013C3 CB 7A                 4543 	bit	7, d
      0013C5 28 01                 4544 	jr	Z, 00215$
      0013C7 37                    4545 	scf
      0013C8                       4546 00215$:
      0013C8 30 55                 4547 	jr	NC, 00108$
      0013CA F8 11                 4548 	ldhl	sp,#17
      0013CC 2A                    4549 	ld	a, (hl+)
      0013CD 5F                    4550 	ld	e, a
      0013CE 56                    4551 	ld	d, (hl)
      0013CF F8 0B                 4552 	ldhl	sp,	#11
      0013D1 2A                    4553 	ld	a,	(hl+)
      0013D2 66                    4554 	ld	h, (hl)
      0013D3 6F                    4555 	ld	l, a
      0013D4 7B                    4556 	ld	a, e
      0013D5 95                    4557 	sub	a, l
      0013D6 5F                    4558 	ld	e, a
      0013D7 7A                    4559 	ld	a, d
      0013D8 9C                    4560 	sbc	a, h
      0013D9 F8 10                 4561 	ldhl	sp,	#16
      0013DB 32                    4562 	ld	(hl-), a
      0013DC 73                    4563 	ld	(hl), e
      0013DD F8 0F                 4564 	ldhl	sp,	#15
      0013DF 5D                    4565 	ld	e, l
      0013E0 54                    4566 	ld	d, h
      0013E1 F8 0D                 4567 	ldhl	sp,	#13
      0013E3 1A                    4568 	ld	a, (de)
      0013E4 13                    4569 	inc	de
      0013E5 96                    4570 	sub	a, (hl)
      0013E6 23                    4571 	inc	hl
      0013E7 1A                    4572 	ld	a, (de)
      0013E8 9E                    4573 	sbc	a, (hl)
      0013E9 1A                    4574 	ld	a, (de)
      0013EA 57                    4575 	ld	d, a
      0013EB 5E                    4576 	ld	e, (hl)
      0013EC CB 7B                 4577 	bit	7, e
      0013EE 28 07                 4578 	jr	Z, 00216$
      0013F0 CB 7A                 4579 	bit	7, d
      0013F2 20 08                 4580 	jr	NZ, 00217$
      0013F4 BF                    4581 	cp	a, a
      0013F5 18 05                 4582 	jr	00217$
      0013F7                       4583 00216$:
      0013F7 CB 7A                 4584 	bit	7, d
      0013F9 28 01                 4585 	jr	Z, 00217$
      0013FB 37                    4586 	scf
      0013FC                       4587 00217$:
      0013FC 30 21                 4588 	jr	NC, 00108$
                                   4589 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0013FE 21r2Ar00              4590 	ld	hl, #(_shadow_OAM + 42)
      001401 36 7F                 4591 	ld	(hl), #0x7f
                                   4592 ;main.c:491: eptr->alive = 0;
      001403 F8 09                 4593 	ldhl	sp,	#9
      001405 2A                    4594 	ld	a,	(hl+)
      001406 66                    4595 	ld	h, (hl)
      001407 6F                    4596 	ld	l, a
      001408 36 00                 4597 	ld	(hl), #0x00
                                   4598 ;main.c:492: takeDamage(eptr->damage);
      00140A 21 0B 00              4599 	ld	hl, #0x000b
      00140D 09                    4600 	add	hl, bc
      00140E 5E                    4601 	ld	e, (hl)
      00140F 16 00                 4602 	ld	d, #0x00
      001411 C5                    4603 	push	bc
      001412 D5                    4604 	push	de
      001413 CDr68r12              4605 	call	_takeDamage
      001416 E1                    4606 	pop	hl
      001417 AF                    4607 	xor	a, a
      001418 F5                    4608 	push	af
      001419 33                    4609 	inc	sp
      00141A CDr6Er0D              4610 	call	_initEnemies
      00141D 33                    4611 	inc	sp
      00141E C1                    4612 	pop	bc
      00141F                       4613 00108$:
                                   4614 ;main.c:503: struct Projectile *pptr = projectiles;
      00141F F8 10                 4615 	ldhl	sp,	#16
      001421 3Er50                 4616 	ld	a, #<(_projectiles)
      001423 22                    4617 	ld	(hl+), a
      001424 36s00                 4618 	ld	(hl), #>(_projectiles)
                                   4619 ;main.c:505: while (j < PROJECTILECOUNT) {
      001426 21 02 00              4620 	ld	hl, #0x0002
      001429 09                    4621 	add	hl, bc
      00142A E5                    4622 	push	hl
      00142B 7D                    4623 	ld	a, l
      00142C F8 04                 4624 	ldhl	sp,	#4
      00142E 77                    4625 	ld	(hl), a
      00142F E1                    4626 	pop	hl
      001430 7C                    4627 	ld	a, h
      001431 F8 03                 4628 	ldhl	sp,	#3
      001433 77                    4629 	ld	(hl), a
      001434 21 08 00              4630 	ld	hl, #0x0008
      001437 09                    4631 	add	hl, bc
      001438 E5                    4632 	push	hl
      001439 7D                    4633 	ld	a, l
      00143A F8 06                 4634 	ldhl	sp,	#6
      00143C 77                    4635 	ld	(hl), a
      00143D E1                    4636 	pop	hl
      00143E 7C                    4637 	ld	a, h
      00143F F8 05                 4638 	ldhl	sp,	#5
      001441 77                    4639 	ld	(hl), a
      001442 F8 12                 4640 	ldhl	sp,	#18
      001444 36 00                 4641 	ld	(hl), #0x00
      001446                       4642 00118$:
      001446 21r2Ar05              4643 	ld	hl, #_PROJECTILECOUNT
      001449 5E                    4644 	ld	e, (hl)
      00144A F8 12                 4645 	ldhl	sp,	#18
      00144C 7E                    4646 	ld	a, (hl)
      00144D 93                    4647 	sub	a, e
      00144E D2rDFr15              4648 	jp	NC, 00123$
                                   4649 ;main.c:506: if (pptr->active) {
      001451 2B                    4650 	dec	hl
      001452 2B                    4651 	dec	hl
      001453 2A                    4652 	ld	a, (hl+)
      001454 5F                    4653 	ld	e, a
      001455 56                    4654 	ld	d, (hl)
      001456 21 08 00              4655 	ld	hl, #0x0008
      001459 19                    4656 	add	hl, de
      00145A E5                    4657 	push	hl
      00145B 7D                    4658 	ld	a, l
      00145C F8 08                 4659 	ldhl	sp,	#8
      00145E 77                    4660 	ld	(hl), a
      00145F E1                    4661 	pop	hl
      001460 7C                    4662 	ld	a, h
      001461 F8 07                 4663 	ldhl	sp,	#7
      001463 32                    4664 	ld	(hl-), a
      001464 2A                    4665 	ld	a, (hl+)
      001465 5F                    4666 	ld	e, a
      001466 56                    4667 	ld	d, (hl)
      001467 1A                    4668 	ld	a, (de)
      001468 B7                    4669 	or	a, a
      001469 CArC6r15              4670 	jp	Z, 00117$
                                   4671 ;main.c:507: if (eptr->x > pptr->x - 8 && eptr->x - (8>>(eptr->spriteCount-1)) < pptr->x) {
      00146C 59                    4672 	ld	e, c
      00146D 50                    4673 	ld	d, b
      00146E 1A                    4674 	ld	a, (de)
      00146F F8 0A                 4675 	ldhl	sp,	#10
      001471 22                    4676 	ld	(hl+), a
      001472 13                    4677 	inc	de
      001473 1A                    4678 	ld	a, (de)
      001474 77                    4679 	ld	(hl), a
      001475 F8 10                 4680 	ldhl	sp,#16
      001477 2A                    4681 	ld	a, (hl+)
      001478 5F                    4682 	ld	e, a
      001479 56                    4683 	ld	d, (hl)
      00147A 1A                    4684 	ld	a, (de)
      00147B F8 0C                 4685 	ldhl	sp,	#12
      00147D 22                    4686 	ld	(hl+), a
      00147E 13                    4687 	inc	de
      00147F 1A                    4688 	ld	a, (de)
      001480 32                    4689 	ld	(hl-), a
      001481 7E                    4690 	ld	a, (hl)
      001482 F8 08                 4691 	ldhl	sp,	#8
      001484 77                    4692 	ld	(hl), a
      001485 F8 0D                 4693 	ldhl	sp,	#13
      001487 7E                    4694 	ld	a, (hl)
      001488 F8 09                 4695 	ldhl	sp,	#9
      00148A 32                    4696 	ld	(hl-), a
      00148B 2A                    4697 	ld	a, (hl+)
      00148C 5F                    4698 	ld	e, a
      00148D 56                    4699 	ld	d, (hl)
      00148E 21 08 00              4700 	ld	hl, #0x0008
      001491 7B                    4701 	ld	a, e
      001492 95                    4702 	sub	a, l
      001493 5F                    4703 	ld	e, a
      001494 7A                    4704 	ld	a, d
      001495 9C                    4705 	sbc	a, h
      001496 F8 0F                 4706 	ldhl	sp,	#15
      001498 32                    4707 	ld	(hl-), a
      001499 73                    4708 	ld	(hl), e
      00149A F8 0E                 4709 	ldhl	sp,	#14
      00149C 5D                    4710 	ld	e, l
      00149D 54                    4711 	ld	d, h
      00149E F8 0A                 4712 	ldhl	sp,	#10
      0014A0 1A                    4713 	ld	a, (de)
      0014A1 13                    4714 	inc	de
      0014A2 96                    4715 	sub	a, (hl)
      0014A3 23                    4716 	inc	hl
      0014A4 1A                    4717 	ld	a, (de)
      0014A5 9E                    4718 	sbc	a, (hl)
      0014A6 1A                    4719 	ld	a, (de)
      0014A7 57                    4720 	ld	d, a
      0014A8 CB 7E                 4721 	bit	7, (hl)
      0014AA 28 07                 4722 	jr	Z, 00218$
      0014AC CB 7A                 4723 	bit	7, d
      0014AE 20 08                 4724 	jr	NZ, 00219$
      0014B0 BF                    4725 	cp	a, a
      0014B1 18 05                 4726 	jr	00219$
      0014B3                       4727 00218$:
      0014B3 CB 7A                 4728 	bit	7, d
      0014B5 28 01                 4729 	jr	Z, 00219$
      0014B7 37                    4730 	scf
      0014B8                       4731 00219$:
      0014B8 D2rC6r15              4732 	jp	NC, 00117$
      0014BB F8 04                 4733 	ldhl	sp,#4
      0014BD 2A                    4734 	ld	a, (hl+)
      0014BE 5F                    4735 	ld	e, a
      0014BF 56                    4736 	ld	d, (hl)
      0014C0 1A                    4737 	ld	a, (de)
      0014C1 5F                    4738 	ld	e, a
      0014C2 1D                    4739 	dec	e
      0014C3 F8 08                 4740 	ldhl	sp,	#8
      0014C5 3E 08                 4741 	ld	a, #0x08
      0014C7 22                    4742 	ld	(hl+), a
      0014C8 AF                    4743 	xor	a, a
      0014C9 77                    4744 	ld	(hl), a
      0014CA 1C                    4745 	inc	e
      0014CB 18 07                 4746 	jr	00221$
      0014CD                       4747 00220$:
      0014CD F8 09                 4748 	ldhl	sp,	#9
      0014CF CB 2E                 4749 	sra	(hl)
      0014D1 2B                    4750 	dec	hl
      0014D2 CB 1E                 4751 	rr	(hl)
      0014D4                       4752 00221$:
      0014D4 1D                    4753 	dec	e
      0014D5 20 F6                 4754 	jr	NZ, 00220$
      0014D7 F8 0A                 4755 	ldhl	sp,#10
      0014D9 2A                    4756 	ld	a, (hl+)
      0014DA 5F                    4757 	ld	e, a
      0014DB 56                    4758 	ld	d, (hl)
      0014DC F8 08                 4759 	ldhl	sp,	#8
      0014DE 2A                    4760 	ld	a,	(hl+)
      0014DF 66                    4761 	ld	h, (hl)
      0014E0 6F                    4762 	ld	l, a
      0014E1 7B                    4763 	ld	a, e
      0014E2 95                    4764 	sub	a, l
      0014E3 5F                    4765 	ld	e, a
      0014E4 7A                    4766 	ld	a, d
      0014E5 9C                    4767 	sbc	a, h
      0014E6 F8 0F                 4768 	ldhl	sp,	#15
      0014E8 32                    4769 	ld	(hl-), a
      0014E9 73                    4770 	ld	(hl), e
      0014EA F8 0E                 4771 	ldhl	sp,	#14
      0014EC 5D                    4772 	ld	e, l
      0014ED 54                    4773 	ld	d, h
      0014EE F8 0C                 4774 	ldhl	sp,	#12
      0014F0 1A                    4775 	ld	a, (de)
      0014F1 13                    4776 	inc	de
      0014F2 96                    4777 	sub	a, (hl)
      0014F3 23                    4778 	inc	hl
      0014F4 1A                    4779 	ld	a, (de)
      0014F5 9E                    4780 	sbc	a, (hl)
      0014F6 1A                    4781 	ld	a, (de)
      0014F7 57                    4782 	ld	d, a
      0014F8 CB 7E                 4783 	bit	7, (hl)
      0014FA 28 07                 4784 	jr	Z, 00222$
      0014FC CB 7A                 4785 	bit	7, d
      0014FE 20 08                 4786 	jr	NZ, 00223$
      001500 BF                    4787 	cp	a, a
      001501 18 05                 4788 	jr	00223$
      001503                       4789 00222$:
      001503 CB 7A                 4790 	bit	7, d
      001505 28 01                 4791 	jr	Z, 00223$
      001507 37                    4792 	scf
      001508                       4793 00223$:
      001508 D2rC6r15              4794 	jp	NC, 00117$
                                   4795 ;main.c:508: if (eptr->y > pptr->y - 8 && eptr->y -(8>>(eptr->spriteCount-1)) < pptr->y ) {
      00150B F8 02                 4796 	ldhl	sp,#2
      00150D 2A                    4797 	ld	a, (hl+)
      00150E 5F                    4798 	ld	e, a
      00150F 56                    4799 	ld	d, (hl)
      001510 1A                    4800 	ld	a, (de)
      001511 F8 0E                 4801 	ldhl	sp,	#14
      001513 22                    4802 	ld	(hl+), a
      001514 13                    4803 	inc	de
      001515 1A                    4804 	ld	a, (de)
      001516 22                    4805 	ld	(hl+), a
      001517 2A                    4806 	ld	a, (hl+)
      001518 66                    4807 	ld	h, (hl)
                                   4808 ;	spillPairReg hl
                                   4809 ;	spillPairReg hl
      001519 6F                    4810 	ld	l, a
                                   4811 ;	spillPairReg hl
                                   4812 ;	spillPairReg hl
      00151A 23                    4813 	inc	hl
      00151B 23                    4814 	inc	hl
      00151C 5D                    4815 	ld	e, l
      00151D 54                    4816 	ld	d, h
      00151E 1A                    4817 	ld	a, (de)
      00151F F8 0A                 4818 	ldhl	sp,	#10
      001521 22                    4819 	ld	(hl+), a
      001522 13                    4820 	inc	de
      001523 1A                    4821 	ld	a, (de)
      001524 77                    4822 	ld	(hl), a
      001525 F8 0A                 4823 	ldhl	sp,	#10
      001527 7E                    4824 	ld	a, (hl)
      001528 F8 00                 4825 	ldhl	sp,	#0
      00152A 77                    4826 	ld	(hl), a
      00152B F8 0B                 4827 	ldhl	sp,	#11
      00152D 7E                    4828 	ld	a, (hl)
      00152E F8 01                 4829 	ldhl	sp,	#1
      001530 77                    4830 	ld	(hl), a
      001531 D1                    4831 	pop	de
      001532 D5                    4832 	push	de
      001533 21 08 00              4833 	ld	hl, #0x0008
      001536 7B                    4834 	ld	a, e
      001537 95                    4835 	sub	a, l
      001538 5F                    4836 	ld	e, a
      001539 7A                    4837 	ld	a, d
      00153A 9C                    4838 	sbc	a, h
      00153B F8 0D                 4839 	ldhl	sp,	#13
      00153D 32                    4840 	ld	(hl-), a
      00153E 73                    4841 	ld	(hl), e
      00153F F8 0C                 4842 	ldhl	sp,	#12
      001541 5D                    4843 	ld	e, l
      001542 54                    4844 	ld	d, h
      001543 F8 0E                 4845 	ldhl	sp,	#14
      001545 1A                    4846 	ld	a, (de)
      001546 13                    4847 	inc	de
      001547 96                    4848 	sub	a, (hl)
      001548 23                    4849 	inc	hl
      001549 1A                    4850 	ld	a, (de)
      00154A 9E                    4851 	sbc	a, (hl)
      00154B 1A                    4852 	ld	a, (de)
      00154C 57                    4853 	ld	d, a
      00154D CB 7E                 4854 	bit	7, (hl)
      00154F 28 07                 4855 	jr	Z, 00224$
      001551 CB 7A                 4856 	bit	7, d
      001553 20 08                 4857 	jr	NZ, 00225$
      001555 BF                    4858 	cp	a, a
      001556 18 05                 4859 	jr	00225$
      001558                       4860 00224$:
      001558 CB 7A                 4861 	bit	7, d
      00155A 28 01                 4862 	jr	Z, 00225$
      00155C 37                    4863 	scf
      00155D                       4864 00225$:
      00155D 30 67                 4865 	jr	NC, 00117$
      00155F F8 0E                 4866 	ldhl	sp,#14
      001561 2A                    4867 	ld	a, (hl+)
      001562 5F                    4868 	ld	e, a
      001563 56                    4869 	ld	d, (hl)
      001564 F8 08                 4870 	ldhl	sp,	#8
      001566 2A                    4871 	ld	a,	(hl+)
      001567 66                    4872 	ld	h, (hl)
      001568 6F                    4873 	ld	l, a
      001569 7B                    4874 	ld	a, e
      00156A 95                    4875 	sub	a, l
      00156B 5F                    4876 	ld	e, a
      00156C 7A                    4877 	ld	a, d
      00156D 9C                    4878 	sbc	a, h
      00156E F8 0D                 4879 	ldhl	sp,	#13
      001570 32                    4880 	ld	(hl-), a
      001571 73                    4881 	ld	(hl), e
      001572 2A                    4882 	ld	a, (hl+)
      001573 23                    4883 	inc	hl
      001574 32                    4884 	ld	(hl-), a
      001575 2A                    4885 	ld	a, (hl+)
      001576 23                    4886 	inc	hl
      001577 77                    4887 	ld	(hl), a
      001578 F8 0E                 4888 	ldhl	sp,	#14
      00157A 5D                    4889 	ld	e, l
      00157B 54                    4890 	ld	d, h
      00157C F8 0A                 4891 	ldhl	sp,	#10
      00157E 1A                    4892 	ld	a, (de)
      00157F 13                    4893 	inc	de
      001580 96                    4894 	sub	a, (hl)
      001581 23                    4895 	inc	hl
      001582 1A                    4896 	ld	a, (de)
      001583 9E                    4897 	sbc	a, (hl)
      001584 1A                    4898 	ld	a, (de)
      001585 57                    4899 	ld	d, a
      001586 CB 7E                 4900 	bit	7, (hl)
      001588 28 07                 4901 	jr	Z, 00226$
      00158A CB 7A                 4902 	bit	7, d
      00158C 20 08                 4903 	jr	NZ, 00227$
      00158E BF                    4904 	cp	a, a
      00158F 18 05                 4905 	jr	00227$
      001591                       4906 00226$:
      001591 CB 7A                 4907 	bit	7, d
      001593 28 01                 4908 	jr	Z, 00227$
      001595 37                    4909 	scf
      001596                       4910 00227$:
      001596 30 2E                 4911 	jr	NC, 00117$
                                   4912 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001598 21r2Ar00              4913 	ld	hl, #(_shadow_OAM + 42)
      00159B 36 7F                 4914 	ld	(hl), #0x7f
                                   4915 ;main.c:510: eptr->alive = 0;
      00159D 21 09 00              4916 	ld	hl, #0x0009
      0015A0 09                    4917 	add	hl, bc
      0015A1 36 00                 4918 	ld	(hl), #0x00
                                   4919 ;main.c:511: initEnemies(0);
      0015A3 C5                    4920 	push	bc
      0015A4 AF                    4921 	xor	a, a
      0015A5 F5                    4922 	push	af
      0015A6 33                    4923 	inc	sp
      0015A7 CDr6Er0D              4924 	call	_initEnemies
      0015AA 33                    4925 	inc	sp
      0015AB C1                    4926 	pop	bc
                                   4927 ;main.c:512: set_sprite_tile(20+j, 0x7f);
      0015AC F8 12                 4928 	ldhl	sp,	#18
      0015AE 7E                    4929 	ld	a, (hl)
      0015AF C6 14                 4930 	add	a, #0x14
      0015B1 5F                    4931 	ld	e, a
                                   4932 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0015B2 26 00                 4933 	ld	h, #0x00
                                   4934 ;	spillPairReg hl
                                   4935 ;	spillPairReg hl
      0015B4 6B                    4936 	ld	l, e
      0015B5 29                    4937 	add	hl, hl
      0015B6 29                    4938 	add	hl, hl
      0015B7 11r00r00              4939 	ld	de, #_shadow_OAM
      0015BA 19                    4940 	add	hl, de
      0015BB 23                    4941 	inc	hl
      0015BC 23                    4942 	inc	hl
      0015BD 36 7F                 4943 	ld	(hl), #0x7f
                                   4944 ;main.c:513: pptr->active = 0;
      0015BF F8 06                 4945 	ldhl	sp,	#6
      0015C1 2A                    4946 	ld	a,	(hl+)
      0015C2 66                    4947 	ld	h, (hl)
      0015C3 6F                    4948 	ld	l, a
      0015C4 36 00                 4949 	ld	(hl), #0x00
      0015C6                       4950 00117$:
                                   4951 ;main.c:517: j++;
      0015C6 F8 12                 4952 	ldhl	sp,	#18
      0015C8 34                    4953 	inc	(hl)
                                   4954 ;main.c:518: pptr++;
      0015C9 2B                    4955 	dec	hl
      0015CA 2B                    4956 	dec	hl
      0015CB 2A                    4957 	ld	a, (hl+)
      0015CC 5F                    4958 	ld	e, a
      0015CD 56                    4959 	ld	d, (hl)
      0015CE 21 0A 00              4960 	ld	hl, #0x000a
      0015D1 19                    4961 	add	hl, de
      0015D2 E5                    4962 	push	hl
      0015D3 7D                    4963 	ld	a, l
      0015D4 F8 12                 4964 	ldhl	sp,	#18
      0015D6 77                    4965 	ld	(hl), a
      0015D7 E1                    4966 	pop	hl
      0015D8 7C                    4967 	ld	a, h
      0015D9 F8 11                 4968 	ldhl	sp,	#17
      0015DB 77                    4969 	ld	(hl), a
      0015DC C3r46r14              4970 	jp	00118$
                                   4971 ;main.c:525: break;
      0015DF                       4972 00123$:
                                   4973 ;main.c:528: if (enemyCollisionCount == 0) {
      0015DF FAr36r00              4974 	ld	a, (#_enemyCollisionCount)
      0015E2 B7                    4975 	or	a, a
      0015E3 20 09                 4976 	jr	NZ, 00125$
                                   4977 ;main.c:529: enemyCollisionCount = ENEMYCOUNT - 1;
      0015E5 FAr19r05              4978 	ld	a, (#_ENEMYCOUNT)
      0015E8 3D                    4979 	dec	a
      0015E9 EAr36r00              4980 	ld	(#_enemyCollisionCount),a
      0015EC 18 04                 4981 	jr	00130$
      0015EE                       4982 00125$:
                                   4983 ;main.c:532: enemyCollisionCount--;
      0015EE 21r36r00              4984 	ld	hl, #_enemyCollisionCount
      0015F1 35                    4985 	dec	(hl)
      0015F2                       4986 00130$:
                                   4987 ;main.c:581: }
      0015F2 E8 13                 4988 	add	sp, #19
      0015F4 C9                    4989 	ret
                                   4990 ;main.c:592: void fire() {
                                   4991 ;	---------------------------------
                                   4992 ; Function fire
                                   4993 ; ---------------------------------
      0015F5                       4994 _fire::
                                   4995 ;main.c:594: oldestProjectile += 1;
      0015F5 21r22r00              4996 	ld	hl, #_oldestProjectile
      0015F8 34                    4997 	inc	(hl)
      0015F9 7E                    4998 	ld	a, (hl)
                                   4999 ;main.c:595: if (oldestProjectile >= PROJECTILECOUNT) {
      0015FA 21r2Ar05              5000 	ld	hl, #_PROJECTILECOUNT
      0015FD 4E                    5001 	ld	c, (hl)
      0015FE 21r22r00              5002 	ld	hl, #_oldestProjectile
      001601 7E                    5003 	ld	a, (hl)
      001602 91                    5004 	sub	a, c
      001603 38 02                 5005 	jr	C, 00102$
                                   5006 ;main.c:596: oldestProjectile = 0;
      001605 36 00                 5007 	ld	(hl), #0x00
      001607                       5008 00102$:
                                   5009 ;main.c:599: projectiles[oldestProjectile] = weakProjectile;
      001607 21r22r00              5010 	ld	hl, #_oldestProjectile
      00160A 4E                    5011 	ld	c, (hl)
      00160B 06 00                 5012 	ld	b, #0x00
      00160D 69                    5013 	ld	l, c
      00160E 60                    5014 	ld	h, b
      00160F 29                    5015 	add	hl, hl
      001610 29                    5016 	add	hl, hl
      001611 09                    5017 	add	hl, bc
      001612 29                    5018 	add	hl, hl
      001613 01r50r00              5019 	ld	bc,#_projectiles
      001616 09                    5020 	add	hl,bc
      001617 11 0A 00              5021 	ld	de, #0x000a
      00161A D5                    5022 	push	de
      00161B 11r18r00              5023 	ld	de, #_weakProjectile
      00161E D5                    5024 	push	de
      00161F E5                    5025 	push	hl
      001620 CDr00r00              5026 	call	___memcpy
      001623 E8 06                 5027 	add	sp, #6
                                   5028 ;main.c:600: projectiles[oldestProjectile].x = playerDrawX;
      001625 21r22r00              5029 	ld	hl, #_oldestProjectile
      001628 4E                    5030 	ld	c, (hl)
      001629 06 00                 5031 	ld	b, #0x00
      00162B 69                    5032 	ld	l, c
      00162C 60                    5033 	ld	h, b
      00162D 29                    5034 	add	hl, hl
      00162E 29                    5035 	add	hl, hl
      00162F 09                    5036 	add	hl, bc
      001630 29                    5037 	add	hl, hl
      001631 01r50r00              5038 	ld	bc,#_projectiles
      001634 09                    5039 	add	hl,bc
      001635 E5                    5040 	push	hl
      001636 FAr2Cr00              5041 	ld	a, (#_playerDrawX)
      001639 E1                    5042 	pop	hl
      00163A 0E 00                 5043 	ld	c, #0x00
      00163C 22                    5044 	ld	(hl+), a
      00163D 71                    5045 	ld	(hl), c
                                   5046 ;main.c:601: projectiles[oldestProjectile].y = playerDrawY;
      00163E 21r22r00              5047 	ld	hl, #_oldestProjectile
      001641 4E                    5048 	ld	c, (hl)
      001642 06 00                 5049 	ld	b, #0x00
      001644 69                    5050 	ld	l, c
      001645 60                    5051 	ld	h, b
      001646 29                    5052 	add	hl, hl
      001647 29                    5053 	add	hl, hl
      001648 09                    5054 	add	hl, bc
      001649 29                    5055 	add	hl, hl
      00164A 01r50r00              5056 	ld	bc,#_projectiles
      00164D 09                    5057 	add	hl,bc
      00164E 23                    5058 	inc	hl
      00164F 23                    5059 	inc	hl
      001650 E5                    5060 	push	hl
      001651 FAr2Dr00              5061 	ld	a, (#_playerDrawY)
      001654 E1                    5062 	pop	hl
      001655 0E 00                 5063 	ld	c, #0x00
      001657 22                    5064 	ld	(hl+), a
      001658 71                    5065 	ld	(hl), c
                                   5066 ;main.c:602: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      001659 21r22r00              5067 	ld	hl, #_oldestProjectile
      00165C 4E                    5068 	ld	c, (hl)
      00165D 06 00                 5069 	ld	b, #0x00
      00165F 69                    5070 	ld	l, c
      001660 60                    5071 	ld	h, b
      001661 29                    5072 	add	hl, hl
      001662 29                    5073 	add	hl, hl
      001663 09                    5074 	add	hl, bc
      001664 29                    5075 	add	hl, hl
      001665 01r50r00              5076 	ld	bc,#_projectiles
      001668 09                    5077 	add	hl,bc
      001669 5D                    5078 	ld	e, l
      00166A 54                    5079 	ld	d, h
      00166B 21 04 00              5080 	ld	hl, #0x0004
      00166E 19                    5081 	add	hl, de
      00166F 4D                    5082 	ld	c, l
      001670 44                    5083 	ld	b, h
      001671 21 06 00              5084 	ld	hl, #0x0006
      001674 19                    5085 	add	hl, de
      001675 7E                    5086 	ld	a, (hl)
      001676 C5                    5087 	push	bc
      001677 F5                    5088 	push	af
      001678 33                    5089 	inc	sp
      001679 FAr24r00              5090 	ld	a, (#_xDir)
      00167C F5                    5091 	push	af
      00167D 33                    5092 	inc	sp
      00167E CDr00r00              5093 	call	__muluschar
      001681 E1                    5094 	pop	hl
      001682 7B                    5095 	ld	a, e
      001683 C1                    5096 	pop	bc
      001684 02                    5097 	ld	(bc), a
                                   5098 ;main.c:603: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      001685 21r22r00              5099 	ld	hl, #_oldestProjectile
      001688 4E                    5100 	ld	c, (hl)
      001689 06 00                 5101 	ld	b, #0x00
      00168B 69                    5102 	ld	l, c
      00168C 60                    5103 	ld	h, b
      00168D 29                    5104 	add	hl, hl
      00168E 29                    5105 	add	hl, hl
      00168F 09                    5106 	add	hl, bc
      001690 29                    5107 	add	hl, hl
      001691 01r50r00              5108 	ld	bc,#_projectiles
      001694 09                    5109 	add	hl,bc
      001695 5D                    5110 	ld	e, l
      001696 54                    5111 	ld	d, h
      001697 21 05 00              5112 	ld	hl, #0x0005
      00169A 19                    5113 	add	hl, de
      00169B 4D                    5114 	ld	c, l
      00169C 44                    5115 	ld	b, h
      00169D 21 06 00              5116 	ld	hl, #0x0006
      0016A0 19                    5117 	add	hl, de
      0016A1 7E                    5118 	ld	a, (hl)
      0016A2 C5                    5119 	push	bc
      0016A3 F5                    5120 	push	af
      0016A4 33                    5121 	inc	sp
      0016A5 FAr25r00              5122 	ld	a, (#_yDir)
      0016A8 F5                    5123 	push	af
      0016A9 33                    5124 	inc	sp
      0016AA CDr00r00              5125 	call	__muluschar
      0016AD E1                    5126 	pop	hl
      0016AE 7B                    5127 	ld	a, e
      0016AF C1                    5128 	pop	bc
      0016B0 02                    5129 	ld	(bc), a
                                   5130 ;main.c:606: set_sprite_tile(20+oldestProjectile, 20);
      0016B1 FAr22r00              5131 	ld	a, (#_oldestProjectile)
      0016B4 C6 14                 5132 	add	a, #0x14
                                   5133 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0016B6 6F                    5134 	ld	l, a
      0016B7 01r00r00              5135 	ld	bc, #_shadow_OAM+0
                                   5136 ;	spillPairReg hl
                                   5137 ;	spillPairReg hl
      0016BA 26 00                 5138 	ld	h, #0x00
                                   5139 ;	spillPairReg hl
                                   5140 ;	spillPairReg hl
      0016BC 29                    5141 	add	hl, hl
      0016BD 29                    5142 	add	hl, hl
      0016BE 09                    5143 	add	hl, bc
      0016BF 23                    5144 	inc	hl
      0016C0 23                    5145 	inc	hl
      0016C1 36 14                 5146 	ld	(hl), #0x14
                                   5147 ;main.c:607: move_sprite(20+oldestProjectile, playerDrawX, playerDrawY);
      0016C3 21r2Dr00              5148 	ld	hl, #_playerDrawY
      0016C6 46                    5149 	ld	b, (hl)
      0016C7 21r2Cr00              5150 	ld	hl, #_playerDrawX
      0016CA 4E                    5151 	ld	c, (hl)
      0016CB FAr22r00              5152 	ld	a, (#_oldestProjectile)
      0016CE C6 14                 5153 	add	a, #0x14
                                   5154 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0016D0 6F                    5155 	ld	l, a
                                   5156 ;	spillPairReg hl
                                   5157 ;	spillPairReg hl
      0016D1 26 00                 5158 	ld	h, #0x00
                                   5159 ;	spillPairReg hl
                                   5160 ;	spillPairReg hl
      0016D3 29                    5161 	add	hl, hl
      0016D4 29                    5162 	add	hl, hl
      0016D5 11r00r00              5163 	ld	de, #_shadow_OAM
      0016D8 19                    5164 	add	hl, de
                                   5165 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0016D9 78                    5166 	ld	a, b
      0016DA 22                    5167 	ld	(hl+), a
      0016DB 71                    5168 	ld	(hl), c
                                   5169 ;main.c:608: fireCooldown = projectiles[oldestProjectile].delay;
      0016DC 21r22r00              5170 	ld	hl, #_oldestProjectile
      0016DF 4E                    5171 	ld	c, (hl)
      0016E0 06 00                 5172 	ld	b, #0x00
      0016E2 69                    5173 	ld	l, c
      0016E3 60                    5174 	ld	h, b
      0016E4 29                    5175 	add	hl, hl
      0016E5 29                    5176 	add	hl, hl
      0016E6 09                    5177 	add	hl, bc
      0016E7 29                    5178 	add	hl, hl
      0016E8 01r50r00              5179 	ld	bc,#_projectiles
      0016EB 09                    5180 	add	hl,bc
      0016EC 01 09 00              5181 	ld	bc, #0x0009
      0016EF 09                    5182 	add	hl, bc
      0016F0 7E                    5183 	ld	a, (hl)
      0016F1 EAr23r00              5184 	ld	(#_fireCooldown),a
                                   5185 ;main.c:610: }
      0016F4 C9                    5186 	ret
                                   5187 ;main.c:613: void moveProjectiles() {
                                   5188 ;	---------------------------------
                                   5189 ; Function moveProjectiles
                                   5190 ; ---------------------------------
      0016F5                       5191 _moveProjectiles::
      0016F5 E8 F7                 5192 	add	sp, #-9
                                   5193 ;main.c:615: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0016F7 F8 08                 5194 	ldhl	sp,	#8
      0016F9 36 00                 5195 	ld	(hl), #0x00
      0016FB                       5196 00112$:
      0016FB 21r2Ar05              5197 	ld	hl, #_PROJECTILECOUNT
      0016FE 4E                    5198 	ld	c, (hl)
      0016FF F8 08                 5199 	ldhl	sp,	#8
      001701 7E                    5200 	ld	a, (hl)
      001702 91                    5201 	sub	a, c
      001703 D2r42r18              5202 	jp	NC, 00114$
                                   5203 ;main.c:616: projectiles[i].x -= xOverflow;
      001706 4E                    5204 	ld	c, (hl)
      001707 06 00                 5205 	ld	b, #0x00
      001709 69                    5206 	ld	l, c
      00170A 60                    5207 	ld	h, b
      00170B 29                    5208 	add	hl, hl
      00170C 29                    5209 	add	hl, hl
      00170D 09                    5210 	add	hl, bc
      00170E 29                    5211 	add	hl, hl
      00170F 01r50r00              5212 	ld	bc,#_projectiles
      001712 09                    5213 	add	hl,bc
      001713 33                    5214 	inc	sp
      001714 33                    5215 	inc	sp
      001715 5D                    5216 	ld	e, l
      001716 54                    5217 	ld	d, h
      001717 D5                    5218 	push	de
      001718 1A                    5219 	ld	a, (de)
      001719 4F                    5220 	ld	c, a
      00171A 13                    5221 	inc	de
      00171B 1A                    5222 	ld	a, (de)
      00171C 47                    5223 	ld	b, a
      00171D 79                    5224 	ld	a, c
      00171E 21r32r00              5225 	ld	hl, #_xOverflow
      001721 96                    5226 	sub	a, (hl)
      001722 23                    5227 	inc	hl
      001723 4F                    5228 	ld	c, a
      001724 78                    5229 	ld	a, b
      001725 9E                    5230 	sbc	a, (hl)
      001726 47                    5231 	ld	b, a
      001727 E1                    5232 	pop	hl
      001728 E5                    5233 	push	hl
      001729 79                    5234 	ld	a, c
      00172A 22                    5235 	ld	(hl+), a
      00172B 70                    5236 	ld	(hl), b
                                   5237 ;main.c:617: projectiles[i].y -= yOverflow;
      00172C D1                    5238 	pop	de
      00172D D5                    5239 	push	de
      00172E 21 02 00              5240 	ld	hl, #0x0002
      001731 19                    5241 	add	hl, de
      001732 E5                    5242 	push	hl
      001733 7D                    5243 	ld	a, l
      001734 F8 04                 5244 	ldhl	sp,	#4
      001736 77                    5245 	ld	(hl), a
      001737 E1                    5246 	pop	hl
      001738 7C                    5247 	ld	a, h
      001739 F8 03                 5248 	ldhl	sp,	#3
      00173B 32                    5249 	ld	(hl-), a
      00173C 2A                    5250 	ld	a, (hl+)
      00173D 5F                    5251 	ld	e, a
      00173E 56                    5252 	ld	d, (hl)
      00173F 1A                    5253 	ld	a, (de)
      001740 4F                    5254 	ld	c, a
      001741 13                    5255 	inc	de
      001742 1A                    5256 	ld	a, (de)
      001743 47                    5257 	ld	b, a
      001744 79                    5258 	ld	a, c
      001745 21r34r00              5259 	ld	hl, #_yOverflow
      001748 96                    5260 	sub	a, (hl)
      001749 23                    5261 	inc	hl
      00174A 4F                    5262 	ld	c, a
      00174B 78                    5263 	ld	a, b
      00174C 9E                    5264 	sbc	a, (hl)
      00174D 47                    5265 	ld	b, a
      00174E F8 02                 5266 	ldhl	sp,	#2
      001750 2A                    5267 	ld	a,	(hl+)
      001751 66                    5268 	ld	h, (hl)
      001752 6F                    5269 	ld	l, a
      001753 79                    5270 	ld	a, c
      001754 22                    5271 	ld	(hl+), a
      001755 70                    5272 	ld	(hl), b
                                   5273 ;main.c:619: if (projectiles[i].active) {
      001756 D1                    5274 	pop	de
      001757 D5                    5275 	push	de
      001758 21 08 00              5276 	ld	hl, #0x0008
      00175B 19                    5277 	add	hl, de
      00175C 4D                    5278 	ld	c, l
      00175D 44                    5279 	ld	b, h
      00175E 0A                    5280 	ld	a, (bc)
      00175F B7                    5281 	or	a, a
      001760 CAr3Cr18              5282 	jp	Z, 00113$
                                   5283 ;main.c:620: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      001763 F8 02                 5284 	ldhl	sp,#2
      001765 2A                    5285 	ld	a, (hl+)
      001766 5F                    5286 	ld	e, a
      001767 56                    5287 	ld	d, (hl)
      001768 1A                    5288 	ld	a, (de)
      001769 4F                    5289 	ld	c, a
      00176A 13                    5290 	inc	de
      00176B 1A                    5291 	ld	a, (de)
      00176C 47                    5292 	ld	b, a
      00176D D1                    5293 	pop	de
      00176E D5                    5294 	push	de
      00176F 21 05 00              5295 	ld	hl, #0x0005
      001772 19                    5296 	add	hl, de
      001773 5D                    5297 	ld	e, l
      001774 54                    5298 	ld	d, h
      001775 1A                    5299 	ld	a, (de)
      001776 6F                    5300 	ld	l, a
                                   5301 ;	spillPairReg hl
                                   5302 ;	spillPairReg hl
      001777 07                    5303 	rlca
      001778 9F                    5304 	sbc	a, a
      001779 67                    5305 	ld	h, a
                                   5306 ;	spillPairReg hl
                                   5307 ;	spillPairReg hl
      00177A 09                    5308 	add	hl, bc
      00177B 4D                    5309 	ld	c, l
      00177C 44                    5310 	ld	b, h
      00177D F8 04                 5311 	ldhl	sp,	#4
      00177F 79                    5312 	ld	a, c
      001780 22                    5313 	ld	(hl+), a
      001781 70                    5314 	ld	(hl), b
                                   5315 ;main.c:621: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      001782 D1                    5316 	pop	de
      001783 D5                    5317 	push	de
      001784 1A                    5318 	ld	a, (de)
      001785 4F                    5319 	ld	c, a
      001786 13                    5320 	inc	de
      001787 1A                    5321 	ld	a, (de)
      001788 47                    5322 	ld	b, a
      001789 D1                    5323 	pop	de
      00178A D5                    5324 	push	de
      00178B 21 04 00              5325 	ld	hl, #0x0004
      00178E 19                    5326 	add	hl, de
      00178F 5D                    5327 	ld	e, l
      001790 54                    5328 	ld	d, h
      001791 1A                    5329 	ld	a, (de)
      001792 6F                    5330 	ld	l, a
                                   5331 ;	spillPairReg hl
                                   5332 ;	spillPairReg hl
      001793 07                    5333 	rlca
      001794 9F                    5334 	sbc	a, a
      001795 67                    5335 	ld	h, a
                                   5336 ;	spillPairReg hl
                                   5337 ;	spillPairReg hl
      001796 09                    5338 	add	hl, bc
      001797 4D                    5339 	ld	c, l
      001798 44                    5340 	ld	b, h
                                   5341 ;main.c:623: move_sprite(20+i, newX, newY);
      001799 F8 04                 5342 	ldhl	sp,	#4
      00179B 2A                    5343 	ld	a, (hl+)
      00179C 23                    5344 	inc	hl
      00179D 5F                    5345 	ld	e, a
      00179E 79                    5346 	ld	a, c
      00179F 22                    5347 	ld	(hl+), a
      0017A0 23                    5348 	inc	hl
      0017A1 3A                    5349 	ld	a, (hl-)
      0017A2 C6 14                 5350 	add	a, #0x14
      0017A4 77                    5351 	ld	(hl), a
      0017A5 56                    5352 	ld	d, (hl)
                                   5353 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0017A6 26 00                 5354 	ld	h, #0x00
                                   5355 ;	spillPairReg hl
                                   5356 ;	spillPairReg hl
      0017A8 6A                    5357 	ld	l, d
      0017A9 29                    5358 	add	hl, hl
      0017AA 29                    5359 	add	hl, hl
      0017AB D5                    5360 	push	de
      0017AC 11r00r00              5361 	ld	de, #_shadow_OAM
      0017AF 19                    5362 	add	hl, de
      0017B0 D1                    5363 	pop	de
                                   5364 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0017B1 7B                    5365 	ld	a, e
      0017B2 22                    5366 	ld	(hl+), a
      0017B3 5D                    5367 	ld	e, l
      0017B4 54                    5368 	ld	d, h
      0017B5 F8 06                 5369 	ldhl	sp,	#6
      0017B7 7E                    5370 	ld	a, (hl)
      0017B8 12                    5371 	ld	(de), a
                                   5372 ;main.c:624: projectiles[i].y = newY;
      0017B9 F8 02                 5373 	ldhl	sp,#2
      0017BB 2A                    5374 	ld	a, (hl+)
      0017BC 5F                    5375 	ld	e, a
      0017BD 2A                    5376 	ld	a, (hl+)
      0017BE 57                    5377 	ld	d, a
      0017BF 2A                    5378 	ld	a, (hl+)
      0017C0 12                    5379 	ld	(de), a
      0017C1 13                    5380 	inc	de
      0017C2 7E                    5381 	ld	a, (hl)
      0017C3 12                    5382 	ld	(de), a
                                   5383 ;main.c:625: projectiles[i].x = newX;
      0017C4 E1                    5384 	pop	hl
      0017C5 E5                    5385 	push	hl
      0017C6 79                    5386 	ld	a, c
      0017C7 22                    5387 	ld	(hl+), a
      0017C8 70                    5388 	ld	(hl), b
                                   5389 ;main.c:630: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      0017C9 D1                    5390 	pop	de
      0017CA D5                    5391 	push	de
      0017CB 1A                    5392 	ld	a, (de)
      0017CC 6F                    5393 	ld	l, a
                                   5394 ;	spillPairReg hl
                                   5395 ;	spillPairReg hl
      0017CD 13                    5396 	inc	de
      0017CE 1A                    5397 	ld	a, (de)
      0017CF 67                    5398 	ld	h, a
                                   5399 ;	spillPairReg hl
                                   5400 ;	spillPairReg hl
      0017D0 CB 78                 5401 	bit	7, b
      0017D2 20 44                 5402 	jr	NZ, 00101$
      0017D4 5C                    5403 	ld	e, h
      0017D5 16 00                 5404 	ld	d, #0x00
      0017D7 3E AA                 5405 	ld	a, #0xaa
      0017D9 BD                    5406 	cp	a, l
      0017DA 3E 00                 5407 	ld	a, #0x00
      0017DC 9C                    5408 	sbc	a, h
      0017DD CB 7B                 5409 	bit	7, e
      0017DF 28 07                 5410 	jr	Z, 00147$
      0017E1 CB 7A                 5411 	bit	7, d
      0017E3 20 08                 5412 	jr	NZ, 00148$
      0017E5 BF                    5413 	cp	a, a
      0017E6 18 05                 5414 	jr	00148$
      0017E8                       5415 00147$:
      0017E8 CB 7A                 5416 	bit	7, d
      0017EA 28 01                 5417 	jr	Z, 00148$
      0017EC 37                    5418 	scf
      0017ED                       5419 00148$:
      0017ED 38 29                 5420 	jr	C, 00101$
                                   5421 ;main.c:617: projectiles[i].y -= yOverflow;
      0017EF F8 02                 5422 	ldhl	sp,#2
      0017F1 2A                    5423 	ld	a, (hl+)
      0017F2 5F                    5424 	ld	e, a
      0017F3 56                    5425 	ld	d, (hl)
      0017F4 1A                    5426 	ld	a, (de)
      0017F5 4F                    5427 	ld	c, a
      0017F6 13                    5428 	inc	de
      0017F7 1A                    5429 	ld	a, (de)
                                   5430 ;main.c:630: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      0017F8 47                    5431 	ld	b, a
      0017F9 CB 78                 5432 	bit	7, b
      0017FB 20 1B                 5433 	jr	NZ, 00101$
      0017FD 58                    5434 	ld	e, b
      0017FE 16 00                 5435 	ld	d, #0x00
      001800 3E 9A                 5436 	ld	a, #0x9a
      001802 B9                    5437 	cp	a, c
      001803 3E 00                 5438 	ld	a, #0x00
      001805 98                    5439 	sbc	a, b
      001806 CB 7B                 5440 	bit	7, e
      001808 28 07                 5441 	jr	Z, 00149$
      00180A CB 7A                 5442 	bit	7, d
      00180C 20 08                 5443 	jr	NZ, 00150$
      00180E BF                    5444 	cp	a, a
      00180F 18 05                 5445 	jr	00150$
      001811                       5446 00149$:
      001811 CB 7A                 5447 	bit	7, d
      001813 28 01                 5448 	jr	Z, 00150$
      001815 37                    5449 	scf
      001816                       5450 00150$:
      001816 30 24                 5451 	jr	NC, 00113$
      001818                       5452 00101$:
                                   5453 ;main.c:632: projectiles[i].active = 0;
      001818 F8 08                 5454 	ldhl	sp,	#8
      00181A 4E                    5455 	ld	c, (hl)
      00181B 06 00                 5456 	ld	b, #0x00
      00181D 69                    5457 	ld	l, c
      00181E 60                    5458 	ld	h, b
      00181F 29                    5459 	add	hl, hl
      001820 29                    5460 	add	hl, hl
      001821 09                    5461 	add	hl, bc
      001822 29                    5462 	add	hl, hl
      001823 11r50r00              5463 	ld	de, #_projectiles
      001826 19                    5464 	add	hl, de
      001827 01 08 00              5465 	ld	bc, #0x0008
      00182A 09                    5466 	add	hl, bc
      00182B 36 00                 5467 	ld	(hl), #0x00
                                   5468 ;main.c:633: set_sprite_tile(20+i, 0x7f);
      00182D F8 07                 5469 	ldhl	sp,	#7
                                   5470 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00182F 6E                    5471 	ld	l, (hl)
                                   5472 ;	spillPairReg hl
                                   5473 ;	spillPairReg hl
      001830 26 00                 5474 	ld	h, #0x00
                                   5475 ;	spillPairReg hl
                                   5476 ;	spillPairReg hl
      001832 29                    5477 	add	hl, hl
      001833 29                    5478 	add	hl, hl
      001834 11r00r00              5479 	ld	de, #_shadow_OAM
      001837 19                    5480 	add	hl, de
      001838 23                    5481 	inc	hl
      001839 23                    5482 	inc	hl
      00183A 36 7F                 5483 	ld	(hl), #0x7f
                                   5484 ;main.c:633: set_sprite_tile(20+i, 0x7f);
      00183C                       5485 00113$:
                                   5486 ;main.c:615: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      00183C F8 08                 5487 	ldhl	sp,	#8
      00183E 34                    5488 	inc	(hl)
      00183F C3rFBr16              5489 	jp	00112$
      001842                       5490 00114$:
                                   5491 ;main.c:638: }
      001842 E8 09                 5492 	add	sp, #9
      001844 C9                    5493 	ret
                                   5494 ;main.c:641: void initProjectiles() {
                                   5495 ;	---------------------------------
                                   5496 ; Function initProjectiles
                                   5497 ; ---------------------------------
      001845                       5498 _initProjectiles::
                                   5499 ;main.c:642: set_sprite_data(20, 2, projectile1);
      001845 11r07r05              5500 	ld	de, #_projectile1
      001848 D5                    5501 	push	de
      001849 21 14 02              5502 	ld	hl, #0x214
      00184C E5                    5503 	push	hl
      00184D CDr00r00              5504 	call	_set_sprite_data
      001850 E8 04                 5505 	add	sp, #4
                                   5506 ;main.c:644: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001852 AF                    5507 	xor	a, a
      001853                       5508 00103$:
      001853 21r2Ar05              5509 	ld	hl, #_PROJECTILECOUNT
      001856 4E                    5510 	ld	c, (hl)
      001857 B9                    5511 	cp	a, c
      001858 D0                    5512 	ret	NC
      001859 3C                    5513 	inc	a
                                   5514 ;main.c:648: }
      00185A 18 F7                 5515 	jr	00103$
                                   5516 ;main.c:650: void initGame() {
                                   5517 ;	---------------------------------
                                   5518 ; Function initGame
                                   5519 ; ---------------------------------
      00185C                       5520 _initGame::
                                   5521 ;main.c:653: xDir = 0;
      00185C 21r24r00              5522 	ld	hl, #_xDir
      00185F 36 00                 5523 	ld	(hl), #0x00
                                   5524 ;main.c:654: yDir = 0;
      001861 21r25r00              5525 	ld	hl, #_yDir
      001864 36 00                 5526 	ld	(hl), #0x00
                                   5527 ;main.c:655: xSpeed = 0;
      001866 21r26r00              5528 	ld	hl, #_xSpeed
      001869 36 00                 5529 	ld	(hl), #0x00
                                   5530 ;main.c:656: ySpeed = 0;
      00186B 21r27r00              5531 	ld	hl, #_ySpeed
      00186E 36 00                 5532 	ld	(hl), #0x00
                                   5533 ;main.c:659: playerX = 80<<5;
      001870 21r28r00              5534 	ld	hl, #_playerX
      001873 36 00                 5535 	ld	(hl), #0x00
      001875 23                    5536 	inc	hl
      001876 36 0A                 5537 	ld	(hl), #0x0a
                                   5538 ;main.c:660: playerY = 80<<5;
      001878 21r2Ar00              5539 	ld	hl, #_playerY
      00187B 36 00                 5540 	ld	(hl), #0x00
      00187D 23                    5541 	inc	hl
      00187E 36 0A                 5542 	ld	(hl), #0x0a
                                   5543 ;main.c:662: playerDrawX = 80;
      001880 21r2Cr00              5544 	ld	hl, #_playerDrawX
      001883 36 50                 5545 	ld	(hl), #0x50
                                   5546 ;main.c:663: playerDrawY = 80;
      001885 21r2Dr00              5547 	ld	hl, #_playerDrawY
      001888 36 50                 5548 	ld	(hl), #0x50
                                   5549 ;main.c:666: bgX = 0;
      00188A AF                    5550 	xor	a, a
      00188B 21r2Er00              5551 	ld	hl, #_bgX
      00188E 22                    5552 	ld	(hl+), a
      00188F 77                    5553 	ld	(hl), a
                                   5554 ;main.c:667: bgY = 0;
      001890 AF                    5555 	xor	a, a
      001891 21r30r00              5556 	ld	hl, #_bgY
      001894 22                    5557 	ld	(hl+), a
      001895 77                    5558 	ld	(hl), a
                                   5559 ;main.c:669: hull = maxHull;
      001896 FAr2Cr05              5560 	ld	a, (#_maxHull)
      001899 EAr83r00              5561 	ld	(#_hull),a
                                   5562 ;main.c:670: shield = maxShield;
      00189C FAr2Dr05              5563 	ld	a, (#_maxShield)
      00189F EAr84r00              5564 	ld	(#_shield),a
                                   5565 ;main.c:672: DISPLAY_ON;
      0018A2 F0r00                 5566 	ldh	a, (_LCDC_REG + 0)
      0018A4 F6 80                 5567 	or	a, #0x80
      0018A6 E0r00                 5568 	ldh	(_LCDC_REG + 0), a
                                   5569 ;main.c:673: SPRITES_8x8;
      0018A8 F0r00                 5570 	ldh	a, (_LCDC_REG + 0)
      0018AA E6 FB                 5571 	and	a, #0xfb
      0018AC E0r00                 5572 	ldh	(_LCDC_REG + 0), a
                                   5573 ;main.c:674: set_sprite_data(0, 8, cross);
      0018AE 11r07r00              5574 	ld	de, #_cross
      0018B1 D5                    5575 	push	de
      0018B2 21 00 08              5576 	ld	hl, #0x800
      0018B5 E5                    5577 	push	hl
      0018B6 CDr00r00              5578 	call	_set_sprite_data
      0018B9 E8 04                 5579 	add	sp, #4
                                   5580 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0018BB 21r02r00              5581 	ld	hl, #(_shadow_OAM + 2)
      0018BE 36 00                 5582 	ld	(hl), #0x00
                                   5583 ;main.c:677: SHOW_SPRITES;
      0018C0 F0r00                 5584 	ldh	a, (_LCDC_REG + 0)
      0018C2 F6 02                 5585 	or	a, #0x02
      0018C4 E0r00                 5586 	ldh	(_LCDC_REG + 0), a
                                   5587 ;main.c:681: font_init();
      0018C6 CDr00r00              5588 	call	_font_init
                                   5589 ;main.c:682: min_font = font_load(font_min); // 36 tiles of characters
      0018C9 11r00r00              5590 	ld	de, #_font_min
      0018CC D5                    5591 	push	de
      0018CD CDr00r00              5592 	call	_font_load
      0018D0 E1                    5593 	pop	hl
      0018D1 21r85r00              5594 	ld	hl, #_min_font
      0018D4 7B                    5595 	ld	a, e
      0018D5 22                    5596 	ld	(hl+), a
                                   5597 ;main.c:683: font_set(min_font);
      0018D6 7A                    5598 	ld	a, d
      0018D7 32                    5599 	ld	(hl-), a
      0018D8 2A                    5600 	ld	a, (hl+)
      0018D9 5F                    5601 	ld	e, a
      0018DA 56                    5602 	ld	d, (hl)
      0018DB D5                    5603 	push	de
      0018DC CDr00r00              5604 	call	_font_set
      0018DF E1                    5605 	pop	hl
                                   5606 ;main.c:684: set_win_tiles(1,0,4,1,hullabel);
      0018E0 11r00r00              5607 	ld	de, #_hullabel
      0018E3 D5                    5608 	push	de
      0018E4 21 04 01              5609 	ld	hl, #0x104
      0018E7 E5                    5610 	push	hl
      0018E8 21 01 00              5611 	ld	hl, #0x01
      0018EB E5                    5612 	push	hl
      0018EC CDr00r00              5613 	call	_set_win_tiles
      0018EF E8 06                 5614 	add	sp, #6
                                   5615 ;main.c:685: set_win_tiles(1,1,5,1,shieldlabel);
      0018F1 11r04r00              5616 	ld	de, #_shieldlabel
      0018F4 D5                    5617 	push	de
      0018F5 21 05 01              5618 	ld	hl, #0x105
      0018F8 E5                    5619 	push	hl
      0018F9 21 01 01              5620 	ld	hl, #0x101
      0018FC E5                    5621 	push	hl
      0018FD CDr00r00              5622 	call	_set_win_tiles
      001900 E8 06                 5623 	add	sp, #6
                                   5624 ;main.c:690: set_bkg_data(0x50,1,healthblock);
      001902 11rE7r04              5625 	ld	de, #_healthblock
      001905 D5                    5626 	push	de
      001906 21 50 01              5627 	ld	hl, #0x150
      001909 E5                    5628 	push	hl
      00190A CDr00r00              5629 	call	_set_bkg_data
      00190D E8 04                 5630 	add	sp, #4
                                   5631 ;main.c:692: setHealthBar(0, hull);
      00190F FAr83r00              5632 	ld	a, (#_hull)
      001912 67                    5633 	ld	h, a
      001913 2E 00                 5634 	ld	l, #0x00
      001915 E5                    5635 	push	hl
      001916 CDr2Er05              5636 	call	_setHealthBar
      001919 E1                    5637 	pop	hl
                                   5638 ;main.c:693: setHealthBar(1, shield);
      00191A FAr84r00              5639 	ld	a, (#_shield)
      00191D 67                    5640 	ld	h, a
      00191E 2E 01                 5641 	ld	l, #0x01
      001920 E5                    5642 	push	hl
      001921 CDr2Er05              5643 	call	_setHealthBar
      001924 E1                    5644 	pop	hl
                                   5645 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      001925 3E 07                 5646 	ld	a, #0x07
      001927 E0r00                 5647 	ldh	(_WX_REG + 0), a
      001929 3E 7E                 5648 	ld	a, #0x7e
      00192B E0r00                 5649 	ldh	(_WY_REG + 0), a
                                   5650 ;main.c:696: SHOW_WIN;;
      00192D F0r00                 5651 	ldh	a, (_LCDC_REG + 0)
      00192F F6 20                 5652 	or	a, #0x20
      001931 E0r00                 5653 	ldh	(_LCDC_REG + 0), a
                                   5654 ;main.c:701: set_bkg_data(0x25, 6, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      001933 11r87r04              5655 	ld	de, #_backgroundtiles
      001936 D5                    5656 	push	de
      001937 21 25 06              5657 	ld	hl, #0x625
      00193A E5                    5658 	push	hl
      00193B CDr00r00              5659 	call	_set_bkg_data
      00193E E8 04                 5660 	add	sp, #4
                                   5661 ;main.c:702: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      001940 11r87r00              5662 	ld	de, #_background1
      001943 D5                    5663 	push	de
      001944 21 20 20              5664 	ld	hl, #0x2020
      001947 E5                    5665 	push	hl
      001948 AF                    5666 	xor	a, a
      001949 0F                    5667 	rrca
      00194A F5                    5668 	push	af
      00194B CDr00r00              5669 	call	_set_bkg_tiles
      00194E E8 06                 5670 	add	sp, #6
                                   5671 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001950 AF                    5672 	xor	a, a
      001951 E0r00                 5673 	ldh	(_SCX_REG + 0), a
      001953 AF                    5674 	xor	a, a
      001954 E0r00                 5675 	ldh	(_SCY_REG + 0), a
                                   5676 ;main.c:704: SHOW_BKG;
      001956 F0r00                 5677 	ldh	a, (_LCDC_REG + 0)
      001958 F6 01                 5678 	or	a, #0x01
      00195A E0r00                 5679 	ldh	(_LCDC_REG + 0), a
                                   5680 ;main.c:710: }
      00195C C9                    5681 	ret
                                   5682 ;main.c:712: void main(){
                                   5683 ;	---------------------------------
                                   5684 ; Function main
                                   5685 ; ---------------------------------
      00195D                       5686 _main::
                                   5687 ;main.c:724: waitpad(J_A);
      00195D 3E 10                 5688 	ld	a, #0x10
      00195F F5                    5689 	push	af
      001960 33                    5690 	inc	sp
      001961 CDr00r00              5691 	call	_waitpad
      001964 33                    5692 	inc	sp
                                   5693 ;main.c:725: uint16_t seed = LY_REG;
      001965 F0r00                 5694 	ldh	a, (_LY_REG + 0)
      001967 4F                    5695 	ld	c, a
      001968 06 00                 5696 	ld	b, #0x00
                                   5697 ;main.c:726: seed |= (uint16_t)DIV_REG << 8;
      00196A F0r00                 5698 	ldh	a, (_DIV_REG + 0)
      00196C 5F                    5699 	ld	e, a
      00196D AF                    5700 	xor	a, a
      00196E B1                    5701 	or	a, c
      00196F 4F                    5702 	ld	c, a
      001970 7B                    5703 	ld	a, e
      001971 B0                    5704 	or	a, b
      001972 47                    5705 	ld	b, a
                                   5706 ;main.c:727: initrand(seed);
      001973 C5                    5707 	push	bc
      001974 CDr00r00              5708 	call	_initrand
      001977 E1                    5709 	pop	hl
                                   5710 ;main.c:732: initGame();
      001978 CDr5Cr18              5711 	call	_initGame
                                   5712 ;main.c:733: initEnemies(1);
      00197B 3E 01                 5713 	ld	a, #0x01
      00197D F5                    5714 	push	af
      00197E 33                    5715 	inc	sp
      00197F CDr6Er0D              5716 	call	_initEnemies
      001982 33                    5717 	inc	sp
                                   5718 ;main.c:734: initProjectiles();
      001983 CDr45r18              5719 	call	_initProjectiles
                                   5720 ;main.c:736: while(1) {
      001986                       5721 00107$:
                                   5722 ;main.c:739: joydata = joypad(); // query for button states
      001986 CDr00r00              5723 	call	_joypad
      001989 21r82r00              5724 	ld	hl, #_joydata
      00198C 73                    5725 	ld	(hl), e
                                   5726 ;main.c:741: updateDirection(); // set player direction
      00198D CDr3Fr06              5727 	call	_updateDirection
                                   5728 ;main.c:744: move(); 
      001990 CDr2Br0E              5729 	call	_move
                                   5730 ;main.c:746: updateEnemyPositions();
      001993 CDrCEr07              5731 	call	_updateEnemyPositions
                                   5732 ;main.c:749: checkCollision(); 
      001996 CDrACr12              5733 	call	_checkCollision
                                   5734 ;main.c:585: if (shield < maxShield) {
      001999 21r2Dr05              5735 	ld	hl, #_maxShield
      00199C 4E                    5736 	ld	c, (hl)
      00199D 59                    5737 	ld	e, c
      00199E 21r84r00              5738 	ld	hl, #_shield
      0019A1 56                    5739 	ld	d, (hl)
      0019A2 7E                    5740 	ld	a, (hl)
      0019A3 91                    5741 	sub	a, c
      0019A4 CB 7B                 5742 	bit	7, e
      0019A6 28 07                 5743 	jr	Z, 00142$
      0019A8 CB 7A                 5744 	bit	7, d
      0019AA 20 08                 5745 	jr	NZ, 00143$
      0019AC BF                    5746 	cp	a, a
      0019AD 18 05                 5747 	jr	00143$
      0019AF                       5748 00142$:
      0019AF CB 7A                 5749 	bit	7, d
      0019B1 28 01                 5750 	jr	Z, 00143$
      0019B3 37                    5751 	scf
      0019B4                       5752 00143$:
      0019B4 30 04                 5753 	jr	NC, 00113$
                                   5754 ;main.c:586: shield += 1;
      0019B6 21r84r00              5755 	ld	hl, #_shield
      0019B9 34                    5756 	inc	(hl)
      0019BA                       5757 00113$:
                                   5758 ;main.c:588: setHealthBar(0, hull);
      0019BA FAr83r00              5759 	ld	a, (#_hull)
      0019BD 67                    5760 	ld	h, a
      0019BE 2E 00                 5761 	ld	l, #0x00
      0019C0 E5                    5762 	push	hl
      0019C1 CDr2Er05              5763 	call	_setHealthBar
      0019C4 E1                    5764 	pop	hl
                                   5765 ;main.c:589: setHealthBar(1, shield);
      0019C5 FAr84r00              5766 	ld	a, (#_shield)
      0019C8 67                    5767 	ld	h, a
      0019C9 2E 01                 5768 	ld	l, #0x01
      0019CB E5                    5769 	push	hl
      0019CC CDr2Er05              5770 	call	_setHealthBar
      0019CF E1                    5771 	pop	hl
                                   5772 ;main.c:754: if (joydata & J_B && fireCooldown == 0) {
      0019D0 FAr82r00              5773 	ld	a, (#_joydata)
      0019D3 CB 6F                 5774 	bit	5, a
      0019D5 28 09                 5775 	jr	Z, 00102$
      0019D7 FAr23r00              5776 	ld	a, (#_fireCooldown)
      0019DA B7                    5777 	or	a, a
      0019DB 20 03                 5778 	jr	NZ, 00102$
                                   5779 ;main.c:755: fire();
      0019DD CDrF5r15              5780 	call	_fire
      0019E0                       5781 00102$:
                                   5782 ;main.c:757: if (fireCooldown > 0) {
      0019E0 21r23r00              5783 	ld	hl, #_fireCooldown
      0019E3 7E                    5784 	ld	a, (hl)
      0019E4 B7                    5785 	or	a, a
      0019E5 28 01                 5786 	jr	Z, 00105$
                                   5787 ;main.c:758: --fireCooldown;
      0019E7 35                    5788 	dec	(hl)
      0019E8                       5789 00105$:
                                   5790 ;main.c:761: moveProjectiles();
      0019E8 CDrF5r16              5791 	call	_moveProjectiles
                                   5792 ;main.c:773: SHOW_WIN;	
      0019EB F0r00                 5793 	ldh	a, (_LCDC_REG + 0)
      0019ED F6 20                 5794 	or	a, #0x20
      0019EF E0r00                 5795 	ldh	(_LCDC_REG + 0), a
                                   5796 ;main.c:774: wait_vbl_done(); // Idle until next frame
      0019F1 CDr00r00              5797 	call	_wait_vbl_done
                                   5798 ;main.c:779: }
      0019F4 18 90                 5799 	jr	00107$
                                   5800 	.area _CODE
                                   5801 	.area _INITIALIZER
      000000                       5802 __xinit__hullabel:
      000000 12                    5803 	.db #0x12	; 18
      000001 1F                    5804 	.db #0x1f	; 31
      000002 16                    5805 	.db #0x16	; 22
      000003 16                    5806 	.db #0x16	; 22
      000004                       5807 __xinit__shieldlabel:
      000004 1D                    5808 	.db #0x1d	; 29
      000005 12                    5809 	.db #0x12	; 18
      000006 16                    5810 	.db #0x16	; 22
      000007 0E                    5811 	.db #0x0e	; 14
      000008                       5812 __xinit__blob:
      000008 00 00                 5813 	.dw #0x0000
      00000A 00 00                 5814 	.dw #0x0000
      00000C 00                    5815 	.db #0x00	;  0
      00000D 00                    5816 	.db #0x00	;  0
      00000E 09                    5817 	.db #0x09	; 9
      00000F 00                    5818 	.db #0x00	; 0
      000010 01                    5819 	.db #0x01	; 1
      000011 01                    5820 	.db #0x01	; 1
      000012 01                    5821 	.db #0x01	; 1
      000013 32                    5822 	.db #0x32	; 50	'2'
      000014 03                    5823 	.db #0x03	;  3
      000015 01                    5824 	.db #0x01	; 1
      000016 00                    5825 	.db #0x00	;  0
      000017 00                    5826 	.db #0x00	;  0
      000018                       5827 __xinit__weakProjectile:
      000018 00 00                 5828 	.dw #0x0000
      00001A 00 00                 5829 	.dw #0x0000
      00001C 00                    5830 	.db #0x00	;  0
      00001D FF                    5831 	.db #0xff	; -1
      00001E 02                    5832 	.db #0x02	; 2
      00001F 00                    5833 	.db #0x00	; 0
      000020 01                    5834 	.db #0x01	; 1
      000021 0F                    5835 	.db #0x0f	; 15
      000022                       5836 __xinit__oldestProjectile:
      000022 00                    5837 	.db #0x00	; 0
      000023                       5838 __xinit__fireCooldown:
      000023 00                    5839 	.db #0x00	; 0
      000024                       5840 __xinit__xDir:
      000024 00                    5841 	.db #0x00	;  0
      000025                       5842 __xinit__yDir:
      000025 00                    5843 	.db #0x00	;  0
      000026                       5844 __xinit__xSpeed:
      000026 00                    5845 	.db #0x00	;  0
      000027                       5846 __xinit__ySpeed:
      000027 00                    5847 	.db #0x00	;  0
      000028                       5848 __xinit__playerX:
      000028 00 0A                 5849 	.dw #0x0a00
      00002A                       5850 __xinit__playerY:
      00002A 00 0A                 5851 	.dw #0x0a00
      00002C                       5852 __xinit__playerDrawX:
      00002C 50                    5853 	.db #0x50	; 80	'P'
      00002D                       5854 __xinit__playerDrawY:
      00002D 50                    5855 	.db #0x50	; 80	'P'
      00002E                       5856 __xinit__bgX:
      00002E 00 00                 5857 	.dw #0x0000
      000030                       5858 __xinit__bgY:
      000030 00 00                 5859 	.dw #0x0000
      000032                       5860 __xinit__xOverflow:
      000032 00 00                 5861 	.dw #0x0000
      000034                       5862 __xinit__yOverflow:
      000034 00 00                 5863 	.dw #0x0000
      000036                       5864 __xinit__enemyCollisionCount:
      000036 00                    5865 	.db #0x00	; 0
                                   5866 	.area _CABS (ABS)
