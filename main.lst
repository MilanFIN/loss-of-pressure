                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _moveProjectiles
                                     15 	.globl _fire
                                     16 	.globl _setGunIcon
                                     17 	.globl _checkCollision
                                     18 	.globl _takeDamage
                                     19 	.globl _move
                                     20 	.globl _initEnemies
                                     21 	.globl _updateEnemyPositions
                                     22 	.globl _playSound
                                     23 	.globl _updateDirection
                                     24 	.globl _incrementScore
                                     25 	.globl _updateScore
                                     26 	.globl _setHealthBar
                                     27 	.globl _interruptLCD
                                     28 	.globl _bcd2text
                                     29 	.globl _bcd_add
                                     30 	.globl _rand
                                     31 	.globl _initrand
                                     32 	.globl _font_set
                                     33 	.globl _font_load
                                     34 	.globl _font_init
                                     35 	.globl _set_sprite_data
                                     36 	.globl _set_win_tiles
                                     37 	.globl _set_bkg_tiles
                                     38 	.globl _set_bkg_data
                                     39 	.globl _wait_vbl_done
                                     40 	.globl _set_interrupts
                                     41 	.globl _waitpad
                                     42 	.globl _joypad
                                     43 	.globl _add_LCD
                                     44 	.globl _INCREMENT
                                     45 	.globl _bcd
                                     46 	.globl _score
                                     47 	.globl _gunMap
                                     48 	.globl _switchDelay
                                     49 	.globl _currentGun
                                     50 	.globl _enemyCollisionCount
                                     51 	.globl _yOverflow
                                     52 	.globl _xOverflow
                                     53 	.globl _bgY
                                     54 	.globl _bgX
                                     55 	.globl _playerDrawY
                                     56 	.globl _playerDrawX
                                     57 	.globl _playerY
                                     58 	.globl _playerX
                                     59 	.globl _ySpeed
                                     60 	.globl _xSpeed
                                     61 	.globl _yDir
                                     62 	.globl _xDir
                                     63 	.globl _fireCooldown
                                     64 	.globl _oldestProjectile
                                     65 	.globl _missile
                                     66 	.globl _doubleGun
                                     67 	.globl _singleGun
                                     68 	.globl _bigblob
                                     69 	.globl _blob
                                     70 	.globl _scorelabel
                                     71 	.globl _weaponlabel
                                     72 	.globl _shieldlabel
                                     73 	.globl _hullabel
                                     74 	.globl _min_font
                                     75 	.globl _shield
                                     76 	.globl _hull
                                     77 	.globl _joydata
                                     78 	.globl _projectiles
                                     79 	.globl _enemies
                                     80 	.globl _GUNCOUNT
                                     81 	.globl _maxShield
                                     82 	.globl _maxHull
                                     83 	.globl _PLAYERSIZE
                                     84 	.globl _PROJECTILECOUNT
                                     85 	.globl _ySpawnPositions
                                     86 	.globl _xSpawnPositions
                                     87 	.globl _ENEMYCOUNT
                                     88 	.globl _EMPTYSPRITE
                                     89 	.globl _BLANK
                                     90 	.globl _BLANKSIZE
                                     91 	.globl _Player1
                                     92 	.globl _ProjectileTiles
                                     93 	.globl _largeenemies
                                     94 	.globl _enemy1
                                     95 	.globl _healthblock
                                     96 	.globl _backgroundtiles
                                     97 	.globl _background1
                                     98 	.globl _cross
                                     99 ;--------------------------------------------------------
                                    100 ; special function registers
                                    101 ;--------------------------------------------------------
                                    102 ;--------------------------------------------------------
                                    103 ; ram data
                                    104 ;--------------------------------------------------------
                                    105 	.area _DATA
      000000                        106 _enemies::
      000000                        107 	.ds 80
      000050                        108 _projectiles::
      000050                        109 	.ds 60
      00008C                        110 _joydata::
      00008C                        111 	.ds 1
      00008D                        112 _hull::
      00008D                        113 	.ds 1
      00008E                        114 _shield::
      00008E                        115 	.ds 1
      00008F                        116 _min_font::
      00008F                        117 	.ds 2
                                    118 ;--------------------------------------------------------
                                    119 ; ram data
                                    120 ;--------------------------------------------------------
                                    121 	.area _INITIALIZED
      000000                        122 _hullabel::
      000000                        123 	.ds 4
      000004                        124 _shieldlabel::
      000004                        125 	.ds 4
      000008                        126 _weaponlabel::
      000008                        127 	.ds 4
      00000C                        128 _scorelabel::
      00000C                        129 	.ds 4
      000010                        130 _blob::
      000010                        131 	.ds 16
      000020                        132 _bigblob::
      000020                        133 	.ds 16
      000030                        134 _singleGun::
      000030                        135 	.ds 12
      00003C                        136 _doubleGun::
      00003C                        137 	.ds 12
      000048                        138 _missile::
      000048                        139 	.ds 12
      000054                        140 _oldestProjectile::
      000054                        141 	.ds 1
      000055                        142 _fireCooldown::
      000055                        143 	.ds 1
      000056                        144 _xDir::
      000056                        145 	.ds 1
      000057                        146 _yDir::
      000057                        147 	.ds 1
      000058                        148 _xSpeed::
      000058                        149 	.ds 1
      000059                        150 _ySpeed::
      000059                        151 	.ds 1
      00005A                        152 _playerX::
      00005A                        153 	.ds 2
      00005C                        154 _playerY::
      00005C                        155 	.ds 2
      00005E                        156 _playerDrawX::
      00005E                        157 	.ds 1
      00005F                        158 _playerDrawY::
      00005F                        159 	.ds 1
      000060                        160 _bgX::
      000060                        161 	.ds 2
      000062                        162 _bgY::
      000062                        163 	.ds 2
      000064                        164 _xOverflow::
      000064                        165 	.ds 2
      000066                        166 _yOverflow::
      000066                        167 	.ds 2
      000068                        168 _enemyCollisionCount::
      000068                        169 	.ds 1
      000069                        170 _currentGun::
      000069                        171 	.ds 1
      00006A                        172 _switchDelay::
      00006A                        173 	.ds 1
      00006B                        174 _gunMap::
      00006B                        175 	.ds 3
      00006E                        176 _score::
      00006E                        177 	.ds 2
      000070                        178 _bcd::
      000070                        179 	.ds 4
      000074                        180 _INCREMENT::
      000074                        181 	.ds 4
                                    182 ;--------------------------------------------------------
                                    183 ; absolute external ram data
                                    184 ;--------------------------------------------------------
                                    185 	.area _DABS (ABS)
                                    186 ;--------------------------------------------------------
                                    187 ; global & static initialisations
                                    188 ;--------------------------------------------------------
                                    189 	.area _HOME
                                    190 	.area _GSINIT
                                    191 	.area _GSFINAL
                                    192 	.area _GSINIT
                                    193 ;--------------------------------------------------------
                                    194 ; Home
                                    195 ;--------------------------------------------------------
                                    196 	.area _HOME
                                    197 	.area _HOME
                                    198 ;--------------------------------------------------------
                                    199 ; code
                                    200 ;--------------------------------------------------------
                                    201 	.area _CODE
                                    202 ;main.c:102: void interruptLCD()
                                    203 ;	---------------------------------
                                    204 ; Function interruptLCD
                                    205 ; ---------------------------------
      000000                        206 _interruptLCD::
                                    207 ;main.c:104: HIDE_SPRITES;
      000000 F0r00                  208 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  209 	and	a, #0xfd
      000004 E0r00                  210 	ldh	(_LCDC_REG + 0), a
                                    211 ;main.c:105: }
      000006 C9                     212 	ret
      000007                        213 _cross:
      000007 18                     214 	.db #0x18	; 24
      000008 18                     215 	.db #0x18	; 24
      000009 18                     216 	.db #0x18	; 24
      00000A 18                     217 	.db #0x18	; 24
      00000B 3C                     218 	.db #0x3c	; 60
      00000C 3C                     219 	.db #0x3c	; 60
      00000D 3C                     220 	.db #0x3c	; 60
      00000E 3C                     221 	.db #0x3c	; 60
      00000F 7E                     222 	.db #0x7e	; 126
      000010 7E                     223 	.db #0x7e	; 126
      000011 7E                     224 	.db #0x7e	; 126
      000012 7E                     225 	.db #0x7e	; 126
      000013 FF                     226 	.db #0xff	; 255
      000014 FF                     227 	.db #0xff	; 255
      000015 FF                     228 	.db #0xff	; 255
      000016 FF                     229 	.db #0xff	; 255
      000017 0F                     230 	.db #0x0f	; 15
      000018 0F                     231 	.db #0x0f	; 15
      000019 3F                     232 	.db #0x3f	; 63
      00001A 3F                     233 	.db #0x3f	; 63
      00001B FF                     234 	.db #0xff	; 255
      00001C FF                     235 	.db #0xff	; 255
      00001D FF                     236 	.db #0xff	; 255
      00001E FF                     237 	.db #0xff	; 255
      00001F 7E                     238 	.db #0x7e	; 126
      000020 7E                     239 	.db #0x7e	; 126
      000021 3E                     240 	.db #0x3e	; 62
      000022 3E                     241 	.db #0x3e	; 62
      000023 1C                     242 	.db #0x1c	; 28
      000024 1C                     243 	.db #0x1c	; 28
      000025 0C                     244 	.db #0x0c	; 12
      000026 0C                     245 	.db #0x0c	; 12
      000027 C0                     246 	.db #0xc0	; 192
      000028 C0                     247 	.db #0xc0	; 192
      000029 F0                     248 	.db #0xf0	; 240
      00002A F0                     249 	.db #0xf0	; 240
      00002B FC                     250 	.db #0xfc	; 252
      00002C FC                     251 	.db #0xfc	; 252
      00002D FF                     252 	.db #0xff	; 255
      00002E FF                     253 	.db #0xff	; 255
      00002F FF                     254 	.db #0xff	; 255
      000030 FF                     255 	.db #0xff	; 255
      000031 FC                     256 	.db #0xfc	; 252
      000032 FC                     257 	.db #0xfc	; 252
      000033 F0                     258 	.db #0xf0	; 240
      000034 F0                     259 	.db #0xf0	; 240
      000035 C0                     260 	.db #0xc0	; 192
      000036 C0                     261 	.db #0xc0	; 192
      000037 0C                     262 	.db #0x0c	; 12
      000038 0C                     263 	.db #0x0c	; 12
      000039 1C                     264 	.db #0x1c	; 28
      00003A 1C                     265 	.db #0x1c	; 28
      00003B 3E                     266 	.db #0x3e	; 62
      00003C 3E                     267 	.db #0x3e	; 62
      00003D 7E                     268 	.db #0x7e	; 126
      00003E 7E                     269 	.db #0x7e	; 126
      00003F FF                     270 	.db #0xff	; 255
      000040 FF                     271 	.db #0xff	; 255
      000041 FF                     272 	.db #0xff	; 255
      000042 FF                     273 	.db #0xff	; 255
      000043 3F                     274 	.db #0x3f	; 63
      000044 3F                     275 	.db #0x3f	; 63
      000045 0F                     276 	.db #0x0f	; 15
      000046 0F                     277 	.db #0x0f	; 15
      000047 FF                     278 	.db #0xff	; 255
      000048 FF                     279 	.db #0xff	; 255
      000049 FF                     280 	.db #0xff	; 255
      00004A FF                     281 	.db #0xff	; 255
      00004B 7E                     282 	.db #0x7e	; 126
      00004C 7E                     283 	.db #0x7e	; 126
      00004D 7E                     284 	.db #0x7e	; 126
      00004E 7E                     285 	.db #0x7e	; 126
      00004F 3C                     286 	.db #0x3c	; 60
      000050 3C                     287 	.db #0x3c	; 60
      000051 3C                     288 	.db #0x3c	; 60
      000052 3C                     289 	.db #0x3c	; 60
      000053 18                     290 	.db #0x18	; 24
      000054 18                     291 	.db #0x18	; 24
      000055 18                     292 	.db #0x18	; 24
      000056 18                     293 	.db #0x18	; 24
      000057 30                     294 	.db #0x30	; 48	'0'
      000058 30                     295 	.db #0x30	; 48	'0'
      000059 38                     296 	.db #0x38	; 56	'8'
      00005A 38                     297 	.db #0x38	; 56	'8'
      00005B 7C                     298 	.db #0x7c	; 124
      00005C 7C                     299 	.db #0x7c	; 124
      00005D 7E                     300 	.db #0x7e	; 126
      00005E 7E                     301 	.db #0x7e	; 126
      00005F FF                     302 	.db #0xff	; 255
      000060 FF                     303 	.db #0xff	; 255
      000061 FF                     304 	.db #0xff	; 255
      000062 FF                     305 	.db #0xff	; 255
      000063 FC                     306 	.db #0xfc	; 252
      000064 FC                     307 	.db #0xfc	; 252
      000065 F0                     308 	.db #0xf0	; 240
      000066 F0                     309 	.db #0xf0	; 240
      000067 03                     310 	.db #0x03	; 3
      000068 03                     311 	.db #0x03	; 3
      000069 0F                     312 	.db #0x0f	; 15
      00006A 0F                     313 	.db #0x0f	; 15
      00006B 3F                     314 	.db #0x3f	; 63
      00006C 3F                     315 	.db #0x3f	; 63
      00006D FF                     316 	.db #0xff	; 255
      00006E FF                     317 	.db #0xff	; 255
      00006F FF                     318 	.db #0xff	; 255
      000070 FF                     319 	.db #0xff	; 255
      000071 3F                     320 	.db #0x3f	; 63
      000072 3F                     321 	.db #0x3f	; 63
      000073 0F                     322 	.db #0x0f	; 15
      000074 0F                     323 	.db #0x0f	; 15
      000075 03                     324 	.db #0x03	; 3
      000076 03                     325 	.db #0x03	; 3
      000077 F0                     326 	.db #0xf0	; 240
      000078 F0                     327 	.db #0xf0	; 240
      000079 FC                     328 	.db #0xfc	; 252
      00007A FC                     329 	.db #0xfc	; 252
      00007B FF                     330 	.db #0xff	; 255
      00007C FF                     331 	.db #0xff	; 255
      00007D FF                     332 	.db #0xff	; 255
      00007E FF                     333 	.db #0xff	; 255
      00007F 7E                     334 	.db #0x7e	; 126
      000080 7E                     335 	.db #0x7e	; 126
      000081 7C                     336 	.db #0x7c	; 124
      000082 7C                     337 	.db #0x7c	; 124
      000083 38                     338 	.db #0x38	; 56	'8'
      000084 38                     339 	.db #0x38	; 56	'8'
      000085 30                     340 	.db #0x30	; 48	'0'
      000086 30                     341 	.db #0x30	; 48	'0'
      000087                        342 _background1:
      000087 26                     343 	.db #0x26	; 38
      000088 26                     344 	.db #0x26	; 38
      000089 26                     345 	.db #0x26	; 38
      00008A 26                     346 	.db #0x26	; 38
      00008B 26                     347 	.db #0x26	; 38
      00008C 26                     348 	.db #0x26	; 38
      00008D 26                     349 	.db #0x26	; 38
      00008E 26                     350 	.db #0x26	; 38
      00008F 26                     351 	.db #0x26	; 38
      000090 26                     352 	.db #0x26	; 38
      000091 26                     353 	.db #0x26	; 38
      000092 2A                     354 	.db #0x2a	; 42
      000093 29                     355 	.db #0x29	; 41
      000094 26                     356 	.db #0x26	; 38
      000095 26                     357 	.db #0x26	; 38
      000096 26                     358 	.db #0x26	; 38
      000097 26                     359 	.db #0x26	; 38
      000098 26                     360 	.db #0x26	; 38
      000099 26                     361 	.db #0x26	; 38
      00009A 26                     362 	.db #0x26	; 38
      00009B 2C                     363 	.db #0x2c	; 44
      00009C 26                     364 	.db #0x26	; 38
      00009D 26                     365 	.db #0x26	; 38
      00009E 26                     366 	.db #0x26	; 38
      00009F 26                     367 	.db #0x26	; 38
      0000A0 26                     368 	.db #0x26	; 38
      0000A1 26                     369 	.db #0x26	; 38
      0000A2 26                     370 	.db #0x26	; 38
      0000A3 26                     371 	.db #0x26	; 38
      0000A4 26                     372 	.db #0x26	; 38
      0000A5 26                     373 	.db #0x26	; 38
      0000A6 26                     374 	.db #0x26	; 38
      0000A7 26                     375 	.db #0x26	; 38
      0000A8 2B                     376 	.db #0x2b	; 43
      0000A9 26                     377 	.db #0x26	; 38
      0000AA 26                     378 	.db #0x26	; 38
      0000AB 26                     379 	.db #0x26	; 38
      0000AC 26                     380 	.db #0x26	; 38
      0000AD 26                     381 	.db #0x26	; 38
      0000AE 26                     382 	.db #0x26	; 38
      0000AF 26                     383 	.db #0x26	; 38
      0000B0 26                     384 	.db #0x26	; 38
      0000B1 26                     385 	.db #0x26	; 38
      0000B2 26                     386 	.db #0x26	; 38
      0000B3 26                     387 	.db #0x26	; 38
      0000B4 26                     388 	.db #0x26	; 38
      0000B5 26                     389 	.db #0x26	; 38
      0000B6 26                     390 	.db #0x26	; 38
      0000B7 26                     391 	.db #0x26	; 38
      0000B8 26                     392 	.db #0x26	; 38
      0000B9 26                     393 	.db #0x26	; 38
      0000BA 26                     394 	.db #0x26	; 38
      0000BB 26                     395 	.db #0x26	; 38
      0000BC 26                     396 	.db #0x26	; 38
      0000BD 26                     397 	.db #0x26	; 38
      0000BE 26                     398 	.db #0x26	; 38
      0000BF 26                     399 	.db #0x26	; 38
      0000C0 26                     400 	.db #0x26	; 38
      0000C1 26                     401 	.db #0x26	; 38
      0000C2 26                     402 	.db #0x26	; 38
      0000C3 26                     403 	.db #0x26	; 38
      0000C4 26                     404 	.db #0x26	; 38
      0000C5 26                     405 	.db #0x26	; 38
      0000C6 26                     406 	.db #0x26	; 38
      0000C7 26                     407 	.db #0x26	; 38
      0000C8 26                     408 	.db #0x26	; 38
      0000C9 26                     409 	.db #0x26	; 38
      0000CA 26                     410 	.db #0x26	; 38
      0000CB 26                     411 	.db #0x26	; 38
      0000CC 26                     412 	.db #0x26	; 38
      0000CD 26                     413 	.db #0x26	; 38
      0000CE 26                     414 	.db #0x26	; 38
      0000CF 26                     415 	.db #0x26	; 38
      0000D0 26                     416 	.db #0x26	; 38
      0000D1 26                     417 	.db #0x26	; 38
      0000D2 26                     418 	.db #0x26	; 38
      0000D3 26                     419 	.db #0x26	; 38
      0000D4 26                     420 	.db #0x26	; 38
      0000D5 26                     421 	.db #0x26	; 38
      0000D6 26                     422 	.db #0x26	; 38
      0000D7 26                     423 	.db #0x26	; 38
      0000D8 26                     424 	.db #0x26	; 38
      0000D9 26                     425 	.db #0x26	; 38
      0000DA 26                     426 	.db #0x26	; 38
      0000DB 26                     427 	.db #0x26	; 38
      0000DC 26                     428 	.db #0x26	; 38
      0000DD 26                     429 	.db #0x26	; 38
      0000DE 26                     430 	.db #0x26	; 38
      0000DF 26                     431 	.db #0x26	; 38
      0000E0 26                     432 	.db #0x26	; 38
      0000E1 26                     433 	.db #0x26	; 38
      0000E2 26                     434 	.db #0x26	; 38
      0000E3 26                     435 	.db #0x26	; 38
      0000E4 26                     436 	.db #0x26	; 38
      0000E5 26                     437 	.db #0x26	; 38
      0000E6 26                     438 	.db #0x26	; 38
      0000E7 26                     439 	.db #0x26	; 38
      0000E8 26                     440 	.db #0x26	; 38
      0000E9 26                     441 	.db #0x26	; 38
      0000EA 26                     442 	.db #0x26	; 38
      0000EB 26                     443 	.db #0x26	; 38
      0000EC 26                     444 	.db #0x26	; 38
      0000ED 26                     445 	.db #0x26	; 38
      0000EE 26                     446 	.db #0x26	; 38
      0000EF 26                     447 	.db #0x26	; 38
      0000F0 26                     448 	.db #0x26	; 38
      0000F1 26                     449 	.db #0x26	; 38
      0000F2 26                     450 	.db #0x26	; 38
      0000F3 26                     451 	.db #0x26	; 38
      0000F4 26                     452 	.db #0x26	; 38
      0000F5 26                     453 	.db #0x26	; 38
      0000F6 26                     454 	.db #0x26	; 38
      0000F7 26                     455 	.db #0x26	; 38
      0000F8 2B                     456 	.db #0x2b	; 43
      0000F9 26                     457 	.db #0x26	; 38
      0000FA 26                     458 	.db #0x26	; 38
      0000FB 26                     459 	.db #0x26	; 38
      0000FC 26                     460 	.db #0x26	; 38
      0000FD 26                     461 	.db #0x26	; 38
      0000FE 26                     462 	.db #0x26	; 38
      0000FF 2B                     463 	.db #0x2b	; 43
      000100 26                     464 	.db #0x26	; 38
      000101 26                     465 	.db #0x26	; 38
      000102 26                     466 	.db #0x26	; 38
      000103 26                     467 	.db #0x26	; 38
      000104 26                     468 	.db #0x26	; 38
      000105 26                     469 	.db #0x26	; 38
      000106 26                     470 	.db #0x26	; 38
      000107 26                     471 	.db #0x26	; 38
      000108 26                     472 	.db #0x26	; 38
      000109 26                     473 	.db #0x26	; 38
      00010A 26                     474 	.db #0x26	; 38
      00010B 26                     475 	.db #0x26	; 38
      00010C 2B                     476 	.db #0x2b	; 43
      00010D 26                     477 	.db #0x26	; 38
      00010E 26                     478 	.db #0x26	; 38
      00010F 26                     479 	.db #0x26	; 38
      000110 26                     480 	.db #0x26	; 38
      000111 26                     481 	.db #0x26	; 38
      000112 26                     482 	.db #0x26	; 38
      000113 26                     483 	.db #0x26	; 38
      000114 2C                     484 	.db #0x2c	; 44
      000115 26                     485 	.db #0x26	; 38
      000116 26                     486 	.db #0x26	; 38
      000117 26                     487 	.db #0x26	; 38
      000118 26                     488 	.db #0x26	; 38
      000119 26                     489 	.db #0x26	; 38
      00011A 26                     490 	.db #0x26	; 38
      00011B 26                     491 	.db #0x26	; 38
      00011C 26                     492 	.db #0x26	; 38
      00011D 26                     493 	.db #0x26	; 38
      00011E 26                     494 	.db #0x26	; 38
      00011F 26                     495 	.db #0x26	; 38
      000120 26                     496 	.db #0x26	; 38
      000121 26                     497 	.db #0x26	; 38
      000122 26                     498 	.db #0x26	; 38
      000123 26                     499 	.db #0x26	; 38
      000124 26                     500 	.db #0x26	; 38
      000125 26                     501 	.db #0x26	; 38
      000126 26                     502 	.db #0x26	; 38
      000127 26                     503 	.db #0x26	; 38
      000128 26                     504 	.db #0x26	; 38
      000129 2C                     505 	.db #0x2c	; 44
      00012A 26                     506 	.db #0x26	; 38
      00012B 26                     507 	.db #0x26	; 38
      00012C 26                     508 	.db #0x26	; 38
      00012D 26                     509 	.db #0x26	; 38
      00012E 25                     510 	.db #0x25	; 37
      00012F 26                     511 	.db #0x26	; 38
      000130 26                     512 	.db #0x26	; 38
      000131 26                     513 	.db #0x26	; 38
      000132 26                     514 	.db #0x26	; 38
      000133 26                     515 	.db #0x26	; 38
      000134 26                     516 	.db #0x26	; 38
      000135 26                     517 	.db #0x26	; 38
      000136 26                     518 	.db #0x26	; 38
      000137 26                     519 	.db #0x26	; 38
      000138 26                     520 	.db #0x26	; 38
      000139 26                     521 	.db #0x26	; 38
      00013A 26                     522 	.db #0x26	; 38
      00013B 26                     523 	.db #0x26	; 38
      00013C 2C                     524 	.db #0x2c	; 44
      00013D 26                     525 	.db #0x26	; 38
      00013E 26                     526 	.db #0x26	; 38
      00013F 26                     527 	.db #0x26	; 38
      000140 26                     528 	.db #0x26	; 38
      000141 26                     529 	.db #0x26	; 38
      000142 26                     530 	.db #0x26	; 38
      000143 26                     531 	.db #0x26	; 38
      000144 2B                     532 	.db #0x2b	; 43
      000145 26                     533 	.db #0x26	; 38
      000146 26                     534 	.db #0x26	; 38
      000147 26                     535 	.db #0x26	; 38
      000148 26                     536 	.db #0x26	; 38
      000149 26                     537 	.db #0x26	; 38
      00014A 26                     538 	.db #0x26	; 38
      00014B 26                     539 	.db #0x26	; 38
      00014C 26                     540 	.db #0x26	; 38
      00014D 26                     541 	.db #0x26	; 38
      00014E 26                     542 	.db #0x26	; 38
      00014F 26                     543 	.db #0x26	; 38
      000150 26                     544 	.db #0x26	; 38
      000151 26                     545 	.db #0x26	; 38
      000152 26                     546 	.db #0x26	; 38
      000153 26                     547 	.db #0x26	; 38
      000154 26                     548 	.db #0x26	; 38
      000155 26                     549 	.db #0x26	; 38
      000156 26                     550 	.db #0x26	; 38
      000157 26                     551 	.db #0x26	; 38
      000158 26                     552 	.db #0x26	; 38
      000159 26                     553 	.db #0x26	; 38
      00015A 26                     554 	.db #0x26	; 38
      00015B 26                     555 	.db #0x26	; 38
      00015C 26                     556 	.db #0x26	; 38
      00015D 26                     557 	.db #0x26	; 38
      00015E 26                     558 	.db #0x26	; 38
      00015F 26                     559 	.db #0x26	; 38
      000160 2C                     560 	.db #0x2c	; 44
      000161 26                     561 	.db #0x26	; 38
      000162 26                     562 	.db #0x26	; 38
      000163 26                     563 	.db #0x26	; 38
      000164 26                     564 	.db #0x26	; 38
      000165 26                     565 	.db #0x26	; 38
      000166 26                     566 	.db #0x26	; 38
      000167 26                     567 	.db #0x26	; 38
      000168 26                     568 	.db #0x26	; 38
      000169 26                     569 	.db #0x26	; 38
      00016A 26                     570 	.db #0x26	; 38
      00016B 26                     571 	.db #0x26	; 38
      00016C 26                     572 	.db #0x26	; 38
      00016D 26                     573 	.db #0x26	; 38
      00016E 26                     574 	.db #0x26	; 38
      00016F 26                     575 	.db #0x26	; 38
      000170 26                     576 	.db #0x26	; 38
      000171 26                     577 	.db #0x26	; 38
      000172 26                     578 	.db #0x26	; 38
      000173 26                     579 	.db #0x26	; 38
      000174 26                     580 	.db #0x26	; 38
      000175 26                     581 	.db #0x26	; 38
      000176 26                     582 	.db #0x26	; 38
      000177 26                     583 	.db #0x26	; 38
      000178 26                     584 	.db #0x26	; 38
      000179 26                     585 	.db #0x26	; 38
      00017A 26                     586 	.db #0x26	; 38
      00017B 26                     587 	.db #0x26	; 38
      00017C 26                     588 	.db #0x26	; 38
      00017D 26                     589 	.db #0x26	; 38
      00017E 26                     590 	.db #0x26	; 38
      00017F 26                     591 	.db #0x26	; 38
      000180 26                     592 	.db #0x26	; 38
      000181 26                     593 	.db #0x26	; 38
      000182 26                     594 	.db #0x26	; 38
      000183 26                     595 	.db #0x26	; 38
      000184 26                     596 	.db #0x26	; 38
      000185 26                     597 	.db #0x26	; 38
      000186 26                     598 	.db #0x26	; 38
      000187 26                     599 	.db #0x26	; 38
      000188 26                     600 	.db #0x26	; 38
      000189 26                     601 	.db #0x26	; 38
      00018A 26                     602 	.db #0x26	; 38
      00018B 26                     603 	.db #0x26	; 38
      00018C 26                     604 	.db #0x26	; 38
      00018D 26                     605 	.db #0x26	; 38
      00018E 26                     606 	.db #0x26	; 38
      00018F 26                     607 	.db #0x26	; 38
      000190 26                     608 	.db #0x26	; 38
      000191 26                     609 	.db #0x26	; 38
      000192 26                     610 	.db #0x26	; 38
      000193 26                     611 	.db #0x26	; 38
      000194 26                     612 	.db #0x26	; 38
      000195 2B                     613 	.db #0x2b	; 43
      000196 26                     614 	.db #0x26	; 38
      000197 26                     615 	.db #0x26	; 38
      000198 26                     616 	.db #0x26	; 38
      000199 26                     617 	.db #0x26	; 38
      00019A 26                     618 	.db #0x26	; 38
      00019B 26                     619 	.db #0x26	; 38
      00019C 26                     620 	.db #0x26	; 38
      00019D 26                     621 	.db #0x26	; 38
      00019E 26                     622 	.db #0x26	; 38
      00019F 26                     623 	.db #0x26	; 38
      0001A0 26                     624 	.db #0x26	; 38
      0001A1 26                     625 	.db #0x26	; 38
      0001A2 26                     626 	.db #0x26	; 38
      0001A3 26                     627 	.db #0x26	; 38
      0001A4 26                     628 	.db #0x26	; 38
      0001A5 26                     629 	.db #0x26	; 38
      0001A6 25                     630 	.db #0x25	; 37
      0001A7 26                     631 	.db #0x26	; 38
      0001A8 26                     632 	.db #0x26	; 38
      0001A9 26                     633 	.db #0x26	; 38
      0001AA 2B                     634 	.db #0x2b	; 43
      0001AB 26                     635 	.db #0x26	; 38
      0001AC 26                     636 	.db #0x26	; 38
      0001AD 26                     637 	.db #0x26	; 38
      0001AE 26                     638 	.db #0x26	; 38
      0001AF 26                     639 	.db #0x26	; 38
      0001B0 26                     640 	.db #0x26	; 38
      0001B1 26                     641 	.db #0x26	; 38
      0001B2 26                     642 	.db #0x26	; 38
      0001B3 26                     643 	.db #0x26	; 38
      0001B4 26                     644 	.db #0x26	; 38
      0001B5 26                     645 	.db #0x26	; 38
      0001B6 26                     646 	.db #0x26	; 38
      0001B7 26                     647 	.db #0x26	; 38
      0001B8 26                     648 	.db #0x26	; 38
      0001B9 26                     649 	.db #0x26	; 38
      0001BA 26                     650 	.db #0x26	; 38
      0001BB 26                     651 	.db #0x26	; 38
      0001BC 26                     652 	.db #0x26	; 38
      0001BD 26                     653 	.db #0x26	; 38
      0001BE 26                     654 	.db #0x26	; 38
      0001BF 26                     655 	.db #0x26	; 38
      0001C0 26                     656 	.db #0x26	; 38
      0001C1 26                     657 	.db #0x26	; 38
      0001C2 26                     658 	.db #0x26	; 38
      0001C3 26                     659 	.db #0x26	; 38
      0001C4 2B                     660 	.db #0x2b	; 43
      0001C5 26                     661 	.db #0x26	; 38
      0001C6 26                     662 	.db #0x26	; 38
      0001C7 26                     663 	.db #0x26	; 38
      0001C8 26                     664 	.db #0x26	; 38
      0001C9 26                     665 	.db #0x26	; 38
      0001CA 26                     666 	.db #0x26	; 38
      0001CB 26                     667 	.db #0x26	; 38
      0001CC 26                     668 	.db #0x26	; 38
      0001CD 26                     669 	.db #0x26	; 38
      0001CE 26                     670 	.db #0x26	; 38
      0001CF 26                     671 	.db #0x26	; 38
      0001D0 26                     672 	.db #0x26	; 38
      0001D1 26                     673 	.db #0x26	; 38
      0001D2 26                     674 	.db #0x26	; 38
      0001D3 26                     675 	.db #0x26	; 38
      0001D4 26                     676 	.db #0x26	; 38
      0001D5 26                     677 	.db #0x26	; 38
      0001D6 26                     678 	.db #0x26	; 38
      0001D7 26                     679 	.db #0x26	; 38
      0001D8 26                     680 	.db #0x26	; 38
      0001D9 26                     681 	.db #0x26	; 38
      0001DA 27                     682 	.db #0x27	; 39
      0001DB 28                     683 	.db #0x28	; 40
      0001DC 26                     684 	.db #0x26	; 38
      0001DD 26                     685 	.db #0x26	; 38
      0001DE 26                     686 	.db #0x26	; 38
      0001DF 26                     687 	.db #0x26	; 38
      0001E0 26                     688 	.db #0x26	; 38
      0001E1 26                     689 	.db #0x26	; 38
      0001E2 26                     690 	.db #0x26	; 38
      0001E3 26                     691 	.db #0x26	; 38
      0001E4 26                     692 	.db #0x26	; 38
      0001E5 26                     693 	.db #0x26	; 38
      0001E6 26                     694 	.db #0x26	; 38
      0001E7 26                     695 	.db #0x26	; 38
      0001E8 26                     696 	.db #0x26	; 38
      0001E9 26                     697 	.db #0x26	; 38
      0001EA 26                     698 	.db #0x26	; 38
      0001EB 26                     699 	.db #0x26	; 38
      0001EC 26                     700 	.db #0x26	; 38
      0001ED 26                     701 	.db #0x26	; 38
      0001EE 26                     702 	.db #0x26	; 38
      0001EF 26                     703 	.db #0x26	; 38
      0001F0 26                     704 	.db #0x26	; 38
      0001F1 26                     705 	.db #0x26	; 38
      0001F2 26                     706 	.db #0x26	; 38
      0001F3 26                     707 	.db #0x26	; 38
      0001F4 26                     708 	.db #0x26	; 38
      0001F5 26                     709 	.db #0x26	; 38
      0001F6 26                     710 	.db #0x26	; 38
      0001F7 26                     711 	.db #0x26	; 38
      0001F8 26                     712 	.db #0x26	; 38
      0001F9 26                     713 	.db #0x26	; 38
      0001FA 2A                     714 	.db #0x2a	; 42
      0001FB 29                     715 	.db #0x29	; 41
      0001FC 26                     716 	.db #0x26	; 38
      0001FD 26                     717 	.db #0x26	; 38
      0001FE 26                     718 	.db #0x26	; 38
      0001FF 26                     719 	.db #0x26	; 38
      000200 26                     720 	.db #0x26	; 38
      000201 26                     721 	.db #0x26	; 38
      000202 26                     722 	.db #0x26	; 38
      000203 26                     723 	.db #0x26	; 38
      000204 26                     724 	.db #0x26	; 38
      000205 26                     725 	.db #0x26	; 38
      000206 26                     726 	.db #0x26	; 38
      000207 26                     727 	.db #0x26	; 38
      000208 26                     728 	.db #0x26	; 38
      000209 26                     729 	.db #0x26	; 38
      00020A 26                     730 	.db #0x26	; 38
      00020B 26                     731 	.db #0x26	; 38
      00020C 26                     732 	.db #0x26	; 38
      00020D 26                     733 	.db #0x26	; 38
      00020E 27                     734 	.db #0x27	; 39
      00020F 28                     735 	.db #0x28	; 40
      000210 26                     736 	.db #0x26	; 38
      000211 26                     737 	.db #0x26	; 38
      000212 26                     738 	.db #0x26	; 38
      000213 26                     739 	.db #0x26	; 38
      000214 26                     740 	.db #0x26	; 38
      000215 26                     741 	.db #0x26	; 38
      000216 26                     742 	.db #0x26	; 38
      000217 26                     743 	.db #0x26	; 38
      000218 26                     744 	.db #0x26	; 38
      000219 26                     745 	.db #0x26	; 38
      00021A 26                     746 	.db #0x26	; 38
      00021B 26                     747 	.db #0x26	; 38
      00021C 26                     748 	.db #0x26	; 38
      00021D 26                     749 	.db #0x26	; 38
      00021E 26                     750 	.db #0x26	; 38
      00021F 2C                     751 	.db #0x2c	; 44
      000220 26                     752 	.db #0x26	; 38
      000221 26                     753 	.db #0x26	; 38
      000222 26                     754 	.db #0x26	; 38
      000223 26                     755 	.db #0x26	; 38
      000224 26                     756 	.db #0x26	; 38
      000225 26                     757 	.db #0x26	; 38
      000226 26                     758 	.db #0x26	; 38
      000227 26                     759 	.db #0x26	; 38
      000228 26                     760 	.db #0x26	; 38
      000229 26                     761 	.db #0x26	; 38
      00022A 26                     762 	.db #0x26	; 38
      00022B 26                     763 	.db #0x26	; 38
      00022C 26                     764 	.db #0x26	; 38
      00022D 26                     765 	.db #0x26	; 38
      00022E 2A                     766 	.db #0x2a	; 42
      00022F 29                     767 	.db #0x29	; 41
      000230 26                     768 	.db #0x26	; 38
      000231 26                     769 	.db #0x26	; 38
      000232 26                     770 	.db #0x26	; 38
      000233 26                     771 	.db #0x26	; 38
      000234 26                     772 	.db #0x26	; 38
      000235 26                     773 	.db #0x26	; 38
      000236 26                     774 	.db #0x26	; 38
      000237 26                     775 	.db #0x26	; 38
      000238 26                     776 	.db #0x26	; 38
      000239 26                     777 	.db #0x26	; 38
      00023A 26                     778 	.db #0x26	; 38
      00023B 26                     779 	.db #0x26	; 38
      00023C 26                     780 	.db #0x26	; 38
      00023D 25                     781 	.db #0x25	; 37
      00023E 26                     782 	.db #0x26	; 38
      00023F 26                     783 	.db #0x26	; 38
      000240 26                     784 	.db #0x26	; 38
      000241 26                     785 	.db #0x26	; 38
      000242 26                     786 	.db #0x26	; 38
      000243 26                     787 	.db #0x26	; 38
      000244 2C                     788 	.db #0x2c	; 44
      000245 26                     789 	.db #0x26	; 38
      000246 26                     790 	.db #0x26	; 38
      000247 26                     791 	.db #0x26	; 38
      000248 26                     792 	.db #0x26	; 38
      000249 26                     793 	.db #0x26	; 38
      00024A 26                     794 	.db #0x26	; 38
      00024B 26                     795 	.db #0x26	; 38
      00024C 26                     796 	.db #0x26	; 38
      00024D 26                     797 	.db #0x26	; 38
      00024E 26                     798 	.db #0x26	; 38
      00024F 26                     799 	.db #0x26	; 38
      000250 26                     800 	.db #0x26	; 38
      000251 26                     801 	.db #0x26	; 38
      000252 26                     802 	.db #0x26	; 38
      000253 26                     803 	.db #0x26	; 38
      000254 26                     804 	.db #0x26	; 38
      000255 26                     805 	.db #0x26	; 38
      000256 26                     806 	.db #0x26	; 38
      000257 26                     807 	.db #0x26	; 38
      000258 26                     808 	.db #0x26	; 38
      000259 26                     809 	.db #0x26	; 38
      00025A 26                     810 	.db #0x26	; 38
      00025B 26                     811 	.db #0x26	; 38
      00025C 26                     812 	.db #0x26	; 38
      00025D 26                     813 	.db #0x26	; 38
      00025E 26                     814 	.db #0x26	; 38
      00025F 26                     815 	.db #0x26	; 38
      000260 26                     816 	.db #0x26	; 38
      000261 26                     817 	.db #0x26	; 38
      000262 26                     818 	.db #0x26	; 38
      000263 26                     819 	.db #0x26	; 38
      000264 26                     820 	.db #0x26	; 38
      000265 26                     821 	.db #0x26	; 38
      000266 26                     822 	.db #0x26	; 38
      000267 26                     823 	.db #0x26	; 38
      000268 26                     824 	.db #0x26	; 38
      000269 26                     825 	.db #0x26	; 38
      00026A 2C                     826 	.db #0x2c	; 44
      00026B 26                     827 	.db #0x26	; 38
      00026C 26                     828 	.db #0x26	; 38
      00026D 26                     829 	.db #0x26	; 38
      00026E 26                     830 	.db #0x26	; 38
      00026F 26                     831 	.db #0x26	; 38
      000270 26                     832 	.db #0x26	; 38
      000271 26                     833 	.db #0x26	; 38
      000272 26                     834 	.db #0x26	; 38
      000273 26                     835 	.db #0x26	; 38
      000274 26                     836 	.db #0x26	; 38
      000275 26                     837 	.db #0x26	; 38
      000276 26                     838 	.db #0x26	; 38
      000277 26                     839 	.db #0x26	; 38
      000278 26                     840 	.db #0x26	; 38
      000279 2C                     841 	.db #0x2c	; 44
      00027A 26                     842 	.db #0x26	; 38
      00027B 26                     843 	.db #0x26	; 38
      00027C 26                     844 	.db #0x26	; 38
      00027D 26                     845 	.db #0x26	; 38
      00027E 26                     846 	.db #0x26	; 38
      00027F 26                     847 	.db #0x26	; 38
      000280 26                     848 	.db #0x26	; 38
      000281 26                     849 	.db #0x26	; 38
      000282 26                     850 	.db #0x26	; 38
      000283 26                     851 	.db #0x26	; 38
      000284 26                     852 	.db #0x26	; 38
      000285 26                     853 	.db #0x26	; 38
      000286 26                     854 	.db #0x26	; 38
      000287 26                     855 	.db #0x26	; 38
      000288 26                     856 	.db #0x26	; 38
      000289 26                     857 	.db #0x26	; 38
      00028A 26                     858 	.db #0x26	; 38
      00028B 26                     859 	.db #0x26	; 38
      00028C 26                     860 	.db #0x26	; 38
      00028D 26                     861 	.db #0x26	; 38
      00028E 26                     862 	.db #0x26	; 38
      00028F 26                     863 	.db #0x26	; 38
      000290 26                     864 	.db #0x26	; 38
      000291 26                     865 	.db #0x26	; 38
      000292 26                     866 	.db #0x26	; 38
      000293 26                     867 	.db #0x26	; 38
      000294 26                     868 	.db #0x26	; 38
      000295 2B                     869 	.db #0x2b	; 43
      000296 26                     870 	.db #0x26	; 38
      000297 26                     871 	.db #0x26	; 38
      000298 26                     872 	.db #0x26	; 38
      000299 26                     873 	.db #0x26	; 38
      00029A 26                     874 	.db #0x26	; 38
      00029B 26                     875 	.db #0x26	; 38
      00029C 26                     876 	.db #0x26	; 38
      00029D 26                     877 	.db #0x26	; 38
      00029E 26                     878 	.db #0x26	; 38
      00029F 26                     879 	.db #0x26	; 38
      0002A0 26                     880 	.db #0x26	; 38
      0002A1 26                     881 	.db #0x26	; 38
      0002A2 26                     882 	.db #0x26	; 38
      0002A3 26                     883 	.db #0x26	; 38
      0002A4 26                     884 	.db #0x26	; 38
      0002A5 26                     885 	.db #0x26	; 38
      0002A6 26                     886 	.db #0x26	; 38
      0002A7 28                     887 	.db #0x28	; 40
      0002A8 26                     888 	.db #0x26	; 38
      0002A9 26                     889 	.db #0x26	; 38
      0002AA 26                     890 	.db #0x26	; 38
      0002AB 26                     891 	.db #0x26	; 38
      0002AC 26                     892 	.db #0x26	; 38
      0002AD 26                     893 	.db #0x26	; 38
      0002AE 26                     894 	.db #0x26	; 38
      0002AF 26                     895 	.db #0x26	; 38
      0002B0 26                     896 	.db #0x26	; 38
      0002B1 26                     897 	.db #0x26	; 38
      0002B2 26                     898 	.db #0x26	; 38
      0002B3 26                     899 	.db #0x26	; 38
      0002B4 26                     900 	.db #0x26	; 38
      0002B5 26                     901 	.db #0x26	; 38
      0002B6 26                     902 	.db #0x26	; 38
      0002B7 26                     903 	.db #0x26	; 38
      0002B8 26                     904 	.db #0x26	; 38
      0002B9 26                     905 	.db #0x26	; 38
      0002BA 26                     906 	.db #0x26	; 38
      0002BB 26                     907 	.db #0x26	; 38
      0002BC 26                     908 	.db #0x26	; 38
      0002BD 26                     909 	.db #0x26	; 38
      0002BE 26                     910 	.db #0x26	; 38
      0002BF 26                     911 	.db #0x26	; 38
      0002C0 2B                     912 	.db #0x2b	; 43
      0002C1 26                     913 	.db #0x26	; 38
      0002C2 26                     914 	.db #0x26	; 38
      0002C3 26                     915 	.db #0x26	; 38
      0002C4 26                     916 	.db #0x26	; 38
      0002C5 26                     917 	.db #0x26	; 38
      0002C6 27                     918 	.db #0x27	; 39
      0002C7 29                     919 	.db #0x29	; 41
      0002C8 26                     920 	.db #0x26	; 38
      0002C9 26                     921 	.db #0x26	; 38
      0002CA 26                     922 	.db #0x26	; 38
      0002CB 26                     923 	.db #0x26	; 38
      0002CC 26                     924 	.db #0x26	; 38
      0002CD 26                     925 	.db #0x26	; 38
      0002CE 2B                     926 	.db #0x2b	; 43
      0002CF 26                     927 	.db #0x26	; 38
      0002D0 26                     928 	.db #0x26	; 38
      0002D1 26                     929 	.db #0x26	; 38
      0002D2 26                     930 	.db #0x26	; 38
      0002D3 26                     931 	.db #0x26	; 38
      0002D4 26                     932 	.db #0x26	; 38
      0002D5 26                     933 	.db #0x26	; 38
      0002D6 26                     934 	.db #0x26	; 38
      0002D7 26                     935 	.db #0x26	; 38
      0002D8 26                     936 	.db #0x26	; 38
      0002D9 26                     937 	.db #0x26	; 38
      0002DA 26                     938 	.db #0x26	; 38
      0002DB 26                     939 	.db #0x26	; 38
      0002DC 26                     940 	.db #0x26	; 38
      0002DD 26                     941 	.db #0x26	; 38
      0002DE 26                     942 	.db #0x26	; 38
      0002DF 26                     943 	.db #0x26	; 38
      0002E0 26                     944 	.db #0x26	; 38
      0002E1 26                     945 	.db #0x26	; 38
      0002E2 26                     946 	.db #0x26	; 38
      0002E3 26                     947 	.db #0x26	; 38
      0002E4 26                     948 	.db #0x26	; 38
      0002E5 26                     949 	.db #0x26	; 38
      0002E6 2A                     950 	.db #0x2a	; 42
      0002E7 26                     951 	.db #0x26	; 38
      0002E8 26                     952 	.db #0x26	; 38
      0002E9 26                     953 	.db #0x26	; 38
      0002EA 26                     954 	.db #0x26	; 38
      0002EB 26                     955 	.db #0x26	; 38
      0002EC 26                     956 	.db #0x26	; 38
      0002ED 26                     957 	.db #0x26	; 38
      0002EE 26                     958 	.db #0x26	; 38
      0002EF 26                     959 	.db #0x26	; 38
      0002F0 26                     960 	.db #0x26	; 38
      0002F1 26                     961 	.db #0x26	; 38
      0002F2 2C                     962 	.db #0x2c	; 44
      0002F3 26                     963 	.db #0x26	; 38
      0002F4 26                     964 	.db #0x26	; 38
      0002F5 26                     965 	.db #0x26	; 38
      0002F6 26                     966 	.db #0x26	; 38
      0002F7 26                     967 	.db #0x26	; 38
      0002F8 26                     968 	.db #0x26	; 38
      0002F9 26                     969 	.db #0x26	; 38
      0002FA 26                     970 	.db #0x26	; 38
      0002FB 26                     971 	.db #0x26	; 38
      0002FC 26                     972 	.db #0x26	; 38
      0002FD 26                     973 	.db #0x26	; 38
      0002FE 26                     974 	.db #0x26	; 38
      0002FF 26                     975 	.db #0x26	; 38
      000300 26                     976 	.db #0x26	; 38
      000301 26                     977 	.db #0x26	; 38
      000302 26                     978 	.db #0x26	; 38
      000303 26                     979 	.db #0x26	; 38
      000304 26                     980 	.db #0x26	; 38
      000305 26                     981 	.db #0x26	; 38
      000306 26                     982 	.db #0x26	; 38
      000307 26                     983 	.db #0x26	; 38
      000308 26                     984 	.db #0x26	; 38
      000309 26                     985 	.db #0x26	; 38
      00030A 26                     986 	.db #0x26	; 38
      00030B 26                     987 	.db #0x26	; 38
      00030C 26                     988 	.db #0x26	; 38
      00030D 26                     989 	.db #0x26	; 38
      00030E 26                     990 	.db #0x26	; 38
      00030F 26                     991 	.db #0x26	; 38
      000310 26                     992 	.db #0x26	; 38
      000311 26                     993 	.db #0x26	; 38
      000312 26                     994 	.db #0x26	; 38
      000313 26                     995 	.db #0x26	; 38
      000314 26                     996 	.db #0x26	; 38
      000315 26                     997 	.db #0x26	; 38
      000316 26                     998 	.db #0x26	; 38
      000317 2B                     999 	.db #0x2b	; 43
      000318 26                    1000 	.db #0x26	; 38
      000319 26                    1001 	.db #0x26	; 38
      00031A 26                    1002 	.db #0x26	; 38
      00031B 26                    1003 	.db #0x26	; 38
      00031C 26                    1004 	.db #0x26	; 38
      00031D 26                    1005 	.db #0x26	; 38
      00031E 26                    1006 	.db #0x26	; 38
      00031F 26                    1007 	.db #0x26	; 38
      000320 26                    1008 	.db #0x26	; 38
      000321 26                    1009 	.db #0x26	; 38
      000322 26                    1010 	.db #0x26	; 38
      000323 26                    1011 	.db #0x26	; 38
      000324 26                    1012 	.db #0x26	; 38
      000325 26                    1013 	.db #0x26	; 38
      000326 26                    1014 	.db #0x26	; 38
      000327 26                    1015 	.db #0x26	; 38
      000328 26                    1016 	.db #0x26	; 38
      000329 26                    1017 	.db #0x26	; 38
      00032A 26                    1018 	.db #0x26	; 38
      00032B 26                    1019 	.db #0x26	; 38
      00032C 26                    1020 	.db #0x26	; 38
      00032D 26                    1021 	.db #0x26	; 38
      00032E 26                    1022 	.db #0x26	; 38
      00032F 26                    1023 	.db #0x26	; 38
      000330 26                    1024 	.db #0x26	; 38
      000331 26                    1025 	.db #0x26	; 38
      000332 26                    1026 	.db #0x26	; 38
      000333 26                    1027 	.db #0x26	; 38
      000334 26                    1028 	.db #0x26	; 38
      000335 26                    1029 	.db #0x26	; 38
      000336 26                    1030 	.db #0x26	; 38
      000337 26                    1031 	.db #0x26	; 38
      000338 26                    1032 	.db #0x26	; 38
      000339 26                    1033 	.db #0x26	; 38
      00033A 26                    1034 	.db #0x26	; 38
      00033B 26                    1035 	.db #0x26	; 38
      00033C 26                    1036 	.db #0x26	; 38
      00033D 26                    1037 	.db #0x26	; 38
      00033E 2B                    1038 	.db #0x2b	; 43
      00033F 26                    1039 	.db #0x26	; 38
      000340 26                    1040 	.db #0x26	; 38
      000341 26                    1041 	.db #0x26	; 38
      000342 26                    1042 	.db #0x26	; 38
      000343 26                    1043 	.db #0x26	; 38
      000344 26                    1044 	.db #0x26	; 38
      000345 26                    1045 	.db #0x26	; 38
      000346 26                    1046 	.db #0x26	; 38
      000347 26                    1047 	.db #0x26	; 38
      000348 26                    1048 	.db #0x26	; 38
      000349 26                    1049 	.db #0x26	; 38
      00034A 2B                    1050 	.db #0x2b	; 43
      00034B 26                    1051 	.db #0x26	; 38
      00034C 26                    1052 	.db #0x26	; 38
      00034D 26                    1053 	.db #0x26	; 38
      00034E 26                    1054 	.db #0x26	; 38
      00034F 26                    1055 	.db #0x26	; 38
      000350 26                    1056 	.db #0x26	; 38
      000351 26                    1057 	.db #0x26	; 38
      000352 26                    1058 	.db #0x26	; 38
      000353 26                    1059 	.db #0x26	; 38
      000354 26                    1060 	.db #0x26	; 38
      000355 26                    1061 	.db #0x26	; 38
      000356 26                    1062 	.db #0x26	; 38
      000357 26                    1063 	.db #0x26	; 38
      000358 26                    1064 	.db #0x26	; 38
      000359 26                    1065 	.db #0x26	; 38
      00035A 26                    1066 	.db #0x26	; 38
      00035B 26                    1067 	.db #0x26	; 38
      00035C 26                    1068 	.db #0x26	; 38
      00035D 26                    1069 	.db #0x26	; 38
      00035E 26                    1070 	.db #0x26	; 38
      00035F 26                    1071 	.db #0x26	; 38
      000360 26                    1072 	.db #0x26	; 38
      000361 26                    1073 	.db #0x26	; 38
      000362 26                    1074 	.db #0x26	; 38
      000363 26                    1075 	.db #0x26	; 38
      000364 26                    1076 	.db #0x26	; 38
      000365 26                    1077 	.db #0x26	; 38
      000366 2C                    1078 	.db #0x2c	; 44
      000367 26                    1079 	.db #0x26	; 38
      000368 26                    1080 	.db #0x26	; 38
      000369 26                    1081 	.db #0x26	; 38
      00036A 26                    1082 	.db #0x26	; 38
      00036B 26                    1083 	.db #0x26	; 38
      00036C 26                    1084 	.db #0x26	; 38
      00036D 26                    1085 	.db #0x26	; 38
      00036E 26                    1086 	.db #0x26	; 38
      00036F 26                    1087 	.db #0x26	; 38
      000370 2B                    1088 	.db #0x2b	; 43
      000371 26                    1089 	.db #0x26	; 38
      000372 26                    1090 	.db #0x26	; 38
      000373 26                    1091 	.db #0x26	; 38
      000374 26                    1092 	.db #0x26	; 38
      000375 26                    1093 	.db #0x26	; 38
      000376 26                    1094 	.db #0x26	; 38
      000377 26                    1095 	.db #0x26	; 38
      000378 26                    1096 	.db #0x26	; 38
      000379 26                    1097 	.db #0x26	; 38
      00037A 26                    1098 	.db #0x26	; 38
      00037B 26                    1099 	.db #0x26	; 38
      00037C 26                    1100 	.db #0x26	; 38
      00037D 26                    1101 	.db #0x26	; 38
      00037E 26                    1102 	.db #0x26	; 38
      00037F 26                    1103 	.db #0x26	; 38
      000380 26                    1104 	.db #0x26	; 38
      000381 26                    1105 	.db #0x26	; 38
      000382 26                    1106 	.db #0x26	; 38
      000383 26                    1107 	.db #0x26	; 38
      000384 26                    1108 	.db #0x26	; 38
      000385 26                    1109 	.db #0x26	; 38
      000386 26                    1110 	.db #0x26	; 38
      000387 26                    1111 	.db #0x26	; 38
      000388 26                    1112 	.db #0x26	; 38
      000389 26                    1113 	.db #0x26	; 38
      00038A 26                    1114 	.db #0x26	; 38
      00038B 26                    1115 	.db #0x26	; 38
      00038C 26                    1116 	.db #0x26	; 38
      00038D 26                    1117 	.db #0x26	; 38
      00038E 26                    1118 	.db #0x26	; 38
      00038F 26                    1119 	.db #0x26	; 38
      000390 26                    1120 	.db #0x26	; 38
      000391 26                    1121 	.db #0x26	; 38
      000392 26                    1122 	.db #0x26	; 38
      000393 26                    1123 	.db #0x26	; 38
      000394 26                    1124 	.db #0x26	; 38
      000395 26                    1125 	.db #0x26	; 38
      000396 26                    1126 	.db #0x26	; 38
      000397 26                    1127 	.db #0x26	; 38
      000398 27                    1128 	.db #0x27	; 39
      000399 28                    1129 	.db #0x28	; 40
      00039A 26                    1130 	.db #0x26	; 38
      00039B 26                    1131 	.db #0x26	; 38
      00039C 26                    1132 	.db #0x26	; 38
      00039D 26                    1133 	.db #0x26	; 38
      00039E 26                    1134 	.db #0x26	; 38
      00039F 26                    1135 	.db #0x26	; 38
      0003A0 26                    1136 	.db #0x26	; 38
      0003A1 26                    1137 	.db #0x26	; 38
      0003A2 26                    1138 	.db #0x26	; 38
      0003A3 26                    1139 	.db #0x26	; 38
      0003A4 26                    1140 	.db #0x26	; 38
      0003A5 26                    1141 	.db #0x26	; 38
      0003A6 26                    1142 	.db #0x26	; 38
      0003A7 26                    1143 	.db #0x26	; 38
      0003A8 26                    1144 	.db #0x26	; 38
      0003A9 26                    1145 	.db #0x26	; 38
      0003AA 26                    1146 	.db #0x26	; 38
      0003AB 26                    1147 	.db #0x26	; 38
      0003AC 26                    1148 	.db #0x26	; 38
      0003AD 2B                    1149 	.db #0x2b	; 43
      0003AE 26                    1150 	.db #0x26	; 38
      0003AF 26                    1151 	.db #0x26	; 38
      0003B0 26                    1152 	.db #0x26	; 38
      0003B1 26                    1153 	.db #0x26	; 38
      0003B2 26                    1154 	.db #0x26	; 38
      0003B3 26                    1155 	.db #0x26	; 38
      0003B4 26                    1156 	.db #0x26	; 38
      0003B5 25                    1157 	.db #0x25	; 37
      0003B6 26                    1158 	.db #0x26	; 38
      0003B7 26                    1159 	.db #0x26	; 38
      0003B8 2A                    1160 	.db #0x2a	; 42
      0003B9 29                    1161 	.db #0x29	; 41
      0003BA 26                    1162 	.db #0x26	; 38
      0003BB 26                    1163 	.db #0x26	; 38
      0003BC 26                    1164 	.db #0x26	; 38
      0003BD 26                    1165 	.db #0x26	; 38
      0003BE 26                    1166 	.db #0x26	; 38
      0003BF 26                    1167 	.db #0x26	; 38
      0003C0 26                    1168 	.db #0x26	; 38
      0003C1 26                    1169 	.db #0x26	; 38
      0003C2 2B                    1170 	.db #0x2b	; 43
      0003C3 26                    1171 	.db #0x26	; 38
      0003C4 26                    1172 	.db #0x26	; 38
      0003C5 26                    1173 	.db #0x26	; 38
      0003C6 26                    1174 	.db #0x26	; 38
      0003C7 26                    1175 	.db #0x26	; 38
      0003C8 26                    1176 	.db #0x26	; 38
      0003C9 2C                    1177 	.db #0x2c	; 44
      0003CA 26                    1178 	.db #0x26	; 38
      0003CB 26                    1179 	.db #0x26	; 38
      0003CC 26                    1180 	.db #0x26	; 38
      0003CD 26                    1181 	.db #0x26	; 38
      0003CE 26                    1182 	.db #0x26	; 38
      0003CF 26                    1183 	.db #0x26	; 38
      0003D0 26                    1184 	.db #0x26	; 38
      0003D1 26                    1185 	.db #0x26	; 38
      0003D2 26                    1186 	.db #0x26	; 38
      0003D3 26                    1187 	.db #0x26	; 38
      0003D4 26                    1188 	.db #0x26	; 38
      0003D5 2C                    1189 	.db #0x2c	; 44
      0003D6 26                    1190 	.db #0x26	; 38
      0003D7 26                    1191 	.db #0x26	; 38
      0003D8 26                    1192 	.db #0x26	; 38
      0003D9 26                    1193 	.db #0x26	; 38
      0003DA 26                    1194 	.db #0x26	; 38
      0003DB 26                    1195 	.db #0x26	; 38
      0003DC 26                    1196 	.db #0x26	; 38
      0003DD 26                    1197 	.db #0x26	; 38
      0003DE 26                    1198 	.db #0x26	; 38
      0003DF 26                    1199 	.db #0x26	; 38
      0003E0 26                    1200 	.db #0x26	; 38
      0003E1 26                    1201 	.db #0x26	; 38
      0003E2 26                    1202 	.db #0x26	; 38
      0003E3 26                    1203 	.db #0x26	; 38
      0003E4 26                    1204 	.db #0x26	; 38
      0003E5 26                    1205 	.db #0x26	; 38
      0003E6 26                    1206 	.db #0x26	; 38
      0003E7 26                    1207 	.db #0x26	; 38
      0003E8 26                    1208 	.db #0x26	; 38
      0003E9 26                    1209 	.db #0x26	; 38
      0003EA 26                    1210 	.db #0x26	; 38
      0003EB 26                    1211 	.db #0x26	; 38
      0003EC 26                    1212 	.db #0x26	; 38
      0003ED 26                    1213 	.db #0x26	; 38
      0003EE 26                    1214 	.db #0x26	; 38
      0003EF 26                    1215 	.db #0x26	; 38
      0003F0 26                    1216 	.db #0x26	; 38
      0003F1 26                    1217 	.db #0x26	; 38
      0003F2 26                    1218 	.db #0x26	; 38
      0003F3 26                    1219 	.db #0x26	; 38
      0003F4 26                    1220 	.db #0x26	; 38
      0003F5 26                    1221 	.db #0x26	; 38
      0003F6 26                    1222 	.db #0x26	; 38
      0003F7 26                    1223 	.db #0x26	; 38
      0003F8 26                    1224 	.db #0x26	; 38
      0003F9 26                    1225 	.db #0x26	; 38
      0003FA 26                    1226 	.db #0x26	; 38
      0003FB 26                    1227 	.db #0x26	; 38
      0003FC 26                    1228 	.db #0x26	; 38
      0003FD 26                    1229 	.db #0x26	; 38
      0003FE 26                    1230 	.db #0x26	; 38
      0003FF 26                    1231 	.db #0x26	; 38
      000400 26                    1232 	.db #0x26	; 38
      000401 26                    1233 	.db #0x26	; 38
      000402 26                    1234 	.db #0x26	; 38
      000403 26                    1235 	.db #0x26	; 38
      000404 26                    1236 	.db #0x26	; 38
      000405 26                    1237 	.db #0x26	; 38
      000406 26                    1238 	.db #0x26	; 38
      000407 26                    1239 	.db #0x26	; 38
      000408 26                    1240 	.db #0x26	; 38
      000409 26                    1241 	.db #0x26	; 38
      00040A 26                    1242 	.db #0x26	; 38
      00040B 26                    1243 	.db #0x26	; 38
      00040C 26                    1244 	.db #0x26	; 38
      00040D 2B                    1245 	.db #0x2b	; 43
      00040E 26                    1246 	.db #0x26	; 38
      00040F 26                    1247 	.db #0x26	; 38
      000410 26                    1248 	.db #0x26	; 38
      000411 26                    1249 	.db #0x26	; 38
      000412 26                    1250 	.db #0x26	; 38
      000413 26                    1251 	.db #0x26	; 38
      000414 26                    1252 	.db #0x26	; 38
      000415 26                    1253 	.db #0x26	; 38
      000416 26                    1254 	.db #0x26	; 38
      000417 26                    1255 	.db #0x26	; 38
      000418 26                    1256 	.db #0x26	; 38
      000419 26                    1257 	.db #0x26	; 38
      00041A 26                    1258 	.db #0x26	; 38
      00041B 26                    1259 	.db #0x26	; 38
      00041C 26                    1260 	.db #0x26	; 38
      00041D 26                    1261 	.db #0x26	; 38
      00041E 26                    1262 	.db #0x26	; 38
      00041F 26                    1263 	.db #0x26	; 38
      000420 2B                    1264 	.db #0x2b	; 43
      000421 26                    1265 	.db #0x26	; 38
      000422 26                    1266 	.db #0x26	; 38
      000423 26                    1267 	.db #0x26	; 38
      000424 26                    1268 	.db #0x26	; 38
      000425 26                    1269 	.db #0x26	; 38
      000426 26                    1270 	.db #0x26	; 38
      000427 26                    1271 	.db #0x26	; 38
      000428 26                    1272 	.db #0x26	; 38
      000429 26                    1273 	.db #0x26	; 38
      00042A 26                    1274 	.db #0x26	; 38
      00042B 26                    1275 	.db #0x26	; 38
      00042C 26                    1276 	.db #0x26	; 38
      00042D 26                    1277 	.db #0x26	; 38
      00042E 26                    1278 	.db #0x26	; 38
      00042F 26                    1279 	.db #0x26	; 38
      000430 26                    1280 	.db #0x26	; 38
      000431 26                    1281 	.db #0x26	; 38
      000432 26                    1282 	.db #0x26	; 38
      000433 26                    1283 	.db #0x26	; 38
      000434 26                    1284 	.db #0x26	; 38
      000435 26                    1285 	.db #0x26	; 38
      000436 26                    1286 	.db #0x26	; 38
      000437 2C                    1287 	.db #0x2c	; 44
      000438 26                    1288 	.db #0x26	; 38
      000439 26                    1289 	.db #0x26	; 38
      00043A 26                    1290 	.db #0x26	; 38
      00043B 26                    1291 	.db #0x26	; 38
      00043C 26                    1292 	.db #0x26	; 38
      00043D 26                    1293 	.db #0x26	; 38
      00043E 26                    1294 	.db #0x26	; 38
      00043F 26                    1295 	.db #0x26	; 38
      000440 26                    1296 	.db #0x26	; 38
      000441 26                    1297 	.db #0x26	; 38
      000442 26                    1298 	.db #0x26	; 38
      000443 26                    1299 	.db #0x26	; 38
      000444 26                    1300 	.db #0x26	; 38
      000445 26                    1301 	.db #0x26	; 38
      000446 26                    1302 	.db #0x26	; 38
      000447 26                    1303 	.db #0x26	; 38
      000448 25                    1304 	.db #0x25	; 37
      000449 2C                    1305 	.db #0x2c	; 44
      00044A 26                    1306 	.db #0x26	; 38
      00044B 26                    1307 	.db #0x26	; 38
      00044C 26                    1308 	.db #0x26	; 38
      00044D 26                    1309 	.db #0x26	; 38
      00044E 26                    1310 	.db #0x26	; 38
      00044F 26                    1311 	.db #0x26	; 38
      000450 26                    1312 	.db #0x26	; 38
      000451 26                    1313 	.db #0x26	; 38
      000452 26                    1314 	.db #0x26	; 38
      000453 26                    1315 	.db #0x26	; 38
      000454 26                    1316 	.db #0x26	; 38
      000455 26                    1317 	.db #0x26	; 38
      000456 26                    1318 	.db #0x26	; 38
      000457 26                    1319 	.db #0x26	; 38
      000458 26                    1320 	.db #0x26	; 38
      000459 26                    1321 	.db #0x26	; 38
      00045A 2B                    1322 	.db #0x2b	; 43
      00045B 26                    1323 	.db #0x26	; 38
      00045C 26                    1324 	.db #0x26	; 38
      00045D 26                    1325 	.db #0x26	; 38
      00045E 26                    1326 	.db #0x26	; 38
      00045F 26                    1327 	.db #0x26	; 38
      000460 26                    1328 	.db #0x26	; 38
      000461 26                    1329 	.db #0x26	; 38
      000462 26                    1330 	.db #0x26	; 38
      000463 26                    1331 	.db #0x26	; 38
      000464 26                    1332 	.db #0x26	; 38
      000465 26                    1333 	.db #0x26	; 38
      000466 26                    1334 	.db #0x26	; 38
      000467 26                    1335 	.db #0x26	; 38
      000468 26                    1336 	.db #0x26	; 38
      000469 26                    1337 	.db #0x26	; 38
      00046A 26                    1338 	.db #0x26	; 38
      00046B 26                    1339 	.db #0x26	; 38
      00046C 26                    1340 	.db #0x26	; 38
      00046D 26                    1341 	.db #0x26	; 38
      00046E 26                    1342 	.db #0x26	; 38
      00046F 26                    1343 	.db #0x26	; 38
      000470 26                    1344 	.db #0x26	; 38
      000471 26                    1345 	.db #0x26	; 38
      000472 27                    1346 	.db #0x27	; 39
      000473 28                    1347 	.db #0x28	; 40
      000474 26                    1348 	.db #0x26	; 38
      000475 26                    1349 	.db #0x26	; 38
      000476 26                    1350 	.db #0x26	; 38
      000477 26                    1351 	.db #0x26	; 38
      000478 26                    1352 	.db #0x26	; 38
      000479 26                    1353 	.db #0x26	; 38
      00047A 26                    1354 	.db #0x26	; 38
      00047B 26                    1355 	.db #0x26	; 38
      00047C 26                    1356 	.db #0x26	; 38
      00047D 26                    1357 	.db #0x26	; 38
      00047E 26                    1358 	.db #0x26	; 38
      00047F 26                    1359 	.db #0x26	; 38
      000480 26                    1360 	.db #0x26	; 38
      000481 26                    1361 	.db #0x26	; 38
      000482 26                    1362 	.db #0x26	; 38
      000483 26                    1363 	.db #0x26	; 38
      000484 26                    1364 	.db #0x26	; 38
      000485 26                    1365 	.db #0x26	; 38
      000486 2B                    1366 	.db #0x2b	; 43
      000487                       1367 _backgroundtiles:
      000487 40                    1368 	.db #0x40	; 64
      000488 38                    1369 	.db #0x38	; 56	'8'
      000489 3A                    1370 	.db #0x3a	; 58
      00048A 44                    1371 	.db #0x44	; 68	'D'
      00048B 7C                    1372 	.db #0x7c	; 124
      00048C 9A                    1373 	.db #0x9a	; 154
      00048D 5E                    1374 	.db #0x5e	; 94
      00048E E9                    1375 	.db #0xe9	; 233
      00048F 7A                    1376 	.db #0x7a	; 122	'z'
      000490 87                    1377 	.db #0x87	; 135
      000491 76                    1378 	.db #0x76	; 118	'v'
      000492 B9                    1379 	.db #0xb9	; 185
      000493 3C                    1380 	.db #0x3c	; 60
      000494 72                    1381 	.db #0x72	; 114	'r'
      000495 00                    1382 	.db #0x00	; 0
      000496 3C                    1383 	.db #0x3c	; 60
      000497 00                    1384 	.db #0x00	; 0
      000498 00                    1385 	.db #0x00	; 0
      000499 00                    1386 	.db #0x00	; 0
      00049A 00                    1387 	.db #0x00	; 0
      00049B 00                    1388 	.db #0x00	; 0
      00049C 00                    1389 	.db #0x00	; 0
      00049D 00                    1390 	.db #0x00	; 0
      00049E 00                    1391 	.db #0x00	; 0
      00049F 00                    1392 	.db #0x00	; 0
      0004A0 00                    1393 	.db #0x00	; 0
      0004A1 00                    1394 	.db #0x00	; 0
      0004A2 00                    1395 	.db #0x00	; 0
      0004A3 00                    1396 	.db #0x00	; 0
      0004A4 00                    1397 	.db #0x00	; 0
      0004A5 00                    1398 	.db #0x00	; 0
      0004A6 00                    1399 	.db #0x00	; 0
      0004A7 00                    1400 	.db #0x00	; 0
      0004A8 0F                    1401 	.db #0x0f	; 15
      0004A9 08                    1402 	.db #0x08	; 8
      0004AA 17                    1403 	.db #0x17	; 23
      0004AB 1C                    1404 	.db #0x1c	; 28
      0004AC 23                    1405 	.db #0x23	; 35
      0004AD 3E                    1406 	.db #0x3e	; 62
      0004AE 41                    1407 	.db #0x41	; 65	'A'
      0004AF 1B                    1408 	.db #0x1b	; 27
      0004B0 64                    1409 	.db #0x64	; 100	'd'
      0004B1 31                    1410 	.db #0x31	; 49	'1'
      0004B2 4E                    1411 	.db #0x4e	; 78	'N'
      0004B3 B1                    1412 	.db #0xb1	; 177
      0004B4 CE                    1413 	.db #0xce	; 206
      0004B5 BB                    1414 	.db #0xbb	; 187
      0004B6 C4                    1415 	.db #0xc4	; 196
      0004B7 00                    1416 	.db #0x00	; 0
      0004B8 F8                    1417 	.db #0xf8	; 248
      0004B9 00                    1418 	.db #0x00	; 0
      0004BA FC                    1419 	.db #0xfc	; 252
      0004BB E0                    1420 	.db #0xe0	; 224
      0004BC 1E                    1421 	.db #0x1e	; 30
      0004BD F0                    1422 	.db #0xf0	; 240
      0004BE 0F                    1423 	.db #0x0f	; 15
      0004BF BE                    1424 	.db #0xbe	; 190
      0004C0 01                    1425 	.db #0x01	; 1
      0004C1 BC                    1426 	.db #0xbc	; 188
      0004C2 02                    1427 	.db #0x02	; 2
      0004C3 CE                    1428 	.db #0xce	; 206
      0004C4 01                    1429 	.db #0x01	; 1
      0004C5 F6                    1430 	.db #0xf6	; 246
      0004C6 61                    1431 	.db #0x61	; 97	'a'
      0004C7 F4                    1432 	.db #0xf4	; 244
      0004C8 02                    1433 	.db #0x02	; 2
      0004C9 94                    1434 	.db #0x94	; 148
      0004CA 62                    1435 	.db #0x62	; 98	'b'
      0004CB E4                    1436 	.db #0xe4	; 228
      0004CC 02                    1437 	.db #0x02	; 2
      0004CD 6C                    1438 	.db #0x6c	; 108	'l'
      0004CE 82                    1439 	.db #0x82	; 130
      0004CF 70                    1440 	.db #0x70	; 112	'p'
      0004D0 8C                    1441 	.db #0x8c	; 140
      0004D1 60                    1442 	.db #0x60	; 96
      0004D2 90                    1443 	.db #0x90	; 144
      0004D3 00                    1444 	.db #0x00	; 0
      0004D4 E0                    1445 	.db #0xe0	; 224
      0004D5 80                    1446 	.db #0x80	; 128
      0004D6 80                    1447 	.db #0x80	; 128
      0004D7 8E                    1448 	.db #0x8e	; 142
      0004D8 F7                    1449 	.db #0xf7	; 247
      0004D9 8F                    1450 	.db #0x8f	; 143
      0004DA F3                    1451 	.db #0xf3	; 243
      0004DB 86                    1452 	.db #0x86	; 134
      0004DC F9                    1453 	.db #0xf9	; 249
      0004DD 42                    1454 	.db #0x42	; 66	'B'
      0004DE 7D                    1455 	.db #0x7d	; 125
      0004DF 80                    1456 	.db #0x80	; 128
      0004E0 FF                    1457 	.db #0xff	; 255
      0004E1 44                    1458 	.db #0x44	; 68	'D'
      0004E2 7F                    1459 	.db #0x7f	; 127
      0004E3 28                    1460 	.db #0x28	; 40
      0004E4 3F                    1461 	.db #0x3f	; 63
      0004E5 07                    1462 	.db #0x07	; 7
      0004E6 07                    1463 	.db #0x07	; 7
      0004E7 00                    1464 	.db #0x00	; 0
      0004E8 00                    1465 	.db #0x00	; 0
      0004E9 08                    1466 	.db #0x08	; 8
      0004EA 00                    1467 	.db #0x00	; 0
      0004EB 08                    1468 	.db #0x08	; 8
      0004EC 00                    1469 	.db #0x00	; 0
      0004ED 1C                    1470 	.db #0x1c	; 28
      0004EE 00                    1471 	.db #0x00	; 0
      0004EF 7F                    1472 	.db #0x7f	; 127
      0004F0 00                    1473 	.db #0x00	; 0
      0004F1 1C                    1474 	.db #0x1c	; 28
      0004F2 00                    1475 	.db #0x00	; 0
      0004F3 08                    1476 	.db #0x08	; 8
      0004F4 00                    1477 	.db #0x00	; 0
      0004F5 08                    1478 	.db #0x08	; 8
      0004F6 00                    1479 	.db #0x00	; 0
      0004F7 00                    1480 	.db #0x00	; 0
      0004F8 00                    1481 	.db #0x00	; 0
      0004F9 00                    1482 	.db #0x00	; 0
      0004FA 00                    1483 	.db #0x00	; 0
      0004FB 00                    1484 	.db #0x00	; 0
      0004FC 00                    1485 	.db #0x00	; 0
      0004FD 10                    1486 	.db #0x10	; 16
      0004FE 00                    1487 	.db #0x00	; 0
      0004FF 00                    1488 	.db #0x00	; 0
      000500 00                    1489 	.db #0x00	; 0
      000501 00                    1490 	.db #0x00	; 0
      000502 00                    1491 	.db #0x00	; 0
      000503 00                    1492 	.db #0x00	; 0
      000504 00                    1493 	.db #0x00	; 0
      000505 00                    1494 	.db #0x00	; 0
      000506 00                    1495 	.db #0x00	; 0
      000507                       1496 _healthblock:
      000507 FE                    1497 	.db #0xfe	; 254
      000508 FE                    1498 	.db #0xfe	; 254
      000509 FE                    1499 	.db #0xfe	; 254
      00050A FE                    1500 	.db #0xfe	; 254
      00050B FE                    1501 	.db #0xfe	; 254
      00050C FE                    1502 	.db #0xfe	; 254
      00050D FE                    1503 	.db #0xfe	; 254
      00050E FE                    1504 	.db #0xfe	; 254
      00050F FE                    1505 	.db #0xfe	; 254
      000510 FE                    1506 	.db #0xfe	; 254
      000511 FE                    1507 	.db #0xfe	; 254
      000512 FE                    1508 	.db #0xfe	; 254
      000513 FE                    1509 	.db #0xfe	; 254
      000514 FE                    1510 	.db #0xfe	; 254
      000515 00                    1511 	.db #0x00	; 0
      000516 00                    1512 	.db #0x00	; 0
      000517                       1513 _enemy1:
      000517 66                    1514 	.db #0x66	; 102	'f'
      000518 24                    1515 	.db #0x24	; 36
      000519 E7                    1516 	.db #0xe7	; 231
      00051A 66                    1517 	.db #0x66	; 102	'f'
      00051B F7                    1518 	.db #0xf7	; 247
      00051C E7                    1519 	.db #0xe7	; 231
      00051D 1C                    1520 	.db #0x1c	; 28
      00051E 18                    1521 	.db #0x18	; 24
      00051F 38                    1522 	.db #0x38	; 56	'8'
      000520 18                    1523 	.db #0x18	; 24
      000521 EF                    1524 	.db #0xef	; 239
      000522 E7                    1525 	.db #0xe7	; 231
      000523 E7                    1526 	.db #0xe7	; 231
      000524 66                    1527 	.db #0x66	; 102	'f'
      000525 66                    1528 	.db #0x66	; 102	'f'
      000526 24                    1529 	.db #0x24	; 36
      000527                       1530 _largeenemies:
      000527 00                    1531 	.db #0x00	; 0
      000528 00                    1532 	.db #0x00	; 0
      000529 00                    1533 	.db #0x00	; 0
      00052A 00                    1534 	.db #0x00	; 0
      00052B 00                    1535 	.db #0x00	; 0
      00052C 00                    1536 	.db #0x00	; 0
      00052D 00                    1537 	.db #0x00	; 0
      00052E 00                    1538 	.db #0x00	; 0
      00052F 00                    1539 	.db #0x00	; 0
      000530 00                    1540 	.db #0x00	; 0
      000531 00                    1541 	.db #0x00	; 0
      000532 00                    1542 	.db #0x00	; 0
      000533 00                    1543 	.db #0x00	; 0
      000534 00                    1544 	.db #0x00	; 0
      000535 7F                    1545 	.db #0x7f	; 127
      000536 7F                    1546 	.db #0x7f	; 127
      000537 7F                    1547 	.db #0x7f	; 127
      000538 7F                    1548 	.db #0x7f	; 127
      000539 00                    1549 	.db #0x00	; 0
      00053A 00                    1550 	.db #0x00	; 0
      00053B 00                    1551 	.db #0x00	; 0
      00053C 00                    1552 	.db #0x00	; 0
      00053D 00                    1553 	.db #0x00	; 0
      00053E 00                    1554 	.db #0x00	; 0
      00053F 00                    1555 	.db #0x00	; 0
      000540 00                    1556 	.db #0x00	; 0
      000541 00                    1557 	.db #0x00	; 0
      000542 00                    1558 	.db #0x00	; 0
      000543 00                    1559 	.db #0x00	; 0
      000544 00                    1560 	.db #0x00	; 0
      000545 00                    1561 	.db #0x00	; 0
      000546 00                    1562 	.db #0x00	; 0
      000547 00                    1563 	.db #0x00	; 0
      000548 00                    1564 	.db #0x00	; 0
      000549 40                    1565 	.db #0x40	; 64
      00054A 40                    1566 	.db #0x40	; 64
      00054B 60                    1567 	.db #0x60	; 96
      00054C 60                    1568 	.db #0x60	; 96
      00054D 70                    1569 	.db #0x70	; 112	'p'
      00054E 70                    1570 	.db #0x70	; 112	'p'
      00054F 78                    1571 	.db #0x78	; 120	'x'
      000550 78                    1572 	.db #0x78	; 120	'x'
      000551 7C                    1573 	.db #0x7c	; 124
      000552 7C                    1574 	.db #0x7c	; 124
      000553 7E                    1575 	.db #0x7e	; 126
      000554 7E                    1576 	.db #0x7e	; 126
      000555 FF                    1577 	.db #0xff	; 255
      000556 FF                    1578 	.db #0xff	; 255
      000557 FF                    1579 	.db #0xff	; 255
      000558 FF                    1580 	.db #0xff	; 255
      000559 7E                    1581 	.db #0x7e	; 126
      00055A 7E                    1582 	.db #0x7e	; 126
      00055B 7C                    1583 	.db #0x7c	; 124
      00055C 7C                    1584 	.db #0x7c	; 124
      00055D 78                    1585 	.db #0x78	; 120	'x'
      00055E 78                    1586 	.db #0x78	; 120	'x'
      00055F 70                    1587 	.db #0x70	; 112	'p'
      000560 70                    1588 	.db #0x70	; 112	'p'
      000561 60                    1589 	.db #0x60	; 96
      000562 60                    1590 	.db #0x60	; 96
      000563 40                    1591 	.db #0x40	; 64
      000564 40                    1592 	.db #0x40	; 64
      000565 00                    1593 	.db #0x00	; 0
      000566 00                    1594 	.db #0x00	; 0
      000567                       1595 _ProjectileTiles:
      000567 24                    1596 	.db #0x24	; 36
      000568 18                    1597 	.db #0x18	; 24
      000569 18                    1598 	.db #0x18	; 24
      00056A 3C                    1599 	.db #0x3c	; 60
      00056B 18                    1600 	.db #0x18	; 24
      00056C 3C                    1601 	.db #0x3c	; 60
      00056D 24                    1602 	.db #0x24	; 36
      00056E 18                    1603 	.db #0x18	; 24
      00056F 00                    1604 	.db #0x00	; 0
      000570 00                    1605 	.db #0x00	; 0
      000571 00                    1606 	.db #0x00	; 0
      000572 00                    1607 	.db #0x00	; 0
      000573 00                    1608 	.db #0x00	; 0
      000574 00                    1609 	.db #0x00	; 0
      000575 00                    1610 	.db #0x00	; 0
      000576 00                    1611 	.db #0x00	; 0
      000577 00                    1612 	.db #0x00	; 0
      000578 00                    1613 	.db #0x00	; 0
      000579 00                    1614 	.db #0x00	; 0
      00057A 00                    1615 	.db #0x00	; 0
      00057B 00                    1616 	.db #0x00	; 0
      00057C 00                    1617 	.db #0x00	; 0
      00057D 00                    1618 	.db #0x00	; 0
      00057E 00                    1619 	.db #0x00	; 0
      00057F 00                    1620 	.db #0x00	; 0
      000580 00                    1621 	.db #0x00	; 0
      000581 00                    1622 	.db #0x00	; 0
      000582 00                    1623 	.db #0x00	; 0
      000583 00                    1624 	.db #0x00	; 0
      000584 00                    1625 	.db #0x00	; 0
      000585 00                    1626 	.db #0x00	; 0
      000586 00                    1627 	.db #0x00	; 0
      000587 00                    1628 	.db #0x00	; 0
      000588 00                    1629 	.db #0x00	; 0
      000589 00                    1630 	.db #0x00	; 0
      00058A 00                    1631 	.db #0x00	; 0
      00058B 09                    1632 	.db #0x09	; 9
      00058C 06                    1633 	.db #0x06	; 6
      00058D 06                    1634 	.db #0x06	; 6
      00058E 0F                    1635 	.db #0x0f	; 15
      00058F 06                    1636 	.db #0x06	; 6
      000590 0F                    1637 	.db #0x0f	; 15
      000591 09                    1638 	.db #0x09	; 9
      000592 06                    1639 	.db #0x06	; 6
      000593 00                    1640 	.db #0x00	; 0
      000594 00                    1641 	.db #0x00	; 0
      000595 00                    1642 	.db #0x00	; 0
      000596 00                    1643 	.db #0x00	; 0
      000597 00                    1644 	.db #0x00	; 0
      000598 00                    1645 	.db #0x00	; 0
      000599 00                    1646 	.db #0x00	; 0
      00059A 00                    1647 	.db #0x00	; 0
      00059B 00                    1648 	.db #0x00	; 0
      00059C 00                    1649 	.db #0x00	; 0
      00059D 00                    1650 	.db #0x00	; 0
      00059E 00                    1651 	.db #0x00	; 0
      00059F 00                    1652 	.db #0x00	; 0
      0005A0 00                    1653 	.db #0x00	; 0
      0005A1 00                    1654 	.db #0x00	; 0
      0005A2 00                    1655 	.db #0x00	; 0
      0005A3 00                    1656 	.db #0x00	; 0
      0005A4 00                    1657 	.db #0x00	; 0
      0005A5 00                    1658 	.db #0x00	; 0
      0005A6 00                    1659 	.db #0x00	; 0
      0005A7 09                    1660 	.db #0x09	; 9
      0005A8 06                    1661 	.db #0x06	; 6
      0005A9 06                    1662 	.db #0x06	; 6
      0005AA 0F                    1663 	.db #0x0f	; 15
      0005AB 06                    1664 	.db #0x06	; 6
      0005AC 0F                    1665 	.db #0x0f	; 15
      0005AD 09                    1666 	.db #0x09	; 9
      0005AE 06                    1667 	.db #0x06	; 6
      0005AF 00                    1668 	.db #0x00	; 0
      0005B0 00                    1669 	.db #0x00	; 0
      0005B1 00                    1670 	.db #0x00	; 0
      0005B2 00                    1671 	.db #0x00	; 0
      0005B3 00                    1672 	.db #0x00	; 0
      0005B4 00                    1673 	.db #0x00	; 0
      0005B5 00                    1674 	.db #0x00	; 0
      0005B6 00                    1675 	.db #0x00	; 0
      0005B7 00                    1676 	.db #0x00	; 0
      0005B8 00                    1677 	.db #0x00	; 0
      0005B9 00                    1678 	.db #0x00	; 0
      0005BA 00                    1679 	.db #0x00	; 0
      0005BB 00                    1680 	.db #0x00	; 0
      0005BC 00                    1681 	.db #0x00	; 0
      0005BD 00                    1682 	.db #0x00	; 0
      0005BE 00                    1683 	.db #0x00	; 0
      0005BF 00                    1684 	.db #0x00	; 0
      0005C0 00                    1685 	.db #0x00	; 0
      0005C1 00                    1686 	.db #0x00	; 0
      0005C2 00                    1687 	.db #0x00	; 0
      0005C3 00                    1688 	.db #0x00	; 0
      0005C4 00                    1689 	.db #0x00	; 0
      0005C5 00                    1690 	.db #0x00	; 0
      0005C6 00                    1691 	.db #0x00	; 0
      0005C7 99                    1692 	.db #0x99	; 153
      0005C8 66                    1693 	.db #0x66	; 102	'f'
      0005C9 66                    1694 	.db #0x66	; 102	'f'
      0005CA FF                    1695 	.db #0xff	; 255
      0005CB 66                    1696 	.db #0x66	; 102	'f'
      0005CC FF                    1697 	.db #0xff	; 255
      0005CD 99                    1698 	.db #0x99	; 153
      0005CE 66                    1699 	.db #0x66	; 102	'f'
      0005CF 00                    1700 	.db #0x00	; 0
      0005D0 00                    1701 	.db #0x00	; 0
      0005D1 00                    1702 	.db #0x00	; 0
      0005D2 00                    1703 	.db #0x00	; 0
      0005D3 00                    1704 	.db #0x00	; 0
      0005D4 00                    1705 	.db #0x00	; 0
      0005D5 00                    1706 	.db #0x00	; 0
      0005D6 00                    1707 	.db #0x00	; 0
      0005D7 00                    1708 	.db #0x00	; 0
      0005D8 00                    1709 	.db #0x00	; 0
      0005D9 00                    1710 	.db #0x00	; 0
      0005DA 00                    1711 	.db #0x00	; 0
      0005DB 00                    1712 	.db #0x00	; 0
      0005DC 00                    1713 	.db #0x00	; 0
      0005DD 00                    1714 	.db #0x00	; 0
      0005DE 00                    1715 	.db #0x00	; 0
      0005DF 00                    1716 	.db #0x00	; 0
      0005E0 00                    1717 	.db #0x00	; 0
      0005E1 00                    1718 	.db #0x00	; 0
      0005E2 00                    1719 	.db #0x00	; 0
      0005E3 00                    1720 	.db #0x00	; 0
      0005E4 00                    1721 	.db #0x00	; 0
      0005E5 00                    1722 	.db #0x00	; 0
      0005E6 00                    1723 	.db #0x00	; 0
      0005E7 09                    1724 	.db #0x09	; 9
      0005E8 06                    1725 	.db #0x06	; 6
      0005E9 06                    1726 	.db #0x06	; 6
      0005EA 0F                    1727 	.db #0x0f	; 15
      0005EB 06                    1728 	.db #0x06	; 6
      0005EC 0F                    1729 	.db #0x0f	; 15
      0005ED 09                    1730 	.db #0x09	; 9
      0005EE 06                    1731 	.db #0x06	; 6
      0005EF 09                    1732 	.db #0x09	; 9
      0005F0 06                    1733 	.db #0x06	; 6
      0005F1 06                    1734 	.db #0x06	; 6
      0005F2 0F                    1735 	.db #0x0f	; 15
      0005F3 06                    1736 	.db #0x06	; 6
      0005F4 0F                    1737 	.db #0x0f	; 15
      0005F5 09                    1738 	.db #0x09	; 9
      0005F6 06                    1739 	.db #0x06	; 6
      0005F7 00                    1740 	.db #0x00	; 0
      0005F8 00                    1741 	.db #0x00	; 0
      0005F9 00                    1742 	.db #0x00	; 0
      0005FA 00                    1743 	.db #0x00	; 0
      0005FB 00                    1744 	.db #0x00	; 0
      0005FC 00                    1745 	.db #0x00	; 0
      0005FD 00                    1746 	.db #0x00	; 0
      0005FE 00                    1747 	.db #0x00	; 0
      0005FF 00                    1748 	.db #0x00	; 0
      000600 00                    1749 	.db #0x00	; 0
      000601 00                    1750 	.db #0x00	; 0
      000602 00                    1751 	.db #0x00	; 0
      000603 00                    1752 	.db #0x00	; 0
      000604 00                    1753 	.db #0x00	; 0
      000605 00                    1754 	.db #0x00	; 0
      000606 00                    1755 	.db #0x00	; 0
      000607 90                    1756 	.db #0x90	; 144
      000608 60                    1757 	.db #0x60	; 96
      000609 60                    1758 	.db #0x60	; 96
      00060A F0                    1759 	.db #0xf0	; 240
      00060B 60                    1760 	.db #0x60	; 96
      00060C F0                    1761 	.db #0xf0	; 240
      00060D 90                    1762 	.db #0x90	; 144
      00060E 60                    1763 	.db #0x60	; 96
      00060F 09                    1764 	.db #0x09	; 9
      000610 06                    1765 	.db #0x06	; 6
      000611 06                    1766 	.db #0x06	; 6
      000612 0F                    1767 	.db #0x0f	; 15
      000613 06                    1768 	.db #0x06	; 6
      000614 0F                    1769 	.db #0x0f	; 15
      000615 09                    1770 	.db #0x09	; 9
      000616 06                    1771 	.db #0x06	; 6
      000617 00                    1772 	.db #0x00	; 0
      000618 00                    1773 	.db #0x00	; 0
      000619 00                    1774 	.db #0x00	; 0
      00061A 00                    1775 	.db #0x00	; 0
      00061B 00                    1776 	.db #0x00	; 0
      00061C 00                    1777 	.db #0x00	; 0
      00061D 00                    1778 	.db #0x00	; 0
      00061E 00                    1779 	.db #0x00	; 0
      00061F 00                    1780 	.db #0x00	; 0
      000620 00                    1781 	.db #0x00	; 0
      000621 00                    1782 	.db #0x00	; 0
      000622 00                    1783 	.db #0x00	; 0
      000623 00                    1784 	.db #0x00	; 0
      000624 00                    1785 	.db #0x00	; 0
      000625 00                    1786 	.db #0x00	; 0
      000626 00                    1787 	.db #0x00	; 0
      000627 18                    1788 	.db #0x18	; 24
      000628 00                    1789 	.db #0x00	; 0
      000629 18                    1790 	.db #0x18	; 24
      00062A 18                    1791 	.db #0x18	; 24
      00062B 18                    1792 	.db #0x18	; 24
      00062C 18                    1793 	.db #0x18	; 24
      00062D 3C                    1794 	.db #0x3c	; 60
      00062E 18                    1795 	.db #0x18	; 24
      00062F 3C                    1796 	.db #0x3c	; 60
      000630 18                    1797 	.db #0x18	; 24
      000631 3C                    1798 	.db #0x3c	; 60
      000632 3C                    1799 	.db #0x3c	; 60
      000633 7E                    1800 	.db #0x7e	; 126
      000634 3C                    1801 	.db #0x3c	; 60
      000635 7E                    1802 	.db #0x7e	; 126
      000636 24                    1803 	.db #0x24	; 36
      000637 00                    1804 	.db #0x00	; 0
      000638 00                    1805 	.db #0x00	; 0
      000639 00                    1806 	.db #0x00	; 0
      00063A 00                    1807 	.db #0x00	; 0
      00063B 00                    1808 	.db #0x00	; 0
      00063C 00                    1809 	.db #0x00	; 0
      00063D 00                    1810 	.db #0x00	; 0
      00063E 00                    1811 	.db #0x00	; 0
      00063F 00                    1812 	.db #0x00	; 0
      000640 00                    1813 	.db #0x00	; 0
      000641 00                    1814 	.db #0x00	; 0
      000642 00                    1815 	.db #0x00	; 0
      000643 00                    1816 	.db #0x00	; 0
      000644 00                    1817 	.db #0x00	; 0
      000645 00                    1818 	.db #0x00	; 0
      000646 00                    1819 	.db #0x00	; 0
      000647 C0                    1820 	.db #0xc0	; 192
      000648 00                    1821 	.db #0x00	; 0
      000649 F8                    1822 	.db #0xf8	; 248
      00064A E0                    1823 	.db #0xe0	; 224
      00064B FF                    1824 	.db #0xff	; 255
      00064C 7E                    1825 	.db #0x7e	; 126
      00064D FF                    1826 	.db #0xff	; 255
      00064E 7E                    1827 	.db #0x7e	; 126
      00064F F8                    1828 	.db #0xf8	; 248
      000650 E0                    1829 	.db #0xe0	; 224
      000651 C0                    1830 	.db #0xc0	; 192
      000652 00                    1831 	.db #0x00	; 0
      000653 00                    1832 	.db #0x00	; 0
      000654 00                    1833 	.db #0x00	; 0
      000655 00                    1834 	.db #0x00	; 0
      000656 00                    1835 	.db #0x00	; 0
      000657 00                    1836 	.db #0x00	; 0
      000658 00                    1837 	.db #0x00	; 0
      000659 00                    1838 	.db #0x00	; 0
      00065A 00                    1839 	.db #0x00	; 0
      00065B 00                    1840 	.db #0x00	; 0
      00065C 00                    1841 	.db #0x00	; 0
      00065D 00                    1842 	.db #0x00	; 0
      00065E 00                    1843 	.db #0x00	; 0
      00065F 00                    1844 	.db #0x00	; 0
      000660 00                    1845 	.db #0x00	; 0
      000661 00                    1846 	.db #0x00	; 0
      000662 00                    1847 	.db #0x00	; 0
      000663 00                    1848 	.db #0x00	; 0
      000664 00                    1849 	.db #0x00	; 0
      000665 00                    1850 	.db #0x00	; 0
      000666 00                    1851 	.db #0x00	; 0
      000667 06                    1852 	.db #0x06	; 6
      000668 00                    1853 	.db #0x00	; 0
      000669 0F                    1854 	.db #0x0f	; 15
      00066A 06                    1855 	.db #0x06	; 6
      00066B 1F                    1856 	.db #0x1f	; 31
      00066C 0E                    1857 	.db #0x0e	; 14
      00066D 7E                    1858 	.db #0x7e	; 126
      00066E 1C                    1859 	.db #0x1c	; 28
      00066F FC                    1860 	.db #0xfc	; 252
      000670 78                    1861 	.db #0x78	; 120	'x'
      000671 F8                    1862 	.db #0xf8	; 248
      000672 F0                    1863 	.db #0xf0	; 240
      000673 F8                    1864 	.db #0xf8	; 248
      000674 70                    1865 	.db #0x70	; 112	'p'
      000675 70                    1866 	.db #0x70	; 112	'p'
      000676 20                    1867 	.db #0x20	; 32
      000677 00                    1868 	.db #0x00	; 0
      000678 00                    1869 	.db #0x00	; 0
      000679 00                    1870 	.db #0x00	; 0
      00067A 00                    1871 	.db #0x00	; 0
      00067B 00                    1872 	.db #0x00	; 0
      00067C 00                    1873 	.db #0x00	; 0
      00067D 00                    1874 	.db #0x00	; 0
      00067E 00                    1875 	.db #0x00	; 0
      00067F 00                    1876 	.db #0x00	; 0
      000680 00                    1877 	.db #0x00	; 0
      000681 00                    1878 	.db #0x00	; 0
      000682 00                    1879 	.db #0x00	; 0
      000683 00                    1880 	.db #0x00	; 0
      000684 00                    1881 	.db #0x00	; 0
      000685 00                    1882 	.db #0x00	; 0
      000686 00                    1883 	.db #0x00	; 0
      000687                       1884 _Player1:
      000687 08                    1885 	.db #0x08	; 8
      000688 08                    1886 	.db #0x08	; 8
      000689 1C                    1887 	.db #0x1c	; 28
      00068A 14                    1888 	.db #0x14	; 20
      00068B 38                    1889 	.db #0x38	; 56	'8'
      00068C 28                    1890 	.db #0x28	; 40
      00068D 68                    1891 	.db #0x68	; 104	'h'
      00068E 58                    1892 	.db #0x58	; 88	'X'
      00068F 50                    1893 	.db #0x50	; 80	'P'
      000690 71                    1894 	.db #0x71	; 113	'q'
      000691 D0                    1895 	.db #0xd0	; 208
      000692 B2                    1896 	.db #0xb2	; 178
      000693 D5                    1897 	.db #0xd5	; 213
      000694 B6                    1898 	.db #0xb6	; 182
      000695 D5                    1899 	.db #0xd5	; 213
      000696 B6                    1900 	.db #0xb6	; 182
      000697 D5                    1901 	.db #0xd5	; 213
      000698 B6                    1902 	.db #0xb6	; 182
      000699 CD                    1903 	.db #0xcd	; 205
      00069A BE                    1904 	.db #0xbe	; 190
      00069B C5                    1905 	.db #0xc5	; 197
      00069C BE                    1906 	.db #0xbe	; 190
      00069D 65                    1907 	.db #0x65	; 101	'e'
      00069E 5E                    1908 	.db #0x5e	; 94
      00069F 3E                    1909 	.db #0x3e	; 62
      0006A0 2F                    1910 	.db #0x2f	; 47
      0006A1 13                    1911 	.db #0x13	; 19
      0006A2 13                    1912 	.db #0x13	; 19
      0006A3 06                    1913 	.db #0x06	; 6
      0006A4 07                    1914 	.db #0x07	; 7
      0006A5 07                    1915 	.db #0x07	; 7
      0006A6 05                    1916 	.db #0x05	; 5
      0006A7 10                    1917 	.db #0x10	; 16
      0006A8 10                    1918 	.db #0x10	; 16
      0006A9 38                    1919 	.db #0x38	; 56	'8'
      0006AA 28                    1920 	.db #0x28	; 40
      0006AB 1C                    1921 	.db #0x1c	; 28
      0006AC 14                    1922 	.db #0x14	; 20
      0006AD 16                    1923 	.db #0x16	; 22
      0006AE 1A                    1924 	.db #0x1a	; 26
      0006AF 0A                    1925 	.db #0x0a	; 10
      0006B0 8E                    1926 	.db #0x8e	; 142
      0006B1 0B                    1927 	.db #0x0b	; 11
      0006B2 4D                    1928 	.db #0x4d	; 77	'M'
      0006B3 AB                    1929 	.db #0xab	; 171
      0006B4 6D                    1930 	.db #0x6d	; 109	'm'
      0006B5 AB                    1931 	.db #0xab	; 171
      0006B6 6D                    1932 	.db #0x6d	; 109	'm'
      0006B7 AB                    1933 	.db #0xab	; 171
      0006B8 6D                    1934 	.db #0x6d	; 109	'm'
      0006B9 B3                    1935 	.db #0xb3	; 179
      0006BA 7D                    1936 	.db #0x7d	; 125
      0006BB A3                    1937 	.db #0xa3	; 163
      0006BC 7D                    1938 	.db #0x7d	; 125
      0006BD A6                    1939 	.db #0xa6	; 166
      0006BE 7A                    1940 	.db #0x7a	; 122	'z'
      0006BF 7C                    1941 	.db #0x7c	; 124
      0006C0 F4                    1942 	.db #0xf4	; 244
      0006C1 C8                    1943 	.db #0xc8	; 200
      0006C2 C8                    1944 	.db #0xc8	; 200
      0006C3 60                    1945 	.db #0x60	; 96
      0006C4 E0                    1946 	.db #0xe0	; 224
      0006C5 E0                    1947 	.db #0xe0	; 224
      0006C6 A0                    1948 	.db #0xa0	; 160
      0006C7 07                    1949 	.db #0x07	; 7
      0006C8 07                    1950 	.db #0x07	; 7
      0006C9 0F                    1951 	.db #0x0f	; 15
      0006CA 08                    1952 	.db #0x08	; 8
      0006CB 18                    1953 	.db #0x18	; 24
      0006CC 17                    1954 	.db #0x17	; 23
      0006CD 31                    1955 	.db #0x31	; 49	'1'
      0006CE 2F                    1956 	.db #0x2f	; 47
      0006CF 12                    1957 	.db #0x12	; 18
      0006D0 1E                    1958 	.db #0x1e	; 30
      0006D1 DF                    1959 	.db #0xdf	; 223
      0006D2 DF                    1960 	.db #0xdf	; 223
      0006D3 F0                    1961 	.db #0xf0	; 240
      0006D4 7F                    1962 	.db #0x7f	; 127
      0006D5 AF                    1963 	.db #0xaf	; 175
      0006D6 F0                    1964 	.db #0xf0	; 240
      0006D7 AF                    1965 	.db #0xaf	; 175
      0006D8 F0                    1966 	.db #0xf0	; 240
      0006D9 F0                    1967 	.db #0xf0	; 240
      0006DA 7F                    1968 	.db #0x7f	; 127
      0006DB DF                    1969 	.db #0xdf	; 223
      0006DC DF                    1970 	.db #0xdf	; 223
      0006DD 12                    1971 	.db #0x12	; 18
      0006DE 1E                    1972 	.db #0x1e	; 30
      0006DF 31                    1973 	.db #0x31	; 49	'1'
      0006E0 2F                    1974 	.db #0x2f	; 47
      0006E1 18                    1975 	.db #0x18	; 24
      0006E2 17                    1976 	.db #0x17	; 23
      0006E3 0F                    1977 	.db #0x0f	; 15
      0006E4 08                    1978 	.db #0x08	; 8
      0006E5 07                    1979 	.db #0x07	; 7
      0006E6 07                    1980 	.db #0x07	; 7
      0006E7 E0                    1981 	.db #0xe0	; 224
      0006E8 E0                    1982 	.db #0xe0	; 224
      0006E9 F8                    1983 	.db #0xf8	; 248
      0006EA 18                    1984 	.db #0x18	; 24
      0006EB 0C                    1985 	.db #0x0c	; 12
      0006EC F4                    1986 	.db #0xf4	; 244
      0006ED F6                    1987 	.db #0xf6	; 246
      0006EE FA                    1988 	.db #0xfa	; 250
      0006EF 0F                    1989 	.db #0x0f	; 15
      0006F0 0D                    1990 	.db #0x0d	; 13
      0006F1 C2                    1991 	.db #0xc2	; 194
      0006F2 C2                    1992 	.db #0xc2	; 194
      0006F3 00                    1993 	.db #0x00	; 0
      0006F4 E0                    1994 	.db #0xe0	; 224
      0006F5 C0                    1995 	.db #0xc0	; 192
      0006F6 10                    1996 	.db #0x10	; 16
      0006F7 C0                    1997 	.db #0xc0	; 192
      0006F8 10                    1998 	.db #0x10	; 16
      0006F9 00                    1999 	.db #0x00	; 0
      0006FA E0                    2000 	.db #0xe0	; 224
      0006FB C2                    2001 	.db #0xc2	; 194
      0006FC C2                    2002 	.db #0xc2	; 194
      0006FD 0F                    2003 	.db #0x0f	; 15
      0006FE 0D                    2004 	.db #0x0d	; 13
      0006FF F6                    2005 	.db #0xf6	; 246
      000700 FA                    2006 	.db #0xfa	; 250
      000701 0C                    2007 	.db #0x0c	; 12
      000702 F4                    2008 	.db #0xf4	; 244
      000703 F8                    2009 	.db #0xf8	; 248
      000704 18                    2010 	.db #0x18	; 24
      000705 E0                    2011 	.db #0xe0	; 224
      000706 E0                    2012 	.db #0xe0	; 224
      000707 07                    2013 	.db #0x07	; 7
      000708 07                    2014 	.db #0x07	; 7
      000709 1B                    2015 	.db #0x1b	; 27
      00070A 1C                    2016 	.db #0x1c	; 28
      00070B 38                    2017 	.db #0x38	; 56	'8'
      00070C 27                    2018 	.db #0x27	; 39
      00070D 60                    2019 	.db #0x60	; 96
      00070E 5E                    2020 	.db #0x5e	; 94
      00070F 60                    2021 	.db #0x60	; 96
      000710 5C                    2022 	.db #0x5c	; 92
      000711 41                    2023 	.db #0x41	; 65	'A'
      000712 79                    2024 	.db #0x79	; 121	'y'
      000713 C4                    2025 	.db #0xc4	; 196
      000714 B7                    2026 	.db #0xb7	; 183
      000715 99                    2027 	.db #0x99	; 153
      000716 FE                    2028 	.db #0xfe	; 254
      000717 B3                    2029 	.db #0xb3	; 179
      000718 EC                    2030 	.db #0xec	; 236
      000719 67                    2031 	.db #0x67	; 103	'g'
      00071A 58                    2032 	.db #0x58	; 88	'X'
      00071B 2E                    2033 	.db #0x2e	; 46
      00071C 31                    2034 	.db #0x31	; 49	'1'
      00071D 5C                    2035 	.db #0x5c	; 92
      00071E 73                    2036 	.db #0x73	; 115	's'
      00071F 69                    2037 	.db #0x69	; 105	'i'
      000720 5E                    2038 	.db #0x5e	; 94
      000721 37                    2039 	.db #0x37	; 55	'7'
      000722 2D                    2040 	.db #0x2d	; 45
      000723 1A                    2041 	.db #0x1a	; 26
      000724 1B                    2042 	.db #0x1b	; 27
      000725 01                    2043 	.db #0x01	; 1
      000726 01                    2044 	.db #0x01	; 1
      000727 E0                    2045 	.db #0xe0	; 224
      000728 E0                    2046 	.db #0xe0	; 224
      000729 90                    2047 	.db #0x90	; 144
      00072A 70                    2048 	.db #0x70	; 112	'p'
      00072B C0                    2049 	.db #0xc0	; 192
      00072C C0                    2050 	.db #0xc0	; 192
      00072D 00                    2051 	.db #0x00	; 0
      00072E 00                    2052 	.db #0x00	; 0
      00072F 02                    2053 	.db #0x02	; 2
      000730 02                    2054 	.db #0x02	; 2
      000731 C1                    2055 	.db #0xc1	; 193
      000732 C3                    2056 	.db #0xc3	; 195
      000733 65                    2057 	.db #0x65	; 101	'e'
      000734 A7                    2058 	.db #0xa7	; 167
      000735 A7                    2059 	.db #0xa7	; 167
      000736 65                    2060 	.db #0x65	; 101	'e'
      000737 A3                    2061 	.db #0xa3	; 163
      000738 65                    2062 	.db #0x65	; 101	'e'
      000739 03                    2063 	.db #0x03	; 3
      00073A CD                    2064 	.db #0xcd	; 205
      00073B 41                    2065 	.db #0x41	; 65	'A'
      00073C DF                    2066 	.db #0xdf	; 223
      00073D 86                    2067 	.db #0x86	; 134
      00073E BA                    2068 	.db #0xba	; 186
      00073F 86                    2069 	.db #0x86	; 134
      000740 FA                    2070 	.db #0xfa	; 250
      000741 1C                    2071 	.db #0x1c	; 28
      000742 E4                    2072 	.db #0xe4	; 228
      000743 78                    2073 	.db #0x78	; 120	'x'
      000744 B8                    2074 	.db #0xb8	; 184
      000745 C0                    2075 	.db #0xc0	; 192
      000746 C0                    2076 	.db #0xc0	; 192
      000747 00                    2077 	.db #0x00	; 0
      000748 00                    2078 	.db #0x00	; 0
      000749 00                    2079 	.db #0x00	; 0
      00074A 00                    2080 	.db #0x00	; 0
      00074B 00                    2081 	.db #0x00	; 0
      00074C 00                    2082 	.db #0x00	; 0
      00074D 00                    2083 	.db #0x00	; 0
      00074E 00                    2084 	.db #0x00	; 0
      00074F 00                    2085 	.db #0x00	; 0
      000750 00                    2086 	.db #0x00	; 0
      000751 00                    2087 	.db #0x00	; 0
      000752 00                    2088 	.db #0x00	; 0
      000753 00                    2089 	.db #0x00	; 0
      000754 00                    2090 	.db #0x00	; 0
      000755 00                    2091 	.db #0x00	; 0
      000756 00                    2092 	.db #0x00	; 0
      000757 00                    2093 	.db #0x00	; 0
      000758 00                    2094 	.db #0x00	; 0
      000759 00                    2095 	.db #0x00	; 0
      00075A 00                    2096 	.db #0x00	; 0
      00075B 00                    2097 	.db #0x00	; 0
      00075C 00                    2098 	.db #0x00	; 0
      00075D 00                    2099 	.db #0x00	; 0
      00075E 00                    2100 	.db #0x00	; 0
      00075F 00                    2101 	.db #0x00	; 0
      000760 00                    2102 	.db #0x00	; 0
      000761 00                    2103 	.db #0x00	; 0
      000762 00                    2104 	.db #0x00	; 0
      000763 00                    2105 	.db #0x00	; 0
      000764 00                    2106 	.db #0x00	; 0
      000765 00                    2107 	.db #0x00	; 0
      000766 00                    2108 	.db #0x00	; 0
      000767 00                    2109 	.db #0x00	; 0
      000768 00                    2110 	.db #0x00	; 0
      000769 00                    2111 	.db #0x00	; 0
      00076A 00                    2112 	.db #0x00	; 0
      00076B 00                    2113 	.db #0x00	; 0
      00076C 00                    2114 	.db #0x00	; 0
      00076D 00                    2115 	.db #0x00	; 0
      00076E 00                    2116 	.db #0x00	; 0
      00076F 00                    2117 	.db #0x00	; 0
      000770 00                    2118 	.db #0x00	; 0
      000771 00                    2119 	.db #0x00	; 0
      000772 00                    2120 	.db #0x00	; 0
      000773 00                    2121 	.db #0x00	; 0
      000774 00                    2122 	.db #0x00	; 0
      000775 00                    2123 	.db #0x00	; 0
      000776 00                    2124 	.db #0x00	; 0
      000777 00                    2125 	.db #0x00	; 0
      000778 00                    2126 	.db #0x00	; 0
      000779 00                    2127 	.db #0x00	; 0
      00077A 00                    2128 	.db #0x00	; 0
      00077B 00                    2129 	.db #0x00	; 0
      00077C 00                    2130 	.db #0x00	; 0
      00077D 00                    2131 	.db #0x00	; 0
      00077E 00                    2132 	.db #0x00	; 0
      00077F 00                    2133 	.db #0x00	; 0
      000780 00                    2134 	.db #0x00	; 0
      000781 00                    2135 	.db #0x00	; 0
      000782 00                    2136 	.db #0x00	; 0
      000783 00                    2137 	.db #0x00	; 0
      000784 00                    2138 	.db #0x00	; 0
      000785 00                    2139 	.db #0x00	; 0
      000786 00                    2140 	.db #0x00	; 0
      000787                       2141 _BLANKSIZE:
      000787 03                    2142 	.db #0x03	; 3
      000788                       2143 _BLANK:
      000788 26                    2144 	.db #0x26	; 38
      000789 2B                    2145 	.db #0x2b	; 43
      00078A 2C                    2146 	.db #0x2c	; 44
      00078B                       2147 _EMPTYSPRITE:
      00078B 50                    2148 	.db #0x50	; 80	'P'
      00078C                       2149 _ENEMYCOUNT:
      00078C 05                    2150 	.db #0x05	; 5
      00078D                       2151 _xSpawnPositions:
      00078D 00                    2152 	.db #0x00	; 0
      00078E 60                    2153 	.db #0x60	; 96
      00078F B0                    2154 	.db #0xb0	; 176
      000790 00                    2155 	.db #0x00	; 0
      000791 B0                    2156 	.db #0xb0	; 176
      000792 00                    2157 	.db #0x00	; 0
      000793 60                    2158 	.db #0x60	; 96
      000794 B0                    2159 	.db #0xb0	; 176
      000795                       2160 _ySpawnPositions:
      000795 00                    2161 	.db #0x00	; 0
      000796 00                    2162 	.db #0x00	; 0
      000797 00                    2163 	.db #0x00	; 0
      000798 5C                    2164 	.db #0x5c	; 92
      000799 5C                    2165 	.db #0x5c	; 92
      00079A A0                    2166 	.db #0xa0	; 160
      00079B A0                    2167 	.db #0xa0	; 160
      00079C A0                    2168 	.db #0xa0	; 160
      00079D                       2169 _PROJECTILECOUNT:
      00079D 05                    2170 	.db #0x05	; 5
      00079E                       2171 _PLAYERSIZE:
      00079E 10                    2172 	.db #0x10	; 16
      00079F                       2173 _maxHull:
      00079F 64                    2174 	.db #0x64	;  100	'd'
      0007A0                       2175 _maxShield:
      0007A0 64                    2176 	.db #0x64	;  100	'd'
      0007A1                       2177 _GUNCOUNT:
      0007A1 03                    2178 	.db #0x03	; 3
                                   2179 ;main.c:108: void setHealthBar(uint8_t row, uint8_t hp) {
                                   2180 ;	---------------------------------
                                   2181 ; Function setHealthBar
                                   2182 ; ---------------------------------
      0007A2                       2183 _setHealthBar::
      0007A2 E8 FB                 2184 	add	sp, #-5
                                   2185 ;main.c:110: if (hp >= 80) {
      0007A4 F8 08                 2186 	ldhl	sp,	#8
      0007A6 7E                    2187 	ld	a, (hl)
      0007A7 D6 50                 2188 	sub	a, #0x50
      0007A9 38 31                 2189 	jr	C, 00102$
                                   2190 ;main.c:111: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      0007AB F8 00                 2191 	ldhl	sp,	#0
      0007AD 4D                    2192 	ld	c, l
      0007AE 44                    2193 	ld	b, h
      0007AF 36 50                 2194 	ld	(hl), #0x50
      0007B1 69                    2195 	ld	l, c
                                   2196 ;	spillPairReg hl
                                   2197 ;	spillPairReg hl
      0007B2 60                    2198 	ld	h, b
                                   2199 ;	spillPairReg hl
                                   2200 ;	spillPairReg hl
      0007B3 23                    2201 	inc	hl
      0007B4 36 50                 2202 	ld	(hl), #0x50
      0007B6 69                    2203 	ld	l, c
                                   2204 ;	spillPairReg hl
                                   2205 ;	spillPairReg hl
      0007B7 60                    2206 	ld	h, b
                                   2207 ;	spillPairReg hl
                                   2208 ;	spillPairReg hl
      0007B8 23                    2209 	inc	hl
      0007B9 23                    2210 	inc	hl
      0007BA 36 50                 2211 	ld	(hl), #0x50
      0007BC 69                    2212 	ld	l, c
                                   2213 ;	spillPairReg hl
                                   2214 ;	spillPairReg hl
      0007BD 60                    2215 	ld	h, b
                                   2216 ;	spillPairReg hl
                                   2217 ;	spillPairReg hl
      0007BE 23                    2218 	inc	hl
      0007BF 23                    2219 	inc	hl
      0007C0 23                    2220 	inc	hl
      0007C1 36 50                 2221 	ld	(hl), #0x50
      0007C3 21 04 00              2222 	ld	hl, #0x0004
      0007C6 09                    2223 	add	hl, bc
      0007C7 36 50                 2224 	ld	(hl), #0x50
                                   2225 ;main.c:112: set_win_tiles(5,row,5,1,blockmap);
      0007C9 C5                    2226 	push	bc
      0007CA 21 05 01              2227 	ld	hl, #0x105
      0007CD E5                    2228 	push	hl
      0007CE F8 0B                 2229 	ldhl	sp,	#11
      0007D0 66                    2230 	ld	h, (hl)
      0007D1 2E 05                 2231 	ld	l, #0x05
      0007D3 E5                    2232 	push	hl
      0007D4 CDr00r00              2233 	call	_set_win_tiles
      0007D7 E8 06                 2234 	add	sp, #6
                                   2235 ;main.c:113: return;
      0007D9 C3rB0r08              2236 	jp	00109$
      0007DC                       2237 00102$:
                                   2238 ;main.c:115: if (hp >= 60) {
      0007DC F8 08                 2239 	ldhl	sp,	#8
      0007DE 7E                    2240 	ld	a, (hl)
      0007DF D6 3C                 2241 	sub	a, #0x3c
      0007E1 38 31                 2242 	jr	C, 00104$
                                   2243 ;main.c:116: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      0007E3 F8 00                 2244 	ldhl	sp,	#0
      0007E5 4D                    2245 	ld	c, l
      0007E6 44                    2246 	ld	b, h
      0007E7 36 50                 2247 	ld	(hl), #0x50
      0007E9 69                    2248 	ld	l, c
                                   2249 ;	spillPairReg hl
                                   2250 ;	spillPairReg hl
      0007EA 60                    2251 	ld	h, b
                                   2252 ;	spillPairReg hl
                                   2253 ;	spillPairReg hl
      0007EB 23                    2254 	inc	hl
      0007EC 36 50                 2255 	ld	(hl), #0x50
      0007EE 69                    2256 	ld	l, c
                                   2257 ;	spillPairReg hl
                                   2258 ;	spillPairReg hl
      0007EF 60                    2259 	ld	h, b
                                   2260 ;	spillPairReg hl
                                   2261 ;	spillPairReg hl
      0007F0 23                    2262 	inc	hl
      0007F1 23                    2263 	inc	hl
      0007F2 36 50                 2264 	ld	(hl), #0x50
      0007F4 69                    2265 	ld	l, c
                                   2266 ;	spillPairReg hl
                                   2267 ;	spillPairReg hl
      0007F5 60                    2268 	ld	h, b
                                   2269 ;	spillPairReg hl
                                   2270 ;	spillPairReg hl
      0007F6 23                    2271 	inc	hl
      0007F7 23                    2272 	inc	hl
      0007F8 23                    2273 	inc	hl
      0007F9 36 50                 2274 	ld	(hl), #0x50
      0007FB 21 04 00              2275 	ld	hl, #0x0004
      0007FE 09                    2276 	add	hl, bc
      0007FF 36 00                 2277 	ld	(hl), #0x00
                                   2278 ;main.c:117: set_win_tiles(5,row,5,1,blockmap);
      000801 C5                    2279 	push	bc
      000802 21 05 01              2280 	ld	hl, #0x105
      000805 E5                    2281 	push	hl
      000806 F8 0B                 2282 	ldhl	sp,	#11
      000808 66                    2283 	ld	h, (hl)
      000809 2E 05                 2284 	ld	l, #0x05
      00080B E5                    2285 	push	hl
      00080C CDr00r00              2286 	call	_set_win_tiles
      00080F E8 06                 2287 	add	sp, #6
                                   2288 ;main.c:118: return;
      000811 C3rB0r08              2289 	jp	00109$
      000814                       2290 00104$:
                                   2291 ;main.c:120: if (hp >= 40) {
      000814 F8 08                 2292 	ldhl	sp,	#8
      000816 7E                    2293 	ld	a, (hl)
      000817 D6 28                 2294 	sub	a, #0x28
      000819 38 30                 2295 	jr	C, 00106$
                                   2296 ;main.c:121: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      00081B F8 00                 2297 	ldhl	sp,	#0
      00081D 4D                    2298 	ld	c, l
      00081E 44                    2299 	ld	b, h
      00081F 36 50                 2300 	ld	(hl), #0x50
      000821 69                    2301 	ld	l, c
                                   2302 ;	spillPairReg hl
                                   2303 ;	spillPairReg hl
      000822 60                    2304 	ld	h, b
                                   2305 ;	spillPairReg hl
                                   2306 ;	spillPairReg hl
      000823 23                    2307 	inc	hl
      000824 36 50                 2308 	ld	(hl), #0x50
      000826 69                    2309 	ld	l, c
                                   2310 ;	spillPairReg hl
                                   2311 ;	spillPairReg hl
      000827 60                    2312 	ld	h, b
                                   2313 ;	spillPairReg hl
                                   2314 ;	spillPairReg hl
      000828 23                    2315 	inc	hl
      000829 23                    2316 	inc	hl
      00082A 36 50                 2317 	ld	(hl), #0x50
      00082C 59                    2318 	ld	e, c
      00082D 50                    2319 	ld	d, b
      00082E 13                    2320 	inc	de
      00082F 13                    2321 	inc	de
      000830 13                    2322 	inc	de
      000831 AF                    2323 	xor	a, a
      000832 12                    2324 	ld	(de), a
      000833 21 04 00              2325 	ld	hl, #0x0004
      000836 09                    2326 	add	hl, bc
      000837 36 00                 2327 	ld	(hl), #0x00
                                   2328 ;main.c:122: set_win_tiles(5,row,5,1,blockmap);
      000839 C5                    2329 	push	bc
      00083A 21 05 01              2330 	ld	hl, #0x105
      00083D E5                    2331 	push	hl
      00083E F8 0B                 2332 	ldhl	sp,	#11
      000840 66                    2333 	ld	h, (hl)
      000841 2E 05                 2334 	ld	l, #0x05
      000843 E5                    2335 	push	hl
      000844 CDr00r00              2336 	call	_set_win_tiles
      000847 E8 06                 2337 	add	sp, #6
                                   2338 ;main.c:123: return;
      000849 18 65                 2339 	jr	00109$
      00084B                       2340 00106$:
                                   2341 ;main.c:125: if (hp >= 20) {
      00084B F8 08                 2342 	ldhl	sp,	#8
      00084D 7E                    2343 	ld	a, (hl)
      00084E D6 14                 2344 	sub	a, #0x14
      000850 38 30                 2345 	jr	C, 00108$
                                   2346 ;main.c:126: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000852 F8 00                 2347 	ldhl	sp,	#0
      000854 4D                    2348 	ld	c, l
      000855 44                    2349 	ld	b, h
      000856 36 50                 2350 	ld	(hl), #0x50
      000858 69                    2351 	ld	l, c
                                   2352 ;	spillPairReg hl
                                   2353 ;	spillPairReg hl
      000859 60                    2354 	ld	h, b
                                   2355 ;	spillPairReg hl
                                   2356 ;	spillPairReg hl
      00085A 23                    2357 	inc	hl
      00085B 36 50                 2358 	ld	(hl), #0x50
      00085D 59                    2359 	ld	e, c
      00085E 50                    2360 	ld	d, b
      00085F 13                    2361 	inc	de
      000860 13                    2362 	inc	de
      000861 AF                    2363 	xor	a, a
      000862 12                    2364 	ld	(de), a
      000863 59                    2365 	ld	e, c
      000864 50                    2366 	ld	d, b
      000865 13                    2367 	inc	de
      000866 13                    2368 	inc	de
      000867 13                    2369 	inc	de
      000868 AF                    2370 	xor	a, a
      000869 12                    2371 	ld	(de), a
      00086A 21 04 00              2372 	ld	hl, #0x0004
      00086D 09                    2373 	add	hl, bc
      00086E 36 00                 2374 	ld	(hl), #0x00
                                   2375 ;main.c:127: set_win_tiles(5,row,5,1,blockmap);
      000870 C5                    2376 	push	bc
      000871 21 05 01              2377 	ld	hl, #0x105
      000874 E5                    2378 	push	hl
      000875 F8 0B                 2379 	ldhl	sp,	#11
      000877 66                    2380 	ld	h, (hl)
      000878 2E 05                 2381 	ld	l, #0x05
      00087A E5                    2382 	push	hl
      00087B CDr00r00              2383 	call	_set_win_tiles
      00087E E8 06                 2384 	add	sp, #6
                                   2385 ;main.c:128: return;
      000880 18 2E                 2386 	jr	00109$
      000882                       2387 00108$:
                                   2388 ;main.c:130: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000882 F8 00                 2389 	ldhl	sp,	#0
      000884 4D                    2390 	ld	c, l
      000885 44                    2391 	ld	b, h
      000886 36 50                 2392 	ld	(hl), #0x50
      000888 59                    2393 	ld	e, c
      000889 50                    2394 	ld	d, b
      00088A 13                    2395 	inc	de
      00088B AF                    2396 	xor	a, a
      00088C 12                    2397 	ld	(de), a
      00088D 59                    2398 	ld	e, c
      00088E 50                    2399 	ld	d, b
      00088F 13                    2400 	inc	de
      000890 13                    2401 	inc	de
      000891 AF                    2402 	xor	a, a
      000892 12                    2403 	ld	(de), a
      000893 59                    2404 	ld	e, c
      000894 50                    2405 	ld	d, b
      000895 13                    2406 	inc	de
      000896 13                    2407 	inc	de
      000897 13                    2408 	inc	de
      000898 AF                    2409 	xor	a, a
      000899 12                    2410 	ld	(de), a
      00089A 21 04 00              2411 	ld	hl, #0x0004
      00089D 09                    2412 	add	hl, bc
      00089E 36 00                 2413 	ld	(hl), #0x00
                                   2414 ;main.c:131: set_win_tiles(5,row,5,1,blockmap);
      0008A0 C5                    2415 	push	bc
      0008A1 21 05 01              2416 	ld	hl, #0x105
      0008A4 E5                    2417 	push	hl
      0008A5 F8 0B                 2418 	ldhl	sp,	#11
      0008A7 66                    2419 	ld	h, (hl)
      0008A8 2E 05                 2420 	ld	l, #0x05
      0008AA E5                    2421 	push	hl
      0008AB CDr00r00              2422 	call	_set_win_tiles
      0008AE E8 06                 2423 	add	sp, #6
                                   2424 ;main.c:132: return;
      0008B0                       2425 00109$:
                                   2426 ;main.c:134: }
      0008B0 E8 05                 2427 	add	sp, #5
      0008B2 C9                    2428 	ret
                                   2429 ;main.c:136: void updateScore() {
                                   2430 ;	---------------------------------
                                   2431 ; Function updateScore
                                   2432 ; ---------------------------------
      0008B3                       2433 _updateScore::
      0008B3 E8 F6                 2434 	add	sp, #-10
                                   2435 ;main.c:140: len = bcd2text(&bcd, 0x01, buf);
      0008B5 F8 00                 2436 	ldhl	sp,	#0
      0008B7 4D                    2437 	ld	c, l
      0008B8 44                    2438 	ld	b, h
      0008B9 59                    2439 	ld	e, c
      0008BA 50                    2440 	ld	d, b
      0008BB C5                    2441 	push	bc
      0008BC D5                    2442 	push	de
      0008BD 3E 01                 2443 	ld	a, #0x01
      0008BF F5                    2444 	push	af
      0008C0 33                    2445 	inc	sp
      0008C1 11r70r00              2446 	ld	de, #_bcd
      0008C4 D5                    2447 	push	de
      0008C5 CDr00r00              2448 	call	_bcd2text
      0008C8 E8 05                 2449 	add	sp, #5
      0008CA C1                    2450 	pop	bc
                                   2451 ;main.c:141: set_win_tiles(15, 1, 5, 1, buf+3);
      0008CB 03                    2452 	inc	bc
      0008CC 03                    2453 	inc	bc
      0008CD 03                    2454 	inc	bc
      0008CE C5                    2455 	push	bc
      0008CF 21 05 01              2456 	ld	hl, #0x105
      0008D2 E5                    2457 	push	hl
      0008D3 21 0F 01              2458 	ld	hl, #0x10f
      0008D6 E5                    2459 	push	hl
      0008D7 CDr00r00              2460 	call	_set_win_tiles
                                   2461 ;main.c:142: }
      0008DA E8 10                 2462 	add	sp, #16
      0008DC C9                    2463 	ret
                                   2464 ;main.c:144: void incrementScore() {
                                   2465 ;	---------------------------------
                                   2466 ; Function incrementScore
                                   2467 ; ---------------------------------
      0008DD                       2468 _incrementScore::
                                   2469 ;main.c:145: score += 1;
      0008DD 21r6Er00              2470 	ld	hl, #_score
      0008E0 2A                    2471 	ld	a, (hl+)
      0008E1 4F                    2472 	ld	c, a
      0008E2 3A                    2473 	ld	a, (hl-)
      0008E3 47                    2474 	ld	b, a
      0008E4 03                    2475 	inc	bc
      0008E5 79                    2476 	ld	a, c
      0008E6 22                    2477 	ld	(hl+), a
      0008E7 70                    2478 	ld	(hl), b
                                   2479 ;main.c:146: bcd_add(&bcd, &INCREMENT);
      0008E8 11r74r00              2480 	ld	de, #_INCREMENT
      0008EB D5                    2481 	push	de
      0008EC 11r70r00              2482 	ld	de, #_bcd
      0008EF D5                    2483 	push	de
      0008F0 CDr00r00              2484 	call	_bcd_add
      0008F3 E8 04                 2485 	add	sp, #4
                                   2486 ;main.c:147: }
      0008F5 C9                    2487 	ret
                                   2488 ;main.c:149: void updateDirection() {
                                   2489 ;	---------------------------------
                                   2490 ; Function updateDirection
                                   2491 ; ---------------------------------
      0008F6                       2492 _updateDirection::
      0008F6 E8 FC                 2493 	add	sp, #-4
                                   2494 ;main.c:153: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      0008F8 21r8Cr00              2495 	ld	hl, #_joydata
      0008FB 5E                    2496 	ld	e, (hl)
      0008FC 7B                    2497 	ld	a, e
      0008FD E6 01                 2498 	and	a, #0x01
      0008FF F8 00                 2499 	ldhl	sp,	#0
      000901 22                    2500 	ld	(hl+), a
      000902 AF                    2501 	xor	a, a
      000903 22                    2502 	ld	(hl+), a
      000904 7B                    2503 	ld	a, e
      000905 E6 04                 2504 	and	a, #0x04
      000907 22                    2505 	ld	(hl+), a
      000908 AF                    2506 	xor	a, a
      000909 32                    2507 	ld	(hl-), a
      00090A 2B                    2508 	dec	hl
      00090B 7B                    2509 	ld	a, e
      00090C E6 08                 2510 	and	a, #0x08
      00090E 4F                    2511 	ld	c, a
      00090F 06 00                 2512 	ld	b, #0x00
      000911 3A                    2513 	ld	a, (hl-)
      000912 B6                    2514 	or	a, (hl)
      000913 28 14                 2515 	jr	Z, 00102$
      000915 F8 03                 2516 	ldhl	sp,	#3
      000917 3A                    2517 	ld	a, (hl-)
      000918 B6                    2518 	or	a, (hl)
      000919 20 0E                 2519 	jr	NZ, 00102$
      00091B 78                    2520 	ld	a, b
      00091C B1                    2521 	or	a, c
      00091D 20 0A                 2522 	jr	NZ, 00102$
                                   2523 ;main.c:154: xDir = 1;
      00091F 21r56r00              2524 	ld	hl, #_xDir
      000922 36 01                 2525 	ld	(hl), #0x01
                                   2526 ;main.c:155: yDir = 0;
      000924 21r57r00              2527 	ld	hl, #_yDir
      000927 36 00                 2528 	ld	(hl), #0x00
      000929                       2529 00102$:
                                   2530 ;main.c:157: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000929 7B                    2531 	ld	a, e
      00092A E6 02                 2532 	and	a, #0x02
      00092C 5F                    2533 	ld	e, a
      00092D 16 00                 2534 	ld	d, #0x00
      00092F 7A                    2535 	ld	a, d
      000930 B3                    2536 	or	a, e
      000931 28 14                 2537 	jr	Z, 00106$
      000933 F8 03                 2538 	ldhl	sp,	#3
      000935 3A                    2539 	ld	a, (hl-)
      000936 B6                    2540 	or	a, (hl)
      000937 20 0E                 2541 	jr	NZ, 00106$
      000939 78                    2542 	ld	a, b
      00093A B1                    2543 	or	a, c
      00093B 20 0A                 2544 	jr	NZ, 00106$
                                   2545 ;main.c:158: xDir = -1;
      00093D 21r56r00              2546 	ld	hl, #_xDir
      000940 36 FF                 2547 	ld	(hl), #0xff
                                   2548 ;main.c:159: yDir = 0;
      000942 21r57r00              2549 	ld	hl, #_yDir
      000945 36 00                 2550 	ld	(hl), #0x00
      000947                       2551 00106$:
                                   2552 ;main.c:161: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000947 F8 03                 2553 	ldhl	sp,	#3
      000949 3A                    2554 	ld	a, (hl-)
      00094A B6                    2555 	or	a, (hl)
      00094B 28 13                 2556 	jr	Z, 00110$
      00094D 7A                    2557 	ld	a, d
      00094E B3                    2558 	or	a, e
      00094F 20 0F                 2559 	jr	NZ, 00110$
      000951 2B                    2560 	dec	hl
      000952 3A                    2561 	ld	a, (hl-)
      000953 B6                    2562 	or	a, (hl)
      000954 20 0A                 2563 	jr	NZ, 00110$
                                   2564 ;main.c:162: xDir = 0;
      000956 21r56r00              2565 	ld	hl, #_xDir
      000959 36 00                 2566 	ld	(hl), #0x00
                                   2567 ;main.c:163: yDir = -1;
      00095B 21r57r00              2568 	ld	hl, #_yDir
      00095E 36 FF                 2569 	ld	(hl), #0xff
      000960                       2570 00110$:
                                   2571 ;main.c:165: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000960 78                    2572 	ld	a, b
      000961 B1                    2573 	or	a, c
      000962 28 14                 2574 	jr	Z, 00114$
      000964 7A                    2575 	ld	a, d
      000965 B3                    2576 	or	a, e
      000966 20 10                 2577 	jr	NZ, 00114$
      000968 F8 01                 2578 	ldhl	sp,	#1
      00096A 3A                    2579 	ld	a, (hl-)
      00096B B6                    2580 	or	a, (hl)
      00096C 20 0A                 2581 	jr	NZ, 00114$
                                   2582 ;main.c:166: xDir = 0;
      00096E 21r56r00              2583 	ld	hl, #_xDir
      000971 36 00                 2584 	ld	(hl), #0x00
                                   2585 ;main.c:167: yDir = 1;
      000973 21r57r00              2586 	ld	hl, #_yDir
      000976 36 01                 2587 	ld	(hl), #0x01
      000978                       2588 00114$:
                                   2589 ;main.c:171: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000978 F8 03                 2590 	ldhl	sp,	#3
      00097A 3A                    2591 	ld	a, (hl-)
      00097B B6                    2592 	or	a, (hl)
      00097C 28 0F                 2593 	jr	Z, 00118$
      00097E 2B                    2594 	dec	hl
      00097F 3A                    2595 	ld	a, (hl-)
      000980 B6                    2596 	or	a, (hl)
      000981 28 0A                 2597 	jr	Z, 00118$
                                   2598 ;main.c:172: xDir = 1;
      000983 21r56r00              2599 	ld	hl, #_xDir
      000986 36 01                 2600 	ld	(hl), #0x01
                                   2601 ;main.c:173: yDir = -1;
      000988 21r57r00              2602 	ld	hl, #_yDir
      00098B 36 FF                 2603 	ld	(hl), #0xff
      00098D                       2604 00118$:
                                   2605 ;main.c:175: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      00098D F8 03                 2606 	ldhl	sp,	#3
      00098F 3A                    2607 	ld	a, (hl-)
      000990 B6                    2608 	or	a, (hl)
      000991 28 0E                 2609 	jr	Z, 00121$
      000993 7A                    2610 	ld	a, d
      000994 B3                    2611 	or	a, e
      000995 28 0A                 2612 	jr	Z, 00121$
                                   2613 ;main.c:176: xDir = -1;
      000997 21r56r00              2614 	ld	hl, #_xDir
      00099A 36 FF                 2615 	ld	(hl), #0xff
                                   2616 ;main.c:177: yDir = -1;
      00099C 21r57r00              2617 	ld	hl, #_yDir
      00099F 36 FF                 2618 	ld	(hl), #0xff
      0009A1                       2619 00121$:
                                   2620 ;main.c:179: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      0009A1 78                    2621 	ld	a, b
      0009A2 B1                    2622 	or	a, c
      0009A3 28 10                 2623 	jr	Z, 00124$
      0009A5 F8 01                 2624 	ldhl	sp,	#1
      0009A7 3A                    2625 	ld	a, (hl-)
      0009A8 B6                    2626 	or	a, (hl)
      0009A9 28 0A                 2627 	jr	Z, 00124$
                                   2628 ;main.c:180: xDir = 1;
      0009AB 21r56r00              2629 	ld	hl, #_xDir
      0009AE 36 01                 2630 	ld	(hl), #0x01
                                   2631 ;main.c:181: yDir = 1;
      0009B0 21r57r00              2632 	ld	hl, #_yDir
      0009B3 36 01                 2633 	ld	(hl), #0x01
      0009B5                       2634 00124$:
                                   2635 ;main.c:183: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      0009B5 78                    2636 	ld	a, b
      0009B6 B1                    2637 	or	a, c
      0009B7 28 0E                 2638 	jr	Z, 00127$
      0009B9 7A                    2639 	ld	a, d
      0009BA B3                    2640 	or	a, e
      0009BB 28 0A                 2641 	jr	Z, 00127$
                                   2642 ;main.c:184: xDir = -1;
      0009BD 21r56r00              2643 	ld	hl, #_xDir
      0009C0 36 FF                 2644 	ld	(hl), #0xff
                                   2645 ;main.c:185: yDir = 1;
      0009C2 21r57r00              2646 	ld	hl, #_yDir
      0009C5 36 01                 2647 	ld	(hl), #0x01
      0009C7                       2648 00127$:
                                   2649 ;main.c:190: if (xDir == 0 && yDir == 0) {
      0009C7 FAr56r00              2650 	ld	a, (#_xDir)
      0009CA B7                    2651 	or	a, a
      0009CB 20 07                 2652 	jr	NZ, 00130$
      0009CD FAr57r00              2653 	ld	a, (#_yDir)
      0009D0 B7                    2654 	or	a, a
                                   2655 ;main.c:191: return;
      0009D1 CAr1Dr0B              2656 	jp	Z,00195$
      0009D4                       2657 00130$:
                                   2658 ;main.c:223: if (xDir == 0 && yDir > 0) {
      0009D4 21r57r00              2659 	ld	hl, #_yDir
      0009D7 5E                    2660 	ld	e, (hl)
      0009D8 AF                    2661 	xor	a, a
      0009D9 57                    2662 	ld	d, a
      0009DA 96                    2663 	sub	a, (hl)
      0009DB CB 7B                 2664 	bit	7, e
      0009DD 28 07                 2665 	jr	Z, 00387$
      0009DF CB 7A                 2666 	bit	7, d
      0009E1 20 08                 2667 	jr	NZ, 00388$
      0009E3 BF                    2668 	cp	a, a
      0009E4 18 05                 2669 	jr	00388$
      0009E6                       2670 00387$:
      0009E6 CB 7A                 2671 	bit	7, d
      0009E8 28 01                 2672 	jr	Z, 00388$
      0009EA 37                    2673 	scf
      0009EB                       2674 00388$:
      0009EB 3E 00                 2675 	ld	a, #0x00
      0009ED 17                    2676 	rla
      0009EE 4F                    2677 	ld	c, a
      0009EF FAr56r00              2678 	ld	a, (#_xDir)
      0009F2 B7                    2679 	or	a,a
      0009F3 20 1A                 2680 	jr	NZ, 00160$
      0009F5 B1                    2681 	or	a,c
      0009F6 28 17                 2682 	jr	Z, 00160$
                                   2683 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0009F8 21r02r00              2684 	ld	hl, #(_shadow_OAM + 2)
      0009FB 36 00                 2685 	ld	(hl), #0x00
      0009FD 21r06r00              2686 	ld	hl, #(_shadow_OAM + 6)
      000A00 36 02                 2687 	ld	(hl), #0x02
                                   2688 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000A02 21r03r00              2689 	ld	hl, #(_shadow_OAM + 3)
      000A05 36 40                 2690 	ld	(hl), #0x40
      000A07 21r07r00              2691 	ld	hl, #(_shadow_OAM + 7)
      000A0A 36 40                 2692 	ld	(hl), #0x40
                                   2693 ;main.c:227: set_sprite_prop(1, S_FLIPY); 
      000A0C C3r1Dr0B              2694 	jp	00195$
      000A0F                       2695 00160$:
                                   2696 ;main.c:229: else if (xDir == 0 && yDir < 0) {
      000A0F FAr57r00              2697 	ld	a, (#_yDir)
      000A12 07                    2698 	rlca
      000A13 E6 01                 2699 	and	a,#0x01
      000A15 F8 02                 2700 	ldhl	sp,	#2
      000A17 77                    2701 	ld	(hl), a
      000A18 FAr56r00              2702 	ld	a, (#_xDir)
      000A1B B7                    2703 	or	a, a
      000A1C 20 1D                 2704 	jr	NZ, 00156$
      000A1E F8 02                 2705 	ldhl	sp,	#2
      000A20 7E                    2706 	ld	a, (hl)
      000A21 B7                    2707 	or	a, a
      000A22 28 17                 2708 	jr	Z, 00156$
                                   2709 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000A24 21r02r00              2710 	ld	hl, #(_shadow_OAM + 2)
      000A27 36 00                 2711 	ld	(hl), #0x00
      000A29 21r06r00              2712 	ld	hl, #(_shadow_OAM + 6)
      000A2C 36 02                 2713 	ld	(hl), #0x02
                                   2714 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000A2E 21r03r00              2715 	ld	hl, #(_shadow_OAM + 3)
      000A31 36 00                 2716 	ld	(hl), #0x00
      000A33 21r07r00              2717 	ld	hl, #(_shadow_OAM + 7)
      000A36 36 00                 2718 	ld	(hl), #0x00
                                   2719 ;main.c:233: set_sprite_prop(1, 0); 
      000A38 C3r1Dr0B              2720 	jp	00195$
      000A3B                       2721 00156$:
                                   2722 ;main.c:235: else if (xDir > 0 && yDir == 0) {
      000A3B 21r56r00              2723 	ld	hl, #_xDir
      000A3E 5E                    2724 	ld	e, (hl)
      000A3F AF                    2725 	xor	a, a
      000A40 57                    2726 	ld	d, a
      000A41 96                    2727 	sub	a, (hl)
      000A42 CB 7B                 2728 	bit	7, e
      000A44 28 07                 2729 	jr	Z, 00389$
      000A46 CB 7A                 2730 	bit	7, d
      000A48 20 08                 2731 	jr	NZ, 00390$
      000A4A BF                    2732 	cp	a, a
      000A4B 18 05                 2733 	jr	00390$
      000A4D                       2734 00389$:
      000A4D CB 7A                 2735 	bit	7, d
      000A4F 28 01                 2736 	jr	Z, 00390$
      000A51 37                    2737 	scf
      000A52                       2738 00390$:
      000A52 3E 00                 2739 	ld	a, #0x00
      000A54 17                    2740 	rla
      000A55 47                    2741 	ld	b, a
      000A56 B7                    2742 	or	a, a
      000A57 28 1D                 2743 	jr	Z, 00152$
      000A59 FAr57r00              2744 	ld	a, (#_yDir)
      000A5C B7                    2745 	or	a, a
      000A5D 20 17                 2746 	jr	NZ, 00152$
                                   2747 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000A5F 21r02r00              2748 	ld	hl, #(_shadow_OAM + 2)
      000A62 36 04                 2749 	ld	(hl), #0x04
      000A64 21r06r00              2750 	ld	hl, #(_shadow_OAM + 6)
      000A67 36 06                 2751 	ld	(hl), #0x06
                                   2752 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000A69 21r03r00              2753 	ld	hl, #(_shadow_OAM + 3)
      000A6C 36 00                 2754 	ld	(hl), #0x00
      000A6E 21r07r00              2755 	ld	hl, #(_shadow_OAM + 7)
      000A71 36 00                 2756 	ld	(hl), #0x00
                                   2757 ;main.c:239: set_sprite_prop(1, 0); 
      000A73 C3r1Dr0B              2758 	jp	00195$
      000A76                       2759 00152$:
                                   2760 ;main.c:241: else if (xDir < 0 && yDir == 0) {
      000A76 FAr56r00              2761 	ld	a, (#_xDir)
      000A79 07                    2762 	rlca
      000A7A E6 01                 2763 	and	a,#0x01
      000A7C F8 03                 2764 	ldhl	sp,	#3
      000A7E 77                    2765 	ld	(hl), a
      000A7F 7E                    2766 	ld	a, (hl)
      000A80 B7                    2767 	or	a, a
      000A81 28 1D                 2768 	jr	Z, 00148$
      000A83 FAr57r00              2769 	ld	a, (#_yDir)
      000A86 B7                    2770 	or	a, a
      000A87 20 17                 2771 	jr	NZ, 00148$
                                   2772 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000A89 21r02r00              2773 	ld	hl, #(_shadow_OAM + 2)
      000A8C 36 04                 2774 	ld	(hl), #0x04
      000A8E 21r06r00              2775 	ld	hl, #(_shadow_OAM + 6)
      000A91 36 06                 2776 	ld	(hl), #0x06
                                   2777 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000A93 21r03r00              2778 	ld	hl, #(_shadow_OAM + 3)
      000A96 36 20                 2779 	ld	(hl), #0x20
      000A98 21r07r00              2780 	ld	hl, #(_shadow_OAM + 7)
      000A9B 36 20                 2781 	ld	(hl), #0x20
                                   2782 ;main.c:245: set_sprite_prop(1, S_FLIPX); 
      000A9D C3r1Dr0B              2783 	jp	00195$
      000AA0                       2784 00148$:
                                   2785 ;main.c:247: else if (xDir > 0 && yDir < 0) {
      000AA0 78                    2786 	ld	a, b
      000AA1 B7                    2787 	or	a, a
      000AA2 28 1C                 2788 	jr	Z, 00144$
      000AA4 F8 02                 2789 	ldhl	sp,	#2
      000AA6 7E                    2790 	ld	a, (hl)
      000AA7 B7                    2791 	or	a, a
      000AA8 28 16                 2792 	jr	Z, 00144$
                                   2793 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000AAA 21r02r00              2794 	ld	hl, #(_shadow_OAM + 2)
      000AAD 36 08                 2795 	ld	(hl), #0x08
      000AAF 21r06r00              2796 	ld	hl, #(_shadow_OAM + 6)
      000AB2 36 0A                 2797 	ld	(hl), #0x0a
                                   2798 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000AB4 21r03r00              2799 	ld	hl, #(_shadow_OAM + 3)
      000AB7 36 00                 2800 	ld	(hl), #0x00
      000AB9 21r07r00              2801 	ld	hl, #(_shadow_OAM + 7)
      000ABC 36 00                 2802 	ld	(hl), #0x00
                                   2803 ;main.c:251: set_sprite_prop(1, 0); 
      000ABE 18 5D                 2804 	jr	00195$
      000AC0                       2805 00144$:
                                   2806 ;main.c:253: else if (xDir > 0 && yDir > 0) {
      000AC0 78                    2807 	ld	a, b
      000AC1 B7                    2808 	or	a, a
      000AC2 28 1A                 2809 	jr	Z, 00140$
      000AC4 79                    2810 	ld	a, c
      000AC5 B7                    2811 	or	a, a
      000AC6 28 16                 2812 	jr	Z, 00140$
                                   2813 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000AC8 21r02r00              2814 	ld	hl, #(_shadow_OAM + 2)
      000ACB 36 08                 2815 	ld	(hl), #0x08
      000ACD 21r06r00              2816 	ld	hl, #(_shadow_OAM + 6)
      000AD0 36 0A                 2817 	ld	(hl), #0x0a
                                   2818 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000AD2 21r03r00              2819 	ld	hl, #(_shadow_OAM + 3)
      000AD5 36 40                 2820 	ld	(hl), #0x40
      000AD7 21r07r00              2821 	ld	hl, #(_shadow_OAM + 7)
      000ADA 36 40                 2822 	ld	(hl), #0x40
                                   2823 ;main.c:257: set_sprite_prop(1, S_FLIPY); 
      000ADC 18 3F                 2824 	jr	00195$
      000ADE                       2825 00140$:
                                   2826 ;main.c:259: else if (xDir < 0 && yDir > 0) {
      000ADE F8 03                 2827 	ldhl	sp,	#3
      000AE0 7E                    2828 	ld	a, (hl)
      000AE1 B7                    2829 	or	a, a
      000AE2 28 1A                 2830 	jr	Z, 00136$
      000AE4 79                    2831 	ld	a, c
      000AE5 B7                    2832 	or	a, a
      000AE6 28 16                 2833 	jr	Z, 00136$
                                   2834 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000AE8 21r02r00              2835 	ld	hl, #(_shadow_OAM + 2)
      000AEB 36 08                 2836 	ld	(hl), #0x08
      000AED 21r06r00              2837 	ld	hl, #(_shadow_OAM + 6)
      000AF0 36 0A                 2838 	ld	(hl), #0x0a
                                   2839 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000AF2 21r03r00              2840 	ld	hl, #(_shadow_OAM + 3)
      000AF5 36 60                 2841 	ld	(hl), #0x60
      000AF7 21r07r00              2842 	ld	hl, #(_shadow_OAM + 7)
      000AFA 36 60                 2843 	ld	(hl), #0x60
                                   2844 ;main.c:263: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000AFC 18 1F                 2845 	jr	00195$
      000AFE                       2846 00136$:
                                   2847 ;main.c:265: else if (xDir < 0 && yDir < 0) {
      000AFE F8 03                 2848 	ldhl	sp,	#3
      000B00 7E                    2849 	ld	a, (hl)
      000B01 B7                    2850 	or	a, a
      000B02 28 19                 2851 	jr	Z, 00195$
      000B04 2B                    2852 	dec	hl
      000B05 7E                    2853 	ld	a, (hl)
      000B06 B7                    2854 	or	a, a
      000B07 28 14                 2855 	jr	Z, 00195$
                                   2856 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B09 21r02r00              2857 	ld	hl, #(_shadow_OAM + 2)
      000B0C 36 08                 2858 	ld	(hl), #0x08
      000B0E 21r06r00              2859 	ld	hl, #(_shadow_OAM + 6)
      000B11 36 0A                 2860 	ld	(hl), #0x0a
                                   2861 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B13 21r03r00              2862 	ld	hl, #(_shadow_OAM + 3)
      000B16 36 20                 2863 	ld	(hl), #0x20
      000B18 21r07r00              2864 	ld	hl, #(_shadow_OAM + 7)
      000B1B 36 20                 2865 	ld	(hl), #0x20
                                   2866 ;main.c:269: set_sprite_prop(1, S_FLIPX); 
      000B1D                       2867 00195$:
                                   2868 ;main.c:271: }
      000B1D E8 04                 2869 	add	sp, #4
      000B1F C9                    2870 	ret
                                   2871 ;main.c:300: void playSound(uint8_t type) {
                                   2872 ;	---------------------------------
                                   2873 ; Function playSound
                                   2874 ; ---------------------------------
      000B20                       2875 _playSound::
                                   2876 ;main.c:301: if (type == 20) { //singlegun
      000B20 F8 02                 2877 	ldhl	sp,	#2
      000B22 7E                    2878 	ld	a, (hl)
      000B23 D6 14                 2879 	sub	a, #0x14
      000B25 20 13                 2880 	jr	NZ, 00102$
                                   2881 ;main.c:302: NR10_REG = 0x00;
      000B27 AF                    2882 	xor	a, a
      000B28 E0r00                 2883 	ldh	(_NR10_REG + 0), a
                                   2884 ;main.c:303: NR11_REG = 0x81;
      000B2A 3E 81                 2885 	ld	a, #0x81
      000B2C E0r00                 2886 	ldh	(_NR11_REG + 0), a
                                   2887 ;main.c:304: NR12_REG = 0x43;
      000B2E 3E 43                 2888 	ld	a, #0x43
      000B30 E0r00                 2889 	ldh	(_NR12_REG + 0), a
                                   2890 ;main.c:305: NR13_REG = 0X00;//0x6D;
      000B32 AF                    2891 	xor	a, a
      000B33 E0r00                 2892 	ldh	(_NR13_REG + 0), a
                                   2893 ;main.c:306: NR14_REG = 0x86;
      000B35 3E 86                 2894 	ld	a, #0x86
      000B37 E0r00                 2895 	ldh	(_NR14_REG + 0), a
                                   2896 ;main.c:307: return;
      000B39 C9                    2897 	ret
      000B3A                       2898 00102$:
                                   2899 ;main.c:309: if (type == 23) {
      000B3A F8 02                 2900 	ldhl	sp,	#2
      000B3C 7E                    2901 	ld	a, (hl)
      000B3D D6 17                 2902 	sub	a, #0x17
      000B3F 20 12                 2903 	jr	NZ, 00104$
                                   2904 ;main.c:310: NR10_REG = 0x00;
      000B41 AF                    2905 	xor	a, a
      000B42 E0r00                 2906 	ldh	(_NR10_REG + 0), a
                                   2907 ;main.c:311: NR11_REG = 0x81;
      000B44 3E 81                 2908 	ld	a, #0x81
      000B46 E0r00                 2909 	ldh	(_NR11_REG + 0), a
                                   2910 ;main.c:312: NR12_REG = 0x53;
      000B48 3E 53                 2911 	ld	a, #0x53
      000B4A E0r00                 2912 	ldh	(_NR12_REG + 0), a
                                   2913 ;main.c:313: NR13_REG = 0X00;//0x6D;
      000B4C AF                    2914 	xor	a, a
      000B4D E0r00                 2915 	ldh	(_NR13_REG + 0), a
                                   2916 ;main.c:314: NR14_REG = 0x86;
      000B4F 3E 86                 2917 	ld	a, #0x86
      000B51 E0r00                 2918 	ldh	(_NR14_REG + 0), a
      000B53                       2919 00104$:
                                   2920 ;main.c:316: if (type == 26) {
      000B53 F8 02                 2921 	ldhl	sp,	#2
      000B55 7E                    2922 	ld	a, (hl)
      000B56 D6 1A                 2923 	sub	a, #0x1a
      000B58 20 13                 2924 	jr	NZ, 00106$
                                   2925 ;main.c:317: NR10_REG = 0x00;
      000B5A AF                    2926 	xor	a, a
      000B5B E0r00                 2927 	ldh	(_NR10_REG + 0), a
                                   2928 ;main.c:318: NR11_REG = 0x89;
      000B5D 3E 89                 2929 	ld	a, #0x89
      000B5F E0r00                 2930 	ldh	(_NR11_REG + 0), a
                                   2931 ;main.c:319: NR12_REG = 0x55;
      000B61 3E 55                 2932 	ld	a, #0x55
      000B63 E0r00                 2933 	ldh	(_NR12_REG + 0), a
                                   2934 ;main.c:320: NR13_REG = 0x70;//0Xbe;//0x6D;
      000B65 3E 70                 2935 	ld	a, #0x70
      000B67 E0r00                 2936 	ldh	(_NR13_REG + 0), a
                                   2937 ;main.c:321: NR14_REG = 0x84;
      000B69 3E 84                 2938 	ld	a, #0x84
      000B6B E0r00                 2939 	ldh	(_NR14_REG + 0), a
      000B6D                       2940 00106$:
                                   2941 ;main.c:323: if (type == 0) {  // explosion
      000B6D F8 02                 2942 	ldhl	sp,	#2
      000B6F 7E                    2943 	ld	a, (hl)
      000B70 B7                    2944 	or	a, a
      000B71 C0                    2945 	ret	NZ
                                   2946 ;main.c:324: NR41_REG = 0x20;  
      000B72 3E 20                 2947 	ld	a, #0x20
      000B74 E0r00                 2948 	ldh	(_NR41_REG + 0), a
                                   2949 ;main.c:325: NR42_REG = 0xa2;//0xa3;  
      000B76 3E A2                 2950 	ld	a, #0xa2
      000B78 E0r00                 2951 	ldh	(_NR42_REG + 0), a
                                   2952 ;main.c:326: NR43_REG = 0x57;  
      000B7A 3E 57                 2953 	ld	a, #0x57
      000B7C E0r00                 2954 	ldh	(_NR43_REG + 0), a
                                   2955 ;main.c:327: NR44_REG = 0x80;  
      000B7E 3E 80                 2956 	ld	a, #0x80
      000B80 E0r00                 2957 	ldh	(_NR44_REG + 0), a
                                   2958 ;main.c:333: }
      000B82 C9                    2959 	ret
                                   2960 ;main.c:336: void updateEnemyPositions() {
                                   2961 ;	---------------------------------
                                   2962 ; Function updateEnemyPositions
                                   2963 ; ---------------------------------
      000B83                       2964 _updateEnemyPositions::
      000B83 E8 F0                 2965 	add	sp, #-16
                                   2966 ;main.c:338: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000B85 F8 0F                 2967 	ldhl	sp,	#15
      000B87 36 00                 2968 	ld	(hl), #0x00
      000B89                       2969 00154$:
      000B89 21r8Cr07              2970 	ld	hl, #_ENEMYCOUNT
      000B8C 4E                    2971 	ld	c, (hl)
      000B8D F8 0F                 2972 	ldhl	sp,	#15
      000B8F 7E                    2973 	ld	a, (hl)
      000B90 91                    2974 	sub	a, c
      000B91 D2r61r0F              2975 	jp	NC, 00120$
                                   2976 ;main.c:339: if (!enemies[i].alive) {
      000B94 3A                    2977 	ld	a, (hl-)
      000B95 2B                    2978 	dec	hl
      000B96 22                    2979 	ld	(hl+), a
      000B97 36 00                 2980 	ld	(hl), #0x00
      000B99 3E 04                 2981 	ld	a, #0x04
      000B9B                       2982 00300$:
      000B9B F8 0D                 2983 	ldhl	sp,	#13
      000B9D CB 26                 2984 	sla	(hl)
      000B9F 23                    2985 	inc	hl
      000BA0 CB 16                 2986 	rl	(hl)
      000BA2 3D                    2987 	dec	a
      000BA3 20 F6                 2988 	jr	NZ, 00300$
      000BA5 2B                    2989 	dec	hl
      000BA6 2A                    2990 	ld	a, (hl+)
      000BA7 5F                    2991 	ld	e, a
      000BA8 56                    2992 	ld	d, (hl)
      000BA9 21r00r00              2993 	ld	hl, #_enemies
      000BAC 19                    2994 	add	hl, de
      000BAD E5                    2995 	push	hl
      000BAE 7D                    2996 	ld	a, l
      000BAF F8 06                 2997 	ldhl	sp,	#6
      000BB1 77                    2998 	ld	(hl), a
      000BB2 E1                    2999 	pop	hl
      000BB3 7C                    3000 	ld	a, h
      000BB4 F8 05                 3001 	ldhl	sp,	#5
      000BB6 32                    3002 	ld	(hl-), a
      000BB7 2A                    3003 	ld	a, (hl+)
      000BB8 5F                    3004 	ld	e, a
      000BB9 56                    3005 	ld	d, (hl)
      000BBA 21 09 00              3006 	ld	hl, #0x0009
      000BBD 19                    3007 	add	hl, de
      000BBE 4D                    3008 	ld	c, l
      000BBF 44                    3009 	ld	b, h
      000BC0 0A                    3010 	ld	a, (bc)
      000BC1 B7                    3011 	or	a, a
      000BC2 CAr5Br0F              3012 	jp	Z, 00119$
                                   3013 ;main.c:342: enemies[i].x -= xOverflow;
      000BC5 F8 04                 3014 	ldhl	sp,#4
      000BC7 2A                    3015 	ld	a, (hl+)
      000BC8 5F                    3016 	ld	e, a
      000BC9 56                    3017 	ld	d, (hl)
      000BCA 1A                    3018 	ld	a, (de)
      000BCB 47                    3019 	ld	b, a
      000BCC 13                    3020 	inc	de
      000BCD 1A                    3021 	ld	a, (de)
      000BCE 4F                    3022 	ld	c, a
      000BCF 58                    3023 	ld	e, b
      000BD0 51                    3024 	ld	d, c
      000BD1 21r64r00              3025 	ld	hl, #_xOverflow
      000BD4 2A                    3026 	ld	a,	(hl+)
      000BD5 66                    3027 	ld	h, (hl)
      000BD6 6F                    3028 	ld	l, a
      000BD7 7B                    3029 	ld	a, e
      000BD8 95                    3030 	sub	a, l
      000BD9 5F                    3031 	ld	e, a
      000BDA 7A                    3032 	ld	a, d
      000BDB 9C                    3033 	sbc	a, h
      000BDC F8 0C                 3034 	ldhl	sp,	#12
      000BDE 32                    3035 	ld	(hl-), a
      000BDF 73                    3036 	ld	(hl), e
      000BE0 F8 04                 3037 	ldhl	sp,#4
      000BE2 2A                    3038 	ld	a, (hl+)
      000BE3 5F                    3039 	ld	e, a
      000BE4 56                    3040 	ld	d, (hl)
      000BE5 F8 0B                 3041 	ldhl	sp,	#11
      000BE7 2A                    3042 	ld	a, (hl+)
      000BE8 12                    3043 	ld	(de), a
      000BE9 13                    3044 	inc	de
      000BEA 7E                    3045 	ld	a, (hl)
      000BEB 12                    3046 	ld	(de), a
                                   3047 ;main.c:343: enemies[i].y -= yOverflow;
      000BEC F8 04                 3048 	ldhl	sp,#4
      000BEE 2A                    3049 	ld	a, (hl+)
      000BEF 5F                    3050 	ld	e, a
      000BF0 56                    3051 	ld	d, (hl)
      000BF1 21 02 00              3052 	ld	hl, #0x0002
      000BF4 19                    3053 	add	hl, de
      000BF5 E5                    3054 	push	hl
      000BF6 7D                    3055 	ld	a, l
      000BF7 F8 08                 3056 	ldhl	sp,	#8
      000BF9 77                    3057 	ld	(hl), a
      000BFA E1                    3058 	pop	hl
      000BFB 7C                    3059 	ld	a, h
      000BFC F8 07                 3060 	ldhl	sp,	#7
      000BFE 32                    3061 	ld	(hl-), a
      000BFF 2A                    3062 	ld	a, (hl+)
      000C00 5F                    3063 	ld	e, a
      000C01 56                    3064 	ld	d, (hl)
      000C02 1A                    3065 	ld	a, (de)
      000C03 4F                    3066 	ld	c, a
      000C04 13                    3067 	inc	de
      000C05 1A                    3068 	ld	a, (de)
      000C06 47                    3069 	ld	b, a
      000C07 79                    3070 	ld	a, c
      000C08 21r66r00              3071 	ld	hl, #_yOverflow
      000C0B 96                    3072 	sub	a, (hl)
      000C0C 23                    3073 	inc	hl
      000C0D 4F                    3074 	ld	c, a
      000C0E 78                    3075 	ld	a, b
      000C0F 9E                    3076 	sbc	a, (hl)
      000C10 47                    3077 	ld	b, a
      000C11 F8 06                 3078 	ldhl	sp,	#6
      000C13 2A                    3079 	ld	a,	(hl+)
      000C14 66                    3080 	ld	h, (hl)
      000C15 6F                    3081 	ld	l, a
      000C16 79                    3082 	ld	a, c
      000C17 22                    3083 	ld	(hl+), a
      000C18 70                    3084 	ld	(hl), b
                                   3085 ;main.c:346: if (enemies[i].x < playerDrawX) {
      000C19 21r5Er00              3086 	ld	hl, #_playerDrawX
      000C1C 4E                    3087 	ld	c, (hl)
      000C1D 06 00                 3088 	ld	b, #0x00
                                   3089 ;main.c:347: enemies[i].xSpeed += enemies[i].accel;
      000C1F F8 04                 3090 	ldhl	sp,#4
      000C21 2A                    3091 	ld	a, (hl+)
      000C22 5F                    3092 	ld	e, a
      000C23 56                    3093 	ld	d, (hl)
      000C24 21 0E 00              3094 	ld	hl, #0x000e
      000C27 19                    3095 	add	hl, de
      000C28 E5                    3096 	push	hl
      000C29 7D                    3097 	ld	a, l
      000C2A F8 0A                 3098 	ldhl	sp,	#10
      000C2C 77                    3099 	ld	(hl), a
      000C2D E1                    3100 	pop	hl
      000C2E 7C                    3101 	ld	a, h
      000C2F F8 09                 3102 	ldhl	sp,	#9
      000C31 77                    3103 	ld	(hl), a
      000C32 F8 04                 3104 	ldhl	sp,#4
      000C34 2A                    3105 	ld	a, (hl+)
      000C35 5F                    3106 	ld	e, a
      000C36 56                    3107 	ld	d, (hl)
      000C37 21 0D 00              3108 	ld	hl, #0x000d
      000C3A 19                    3109 	add	hl, de
      000C3B 33                    3110 	inc	sp
      000C3C 33                    3111 	inc	sp
      000C3D E5                    3112 	push	hl
      000C3E F8 08                 3113 	ldhl	sp,#8
      000C40 2A                    3114 	ld	a, (hl+)
      000C41 5F                    3115 	ld	e, a
      000C42 56                    3116 	ld	d, (hl)
      000C43 1A                    3117 	ld	a, (de)
      000C44 F8 0D                 3118 	ldhl	sp,	#13
      000C46 22                    3119 	ld	(hl+), a
      000C47 D1                    3120 	pop	de
      000C48 D5                    3121 	push	de
      000C49 1A                    3122 	ld	a, (de)
      000C4A 77                    3123 	ld	(hl), a
                                   3124 ;main.c:346: if (enemies[i].x < playerDrawX) {
      000C4B F8 0B                 3125 	ldhl	sp,	#11
      000C4D 2A                    3126 	ld	a, (hl+)
      000C4E 91                    3127 	sub	a, c
      000C4F 7E                    3128 	ld	a, (hl)
      000C50 98                    3129 	sbc	a, b
      000C51 56                    3130 	ld	d, (hl)
      000C52 78                    3131 	ld	a, b
      000C53 CB 7F                 3132 	bit	7,a
      000C55 28 07                 3133 	jr	Z, 00301$
      000C57 CB 7A                 3134 	bit	7, d
      000C59 20 08                 3135 	jr	NZ, 00302$
      000C5B BF                    3136 	cp	a, a
      000C5C 18 05                 3137 	jr	00302$
      000C5E                       3138 00301$:
      000C5E CB 7A                 3139 	bit	7, d
      000C60 28 01                 3140 	jr	Z, 00302$
      000C62 37                    3141 	scf
      000C63                       3142 00302$:
      000C63 30 0D                 3143 	jr	NC, 00104$
                                   3144 ;main.c:347: enemies[i].xSpeed += enemies[i].accel;
      000C65 F8 0E                 3145 	ldhl	sp,	#14
      000C67 3A                    3146 	ld	a, (hl-)
      000C68 86                    3147 	add	a, (hl)
      000C69 4F                    3148 	ld	c, a
      000C6A F8 08                 3149 	ldhl	sp,	#8
      000C6C 2A                    3150 	ld	a,	(hl+)
      000C6D 66                    3151 	ld	h, (hl)
      000C6E 6F                    3152 	ld	l, a
      000C6F 71                    3153 	ld	(hl), c
      000C70 18 0B                 3154 	jr	00105$
      000C72                       3155 00104$:
                                   3156 ;main.c:350: enemies[i].xSpeed -= enemies[i].accel;
      000C72 F8 0D                 3157 	ldhl	sp,	#13
      000C74 2A                    3158 	ld	a, (hl+)
      000C75 96                    3159 	sub	a, (hl)
      000C76 4F                    3160 	ld	c, a
      000C77 F8 08                 3161 	ldhl	sp,	#8
      000C79 2A                    3162 	ld	a,	(hl+)
      000C7A 66                    3163 	ld	h, (hl)
      000C7B 6F                    3164 	ld	l, a
      000C7C 71                    3165 	ld	(hl), c
      000C7D                       3166 00105$:
                                   3167 ;main.c:352: if (enemies[i].y < playerDrawY) {
      000C7D F8 06                 3168 	ldhl	sp,#6
      000C7F 2A                    3169 	ld	a, (hl+)
      000C80 5F                    3170 	ld	e, a
      000C81 56                    3171 	ld	d, (hl)
      000C82 1A                    3172 	ld	a, (de)
      000C83 F8 02                 3173 	ldhl	sp,	#2
      000C85 22                    3174 	ld	(hl+), a
      000C86 13                    3175 	inc	de
      000C87 1A                    3176 	ld	a, (de)
      000C88 77                    3177 	ld	(hl), a
      000C89 21r5Fr00              3178 	ld	hl, #_playerDrawY
      000C8C 4E                    3179 	ld	c, (hl)
      000C8D 06 00                 3180 	ld	b, #0x00
                                   3181 ;main.c:353: enemies[i].ySpeed += enemies[i].accel;
      000C8F F8 04                 3182 	ldhl	sp,#4
      000C91 2A                    3183 	ld	a, (hl+)
      000C92 5F                    3184 	ld	e, a
      000C93 56                    3185 	ld	d, (hl)
      000C94 21 0F 00              3186 	ld	hl, #0x000f
      000C97 19                    3187 	add	hl, de
      000C98 E5                    3188 	push	hl
      000C99 7D                    3189 	ld	a, l
      000C9A F8 0C                 3190 	ldhl	sp,	#12
      000C9C 77                    3191 	ld	(hl), a
      000C9D E1                    3192 	pop	hl
      000C9E 7C                    3193 	ld	a, h
      000C9F F8 0B                 3194 	ldhl	sp,	#11
      000CA1 32                    3195 	ld	(hl-), a
      000CA2 2A                    3196 	ld	a, (hl+)
      000CA3 5F                    3197 	ld	e, a
      000CA4 2A                    3198 	ld	a, (hl+)
      000CA5 23                    3199 	inc	hl
      000CA6 57                    3200 	ld	d, a
      000CA7 1A                    3201 	ld	a, (de)
      000CA8 22                    3202 	ld	(hl+), a
      000CA9 D1                    3203 	pop	de
      000CAA D5                    3204 	push	de
      000CAB 1A                    3205 	ld	a, (de)
      000CAC 77                    3206 	ld	(hl), a
                                   3207 ;main.c:352: if (enemies[i].y < playerDrawY) {
      000CAD F8 02                 3208 	ldhl	sp,	#2
      000CAF 2A                    3209 	ld	a, (hl+)
      000CB0 91                    3210 	sub	a, c
      000CB1 7E                    3211 	ld	a, (hl)
      000CB2 98                    3212 	sbc	a, b
      000CB3 56                    3213 	ld	d, (hl)
      000CB4 78                    3214 	ld	a, b
      000CB5 CB 7F                 3215 	bit	7,a
      000CB7 28 07                 3216 	jr	Z, 00303$
      000CB9 CB 7A                 3217 	bit	7, d
      000CBB 20 08                 3218 	jr	NZ, 00304$
      000CBD BF                    3219 	cp	a, a
      000CBE 18 05                 3220 	jr	00304$
      000CC0                       3221 00303$:
      000CC0 CB 7A                 3222 	bit	7, d
      000CC2 28 01                 3223 	jr	Z, 00304$
      000CC4 37                    3224 	scf
      000CC5                       3225 00304$:
      000CC5 30 0D                 3226 	jr	NC, 00107$
                                   3227 ;main.c:353: enemies[i].ySpeed += enemies[i].accel;
      000CC7 F8 0E                 3228 	ldhl	sp,	#14
      000CC9 3A                    3229 	ld	a, (hl-)
      000CCA 86                    3230 	add	a, (hl)
      000CCB 4F                    3231 	ld	c, a
      000CCC F8 0A                 3232 	ldhl	sp,	#10
      000CCE 2A                    3233 	ld	a,	(hl+)
      000CCF 66                    3234 	ld	h, (hl)
      000CD0 6F                    3235 	ld	l, a
      000CD1 71                    3236 	ld	(hl), c
      000CD2 18 0B                 3237 	jr	00108$
      000CD4                       3238 00107$:
                                   3239 ;main.c:356: enemies[i].ySpeed -= enemies[i].accel;
      000CD4 F8 0D                 3240 	ldhl	sp,	#13
      000CD6 2A                    3241 	ld	a, (hl+)
      000CD7 96                    3242 	sub	a, (hl)
      000CD8 4F                    3243 	ld	c, a
      000CD9 F8 0A                 3244 	ldhl	sp,	#10
      000CDB 2A                    3245 	ld	a,	(hl+)
      000CDC 66                    3246 	ld	h, (hl)
      000CDD 6F                    3247 	ld	l, a
      000CDE 71                    3248 	ld	(hl), c
      000CDF                       3249 00108$:
                                   3250 ;main.c:359: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000CDF F8 04                 3251 	ldhl	sp,#4
      000CE1 2A                    3252 	ld	a, (hl+)
      000CE2 5F                    3253 	ld	e, a
      000CE3 56                    3254 	ld	d, (hl)
      000CE4 21 0C 00              3255 	ld	hl, #0x000c
      000CE7 19                    3256 	add	hl, de
      000CE8 4D                    3257 	ld	c, l
      000CE9 44                    3258 	ld	b, h
      000CEA 0A                    3259 	ld	a, (bc)
      000CEB 5F                    3260 	ld	e, a
      000CEC F8 0C                 3261 	ldhl	sp,	#12
      000CEE 7B                    3262 	ld	a, e
      000CEF 22                    3263 	ld	(hl+), a
      000CF0 AF                    3264 	xor	a, a
      000CF1 93                    3265 	sub	a, e
      000CF2 77                    3266 	ld	(hl), a
      000CF3 F8 08                 3267 	ldhl	sp,#8
      000CF5 2A                    3268 	ld	a, (hl+)
      000CF6 5F                    3269 	ld	e, a
      000CF7 56                    3270 	ld	d, (hl)
      000CF8 1A                    3271 	ld	a, (de)
      000CF9 F8 0E                 3272 	ldhl	sp,	#14
                                   3273 ;main.c:276: return (value < min) ? min : (value > max) ? max : value;
      000CFB 32                    3274 	ld	(hl-), a
      000CFC 2A                    3275 	ld	a, (hl+)
      000CFD 5F                    3276 	ld	e, a
      000CFE 56                    3277 	ld	d, (hl)
      000CFF 3A                    3278 	ld	a, (hl-)
      000D00 96                    3279 	sub	a, (hl)
      000D01 CB 7B                 3280 	bit	7, e
      000D03 28 07                 3281 	jr	Z, 00305$
      000D05 CB 7A                 3282 	bit	7, d
      000D07 20 08                 3283 	jr	NZ, 00306$
      000D09 BF                    3284 	cp	a, a
      000D0A 18 05                 3285 	jr	00306$
      000D0C                       3286 00305$:
      000D0C CB 7A                 3287 	bit	7, d
      000D0E 28 01                 3288 	jr	Z, 00306$
      000D10 37                    3289 	scf
      000D11                       3290 00306$:
      000D11 30 05                 3291 	jr	NC, 00160$
      000D13 F8 0D                 3292 	ldhl	sp,	#13
      000D15 7E                    3293 	ld	a, (hl)
      000D16 18 23                 3294 	jr	00161$
      000D18                       3295 00160$:
      000D18 F8 0E                 3296 	ldhl	sp,	#14
      000D1A 3A                    3297 	ld	a, (hl-)
      000D1B 2B                    3298 	dec	hl
      000D1C 5F                    3299 	ld	e, a
      000D1D 56                    3300 	ld	d, (hl)
      000D1E 2A                    3301 	ld	a, (hl+)
      000D1F 23                    3302 	inc	hl
      000D20 96                    3303 	sub	a, (hl)
      000D21 CB 7B                 3304 	bit	7, e
      000D23 28 07                 3305 	jr	Z, 00307$
      000D25 CB 7A                 3306 	bit	7, d
      000D27 20 08                 3307 	jr	NZ, 00308$
      000D29 BF                    3308 	cp	a, a
      000D2A 18 05                 3309 	jr	00308$
      000D2C                       3310 00307$:
      000D2C CB 7A                 3311 	bit	7, d
      000D2E 28 01                 3312 	jr	Z, 00308$
      000D30 37                    3313 	scf
      000D31                       3314 00308$:
      000D31 30 05                 3315 	jr	NC, 00162$
      000D33 F8 0C                 3316 	ldhl	sp,	#12
      000D35 7E                    3317 	ld	a, (hl)
      000D36 18 03                 3318 	jr	00163$
      000D38                       3319 00162$:
      000D38 F8 0E                 3320 	ldhl	sp,	#14
      000D3A 7E                    3321 	ld	a, (hl)
      000D3B                       3322 00163$:
      000D3B                       3323 00161$:
                                   3324 ;main.c:359: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000D3B F8 08                 3325 	ldhl	sp,	#8
      000D3D F5                    3326 	push	af
      000D3E 2A                    3327 	ld	a,	(hl+)
      000D3F 66                    3328 	ld	h, (hl)
      000D40 6F                    3329 	ld	l, a
      000D41 F1                    3330 	pop	af
      000D42 77                    3331 	ld	(hl), a
                                   3332 ;main.c:360: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000D43 0A                    3333 	ld	a, (bc)
      000D44 47                    3334 	ld	b, a
      000D45 48                    3335 	ld	c, b
      000D46 AF                    3336 	xor	a, a
      000D47 90                    3337 	sub	a, b
      000D48 47                    3338 	ld	b, a
      000D49 F8 0A                 3339 	ldhl	sp,#10
      000D4B 2A                    3340 	ld	a, (hl+)
      000D4C 5F                    3341 	ld	e, a
      000D4D 56                    3342 	ld	d, (hl)
      000D4E 1A                    3343 	ld	a, (de)
      000D4F 6F                    3344 	ld	l, a
                                   3345 ;	spillPairReg hl
                                   3346 ;	spillPairReg hl
                                   3347 ;main.c:276: return (value < min) ? min : (value > max) ? max : value;
      000D50 58                    3348 	ld	e, b
      000D51 7D                    3349 	ld	a,l
      000D52 57                    3350 	ld	d,a
      000D53 90                    3351 	sub	a, b
      000D54 CB 7B                 3352 	bit	7, e
      000D56 28 07                 3353 	jr	Z, 00309$
      000D58 CB 7A                 3354 	bit	7, d
      000D5A 20 08                 3355 	jr	NZ, 00310$
      000D5C BF                    3356 	cp	a, a
      000D5D 18 05                 3357 	jr	00310$
      000D5F                       3358 00309$:
      000D5F CB 7A                 3359 	bit	7, d
      000D61 28 01                 3360 	jr	Z, 00310$
      000D63 37                    3361 	scf
      000D64                       3362 00310$:
      000D64 30 03                 3363 	jr	NC, 00164$
      000D66 48                    3364 	ld	c, b
      000D67 18 17                 3365 	jr	00165$
      000D69                       3366 00164$:
      000D69 5D                    3367 	ld	e, l
      000D6A 79                    3368 	ld	a,c
      000D6B 57                    3369 	ld	d,a
      000D6C 95                    3370 	sub	a, l
      000D6D CB 7B                 3371 	bit	7, e
      000D6F 28 07                 3372 	jr	Z, 00311$
      000D71 CB 7A                 3373 	bit	7, d
      000D73 20 08                 3374 	jr	NZ, 00312$
      000D75 BF                    3375 	cp	a, a
      000D76 18 05                 3376 	jr	00312$
      000D78                       3377 00311$:
      000D78 CB 7A                 3378 	bit	7, d
      000D7A 28 01                 3379 	jr	Z, 00312$
      000D7C 37                    3380 	scf
      000D7D                       3381 00312$:
      000D7D 38 01                 3382 	jr	C, 00167$
      000D7F 4D                    3383 	ld	c, l
      000D80                       3384 00167$:
      000D80                       3385 00165$:
                                   3386 ;main.c:360: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000D80 F8 0A                 3387 	ldhl	sp,	#10
      000D82 2A                    3388 	ld	a,	(hl+)
      000D83 66                    3389 	ld	h, (hl)
      000D84 6F                    3390 	ld	l, a
      000D85 71                    3391 	ld	(hl), c
                                   3392 ;main.c:363: enemies[i].xReserve += enemies[i].xSpeed;
      000D86 F8 04                 3393 	ldhl	sp,#4
      000D88 2A                    3394 	ld	a, (hl+)
      000D89 5F                    3395 	ld	e, a
      000D8A 56                    3396 	ld	d, (hl)
      000D8B 21 04 00              3397 	ld	hl, #0x0004
      000D8E 19                    3398 	add	hl, de
      000D8F E5                    3399 	push	hl
      000D90 7D                    3400 	ld	a, l
      000D91 F8 0F                 3401 	ldhl	sp,	#15
      000D93 77                    3402 	ld	(hl), a
      000D94 E1                    3403 	pop	hl
      000D95 7C                    3404 	ld	a, h
      000D96 F8 0E                 3405 	ldhl	sp,	#14
      000D98 32                    3406 	ld	(hl-), a
      000D99 2A                    3407 	ld	a, (hl+)
      000D9A 5F                    3408 	ld	e, a
      000D9B 56                    3409 	ld	d, (hl)
      000D9C 1A                    3410 	ld	a, (de)
      000D9D 47                    3411 	ld	b, a
      000D9E F8 08                 3412 	ldhl	sp,#8
      000DA0 2A                    3413 	ld	a, (hl+)
      000DA1 5F                    3414 	ld	e, a
      000DA2 56                    3415 	ld	d, (hl)
      000DA3 1A                    3416 	ld	a, (de)
      000DA4 80                    3417 	add	a, b
      000DA5 47                    3418 	ld	b, a
      000DA6 F8 0D                 3419 	ldhl	sp,	#13
      000DA8 2A                    3420 	ld	a,	(hl+)
      000DA9 66                    3421 	ld	h, (hl)
      000DAA 6F                    3422 	ld	l, a
      000DAB 70                    3423 	ld	(hl), b
                                   3424 ;main.c:364: enemies[i].yReserve += enemies[i].ySpeed;
      000DAC F8 04                 3425 	ldhl	sp,#4
      000DAE 2A                    3426 	ld	a, (hl+)
      000DAF 5F                    3427 	ld	e, a
      000DB0 56                    3428 	ld	d, (hl)
      000DB1 21 05 00              3429 	ld	hl, #0x0005
      000DB4 19                    3430 	add	hl, de
      000DB5 E5                    3431 	push	hl
      000DB6 7D                    3432 	ld	a, l
      000DB7 F8 0C                 3433 	ldhl	sp,	#12
      000DB9 77                    3434 	ld	(hl), a
      000DBA E1                    3435 	pop	hl
      000DBB 7C                    3436 	ld	a, h
      000DBC F8 0B                 3437 	ldhl	sp,	#11
      000DBE 32                    3438 	ld	(hl-), a
      000DBF 2A                    3439 	ld	a, (hl+)
      000DC0 5F                    3440 	ld	e, a
      000DC1 56                    3441 	ld	d, (hl)
      000DC2 1A                    3442 	ld	a, (de)
      000DC3 81                    3443 	add	a, c
      000DC4 4F                    3444 	ld	c, a
      000DC5 3A                    3445 	ld	a, (hl-)
      000DC6 6E                    3446 	ld	l, (hl)
      000DC7 67                    3447 	ld	h, a
      000DC8 71                    3448 	ld	(hl), c
                                   3449 ;main.c:368: if (enemies[i].xReserve >> 3 > 0) {
      000DC9 F8 0D                 3450 	ldhl	sp,#13
      000DCB 2A                    3451 	ld	a, (hl+)
      000DCC 5F                    3452 	ld	e, a
      000DCD 3A                    3453 	ld	a, (hl-)
      000DCE 2B                    3454 	dec	hl
      000DCF 57                    3455 	ld	d, a
      000DD0 1A                    3456 	ld	a, (de)
      000DD1 77                    3457 	ld	(hl), a
      000DD2 CB 28                 3458 	sra	b
      000DD4 CB 28                 3459 	sra	b
      000DD6 CB 28                 3460 	sra	b
      000DD8 58                    3461 	ld	e, b
      000DD9 AF                    3462 	xor	a, a
      000DDA 57                    3463 	ld	d, a
      000DDB 90                    3464 	sub	a, b
      000DDC CB 7B                 3465 	bit	7, e
      000DDE 28 07                 3466 	jr	Z, 00313$
      000DE0 CB 7A                 3467 	bit	7, d
      000DE2 20 08                 3468 	jr	NZ, 00314$
      000DE4 BF                    3469 	cp	a, a
      000DE5 18 05                 3470 	jr	00314$
      000DE7                       3471 00313$:
      000DE7 CB 7A                 3472 	bit	7, d
      000DE9 28 01                 3473 	jr	Z, 00314$
      000DEB 37                    3474 	scf
      000DEC                       3475 00314$:
      000DEC 30 3F                 3476 	jr	NC, 00112$
                                   3477 ;main.c:369: int8_t xMovement = enemies[i].xReserve >> 3;
      000DEE F8 0C                 3478 	ldhl	sp,	#12
      000DF0 7E                    3479 	ld	a, (hl)
      000DF1 CB 2F                 3480 	sra	a
      000DF3 CB 2F                 3481 	sra	a
      000DF5 CB 2F                 3482 	sra	a
      000DF7 77                    3483 	ld	(hl), a
                                   3484 ;main.c:370: enemies[i].x += xMovement;
      000DF8 F8 04                 3485 	ldhl	sp,#4
      000DFA 2A                    3486 	ld	a, (hl+)
      000DFB 5F                    3487 	ld	e, a
      000DFC 56                    3488 	ld	d, (hl)
      000DFD 1A                    3489 	ld	a, (de)
      000DFE 4F                    3490 	ld	c, a
      000DFF 13                    3491 	inc	de
      000E00 1A                    3492 	ld	a, (de)
      000E01 47                    3493 	ld	b, a
      000E02 F8 0C                 3494 	ldhl	sp,	#12
      000E04 7E                    3495 	ld	a, (hl)
      000E05 5F                    3496 	ld	e, a
      000E06 07                    3497 	rlca
      000E07 9F                    3498 	sbc	a, a
      000E08 57                    3499 	ld	d, a
      000E09 69                    3500 	ld	l, c
                                   3501 ;	spillPairReg hl
                                   3502 ;	spillPairReg hl
      000E0A 60                    3503 	ld	h, b
                                   3504 ;	spillPairReg hl
                                   3505 ;	spillPairReg hl
      000E0B 19                    3506 	add	hl, de
      000E0C 4D                    3507 	ld	c, l
      000E0D 44                    3508 	ld	b, h
      000E0E F8 04                 3509 	ldhl	sp,	#4
      000E10 2A                    3510 	ld	a,	(hl+)
      000E11 66                    3511 	ld	h, (hl)
      000E12 6F                    3512 	ld	l, a
      000E13 79                    3513 	ld	a, c
      000E14 22                    3514 	ld	(hl+), a
      000E15 70                    3515 	ld	(hl), b
                                   3516 ;main.c:371: enemies[i].xReserve -=  xMovement << 3;
      000E16 F8 0D                 3517 	ldhl	sp,#13
      000E18 2A                    3518 	ld	a, (hl+)
      000E19 5F                    3519 	ld	e, a
      000E1A 3A                    3520 	ld	a, (hl-)
      000E1B 2B                    3521 	dec	hl
      000E1C 57                    3522 	ld	d, a
      000E1D 1A                    3523 	ld	a, (de)
      000E1E F5                    3524 	push	af
      000E1F 2A                    3525 	ld	a, (hl+)
      000E20 87                    3526 	add	a, a
      000E21 87                    3527 	add	a, a
      000E22 87                    3528 	add	a, a
      000E23 4F                    3529 	ld	c, a
      000E24 F1                    3530 	pop	af
      000E25 91                    3531 	sub	a, c
      000E26 4F                    3532 	ld	c, a
      000E27 2A                    3533 	ld	a,	(hl+)
      000E28 66                    3534 	ld	h, (hl)
      000E29 6F                    3535 	ld	l, a
      000E2A 71                    3536 	ld	(hl), c
      000E2B 18 69                 3537 	jr	00113$
      000E2D                       3538 00112$:
                                   3539 ;main.c:374: else if ((-enemies[i].xReserve) >> 3 > 0){
      000E2D F8 0C                 3540 	ldhl	sp,	#12
      000E2F 7E                    3541 	ld	a, (hl)
      000E30 4F                    3542 	ld	c, a
      000E31 07                    3543 	rlca
      000E32 9F                    3544 	sbc	a, a
      000E33 47                    3545 	ld	b, a
      000E34 AF                    3546 	xor	a, a
      000E35 91                    3547 	sub	a, c
      000E36 4F                    3548 	ld	c, a
      000E37 9F                    3549 	sbc	a, a
      000E38 90                    3550 	sub	a, b
      000E39 47                    3551 	ld	b, a
      000E3A CB 28                 3552 	sra	b
      000E3C CB 19                 3553 	rr	c
      000E3E CB 28                 3554 	sra	b
      000E40 CB 19                 3555 	rr	c
      000E42 CB 28                 3556 	sra	b
      000E44 CB 19                 3557 	rr	c
      000E46 58                    3558 	ld	e, b
      000E47 AF                    3559 	xor	a, a
      000E48 57                    3560 	ld	d, a
      000E49 B9                    3561 	cp	a, c
      000E4A 98                    3562 	sbc	a, b
      000E4B CB 7B                 3563 	bit	7, e
      000E4D 28 07                 3564 	jr	Z, 00315$
      000E4F CB 7A                 3565 	bit	7, d
      000E51 20 08                 3566 	jr	NZ, 00316$
      000E53 BF                    3567 	cp	a, a
      000E54 18 05                 3568 	jr	00316$
      000E56                       3569 00315$:
      000E56 CB 7A                 3570 	bit	7, d
      000E58 28 01                 3571 	jr	Z, 00316$
      000E5A 37                    3572 	scf
      000E5B                       3573 00316$:
      000E5B 30 39                 3574 	jr	NC, 00113$
                                   3575 ;main.c:375: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      000E5D AF                    3576 	xor	a, a
      000E5E 91                    3577 	sub	a, c
      000E5F 4F                    3578 	ld	c, a
      000E60 F8 0C                 3579 	ldhl	sp,	#12
      000E62 71                    3580 	ld	(hl), c
                                   3581 ;main.c:376: enemies[i].x += xMovement;
      000E63 F8 04                 3582 	ldhl	sp,#4
      000E65 2A                    3583 	ld	a, (hl+)
      000E66 5F                    3584 	ld	e, a
      000E67 56                    3585 	ld	d, (hl)
      000E68 1A                    3586 	ld	a, (de)
      000E69 4F                    3587 	ld	c, a
      000E6A 13                    3588 	inc	de
      000E6B 1A                    3589 	ld	a, (de)
      000E6C 47                    3590 	ld	b, a
      000E6D F8 0C                 3591 	ldhl	sp,	#12
      000E6F 7E                    3592 	ld	a, (hl)
      000E70 5F                    3593 	ld	e, a
      000E71 07                    3594 	rlca
      000E72 9F                    3595 	sbc	a, a
      000E73 57                    3596 	ld	d, a
      000E74 69                    3597 	ld	l, c
                                   3598 ;	spillPairReg hl
                                   3599 ;	spillPairReg hl
      000E75 60                    3600 	ld	h, b
                                   3601 ;	spillPairReg hl
                                   3602 ;	spillPairReg hl
      000E76 19                    3603 	add	hl, de
      000E77 4D                    3604 	ld	c, l
      000E78 44                    3605 	ld	b, h
      000E79 F8 04                 3606 	ldhl	sp,	#4
      000E7B 2A                    3607 	ld	a,	(hl+)
      000E7C 66                    3608 	ld	h, (hl)
      000E7D 6F                    3609 	ld	l, a
      000E7E 79                    3610 	ld	a, c
      000E7F 22                    3611 	ld	(hl+), a
      000E80 70                    3612 	ld	(hl), b
                                   3613 ;main.c:377: enemies[i].xReserve +=  (-xMovement) << 3;
      000E81 F8 0D                 3614 	ldhl	sp,#13
      000E83 2A                    3615 	ld	a, (hl+)
      000E84 5F                    3616 	ld	e, a
      000E85 3A                    3617 	ld	a, (hl-)
      000E86 2B                    3618 	dec	hl
      000E87 57                    3619 	ld	d, a
      000E88 1A                    3620 	ld	a, (de)
      000E89 4F                    3621 	ld	c, a
      000E8A AF                    3622 	xor	a, a
      000E8B 96                    3623 	sub	a, (hl)
      000E8C 23                    3624 	inc	hl
      000E8D 87                    3625 	add	a, a
      000E8E 87                    3626 	add	a, a
      000E8F 87                    3627 	add	a, a
      000E90 81                    3628 	add	a, c
      000E91 4F                    3629 	ld	c, a
      000E92 2A                    3630 	ld	a,	(hl+)
      000E93 66                    3631 	ld	h, (hl)
      000E94 6F                    3632 	ld	l, a
      000E95 71                    3633 	ld	(hl), c
      000E96                       3634 00113$:
                                   3635 ;main.c:364: enemies[i].yReserve += enemies[i].ySpeed;
      000E96 F8 0A                 3636 	ldhl	sp,#10
      000E98 2A                    3637 	ld	a, (hl+)
      000E99 5F                    3638 	ld	e, a
      000E9A 56                    3639 	ld	d, (hl)
      000E9B 1A                    3640 	ld	a, (de)
      000E9C 4F                    3641 	ld	c, a
                                   3642 ;main.c:380: if (enemies[i].yReserve >> 3 > 0) {
      000E9D 41                    3643 	ld	b, c
      000E9E CB 28                 3644 	sra	b
      000EA0 CB 28                 3645 	sra	b
      000EA2 CB 28                 3646 	sra	b
      000EA4 58                    3647 	ld	e, b
      000EA5 AF                    3648 	xor	a, a
      000EA6 57                    3649 	ld	d, a
      000EA7 90                    3650 	sub	a, b
      000EA8 CB 7B                 3651 	bit	7, e
      000EAA 28 07                 3652 	jr	Z, 00317$
      000EAC CB 7A                 3653 	bit	7, d
      000EAE 20 08                 3654 	jr	NZ, 00318$
      000EB0 BF                    3655 	cp	a, a
      000EB1 18 05                 3656 	jr	00318$
      000EB3                       3657 00317$:
      000EB3 CB 7A                 3658 	bit	7, d
      000EB5 28 01                 3659 	jr	Z, 00318$
      000EB7 37                    3660 	scf
      000EB8                       3661 00318$:
      000EB8 30 3A                 3662 	jr	NC, 00117$
                                   3663 ;main.c:381: int8_t yMovement = enemies[i].yReserve >> 3;
      000EBA F8 0E                 3664 	ldhl	sp,	#14
      000EBC 70                    3665 	ld	(hl), b
                                   3666 ;main.c:382: enemies[i].y += yMovement;
      000EBD F8 06                 3667 	ldhl	sp,#6
      000EBF 2A                    3668 	ld	a, (hl+)
      000EC0 5F                    3669 	ld	e, a
      000EC1 56                    3670 	ld	d, (hl)
      000EC2 1A                    3671 	ld	a, (de)
      000EC3 4F                    3672 	ld	c, a
      000EC4 13                    3673 	inc	de
      000EC5 1A                    3674 	ld	a, (de)
      000EC6 47                    3675 	ld	b, a
      000EC7 F8 0E                 3676 	ldhl	sp,	#14
      000EC9 7E                    3677 	ld	a, (hl)
      000ECA 5F                    3678 	ld	e, a
      000ECB 07                    3679 	rlca
      000ECC 9F                    3680 	sbc	a, a
      000ECD 57                    3681 	ld	d, a
      000ECE 69                    3682 	ld	l, c
                                   3683 ;	spillPairReg hl
                                   3684 ;	spillPairReg hl
      000ECF 60                    3685 	ld	h, b
                                   3686 ;	spillPairReg hl
                                   3687 ;	spillPairReg hl
      000ED0 19                    3688 	add	hl, de
      000ED1 4D                    3689 	ld	c, l
      000ED2 44                    3690 	ld	b, h
      000ED3 F8 06                 3691 	ldhl	sp,	#6
      000ED5 2A                    3692 	ld	a,	(hl+)
      000ED6 66                    3693 	ld	h, (hl)
      000ED7 6F                    3694 	ld	l, a
      000ED8 79                    3695 	ld	a, c
      000ED9 22                    3696 	ld	(hl+), a
      000EDA 70                    3697 	ld	(hl), b
                                   3698 ;main.c:383: enemies[i].yReserve -=  yMovement << 3;
      000EDB F8 0A                 3699 	ldhl	sp,#10
      000EDD 2A                    3700 	ld	a, (hl+)
      000EDE 5F                    3701 	ld	e, a
      000EDF 56                    3702 	ld	d, (hl)
      000EE0 1A                    3703 	ld	a, (de)
      000EE1 F5                    3704 	push	af
      000EE2 F8 10                 3705 	ldhl	sp,	#16
      000EE4 7E                    3706 	ld	a, (hl)
      000EE5 87                    3707 	add	a, a
      000EE6 87                    3708 	add	a, a
      000EE7 87                    3709 	add	a, a
      000EE8 4F                    3710 	ld	c, a
      000EE9 F1                    3711 	pop	af
      000EEA 91                    3712 	sub	a, c
      000EEB 4F                    3713 	ld	c, a
      000EEC F8 0A                 3714 	ldhl	sp,	#10
      000EEE 2A                    3715 	ld	a,	(hl+)
      000EEF 66                    3716 	ld	h, (hl)
      000EF0 6F                    3717 	ld	l, a
      000EF1 71                    3718 	ld	(hl), c
      000EF2 18 67                 3719 	jr	00119$
      000EF4                       3720 00117$:
                                   3721 ;main.c:385: else if ((-enemies[i].yReserve) >> 3 > 0){
      000EF4 79                    3722 	ld	a, c
      000EF5 07                    3723 	rlca
      000EF6 9F                    3724 	sbc	a, a
      000EF7 47                    3725 	ld	b, a
      000EF8 AF                    3726 	xor	a, a
      000EF9 91                    3727 	sub	a, c
      000EFA 4F                    3728 	ld	c, a
      000EFB 9F                    3729 	sbc	a, a
      000EFC 90                    3730 	sub	a, b
      000EFD 47                    3731 	ld	b, a
      000EFE CB 28                 3732 	sra	b
      000F00 CB 19                 3733 	rr	c
      000F02 CB 28                 3734 	sra	b
      000F04 CB 19                 3735 	rr	c
      000F06 CB 28                 3736 	sra	b
      000F08 CB 19                 3737 	rr	c
      000F0A 58                    3738 	ld	e, b
      000F0B AF                    3739 	xor	a, a
      000F0C 57                    3740 	ld	d, a
      000F0D B9                    3741 	cp	a, c
      000F0E 98                    3742 	sbc	a, b
      000F0F CB 7B                 3743 	bit	7, e
      000F11 28 07                 3744 	jr	Z, 00319$
      000F13 CB 7A                 3745 	bit	7, d
      000F15 20 08                 3746 	jr	NZ, 00320$
      000F17 BF                    3747 	cp	a, a
      000F18 18 05                 3748 	jr	00320$
      000F1A                       3749 00319$:
      000F1A CB 7A                 3750 	bit	7, d
      000F1C 28 01                 3751 	jr	Z, 00320$
      000F1E 37                    3752 	scf
      000F1F                       3753 00320$:
      000F1F 30 3A                 3754 	jr	NC, 00119$
                                   3755 ;main.c:386: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      000F21 AF                    3756 	xor	a, a
      000F22 91                    3757 	sub	a, c
      000F23 4F                    3758 	ld	c, a
      000F24 F8 0E                 3759 	ldhl	sp,	#14
      000F26 71                    3760 	ld	(hl), c
                                   3761 ;main.c:387: enemies[i].y += yMovement;
      000F27 F8 06                 3762 	ldhl	sp,#6
      000F29 2A                    3763 	ld	a, (hl+)
      000F2A 5F                    3764 	ld	e, a
      000F2B 56                    3765 	ld	d, (hl)
      000F2C 1A                    3766 	ld	a, (de)
      000F2D 4F                    3767 	ld	c, a
      000F2E 13                    3768 	inc	de
      000F2F 1A                    3769 	ld	a, (de)
      000F30 47                    3770 	ld	b, a
      000F31 F8 0E                 3771 	ldhl	sp,	#14
      000F33 7E                    3772 	ld	a, (hl)
      000F34 5F                    3773 	ld	e, a
      000F35 07                    3774 	rlca
      000F36 9F                    3775 	sbc	a, a
      000F37 57                    3776 	ld	d, a
      000F38 69                    3777 	ld	l, c
      000F39 60                    3778 	ld	h, b
      000F3A 19                    3779 	add	hl, de
      000F3B 4D                    3780 	ld	c, l
      000F3C 44                    3781 	ld	b, h
      000F3D F8 06                 3782 	ldhl	sp,	#6
      000F3F 2A                    3783 	ld	a,	(hl+)
      000F40 66                    3784 	ld	h, (hl)
      000F41 6F                    3785 	ld	l, a
      000F42 79                    3786 	ld	a, c
      000F43 22                    3787 	ld	(hl+), a
      000F44 70                    3788 	ld	(hl), b
                                   3789 ;main.c:388: enemies[i].yReserve +=  (-yMovement) << 3;
      000F45 F8 0A                 3790 	ldhl	sp,#10
      000F47 2A                    3791 	ld	a, (hl+)
      000F48 5F                    3792 	ld	e, a
      000F49 56                    3793 	ld	d, (hl)
      000F4A 1A                    3794 	ld	a, (de)
      000F4B 4F                    3795 	ld	c, a
      000F4C AF                    3796 	xor	a, a
      000F4D F8 0E                 3797 	ldhl	sp,	#14
      000F4F 96                    3798 	sub	a, (hl)
      000F50 87                    3799 	add	a, a
      000F51 87                    3800 	add	a, a
      000F52 87                    3801 	add	a, a
      000F53 81                    3802 	add	a, c
      000F54 4F                    3803 	ld	c, a
      000F55 F8 0A                 3804 	ldhl	sp,	#10
      000F57 2A                    3805 	ld	a,	(hl+)
      000F58 66                    3806 	ld	h, (hl)
      000F59 6F                    3807 	ld	l, a
      000F5A 71                    3808 	ld	(hl), c
      000F5B                       3809 00119$:
                                   3810 ;main.c:338: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000F5B F8 0F                 3811 	ldhl	sp,	#15
      000F5D 34                    3812 	inc	(hl)
      000F5E C3r89r0B              3813 	jp	00154$
      000F61                       3814 00120$:
                                   3815 ;main.c:399: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000F61 F8 0F                 3816 	ldhl	sp,	#15
      000F63 36 00                 3817 	ld	(hl), #0x00
      000F65                       3818 00156$:
      000F65 21r8Cr07              3819 	ld	hl, #_ENEMYCOUNT
      000F68 4E                    3820 	ld	c, (hl)
      000F69 F8 0F                 3821 	ldhl	sp,	#15
      000F6B 7E                    3822 	ld	a, (hl)
      000F6C 91                    3823 	sub	a, c
      000F6D D2rF5r11              3824 	jp	NC, 00158$
                                   3825 ;main.c:401: if (enemies[i].alive) {
      000F70 7E                    3826 	ld	a, (hl)
      000F71 16 00                 3827 	ld	d, #0x00
      000F73 87                    3828 	add	a, a
      000F74 CB 12                 3829 	rl	d
      000F76 87                    3830 	add	a, a
      000F77 CB 12                 3831 	rl	d
      000F79 87                    3832 	add	a, a
      000F7A CB 12                 3833 	rl	d
      000F7C 87                    3834 	add	a, a
      000F7D CB 12                 3835 	rl	d
      000F7F 5F                    3836 	ld	e, a
      000F80 21r00r00              3837 	ld	hl, #_enemies
      000F83 19                    3838 	add	hl, de
      000F84 E5                    3839 	push	hl
      000F85 7D                    3840 	ld	a, l
      000F86 F8 07                 3841 	ldhl	sp,	#7
      000F88 77                    3842 	ld	(hl), a
      000F89 E1                    3843 	pop	hl
      000F8A 7C                    3844 	ld	a, h
      000F8B F8 06                 3845 	ldhl	sp,	#6
      000F8D 32                    3846 	ld	(hl-), a
      000F8E 2A                    3847 	ld	a, (hl+)
      000F8F 5F                    3848 	ld	e, a
      000F90 56                    3849 	ld	d, (hl)
      000F91 21 09 00              3850 	ld	hl, #0x0009
      000F94 19                    3851 	add	hl, de
      000F95 4D                    3852 	ld	c, l
      000F96 44                    3853 	ld	b, h
      000F97 0A                    3854 	ld	a, (bc)
      000F98 B7                    3855 	or	a, a
      000F99 CArFCr10              3856 	jp	Z, 00137$
                                   3857 ;main.c:402: if (enemies[i].visible == 1) {
      000F9C F8 05                 3858 	ldhl	sp,#5
      000F9E 2A                    3859 	ld	a, (hl+)
      000F9F 5F                    3860 	ld	e, a
      000FA0 56                    3861 	ld	d, (hl)
      000FA1 21 0A 00              3862 	ld	hl, #0x000a
      000FA4 19                    3863 	add	hl, de
      000FA5 4D                    3864 	ld	c, l
      000FA6 44                    3865 	ld	b, h
      000FA7 0A                    3866 	ld	a, (bc)
      000FA8 F8 07                 3867 	ldhl	sp,	#7
                                   3868 ;main.c:403: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000FAA 32                    3869 	ld	(hl-), a
      000FAB 2B                    3870 	dec	hl
      000FAC 2A                    3871 	ld	a, (hl+)
      000FAD 5F                    3872 	ld	e, a
      000FAE 56                    3873 	ld	d, (hl)
      000FAF 1A                    3874 	ld	a, (de)
      000FB0 F8 0D                 3875 	ldhl	sp,	#13
      000FB2 22                    3876 	ld	(hl+), a
      000FB3 13                    3877 	inc	de
      000FB4 1A                    3878 	ld	a, (de)
      000FB5 77                    3879 	ld	(hl), a
      000FB6 F8 05                 3880 	ldhl	sp,#5
      000FB8 2A                    3881 	ld	a, (hl+)
      000FB9 5F                    3882 	ld	e, a
      000FBA 56                    3883 	ld	d, (hl)
      000FBB 21 02 00              3884 	ld	hl, #0x0002
      000FBE 19                    3885 	add	hl, de
      000FBF E5                    3886 	push	hl
      000FC0 7D                    3887 	ld	a, l
      000FC1 F8 0A                 3888 	ldhl	sp,	#10
      000FC3 77                    3889 	ld	(hl), a
      000FC4 E1                    3890 	pop	hl
      000FC5 7C                    3891 	ld	a, h
      000FC6 F8 09                 3892 	ldhl	sp,	#9
      000FC8 77                    3893 	ld	(hl), a
                                   3894 ;main.c:405: set_sprite_tile(10+(i<<1), 0x7f);
      000FC9 F8 0F                 3895 	ldhl	sp,	#15
                                   3896 ;main.c:403: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000FCB 3A                    3897 	ld	a, (hl-)
      000FCC 2B                    3898 	dec	hl
      000FCD 5F                    3899 	ld	e, a
      000FCE 7E                    3900 	ld	a, (hl)
      000FCF F8 0A                 3901 	ldhl	sp,	#10
      000FD1 77                    3902 	ld	(hl), a
      000FD2 F8 0E                 3903 	ldhl	sp,	#14
      000FD4 7E                    3904 	ld	a, (hl)
      000FD5 F8 0B                 3905 	ldhl	sp,	#11
                                   3906 ;main.c:405: set_sprite_tile(10+(i<<1), 0x7f);
      000FD7 22                    3907 	ld	(hl+), a
      000FD8 7B                    3908 	ld	a, e
      000FD9 87                    3909 	add	a, a
                                   3910 ;main.c:403: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000FDA 32                    3911 	ld	(hl-), a
      000FDB 2A                    3912 	ld	a, (hl+)
      000FDC 23                    3913 	inc	hl
      000FDD 07                    3914 	rlca
      000FDE E6 01                 3915 	and	a,#0x01
                                   3916 ;main.c:405: set_sprite_tile(10+(i<<1), 0x7f);
      000FE0 32                    3917 	ld	(hl-), a
      000FE1 2A                    3918 	ld	a, (hl+)
      000FE2 23                    3919 	inc	hl
      000FE3 C6 0A                 3920 	add	a, #0x0a
      000FE5 77                    3921 	ld	(hl), a
                                   3922 ;main.c:402: if (enemies[i].visible == 1) {
      000FE6 F8 07                 3923 	ldhl	sp,	#7
      000FE8 7E                    3924 	ld	a, (hl)
      000FE9 3D                    3925 	dec	a
      000FEA 20 74                 3926 	jr	NZ, 00134$
                                   3927 ;main.c:403: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000FEC F8 0D                 3928 	ldhl	sp,	#13
      000FEE 7E                    3929 	ld	a, (hl)
      000FEF B7                    3930 	or	a, a
      000FF0 20 48                 3931 	jr	NZ, 00121$
      000FF2 F8 0A                 3932 	ldhl	sp,	#10
      000FF4 3E AC                 3933 	ld	a, #0xac
      000FF6 96                    3934 	sub	a, (hl)
      000FF7 23                    3935 	inc	hl
      000FF8 3E 00                 3936 	ld	a, #0x00
      000FFA 9E                    3937 	sbc	a, (hl)
      000FFB 3E 00                 3938 	ld	a, #0x00
      000FFD 57                    3939 	ld	d, a
      000FFE CB 7E                 3940 	bit	7, (hl)
      001000 28 07                 3941 	jr	Z, 00324$
      001002 CB 7A                 3942 	bit	7, d
      001004 20 08                 3943 	jr	NZ, 00325$
      001006 BF                    3944 	cp	a, a
      001007 18 05                 3945 	jr	00325$
      001009                       3946 00324$:
      001009 CB 7A                 3947 	bit	7, d
      00100B 28 01                 3948 	jr	Z, 00325$
      00100D 37                    3949 	scf
      00100E                       3950 00325$:
      00100E 38 2A                 3951 	jr	C, 00121$
      001010 F8 08                 3952 	ldhl	sp,#8
      001012 2A                    3953 	ld	a, (hl+)
      001013 5F                    3954 	ld	e, a
      001014 56                    3955 	ld	d, (hl)
      001015 1A                    3956 	ld	a, (de)
      001016 6F                    3957 	ld	l, a
                                   3958 ;	spillPairReg hl
                                   3959 ;	spillPairReg hl
      001017 13                    3960 	inc	de
      001018 1A                    3961 	ld	a, (de)
      001019 67                    3962 	ld	h, a
                                   3963 ;	spillPairReg hl
                                   3964 ;	spillPairReg hl
      00101A CB 7C                 3965 	bit	7, h
      00101C 20 1C                 3966 	jr	NZ, 00121$
      00101E 5C                    3967 	ld	e, h
      00101F 16 00                 3968 	ld	d, #0x00
      001021 3E 98                 3969 	ld	a, #0x98
      001023 BD                    3970 	cp	a, l
      001024 3E 00                 3971 	ld	a, #0x00
      001026 9C                    3972 	sbc	a, h
      001027 CB 7B                 3973 	bit	7, e
      001029 28 07                 3974 	jr	Z, 00326$
      00102B CB 7A                 3975 	bit	7, d
      00102D 20 08                 3976 	jr	NZ, 00327$
      00102F BF                    3977 	cp	a, a
      001030 18 05                 3978 	jr	00327$
      001032                       3979 00326$:
      001032 CB 7A                 3980 	bit	7, d
      001034 28 01                 3981 	jr	Z, 00327$
      001036 37                    3982 	scf
      001037                       3983 00327$:
      001037 D2rFCr10              3984 	jp	NC, 00137$
      00103A                       3985 00121$:
                                   3986 ;main.c:404: enemies[i].visible = 0;
      00103A AF                    3987 	xor	a, a
      00103B 02                    3988 	ld	(bc), a
                                   3989 ;main.c:405: set_sprite_tile(10+(i<<1), 0x7f);
      00103C F8 0E                 3990 	ldhl	sp,	#14
                                   3991 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00103E 6E                    3992 	ld	l, (hl)
      00103F 01r00r00              3993 	ld	bc, #_shadow_OAM+0
                                   3994 ;	spillPairReg hl
                                   3995 ;	spillPairReg hl
      001042 26 00                 3996 	ld	h, #0x00
                                   3997 ;	spillPairReg hl
                                   3998 ;	spillPairReg hl
      001044 29                    3999 	add	hl, hl
      001045 29                    4000 	add	hl, hl
      001046 09                    4001 	add	hl, bc
      001047 23                    4002 	inc	hl
      001048 23                    4003 	inc	hl
      001049 36 7F                 4004 	ld	(hl), #0x7f
                                   4005 ;main.c:406: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00104B F8 0C                 4006 	ldhl	sp,	#12
      00104D 7E                    4007 	ld	a, (hl)
      00104E C6 0B                 4008 	add	a, #0x0b
                                   4009 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001050 6F                    4010 	ld	l, a
      001051 01r00r00              4011 	ld	bc, #_shadow_OAM+0
                                   4012 ;	spillPairReg hl
                                   4013 ;	spillPairReg hl
      001054 26 00                 4014 	ld	h, #0x00
                                   4015 ;	spillPairReg hl
                                   4016 ;	spillPairReg hl
      001056 29                    4017 	add	hl, hl
      001057 29                    4018 	add	hl, hl
      001058 09                    4019 	add	hl, bc
      001059 23                    4020 	inc	hl
      00105A 23                    4021 	inc	hl
      00105B 36 7F                 4022 	ld	(hl), #0x7f
                                   4023 ;main.c:406: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00105D C3rFCr10              4024 	jp	00137$
      001060                       4025 00134$:
                                   4026 ;main.c:411: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      001060 F8 0D                 4027 	ldhl	sp,	#13
      001062 CB 46                 4028 	bit	0, (hl)
      001064 C2rFCr10              4029 	jp	NZ, 00137$
      001067 F8 0A                 4030 	ldhl	sp,	#10
      001069 2A                    4031 	ld	a, (hl+)
      00106A D6 AC                 4032 	sub	a, #0xac
      00106C 7E                    4033 	ld	a, (hl)
      00106D DE 00                 4034 	sbc	a, #0x00
      00106F 56                    4035 	ld	d, (hl)
      001070 3E 00                 4036 	ld	a, #0x00
      001072 CB 7F                 4037 	bit	7,a
      001074 28 07                 4038 	jr	Z, 00328$
      001076 CB 7A                 4039 	bit	7, d
      001078 20 08                 4040 	jr	NZ, 00329$
      00107A BF                    4041 	cp	a, a
      00107B 18 05                 4042 	jr	00329$
      00107D                       4043 00328$:
      00107D CB 7A                 4044 	bit	7, d
      00107F 28 01                 4045 	jr	Z, 00329$
      001081 37                    4046 	scf
      001082                       4047 00329$:
      001082 30 78                 4048 	jr	NC, 00137$
      001084 F8 08                 4049 	ldhl	sp,#8
      001086 2A                    4050 	ld	a, (hl+)
      001087 5F                    4051 	ld	e, a
      001088 56                    4052 	ld	d, (hl)
      001089 1A                    4053 	ld	a, (de)
      00108A 6F                    4054 	ld	l, a
                                   4055 ;	spillPairReg hl
                                   4056 ;	spillPairReg hl
      00108B 13                    4057 	inc	de
      00108C 1A                    4058 	ld	a, (de)
      00108D 67                    4059 	ld	h, a
                                   4060 ;	spillPairReg hl
                                   4061 ;	spillPairReg hl
      00108E 5C                    4062 	ld	e, h
      00108F AF                    4063 	xor	a, a
      001090 57                    4064 	ld	d, a
      001091 BD                    4065 	cp	a, l
      001092 9C                    4066 	sbc	a, h
      001093 CB 7B                 4067 	bit	7, e
      001095 28 07                 4068 	jr	Z, 00330$
      001097 CB 7A                 4069 	bit	7, d
      001099 20 08                 4070 	jr	NZ, 00331$
      00109B BF                    4071 	cp	a, a
      00109C 18 05                 4072 	jr	00331$
      00109E                       4073 00330$:
      00109E CB 7A                 4074 	bit	7, d
      0010A0 28 01                 4075 	jr	Z, 00331$
      0010A2 37                    4076 	scf
      0010A3                       4077 00331$:
      0010A3 30 57                 4078 	jr	NC, 00137$
      0010A5 7D                    4079 	ld	a, l
      0010A6 D6 98                 4080 	sub	a, #0x98
      0010A8 7C                    4081 	ld	a, h
      0010A9 17                    4082 	rla
      0010AA 3F                    4083 	ccf
      0010AB 1F                    4084 	rra
      0010AC DE 80                 4085 	sbc	a, #0x80
      0010AE 30 4C                 4086 	jr	NC, 00137$
                                   4087 ;main.c:412: enemies[i].visible = 1;
      0010B0 3E 01                 4088 	ld	a, #0x01
      0010B2 02                    4089 	ld	(bc), a
                                   4090 ;main.c:413: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      0010B3 F8 05                 4091 	ldhl	sp,#5
      0010B5 2A                    4092 	ld	a, (hl+)
      0010B6 5F                    4093 	ld	e, a
      0010B7 56                    4094 	ld	d, (hl)
      0010B8 21 06 00              4095 	ld	hl, #0x0006
      0010BB 19                    4096 	add	hl, de
      0010BC 4D                    4097 	ld	c, l
      0010BD 44                    4098 	ld	b, h
      0010BE 0A                    4099 	ld	a, (bc)
      0010BF 4F                    4100 	ld	c, a
      0010C0 F8 0E                 4101 	ldhl	sp,	#14
                                   4102 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010C2 6E                    4103 	ld	l, (hl)
                                   4104 ;	spillPairReg hl
                                   4105 ;	spillPairReg hl
      0010C3 26 00                 4106 	ld	h, #0x00
                                   4107 ;	spillPairReg hl
                                   4108 ;	spillPairReg hl
      0010C5 29                    4109 	add	hl, hl
      0010C6 29                    4110 	add	hl, hl
      0010C7 11r00r00              4111 	ld	de, #_shadow_OAM
      0010CA 19                    4112 	add	hl, de
      0010CB 23                    4113 	inc	hl
      0010CC 23                    4114 	inc	hl
      0010CD 71                    4115 	ld	(hl), c
                                   4116 ;main.c:414: if (enemies[i].spriteCount == 2) {
      0010CE F8 05                 4117 	ldhl	sp,#5
      0010D0 2A                    4118 	ld	a, (hl+)
      0010D1 5F                    4119 	ld	e, a
      0010D2 56                    4120 	ld	d, (hl)
      0010D3 21 08 00              4121 	ld	hl, #0x0008
      0010D6 19                    4122 	add	hl, de
      0010D7 4D                    4123 	ld	c, l
      0010D8 44                    4124 	ld	b, h
      0010D9 0A                    4125 	ld	a, (bc)
      0010DA D6 02                 4126 	sub	a, #0x02
      0010DC 20 1E                 4127 	jr	NZ, 00137$
                                   4128 ;main.c:415: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0010DE F8 05                 4129 	ldhl	sp,#5
      0010E0 2A                    4130 	ld	a, (hl+)
      0010E1 5F                    4131 	ld	e, a
      0010E2 56                    4132 	ld	d, (hl)
      0010E3 21 07 00              4133 	ld	hl, #0x0007
      0010E6 19                    4134 	add	hl, de
      0010E7 4D                    4135 	ld	c, l
      0010E8 44                    4136 	ld	b, h
      0010E9 0A                    4137 	ld	a, (bc)
      0010EA 4F                    4138 	ld	c, a
      0010EB F8 0C                 4139 	ldhl	sp,	#12
      0010ED 7E                    4140 	ld	a, (hl)
      0010EE C6 0B                 4141 	add	a, #0x0b
                                   4142 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010F0 6F                    4143 	ld	l, a
                                   4144 ;	spillPairReg hl
                                   4145 ;	spillPairReg hl
      0010F1 26 00                 4146 	ld	h, #0x00
                                   4147 ;	spillPairReg hl
                                   4148 ;	spillPairReg hl
      0010F3 29                    4149 	add	hl, hl
      0010F4 29                    4150 	add	hl, hl
      0010F5 11r00r00              4151 	ld	de, #_shadow_OAM
      0010F8 19                    4152 	add	hl, de
      0010F9 23                    4153 	inc	hl
      0010FA 23                    4154 	inc	hl
      0010FB 71                    4155 	ld	(hl), c
                                   4156 ;main.c:415: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0010FC                       4157 00137$:
                                   4158 ;main.c:422: if (enemies[i].spriteCount == 1) {
      0010FC F8 0F                 4159 	ldhl	sp,	#15
      0010FE 7E                    4160 	ld	a, (hl)
      0010FF 16 00                 4161 	ld	d, #0x00
      001101 87                    4162 	add	a, a
      001102 CB 12                 4163 	rl	d
      001104 87                    4164 	add	a, a
      001105 CB 12                 4165 	rl	d
      001107 87                    4166 	add	a, a
      001108 CB 12                 4167 	rl	d
      00110A 87                    4168 	add	a, a
      00110B CB 12                 4169 	rl	d
      00110D 5F                    4170 	ld	e, a
      00110E 21r00r00              4171 	ld	hl, #_enemies
      001111 19                    4172 	add	hl, de
      001112 E5                    4173 	push	hl
      001113 7D                    4174 	ld	a, l
      001114 F8 07                 4175 	ldhl	sp,	#7
      001116 77                    4176 	ld	(hl), a
      001117 E1                    4177 	pop	hl
      001118 7C                    4178 	ld	a, h
      001119 F8 06                 4179 	ldhl	sp,	#6
      00111B 32                    4180 	ld	(hl-), a
      00111C 2A                    4181 	ld	a, (hl+)
      00111D 5F                    4182 	ld	e, a
      00111E 56                    4183 	ld	d, (hl)
      00111F 21 08 00              4184 	ld	hl, #0x0008
      001122 19                    4185 	add	hl, de
      001123 4D                    4186 	ld	c, l
      001124 44                    4187 	ld	b, h
      001125 0A                    4188 	ld	a, (bc)
      001126 4F                    4189 	ld	c, a
                                   4190 ;main.c:405: set_sprite_tile(10+(i<<1), 0x7f);
      001127 F8 0F                 4191 	ldhl	sp,	#15
      001129 46                    4192 	ld	b, (hl)
                                   4193 ;main.c:423: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      00112A F8 05                 4194 	ldhl	sp,#5
      00112C 2A                    4195 	ld	a, (hl+)
      00112D 5F                    4196 	ld	e, a
      00112E 56                    4197 	ld	d, (hl)
      00112F 21 02 00              4198 	ld	hl, #0x0002
      001132 19                    4199 	add	hl, de
      001133 E5                    4200 	push	hl
      001134 7D                    4201 	ld	a, l
      001135 F8 09                 4202 	ldhl	sp,	#9
      001137 77                    4203 	ld	(hl), a
      001138 E1                    4204 	pop	hl
      001139 7C                    4205 	ld	a, h
      00113A F8 08                 4206 	ldhl	sp,	#8
      00113C 32                    4207 	ld	(hl-), a
      00113D 2B                    4208 	dec	hl
      00113E 2B                    4209 	dec	hl
      00113F 2A                    4210 	ld	a, (hl+)
      001140 5F                    4211 	ld	e, a
      001141 56                    4212 	ld	d, (hl)
      001142 1A                    4213 	ld	a, (de)
      001143 F8 09                 4214 	ldhl	sp,	#9
      001145 22                    4215 	ld	(hl+), a
      001146 13                    4216 	inc	de
      001147 1A                    4217 	ld	a, (de)
                                   4218 ;main.c:427: move_sprite(10+ (i<<1), enemies[i].x, enemies[i].y);
      001148 32                    4219 	ld	(hl-), a
      001149 2B                    4220 	dec	hl
      00114A 2B                    4221 	dec	hl
      00114B 2A                    4222 	ld	a, (hl+)
      00114C 5F                    4223 	ld	e, a
      00114D 56                    4224 	ld	d, (hl)
      00114E 1A                    4225 	ld	a, (de)
      00114F F8 0B                 4226 	ldhl	sp,	#11
      001151 22                    4227 	ld	(hl+), a
      001152 13                    4228 	inc	de
      001153 1A                    4229 	ld	a, (de)
                                   4230 ;main.c:405: set_sprite_tile(10+(i<<1), 0x7f);
      001154 22                    4231 	ld	(hl+), a
      001155 78                    4232 	ld	a, b
      001156 87                    4233 	add	a, a
      001157 77                    4234 	ld	(hl), a
      001158 2A                    4235 	ld	a, (hl+)
      001159 C6 0A                 4236 	add	a, #0x0a
      00115B 77                    4237 	ld	(hl), a
                                   4238 ;main.c:422: if (enemies[i].spriteCount == 1) {
      00115C 0D                    4239 	dec	c
      00115D 20 1B                 4240 	jr	NZ, 00139$
                                   4241 ;main.c:423: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      00115F F8 0B                 4242 	ldhl	sp,	#11
      001161 3A                    4243 	ld	a, (hl-)
      001162 2B                    4244 	dec	hl
      001163 C6 0C                 4245 	add	a, #0x0c
      001165 47                    4246 	ld	b, a
      001166 7E                    4247 	ld	a, (hl)
      001167 C6 04                 4248 	add	a, #0x04
      001169 4F                    4249 	ld	c, a
      00116A F8 0E                 4250 	ldhl	sp,	#14
                                   4251 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00116C 6E                    4252 	ld	l, (hl)
                                   4253 ;	spillPairReg hl
                                   4254 ;	spillPairReg hl
      00116D 26 00                 4255 	ld	h, #0x00
                                   4256 ;	spillPairReg hl
                                   4257 ;	spillPairReg hl
      00116F 29                    4258 	add	hl, hl
      001170 29                    4259 	add	hl, hl
      001171 11r00r00              4260 	ld	de, #_shadow_OAM
      001174 19                    4261 	add	hl, de
                                   4262 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001175 78                    4263 	ld	a, b
      001176 22                    4264 	ld	(hl+), a
      001177 71                    4265 	ld	(hl), c
                                   4266 ;main.c:423: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      001178 18 75                 4267 	jr	00157$
      00117A                       4268 00139$:
                                   4269 ;main.c:427: move_sprite(10+ (i<<1), enemies[i].x, enemies[i].y);
      00117A F8 0B                 4270 	ldhl	sp,	#11
      00117C 3A                    4271 	ld	a, (hl-)
      00117D 2B                    4272 	dec	hl
      00117E 47                    4273 	ld	b, a
      00117F 4E                    4274 	ld	c, (hl)
      001180 F8 0E                 4275 	ldhl	sp,	#14
                                   4276 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001182 6E                    4277 	ld	l, (hl)
                                   4278 ;	spillPairReg hl
                                   4279 ;	spillPairReg hl
      001183 26 00                 4280 	ld	h, #0x00
                                   4281 ;	spillPairReg hl
                                   4282 ;	spillPairReg hl
      001185 29                    4283 	add	hl, hl
      001186 29                    4284 	add	hl, hl
      001187 11r00r00              4285 	ld	de, #_shadow_OAM
      00118A 19                    4286 	add	hl, de
                                   4287 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00118B 78                    4288 	ld	a, b
      00118C 22                    4289 	ld	(hl+), a
      00118D 71                    4290 	ld	(hl), c
                                   4291 ;main.c:428: move_sprite(10+ (i<<1) +1, enemies[i].x, enemies[i].y);
      00118E F8 07                 4292 	ldhl	sp,#7
      001190 2A                    4293 	ld	a, (hl+)
      001191 5F                    4294 	ld	e, a
      001192 3A                    4295 	ld	a, (hl-)
      001193 2B                    4296 	dec	hl
      001194 2B                    4297 	dec	hl
      001195 57                    4298 	ld	d, a
      001196 1A                    4299 	ld	a, (de)
      001197 47                    4300 	ld	b, a
      001198 2A                    4301 	ld	a, (hl+)
      001199 5F                    4302 	ld	e, a
      00119A 56                    4303 	ld	d, (hl)
      00119B 1A                    4304 	ld	a, (de)
      00119C 4F                    4305 	ld	c, a
      00119D F8 0D                 4306 	ldhl	sp,	#13
      00119F 7E                    4307 	ld	a, (hl)
      0011A0 C6 0B                 4308 	add	a, #0x0b
      0011A2 77                    4309 	ld	(hl), a
                                   4310 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0011A3 6E                    4311 	ld	l, (hl)
                                   4312 ;	spillPairReg hl
                                   4313 ;	spillPairReg hl
      0011A4 26 00                 4314 	ld	h, #0x00
                                   4315 ;	spillPairReg hl
                                   4316 ;	spillPairReg hl
      0011A6 29                    4317 	add	hl, hl
      0011A7 29                    4318 	add	hl, hl
      0011A8 11r00r00              4319 	ld	de, #_shadow_OAM
      0011AB 19                    4320 	add	hl, de
                                   4321 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0011AC 78                    4322 	ld	a, b
      0011AD 22                    4323 	ld	(hl+), a
      0011AE 71                    4324 	ld	(hl), c
                                   4325 ;main.c:430: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      0011AF F8 07                 4326 	ldhl	sp,#7
      0011B1 2A                    4327 	ld	a, (hl+)
      0011B2 5F                    4328 	ld	e, a
      0011B3 3A                    4329 	ld	a, (hl-)
      0011B4 2B                    4330 	dec	hl
      0011B5 2B                    4331 	dec	hl
      0011B6 57                    4332 	ld	d, a
      0011B7 1A                    4333 	ld	a, (de)
      0011B8 C6 08                 4334 	add	a, #0x08
      0011BA 47                    4335 	ld	b, a
      0011BB 2A                    4336 	ld	a, (hl+)
      0011BC 5F                    4337 	ld	e, a
      0011BD 56                    4338 	ld	d, (hl)
      0011BE 1A                    4339 	ld	a, (de)
      0011BF 4F                    4340 	ld	c, a
      0011C0 F8 0E                 4341 	ldhl	sp,	#14
                                   4342 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0011C2 6E                    4343 	ld	l, (hl)
                                   4344 ;	spillPairReg hl
                                   4345 ;	spillPairReg hl
      0011C3 26 00                 4346 	ld	h, #0x00
                                   4347 ;	spillPairReg hl
                                   4348 ;	spillPairReg hl
      0011C5 29                    4349 	add	hl, hl
      0011C6 29                    4350 	add	hl, hl
      0011C7 11r00r00              4351 	ld	de, #_shadow_OAM
      0011CA 19                    4352 	add	hl, de
                                   4353 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0011CB 78                    4354 	ld	a, b
      0011CC 22                    4355 	ld	(hl+), a
      0011CD 71                    4356 	ld	(hl), c
                                   4357 ;main.c:432: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      0011CE F8 07                 4358 	ldhl	sp,#7
      0011D0 2A                    4359 	ld	a, (hl+)
      0011D1 5F                    4360 	ld	e, a
      0011D2 3A                    4361 	ld	a, (hl-)
      0011D3 2B                    4362 	dec	hl
      0011D4 2B                    4363 	dec	hl
      0011D5 57                    4364 	ld	d, a
      0011D6 1A                    4365 	ld	a, (de)
      0011D7 C6 08                 4366 	add	a, #0x08
      0011D9 47                    4367 	ld	b, a
      0011DA 2A                    4368 	ld	a, (hl+)
      0011DB 5F                    4369 	ld	e, a
      0011DC 56                    4370 	ld	d, (hl)
      0011DD 1A                    4371 	ld	a, (de)
      0011DE C6 08                 4372 	add	a, #0x08
      0011E0 4F                    4373 	ld	c, a
      0011E1 F8 0D                 4374 	ldhl	sp,	#13
                                   4375 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0011E3 6E                    4376 	ld	l, (hl)
                                   4377 ;	spillPairReg hl
                                   4378 ;	spillPairReg hl
      0011E4 26 00                 4379 	ld	h, #0x00
                                   4380 ;	spillPairReg hl
                                   4381 ;	spillPairReg hl
      0011E6 29                    4382 	add	hl, hl
      0011E7 29                    4383 	add	hl, hl
      0011E8 11r00r00              4384 	ld	de, #_shadow_OAM
      0011EB 19                    4385 	add	hl, de
                                   4386 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0011EC 78                    4387 	ld	a, b
      0011ED 22                    4388 	ld	(hl+), a
      0011EE 71                    4389 	ld	(hl), c
                                   4390 ;main.c:432: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      0011EF                       4391 00157$:
                                   4392 ;main.c:399: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0011EF F8 0F                 4393 	ldhl	sp,	#15
      0011F1 34                    4394 	inc	(hl)
      0011F2 C3r65r0F              4395 	jp	00156$
      0011F5                       4396 00158$:
                                   4397 ;main.c:439: }
      0011F5 E8 10                 4398 	add	sp, #16
      0011F7 C9                    4399 	ret
                                   4400 ;main.c:441: void initEnemies(uint8_t loadSprites) {
                                   4401 ;	---------------------------------
                                   4402 ; Function initEnemies
                                   4403 ; ---------------------------------
      0011F8                       4404 _initEnemies::
      0011F8 E8 F9                 4405 	add	sp, #-7
                                   4406 ;main.c:443: if (loadSprites) {
      0011FA F8 09                 4407 	ldhl	sp,	#9
      0011FC 7E                    4408 	ld	a, (hl)
      0011FD B7                    4409 	or	a, a
      0011FE 28 1A                 4410 	jr	Z, 00124$
                                   4411 ;main.c:445: set_sprite_data(0x40, 1, enemy1);
      001200 11r17r05              4412 	ld	de, #_enemy1
      001203 D5                    4413 	push	de
      001204 21 40 01              4414 	ld	hl, #0x140
      001207 E5                    4415 	push	hl
      001208 CDr00r00              4416 	call	_set_sprite_data
      00120B E8 04                 4417 	add	sp, #4
                                   4418 ;main.c:448: set_sprite_data(0x50, 4, largeenemies);
      00120D 11r27r05              4419 	ld	de, #_largeenemies
      001210 D5                    4420 	push	de
      001211 21 50 04              4421 	ld	hl, #0x450
      001214 E5                    4422 	push	hl
      001215 CDr00r00              4423 	call	_set_sprite_data
      001218 E8 04                 4424 	add	sp, #4
                                   4425 ;main.c:455: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00121A                       4426 00124$:
      00121A 0E 00                 4427 	ld	c, #0x00
      00121C                       4428 00116$:
      00121C 21r8Cr07              4429 	ld	hl, #_ENEMYCOUNT
      00121F 46                    4430 	ld	b, (hl)
      001220 79                    4431 	ld	a, c
      001221 90                    4432 	sub	a, b
      001222 D2r5Cr13              4433 	jp	NC, 00118$
                                   4434 ;main.c:456: if (enemies[i].alive == 0) {
      001225 69                    4435 	ld	l, c
                                   4436 ;	spillPairReg hl
                                   4437 ;	spillPairReg hl
      001226 26 00                 4438 	ld	h, #0x00
                                   4439 ;	spillPairReg hl
                                   4440 ;	spillPairReg hl
      001228 29                    4441 	add	hl, hl
      001229 29                    4442 	add	hl, hl
      00122A 29                    4443 	add	hl, hl
      00122B 29                    4444 	add	hl, hl
      00122C 5D                    4445 	ld	e, l
      00122D 54                    4446 	ld	d, h
      00122E 21r00r00              4447 	ld	hl, #_enemies
      001231 19                    4448 	add	hl, de
      001232 33                    4449 	inc	sp
      001233 33                    4450 	inc	sp
      001234 5D                    4451 	ld	e, l
      001235 54                    4452 	ld	d, h
      001236 D5                    4453 	push	de
      001237 21 09 00              4454 	ld	hl, #0x0009
      00123A 19                    4455 	add	hl, de
      00123B 5D                    4456 	ld	e, l
      00123C 54                    4457 	ld	d, h
      00123D 1A                    4458 	ld	a, (de)
      00123E B7                    4459 	or	a, a
      00123F C2r58r13              4460 	jp	NZ, 00117$
                                   4461 ;main.c:458: enemies[i] = blob;
      001242 D1                    4462 	pop	de
      001243 D5                    4463 	push	de
      001244 C5                    4464 	push	bc
      001245 21 10 00              4465 	ld	hl, #0x0010
      001248 E5                    4466 	push	hl
      001249 21r10r00              4467 	ld	hl, #_blob
      00124C E5                    4468 	push	hl
      00124D D5                    4469 	push	de
      00124E CDr00r00              4470 	call	___memcpy
      001251 E8 06                 4471 	add	sp, #6
      001253 CDr00r00              4472 	call	_rand
      001256 7B                    4473 	ld	a, e
      001257 C1                    4474 	pop	bc
      001258 E6 07                 4475 	and	a, #0x07
                                   4476 ;main.c:462: enemies[i].x = xSpawnPositions[posIndex];
      00125A 47                    4477 	ld	b, a
      00125B C6r8D                 4478 	add	a,#<(_xSpawnPositions)
      00125D 5F                    4479 	ld	e, a
      00125E 3Es07                 4480 	ld	a, #>(_xSpawnPositions)
      001260 CE 00                 4481 	adc	a, #0x00
      001262 57                    4482 	ld	d, a
      001263 1A                    4483 	ld	a, (de)
      001264 F8 05                 4484 	ldhl	sp,	#5
      001266 22                    4485 	ld	(hl+), a
      001267 AF                    4486 	xor	a, a
      001268 32                    4487 	ld	(hl-), a
      001269 D1                    4488 	pop	de
      00126A D5                    4489 	push	de
      00126B 2A                    4490 	ld	a, (hl+)
      00126C 12                    4491 	ld	(de), a
      00126D 13                    4492 	inc	de
      00126E 7E                    4493 	ld	a, (hl)
      00126F 12                    4494 	ld	(de), a
                                   4495 ;main.c:463: enemies[i].y = ySpawnPositions[posIndex];
      001270 D1                    4496 	pop	de
      001271 D5                    4497 	push	de
      001272 21 02 00              4498 	ld	hl, #0x0002
      001275 19                    4499 	add	hl, de
      001276 E5                    4500 	push	hl
      001277 7D                    4501 	ld	a, l
      001278 F8 04                 4502 	ldhl	sp,	#4
      00127A 77                    4503 	ld	(hl), a
      00127B E1                    4504 	pop	hl
      00127C 7C                    4505 	ld	a, h
      00127D F8 03                 4506 	ldhl	sp,	#3
      00127F 22                    4507 	ld	(hl+), a
      001280 23                    4508 	inc	hl
      001281 78                    4509 	ld	a, b
      001282 C6r95                 4510 	add	a, #<(_ySpawnPositions)
      001284 5F                    4511 	ld	e, a
      001285 3E 00                 4512 	ld	a, #0x00
      001287 CEs07                 4513 	adc	a, #>(_ySpawnPositions)
      001289 57                    4514 	ld	d, a
      00128A 1A                    4515 	ld	a, (de)
      00128B 22                    4516 	ld	(hl+), a
      00128C 36 00                 4517 	ld	(hl), #0x00
      00128E F8 02                 4518 	ldhl	sp,#2
      001290 2A                    4519 	ld	a, (hl+)
      001291 5F                    4520 	ld	e, a
      001292 2A                    4521 	ld	a, (hl+)
      001293 23                    4522 	inc	hl
      001294 57                    4523 	ld	d, a
      001295 2A                    4524 	ld	a, (hl+)
      001296 12                    4525 	ld	(de), a
      001297 13                    4526 	inc	de
      001298 7E                    4527 	ld	a, (hl)
      001299 12                    4528 	ld	(de), a
                                   4529 ;main.c:465: if (enemies[i].spriteCount == 1) {
      00129A D1                    4530 	pop	de
      00129B D5                    4531 	push	de
      00129C 21 08 00              4532 	ld	hl, #0x0008
      00129F 19                    4533 	add	hl, de
      0012A0 5D                    4534 	ld	e, l
      0012A1 54                    4535 	ld	d, h
      0012A2 1A                    4536 	ld	a, (de)
      0012A3 47                    4537 	ld	b, a
                                   4538 ;main.c:466: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
      0012A4 D1                    4539 	pop	de
      0012A5 D5                    4540 	push	de
      0012A6 21 06 00              4541 	ld	hl, #0x0006
      0012A9 19                    4542 	add	hl, de
      0012AA 5D                    4543 	ld	e, l
      0012AB 54                    4544 	ld	d, h
      0012AC 69                    4545 	ld	l, c
                                   4546 ;	spillPairReg hl
                                   4547 ;	spillPairReg hl
      0012AD 1A                    4548 	ld	a, (de)
      0012AE 5F                    4549 	ld	e, a
      0012AF 7D                    4550 	ld	a, l
      0012B0 87                    4551 	add	a, a
      0012B1 F8 04                 4552 	ldhl	sp,	#4
      0012B3 77                    4553 	ld	(hl), a
      0012B4 2A                    4554 	ld	a, (hl+)
      0012B5 C6 0A                 4555 	add	a, #0x0a
      0012B7 77                    4556 	ld	(hl), a
                                   4557 ;main.c:465: if (enemies[i].spriteCount == 1) {
      0012B8 05                    4558 	dec	b
      0012B9 20 31                 4559 	jr	NZ, 00104$
                                   4560 ;main.c:466: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
      0012BB 43                    4561 	ld	b, e
                                   4562 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0012BC 6E                    4563 	ld	l, (hl)
                                   4564 ;	spillPairReg hl
                                   4565 ;	spillPairReg hl
      0012BD 26 00                 4566 	ld	h, #0x00
                                   4567 ;	spillPairReg hl
                                   4568 ;	spillPairReg hl
      0012BF 29                    4569 	add	hl, hl
      0012C0 29                    4570 	add	hl, hl
      0012C1 11r00r00              4571 	ld	de, #_shadow_OAM
      0012C4 19                    4572 	add	hl, de
      0012C5 23                    4573 	inc	hl
      0012C6 23                    4574 	inc	hl
      0012C7 70                    4575 	ld	(hl), b
                                   4576 ;main.c:467: move_sprite(10+ (i<<1), enemies[i].x, enemies[i].y);
      0012C8 F8 02                 4577 	ldhl	sp,#2
      0012CA 2A                    4578 	ld	a, (hl+)
      0012CB 5F                    4579 	ld	e, a
      0012CC 56                    4580 	ld	d, (hl)
      0012CD 1A                    4581 	ld	a, (de)
      0012CE F8 06                 4582 	ldhl	sp,	#6
      0012D0 32                    4583 	ld	(hl-), a
      0012D1 2B                    4584 	dec	hl
      0012D2 D1                    4585 	pop	de
      0012D3 D5                    4586 	push	de
      0012D4 1A                    4587 	ld	a, (de)
      0012D5 22                    4588 	ld	(hl+), a
      0012D6 46                    4589 	ld	b, (hl)
                                   4590 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0012D7 11r00r00              4591 	ld	de, #_shadow_OAM+0
      0012DA 26 00                 4592 	ld	h, #0x00
                                   4593 ;	spillPairReg hl
                                   4594 ;	spillPairReg hl
      0012DC 68                    4595 	ld	l, b
      0012DD 29                    4596 	add	hl, hl
      0012DE 29                    4597 	add	hl, hl
      0012DF 19                    4598 	add	hl, de
      0012E0 5D                    4599 	ld	e, l
      0012E1 54                    4600 	ld	d, h
                                   4601 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0012E2 F8 06                 4602 	ldhl	sp,	#6
      0012E4 3A                    4603 	ld	a, (hl-)
      0012E5 2B                    4604 	dec	hl
      0012E6 12                    4605 	ld	(de), a
      0012E7 13                    4606 	inc	de
      0012E8 7E                    4607 	ld	a, (hl)
      0012E9 12                    4608 	ld	(de), a
                                   4609 ;main.c:467: move_sprite(10+ (i<<1), enemies[i].x, enemies[i].y);
      0012EA 18 6C                 4610 	jr	00117$
      0012EC                       4611 00104$:
                                   4612 ;main.c:470: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
      0012EC 43                    4613 	ld	b, e
      0012ED F8 05                 4614 	ldhl	sp,	#5
      0012EF 5E                    4615 	ld	e, (hl)
                                   4616 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0012F0 26 00                 4617 	ld	h, #0x00
                                   4618 ;	spillPairReg hl
                                   4619 ;	spillPairReg hl
      0012F2 6B                    4620 	ld	l, e
      0012F3 29                    4621 	add	hl, hl
      0012F4 29                    4622 	add	hl, hl
      0012F5 11r00r00              4623 	ld	de, #_shadow_OAM
      0012F8 19                    4624 	add	hl, de
      0012F9 23                    4625 	inc	hl
      0012FA 23                    4626 	inc	hl
      0012FB 70                    4627 	ld	(hl), b
                                   4628 ;main.c:471: move_sprite(10+ (i<<1), enemies[i].x, enemies[i].y);
      0012FC F8 02                 4629 	ldhl	sp,#2
      0012FE 2A                    4630 	ld	a, (hl+)
      0012FF 5F                    4631 	ld	e, a
      001300 56                    4632 	ld	d, (hl)
      001301 1A                    4633 	ld	a, (de)
      001302 47                    4634 	ld	b, a
      001303 D1                    4635 	pop	de
      001304 D5                    4636 	push	de
      001305 1A                    4637 	ld	a, (de)
      001306 F8 06                 4638 	ldhl	sp,	#6
      001308 32                    4639 	ld	(hl-), a
                                   4640 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001309 6E                    4641 	ld	l, (hl)
                                   4642 ;	spillPairReg hl
                                   4643 ;	spillPairReg hl
      00130A 26 00                 4644 	ld	h, #0x00
                                   4645 ;	spillPairReg hl
                                   4646 ;	spillPairReg hl
      00130C 29                    4647 	add	hl, hl
      00130D 29                    4648 	add	hl, hl
      00130E 11r00r00              4649 	ld	de, #_shadow_OAM
      001311 19                    4650 	add	hl, de
                                   4651 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001312 78                    4652 	ld	a, b
      001313 22                    4653 	ld	(hl+), a
      001314 5D                    4654 	ld	e, l
      001315 54                    4655 	ld	d, h
      001316 F8 06                 4656 	ldhl	sp,	#6
      001318 7E                    4657 	ld	a, (hl)
      001319 12                    4658 	ld	(de), a
                                   4659 ;main.c:473: set_sprite_tile(10+ (i<<1) +1, enemies[i].sprite1);
      00131A D1                    4660 	pop	de
      00131B D5                    4661 	push	de
      00131C 21 07 00              4662 	ld	hl, #0x0007
      00131F 19                    4663 	add	hl, de
      001320 5D                    4664 	ld	e, l
      001321 54                    4665 	ld	d, h
      001322 1A                    4666 	ld	a, (de)
      001323 5F                    4667 	ld	e, a
      001324 F8 04                 4668 	ldhl	sp,	#4
      001326 7E                    4669 	ld	a, (hl)
      001327 C6 0B                 4670 	add	a, #0x0b
      001329 47                    4671 	ld	b, a
      00132A 50                    4672 	ld	d, b
                                   4673 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00132B 6A                    4674 	ld	l, d
                                   4675 ;	spillPairReg hl
                                   4676 ;	spillPairReg hl
      00132C 26 00                 4677 	ld	h, #0x00
                                   4678 ;	spillPairReg hl
                                   4679 ;	spillPairReg hl
      00132E 29                    4680 	add	hl, hl
      00132F 29                    4681 	add	hl, hl
      001330 D5                    4682 	push	de
      001331 11r00r00              4683 	ld	de, #_shadow_OAM
      001334 19                    4684 	add	hl, de
      001335 23                    4685 	inc	hl
      001336 23                    4686 	inc	hl
      001337 D1                    4687 	pop	de
      001338 73                    4688 	ld	(hl), e
                                   4689 ;main.c:474: move_sprite(10+ (i<<1) +1, enemies[i].x, enemies[i].y);
      001339 F8 02                 4690 	ldhl	sp,#2
      00133B 2A                    4691 	ld	a, (hl+)
      00133C 5F                    4692 	ld	e, a
      00133D 56                    4693 	ld	d, (hl)
      00133E 1A                    4694 	ld	a, (de)
      00133F F8 06                 4695 	ldhl	sp,	#6
      001341 32                    4696 	ld	(hl-), a
      001342 D1                    4697 	pop	de
      001343 D5                    4698 	push	de
      001344 1A                    4699 	ld	a, (de)
      001345 77                    4700 	ld	(hl), a
                                   4701 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001346 26 00                 4702 	ld	h, #0x00
                                   4703 ;	spillPairReg hl
                                   4704 ;	spillPairReg hl
      001348 68                    4705 	ld	l, b
      001349 29                    4706 	add	hl, hl
      00134A 29                    4707 	add	hl, hl
      00134B 11r00r00              4708 	ld	de, #_shadow_OAM
      00134E 19                    4709 	add	hl, de
      00134F 5D                    4710 	ld	e, l
      001350 54                    4711 	ld	d, h
                                   4712 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001351 F8 06                 4713 	ldhl	sp,	#6
      001353 3A                    4714 	ld	a, (hl-)
      001354 12                    4715 	ld	(de), a
      001355 13                    4716 	inc	de
      001356 7E                    4717 	ld	a, (hl)
      001357 12                    4718 	ld	(de), a
                                   4719 ;main.c:474: move_sprite(10+ (i<<1) +1, enemies[i].x, enemies[i].y);
      001358                       4720 00117$:
                                   4721 ;main.c:455: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001358 0C                    4722 	inc	c
      001359 C3r1Cr12              4723 	jp	00116$
      00135C                       4724 00118$:
                                   4725 ;main.c:480: }
      00135C E8 07                 4726 	add	sp, #7
      00135E C9                    4727 	ret
                                   4728 ;main.c:483: void move() {
                                   4729 ;	---------------------------------
                                   4730 ; Function move
                                   4731 ; ---------------------------------
      00135F                       4732 _move::
      00135F E8 F8                 4733 	add	sp, #-8
                                   4734 ;main.c:487: if (joydata & J_A) {
      001361 FAr8Cr00              4735 	ld	a, (#_joydata)
      001364 CB 67                 4736 	bit	4, a
      001366 28 16                 4737 	jr	Z, 00102$
                                   4738 ;main.c:488: xSpeed += xDir + xDir + xDir;
      001368 21r56r00              4739 	ld	hl, #_xDir
      00136B 7E                    4740 	ld	a, (hl)
      00136C 87                    4741 	add	a, a
      00136D 86                    4742 	add	a, (hl)
      00136E 21r58r00              4743 	ld	hl, #_xSpeed
      001371 86                    4744 	add	a, (hl)
      001372 77                    4745 	ld	(hl), a
                                   4746 ;main.c:489: ySpeed += yDir + yDir + yDir;
      001373 21r57r00              4747 	ld	hl, #_yDir
      001376 7E                    4748 	ld	a, (hl)
      001377 87                    4749 	add	a, a
      001378 86                    4750 	add	a, (hl)
      001379 21r59r00              4751 	ld	hl, #_ySpeed
      00137C 86                    4752 	add	a, (hl)
      00137D 77                    4753 	ld	(hl), a
      00137E                       4754 00102$:
                                   4755 ;main.c:493: xSpeed = clamp(xSpeed, -100, 100);
      00137E 21r58r00              4756 	ld	hl, #_xSpeed
      001381 4E                    4757 	ld	c, (hl)
                                   4758 ;main.c:276: return (value < min) ? min : (value > max) ? max : value;
      001382 79                    4759 	ld	a, c
      001383 EE 80                 4760 	xor	a, #0x80
      001385 D6 1C                 4761 	sub	a, #0x1c
      001387 30 04                 4762 	jr	NC, 00165$
      001389 0E 9C                 4763 	ld	c, #0x9c
      00138B 18 19                 4764 	jr	00166$
      00138D                       4765 00165$:
      00138D 59                    4766 	ld	e, c
      00138E 3E 64                 4767 	ld	a,#0x64
      001390 57                    4768 	ld	d,a
      001391 91                    4769 	sub	a, c
      001392 CB 7B                 4770 	bit	7, e
      001394 28 07                 4771 	jr	Z, 00342$
      001396 CB 7A                 4772 	bit	7, d
      001398 20 08                 4773 	jr	NZ, 00343$
      00139A BF                    4774 	cp	a, a
      00139B 18 05                 4775 	jr	00343$
      00139D                       4776 00342$:
      00139D CB 7A                 4777 	bit	7, d
      00139F 28 01                 4778 	jr	Z, 00343$
      0013A1 37                    4779 	scf
      0013A2                       4780 00343$:
      0013A2 30 02                 4781 	jr	NC, 00167$
      0013A4 0E 64                 4782 	ld	c, #0x64
      0013A6                       4783 00167$:
      0013A6                       4784 00166$:
      0013A6 21r58r00              4785 	ld	hl, #_xSpeed
      0013A9 71                    4786 	ld	(hl), c
                                   4787 ;main.c:494: ySpeed = clamp(ySpeed, -100, 100);
      0013AA 21r59r00              4788 	ld	hl, #_ySpeed
      0013AD 4E                    4789 	ld	c, (hl)
                                   4790 ;main.c:276: return (value < min) ? min : (value > max) ? max : value;
      0013AE 79                    4791 	ld	a, c
      0013AF EE 80                 4792 	xor	a, #0x80
      0013B1 D6 1C                 4793 	sub	a, #0x1c
      0013B3 30 04                 4794 	jr	NC, 00169$
      0013B5 0E 9C                 4795 	ld	c, #0x9c
      0013B7 18 19                 4796 	jr	00170$
      0013B9                       4797 00169$:
      0013B9 59                    4798 	ld	e, c
      0013BA 3E 64                 4799 	ld	a,#0x64
      0013BC 57                    4800 	ld	d,a
      0013BD 91                    4801 	sub	a, c
      0013BE CB 7B                 4802 	bit	7, e
      0013C0 28 07                 4803 	jr	Z, 00344$
      0013C2 CB 7A                 4804 	bit	7, d
      0013C4 20 08                 4805 	jr	NZ, 00345$
      0013C6 BF                    4806 	cp	a, a
      0013C7 18 05                 4807 	jr	00345$
      0013C9                       4808 00344$:
      0013C9 CB 7A                 4809 	bit	7, d
      0013CB 28 01                 4810 	jr	Z, 00345$
      0013CD 37                    4811 	scf
      0013CE                       4812 00345$:
      0013CE 30 02                 4813 	jr	NC, 00171$
      0013D0 0E 64                 4814 	ld	c, #0x64
      0013D2                       4815 00171$:
      0013D2                       4816 00170$:
      0013D2 21r59r00              4817 	ld	hl, #_ySpeed
      0013D5 71                    4818 	ld	(hl), c
                                   4819 ;main.c:496: xOverflow = 0;
      0013D6 AF                    4820 	xor	a, a
      0013D7 21r64r00              4821 	ld	hl, #_xOverflow
      0013DA 22                    4822 	ld	(hl+), a
      0013DB 77                    4823 	ld	(hl), a
                                   4824 ;main.c:497: yOverflow = 0;
      0013DC AF                    4825 	xor	a, a
      0013DD 21r66r00              4826 	ld	hl, #_yOverflow
      0013E0 22                    4827 	ld	(hl+), a
      0013E1 77                    4828 	ld	(hl), a
                                   4829 ;main.c:502: uint8_t xCollisionPoint = playerDrawX; 
      0013E2 21r5Er00              4830 	ld	hl, #_playerDrawX
      0013E5 4E                    4831 	ld	c, (hl)
                                   4832 ;main.c:505: xCollisionPoint = playerDrawX +8; //right edge
      0013E6 46                    4833 	ld	b, (hl)
                                   4834 ;main.c:504: if (xSpeed > 0) {
      0013E7 21r58r00              4835 	ld	hl, #_xSpeed
      0013EA 5E                    4836 	ld	e, (hl)
      0013EB AF                    4837 	xor	a, a
      0013EC 57                    4838 	ld	d, a
      0013ED 96                    4839 	sub	a, (hl)
      0013EE CB 7B                 4840 	bit	7, e
      0013F0 28 07                 4841 	jr	Z, 00346$
      0013F2 CB 7A                 4842 	bit	7, d
      0013F4 20 08                 4843 	jr	NZ, 00347$
      0013F6 BF                    4844 	cp	a, a
      0013F7 18 05                 4845 	jr	00347$
      0013F9                       4846 00346$:
      0013F9 CB 7A                 4847 	bit	7, d
      0013FB 28 01                 4848 	jr	Z, 00347$
      0013FD 37                    4849 	scf
      0013FE                       4850 00347$:
      0013FE 30 04                 4851 	jr	NC, 00104$
                                   4852 ;main.c:505: xCollisionPoint = playerDrawX +8; //right edge
      001400 78                    4853 	ld	a, b
      001401 C6 08                 4854 	add	a, #0x08
      001403 4F                    4855 	ld	c, a
      001404                       4856 00104$:
                                   4857 ;main.c:507: if (xSpeed < 0) {
      001404 FAr58r00              4858 	ld	a, (#_xSpeed)
      001407 CB 7F                 4859 	bit	7, a
      001409 28 04                 4860 	jr	Z, 00106$
                                   4861 ;main.c:508: xCollisionPoint = playerDrawX -8; //left edge
      00140B 78                    4862 	ld	a, b
      00140C C6 F8                 4863 	add	a, #0xf8
      00140E 4F                    4864 	ld	c, a
      00140F                       4865 00106$:
                                   4866 ;main.c:512: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      00140F 06 00                 4867 	ld	b, #0x00
      001411 79                    4868 	ld	a, c
      001412 21r60r00              4869 	ld	hl, #_bgX
      001415 86                    4870 	add	a, (hl)
      001416 23                    4871 	inc	hl
      001417 4F                    4872 	ld	c, a
      001418 78                    4873 	ld	a, b
      001419 8E                    4874 	adc	a, (hl)
      00141A 47                    4875 	ld	b, a
      00141B CB 28                 4876 	sra	b
      00141D CB 19                 4877 	rr	c
      00141F CB 28                 4878 	sra	b
      001421 CB 19                 4879 	rr	c
      001423 CB 28                 4880 	sra	b
      001425 CB 19                 4881 	rr	c
      001427 11 20 00              4882 	ld	de, #0x0020
      00142A D5                    4883 	push	de
      00142B C5                    4884 	push	bc
      00142C CDr00r00              4885 	call	__modsint
      00142F E8 04                 4886 	add	sp, #4
                                   4887 ;main.c:516: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001431 21r5Fr00              4888 	ld	hl, #_playerDrawY
      001434 4E                    4889 	ld	c, (hl)
      001435 06 00                 4890 	ld	b, #0x00
      001437 79                    4891 	ld	a, c
      001438 21r62r00              4892 	ld	hl, #_bgY
      00143B 86                    4893 	add	a, (hl)
      00143C 23                    4894 	inc	hl
      00143D 4F                    4895 	ld	c, a
      00143E 78                    4896 	ld	a, b
      00143F 8E                    4897 	adc	a, (hl)
      001440 47                    4898 	ld	b, a
      001441 CB 28                 4899 	sra	b
      001443 CB 19                 4900 	rr	c
      001445 CB 28                 4901 	sra	b
      001447 CB 19                 4902 	rr	c
      001449 CB 28                 4903 	sra	b
      00144B CB 19                 4904 	rr	c
      00144D D5                    4905 	push	de
      00144E 21 20 00              4906 	ld	hl, #0x0020
      001451 E5                    4907 	push	hl
      001452 C5                    4908 	push	bc
      001453 CDr00r00              4909 	call	__modsint
      001456 E8 04                 4910 	add	sp, #4
      001458 6B                    4911 	ld	l, e
                                   4912 ;	spillPairReg hl
                                   4913 ;	spillPairReg hl
                                   4914 ;	spillPairReg hl
                                   4915 ;	spillPairReg hl
      001459 D1                    4916 	pop	de
                                   4917 ;main.c:519: uint16_t ind = 32*bgindY + bgindX;
      00145A 26 00                 4918 	ld	h, #0x00
                                   4919 ;	spillPairReg hl
                                   4920 ;	spillPairReg hl
      00145C 29                    4921 	add	hl, hl
      00145D 29                    4922 	add	hl, hl
      00145E 29                    4923 	add	hl, hl
      00145F 29                    4924 	add	hl, hl
      001460 29                    4925 	add	hl, hl
      001461 19                    4926 	add	hl, de
      001462 5D                    4927 	ld	e, l
      001463 54                    4928 	ld	d, h
                                   4929 ;main.c:520: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001464 0E 01                 4930 	ld	c, #0x01
                                   4931 ;main.c:521: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001466 21r87r00              4932 	ld	hl, #_background1
      001469 19                    4933 	add	hl, de
      00146A 46                    4934 	ld	b, (hl)
      00146B 1E 00                 4935 	ld	e, #0x00
      00146D                       4936 00158$:
      00146D FAr87r07              4937 	ld	a, (#_BLANKSIZE)
      001470 F8 02                 4938 	ldhl	sp,	#2
      001472 77                    4939 	ld	(hl), a
      001473 7B                    4940 	ld	a, e
      001474 96                    4941 	sub	a, (hl)
      001475 30 11                 4942 	jr	NC, 00109$
                                   4943 ;main.c:522: if (background1[ind] == BLANK[i] ) {
      001477 21r88r07              4944 	ld	hl, #_BLANK
      00147A 16 00                 4945 	ld	d, #0x00
      00147C 19                    4946 	add	hl, de
      00147D 56                    4947 	ld	d, (hl)
      00147E 78                    4948 	ld	a, b
                                   4949 ;main.c:523: result = 0;
      00147F 92                    4950 	sub	a,d
      001480 20 03                 4951 	jr	NZ, 00159$
      001482 4F                    4952 	ld	c,a
                                   4953 ;main.c:524: break;
      001483 18 03                 4954 	jr	00109$
      001485                       4955 00159$:
                                   4956 ;main.c:521: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001485 1C                    4957 	inc	e
      001486 18 E5                 4958 	jr	00158$
      001488                       4959 00109$:
                                   4960 ;main.c:528: if (result == 0) {
      001488 79                    4961 	ld	a, c
      001489 B7                    4962 	or	a, a
      00148A C2r58r15              4963 	jp	NZ, 00114$
                                   4964 ;main.c:529: playerX+=xSpeed;
      00148D FAr58r00              4965 	ld	a, (#_xSpeed)
      001490 4F                    4966 	ld	c, a
      001491 07                    4967 	rlca
      001492 9F                    4968 	sbc	a, a
      001493 47                    4969 	ld	b, a
      001494 21r5Ar00              4970 	ld	hl, #_playerX
      001497 6E                    4971 	ld	l, (hl)
                                   4972 ;	spillPairReg hl
                                   4973 ;	spillPairReg hl
      001498 FAr5Br00              4974 	ld	a, (_playerX + 1)
      00149B 67                    4975 	ld	h, a
                                   4976 ;	spillPairReg hl
                                   4977 ;	spillPairReg hl
      00149C 09                    4978 	add	hl, bc
      00149D 4D                    4979 	ld	c, l
      00149E 44                    4980 	ld	b, h
      00149F 21r5Ar00              4981 	ld	hl, #_playerX
      0014A2 79                    4982 	ld	a, c
      0014A3 22                    4983 	ld	(hl+), a
                                   4984 ;main.c:531: uint16_t limitedPlayerX = u16Clamp(playerX, 58<<5, 110<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      0014A4 78                    4985 	ld	a, b
      0014A5 32                    4986 	ld	(hl-), a
      0014A6 2A                    4987 	ld	a, (hl+)
      0014A7 4F                    4988 	ld	c, a
      0014A8 46                    4989 	ld	b, (hl)
      0014A9 79                    4990 	ld	a, c
      0014AA D6 40                 4991 	sub	a, #0x40
      0014AC 78                    4992 	ld	a, b
      0014AD DE 07                 4993 	sbc	a, #0x07
      0014AF 30 05                 4994 	jr	NC, 00173$
      0014B1 01 40 07              4995 	ld	bc, #0x0740
      0014B4 18 0B                 4996 	jr	00174$
      0014B6                       4997 00173$:
      0014B6 3E C0                 4998 	ld	a, #0xc0
      0014B8 B9                    4999 	cp	a, c
      0014B9 3E 0D                 5000 	ld	a, #0x0d
      0014BB 98                    5001 	sbc	a, b
      0014BC 30 03                 5002 	jr	NC, 00175$
      0014BE 01 C0 0D              5003 	ld	bc, #0x0dc0
      0014C1                       5004 00175$:
      0014C1                       5005 00174$:
      0014C1 59                    5006 	ld	e,c
      0014C2 50                    5007 	ld	d,b
                                   5008 ;main.c:533: xOverflow = (playerX - limitedPlayerX);
      0014C3 FAr5Ar00              5009 	ld	a, (#_playerX)
      0014C6 93                    5010 	sub	a, e
      0014C7 EAr64r00              5011 	ld	(#_xOverflow),a
      0014CA FAr5Br00              5012 	ld	a, (#_playerX + 1)
      0014CD 9A                    5013 	sbc	a, d
      0014CE 21r65r00              5014 	ld	hl, #_xOverflow + 1
                                   5015 ;main.c:534: if (xOverflow >= 0) {
      0014D1 32                    5016 	ld	(hl-), a
      0014D2 6E                    5017 	ld	l, (hl)
                                   5018 ;	spillPairReg hl
                                   5019 ;	spillPairReg hl
      0014D3 FAr65r00              5020 	ld	a, (_xOverflow + 1)
                                   5021 ;	spillPairReg hl
                                   5022 ;	spillPairReg hl
      0014D6 CB 7F                 5023 	bit	7,a
      0014D8 20 22                 5024 	jr	NZ, 00111$
                                   5025 ;main.c:535: xOverflow = xOverflow >> 5;
      0014DA 21r65r00              5026 	ld	hl, #_xOverflow + 1
      0014DD CB 2E                 5027 	sra	(hl)
      0014DF 2B                    5028 	dec	hl
      0014E0 CB 1E                 5029 	rr	(hl)
      0014E2 23                    5030 	inc	hl
      0014E3 CB 2E                 5031 	sra	(hl)
      0014E5 2B                    5032 	dec	hl
      0014E6 CB 1E                 5033 	rr	(hl)
      0014E8 23                    5034 	inc	hl
      0014E9 CB 2E                 5035 	sra	(hl)
      0014EB 2B                    5036 	dec	hl
      0014EC CB 1E                 5037 	rr	(hl)
      0014EE 23                    5038 	inc	hl
      0014EF CB 2E                 5039 	sra	(hl)
      0014F1 2B                    5040 	dec	hl
      0014F2 CB 1E                 5041 	rr	(hl)
      0014F4 23                    5042 	inc	hl
      0014F5 CB 2E                 5043 	sra	(hl)
      0014F7 2B                    5044 	dec	hl
      0014F8 CB 1E                 5045 	rr	(hl)
      0014FA 18 25                 5046 	jr	00112$
      0014FC                       5047 00111$:
                                   5048 ;main.c:538: xOverflow = -((-xOverflow) >> 5);
      0014FC AF                    5049 	xor	a, a
      0014FD 21r64r00              5050 	ld	hl, #_xOverflow
      001500 96                    5051 	sub	a, (hl)
      001501 23                    5052 	inc	hl
      001502 5F                    5053 	ld	e, a
      001503 9F                    5054 	sbc	a, a
      001504 96                    5055 	sub	a, (hl)
      001505 2B                    5056 	dec	hl
      001506 57                    5057 	ld	d, a
      001507 CB 2A                 5058 	sra	d
      001509 CB 1B                 5059 	rr	e
      00150B CB 2A                 5060 	sra	d
      00150D CB 1B                 5061 	rr	e
      00150F CB 2A                 5062 	sra	d
      001511 CB 1B                 5063 	rr	e
      001513 CB 2A                 5064 	sra	d
      001515 CB 1B                 5065 	rr	e
      001517 CB 2A                 5066 	sra	d
      001519 CB 1B                 5067 	rr	e
      00151B AF                    5068 	xor	a, a
      00151C 93                    5069 	sub	a, e
      00151D 22                    5070 	ld	(hl+), a
      00151E 9F                    5071 	sbc	a, a
      00151F 92                    5072 	sub	a, d
      001520 77                    5073 	ld	(hl), a
      001521                       5074 00112$:
                                   5075 ;main.c:540: bgX += xOverflow;
      001521 FAr60r00              5076 	ld	a, (#_bgX)
      001524 21r64r00              5077 	ld	hl, #_xOverflow
      001527 86                    5078 	add	a, (hl)
      001528 21r60r00              5079 	ld	hl, #_bgX
      00152B 22                    5080 	ld	(hl+), a
      00152C 7E                    5081 	ld	a, (hl)
      00152D 21r65r00              5082 	ld	hl, #_xOverflow + 1
      001530 8E                    5083 	adc	a, (hl)
      001531 EAr61r00              5084 	ld	(#_bgX + 1),a
                                   5085 ;main.c:541: playerX = limitedPlayerX;
      001534 21r5Ar00              5086 	ld	hl, #_playerX
      001537 79                    5087 	ld	a, c
      001538 22                    5088 	ld	(hl+), a
                                   5089 ;main.c:542: playerDrawX=playerX >> 5;
      001539 78                    5090 	ld	a, b
      00153A 32                    5091 	ld	(hl-), a
      00153B 2A                    5092 	ld	a, (hl+)
      00153C 4F                    5093 	ld	c, a
      00153D 46                    5094 	ld	b, (hl)
      00153E CB 38                 5095 	srl	b
      001540 CB 19                 5096 	rr	c
      001542 CB 38                 5097 	srl	b
      001544 CB 19                 5098 	rr	c
      001546 CB 38                 5099 	srl	b
      001548 CB 19                 5100 	rr	c
      00154A CB 38                 5101 	srl	b
      00154C CB 19                 5102 	rr	c
      00154E CB 38                 5103 	srl	b
      001550 CB 19                 5104 	rr	c
      001552 21r5Er00              5105 	ld	hl, #_playerDrawX
      001555 71                    5106 	ld	(hl), c
      001556 18 05                 5107 	jr	00115$
      001558                       5108 00114$:
                                   5109 ;main.c:550: xSpeed = 0;
      001558 21r58r00              5110 	ld	hl, #_xSpeed
      00155B 36 00                 5111 	ld	(hl), #0x00
      00155D                       5112 00115$:
                                   5113 ;main.c:558: uint8_t yCollisionPoint = playerDrawY; 
      00155D FAr5Fr00              5114 	ld	a, (#_playerDrawY)
      001560 F8 07                 5115 	ldhl	sp,	#7
      001562 77                    5116 	ld	(hl), a
                                   5117 ;main.c:561: yCollisionPoint = playerDrawY +8; //bottom edge
      001563 21r5Fr00              5118 	ld	hl, #_playerDrawY
      001566 4E                    5119 	ld	c, (hl)
                                   5120 ;main.c:560: if (ySpeed > 0) {
      001567 21r59r00              5121 	ld	hl, #_ySpeed
      00156A 5E                    5122 	ld	e, (hl)
      00156B AF                    5123 	xor	a, a
      00156C 57                    5124 	ld	d, a
      00156D 96                    5125 	sub	a, (hl)
      00156E CB 7B                 5126 	bit	7, e
      001570 28 07                 5127 	jr	Z, 00350$
      001572 CB 7A                 5128 	bit	7, d
      001574 20 08                 5129 	jr	NZ, 00351$
      001576 BF                    5130 	cp	a, a
      001577 18 05                 5131 	jr	00351$
      001579                       5132 00350$:
      001579 CB 7A                 5133 	bit	7, d
      00157B 28 01                 5134 	jr	Z, 00351$
      00157D 37                    5135 	scf
      00157E                       5136 00351$:
      00157E 30 06                 5137 	jr	NC, 00117$
                                   5138 ;main.c:561: yCollisionPoint = playerDrawY +8; //bottom edge
      001580 79                    5139 	ld	a, c
      001581 C6 08                 5140 	add	a, #0x08
      001583 F8 07                 5141 	ldhl	sp,	#7
      001585 77                    5142 	ld	(hl), a
      001586                       5143 00117$:
                                   5144 ;main.c:563: if (ySpeed < 0) {
      001586 FAr59r00              5145 	ld	a, (#_ySpeed)
      001589 CB 7F                 5146 	bit	7, a
      00158B 28 06                 5147 	jr	Z, 00119$
                                   5148 ;main.c:564: yCollisionPoint = playerDrawY -8; //top edge, 
      00158D 79                    5149 	ld	a, c
      00158E C6 F8                 5150 	add	a, #0xf8
      001590 F8 07                 5151 	ldhl	sp,	#7
      001592 77                    5152 	ld	(hl), a
      001593                       5153 00119$:
                                   5154 ;main.c:568: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001593 FAr5Er00              5155 	ld	a, (#_playerDrawX)
      001596 0E 00                 5156 	ld	c, #0x00
      001598 F8 03                 5157 	ldhl	sp,	#3
      00159A 22                    5158 	ld	(hl+), a
      00159B 79                    5159 	ld	a, c
      00159C 32                    5160 	ld	(hl-), a
      00159D 2A                    5161 	ld	a, (hl+)
      00159E 5F                    5162 	ld	e, a
      00159F 56                    5163 	ld	d, (hl)
      0015A0 21r60r00              5164 	ld	hl, #_bgX
      0015A3 2A                    5165 	ld	a,	(hl+)
      0015A4 66                    5166 	ld	h, (hl)
      0015A5 6F                    5167 	ld	l, a
      0015A6 19                    5168 	add	hl, de
      0015A7 E5                    5169 	push	hl
      0015A8 7D                    5170 	ld	a, l
      0015A9 F8 07                 5171 	ldhl	sp,	#7
      0015AB 77                    5172 	ld	(hl), a
      0015AC E1                    5173 	pop	hl
      0015AD 7C                    5174 	ld	a, h
      0015AE F8 06                 5175 	ldhl	sp,	#6
      0015B0 77                    5176 	ld	(hl), a
      0015B1 CB 2E                 5177 	sra	(hl)
      0015B3 2B                    5178 	dec	hl
      0015B4 CB 1E                 5179 	rr	(hl)
      0015B6 23                    5180 	inc	hl
      0015B7 CB 2E                 5181 	sra	(hl)
      0015B9 2B                    5182 	dec	hl
      0015BA CB 1E                 5183 	rr	(hl)
      0015BC 23                    5184 	inc	hl
      0015BD CB 2E                 5185 	sra	(hl)
      0015BF 2B                    5186 	dec	hl
      0015C0 CB 1E                 5187 	rr	(hl)
      0015C2 11 20 00              5188 	ld	de, #0x0020
      0015C5 D5                    5189 	push	de
      0015C6 2A                    5190 	ld	a, (hl+)
      0015C7 5F                    5191 	ld	e, a
      0015C8 56                    5192 	ld	d, (hl)
      0015C9 D5                    5193 	push	de
      0015CA CDr00r00              5194 	call	__modsint
      0015CD E8 04                 5195 	add	sp, #4
      0015CF F8 05                 5196 	ldhl	sp,	#5
      0015D1 7B                    5197 	ld	a, e
      0015D2 22                    5198 	ld	(hl+), a
      0015D3 72                    5199 	ld	(hl), d
      0015D4 F8 05                 5200 	ldhl	sp,	#5
      0015D6 7E                    5201 	ld	a, (hl)
      0015D7 F8 00                 5202 	ldhl	sp,	#0
      0015D9 77                    5203 	ld	(hl), a
      0015DA F8 06                 5204 	ldhl	sp,	#6
      0015DC 7E                    5205 	ld	a, (hl)
      0015DD F8 01                 5206 	ldhl	sp,	#1
      0015DF 77                    5207 	ld	(hl), a
                                   5208 ;main.c:571: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      0015E0 F8 07                 5209 	ldhl	sp,	#7
      0015E2 3A                    5210 	ld	a, (hl-)
      0015E3 22                    5211 	ld	(hl+), a
      0015E4 AF                    5212 	xor	a, a
      0015E5 32                    5213 	ld	(hl-), a
      0015E6 3A                    5214 	ld	a, (hl-)
      0015E7 2B                    5215 	dec	hl
      0015E8 77                    5216 	ld	(hl), a
      0015E9 F8 07                 5217 	ldhl	sp,	#7
      0015EB 3A                    5218 	ld	a, (hl-)
      0015EC 2B                    5219 	dec	hl
      0015ED 32                    5220 	ld	(hl-), a
      0015EE 2A                    5221 	ld	a, (hl+)
      0015EF 5F                    5222 	ld	e, a
      0015F0 56                    5223 	ld	d, (hl)
      0015F1 21r62r00              5224 	ld	hl, #_bgY
      0015F4 2A                    5225 	ld	a,	(hl+)
      0015F5 66                    5226 	ld	h, (hl)
      0015F6 6F                    5227 	ld	l, a
      0015F7 19                    5228 	add	hl, de
      0015F8 E5                    5229 	push	hl
      0015F9 7D                    5230 	ld	a, l
      0015FA F8 08                 5231 	ldhl	sp,	#8
      0015FC 77                    5232 	ld	(hl), a
      0015FD E1                    5233 	pop	hl
      0015FE 7C                    5234 	ld	a, h
      0015FF F8 07                 5235 	ldhl	sp,	#7
      001601 77                    5236 	ld	(hl), a
      001602 CB 2E                 5237 	sra	(hl)
      001604 2B                    5238 	dec	hl
      001605 CB 1E                 5239 	rr	(hl)
      001607 23                    5240 	inc	hl
      001608 CB 2E                 5241 	sra	(hl)
      00160A 2B                    5242 	dec	hl
      00160B CB 1E                 5243 	rr	(hl)
      00160D 23                    5244 	inc	hl
      00160E CB 2E                 5245 	sra	(hl)
      001610 2B                    5246 	dec	hl
      001611 CB 1E                 5247 	rr	(hl)
      001613 11 20 00              5248 	ld	de, #0x0020
      001616 D5                    5249 	push	de
      001617 2A                    5250 	ld	a, (hl+)
      001618 5F                    5251 	ld	e, a
      001619 56                    5252 	ld	d, (hl)
      00161A D5                    5253 	push	de
      00161B CDr00r00              5254 	call	__modsint
      00161E E8 04                 5255 	add	sp, #4
      001620 F8 06                 5256 	ldhl	sp,	#6
      001622 7B                    5257 	ld	a, e
      001623 22                    5258 	ld	(hl+), a
      001624 72                    5259 	ld	(hl), d
      001625 F8 06                 5260 	ldhl	sp,	#6
      001627 2A                    5261 	ld	a, (hl+)
      001628 77                    5262 	ld	(hl), a
                                   5263 ;main.c:574: ind = 32*bgindY + bgindX;
      001629 3A                    5264 	ld	a, (hl-)
      00162A 22                    5265 	ld	(hl+), a
      00162B 36 00                 5266 	ld	(hl), #0x00
      00162D 3E 05                 5267 	ld	a, #0x05
      00162F                       5268 00352$:
      00162F F8 06                 5269 	ldhl	sp,	#6
      001631 CB 26                 5270 	sla	(hl)
      001633 23                    5271 	inc	hl
      001634 CB 16                 5272 	rl	(hl)
      001636 3D                    5273 	dec	a
      001637 20 F6                 5274 	jr	NZ, 00352$
      001639 2B                    5275 	dec	hl
      00163A 3A                    5276 	ld	a, (hl-)
      00163B 2B                    5277 	dec	hl
      00163C 77                    5278 	ld	(hl), a
      00163D F8 07                 5279 	ldhl	sp,	#7
      00163F 3A                    5280 	ld	a, (hl-)
      001640 2B                    5281 	dec	hl
      001641 77                    5282 	ld	(hl), a
      001642 D1                    5283 	pop	de
      001643 D5                    5284 	push	de
      001644 3A                    5285 	ld	a, (hl-)
      001645 6E                    5286 	ld	l, (hl)
      001646 67                    5287 	ld	h, a
      001647 19                    5288 	add	hl, de
      001648 E5                    5289 	push	hl
      001649 7D                    5290 	ld	a, l
      00164A F8 08                 5291 	ldhl	sp,	#8
      00164C 77                    5292 	ld	(hl), a
      00164D E1                    5293 	pop	hl
      00164E 7C                    5294 	ld	a, h
      00164F F8 07                 5295 	ldhl	sp,	#7
      001651 77                    5296 	ld	(hl), a
                                   5297 ;main.c:575: result = 1;
      001652 F8 03                 5298 	ldhl	sp,	#3
      001654 36 01                 5299 	ld	(hl), #0x01
                                   5300 ;main.c:576: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001656 F8 06                 5301 	ldhl	sp,#6
      001658 2A                    5302 	ld	a, (hl+)
      001659 5F                    5303 	ld	e, a
      00165A 56                    5304 	ld	d, (hl)
      00165B 21r87r00              5305 	ld	hl, #_background1
      00165E 19                    5306 	add	hl, de
      00165F 4D                    5307 	ld	c, l
      001660 44                    5308 	ld	b, h
      001661 0A                    5309 	ld	a, (bc)
      001662 F8 04                 5310 	ldhl	sp,	#4
      001664 77                    5311 	ld	(hl), a
      001665 F8 07                 5312 	ldhl	sp,	#7
      001667 36 00                 5313 	ld	(hl), #0x00
      001669                       5314 00161$:
      001669 F8 07                 5315 	ldhl	sp,	#7
      00166B 7E                    5316 	ld	a, (hl)
      00166C F8 02                 5317 	ldhl	sp,	#2
      00166E 96                    5318 	sub	a, (hl)
      00166F 30 29                 5319 	jr	NC, 00122$
                                   5320 ;main.c:577: if (background1[ind] == BLANK[j] ) {
      001671 11r88r07              5321 	ld	de, #_BLANK
      001674 F8 07                 5322 	ldhl	sp,	#7
      001676 6E                    5323 	ld	l, (hl)
      001677 26 00                 5324 	ld	h, #0x00
      001679 19                    5325 	add	hl, de
      00167A E5                    5326 	push	hl
      00167B 7D                    5327 	ld	a, l
      00167C F8 07                 5328 	ldhl	sp,	#7
      00167E 77                    5329 	ld	(hl), a
      00167F E1                    5330 	pop	hl
      001680 7C                    5331 	ld	a, h
      001681 F8 06                 5332 	ldhl	sp,	#6
      001683 32                    5333 	ld	(hl-), a
      001684 2A                    5334 	ld	a, (hl+)
      001685 5F                    5335 	ld	e, a
      001686 3A                    5336 	ld	a, (hl-)
      001687 2B                    5337 	dec	hl
      001688 57                    5338 	ld	d, a
      001689 1A                    5339 	ld	a, (de)
      00168A 4F                    5340 	ld	c, a
      00168B 7E                    5341 	ld	a, (hl)
      00168C 91                    5342 	sub	a, c
      00168D 20 06                 5343 	jr	NZ, 00162$
                                   5344 ;main.c:578: result = 0;
      00168F F8 03                 5345 	ldhl	sp,	#3
      001691 36 00                 5346 	ld	(hl), #0x00
                                   5347 ;main.c:579: break;
      001693 18 05                 5348 	jr	00122$
      001695                       5349 00162$:
                                   5350 ;main.c:576: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001695 F8 07                 5351 	ldhl	sp,	#7
      001697 34                    5352 	inc	(hl)
      001698 18 CF                 5353 	jr	00161$
      00169A                       5354 00122$:
                                   5355 ;main.c:582: if (result == 0) {
      00169A F8 03                 5356 	ldhl	sp,	#3
      00169C 7E                    5357 	ld	a, (hl)
      00169D B7                    5358 	or	a, a
      00169E C2r6Br17              5359 	jp	NZ, 00127$
                                   5360 ;main.c:583: playerY += ySpeed;
      0016A1 FAr59r00              5361 	ld	a, (#_ySpeed)
      0016A4 4F                    5362 	ld	c, a
      0016A5 07                    5363 	rlca
      0016A6 9F                    5364 	sbc	a, a
      0016A7 21r5Cr00              5365 	ld	hl, #_playerY
      0016AA 5E                    5366 	ld	e, (hl)
      0016AB 23                    5367 	inc	hl
      0016AC 56                    5368 	ld	d, (hl)
      0016AD 2B                    5369 	dec	hl
      0016AE 47                    5370 	ld	b, a
      0016AF 79                    5371 	ld	a, c
      0016B0 83                    5372 	add	a, e
      0016B1 4F                    5373 	ld	c, a
      0016B2 78                    5374 	ld	a, b
      0016B3 8A                    5375 	adc	a, d
      0016B4 47                    5376 	ld	b, a
      0016B5 79                    5377 	ld	a, c
      0016B6 22                    5378 	ld	(hl+), a
                                   5379 ;main.c:585: uint16_t limitedPlayerY = u16Clamp(playerY, 61<<5, 107<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      0016B7 78                    5380 	ld	a, b
      0016B8 32                    5381 	ld	(hl-), a
      0016B9 2A                    5382 	ld	a, (hl+)
      0016BA 5F                    5383 	ld	e, a
      0016BB 56                    5384 	ld	d, (hl)
      0016BC 7B                    5385 	ld	a, e
      0016BD D6 A0                 5386 	sub	a, #0xa0
      0016BF 7A                    5387 	ld	a, d
      0016C0 DE 07                 5388 	sbc	a, #0x07
      0016C2 30 05                 5389 	jr	NC, 00177$
      0016C4 11 A0 07              5390 	ld	de, #0x07a0
      0016C7 18 0B                 5391 	jr	00178$
      0016C9                       5392 00177$:
      0016C9 3E 60                 5393 	ld	a, #0x60
      0016CB BB                    5394 	cp	a, e
      0016CC 3E 0D                 5395 	ld	a, #0x0d
      0016CE 9A                    5396 	sbc	a, d
      0016CF 30 03                 5397 	jr	NC, 00179$
      0016D1 11 60 0D              5398 	ld	de, #0x0d60
      0016D4                       5399 00179$:
      0016D4                       5400 00178$:
      0016D4 4B                    5401 	ld	c, e
      0016D5 42                    5402 	ld	b, d
                                   5403 ;main.c:587: yOverflow = (playerY - limitedPlayerY);
      0016D6 FAr5Cr00              5404 	ld	a, (#_playerY)
      0016D9 93                    5405 	sub	a, e
      0016DA EAr66r00              5406 	ld	(#_yOverflow),a
      0016DD FAr5Dr00              5407 	ld	a, (#_playerY + 1)
      0016E0 9A                    5408 	sbc	a, d
      0016E1 21r67r00              5409 	ld	hl, #_yOverflow + 1
                                   5410 ;main.c:588: if (yOverflow >= 0) {
      0016E4 32                    5411 	ld	(hl-), a
      0016E5 6E                    5412 	ld	l, (hl)
                                   5413 ;	spillPairReg hl
                                   5414 ;	spillPairReg hl
      0016E6 FAr67r00              5415 	ld	a, (_yOverflow + 1)
                                   5416 ;	spillPairReg hl
                                   5417 ;	spillPairReg hl
      0016E9 CB 7F                 5418 	bit	7,a
      0016EB 20 22                 5419 	jr	NZ, 00124$
                                   5420 ;main.c:589: yOverflow = yOverflow >> 5;
      0016ED 21r67r00              5421 	ld	hl, #_yOverflow + 1
      0016F0 CB 2E                 5422 	sra	(hl)
      0016F2 2B                    5423 	dec	hl
      0016F3 CB 1E                 5424 	rr	(hl)
      0016F5 23                    5425 	inc	hl
      0016F6 CB 2E                 5426 	sra	(hl)
      0016F8 2B                    5427 	dec	hl
      0016F9 CB 1E                 5428 	rr	(hl)
      0016FB 23                    5429 	inc	hl
      0016FC CB 2E                 5430 	sra	(hl)
      0016FE 2B                    5431 	dec	hl
      0016FF CB 1E                 5432 	rr	(hl)
      001701 23                    5433 	inc	hl
      001702 CB 2E                 5434 	sra	(hl)
      001704 2B                    5435 	dec	hl
      001705 CB 1E                 5436 	rr	(hl)
      001707 23                    5437 	inc	hl
      001708 CB 2E                 5438 	sra	(hl)
      00170A 2B                    5439 	dec	hl
      00170B CB 1E                 5440 	rr	(hl)
      00170D 18 25                 5441 	jr	00125$
      00170F                       5442 00124$:
                                   5443 ;main.c:592: yOverflow = -((-yOverflow) >> 5);
      00170F AF                    5444 	xor	a, a
      001710 21r66r00              5445 	ld	hl, #_yOverflow
      001713 96                    5446 	sub	a, (hl)
      001714 23                    5447 	inc	hl
      001715 5F                    5448 	ld	e, a
      001716 9F                    5449 	sbc	a, a
      001717 96                    5450 	sub	a, (hl)
      001718 2B                    5451 	dec	hl
      001719 57                    5452 	ld	d, a
      00171A CB 2A                 5453 	sra	d
      00171C CB 1B                 5454 	rr	e
      00171E CB 2A                 5455 	sra	d
      001720 CB 1B                 5456 	rr	e
      001722 CB 2A                 5457 	sra	d
      001724 CB 1B                 5458 	rr	e
      001726 CB 2A                 5459 	sra	d
      001728 CB 1B                 5460 	rr	e
      00172A CB 2A                 5461 	sra	d
      00172C CB 1B                 5462 	rr	e
      00172E AF                    5463 	xor	a, a
      00172F 93                    5464 	sub	a, e
      001730 22                    5465 	ld	(hl+), a
      001731 9F                    5466 	sbc	a, a
      001732 92                    5467 	sub	a, d
      001733 77                    5468 	ld	(hl), a
      001734                       5469 00125$:
                                   5470 ;main.c:594: bgY += yOverflow;
      001734 FAr62r00              5471 	ld	a, (#_bgY)
      001737 21r66r00              5472 	ld	hl, #_yOverflow
      00173A 86                    5473 	add	a, (hl)
      00173B 21r62r00              5474 	ld	hl, #_bgY
      00173E 22                    5475 	ld	(hl+), a
      00173F 7E                    5476 	ld	a, (hl)
      001740 21r67r00              5477 	ld	hl, #_yOverflow + 1
      001743 8E                    5478 	adc	a, (hl)
      001744 EAr63r00              5479 	ld	(#_bgY + 1),a
                                   5480 ;main.c:595: playerY = limitedPlayerY;
      001747 21r5Cr00              5481 	ld	hl, #_playerY
      00174A 79                    5482 	ld	a, c
      00174B 22                    5483 	ld	(hl+), a
                                   5484 ;main.c:596: playerDrawY=playerY >> 5;
      00174C 78                    5485 	ld	a, b
      00174D 32                    5486 	ld	(hl-), a
      00174E 2A                    5487 	ld	a, (hl+)
      00174F 4F                    5488 	ld	c, a
      001750 46                    5489 	ld	b, (hl)
      001751 CB 38                 5490 	srl	b
      001753 CB 19                 5491 	rr	c
      001755 CB 38                 5492 	srl	b
      001757 CB 19                 5493 	rr	c
      001759 CB 38                 5494 	srl	b
      00175B CB 19                 5495 	rr	c
      00175D CB 38                 5496 	srl	b
      00175F CB 19                 5497 	rr	c
      001761 CB 38                 5498 	srl	b
      001763 CB 19                 5499 	rr	c
      001765 21r5Fr00              5500 	ld	hl, #_playerDrawY
      001768 71                    5501 	ld	(hl), c
      001769 18 05                 5502 	jr	00128$
      00176B                       5503 00127$:
                                   5504 ;main.c:601: ySpeed = 0;
      00176B 21r59r00              5505 	ld	hl, #_ySpeed
      00176E 36 00                 5506 	ld	(hl), #0x00
      001770                       5507 00128$:
                                   5508 ;main.c:502: uint8_t xCollisionPoint = playerDrawX; 
      001770 FAr5Er00              5509 	ld	a, (#_playerDrawX)
      001773 F8 07                 5510 	ldhl	sp,	#7
      001775 77                    5511 	ld	(hl), a
                                   5512 ;main.c:561: yCollisionPoint = playerDrawY +8; //bottom edge
      001776 FAr5Fr00              5513 	ld	a, (#_playerDrawY)
      001779 C6 08                 5514 	add	a, #0x08
      00177B F8 06                 5515 	ldhl	sp,	#6
      00177D 77                    5516 	ld	(hl), a
                                   5517 ;main.c:604: if (xDir >= 0) {
      00177E FAr56r00              5518 	ld	a, (#_xDir)
      001781 CB 7F                 5519 	bit	7, a
      001783 20 2A                 5520 	jr	NZ, 00130$
                                   5521 ;main.c:605: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   5522 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   5523 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001785 11r00r00              5524 	ld	de, #_shadow_OAM
      001788 F8 06                 5525 	ldhl	sp,	#6
      00178A 2A                    5526 	ld	a, (hl+)
      00178B 12                    5527 	ld	(de), a
      00178C 11r01r00              5528 	ld	de, #(_shadow_OAM + 1)
      00178F 7E                    5529 	ld	a, (hl)
      001790 12                    5530 	ld	(de), a
                                   5531 ;main.c:607: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001791 FAr5Fr00              5532 	ld	a, (#_playerDrawY)
      001794 F8 07                 5533 	ldhl	sp,	#7
      001796 77                    5534 	ld	(hl), a
      001797 3A                    5535 	ld	a, (hl-)
      001798 C6 08                 5536 	add	a, #0x08
      00179A 77                    5537 	ld	(hl), a
      00179B FAr5Er00              5538 	ld	a, (#_playerDrawX)
      00179E C6 08                 5539 	add	a, #0x08
      0017A0 F8 07                 5540 	ldhl	sp,	#7
                                   5541 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   5542 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0017A2 32                    5543 	ld	(hl-), a
      0017A3 11r04r00              5544 	ld	de, #(_shadow_OAM + 4)
      0017A6 2A                    5545 	ld	a, (hl+)
      0017A7 12                    5546 	ld	(de), a
      0017A8 11r05r00              5547 	ld	de, #(_shadow_OAM + 5)
      0017AB 7E                    5548 	ld	a, (hl)
      0017AC 12                    5549 	ld	(de), a
                                   5550 ;main.c:607: move_sprite(1, playerDrawX +8, playerDrawY +8);
      0017AD 18 28                 5551 	jr	00131$
      0017AF                       5552 00130$:
                                   5553 ;main.c:610: move_sprite(1, playerDrawX , playerDrawY +8);
                                   5554 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0017AF 01r04r00              5555 	ld	bc, #(_shadow_OAM + 4)
                                   5556 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0017B2 F8 06                 5557 	ldhl	sp,	#6
      0017B4 2A                    5558 	ld	a, (hl+)
      0017B5 02                    5559 	ld	(bc), a
      0017B6 03                    5560 	inc	bc
      0017B7 7E                    5561 	ld	a, (hl)
      0017B8 02                    5562 	ld	(bc), a
                                   5563 ;main.c:612: move_sprite(0, playerDrawX +8, playerDrawY +8);
      0017B9 FAr5Fr00              5564 	ld	a, (#_playerDrawY)
      0017BC F8 07                 5565 	ldhl	sp,	#7
      0017BE 77                    5566 	ld	(hl), a
      0017BF 3A                    5567 	ld	a, (hl-)
      0017C0 C6 08                 5568 	add	a, #0x08
      0017C2 77                    5569 	ld	(hl), a
      0017C3 FAr5Er00              5570 	ld	a, (#_playerDrawX)
      0017C6 F8 07                 5571 	ldhl	sp,	#7
      0017C8 77                    5572 	ld	(hl), a
      0017C9 7E                    5573 	ld	a, (hl)
      0017CA C6 08                 5574 	add	a, #0x08
                                   5575 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   5576 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0017CC 32                    5577 	ld	(hl-), a
      0017CD 11r00r00              5578 	ld	de, #_shadow_OAM
      0017D0 2A                    5579 	ld	a, (hl+)
      0017D1 12                    5580 	ld	(de), a
      0017D2 11r01r00              5581 	ld	de, #(_shadow_OAM + 1)
      0017D5 7E                    5582 	ld	a, (hl)
      0017D6 12                    5583 	ld	(de), a
                                   5584 ;main.c:612: move_sprite(0, playerDrawX +8, playerDrawY +8);
      0017D7                       5585 00131$:
                                   5586 ;main.c:617: if (bgX >= 256) {
      0017D7 21r60r00              5587 	ld	hl, #_bgX
      0017DA 2A                    5588 	ld	a, (hl+)
      0017DB 4F                    5589 	ld	c, a
      0017DC 46                    5590 	ld	b, (hl)
      0017DD 78                    5591 	ld	a, b
      0017DE EE 80                 5592 	xor	a, #0x80
      0017E0 D6 81                 5593 	sub	a, #0x81
      0017E2 38 0F                 5594 	jr	C, 00133$
                                   5595 ;main.c:618: bgX = bgX % 256;
      0017E4 AF                    5596 	xor	a, a
      0017E5 3C                    5597 	inc	a
      0017E6 F5                    5598 	push	af
      0017E7 C5                    5599 	push	bc
      0017E8 CDr00r00              5600 	call	__modsint
      0017EB E8 04                 5601 	add	sp, #4
      0017ED 21r60r00              5602 	ld	hl, #_bgX
      0017F0 7B                    5603 	ld	a, e
      0017F1 22                    5604 	ld	(hl+), a
      0017F2 72                    5605 	ld	(hl), d
      0017F3                       5606 00133$:
                                   5607 ;main.c:620: if (bgX < 0) {
      0017F3 21r60r00              5608 	ld	hl, #_bgX
      0017F6 2A                    5609 	ld	a, (hl+)
      0017F7 4F                    5610 	ld	c, a
      0017F8 46                    5611 	ld	b, (hl)
      0017F9 CB 78                 5612 	bit	7, b
      0017FB 28 15                 5613 	jr	Z, 00135$
                                   5614 ;main.c:621: bgX = 255 - (bgX % 256);
      0017FD AF                    5615 	xor	a, a
      0017FE 3C                    5616 	inc	a
      0017FF F5                    5617 	push	af
      001800 C5                    5618 	push	bc
      001801 CDr00r00              5619 	call	__modsint
      001804 E8 04                 5620 	add	sp, #4
      001806 3E FF                 5621 	ld	a, #0xff
      001808 93                    5622 	sub	a, e
      001809 4F                    5623 	ld	c, a
      00180A 9F                    5624 	sbc	a, a
      00180B 92                    5625 	sub	a, d
      00180C 21r60r00              5626 	ld	hl, #_bgX
      00180F 71                    5627 	ld	(hl), c
      001810 23                    5628 	inc	hl
      001811 77                    5629 	ld	(hl), a
      001812                       5630 00135$:
                                   5631 ;main.c:623: if (bgY >= 256) {
      001812 21r62r00              5632 	ld	hl, #_bgY
      001815 2A                    5633 	ld	a, (hl+)
      001816 4F                    5634 	ld	c, a
      001817 46                    5635 	ld	b, (hl)
      001818 78                    5636 	ld	a, b
      001819 EE 80                 5637 	xor	a, #0x80
      00181B D6 81                 5638 	sub	a, #0x81
      00181D 38 0F                 5639 	jr	C, 00137$
                                   5640 ;main.c:624: bgY = bgY % 256;
      00181F AF                    5641 	xor	a, a
      001820 3C                    5642 	inc	a
      001821 F5                    5643 	push	af
      001822 C5                    5644 	push	bc
      001823 CDr00r00              5645 	call	__modsint
      001826 E8 04                 5646 	add	sp, #4
      001828 21r62r00              5647 	ld	hl, #_bgY
      00182B 7B                    5648 	ld	a, e
      00182C 22                    5649 	ld	(hl+), a
      00182D 72                    5650 	ld	(hl), d
      00182E                       5651 00137$:
                                   5652 ;main.c:626: if (bgY < 0) {
      00182E 21r62r00              5653 	ld	hl, #_bgY
      001831 2A                    5654 	ld	a, (hl+)
      001832 4F                    5655 	ld	c, a
      001833 46                    5656 	ld	b, (hl)
      001834 CB 78                 5657 	bit	7, b
      001836 28 15                 5658 	jr	Z, 00139$
                                   5659 ;main.c:627: bgY = 255 - (bgY % 256);
      001838 AF                    5660 	xor	a, a
      001839 3C                    5661 	inc	a
      00183A F5                    5662 	push	af
      00183B C5                    5663 	push	bc
      00183C CDr00r00              5664 	call	__modsint
      00183F E8 04                 5665 	add	sp, #4
      001841 3E FF                 5666 	ld	a, #0xff
      001843 93                    5667 	sub	a, e
      001844 4F                    5668 	ld	c, a
      001845 9F                    5669 	sbc	a, a
      001846 92                    5670 	sub	a, d
      001847 21r62r00              5671 	ld	hl, #_bgY
      00184A 71                    5672 	ld	(hl), c
      00184B 23                    5673 	inc	hl
      00184C 77                    5674 	ld	(hl), a
      00184D                       5675 00139$:
                                   5676 ;main.c:630: move_bkg(bgX, bgY);
      00184D 21r62r00              5677 	ld	hl, #_bgY
      001850 4E                    5678 	ld	c, (hl)
      001851 FAr60r00              5679 	ld	a, (#_bgX)
      001854 E0r00                 5680 	ldh	(_SCX_REG + 0), a
                                   5681 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001856 79                    5682 	ld	a, c
      001857 E0r00                 5683 	ldh	(_SCY_REG + 0), a
                                   5684 ;main.c:633: if (ySpeed > 0) ySpeed--;
      001859 21r59r00              5685 	ld	hl, #_ySpeed
      00185C 5E                    5686 	ld	e, (hl)
      00185D AF                    5687 	xor	a, a
      00185E 57                    5688 	ld	d, a
      00185F 96                    5689 	sub	a, (hl)
      001860 CB 7B                 5690 	bit	7, e
      001862 28 07                 5691 	jr	Z, 00355$
      001864 CB 7A                 5692 	bit	7, d
      001866 20 08                 5693 	jr	NZ, 00356$
      001868 BF                    5694 	cp	a, a
      001869 18 05                 5695 	jr	00356$
      00186B                       5696 00355$:
      00186B CB 7A                 5697 	bit	7, d
      00186D 28 01                 5698 	jr	Z, 00356$
      00186F 37                    5699 	scf
      001870                       5700 00356$:
      001870 30 04                 5701 	jr	NC, 00141$
      001872 21r59r00              5702 	ld	hl, #_ySpeed
      001875 35                    5703 	dec	(hl)
      001876                       5704 00141$:
                                   5705 ;main.c:634: if (ySpeed < 0) ySpeed++;
      001876 21r59r00              5706 	ld	hl, #_ySpeed
      001879 CB 7E                 5707 	bit	7, (hl)
      00187B 28 01                 5708 	jr	Z, 00143$
      00187D 34                    5709 	inc	(hl)
      00187E                       5710 00143$:
                                   5711 ;main.c:635: if (xSpeed > 0) xSpeed--;
      00187E 21r58r00              5712 	ld	hl, #_xSpeed
      001881 5E                    5713 	ld	e, (hl)
      001882 AF                    5714 	xor	a, a
      001883 57                    5715 	ld	d, a
      001884 96                    5716 	sub	a, (hl)
      001885 CB 7B                 5717 	bit	7, e
      001887 28 07                 5718 	jr	Z, 00357$
      001889 CB 7A                 5719 	bit	7, d
      00188B 20 08                 5720 	jr	NZ, 00358$
      00188D BF                    5721 	cp	a, a
      00188E 18 05                 5722 	jr	00358$
      001890                       5723 00357$:
      001890 CB 7A                 5724 	bit	7, d
      001892 28 01                 5725 	jr	Z, 00358$
      001894 37                    5726 	scf
      001895                       5727 00358$:
      001895 30 04                 5728 	jr	NC, 00145$
      001897 21r58r00              5729 	ld	hl, #_xSpeed
      00189A 35                    5730 	dec	(hl)
      00189B                       5731 00145$:
                                   5732 ;main.c:636: if (xSpeed < 0) xSpeed++;
      00189B 21r58r00              5733 	ld	hl, #_xSpeed
      00189E CB 7E                 5734 	bit	7, (hl)
      0018A0 28 01                 5735 	jr	Z, 00163$
      0018A2 34                    5736 	inc	(hl)
      0018A3                       5737 00163$:
                                   5738 ;main.c:640: }
      0018A3 E8 08                 5739 	add	sp, #8
      0018A5 C9                    5740 	ret
                                   5741 ;main.c:642: void takeDamage(int16_t amount) {
                                   5742 ;	---------------------------------
                                   5743 ; Function takeDamage
                                   5744 ; ---------------------------------
      0018A6                       5745 _takeDamage::
      0018A6 3B                    5746 	dec	sp
                                   5747 ;main.c:643: if (amount > shield) {
      0018A7 FAr8Er00              5748 	ld	a, (#_shield)
      0018AA 4F                    5749 	ld	c, a
      0018AB 07                    5750 	rlca
      0018AC 9F                    5751 	sbc	a, a
      0018AD 47                    5752 	ld	b, a
                                   5753 ;main.c:645: hull -= (amount - shield);
      0018AE F8 03                 5754 	ldhl	sp,	#3
      0018B0 7E                    5755 	ld	a, (hl)
      0018B1 F8 00                 5756 	ldhl	sp,	#0
      0018B3 77                    5757 	ld	(hl), a
                                   5758 ;main.c:643: if (amount > shield) {
      0018B4 F8 03                 5759 	ldhl	sp,	#3
      0018B6 79                    5760 	ld	a, c
      0018B7 96                    5761 	sub	a, (hl)
      0018B8 23                    5762 	inc	hl
      0018B9 78                    5763 	ld	a, b
      0018BA 9E                    5764 	sbc	a, (hl)
      0018BB 78                    5765 	ld	a, b
      0018BC 57                    5766 	ld	d, a
      0018BD CB 7E                 5767 	bit	7, (hl)
      0018BF 28 07                 5768 	jr	Z, 00111$
      0018C1 CB 7A                 5769 	bit	7, d
      0018C3 20 08                 5770 	jr	NZ, 00112$
      0018C5 BF                    5771 	cp	a, a
      0018C6 18 05                 5772 	jr	00112$
      0018C8                       5773 00111$:
      0018C8 CB 7A                 5774 	bit	7, d
      0018CA 28 01                 5775 	jr	Z, 00112$
      0018CC 37                    5776 	scf
      0018CD                       5777 00112$:
      0018CD 30 10                 5778 	jr	NC, 00102$
                                   5779 ;main.c:644: shield = 0;
      0018CF 21r8Er00              5780 	ld	hl, #_shield
      0018D2 36 00                 5781 	ld	(hl), #0x00
                                   5782 ;main.c:645: hull -= (amount - shield);
      0018D4 FAr8Dr00              5783 	ld	a, (#_hull)
      0018D7 F8 00                 5784 	ldhl	sp,	#0
      0018D9 96                    5785 	sub	a, (hl)
      0018DA EAr8Dr00              5786 	ld	(#_hull),a
      0018DD 18 09                 5787 	jr	00104$
      0018DF                       5788 00102$:
                                   5789 ;main.c:648: shield -= amount;
      0018DF FAr8Er00              5790 	ld	a, (#_shield)
      0018E2 F8 00                 5791 	ldhl	sp,	#0
      0018E4 96                    5792 	sub	a, (hl)
      0018E5 EAr8Er00              5793 	ld	(#_shield),a
      0018E8                       5794 00104$:
                                   5795 ;main.c:650: }
      0018E8 33                    5796 	inc	sp
      0018E9 C9                    5797 	ret
                                   5798 ;main.c:652: void checkCollision() {
                                   5799 ;	---------------------------------
                                   5800 ; Function checkCollision
                                   5801 ; ---------------------------------
      0018EA                       5802 _checkCollision::
      0018EA E8 E9                 5803 	add	sp, #-23
                                   5804 ;main.c:659: struct Enemy *eptr = enemies;
                                   5805 ;main.c:660: uint8_t i = enemyCollisionCount;
      0018EC 21r68r00              5806 	ld	hl, #_enemyCollisionCount
      0018EF 4E                    5807 	ld	c, (hl)
                                   5808 ;main.c:662: while (i < ENEMYCOUNT) {
      0018F0 21r8Cr07              5809 	ld	hl, #_ENEMYCOUNT
      0018F3 46                    5810 	ld	b, (hl)
      0018F4 79                    5811 	ld	a, c
      0018F5 90                    5812 	sub	a, b
      0018F6 D2rC9r1B              5813 	jp	NC, 00121$
                                   5814 ;main.c:663: eptr += enemyCollisionCount;
      0018F9 21r68r00              5815 	ld	hl, #_enemyCollisionCount
      0018FC 6E                    5816 	ld	l, (hl)
                                   5817 ;	spillPairReg hl
                                   5818 ;	spillPairReg hl
      0018FD 26 00                 5819 	ld	h, #0x00
                                   5820 ;	spillPairReg hl
                                   5821 ;	spillPairReg hl
      0018FF 29                    5822 	add	hl, hl
      001900 29                    5823 	add	hl, hl
      001901 29                    5824 	add	hl, hl
      001902 29                    5825 	add	hl, hl
      001903 7D                    5826 	ld	a, l
      001904 C6r00                 5827 	add	a, #<(_enemies)
      001906 47                    5828 	ld	b, a
      001907 7C                    5829 	ld	a, h
      001908 CEs00                 5830 	adc	a, #>(_enemies)
      00190A F8 00                 5831 	ldhl	sp,	#0
      00190C 70                    5832 	ld	(hl), b
      00190D 23                    5833 	inc	hl
      00190E 77                    5834 	ld	(hl), a
                                   5835 ;main.c:664: if (eptr->visible && eptr->alive) {
      00190F D1                    5836 	pop	de
      001910 D5                    5837 	push	de
      001911 21 0A 00              5838 	ld	hl, #0x000a
      001914 19                    5839 	add	hl, de
      001915 E5                    5840 	push	hl
      001916 7D                    5841 	ld	a, l
      001917 F8 04                 5842 	ldhl	sp,	#4
      001919 77                    5843 	ld	(hl), a
      00191A E1                    5844 	pop	hl
      00191B 7C                    5845 	ld	a, h
      00191C F8 03                 5846 	ldhl	sp,	#3
      00191E 32                    5847 	ld	(hl-), a
      00191F 2A                    5848 	ld	a, (hl+)
      001920 5F                    5849 	ld	e, a
      001921 56                    5850 	ld	d, (hl)
      001922 1A                    5851 	ld	a, (de)
      001923 B7                    5852 	or	a, a
      001924 CArC9r1B              5853 	jp	Z, 00121$
      001927 D1                    5854 	pop	de
      001928 D5                    5855 	push	de
      001929 21 09 00              5856 	ld	hl, #0x0009
      00192C 19                    5857 	add	hl, de
      00192D E5                    5858 	push	hl
      00192E 7D                    5859 	ld	a, l
      00192F F8 06                 5860 	ldhl	sp,	#6
      001931 77                    5861 	ld	(hl), a
      001932 E1                    5862 	pop	hl
      001933 7C                    5863 	ld	a, h
      001934 F8 05                 5864 	ldhl	sp,	#5
      001936 32                    5865 	ld	(hl-), a
      001937 2A                    5866 	ld	a, (hl+)
      001938 5F                    5867 	ld	e, a
      001939 56                    5868 	ld	d, (hl)
      00193A 1A                    5869 	ld	a, (de)
      00193B B7                    5870 	or	a, a
      00193C CArC9r1B              5871 	jp	Z, 00121$
                                   5872 ;main.c:667: if (abs(eptr->x - playerDrawX) <= 8 ) {
      00193F D1                    5873 	pop	de
      001940 D5                    5874 	push	de
      001941 1A                    5875 	ld	a, (de)
      001942 21r5Er00              5876 	ld	hl, #_playerDrawX
      001945 46                    5877 	ld	b, (hl)
      001946 90                    5878 	sub	a, b
      001947 6F                    5879 	ld	l, a
                                   5880 ;	spillPairReg hl
                                   5881 ;	spillPairReg hl
                                   5882 ;main.c:295: if (value >= 0) return value;
      001948 CB 7D                 5883 	bit	7, l
      00194A 28 03                 5884 	jr	Z, 00128$
                                   5885 ;main.c:296: else return - value;
      00194C AF                    5886 	xor	a, a
      00194D 95                    5887 	sub	a, l
      00194E 6F                    5888 	ld	l, a
                                   5889 ;	spillPairReg hl
                                   5890 ;	spillPairReg hl
                                   5891 ;main.c:667: if (abs(eptr->x - playerDrawX) <= 8 ) {
      00194F                       5892 00128$:
      00194F 5D                    5893 	ld	e, l
      001950 3E 08                 5894 	ld	a,#0x08
      001952 57                    5895 	ld	d,a
      001953 95                    5896 	sub	a, l
      001954 CB 7B                 5897 	bit	7, e
      001956 28 07                 5898 	jr	Z, 00216$
      001958 CB 7A                 5899 	bit	7, d
      00195A 20 08                 5900 	jr	NZ, 00217$
      00195C BF                    5901 	cp	a, a
      00195D 18 05                 5902 	jr	00217$
      00195F                       5903 00216$:
      00195F CB 7A                 5904 	bit	7, d
      001961 28 01                 5905 	jr	Z, 00217$
      001963 37                    5906 	scf
      001964                       5907 00217$:
      001964 38 7B                 5908 	jr	C, 00104$
                                   5909 ;main.c:668: if (abs(eptr->y - playerDrawY) <= 8) {
      001966 D1                    5910 	pop	de
      001967 D5                    5911 	push	de
      001968 13                    5912 	inc	de
      001969 13                    5913 	inc	de
      00196A 1A                    5914 	ld	a, (de)
      00196B 21r5Fr00              5915 	ld	hl, #_playerDrawY
      00196E 46                    5916 	ld	b, (hl)
      00196F 90                    5917 	sub	a, b
      001970 6F                    5918 	ld	l, a
                                   5919 ;	spillPairReg hl
                                   5920 ;	spillPairReg hl
                                   5921 ;main.c:295: if (value >= 0) return value;
      001971 CB 7D                 5922 	bit	7, l
      001973 28 03                 5923 	jr	Z, 00132$
                                   5924 ;main.c:296: else return - value;
      001975 AF                    5925 	xor	a, a
      001976 95                    5926 	sub	a, l
      001977 6F                    5927 	ld	l, a
                                   5928 ;	spillPairReg hl
                                   5929 ;	spillPairReg hl
                                   5930 ;main.c:668: if (abs(eptr->y - playerDrawY) <= 8) {
      001978                       5931 00132$:
      001978 5D                    5932 	ld	e, l
      001979 3E 08                 5933 	ld	a,#0x08
      00197B 57                    5934 	ld	d,a
      00197C 95                    5935 	sub	a, l
      00197D CB 7B                 5936 	bit	7, e
      00197F 28 07                 5937 	jr	Z, 00218$
      001981 CB 7A                 5938 	bit	7, d
      001983 20 08                 5939 	jr	NZ, 00219$
      001985 BF                    5940 	cp	a, a
      001986 18 05                 5941 	jr	00219$
      001988                       5942 00218$:
      001988 CB 7A                 5943 	bit	7, d
      00198A 28 01                 5944 	jr	Z, 00219$
      00198C 37                    5945 	scf
      00198D                       5946 00219$:
      00198D 38 52                 5947 	jr	C, 00104$
                                   5948 ;main.c:669: set_sprite_tile(10+(i<<1), 0x7f);
      00198F 79                    5949 	ld	a, c
      001990 87                    5950 	add	a, a
      001991 C6 0A                 5951 	add	a, #0x0a
                                   5952 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001993 6F                    5953 	ld	l, a
      001994 11r00r00              5954 	ld	de, #_shadow_OAM+0
                                   5955 ;	spillPairReg hl
                                   5956 ;	spillPairReg hl
      001997 26 00                 5957 	ld	h, #0x00
                                   5958 ;	spillPairReg hl
                                   5959 ;	spillPairReg hl
      001999 29                    5960 	add	hl, hl
      00199A 29                    5961 	add	hl, hl
      00199B 19                    5962 	add	hl, de
      00199C 23                    5963 	inc	hl
      00199D 23                    5964 	inc	hl
      00199E 36 7F                 5965 	ld	(hl), #0x7f
                                   5966 ;main.c:670: set_sprite_tile(10+(i<<1)+1, 0x7f);
      0019A0 79                    5967 	ld	a, c
      0019A1 87                    5968 	add	a, a
      0019A2 C6 0B                 5969 	add	a, #0x0b
      0019A4 47                    5970 	ld	b, a
                                   5971 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0019A5 11r00r00              5972 	ld	de, #_shadow_OAM+0
      0019A8 68                    5973 	ld	l, b
                                   5974 ;	spillPairReg hl
                                   5975 ;	spillPairReg hl
      0019A9 26 00                 5976 	ld	h, #0x00
                                   5977 ;	spillPairReg hl
                                   5978 ;	spillPairReg hl
      0019AB 29                    5979 	add	hl, hl
      0019AC 29                    5980 	add	hl, hl
      0019AD 19                    5981 	add	hl, de
      0019AE 23                    5982 	inc	hl
      0019AF 23                    5983 	inc	hl
      0019B0 36 7F                 5984 	ld	(hl), #0x7f
                                   5985 ;main.c:671: eptr->alive = 0;
      0019B2 F8 04                 5986 	ldhl	sp,	#4
      0019B4 2A                    5987 	ld	a,	(hl+)
      0019B5 66                    5988 	ld	h, (hl)
      0019B6 6F                    5989 	ld	l, a
      0019B7 36 00                 5990 	ld	(hl), #0x00
                                   5991 ;main.c:672: eptr->visible = 0;
      0019B9 F8 02                 5992 	ldhl	sp,	#2
      0019BB 2A                    5993 	ld	a,	(hl+)
      0019BC 66                    5994 	ld	h, (hl)
      0019BD 6F                    5995 	ld	l, a
      0019BE 36 00                 5996 	ld	(hl), #0x00
                                   5997 ;main.c:673: takeDamage(eptr->damage);
      0019C0 D1                    5998 	pop	de
      0019C1 D5                    5999 	push	de
      0019C2 21 0B 00              6000 	ld	hl, #0x000b
      0019C5 19                    6001 	add	hl, de
      0019C6 5D                    6002 	ld	e, l
      0019C7 54                    6003 	ld	d, h
      0019C8 1A                    6004 	ld	a, (de)
      0019C9 16 00                 6005 	ld	d, #0x00
      0019CB C5                    6006 	push	bc
      0019CC 5F                    6007 	ld	e, a
      0019CD D5                    6008 	push	de
      0019CE CDrA6r18              6009 	call	_takeDamage
      0019D1 E1                    6010 	pop	hl
      0019D2 AF                    6011 	xor	a, a
      0019D3 F5                    6012 	push	af
      0019D4 33                    6013 	inc	sp
      0019D5 CDrF8r11              6014 	call	_initEnemies
      0019D8 33                    6015 	inc	sp
      0019D9 AF                    6016 	xor	a, a
      0019DA F5                    6017 	push	af
      0019DB 33                    6018 	inc	sp
      0019DC CDr20r0B              6019 	call	_playSound
      0019DF 33                    6020 	inc	sp
      0019E0 C1                    6021 	pop	bc
      0019E1                       6022 00104$:
                                   6023 ;main.c:681: struct Projectile *pptr = projectiles;
      0019E1 F8 14                 6024 	ldhl	sp,	#20
      0019E3 3Er50                 6025 	ld	a, #<(_projectiles)
      0019E5 22                    6026 	ld	(hl+), a
      0019E6 36s00                 6027 	ld	(hl), #>(_projectiles)
                                   6028 ;main.c:683: while (j < PROJECTILECOUNT) {
      0019E8 D1                    6029 	pop	de
      0019E9 D5                    6030 	push	de
      0019EA 21 02 00              6031 	ld	hl, #0x0002
      0019ED 19                    6032 	add	hl, de
      0019EE E5                    6033 	push	hl
      0019EF 7D                    6034 	ld	a, l
      0019F0 F8 08                 6035 	ldhl	sp,	#8
      0019F2 77                    6036 	ld	(hl), a
      0019F3 E1                    6037 	pop	hl
      0019F4 7C                    6038 	ld	a, h
      0019F5 F8 07                 6039 	ldhl	sp,	#7
      0019F7 77                    6040 	ld	(hl), a
      0019F8 D1                    6041 	pop	de
      0019F9 D5                    6042 	push	de
      0019FA 21 08 00              6043 	ld	hl, #0x0008
      0019FD 19                    6044 	add	hl, de
      0019FE E5                    6045 	push	hl
      0019FF 7D                    6046 	ld	a, l
      001A00 F8 0A                 6047 	ldhl	sp,	#10
      001A02 77                    6048 	ld	(hl), a
      001A03 E1                    6049 	pop	hl
      001A04 7C                    6050 	ld	a, h
      001A05 F8 09                 6051 	ldhl	sp,	#9
      001A07 77                    6052 	ld	(hl), a
      001A08 F8 16                 6053 	ldhl	sp,	#22
      001A0A 36 00                 6054 	ld	(hl), #0x00
      001A0C                       6055 00113$:
      001A0C 21r9Dr07              6056 	ld	hl, #_PROJECTILECOUNT
      001A0F 46                    6057 	ld	b, (hl)
      001A10 F8 16                 6058 	ldhl	sp,	#22
      001A12 7E                    6059 	ld	a, (hl)
      001A13 90                    6060 	sub	a, b
      001A14 D2rC9r1B              6061 	jp	NC, 00121$
                                   6062 ;main.c:684: if (pptr->active) {
      001A17 2B                    6063 	dec	hl
      001A18 2B                    6064 	dec	hl
      001A19 2A                    6065 	ld	a, (hl+)
      001A1A 5F                    6066 	ld	e, a
      001A1B 56                    6067 	ld	d, (hl)
      001A1C 21 09 00              6068 	ld	hl, #0x0009
      001A1F 19                    6069 	add	hl, de
      001A20 E5                    6070 	push	hl
      001A21 7D                    6071 	ld	a, l
      001A22 F8 0C                 6072 	ldhl	sp,	#12
      001A24 77                    6073 	ld	(hl), a
      001A25 E1                    6074 	pop	hl
      001A26 7C                    6075 	ld	a, h
      001A27 F8 0B                 6076 	ldhl	sp,	#11
      001A29 32                    6077 	ld	(hl-), a
      001A2A 2A                    6078 	ld	a, (hl+)
      001A2B 5F                    6079 	ld	e, a
      001A2C 56                    6080 	ld	d, (hl)
      001A2D 1A                    6081 	ld	a, (de)
      001A2E B7                    6082 	or	a, a
      001A2F CArB0r1B              6083 	jp	Z, 00112$
                                   6084 ;main.c:685: if (eptr->x > pptr->x - 8 && eptr->x - (8>>(eptr->spriteCount-1)) < pptr->x) {
      001A32 D1                    6085 	pop	de
      001A33 D5                    6086 	push	de
      001A34 1A                    6087 	ld	a, (de)
      001A35 F8 12                 6088 	ldhl	sp,	#18
      001A37 22                    6089 	ld	(hl+), a
      001A38 13                    6090 	inc	de
      001A39 1A                    6091 	ld	a, (de)
      001A3A 22                    6092 	ld	(hl+), a
      001A3B 2A                    6093 	ld	a, (hl+)
      001A3C 5F                    6094 	ld	e, a
      001A3D 56                    6095 	ld	d, (hl)
      001A3E 1A                    6096 	ld	a, (de)
      001A3F F8 10                 6097 	ldhl	sp,	#16
      001A41 22                    6098 	ld	(hl+), a
      001A42 13                    6099 	inc	de
      001A43 1A                    6100 	ld	a, (de)
      001A44 32                    6101 	ld	(hl-), a
      001A45 2A                    6102 	ld	a, (hl+)
      001A46 46                    6103 	ld	b, (hl)
      001A47 5F                    6104 	ld	e, a
      001A48 50                    6105 	ld	d, b
      001A49 21 08 00              6106 	ld	hl, #0x0008
      001A4C 7B                    6107 	ld	a, e
      001A4D 95                    6108 	sub	a, l
      001A4E 5F                    6109 	ld	e, a
      001A4F 7A                    6110 	ld	a, d
      001A50 9C                    6111 	sbc	a, h
      001A51 F8 0F                 6112 	ldhl	sp,	#15
      001A53 32                    6113 	ld	(hl-), a
      001A54 73                    6114 	ld	(hl), e
      001A55 F8 0E                 6115 	ldhl	sp,	#14
      001A57 5D                    6116 	ld	e, l
      001A58 54                    6117 	ld	d, h
      001A59 F8 12                 6118 	ldhl	sp,	#18
      001A5B 1A                    6119 	ld	a, (de)
      001A5C 13                    6120 	inc	de
      001A5D 96                    6121 	sub	a, (hl)
      001A5E 23                    6122 	inc	hl
      001A5F 1A                    6123 	ld	a, (de)
      001A60 9E                    6124 	sbc	a, (hl)
      001A61 1A                    6125 	ld	a, (de)
      001A62 57                    6126 	ld	d, a
      001A63 CB 7E                 6127 	bit	7, (hl)
      001A65 28 07                 6128 	jr	Z, 00220$
      001A67 CB 7A                 6129 	bit	7, d
      001A69 20 08                 6130 	jr	NZ, 00221$
      001A6B BF                    6131 	cp	a, a
      001A6C 18 05                 6132 	jr	00221$
      001A6E                       6133 00220$:
      001A6E CB 7A                 6134 	bit	7, d
      001A70 28 01                 6135 	jr	Z, 00221$
      001A72 37                    6136 	scf
      001A73                       6137 00221$:
      001A73 D2rB0r1B              6138 	jp	NC, 00112$
      001A76 F8 08                 6139 	ldhl	sp,#8
      001A78 2A                    6140 	ld	a, (hl+)
      001A79 5F                    6141 	ld	e, a
      001A7A 56                    6142 	ld	d, (hl)
      001A7B 1A                    6143 	ld	a, (de)
      001A7C 47                    6144 	ld	b, a
      001A7D 05                    6145 	dec	b
      001A7E F8 0C                 6146 	ldhl	sp,	#12
      001A80 3E 08                 6147 	ld	a, #0x08
      001A82 22                    6148 	ld	(hl+), a
      001A83 AF                    6149 	xor	a, a
      001A84 77                    6150 	ld	(hl), a
      001A85 04                    6151 	inc	b
      001A86 18 07                 6152 	jr	00223$
      001A88                       6153 00222$:
      001A88 F8 0D                 6154 	ldhl	sp,	#13
      001A8A CB 2E                 6155 	sra	(hl)
      001A8C 2B                    6156 	dec	hl
      001A8D CB 1E                 6157 	rr	(hl)
      001A8F                       6158 00223$:
      001A8F 05                    6159 	dec	b
      001A90 20 F6                 6160 	jr	NZ, 00222$
      001A92 F8 12                 6161 	ldhl	sp,#18
      001A94 2A                    6162 	ld	a, (hl+)
      001A95 5F                    6163 	ld	e, a
      001A96 56                    6164 	ld	d, (hl)
      001A97 F8 0C                 6165 	ldhl	sp,	#12
      001A99 2A                    6166 	ld	a,	(hl+)
      001A9A 66                    6167 	ld	h, (hl)
      001A9B 6F                    6168 	ld	l, a
      001A9C 7B                    6169 	ld	a, e
      001A9D 95                    6170 	sub	a, l
      001A9E 5F                    6171 	ld	e, a
      001A9F 7A                    6172 	ld	a, d
      001AA0 9C                    6173 	sbc	a, h
      001AA1 43                    6174 	ld	b, e
      001AA2 F8 12                 6175 	ldhl	sp,	#18
      001AA4 70                    6176 	ld	(hl), b
      001AA5 23                    6177 	inc	hl
      001AA6 77                    6178 	ld	(hl), a
      001AA7 F8 12                 6179 	ldhl	sp,	#18
      001AA9 5D                    6180 	ld	e, l
      001AAA 54                    6181 	ld	d, h
      001AAB F8 10                 6182 	ldhl	sp,	#16
      001AAD 1A                    6183 	ld	a, (de)
      001AAE 13                    6184 	inc	de
      001AAF 96                    6185 	sub	a, (hl)
      001AB0 23                    6186 	inc	hl
      001AB1 1A                    6187 	ld	a, (de)
      001AB2 9E                    6188 	sbc	a, (hl)
      001AB3 1A                    6189 	ld	a, (de)
      001AB4 57                    6190 	ld	d, a
      001AB5 CB 7E                 6191 	bit	7, (hl)
      001AB7 28 07                 6192 	jr	Z, 00224$
      001AB9 CB 7A                 6193 	bit	7, d
      001ABB 20 08                 6194 	jr	NZ, 00225$
      001ABD BF                    6195 	cp	a, a
      001ABE 18 05                 6196 	jr	00225$
      001AC0                       6197 00224$:
      001AC0 CB 7A                 6198 	bit	7, d
      001AC2 28 01                 6199 	jr	Z, 00225$
      001AC4 37                    6200 	scf
      001AC5                       6201 00225$:
      001AC5 D2rB0r1B              6202 	jp	NC, 00112$
                                   6203 ;main.c:686: if (eptr->y > pptr->y - 8 && eptr->y -(8>>(eptr->spriteCount-1)) < pptr->y ) {
      001AC8 F8 06                 6204 	ldhl	sp,#6
      001ACA 2A                    6205 	ld	a, (hl+)
      001ACB 5F                    6206 	ld	e, a
      001ACC 56                    6207 	ld	d, (hl)
      001ACD 1A                    6208 	ld	a, (de)
      001ACE F8 12                 6209 	ldhl	sp,	#18
      001AD0 22                    6210 	ld	(hl+), a
      001AD1 13                    6211 	inc	de
      001AD2 1A                    6212 	ld	a, (de)
      001AD3 22                    6213 	ld	(hl+), a
      001AD4 2A                    6214 	ld	a, (hl+)
      001AD5 66                    6215 	ld	h, (hl)
                                   6216 ;	spillPairReg hl
                                   6217 ;	spillPairReg hl
      001AD6 6F                    6218 	ld	l, a
                                   6219 ;	spillPairReg hl
                                   6220 ;	spillPairReg hl
      001AD7 23                    6221 	inc	hl
      001AD8 23                    6222 	inc	hl
      001AD9 5D                    6223 	ld	e, l
      001ADA 54                    6224 	ld	d, h
      001ADB 1A                    6225 	ld	a, (de)
      001ADC F8 0E                 6226 	ldhl	sp,	#14
      001ADE 22                    6227 	ld	(hl+), a
      001ADF 13                    6228 	inc	de
      001AE0 1A                    6229 	ld	a, (de)
      001AE1 77                    6230 	ld	(hl), a
      001AE2 F8 0E                 6231 	ldhl	sp,	#14
      001AE4 2A                    6232 	ld	a, (hl+)
      001AE5 46                    6233 	ld	b, (hl)
      001AE6 5F                    6234 	ld	e, a
      001AE7 50                    6235 	ld	d, b
      001AE8 21 08 00              6236 	ld	hl, #0x0008
      001AEB 7B                    6237 	ld	a, e
      001AEC 95                    6238 	sub	a, l
      001AED 5F                    6239 	ld	e, a
      001AEE 7A                    6240 	ld	a, d
      001AEF 9C                    6241 	sbc	a, h
      001AF0 F8 11                 6242 	ldhl	sp,	#17
      001AF2 32                    6243 	ld	(hl-), a
      001AF3 73                    6244 	ld	(hl), e
      001AF4 F8 10                 6245 	ldhl	sp,	#16
      001AF6 5D                    6246 	ld	e, l
      001AF7 54                    6247 	ld	d, h
      001AF8 F8 12                 6248 	ldhl	sp,	#18
      001AFA 1A                    6249 	ld	a, (de)
      001AFB 13                    6250 	inc	de
      001AFC 96                    6251 	sub	a, (hl)
      001AFD 23                    6252 	inc	hl
      001AFE 1A                    6253 	ld	a, (de)
      001AFF 9E                    6254 	sbc	a, (hl)
      001B00 1A                    6255 	ld	a, (de)
      001B01 57                    6256 	ld	d, a
      001B02 CB 7E                 6257 	bit	7, (hl)
      001B04 28 07                 6258 	jr	Z, 00226$
      001B06 CB 7A                 6259 	bit	7, d
      001B08 20 08                 6260 	jr	NZ, 00227$
      001B0A BF                    6261 	cp	a, a
      001B0B 18 05                 6262 	jr	00227$
      001B0D                       6263 00226$:
      001B0D CB 7A                 6264 	bit	7, d
      001B0F 28 01                 6265 	jr	Z, 00227$
      001B11 37                    6266 	scf
      001B12                       6267 00227$:
      001B12 D2rB0r1B              6268 	jp	NC, 00112$
      001B15 F8 12                 6269 	ldhl	sp,#18
      001B17 2A                    6270 	ld	a, (hl+)
      001B18 5F                    6271 	ld	e, a
      001B19 56                    6272 	ld	d, (hl)
      001B1A F8 0C                 6273 	ldhl	sp,	#12
      001B1C 2A                    6274 	ld	a,	(hl+)
      001B1D 66                    6275 	ld	h, (hl)
      001B1E 6F                    6276 	ld	l, a
      001B1F 7B                    6277 	ld	a, e
      001B20 95                    6278 	sub	a, l
      001B21 5F                    6279 	ld	e, a
      001B22 7A                    6280 	ld	a, d
      001B23 9C                    6281 	sbc	a, h
      001B24 43                    6282 	ld	b, e
      001B25 F8 12                 6283 	ldhl	sp,	#18
      001B27 70                    6284 	ld	(hl), b
      001B28 23                    6285 	inc	hl
      001B29 77                    6286 	ld	(hl), a
      001B2A F8 12                 6287 	ldhl	sp,	#18
      001B2C 5D                    6288 	ld	e, l
      001B2D 54                    6289 	ld	d, h
      001B2E F8 0E                 6290 	ldhl	sp,	#14
      001B30 1A                    6291 	ld	a, (de)
      001B31 13                    6292 	inc	de
      001B32 96                    6293 	sub	a, (hl)
      001B33 23                    6294 	inc	hl
      001B34 1A                    6295 	ld	a, (de)
      001B35 9E                    6296 	sbc	a, (hl)
      001B36 1A                    6297 	ld	a, (de)
      001B37 57                    6298 	ld	d, a
      001B38 CB 7E                 6299 	bit	7, (hl)
      001B3A 28 07                 6300 	jr	Z, 00228$
      001B3C CB 7A                 6301 	bit	7, d
      001B3E 20 08                 6302 	jr	NZ, 00229$
      001B40 BF                    6303 	cp	a, a
      001B41 18 05                 6304 	jr	00229$
      001B43                       6305 00228$:
      001B43 CB 7A                 6306 	bit	7, d
      001B45 28 01                 6307 	jr	Z, 00229$
      001B47 37                    6308 	scf
      001B48                       6309 00229$:
      001B48 30 66                 6310 	jr	NC, 00112$
                                   6311 ;main.c:687: set_sprite_tile(10+(i<<1), 0x7f);
      001B4A 79                    6312 	ld	a, c
      001B4B 87                    6313 	add	a, a
      001B4C 47                    6314 	ld	b, a
      001B4D C6 0A                 6315 	add	a, #0x0a
      001B4F 5F                    6316 	ld	e, a
                                   6317 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001B50 26 00                 6318 	ld	h, #0x00
                                   6319 ;	spillPairReg hl
                                   6320 ;	spillPairReg hl
      001B52 6B                    6321 	ld	l, e
      001B53 29                    6322 	add	hl, hl
      001B54 29                    6323 	add	hl, hl
      001B55 11r00r00              6324 	ld	de, #_shadow_OAM
      001B58 19                    6325 	add	hl, de
      001B59 23                    6326 	inc	hl
      001B5A 23                    6327 	inc	hl
      001B5B 36 7F                 6328 	ld	(hl), #0x7f
                                   6329 ;main.c:688: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001B5D 78                    6330 	ld	a, b
      001B5E C6 0B                 6331 	add	a, #0x0b
      001B60 47                    6332 	ld	b, a
                                   6333 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001B61 26 00                 6334 	ld	h, #0x00
                                   6335 ;	spillPairReg hl
                                   6336 ;	spillPairReg hl
      001B63 68                    6337 	ld	l, b
      001B64 29                    6338 	add	hl, hl
      001B65 29                    6339 	add	hl, hl
      001B66 11r00r00              6340 	ld	de, #_shadow_OAM
      001B69 19                    6341 	add	hl, de
      001B6A 23                    6342 	inc	hl
      001B6B 23                    6343 	inc	hl
      001B6C 36 7F                 6344 	ld	(hl), #0x7f
                                   6345 ;main.c:689: eptr->alive = 0;
      001B6E F8 04                 6346 	ldhl	sp,	#4
      001B70 2A                    6347 	ld	a,	(hl+)
      001B71 66                    6348 	ld	h, (hl)
      001B72 6F                    6349 	ld	l, a
      001B73 36 00                 6350 	ld	(hl), #0x00
                                   6351 ;main.c:690: eptr->visible = 0;
      001B75 F8 02                 6352 	ldhl	sp,	#2
      001B77 2A                    6353 	ld	a,	(hl+)
      001B78 66                    6354 	ld	h, (hl)
      001B79 6F                    6355 	ld	l, a
      001B7A 36 00                 6356 	ld	(hl), #0x00
                                   6357 ;main.c:691: initEnemies(0);
      001B7C C5                    6358 	push	bc
      001B7D AF                    6359 	xor	a, a
      001B7E F5                    6360 	push	af
      001B7F 33                    6361 	inc	sp
      001B80 CDrF8r11              6362 	call	_initEnemies
      001B83 33                    6363 	inc	sp
      001B84 C1                    6364 	pop	bc
                                   6365 ;main.c:692: set_sprite_tile(30+j, 0x7f);
      001B85 F8 16                 6366 	ldhl	sp,	#22
      001B87 7E                    6367 	ld	a, (hl)
      001B88 C6 1E                 6368 	add	a, #0x1e
      001B8A 47                    6369 	ld	b, a
                                   6370 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001B8B 68                    6371 	ld	l, b
                                   6372 ;	spillPairReg hl
                                   6373 ;	spillPairReg hl
      001B8C 26 00                 6374 	ld	h, #0x00
                                   6375 ;	spillPairReg hl
                                   6376 ;	spillPairReg hl
      001B8E 29                    6377 	add	hl, hl
      001B8F 29                    6378 	add	hl, hl
      001B90 11r00r00              6379 	ld	de, #_shadow_OAM
      001B93 19                    6380 	add	hl, de
      001B94 23                    6381 	inc	hl
      001B95 23                    6382 	inc	hl
      001B96 36 7F                 6383 	ld	(hl), #0x7f
                                   6384 ;main.c:693: playSound(0);
      001B98 C5                    6385 	push	bc
      001B99 AF                    6386 	xor	a, a
      001B9A F5                    6387 	push	af
      001B9B 33                    6388 	inc	sp
      001B9C CDr20r0B              6389 	call	_playSound
      001B9F 33                    6390 	inc	sp
      001BA0 C1                    6391 	pop	bc
                                   6392 ;main.c:694: pptr->active = 0;
      001BA1 F8 0A                 6393 	ldhl	sp,	#10
      001BA3 2A                    6394 	ld	a,	(hl+)
      001BA4 66                    6395 	ld	h, (hl)
      001BA5 6F                    6396 	ld	l, a
      001BA6 36 00                 6397 	ld	(hl), #0x00
                                   6398 ;main.c:695: incrementScore();
      001BA8 C5                    6399 	push	bc
      001BA9 CDrDDr08              6400 	call	_incrementScore
      001BAC CDrB3r08              6401 	call	_updateScore
      001BAF C1                    6402 	pop	bc
      001BB0                       6403 00112$:
                                   6404 ;main.c:700: j++;
      001BB0 F8 16                 6405 	ldhl	sp,	#22
      001BB2 34                    6406 	inc	(hl)
                                   6407 ;main.c:701: pptr++;
      001BB3 2B                    6408 	dec	hl
      001BB4 2B                    6409 	dec	hl
      001BB5 2A                    6410 	ld	a, (hl+)
      001BB6 5F                    6411 	ld	e, a
      001BB7 56                    6412 	ld	d, (hl)
      001BB8 21 0C 00              6413 	ld	hl, #0x000c
      001BBB 19                    6414 	add	hl, de
      001BBC E5                    6415 	push	hl
      001BBD 7D                    6416 	ld	a, l
      001BBE F8 16                 6417 	ldhl	sp,	#22
      001BC0 77                    6418 	ld	(hl), a
      001BC1 E1                    6419 	pop	hl
      001BC2 7C                    6420 	ld	a, h
      001BC3 F8 15                 6421 	ldhl	sp,	#21
      001BC5 77                    6422 	ld	(hl), a
      001BC6 C3r0Cr1A              6423 	jp	00113$
                                   6424 ;main.c:704: break;
      001BC9                       6425 00121$:
                                   6426 ;main.c:707: if (enemyCollisionCount == 0) {
      001BC9 FAr68r00              6427 	ld	a, (#_enemyCollisionCount)
      001BCC B7                    6428 	or	a, a
      001BCD 20 09                 6429 	jr	NZ, 00123$
                                   6430 ;main.c:708: enemyCollisionCount = ENEMYCOUNT - 1;
      001BCF FAr8Cr07              6431 	ld	a, (#_ENEMYCOUNT)
      001BD2 3D                    6432 	dec	a
      001BD3 EAr68r00              6433 	ld	(#_enemyCollisionCount),a
      001BD6 18 04                 6434 	jr	00138$
      001BD8                       6435 00123$:
                                   6436 ;main.c:711: enemyCollisionCount--;
      001BD8 21r68r00              6437 	ld	hl, #_enemyCollisionCount
      001BDB 35                    6438 	dec	(hl)
      001BDC                       6439 00138$:
                                   6440 ;main.c:716: }
      001BDC E8 17                 6441 	add	sp, #23
      001BDE C9                    6442 	ret
                                   6443 ;main.c:719: void setGunIcon() {
                                   6444 ;	---------------------------------
                                   6445 ; Function setGunIcon
                                   6446 ; ---------------------------------
      001BDF                       6447 _setGunIcon::
                                   6448 ;main.c:722: set_win_tiles(15, 0,1,1,gunMap+currentGun);
      001BDF 01r6Br00              6449 	ld	bc, #_gunMap+0
      001BE2 79                    6450 	ld	a, c
      001BE3 21r69r00              6451 	ld	hl, #_currentGun
      001BE6 86                    6452 	add	a, (hl)
      001BE7 4F                    6453 	ld	c, a
      001BE8 30 01                 6454 	jr	NC, 00103$
      001BEA 04                    6455 	inc	b
      001BEB                       6456 00103$:
      001BEB C5                    6457 	push	bc
      001BEC 21 01 01              6458 	ld	hl, #0x101
      001BEF E5                    6459 	push	hl
      001BF0 21 0F 00              6460 	ld	hl, #0x0f
      001BF3 E5                    6461 	push	hl
      001BF4 CDr00r00              6462 	call	_set_win_tiles
      001BF7 E8 06                 6463 	add	sp, #6
                                   6464 ;main.c:724: }
      001BF9 C9                    6465 	ret
                                   6466 ;main.c:734: void fire() {
                                   6467 ;	---------------------------------
                                   6468 ; Function fire
                                   6469 ; ---------------------------------
      001BFA                       6470 _fire::
      001BFA E8 FA                 6471 	add	sp, #-6
                                   6472 ;main.c:736: oldestProjectile += 1;
      001BFC 21r54r00              6473 	ld	hl, #_oldestProjectile
      001BFF 34                    6474 	inc	(hl)
      001C00 7E                    6475 	ld	a, (hl)
                                   6476 ;main.c:737: if (oldestProjectile >= PROJECTILECOUNT) {
      001C01 21r9Dr07              6477 	ld	hl, #_PROJECTILECOUNT
      001C04 4E                    6478 	ld	c, (hl)
      001C05 21r54r00              6479 	ld	hl, #_oldestProjectile
      001C08 7E                    6480 	ld	a, (hl)
      001C09 91                    6481 	sub	a, c
      001C0A 38 02                 6482 	jr	C, 00102$
                                   6483 ;main.c:738: oldestProjectile = 0;
      001C0C 36 00                 6484 	ld	(hl), #0x00
      001C0E                       6485 00102$:
                                   6486 ;main.c:741: if (currentGun == 0) {
      001C0E FAr69r00              6487 	ld	a, (#_currentGun)
      001C11 B7                    6488 	or	a, a
      001C12 20 1E                 6489 	jr	NZ, 00104$
                                   6490 ;main.c:742: projectiles[oldestProjectile] = singleGun;
      001C14 21r54r00              6491 	ld	hl, #_oldestProjectile
      001C17 4E                    6492 	ld	c, (hl)
      001C18 06 00                 6493 	ld	b, #0x00
      001C1A 69                    6494 	ld	l, c
      001C1B 60                    6495 	ld	h, b
      001C1C 29                    6496 	add	hl, hl
      001C1D 09                    6497 	add	hl, bc
      001C1E 29                    6498 	add	hl, hl
      001C1F 29                    6499 	add	hl, hl
      001C20 01r50r00              6500 	ld	bc,#_projectiles
      001C23 09                    6501 	add	hl,bc
      001C24 11 0C 00              6502 	ld	de, #0x000c
      001C27 D5                    6503 	push	de
      001C28 11r30r00              6504 	ld	de, #_singleGun
      001C2B D5                    6505 	push	de
      001C2C E5                    6506 	push	hl
      001C2D CDr00r00              6507 	call	___memcpy
      001C30 E8 06                 6508 	add	sp, #6
      001C32                       6509 00104$:
                                   6510 ;main.c:744: if (currentGun == 1) {
      001C32 FAr69r00              6511 	ld	a, (#_currentGun)
      001C35 3D                    6512 	dec	a
      001C36 20 1E                 6513 	jr	NZ, 00106$
                                   6514 ;main.c:745: projectiles[oldestProjectile] = doubleGun;
      001C38 21r54r00              6515 	ld	hl, #_oldestProjectile
      001C3B 4E                    6516 	ld	c, (hl)
      001C3C 06 00                 6517 	ld	b, #0x00
      001C3E 69                    6518 	ld	l, c
      001C3F 60                    6519 	ld	h, b
      001C40 29                    6520 	add	hl, hl
      001C41 09                    6521 	add	hl, bc
      001C42 29                    6522 	add	hl, hl
      001C43 29                    6523 	add	hl, hl
      001C44 01r50r00              6524 	ld	bc,#_projectiles
      001C47 09                    6525 	add	hl,bc
      001C48 11 0C 00              6526 	ld	de, #0x000c
      001C4B D5                    6527 	push	de
      001C4C 11r3Cr00              6528 	ld	de, #_doubleGun
      001C4F D5                    6529 	push	de
      001C50 E5                    6530 	push	hl
      001C51 CDr00r00              6531 	call	___memcpy
      001C54 E8 06                 6532 	add	sp, #6
      001C56                       6533 00106$:
                                   6534 ;main.c:747: if (currentGun == 2) {
      001C56 FAr69r00              6535 	ld	a, (#_currentGun)
      001C59 D6 02                 6536 	sub	a, #0x02
      001C5B 20 1E                 6537 	jr	NZ, 00108$
                                   6538 ;main.c:748: projectiles[oldestProjectile] = missile;
      001C5D 21r54r00              6539 	ld	hl, #_oldestProjectile
      001C60 4E                    6540 	ld	c, (hl)
      001C61 06 00                 6541 	ld	b, #0x00
      001C63 69                    6542 	ld	l, c
      001C64 60                    6543 	ld	h, b
      001C65 29                    6544 	add	hl, hl
      001C66 09                    6545 	add	hl, bc
      001C67 29                    6546 	add	hl, hl
      001C68 29                    6547 	add	hl, hl
      001C69 01r50r00              6548 	ld	bc,#_projectiles
      001C6C 09                    6549 	add	hl,bc
      001C6D 11 0C 00              6550 	ld	de, #0x000c
      001C70 D5                    6551 	push	de
      001C71 11r48r00              6552 	ld	de, #_missile
      001C74 D5                    6553 	push	de
      001C75 E5                    6554 	push	hl
      001C76 CDr00r00              6555 	call	___memcpy
      001C79 E8 06                 6556 	add	sp, #6
      001C7B                       6557 00108$:
                                   6558 ;main.c:750: projectiles[oldestProjectile].x = playerDrawX;
      001C7B 21r54r00              6559 	ld	hl, #_oldestProjectile
      001C7E 4E                    6560 	ld	c, (hl)
      001C7F 06 00                 6561 	ld	b, #0x00
      001C81 69                    6562 	ld	l, c
      001C82 60                    6563 	ld	h, b
      001C83 29                    6564 	add	hl, hl
      001C84 09                    6565 	add	hl, bc
      001C85 29                    6566 	add	hl, hl
      001C86 29                    6567 	add	hl, hl
      001C87 01r50r00              6568 	ld	bc,#_projectiles
      001C8A 09                    6569 	add	hl,bc
      001C8B E5                    6570 	push	hl
      001C8C FAr5Er00              6571 	ld	a, (#_playerDrawX)
      001C8F E1                    6572 	pop	hl
      001C90 0E 00                 6573 	ld	c, #0x00
      001C92 22                    6574 	ld	(hl+), a
      001C93 71                    6575 	ld	(hl), c
                                   6576 ;main.c:751: projectiles[oldestProjectile].y = playerDrawY;
      001C94 21r54r00              6577 	ld	hl, #_oldestProjectile
      001C97 4E                    6578 	ld	c, (hl)
      001C98 06 00                 6579 	ld	b, #0x00
      001C9A 69                    6580 	ld	l, c
      001C9B 60                    6581 	ld	h, b
      001C9C 29                    6582 	add	hl, hl
      001C9D 09                    6583 	add	hl, bc
      001C9E 29                    6584 	add	hl, hl
      001C9F 29                    6585 	add	hl, hl
      001CA0 01r50r00              6586 	ld	bc,#_projectiles
      001CA3 09                    6587 	add	hl,bc
      001CA4 23                    6588 	inc	hl
      001CA5 23                    6589 	inc	hl
      001CA6 E5                    6590 	push	hl
      001CA7 FAr5Fr00              6591 	ld	a, (#_playerDrawY)
      001CAA E1                    6592 	pop	hl
      001CAB 0E 00                 6593 	ld	c, #0x00
      001CAD 22                    6594 	ld	(hl+), a
      001CAE 71                    6595 	ld	(hl), c
                                   6596 ;main.c:752: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      001CAF 21r54r00              6597 	ld	hl, #_oldestProjectile
      001CB2 4E                    6598 	ld	c, (hl)
      001CB3 06 00                 6599 	ld	b, #0x00
      001CB5 69                    6600 	ld	l, c
      001CB6 60                    6601 	ld	h, b
      001CB7 29                    6602 	add	hl, hl
      001CB8 09                    6603 	add	hl, bc
      001CB9 29                    6604 	add	hl, hl
      001CBA 29                    6605 	add	hl, hl
      001CBB 01r50r00              6606 	ld	bc,#_projectiles
      001CBE 09                    6607 	add	hl,bc
      001CBF 5D                    6608 	ld	e, l
      001CC0 54                    6609 	ld	d, h
      001CC1 21 05 00              6610 	ld	hl, #0x0005
      001CC4 19                    6611 	add	hl, de
      001CC5 4D                    6612 	ld	c, l
      001CC6 44                    6613 	ld	b, h
      001CC7 21 07 00              6614 	ld	hl, #0x0007
      001CCA 19                    6615 	add	hl, de
      001CCB 7E                    6616 	ld	a, (hl)
      001CCC C5                    6617 	push	bc
      001CCD F5                    6618 	push	af
      001CCE 33                    6619 	inc	sp
      001CCF FAr56r00              6620 	ld	a, (#_xDir)
      001CD2 F5                    6621 	push	af
      001CD3 33                    6622 	inc	sp
      001CD4 CDr00r00              6623 	call	__muluschar
      001CD7 E1                    6624 	pop	hl
      001CD8 7B                    6625 	ld	a, e
      001CD9 C1                    6626 	pop	bc
      001CDA 02                    6627 	ld	(bc), a
                                   6628 ;main.c:753: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      001CDB 21r54r00              6629 	ld	hl, #_oldestProjectile
      001CDE 4E                    6630 	ld	c, (hl)
      001CDF 06 00                 6631 	ld	b, #0x00
      001CE1 69                    6632 	ld	l, c
      001CE2 60                    6633 	ld	h, b
      001CE3 29                    6634 	add	hl, hl
      001CE4 09                    6635 	add	hl, bc
      001CE5 29                    6636 	add	hl, hl
      001CE6 29                    6637 	add	hl, hl
      001CE7 01r50r00              6638 	ld	bc,#_projectiles
      001CEA 09                    6639 	add	hl,bc
      001CEB 5D                    6640 	ld	e, l
      001CEC 54                    6641 	ld	d, h
      001CED 21 06 00              6642 	ld	hl, #0x0006
      001CF0 19                    6643 	add	hl, de
      001CF1 4D                    6644 	ld	c, l
      001CF2 44                    6645 	ld	b, h
      001CF3 21 07 00              6646 	ld	hl, #0x0007
      001CF6 19                    6647 	add	hl, de
      001CF7 7E                    6648 	ld	a, (hl)
      001CF8 C5                    6649 	push	bc
      001CF9 F5                    6650 	push	af
      001CFA 33                    6651 	inc	sp
      001CFB FAr57r00              6652 	ld	a, (#_yDir)
      001CFE F5                    6653 	push	af
      001CFF 33                    6654 	inc	sp
      001D00 CDr00r00              6655 	call	__muluschar
      001D03 E1                    6656 	pop	hl
      001D04 7B                    6657 	ld	a, e
      001D05 C1                    6658 	pop	bc
      001D06 02                    6659 	ld	(bc), a
                                   6660 ;main.c:736: oldestProjectile += 1;
      001D07 FAr54r00              6661 	ld	a, (#_oldestProjectile)
      001D0A F8 05                 6662 	ldhl	sp,	#5
      001D0C 77                    6663 	ld	(hl), a
                                   6664 ;main.c:742: projectiles[oldestProjectile] = singleGun;
      001D0D 21r54r00              6665 	ld	hl, #_oldestProjectile
      001D10 4E                    6666 	ld	c, (hl)
      001D11 06 00                 6667 	ld	b, #0x00
      001D13 69                    6668 	ld	l, c
      001D14 60                    6669 	ld	h, b
      001D15 29                    6670 	add	hl, hl
      001D16 09                    6671 	add	hl, bc
      001D17 29                    6672 	add	hl, hl
      001D18 29                    6673 	add	hl, hl
                                   6674 ;main.c:758: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      001D19 01r50r00              6675 	ld	bc,#_projectiles
      001D1C 09                    6676 	add	hl,bc
      001D1D 4D                    6677 	ld	c, l
      001D1E 44                    6678 	ld	b, h
      001D1F F8 05                 6679 	ldhl	sp,	#5
      001D21 7E                    6680 	ld	a, (hl)
      001D22 C6 1E                 6681 	add	a, #0x1e
      001D24 77                    6682 	ld	(hl), a
      001D25 21 0B 00              6683 	ld	hl, #0x000b
      001D28 09                    6684 	add	hl, bc
      001D29 7E                    6685 	ld	a, (hl)
      001D2A F8 04                 6686 	ldhl	sp,	#4
      001D2C 77                    6687 	ld	(hl), a
                                   6688 ;main.c:757: if (yDir != 0 && xDir == 0) {
      001D2D FAr57r00              6689 	ld	a, (#_yDir)
      001D30 B7                    6690 	or	a, a
      001D31 CAr71r1E              6691 	jp	Z, 00135$
      001D34 FAr56r00              6692 	ld	a, (#_xDir)
      001D37 B7                    6693 	or	a, a
      001D38 C2r71r1E              6694 	jp	NZ, 00135$
                                   6695 ;main.c:758: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
                                   6696 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001D3B F8 05                 6697 	ldhl	sp,	#5
      001D3D 7E                    6698 	ld	a, (hl)
      001D3E F8 02                 6699 	ldhl	sp,	#2
      001D40 22                    6700 	ld	(hl+), a
      001D41 36 00                 6701 	ld	(hl), #0x00
      001D43 3E 02                 6702 	ld	a, #0x02
      001D45                       6703 00245$:
      001D45 F8 02                 6704 	ldhl	sp,	#2
      001D47 CB 26                 6705 	sla	(hl)
      001D49 23                    6706 	inc	hl
      001D4A CB 16                 6707 	rl	(hl)
      001D4C 3D                    6708 	dec	a
      001D4D 20 F6                 6709 	jr	NZ, 00245$
      001D4F 2B                    6710 	dec	hl
      001D50 2A                    6711 	ld	a, (hl+)
      001D51 5F                    6712 	ld	e, a
      001D52 56                    6713 	ld	d, (hl)
      001D53 21r00r00              6714 	ld	hl, #_shadow_OAM
      001D56 19                    6715 	add	hl, de
      001D57 33                    6716 	inc	sp
      001D58 33                    6717 	inc	sp
      001D59 5D                    6718 	ld	e, l
      001D5A 54                    6719 	ld	d, h
      001D5B D5                    6720 	push	de
      001D5C 21 02 00              6721 	ld	hl, #0x0002
      001D5F 19                    6722 	add	hl, de
      001D60 E5                    6723 	push	hl
      001D61 7D                    6724 	ld	a, l
      001D62 F8 04                 6725 	ldhl	sp,	#4
      001D64 77                    6726 	ld	(hl), a
      001D65 E1                    6727 	pop	hl
      001D66 7C                    6728 	ld	a, h
      001D67 F8 03                 6729 	ldhl	sp,	#3
      001D69 32                    6730 	ld	(hl-), a
      001D6A 2A                    6731 	ld	a, (hl+)
      001D6B 5F                    6732 	ld	e, a
      001D6C 2A                    6733 	ld	a, (hl+)
      001D6D 57                    6734 	ld	d, a
      001D6E 7E                    6735 	ld	a, (hl)
      001D6F 12                    6736 	ld	(de), a
                                   6737 ;main.c:736: oldestProjectile += 1;
      001D70 FAr54r00              6738 	ld	a, (#_oldestProjectile)
                                   6739 ;main.c:758: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      001D73 C6 1E                 6740 	add	a, #0x1e
      001D75 F8 05                 6741 	ldhl	sp,	#5
      001D77 77                    6742 	ld	(hl), a
                                   6743 ;main.c:759: if (yDir == 1) {
      001D78 FAr57r00              6744 	ld	a, (#_yDir)
      001D7B 3D                    6745 	dec	a
      001D7C 20 7A                 6746 	jr	NZ, 00110$
                                   6747 ;main.c:760: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   6748 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001D7E F8 05                 6749 	ldhl	sp,	#5
      001D80 3A                    6750 	ld	a, (hl-)
      001D81 22                    6751 	ld	(hl+), a
      001D82 36 00                 6752 	ld	(hl), #0x00
      001D84 3E 02                 6753 	ld	a, #0x02
      001D86                       6754 00248$:
      001D86 F8 04                 6755 	ldhl	sp,	#4
      001D88 CB 26                 6756 	sla	(hl)
      001D8A 23                    6757 	inc	hl
      001D8B CB 16                 6758 	rl	(hl)
      001D8D 3D                    6759 	dec	a
      001D8E 20 F6                 6760 	jr	NZ, 00248$
      001D90 2B                    6761 	dec	hl
      001D91 2A                    6762 	ld	a, (hl+)
      001D92 5F                    6763 	ld	e, a
      001D93 56                    6764 	ld	d, (hl)
      001D94 21r00r00              6765 	ld	hl, #_shadow_OAM
      001D97 19                    6766 	add	hl, de
      001D98 E5                    6767 	push	hl
      001D99 7D                    6768 	ld	a, l
      001D9A F8 04                 6769 	ldhl	sp,	#4
      001D9C 77                    6770 	ld	(hl), a
      001D9D E1                    6771 	pop	hl
      001D9E 7C                    6772 	ld	a, h
      001D9F F8 03                 6773 	ldhl	sp,	#3
      001DA1 32                    6774 	ld	(hl-), a
      001DA2 2A                    6775 	ld	a, (hl+)
      001DA3 5F                    6776 	ld	e, a
      001DA4 56                    6777 	ld	d, (hl)
      001DA5 21 03 00              6778 	ld	hl, #0x0003
      001DA8 19                    6779 	add	hl, de
      001DA9 E5                    6780 	push	hl
      001DAA 7D                    6781 	ld	a, l
      001DAB F8 06                 6782 	ldhl	sp,	#6
      001DAD 77                    6783 	ld	(hl), a
      001DAE E1                    6784 	pop	hl
      001DAF 7C                    6785 	ld	a, h
      001DB0 F8 05                 6786 	ldhl	sp,	#5
      001DB2 32                    6787 	ld	(hl-), a
      001DB3 2A                    6788 	ld	a,	(hl+)
      001DB4 66                    6789 	ld	h, (hl)
      001DB5 6F                    6790 	ld	l, a
      001DB6 36 40                 6791 	ld	(hl), #0x40
                                   6792 ;main.c:761: projectiles[oldestProjectile].offset = 4;
      001DB8 21r54r00              6793 	ld	hl, #_oldestProjectile
      001DBB 4E                    6794 	ld	c, (hl)
      001DBC 06 00                 6795 	ld	b, #0x00
      001DBE 69                    6796 	ld	l, c
      001DBF 60                    6797 	ld	h, b
      001DC0 29                    6798 	add	hl, hl
      001DC1 09                    6799 	add	hl, bc
      001DC2 29                    6800 	add	hl, hl
      001DC3 29                    6801 	add	hl, hl
      001DC4 E5                    6802 	push	hl
      001DC5 7D                    6803 	ld	a, l
      001DC6 F8 06                 6804 	ldhl	sp,	#6
      001DC8 77                    6805 	ld	(hl), a
      001DC9 E1                    6806 	pop	hl
      001DCA 7C                    6807 	ld	a, h
      001DCB F8 05                 6808 	ldhl	sp,	#5
      001DCD 32                    6809 	ld	(hl-), a
      001DCE 2A                    6810 	ld	a, (hl+)
      001DCF 5F                    6811 	ld	e, a
      001DD0 56                    6812 	ld	d, (hl)
      001DD1 21r50r00              6813 	ld	hl, #_projectiles
      001DD4 19                    6814 	add	hl, de
      001DD5 E5                    6815 	push	hl
      001DD6 7D                    6816 	ld	a, l
      001DD7 F8 04                 6817 	ldhl	sp,	#4
      001DD9 77                    6818 	ld	(hl), a
      001DDA E1                    6819 	pop	hl
      001DDB 7C                    6820 	ld	a, h
      001DDC F8 03                 6821 	ldhl	sp,	#3
      001DDE 32                    6822 	ld	(hl-), a
      001DDF 2A                    6823 	ld	a, (hl+)
      001DE0 5F                    6824 	ld	e, a
      001DE1 56                    6825 	ld	d, (hl)
      001DE2 21 04 00              6826 	ld	hl, #0x0004
      001DE5 19                    6827 	add	hl, de
      001DE6 E5                    6828 	push	hl
      001DE7 7D                    6829 	ld	a, l
      001DE8 F8 06                 6830 	ldhl	sp,	#6
      001DEA 77                    6831 	ld	(hl), a
      001DEB E1                    6832 	pop	hl
      001DEC 7C                    6833 	ld	a, h
      001DED F8 05                 6834 	ldhl	sp,	#5
      001DEF 32                    6835 	ld	(hl-), a
      001DF0 2A                    6836 	ld	a,	(hl+)
      001DF1 66                    6837 	ld	h, (hl)
      001DF2 6F                    6838 	ld	l, a
      001DF3 36 04                 6839 	ld	(hl), #0x04
      001DF5 C3rA2r21              6840 	jp	00136$
      001DF8                       6841 00110$:
                                   6842 ;main.c:764: set_sprite_prop(30+oldestProjectile, 0); 
                                   6843 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001DF8 F8 05                 6844 	ldhl	sp,	#5
      001DFA 3A                    6845 	ld	a, (hl-)
      001DFB 22                    6846 	ld	(hl+), a
      001DFC 36 00                 6847 	ld	(hl), #0x00
      001DFE 3E 02                 6848 	ld	a, #0x02
      001E00                       6849 00249$:
      001E00 F8 04                 6850 	ldhl	sp,	#4
      001E02 CB 26                 6851 	sla	(hl)
      001E04 23                    6852 	inc	hl
      001E05 CB 16                 6853 	rl	(hl)
      001E07 3D                    6854 	dec	a
      001E08 20 F6                 6855 	jr	NZ, 00249$
      001E0A 11r00r00              6856 	ld	de, #_shadow_OAM
      001E0D 3A                    6857 	ld	a, (hl-)
      001E0E 6E                    6858 	ld	l, (hl)
      001E0F 67                    6859 	ld	h, a
      001E10 19                    6860 	add	hl, de
      001E11 E5                    6861 	push	hl
      001E12 7D                    6862 	ld	a, l
      001E13 F8 04                 6863 	ldhl	sp,	#4
      001E15 77                    6864 	ld	(hl), a
      001E16 E1                    6865 	pop	hl
      001E17 7C                    6866 	ld	a, h
      001E18 F8 03                 6867 	ldhl	sp,	#3
      001E1A 32                    6868 	ld	(hl-), a
      001E1B 2A                    6869 	ld	a, (hl+)
      001E1C 5F                    6870 	ld	e, a
      001E1D 56                    6871 	ld	d, (hl)
      001E1E 21 03 00              6872 	ld	hl, #0x0003
      001E21 19                    6873 	add	hl, de
      001E22 E5                    6874 	push	hl
      001E23 7D                    6875 	ld	a, l
      001E24 F8 06                 6876 	ldhl	sp,	#6
      001E26 77                    6877 	ld	(hl), a
      001E27 E1                    6878 	pop	hl
      001E28 7C                    6879 	ld	a, h
      001E29 F8 05                 6880 	ldhl	sp,	#5
      001E2B 32                    6881 	ld	(hl-), a
      001E2C 2A                    6882 	ld	a,	(hl+)
      001E2D 66                    6883 	ld	h, (hl)
      001E2E 6F                    6884 	ld	l, a
      001E2F 36 00                 6885 	ld	(hl), #0x00
                                   6886 ;main.c:765: projectiles[oldestProjectile].offset = 12;
      001E31 21r54r00              6887 	ld	hl, #_oldestProjectile
      001E34 4E                    6888 	ld	c, (hl)
      001E35 06 00                 6889 	ld	b, #0x00
      001E37 69                    6890 	ld	l, c
      001E38 60                    6891 	ld	h, b
      001E39 29                    6892 	add	hl, hl
      001E3A 09                    6893 	add	hl, bc
      001E3B 29                    6894 	add	hl, hl
      001E3C 29                    6895 	add	hl, hl
      001E3D E5                    6896 	push	hl
      001E3E 7D                    6897 	ld	a, l
      001E3F F8 06                 6898 	ldhl	sp,	#6
      001E41 77                    6899 	ld	(hl), a
      001E42 E1                    6900 	pop	hl
      001E43 7C                    6901 	ld	a, h
      001E44 F8 05                 6902 	ldhl	sp,	#5
      001E46 32                    6903 	ld	(hl-), a
      001E47 2A                    6904 	ld	a, (hl+)
      001E48 5F                    6905 	ld	e, a
      001E49 56                    6906 	ld	d, (hl)
      001E4A 21r50r00              6907 	ld	hl, #_projectiles
      001E4D 19                    6908 	add	hl, de
      001E4E E5                    6909 	push	hl
      001E4F 7D                    6910 	ld	a, l
      001E50 F8 04                 6911 	ldhl	sp,	#4
      001E52 77                    6912 	ld	(hl), a
      001E53 E1                    6913 	pop	hl
      001E54 7C                    6914 	ld	a, h
      001E55 F8 03                 6915 	ldhl	sp,	#3
      001E57 32                    6916 	ld	(hl-), a
      001E58 2A                    6917 	ld	a, (hl+)
      001E59 5F                    6918 	ld	e, a
      001E5A 56                    6919 	ld	d, (hl)
      001E5B 21 04 00              6920 	ld	hl, #0x0004
      001E5E 19                    6921 	add	hl, de
      001E5F E5                    6922 	push	hl
      001E60 7D                    6923 	ld	a, l
      001E61 F8 06                 6924 	ldhl	sp,	#6
      001E63 77                    6925 	ld	(hl), a
      001E64 E1                    6926 	pop	hl
      001E65 7C                    6927 	ld	a, h
      001E66 F8 05                 6928 	ldhl	sp,	#5
      001E68 32                    6929 	ld	(hl-), a
      001E69 2A                    6930 	ld	a,	(hl+)
      001E6A 66                    6931 	ld	h, (hl)
      001E6B 6F                    6932 	ld	l, a
      001E6C 36 0C                 6933 	ld	(hl), #0x0c
      001E6E C3rA2r21              6934 	jp	00136$
      001E71                       6935 00135$:
                                   6936 ;main.c:769: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   6937 ;main.c:768: else if (xDir != 0 && yDir == 0) {
      001E71 FAr56r00              6938 	ld	a, (#_xDir)
      001E74 B7                    6939 	or	a, a
      001E75 CArB9r1F              6940 	jp	Z, 00131$
      001E78 FAr57r00              6941 	ld	a, (#_yDir)
      001E7B B7                    6942 	or	a, a
      001E7C C2rB9r1F              6943 	jp	NZ, 00131$
                                   6944 ;main.c:769: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      001E7F F8 04                 6945 	ldhl	sp,	#4
      001E81 34                    6946 	inc	(hl)
      001E82 34                    6947 	inc	(hl)
                                   6948 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001E83 23                    6949 	inc	hl
      001E84 7E                    6950 	ld	a, (hl)
      001E85 F8 02                 6951 	ldhl	sp,	#2
      001E87 22                    6952 	ld	(hl+), a
      001E88 36 00                 6953 	ld	(hl), #0x00
      001E8A 3E 02                 6954 	ld	a, #0x02
      001E8C                       6955 00250$:
      001E8C F8 02                 6956 	ldhl	sp,	#2
      001E8E CB 26                 6957 	sla	(hl)
      001E90 23                    6958 	inc	hl
      001E91 CB 16                 6959 	rl	(hl)
      001E93 3D                    6960 	dec	a
      001E94 20 F6                 6961 	jr	NZ, 00250$
      001E96 2B                    6962 	dec	hl
      001E97 2A                    6963 	ld	a, (hl+)
      001E98 5F                    6964 	ld	e, a
      001E99 56                    6965 	ld	d, (hl)
      001E9A 21r00r00              6966 	ld	hl, #_shadow_OAM
      001E9D 19                    6967 	add	hl, de
      001E9E 33                    6968 	inc	sp
      001E9F 33                    6969 	inc	sp
      001EA0 5D                    6970 	ld	e, l
      001EA1 54                    6971 	ld	d, h
      001EA2 D5                    6972 	push	de
      001EA3 21 02 00              6973 	ld	hl, #0x0002
      001EA6 19                    6974 	add	hl, de
      001EA7 E5                    6975 	push	hl
      001EA8 7D                    6976 	ld	a, l
      001EA9 F8 04                 6977 	ldhl	sp,	#4
      001EAB 77                    6978 	ld	(hl), a
      001EAC E1                    6979 	pop	hl
      001EAD 7C                    6980 	ld	a, h
      001EAE F8 03                 6981 	ldhl	sp,	#3
      001EB0 32                    6982 	ld	(hl-), a
      001EB1 2A                    6983 	ld	a, (hl+)
      001EB2 5F                    6984 	ld	e, a
      001EB3 2A                    6985 	ld	a, (hl+)
      001EB4 57                    6986 	ld	d, a
      001EB5 7E                    6987 	ld	a, (hl)
      001EB6 12                    6988 	ld	(de), a
                                   6989 ;main.c:736: oldestProjectile += 1;
      001EB7 FAr54r00              6990 	ld	a, (#_oldestProjectile)
                                   6991 ;main.c:758: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      001EBA C6 1E                 6992 	add	a, #0x1e
      001EBC F8 05                 6993 	ldhl	sp,	#5
      001EBE 77                    6994 	ld	(hl), a
                                   6995 ;main.c:770: if (xDir == 1) {
      001EBF FAr56r00              6996 	ld	a, (#_xDir)
      001EC2 3D                    6997 	dec	a
      001EC3 20 7A                 6998 	jr	NZ, 00113$
                                   6999 ;main.c:771: set_sprite_prop(30+oldestProjectile, 0);
                                   7000 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001EC5 F8 05                 7001 	ldhl	sp,	#5
      001EC7 3A                    7002 	ld	a, (hl-)
      001EC8 22                    7003 	ld	(hl+), a
      001EC9 36 00                 7004 	ld	(hl), #0x00
      001ECB 3E 02                 7005 	ld	a, #0x02
      001ECD                       7006 00253$:
      001ECD F8 04                 7007 	ldhl	sp,	#4
      001ECF CB 26                 7008 	sla	(hl)
      001ED1 23                    7009 	inc	hl
      001ED2 CB 16                 7010 	rl	(hl)
      001ED4 3D                    7011 	dec	a
      001ED5 20 F6                 7012 	jr	NZ, 00253$
      001ED7 2B                    7013 	dec	hl
      001ED8 2A                    7014 	ld	a, (hl+)
      001ED9 5F                    7015 	ld	e, a
      001EDA 56                    7016 	ld	d, (hl)
      001EDB 21r00r00              7017 	ld	hl, #_shadow_OAM
      001EDE 19                    7018 	add	hl, de
      001EDF E5                    7019 	push	hl
      001EE0 7D                    7020 	ld	a, l
      001EE1 F8 04                 7021 	ldhl	sp,	#4
      001EE3 77                    7022 	ld	(hl), a
      001EE4 E1                    7023 	pop	hl
      001EE5 7C                    7024 	ld	a, h
      001EE6 F8 03                 7025 	ldhl	sp,	#3
      001EE8 32                    7026 	ld	(hl-), a
      001EE9 2A                    7027 	ld	a, (hl+)
      001EEA 5F                    7028 	ld	e, a
      001EEB 56                    7029 	ld	d, (hl)
      001EEC 21 03 00              7030 	ld	hl, #0x0003
      001EEF 19                    7031 	add	hl, de
      001EF0 E5                    7032 	push	hl
      001EF1 7D                    7033 	ld	a, l
      001EF2 F8 06                 7034 	ldhl	sp,	#6
      001EF4 77                    7035 	ld	(hl), a
      001EF5 E1                    7036 	pop	hl
      001EF6 7C                    7037 	ld	a, h
      001EF7 F8 05                 7038 	ldhl	sp,	#5
      001EF9 32                    7039 	ld	(hl-), a
      001EFA 2A                    7040 	ld	a,	(hl+)
      001EFB 66                    7041 	ld	h, (hl)
      001EFC 6F                    7042 	ld	l, a
      001EFD 36 00                 7043 	ld	(hl), #0x00
                                   7044 ;main.c:772: projectiles[oldestProjectile].offset = 12;
      001EFF 21r54r00              7045 	ld	hl, #_oldestProjectile
      001F02 4E                    7046 	ld	c, (hl)
      001F03 06 00                 7047 	ld	b, #0x00
      001F05 69                    7048 	ld	l, c
      001F06 60                    7049 	ld	h, b
      001F07 29                    7050 	add	hl, hl
      001F08 09                    7051 	add	hl, bc
      001F09 29                    7052 	add	hl, hl
      001F0A 29                    7053 	add	hl, hl
      001F0B E5                    7054 	push	hl
      001F0C 7D                    7055 	ld	a, l
      001F0D F8 06                 7056 	ldhl	sp,	#6
      001F0F 77                    7057 	ld	(hl), a
      001F10 E1                    7058 	pop	hl
      001F11 7C                    7059 	ld	a, h
      001F12 F8 05                 7060 	ldhl	sp,	#5
      001F14 32                    7061 	ld	(hl-), a
      001F15 2A                    7062 	ld	a, (hl+)
      001F16 5F                    7063 	ld	e, a
      001F17 56                    7064 	ld	d, (hl)
      001F18 21r50r00              7065 	ld	hl, #_projectiles
      001F1B 19                    7066 	add	hl, de
      001F1C E5                    7067 	push	hl
      001F1D 7D                    7068 	ld	a, l
      001F1E F8 04                 7069 	ldhl	sp,	#4
      001F20 77                    7070 	ld	(hl), a
      001F21 E1                    7071 	pop	hl
      001F22 7C                    7072 	ld	a, h
      001F23 F8 03                 7073 	ldhl	sp,	#3
      001F25 32                    7074 	ld	(hl-), a
      001F26 2A                    7075 	ld	a, (hl+)
      001F27 5F                    7076 	ld	e, a
      001F28 56                    7077 	ld	d, (hl)
      001F29 21 04 00              7078 	ld	hl, #0x0004
      001F2C 19                    7079 	add	hl, de
      001F2D E5                    7080 	push	hl
      001F2E 7D                    7081 	ld	a, l
      001F2F F8 06                 7082 	ldhl	sp,	#6
      001F31 77                    7083 	ld	(hl), a
      001F32 E1                    7084 	pop	hl
      001F33 7C                    7085 	ld	a, h
      001F34 F8 05                 7086 	ldhl	sp,	#5
      001F36 32                    7087 	ld	(hl-), a
      001F37 2A                    7088 	ld	a,	(hl+)
      001F38 66                    7089 	ld	h, (hl)
      001F39 6F                    7090 	ld	l, a
      001F3A 36 0C                 7091 	ld	(hl), #0x0c
      001F3C C3rA2r21              7092 	jp	00136$
      001F3F                       7093 00113$:
                                   7094 ;main.c:775: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
                                   7095 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001F3F F8 05                 7096 	ldhl	sp,	#5
      001F41 3A                    7097 	ld	a, (hl-)
      001F42 22                    7098 	ld	(hl+), a
      001F43 36 00                 7099 	ld	(hl), #0x00
      001F45 3E 02                 7100 	ld	a, #0x02
      001F47                       7101 00254$:
      001F47 F8 04                 7102 	ldhl	sp,	#4
      001F49 CB 26                 7103 	sla	(hl)
      001F4B 23                    7104 	inc	hl
      001F4C CB 16                 7105 	rl	(hl)
      001F4E 3D                    7106 	dec	a
      001F4F 20 F6                 7107 	jr	NZ, 00254$
      001F51 2B                    7108 	dec	hl
      001F52 2A                    7109 	ld	a, (hl+)
      001F53 5F                    7110 	ld	e, a
      001F54 56                    7111 	ld	d, (hl)
      001F55 21r00r00              7112 	ld	hl, #_shadow_OAM
      001F58 19                    7113 	add	hl, de
      001F59 E5                    7114 	push	hl
      001F5A 7D                    7115 	ld	a, l
      001F5B F8 04                 7116 	ldhl	sp,	#4
      001F5D 77                    7117 	ld	(hl), a
      001F5E E1                    7118 	pop	hl
      001F5F 7C                    7119 	ld	a, h
      001F60 F8 03                 7120 	ldhl	sp,	#3
      001F62 32                    7121 	ld	(hl-), a
      001F63 2A                    7122 	ld	a, (hl+)
      001F64 5F                    7123 	ld	e, a
      001F65 56                    7124 	ld	d, (hl)
      001F66 21 03 00              7125 	ld	hl, #0x0003
      001F69 19                    7126 	add	hl, de
      001F6A E5                    7127 	push	hl
      001F6B 7D                    7128 	ld	a, l
      001F6C F8 06                 7129 	ldhl	sp,	#6
      001F6E 77                    7130 	ld	(hl), a
      001F6F E1                    7131 	pop	hl
      001F70 7C                    7132 	ld	a, h
      001F71 F8 05                 7133 	ldhl	sp,	#5
      001F73 32                    7134 	ld	(hl-), a
      001F74 2A                    7135 	ld	a,	(hl+)
      001F75 66                    7136 	ld	h, (hl)
      001F76 6F                    7137 	ld	l, a
      001F77 36 20                 7138 	ld	(hl), #0x20
                                   7139 ;main.c:776: projectiles[oldestProjectile].offset = 12;
      001F79 21r54r00              7140 	ld	hl, #_oldestProjectile
      001F7C 4E                    7141 	ld	c, (hl)
      001F7D 06 00                 7142 	ld	b, #0x00
      001F7F 69                    7143 	ld	l, c
      001F80 60                    7144 	ld	h, b
      001F81 29                    7145 	add	hl, hl
      001F82 09                    7146 	add	hl, bc
      001F83 29                    7147 	add	hl, hl
      001F84 29                    7148 	add	hl, hl
      001F85 E5                    7149 	push	hl
      001F86 7D                    7150 	ld	a, l
      001F87 F8 06                 7151 	ldhl	sp,	#6
      001F89 77                    7152 	ld	(hl), a
      001F8A E1                    7153 	pop	hl
      001F8B 7C                    7154 	ld	a, h
      001F8C F8 05                 7155 	ldhl	sp,	#5
      001F8E 32                    7156 	ld	(hl-), a
      001F8F 2A                    7157 	ld	a, (hl+)
      001F90 5F                    7158 	ld	e, a
      001F91 56                    7159 	ld	d, (hl)
      001F92 21r50r00              7160 	ld	hl, #_projectiles
      001F95 19                    7161 	add	hl, de
      001F96 E5                    7162 	push	hl
      001F97 7D                    7163 	ld	a, l
      001F98 F8 04                 7164 	ldhl	sp,	#4
      001F9A 77                    7165 	ld	(hl), a
      001F9B E1                    7166 	pop	hl
      001F9C 7C                    7167 	ld	a, h
      001F9D F8 03                 7168 	ldhl	sp,	#3
      001F9F 32                    7169 	ld	(hl-), a
      001FA0 2A                    7170 	ld	a, (hl+)
      001FA1 5F                    7171 	ld	e, a
      001FA2 56                    7172 	ld	d, (hl)
      001FA3 21 04 00              7173 	ld	hl, #0x0004
      001FA6 19                    7174 	add	hl, de
      001FA7 E5                    7175 	push	hl
      001FA8 7D                    7176 	ld	a, l
      001FA9 F8 06                 7177 	ldhl	sp,	#6
      001FAB 77                    7178 	ld	(hl), a
      001FAC E1                    7179 	pop	hl
      001FAD 7C                    7180 	ld	a, h
      001FAE F8 05                 7181 	ldhl	sp,	#5
      001FB0 32                    7182 	ld	(hl-), a
      001FB1 2A                    7183 	ld	a,	(hl+)
      001FB2 66                    7184 	ld	h, (hl)
      001FB3 6F                    7185 	ld	l, a
      001FB4 36 0C                 7186 	ld	(hl), #0x0c
      001FB6 C3rA2r21              7187 	jp	00136$
      001FB9                       7188 00131$:
                                   7189 ;main.c:780: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      001FB9 F8 04                 7190 	ldhl	sp,	#4
      001FBB 7E                    7191 	ld	a, (hl)
      001FBC C6 04                 7192 	add	a, #0x04
      001FBE F8 01                 7193 	ldhl	sp,	#1
      001FC0 77                    7194 	ld	(hl), a
                                   7195 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FC1 F8 05                 7196 	ldhl	sp,	#5
      001FC3 3A                    7197 	ld	a, (hl-)
      001FC4 22                    7198 	ld	(hl+), a
      001FC5 36 00                 7199 	ld	(hl), #0x00
      001FC7 3E 02                 7200 	ld	a, #0x02
      001FC9                       7201 00255$:
      001FC9 F8 04                 7202 	ldhl	sp,	#4
      001FCB CB 26                 7203 	sla	(hl)
      001FCD 23                    7204 	inc	hl
      001FCE CB 16                 7205 	rl	(hl)
      001FD0 3D                    7206 	dec	a
      001FD1 20 F6                 7207 	jr	NZ, 00255$
      001FD3 2B                    7208 	dec	hl
      001FD4 2A                    7209 	ld	a, (hl+)
      001FD5 5F                    7210 	ld	e, a
      001FD6 56                    7211 	ld	d, (hl)
      001FD7 21r00r00              7212 	ld	hl, #_shadow_OAM
      001FDA 19                    7213 	add	hl, de
      001FDB E5                    7214 	push	hl
      001FDC 7D                    7215 	ld	a, l
      001FDD F8 04                 7216 	ldhl	sp,	#4
      001FDF 77                    7217 	ld	(hl), a
      001FE0 E1                    7218 	pop	hl
      001FE1 7C                    7219 	ld	a, h
      001FE2 F8 03                 7220 	ldhl	sp,	#3
      001FE4 32                    7221 	ld	(hl-), a
      001FE5 2A                    7222 	ld	a, (hl+)
      001FE6 5F                    7223 	ld	e, a
      001FE7 56                    7224 	ld	d, (hl)
      001FE8 21 02 00              7225 	ld	hl, #0x0002
      001FEB 19                    7226 	add	hl, de
      001FEC E5                    7227 	push	hl
      001FED 7D                    7228 	ld	a, l
      001FEE F8 06                 7229 	ldhl	sp,	#6
      001FF0 77                    7230 	ld	(hl), a
      001FF1 E1                    7231 	pop	hl
      001FF2 7C                    7232 	ld	a, h
      001FF3 F8 05                 7233 	ldhl	sp,	#5
      001FF5 32                    7234 	ld	(hl-), a
      001FF6 2A                    7235 	ld	a, (hl+)
      001FF7 5F                    7236 	ld	e, a
      001FF8 56                    7237 	ld	d, (hl)
      001FF9 F8 01                 7238 	ldhl	sp,	#1
      001FFB 7E                    7239 	ld	a, (hl)
      001FFC 12                    7240 	ld	(de), a
                                   7241 ;main.c:781: if (xDir == 1 && yDir == -1) {
      001FFD FAr56r00              7242 	ld	a, (#_xDir)
      002000 3D                    7243 	dec	a
      002001 3E 01                 7244 	ld	a, #0x01
      002003 28 01                 7245 	jr	Z, 00257$
      002005 AF                    7246 	xor	a, a
      002006                       7247 00257$:
      002006 F8 02                 7248 	ldhl	sp,	#2
      002008 77                    7249 	ld	(hl), a
                                   7250 ;main.c:736: oldestProjectile += 1;
      002009 FAr54r00              7251 	ld	a, (#_oldestProjectile)
      00200C F8 05                 7252 	ldhl	sp,	#5
      00200E 77                    7253 	ld	(hl), a
                                   7254 ;main.c:781: if (xDir == 1 && yDir == -1) {
      00200F FAr57r00              7255 	ld	a, (#_yDir)
      002012 3C                    7256 	inc	a
      002013 3E 01                 7257 	ld	a, #0x01
      002015 28 01                 7258 	jr	Z, 00259$
      002017 AF                    7259 	xor	a, a
      002018                       7260 00259$:
      002018 F8 03                 7261 	ldhl	sp,	#3
                                   7262 ;main.c:758: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00201A 22                    7263 	ld	(hl+), a
      00201B 23                    7264 	inc	hl
      00201C 3A                    7265 	ld	a, (hl-)
      00201D C6 1E                 7266 	add	a, #0x1e
                                   7267 ;main.c:781: if (xDir == 1 && yDir == -1) {
      00201F 32                    7268 	ld	(hl-), a
      002020 2B                    7269 	dec	hl
      002021 7E                    7270 	ld	a, (hl)
      002022 B7                    7271 	or	a, a
      002023 CArA6r20              7272 	jp	Z, 00127$
      002026 23                    7273 	inc	hl
      002027 7E                    7274 	ld	a, (hl)
      002028 B7                    7275 	or	a, a
      002029 28 7B                 7276 	jr	Z, 00127$
                                   7277 ;main.c:782: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      00202B 23                    7278 	inc	hl
      00202C 2A                    7279 	ld	a, (hl+)
      00202D 77                    7280 	ld	(hl), a
                                   7281 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00202E 3A                    7282 	ld	a, (hl-)
      00202F 22                    7283 	ld	(hl+), a
      002030 36 00                 7284 	ld	(hl), #0x00
      002032 3E 02                 7285 	ld	a, #0x02
      002034                       7286 00260$:
      002034 F8 04                 7287 	ldhl	sp,	#4
      002036 CB 26                 7288 	sla	(hl)
      002038 23                    7289 	inc	hl
      002039 CB 16                 7290 	rl	(hl)
      00203B 3D                    7291 	dec	a
      00203C 20 F6                 7292 	jr	NZ, 00260$
      00203E 2B                    7293 	dec	hl
      00203F 2A                    7294 	ld	a, (hl+)
      002040 5F                    7295 	ld	e, a
      002041 56                    7296 	ld	d, (hl)
      002042 21r00r00              7297 	ld	hl, #_shadow_OAM
      002045 19                    7298 	add	hl, de
      002046 E5                    7299 	push	hl
      002047 7D                    7300 	ld	a, l
      002048 F8 04                 7301 	ldhl	sp,	#4
      00204A 77                    7302 	ld	(hl), a
      00204B E1                    7303 	pop	hl
      00204C 7C                    7304 	ld	a, h
      00204D F8 03                 7305 	ldhl	sp,	#3
      00204F 32                    7306 	ld	(hl-), a
      002050 2A                    7307 	ld	a, (hl+)
      002051 5F                    7308 	ld	e, a
      002052 56                    7309 	ld	d, (hl)
      002053 21 03 00              7310 	ld	hl, #0x0003
      002056 19                    7311 	add	hl, de
      002057 E5                    7312 	push	hl
      002058 7D                    7313 	ld	a, l
      002059 F8 06                 7314 	ldhl	sp,	#6
      00205B 77                    7315 	ld	(hl), a
      00205C E1                    7316 	pop	hl
      00205D 7C                    7317 	ld	a, h
      00205E F8 05                 7318 	ldhl	sp,	#5
      002060 32                    7319 	ld	(hl-), a
      002061 2A                    7320 	ld	a,	(hl+)
      002062 66                    7321 	ld	h, (hl)
      002063 6F                    7322 	ld	l, a
      002064 36 00                 7323 	ld	(hl), #0x00
                                   7324 ;main.c:783: projectiles[oldestProjectile].offset = 12;
      002066 21r54r00              7325 	ld	hl, #_oldestProjectile
      002069 4E                    7326 	ld	c, (hl)
      00206A 06 00                 7327 	ld	b, #0x00
      00206C 69                    7328 	ld	l, c
      00206D 60                    7329 	ld	h, b
      00206E 29                    7330 	add	hl, hl
      00206F 09                    7331 	add	hl, bc
      002070 29                    7332 	add	hl, hl
      002071 29                    7333 	add	hl, hl
      002072 E5                    7334 	push	hl
      002073 7D                    7335 	ld	a, l
      002074 F8 06                 7336 	ldhl	sp,	#6
      002076 77                    7337 	ld	(hl), a
      002077 E1                    7338 	pop	hl
      002078 7C                    7339 	ld	a, h
      002079 F8 05                 7340 	ldhl	sp,	#5
      00207B 32                    7341 	ld	(hl-), a
      00207C 2A                    7342 	ld	a, (hl+)
      00207D 5F                    7343 	ld	e, a
      00207E 56                    7344 	ld	d, (hl)
      00207F 21r50r00              7345 	ld	hl, #_projectiles
      002082 19                    7346 	add	hl, de
      002083 E5                    7347 	push	hl
      002084 7D                    7348 	ld	a, l
      002085 F8 04                 7349 	ldhl	sp,	#4
      002087 77                    7350 	ld	(hl), a
      002088 E1                    7351 	pop	hl
      002089 7C                    7352 	ld	a, h
      00208A F8 03                 7353 	ldhl	sp,	#3
      00208C 32                    7354 	ld	(hl-), a
      00208D 2A                    7355 	ld	a, (hl+)
      00208E 5F                    7356 	ld	e, a
      00208F 56                    7357 	ld	d, (hl)
      002090 21 04 00              7358 	ld	hl, #0x0004
      002093 19                    7359 	add	hl, de
      002094 E5                    7360 	push	hl
      002095 7D                    7361 	ld	a, l
      002096 F8 06                 7362 	ldhl	sp,	#6
      002098 77                    7363 	ld	(hl), a
      002099 E1                    7364 	pop	hl
      00209A 7C                    7365 	ld	a, h
      00209B F8 05                 7366 	ldhl	sp,	#5
      00209D 32                    7367 	ld	(hl-), a
      00209E 2A                    7368 	ld	a,	(hl+)
      00209F 66                    7369 	ld	h, (hl)
      0020A0 6F                    7370 	ld	l, a
      0020A1 36 0C                 7371 	ld	(hl), #0x0c
      0020A3 C3rA2r21              7372 	jp	00136$
      0020A6                       7373 00127$:
                                   7374 ;main.c:759: if (yDir == 1) {
      0020A6 FAr57r00              7375 	ld	a, (#_yDir)
      0020A9 3D                    7376 	dec	a
      0020AA 3E 01                 7377 	ld	a, #0x01
      0020AC 28 01                 7378 	jr	Z, 00262$
      0020AE AF                    7379 	xor	a, a
      0020AF                       7380 00262$:
      0020AF F8 05                 7381 	ldhl	sp,	#5
      0020B1 77                    7382 	ld	(hl), a
                                   7383 ;main.c:785: else if (xDir == 1 && yDir == 1) {
      0020B2 F8 02                 7384 	ldhl	sp,	#2
      0020B4 7E                    7385 	ld	a, (hl)
      0020B5 B7                    7386 	or	a, a
      0020B6 CAr39r21              7387 	jp	Z, 00123$
      0020B9 F8 05                 7388 	ldhl	sp,	#5
      0020BB 7E                    7389 	ld	a, (hl)
      0020BC B7                    7390 	or	a, a
      0020BD 28 7A                 7391 	jr	Z, 00123$
                                   7392 ;main.c:786: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      0020BF 2B                    7393 	dec	hl
      0020C0 2A                    7394 	ld	a, (hl+)
      0020C1 77                    7395 	ld	(hl), a
                                   7396 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0020C2 3A                    7397 	ld	a, (hl-)
      0020C3 22                    7398 	ld	(hl+), a
      0020C4 36 00                 7399 	ld	(hl), #0x00
      0020C6 3E 02                 7400 	ld	a, #0x02
      0020C8                       7401 00263$:
      0020C8 F8 04                 7402 	ldhl	sp,	#4
      0020CA CB 26                 7403 	sla	(hl)
      0020CC 23                    7404 	inc	hl
      0020CD CB 16                 7405 	rl	(hl)
      0020CF 3D                    7406 	dec	a
      0020D0 20 F6                 7407 	jr	NZ, 00263$
      0020D2 2B                    7408 	dec	hl
      0020D3 2A                    7409 	ld	a, (hl+)
      0020D4 5F                    7410 	ld	e, a
      0020D5 56                    7411 	ld	d, (hl)
      0020D6 21r00r00              7412 	ld	hl, #_shadow_OAM
      0020D9 19                    7413 	add	hl, de
      0020DA E5                    7414 	push	hl
      0020DB 7D                    7415 	ld	a, l
      0020DC F8 04                 7416 	ldhl	sp,	#4
      0020DE 77                    7417 	ld	(hl), a
      0020DF E1                    7418 	pop	hl
      0020E0 7C                    7419 	ld	a, h
      0020E1 F8 03                 7420 	ldhl	sp,	#3
      0020E3 32                    7421 	ld	(hl-), a
      0020E4 2A                    7422 	ld	a, (hl+)
      0020E5 5F                    7423 	ld	e, a
      0020E6 56                    7424 	ld	d, (hl)
      0020E7 21 03 00              7425 	ld	hl, #0x0003
      0020EA 19                    7426 	add	hl, de
      0020EB E5                    7427 	push	hl
      0020EC 7D                    7428 	ld	a, l
      0020ED F8 06                 7429 	ldhl	sp,	#6
      0020EF 77                    7430 	ld	(hl), a
      0020F0 E1                    7431 	pop	hl
      0020F1 7C                    7432 	ld	a, h
      0020F2 F8 05                 7433 	ldhl	sp,	#5
      0020F4 32                    7434 	ld	(hl-), a
      0020F5 2A                    7435 	ld	a,	(hl+)
      0020F6 66                    7436 	ld	h, (hl)
      0020F7 6F                    7437 	ld	l, a
      0020F8 36 40                 7438 	ld	(hl), #0x40
                                   7439 ;main.c:787: projectiles[oldestProjectile].offset = 4;
      0020FA 21r54r00              7440 	ld	hl, #_oldestProjectile
      0020FD 4E                    7441 	ld	c, (hl)
      0020FE 06 00                 7442 	ld	b, #0x00
      002100 69                    7443 	ld	l, c
      002101 60                    7444 	ld	h, b
      002102 29                    7445 	add	hl, hl
      002103 09                    7446 	add	hl, bc
      002104 29                    7447 	add	hl, hl
      002105 29                    7448 	add	hl, hl
      002106 E5                    7449 	push	hl
      002107 7D                    7450 	ld	a, l
      002108 F8 06                 7451 	ldhl	sp,	#6
      00210A 77                    7452 	ld	(hl), a
      00210B E1                    7453 	pop	hl
      00210C 7C                    7454 	ld	a, h
      00210D F8 05                 7455 	ldhl	sp,	#5
      00210F 32                    7456 	ld	(hl-), a
      002110 2A                    7457 	ld	a, (hl+)
      002111 5F                    7458 	ld	e, a
      002112 56                    7459 	ld	d, (hl)
      002113 21r50r00              7460 	ld	hl, #_projectiles
      002116 19                    7461 	add	hl, de
      002117 E5                    7462 	push	hl
      002118 7D                    7463 	ld	a, l
      002119 F8 04                 7464 	ldhl	sp,	#4
      00211B 77                    7465 	ld	(hl), a
      00211C E1                    7466 	pop	hl
      00211D 7C                    7467 	ld	a, h
      00211E F8 03                 7468 	ldhl	sp,	#3
      002120 32                    7469 	ld	(hl-), a
      002121 2A                    7470 	ld	a, (hl+)
      002122 5F                    7471 	ld	e, a
      002123 56                    7472 	ld	d, (hl)
      002124 21 04 00              7473 	ld	hl, #0x0004
      002127 19                    7474 	add	hl, de
      002128 E5                    7475 	push	hl
      002129 7D                    7476 	ld	a, l
      00212A F8 06                 7477 	ldhl	sp,	#6
      00212C 77                    7478 	ld	(hl), a
      00212D E1                    7479 	pop	hl
      00212E 7C                    7480 	ld	a, h
      00212F F8 05                 7481 	ldhl	sp,	#5
      002131 32                    7482 	ld	(hl-), a
      002132 2A                    7483 	ld	a,	(hl+)
      002133 66                    7484 	ld	h, (hl)
      002134 6F                    7485 	ld	l, a
      002135 36 04                 7486 	ld	(hl), #0x04
      002137 18 69                 7487 	jr	00136$
      002139                       7488 00123$:
                                   7489 ;main.c:789: else if (xDir == -1 && yDir == 1) {
      002139 FAr56r00              7490 	ld	a, (#_xDir)
      00213C 3C                    7491 	inc	a
      00213D 3E 01                 7492 	ld	a, #0x01
      00213F 28 01                 7493 	jr	Z, 00265$
      002141 AF                    7494 	xor	a, a
      002142                       7495 00265$:
      002142 4F                    7496 	ld	c, a
      002143 B7                    7497 	or	a, a
      002144 28 2D                 7498 	jr	Z, 00119$
      002146 F8 05                 7499 	ldhl	sp,	#5
      002148 7E                    7500 	ld	a, (hl)
      002149 B7                    7501 	or	a, a
      00214A 28 27                 7502 	jr	Z, 00119$
                                   7503 ;main.c:790: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      00214C 2B                    7504 	dec	hl
                                   7505 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00214D 6E                    7506 	ld	l, (hl)
      00214E 01r00r00              7507 	ld	bc, #_shadow_OAM+0
                                   7508 ;	spillPairReg hl
                                   7509 ;	spillPairReg hl
      002151 26 00                 7510 	ld	h, #0x00
                                   7511 ;	spillPairReg hl
                                   7512 ;	spillPairReg hl
      002153 29                    7513 	add	hl, hl
      002154 29                    7514 	add	hl, hl
      002155 09                    7515 	add	hl, bc
      002156 23                    7516 	inc	hl
      002157 23                    7517 	inc	hl
      002158 23                    7518 	inc	hl
      002159 36 60                 7519 	ld	(hl), #0x60
                                   7520 ;main.c:791: projectiles[oldestProjectile].offset = 4;
      00215B 21r54r00              7521 	ld	hl, #_oldestProjectile
      00215E 4E                    7522 	ld	c, (hl)
      00215F 06 00                 7523 	ld	b, #0x00
      002161 69                    7524 	ld	l, c
      002162 60                    7525 	ld	h, b
      002163 29                    7526 	add	hl, hl
      002164 09                    7527 	add	hl, bc
      002165 29                    7528 	add	hl, hl
      002166 29                    7529 	add	hl, hl
      002167 01r50r00              7530 	ld	bc,#_projectiles
      00216A 09                    7531 	add	hl,bc
      00216B 01 04 00              7532 	ld	bc, #0x0004
      00216E 09                    7533 	add	hl, bc
      00216F 36 04                 7534 	ld	(hl), #0x04
      002171 18 2F                 7535 	jr	00136$
      002173                       7536 00119$:
                                   7537 ;main.c:793: else if (xDir == -1 && yDir == -1) {
      002173 79                    7538 	ld	a, c
      002174 B7                    7539 	or	a, a
      002175 28 2B                 7540 	jr	Z, 00136$
      002177 F8 03                 7541 	ldhl	sp,	#3
      002179 7E                    7542 	ld	a, (hl)
      00217A B7                    7543 	or	a, a
      00217B 28 25                 7544 	jr	Z, 00136$
                                   7545 ;main.c:794: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      00217D 23                    7546 	inc	hl
                                   7547 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00217E 6E                    7548 	ld	l, (hl)
      00217F 01r00r00              7549 	ld	bc, #_shadow_OAM+0
                                   7550 ;	spillPairReg hl
                                   7551 ;	spillPairReg hl
      002182 26 00                 7552 	ld	h, #0x00
                                   7553 ;	spillPairReg hl
                                   7554 ;	spillPairReg hl
      002184 29                    7555 	add	hl, hl
      002185 29                    7556 	add	hl, hl
      002186 09                    7557 	add	hl, bc
      002187 23                    7558 	inc	hl
      002188 23                    7559 	inc	hl
      002189 23                    7560 	inc	hl
      00218A 36 20                 7561 	ld	(hl), #0x20
                                   7562 ;main.c:795: projectiles[oldestProjectile].offset = 12;
      00218C 21r54r00              7563 	ld	hl, #_oldestProjectile
      00218F 4E                    7564 	ld	c, (hl)
      002190 06 00                 7565 	ld	b, #0x00
      002192 69                    7566 	ld	l, c
      002193 60                    7567 	ld	h, b
      002194 29                    7568 	add	hl, hl
      002195 09                    7569 	add	hl, bc
      002196 29                    7570 	add	hl, hl
      002197 29                    7571 	add	hl, hl
      002198 01r50r00              7572 	ld	bc,#_projectiles
      00219B 09                    7573 	add	hl,bc
      00219C 01 04 00              7574 	ld	bc, #0x0004
      00219F 09                    7575 	add	hl, bc
      0021A0 36 0C                 7576 	ld	(hl), #0x0c
      0021A2                       7577 00136$:
                                   7578 ;main.c:799: fireCooldown = projectiles[oldestProjectile].delay;
      0021A2 21r54r00              7579 	ld	hl, #_oldestProjectile
      0021A5 4E                    7580 	ld	c, (hl)
      0021A6 06 00                 7581 	ld	b, #0x00
      0021A8 69                    7582 	ld	l, c
      0021A9 60                    7583 	ld	h, b
      0021AA 29                    7584 	add	hl, hl
      0021AB 09                    7585 	add	hl, bc
      0021AC 29                    7586 	add	hl, hl
      0021AD 29                    7587 	add	hl, hl
      0021AE 01r50r00              7588 	ld	bc,#_projectiles
      0021B1 09                    7589 	add	hl,bc
      0021B2 4D                    7590 	ld	c, l
      0021B3 44                    7591 	ld	b, h
      0021B4 21 0A 00              7592 	ld	hl, #0x000a
      0021B7 09                    7593 	add	hl, bc
      0021B8 7E                    7594 	ld	a, (hl)
      0021B9 EAr55r00              7595 	ld	(#_fireCooldown),a
                                   7596 ;main.c:801: playSound(projectiles[oldestProjectile].type);
      0021BC 21 0B 00              7597 	ld	hl, #0x000b
      0021BF 09                    7598 	add	hl, bc
      0021C0 7E                    7599 	ld	a, (hl)
      0021C1 F5                    7600 	push	af
      0021C2 33                    7601 	inc	sp
      0021C3 CDr20r0B              7602 	call	_playSound
                                   7603 ;main.c:805: }
      0021C6 E8 07                 7604 	add	sp, #7
      0021C8 C9                    7605 	ret
                                   7606 ;main.c:808: void moveProjectiles() {
                                   7607 ;	---------------------------------
                                   7608 ; Function moveProjectiles
                                   7609 ; ---------------------------------
      0021C9                       7610 _moveProjectiles::
      0021C9 E8 F9                 7611 	add	sp, #-7
                                   7612 ;main.c:809: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0021CB F8 06                 7613 	ldhl	sp,	#6
      0021CD 36 00                 7614 	ld	(hl), #0x00
      0021CF                       7615 00112$:
      0021CF 21r9Dr07              7616 	ld	hl, #_PROJECTILECOUNT
      0021D2 4E                    7617 	ld	c, (hl)
      0021D3 F8 06                 7618 	ldhl	sp,	#6
      0021D5 7E                    7619 	ld	a, (hl)
      0021D6 91                    7620 	sub	a, c
      0021D7 D2r25r23              7621 	jp	NC, 00114$
                                   7622 ;main.c:810: projectiles[i].x -= xOverflow;
      0021DA 4E                    7623 	ld	c, (hl)
      0021DB 06 00                 7624 	ld	b, #0x00
      0021DD 69                    7625 	ld	l, c
      0021DE 60                    7626 	ld	h, b
      0021DF 29                    7627 	add	hl, hl
      0021E0 09                    7628 	add	hl, bc
      0021E1 29                    7629 	add	hl, hl
      0021E2 29                    7630 	add	hl, hl
      0021E3 01r50r00              7631 	ld	bc,#_projectiles
      0021E6 09                    7632 	add	hl,bc
      0021E7 33                    7633 	inc	sp
      0021E8 33                    7634 	inc	sp
      0021E9 5D                    7635 	ld	e, l
      0021EA 54                    7636 	ld	d, h
      0021EB D5                    7637 	push	de
      0021EC 1A                    7638 	ld	a, (de)
      0021ED 4F                    7639 	ld	c, a
      0021EE 13                    7640 	inc	de
      0021EF 1A                    7641 	ld	a, (de)
      0021F0 47                    7642 	ld	b, a
      0021F1 79                    7643 	ld	a, c
      0021F2 21r64r00              7644 	ld	hl, #_xOverflow
      0021F5 96                    7645 	sub	a, (hl)
      0021F6 23                    7646 	inc	hl
      0021F7 4F                    7647 	ld	c, a
      0021F8 78                    7648 	ld	a, b
      0021F9 9E                    7649 	sbc	a, (hl)
      0021FA 47                    7650 	ld	b, a
      0021FB E1                    7651 	pop	hl
      0021FC E5                    7652 	push	hl
      0021FD 79                    7653 	ld	a, c
      0021FE 22                    7654 	ld	(hl+), a
      0021FF 70                    7655 	ld	(hl), b
                                   7656 ;main.c:811: projectiles[i].y -= yOverflow;
      002200 D1                    7657 	pop	de
      002201 D5                    7658 	push	de
      002202 21 02 00              7659 	ld	hl, #0x0002
      002205 19                    7660 	add	hl, de
      002206 E5                    7661 	push	hl
      002207 7D                    7662 	ld	a, l
      002208 F8 04                 7663 	ldhl	sp,	#4
      00220A 77                    7664 	ld	(hl), a
      00220B E1                    7665 	pop	hl
      00220C 7C                    7666 	ld	a, h
      00220D F8 03                 7667 	ldhl	sp,	#3
      00220F 32                    7668 	ld	(hl-), a
      002210 2A                    7669 	ld	a, (hl+)
      002211 5F                    7670 	ld	e, a
      002212 56                    7671 	ld	d, (hl)
      002213 1A                    7672 	ld	a, (de)
      002214 4F                    7673 	ld	c, a
      002215 13                    7674 	inc	de
      002216 1A                    7675 	ld	a, (de)
      002217 47                    7676 	ld	b, a
      002218 79                    7677 	ld	a, c
      002219 21r66r00              7678 	ld	hl, #_yOverflow
      00221C 96                    7679 	sub	a, (hl)
      00221D 23                    7680 	inc	hl
      00221E 4F                    7681 	ld	c, a
      00221F 78                    7682 	ld	a, b
      002220 9E                    7683 	sbc	a, (hl)
      002221 47                    7684 	ld	b, a
      002222 F8 02                 7685 	ldhl	sp,	#2
      002224 2A                    7686 	ld	a,	(hl+)
      002225 66                    7687 	ld	h, (hl)
      002226 6F                    7688 	ld	l, a
      002227 79                    7689 	ld	a, c
      002228 22                    7690 	ld	(hl+), a
      002229 70                    7691 	ld	(hl), b
                                   7692 ;main.c:813: if (projectiles[i].active) {
      00222A D1                    7693 	pop	de
      00222B D5                    7694 	push	de
      00222C 21 09 00              7695 	ld	hl, #0x0009
      00222F 19                    7696 	add	hl, de
      002230 4D                    7697 	ld	c, l
      002231 44                    7698 	ld	b, h
      002232 0A                    7699 	ld	a, (bc)
      002233 B7                    7700 	or	a, a
      002234 CAr1Fr23              7701 	jp	Z, 00113$
                                   7702 ;main.c:814: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      002237 F8 02                 7703 	ldhl	sp,#2
      002239 2A                    7704 	ld	a, (hl+)
      00223A 5F                    7705 	ld	e, a
      00223B 56                    7706 	ld	d, (hl)
      00223C 1A                    7707 	ld	a, (de)
      00223D 4F                    7708 	ld	c, a
      00223E 13                    7709 	inc	de
      00223F 1A                    7710 	ld	a, (de)
      002240 47                    7711 	ld	b, a
      002241 D1                    7712 	pop	de
      002242 D5                    7713 	push	de
      002243 21 06 00              7714 	ld	hl, #0x0006
      002246 19                    7715 	add	hl, de
      002247 5D                    7716 	ld	e, l
      002248 54                    7717 	ld	d, h
      002249 1A                    7718 	ld	a, (de)
      00224A 6F                    7719 	ld	l, a
                                   7720 ;	spillPairReg hl
                                   7721 ;	spillPairReg hl
      00224B 07                    7722 	rlca
      00224C 9F                    7723 	sbc	a, a
      00224D 67                    7724 	ld	h, a
                                   7725 ;	spillPairReg hl
                                   7726 ;	spillPairReg hl
      00224E 09                    7727 	add	hl, bc
      00224F 4D                    7728 	ld	c, l
      002250 44                    7729 	ld	b, h
      002251 F8 04                 7730 	ldhl	sp,	#4
      002253 79                    7731 	ld	a, c
      002254 22                    7732 	ld	(hl+), a
      002255 70                    7733 	ld	(hl), b
                                   7734 ;main.c:815: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      002256 D1                    7735 	pop	de
      002257 D5                    7736 	push	de
      002258 1A                    7737 	ld	a, (de)
      002259 4F                    7738 	ld	c, a
      00225A 13                    7739 	inc	de
      00225B 1A                    7740 	ld	a, (de)
      00225C 47                    7741 	ld	b, a
      00225D D1                    7742 	pop	de
      00225E D5                    7743 	push	de
      00225F 21 05 00              7744 	ld	hl, #0x0005
      002262 19                    7745 	add	hl, de
      002263 5D                    7746 	ld	e, l
      002264 54                    7747 	ld	d, h
      002265 1A                    7748 	ld	a, (de)
      002266 6F                    7749 	ld	l, a
                                   7750 ;	spillPairReg hl
                                   7751 ;	spillPairReg hl
      002267 07                    7752 	rlca
      002268 9F                    7753 	sbc	a, a
      002269 67                    7754 	ld	h, a
                                   7755 ;	spillPairReg hl
                                   7756 ;	spillPairReg hl
      00226A 09                    7757 	add	hl, bc
      00226B 4D                    7758 	ld	c, l
      00226C 44                    7759 	ld	b, h
                                   7760 ;main.c:818: projectiles[i].y = newY;
      00226D F8 02                 7761 	ldhl	sp,#2
      00226F 2A                    7762 	ld	a, (hl+)
      002270 5F                    7763 	ld	e, a
      002271 2A                    7764 	ld	a, (hl+)
      002272 57                    7765 	ld	d, a
      002273 2A                    7766 	ld	a, (hl+)
      002274 12                    7767 	ld	(de), a
      002275 13                    7768 	inc	de
      002276 7E                    7769 	ld	a, (hl)
      002277 12                    7770 	ld	(de), a
                                   7771 ;main.c:819: projectiles[i].x = newX;
      002278 E1                    7772 	pop	hl
      002279 E5                    7773 	push	hl
      00227A 79                    7774 	ld	a, c
      00227B 22                    7775 	ld	(hl+), a
      00227C 70                    7776 	ld	(hl), b
                                   7777 ;main.c:823: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      00227D F8 04                 7778 	ldhl	sp,	#4
      00227F 2A                    7779 	ld	a, (hl+)
      002280 77                    7780 	ld	(hl), a
      002281 D1                    7781 	pop	de
      002282 D5                    7782 	push	de
      002283 21 04 00              7783 	ld	hl, #0x0004
      002286 19                    7784 	add	hl, de
      002287 5D                    7785 	ld	e, l
      002288 54                    7786 	ld	d, h
      002289 1A                    7787 	ld	a, (de)
      00228A F8 05                 7788 	ldhl	sp,	#5
      00228C 86                    7789 	add	a, (hl)
      00228D 2B                    7790 	dec	hl
      00228E 5F                    7791 	ld	e, a
      00228F 79                    7792 	ld	a, c
      002290 C6 04                 7793 	add	a, #0x04
      002292 22                    7794 	ld	(hl+), a
      002293 23                    7795 	inc	hl
      002294 3A                    7796 	ld	a, (hl-)
      002295 C6 1E                 7797 	add	a, #0x1e
      002297 77                    7798 	ld	(hl), a
      002298 56                    7799 	ld	d, (hl)
                                   7800 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002299 26 00                 7801 	ld	h, #0x00
                                   7802 ;	spillPairReg hl
                                   7803 ;	spillPairReg hl
      00229B 6A                    7804 	ld	l, d
      00229C 29                    7805 	add	hl, hl
      00229D 29                    7806 	add	hl, hl
      00229E D5                    7807 	push	de
      00229F 11r00r00              7808 	ld	de, #_shadow_OAM
      0022A2 19                    7809 	add	hl, de
      0022A3 D1                    7810 	pop	de
                                   7811 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0022A4 7B                    7812 	ld	a, e
      0022A5 22                    7813 	ld	(hl+), a
      0022A6 5D                    7814 	ld	e, l
      0022A7 54                    7815 	ld	d, h
      0022A8 F8 04                 7816 	ldhl	sp,	#4
      0022AA 7E                    7817 	ld	a, (hl)
      0022AB 12                    7818 	ld	(de), a
                                   7819 ;main.c:827: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      0022AC D1                    7820 	pop	de
      0022AD D5                    7821 	push	de
      0022AE 1A                    7822 	ld	a, (de)
      0022AF 6F                    7823 	ld	l, a
                                   7824 ;	spillPairReg hl
                                   7825 ;	spillPairReg hl
      0022B0 13                    7826 	inc	de
      0022B1 1A                    7827 	ld	a, (de)
      0022B2 67                    7828 	ld	h, a
                                   7829 ;	spillPairReg hl
                                   7830 ;	spillPairReg hl
      0022B3 CB 78                 7831 	bit	7, b
      0022B5 20 44                 7832 	jr	NZ, 00101$
      0022B7 5C                    7833 	ld	e, h
      0022B8 16 00                 7834 	ld	d, #0x00
      0022BA 3E AA                 7835 	ld	a, #0xaa
      0022BC BD                    7836 	cp	a, l
      0022BD 3E 00                 7837 	ld	a, #0x00
      0022BF 9C                    7838 	sbc	a, h
      0022C0 CB 7B                 7839 	bit	7, e
      0022C2 28 07                 7840 	jr	Z, 00147$
      0022C4 CB 7A                 7841 	bit	7, d
      0022C6 20 08                 7842 	jr	NZ, 00148$
      0022C8 BF                    7843 	cp	a, a
      0022C9 18 05                 7844 	jr	00148$
      0022CB                       7845 00147$:
      0022CB CB 7A                 7846 	bit	7, d
      0022CD 28 01                 7847 	jr	Z, 00148$
      0022CF 37                    7848 	scf
      0022D0                       7849 00148$:
      0022D0 38 29                 7850 	jr	C, 00101$
                                   7851 ;main.c:811: projectiles[i].y -= yOverflow;
      0022D2 F8 02                 7852 	ldhl	sp,#2
      0022D4 2A                    7853 	ld	a, (hl+)
      0022D5 5F                    7854 	ld	e, a
      0022D6 56                    7855 	ld	d, (hl)
      0022D7 1A                    7856 	ld	a, (de)
      0022D8 4F                    7857 	ld	c, a
      0022D9 13                    7858 	inc	de
      0022DA 1A                    7859 	ld	a, (de)
                                   7860 ;main.c:827: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      0022DB 47                    7861 	ld	b, a
      0022DC CB 78                 7862 	bit	7, b
      0022DE 20 1B                 7863 	jr	NZ, 00101$
      0022E0 58                    7864 	ld	e, b
      0022E1 16 00                 7865 	ld	d, #0x00
      0022E3 3E 9A                 7866 	ld	a, #0x9a
      0022E5 B9                    7867 	cp	a, c
      0022E6 3E 00                 7868 	ld	a, #0x00
      0022E8 98                    7869 	sbc	a, b
      0022E9 CB 7B                 7870 	bit	7, e
      0022EB 28 07                 7871 	jr	Z, 00149$
      0022ED CB 7A                 7872 	bit	7, d
      0022EF 20 08                 7873 	jr	NZ, 00150$
      0022F1 BF                    7874 	cp	a, a
      0022F2 18 05                 7875 	jr	00150$
      0022F4                       7876 00149$:
      0022F4 CB 7A                 7877 	bit	7, d
      0022F6 28 01                 7878 	jr	Z, 00150$
      0022F8 37                    7879 	scf
      0022F9                       7880 00150$:
      0022F9 30 24                 7881 	jr	NC, 00113$
      0022FB                       7882 00101$:
                                   7883 ;main.c:829: projectiles[i].active = 0;
      0022FB F8 06                 7884 	ldhl	sp,	#6
      0022FD 4E                    7885 	ld	c, (hl)
      0022FE 06 00                 7886 	ld	b, #0x00
      002300 69                    7887 	ld	l, c
      002301 60                    7888 	ld	h, b
      002302 29                    7889 	add	hl, hl
      002303 09                    7890 	add	hl, bc
      002304 29                    7891 	add	hl, hl
      002305 29                    7892 	add	hl, hl
      002306 11r50r00              7893 	ld	de, #_projectiles
      002309 19                    7894 	add	hl, de
      00230A 01 09 00              7895 	ld	bc, #0x0009
      00230D 09                    7896 	add	hl, bc
      00230E 36 00                 7897 	ld	(hl), #0x00
                                   7898 ;main.c:830: set_sprite_tile(30+i, 0x7f);
      002310 F8 05                 7899 	ldhl	sp,	#5
                                   7900 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002312 6E                    7901 	ld	l, (hl)
                                   7902 ;	spillPairReg hl
                                   7903 ;	spillPairReg hl
      002313 26 00                 7904 	ld	h, #0x00
                                   7905 ;	spillPairReg hl
                                   7906 ;	spillPairReg hl
      002315 29                    7907 	add	hl, hl
      002316 29                    7908 	add	hl, hl
      002317 11r00r00              7909 	ld	de, #_shadow_OAM
      00231A 19                    7910 	add	hl, de
      00231B 23                    7911 	inc	hl
      00231C 23                    7912 	inc	hl
      00231D 36 7F                 7913 	ld	(hl), #0x7f
                                   7914 ;main.c:830: set_sprite_tile(30+i, 0x7f);
      00231F                       7915 00113$:
                                   7916 ;main.c:809: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      00231F F8 06                 7917 	ldhl	sp,	#6
      002321 34                    7918 	inc	(hl)
      002322 C3rCFr21              7919 	jp	00112$
      002325                       7920 00114$:
                                   7921 ;main.c:835: }
      002325 E8 07                 7922 	add	sp, #7
      002327 C9                    7923 	ret
                                   7924 ;main.c:838: void initProjectiles() {
                                   7925 ;	---------------------------------
                                   7926 ; Function initProjectiles
                                   7927 ; ---------------------------------
      002328                       7928 _initProjectiles::
                                   7929 ;main.c:839: set_sprite_data(0x20, 17, ProjectileTiles); //TODO NOSTA MÄÄRÄÄ
      002328 11r67r05              7930 	ld	de, #_ProjectileTiles
      00232B D5                    7931 	push	de
      00232C 21 20 11              7932 	ld	hl, #0x1120
      00232F E5                    7933 	push	hl
      002330 CDr00r00              7934 	call	_set_sprite_data
      002333 E8 04                 7935 	add	sp, #4
                                   7936 ;main.c:841: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002335 AF                    7937 	xor	a, a
      002336                       7938 00103$:
      002336 21r9Dr07              7939 	ld	hl, #_PROJECTILECOUNT
      002339 4E                    7940 	ld	c, (hl)
      00233A B9                    7941 	cp	a, c
      00233B D0                    7942 	ret	NC
      00233C 3C                    7943 	inc	a
                                   7944 ;main.c:845: }
      00233D 18 F7                 7945 	jr	00103$
                                   7946 ;main.c:847: void initGame() {
                                   7947 ;	---------------------------------
                                   7948 ; Function initGame
                                   7949 ; ---------------------------------
      00233F                       7950 _initGame::
                                   7951 ;main.c:850: xDir = 0;
      00233F 21r56r00              7952 	ld	hl, #_xDir
      002342 36 00                 7953 	ld	(hl), #0x00
                                   7954 ;main.c:851: yDir = -1;
      002344 21r57r00              7955 	ld	hl, #_yDir
      002347 36 FF                 7956 	ld	(hl), #0xff
                                   7957 ;main.c:852: xSpeed = 0;
      002349 21r58r00              7958 	ld	hl, #_xSpeed
      00234C 36 00                 7959 	ld	(hl), #0x00
                                   7960 ;main.c:853: ySpeed = 0;
      00234E 21r59r00              7961 	ld	hl, #_ySpeed
      002351 36 00                 7962 	ld	(hl), #0x00
                                   7963 ;main.c:856: playerX = 80<<5;
      002353 21r5Ar00              7964 	ld	hl, #_playerX
      002356 36 00                 7965 	ld	(hl), #0x00
      002358 23                    7966 	inc	hl
      002359 36 0A                 7967 	ld	(hl), #0x0a
                                   7968 ;main.c:857: playerY = 80<<5;
      00235B 21r5Cr00              7969 	ld	hl, #_playerY
      00235E 36 00                 7970 	ld	(hl), #0x00
      002360 23                    7971 	inc	hl
      002361 36 0A                 7972 	ld	(hl), #0x0a
                                   7973 ;main.c:859: playerDrawX = 80;
      002363 21r5Er00              7974 	ld	hl, #_playerDrawX
      002366 36 50                 7975 	ld	(hl), #0x50
                                   7976 ;main.c:860: playerDrawY = 80;
      002368 21r5Fr00              7977 	ld	hl, #_playerDrawY
      00236B 36 50                 7978 	ld	(hl), #0x50
                                   7979 ;main.c:863: bgX = 0;
      00236D AF                    7980 	xor	a, a
      00236E 21r60r00              7981 	ld	hl, #_bgX
      002371 22                    7982 	ld	(hl+), a
      002372 77                    7983 	ld	(hl), a
                                   7984 ;main.c:864: bgY = 0;
      002373 AF                    7985 	xor	a, a
      002374 21r62r00              7986 	ld	hl, #_bgY
      002377 22                    7987 	ld	(hl+), a
      002378 77                    7988 	ld	(hl), a
                                   7989 ;main.c:866: hull = maxHull;
      002379 FAr9Fr07              7990 	ld	a, (#_maxHull)
      00237C EAr8Dr00              7991 	ld	(#_hull),a
                                   7992 ;main.c:867: shield = maxShield;
      00237F FArA0r07              7993 	ld	a, (#_maxShield)
      002382 EAr8Er00              7994 	ld	(#_shield),a
                                   7995 ;main.c:869: DISPLAY_ON;
      002385 F0r00                 7996 	ldh	a, (_LCDC_REG + 0)
      002387 F6 80                 7997 	or	a, #0x80
      002389 E0r00                 7998 	ldh	(_LCDC_REG + 0), a
                                   7999 ;main.c:870: SPRITES_8x16;
      00238B F0r00                 8000 	ldh	a, (_LCDC_REG + 0)
      00238D F6 04                 8001 	or	a, #0x04
      00238F E0r00                 8002 	ldh	(_LCDC_REG + 0), a
                                   8003 ;main.c:871: set_sprite_data(0, 12, Player1);
      002391 11r87r06              8004 	ld	de, #_Player1
      002394 D5                    8005 	push	de
      002395 21 00 0C              8006 	ld	hl, #0xc00
      002398 E5                    8007 	push	hl
      002399 CDr00r00              8008 	call	_set_sprite_data
      00239C E8 04                 8009 	add	sp, #4
                                   8010 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00239E 21r02r00              8011 	ld	hl, #(_shadow_OAM + 2)
      0023A1 36 00                 8012 	ld	(hl), #0x00
      0023A3 21r06r00              8013 	ld	hl, #(_shadow_OAM + 6)
      0023A6 36 02                 8014 	ld	(hl), #0x02
                                   8015 ;main.c:877: SHOW_SPRITES;
      0023A8 F0r00                 8016 	ldh	a, (_LCDC_REG + 0)
      0023AA F6 02                 8017 	or	a, #0x02
      0023AC E0r00                 8018 	ldh	(_LCDC_REG + 0), a
                                   8019 ;main.c:881: font_init();
      0023AE CDr00r00              8020 	call	_font_init
                                   8021 ;main.c:883: min_font = font_load(font_min); // 36 tiles of characters
      0023B1 11r00r00              8022 	ld	de, #_font_min
      0023B4 D5                    8023 	push	de
      0023B5 CDr00r00              8024 	call	_font_load
      0023B8 E1                    8025 	pop	hl
      0023B9 21r8Fr00              8026 	ld	hl, #_min_font
      0023BC 7B                    8027 	ld	a, e
      0023BD 22                    8028 	ld	(hl+), a
                                   8029 ;main.c:884: font_set(min_font);
      0023BE 7A                    8030 	ld	a, d
      0023BF 32                    8031 	ld	(hl-), a
      0023C0 2A                    8032 	ld	a, (hl+)
      0023C1 5F                    8033 	ld	e, a
      0023C2 56                    8034 	ld	d, (hl)
      0023C3 D5                    8035 	push	de
      0023C4 CDr00r00              8036 	call	_font_set
      0023C7 E1                    8037 	pop	hl
                                   8038 ;main.c:885: set_win_tiles(1,0,4,1,hullabel);
      0023C8 11r00r00              8039 	ld	de, #_hullabel
      0023CB D5                    8040 	push	de
      0023CC 21 04 01              8041 	ld	hl, #0x104
      0023CF E5                    8042 	push	hl
      0023D0 21 01 00              8043 	ld	hl, #0x01
      0023D3 E5                    8044 	push	hl
      0023D4 CDr00r00              8045 	call	_set_win_tiles
      0023D7 E8 06                 8046 	add	sp, #6
                                   8047 ;main.c:886: set_win_tiles(1,1,4,1,shieldlabel);
      0023D9 11r04r00              8048 	ld	de, #_shieldlabel
      0023DC D5                    8049 	push	de
      0023DD 21 04 01              8050 	ld	hl, #0x104
      0023E0 E5                    8051 	push	hl
      0023E1 21 01 01              8052 	ld	hl, #0x101
      0023E4 E5                    8053 	push	hl
      0023E5 CDr00r00              8054 	call	_set_win_tiles
      0023E8 E8 06                 8055 	add	sp, #6
                                   8056 ;main.c:891: set_bkg_data(0x50,1,healthblock);
      0023EA 11r07r05              8057 	ld	de, #_healthblock
      0023ED D5                    8058 	push	de
      0023EE 21 50 01              8059 	ld	hl, #0x150
      0023F1 E5                    8060 	push	hl
      0023F2 CDr00r00              8061 	call	_set_bkg_data
      0023F5 E8 04                 8062 	add	sp, #4
                                   8063 ;main.c:893: setHealthBar(0, hull);
      0023F7 FAr8Dr00              8064 	ld	a, (#_hull)
      0023FA 67                    8065 	ld	h, a
      0023FB 2E 00                 8066 	ld	l, #0x00
      0023FD E5                    8067 	push	hl
      0023FE CDrA2r07              8068 	call	_setHealthBar
      002401 E1                    8069 	pop	hl
                                   8070 ;main.c:894: setHealthBar(1, shield);
      002402 FAr8Er00              8071 	ld	a, (#_shield)
      002405 67                    8072 	ld	h, a
      002406 2E 01                 8073 	ld	l, #0x01
      002408 E5                    8074 	push	hl
      002409 CDrA2r07              8075 	call	_setHealthBar
      00240C E1                    8076 	pop	hl
                                   8077 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      00240D 3E 07                 8078 	ld	a, #0x07
      00240F E0r00                 8079 	ldh	(_WX_REG + 0), a
      002411 3E 7E                 8080 	ld	a, #0x7e
      002413 E0r00                 8081 	ldh	(_WY_REG + 0), a
                                   8082 ;main.c:901: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      002415 11r87r04              8083 	ld	de, #_backgroundtiles
      002418 D5                    8084 	push	de
      002419 21 25 08              8085 	ld	hl, #0x825
      00241C E5                    8086 	push	hl
      00241D CDr00r00              8087 	call	_set_bkg_data
      002420 E8 04                 8088 	add	sp, #4
                                   8089 ;main.c:902: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      002422 11r87r00              8090 	ld	de, #_background1
      002425 D5                    8091 	push	de
      002426 21 20 20              8092 	ld	hl, #0x2020
      002429 E5                    8093 	push	hl
      00242A AF                    8094 	xor	a, a
      00242B 0F                    8095 	rrca
      00242C F5                    8096 	push	af
      00242D CDr00r00              8097 	call	_set_bkg_tiles
      002430 E8 06                 8098 	add	sp, #6
                                   8099 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      002432 AF                    8100 	xor	a, a
      002433 E0r00                 8101 	ldh	(_SCX_REG + 0), a
      002435 AF                    8102 	xor	a, a
      002436 E0r00                 8103 	ldh	(_SCY_REG + 0), a
                                   8104 ;main.c:905: set_bkg_data(0x51, 18, ProjectileTiles);
      002438 11r67r05              8105 	ld	de, #_ProjectileTiles
      00243B D5                    8106 	push	de
      00243C 21 51 12              8107 	ld	hl, #0x1251
      00243F E5                    8108 	push	hl
      002440 CDr00r00              8109 	call	_set_bkg_data
      002443 E8 04                 8110 	add	sp, #4
                                   8111 ;main.c:907: set_win_tiles(10, 0,4,1,weaponlabel);
      002445 11r08r00              8112 	ld	de, #_weaponlabel
      002448 D5                    8113 	push	de
      002449 21 04 01              8114 	ld	hl, #0x104
      00244C E5                    8115 	push	hl
      00244D 21 0A 00              8116 	ld	hl, #0x0a
      002450 E5                    8117 	push	hl
      002451 CDr00r00              8118 	call	_set_win_tiles
      002454 E8 06                 8119 	add	sp, #6
                                   8120 ;main.c:908: set_win_tiles(10, 1,4,1,scorelabel);
      002456 11r0Cr00              8121 	ld	de, #_scorelabel
      002459 D5                    8122 	push	de
      00245A 21 04 01              8123 	ld	hl, #0x104
      00245D E5                    8124 	push	hl
      00245E 21 0A 01              8125 	ld	hl, #0x10a
      002461 E5                    8126 	push	hl
      002462 CDr00r00              8127 	call	_set_win_tiles
      002465 E8 06                 8128 	add	sp, #6
                                   8129 ;main.c:910: setGunIcon();
      002467 CDrDFr1B              8130 	call	_setGunIcon
                                   8131 ;main.c:911: SHOW_BKG;
      00246A F0r00                 8132 	ldh	a, (_LCDC_REG + 0)
      00246C F6 01                 8133 	or	a, #0x01
      00246E E0r00                 8134 	ldh	(_LCDC_REG + 0), a
                                   8135 ;main.c:912: SHOW_WIN;;
      002470 F0r00                 8136 	ldh	a, (_LCDC_REG + 0)
      002472 F6 20                 8137 	or	a, #0x20
      002474 E0r00                 8138 	ldh	(_LCDC_REG + 0), a
                                   8139 ;main.c:914: bcd = MAKE_BCD(00000);
      002476 AF                    8140 	xor	a, a
      002477 21r70r00              8141 	ld	hl, #_bcd
      00247A 22                    8142 	ld	(hl+), a
      00247B 22                    8143 	ld	(hl+), a
      00247C 22                    8144 	ld	(hl+), a
      00247D 77                    8145 	ld	(hl), a
                                   8146 ;main.c:915: updateScore();
                                   8147 ;main.c:918: }
      00247E C3rB3r08              8148 	jp	_updateScore
                                   8149 ;main.c:920: void main(){
                                   8150 ;	---------------------------------
                                   8151 ; Function main
                                   8152 ; ---------------------------------
      002481                       8153 _main::
                                   8154 ;main.c:923: STAT_REG = 0x45;
      002481 3E 45                 8155 	ld	a, #0x45
      002483 E0r00                 8156 	ldh	(_STAT_REG + 0), a
                                   8157 ;main.c:924: LYC_REG = 0x7e; //line 126
      002485 3E 7E                 8158 	ld	a, #0x7e
      002487 E0r00                 8159 	ldh	(_LYC_REG + 0), a
                                   8160 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      002489 F3                    8161 	di
                                   8162 ;main.c:926: add_LCD(interruptLCD);
      00248A 11r00r00              8163 	ld	de, #_interruptLCD
      00248D D5                    8164 	push	de
      00248E CDr00r00              8165 	call	_add_LCD
      002491 33                    8166 	inc	sp
      002492 33                    8167 	inc	sp
                                   8168 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      002493 FB                    8169 	ei
                                   8170 ;main.c:928: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      002494 3E 03                 8171 	ld	a, #0x03
      002496 F5                    8172 	push	af
      002497 33                    8173 	inc	sp
      002498 CDr00r00              8174 	call	_set_interrupts
      00249B 33                    8175 	inc	sp
                                   8176 ;main.c:932: NR52_REG = 0x80; // sound on 
      00249C 3E 80                 8177 	ld	a, #0x80
      00249E E0r00                 8178 	ldh	(_NR52_REG + 0), a
                                   8179 ;main.c:933: NR50_REG = 0x77; // volume
      0024A0 3E 77                 8180 	ld	a, #0x77
      0024A2 E0r00                 8181 	ldh	(_NR50_REG + 0), a
                                   8182 ;main.c:934: NR51_REG = 0xFF; // all channels
      0024A4 3E FF                 8183 	ld	a, #0xff
      0024A6 E0r00                 8184 	ldh	(_NR51_REG + 0), a
                                   8185 ;main.c:938: waitpad(J_A);
      0024A8 3E 10                 8186 	ld	a, #0x10
      0024AA F5                    8187 	push	af
      0024AB 33                    8188 	inc	sp
      0024AC CDr00r00              8189 	call	_waitpad
      0024AF 33                    8190 	inc	sp
                                   8191 ;main.c:939: uint16_t seed = LY_REG;
      0024B0 F0r00                 8192 	ldh	a, (_LY_REG + 0)
      0024B2 4F                    8193 	ld	c, a
      0024B3 06 00                 8194 	ld	b, #0x00
                                   8195 ;main.c:940: seed |= (uint16_t)DIV_REG << 8;
      0024B5 F0r00                 8196 	ldh	a, (_DIV_REG + 0)
      0024B7 5F                    8197 	ld	e, a
      0024B8 AF                    8198 	xor	a, a
      0024B9 B1                    8199 	or	a, c
      0024BA 4F                    8200 	ld	c, a
      0024BB 7B                    8201 	ld	a, e
      0024BC B0                    8202 	or	a, b
      0024BD 47                    8203 	ld	b, a
                                   8204 ;main.c:941: initrand(seed);
      0024BE C5                    8205 	push	bc
      0024BF CDr00r00              8206 	call	_initrand
      0024C2 E1                    8207 	pop	hl
                                   8208 ;main.c:946: initGame();
      0024C3 CDr3Fr23              8209 	call	_initGame
                                   8210 ;main.c:947: initEnemies(1);
      0024C6 3E 01                 8211 	ld	a, #0x01
      0024C8 F5                    8212 	push	af
      0024C9 33                    8213 	inc	sp
      0024CA CDrF8r11              8214 	call	_initEnemies
      0024CD 33                    8215 	inc	sp
                                   8216 ;main.c:948: initProjectiles();
      0024CE CDr28r23              8217 	call	_initProjectiles
                                   8218 ;main.c:950: while(1) {
      0024D1                       8219 00114$:
                                   8220 ;main.c:951: SHOW_SPRITES;
      0024D1 F0r00                 8221 	ldh	a, (_LCDC_REG + 0)
      0024D3 F6 02                 8222 	or	a, #0x02
      0024D5 E0r00                 8223 	ldh	(_LCDC_REG + 0), a
                                   8224 ;main.c:953: joydata = joypad(); // query for button states
      0024D7 CDr00r00              8225 	call	_joypad
      0024DA 21r8Cr00              8226 	ld	hl, #_joydata
      0024DD 73                    8227 	ld	(hl), e
                                   8228 ;main.c:955: updateDirection(); // set player direction
      0024DE CDrF6r08              8229 	call	_updateDirection
                                   8230 ;main.c:958: move(); 
      0024E1 CDr5Fr13              8231 	call	_move
                                   8232 ;main.c:960: updateEnemyPositions();
      0024E4 CDr83r0B              8233 	call	_updateEnemyPositions
                                   8234 ;main.c:963: checkCollision(); 
      0024E7 CDrEAr18              8235 	call	_checkCollision
                                   8236 ;main.c:727: if (shield < maxShield) {
      0024EA 21rA0r07              8237 	ld	hl, #_maxShield
      0024ED 4E                    8238 	ld	c, (hl)
      0024EE 59                    8239 	ld	e, c
      0024EF 21r8Er00              8240 	ld	hl, #_shield
      0024F2 56                    8241 	ld	d, (hl)
      0024F3 7E                    8242 	ld	a, (hl)
      0024F4 91                    8243 	sub	a, c
      0024F5 CB 7B                 8244 	bit	7, e
      0024F7 28 07                 8245 	jr	Z, 00171$
      0024F9 CB 7A                 8246 	bit	7, d
      0024FB 20 08                 8247 	jr	NZ, 00172$
      0024FD BF                    8248 	cp	a, a
      0024FE 18 05                 8249 	jr	00172$
      002500                       8250 00171$:
      002500 CB 7A                 8251 	bit	7, d
      002502 28 01                 8252 	jr	Z, 00172$
      002504 37                    8253 	scf
      002505                       8254 00172$:
      002505 30 04                 8255 	jr	NC, 00122$
                                   8256 ;main.c:728: shield += 1;
      002507 21r8Er00              8257 	ld	hl, #_shield
      00250A 34                    8258 	inc	(hl)
      00250B                       8259 00122$:
                                   8260 ;main.c:730: setHealthBar(0, hull);
      00250B FAr8Dr00              8261 	ld	a, (#_hull)
      00250E 67                    8262 	ld	h, a
      00250F 2E 00                 8263 	ld	l, #0x00
      002511 E5                    8264 	push	hl
      002512 CDrA2r07              8265 	call	_setHealthBar
      002515 E1                    8266 	pop	hl
                                   8267 ;main.c:731: setHealthBar(1, shield);
      002516 FAr8Er00              8268 	ld	a, (#_shield)
      002519 67                    8269 	ld	h, a
      00251A 2E 01                 8270 	ld	l, #0x01
      00251C E5                    8271 	push	hl
      00251D CDrA2r07              8272 	call	_setHealthBar
      002520 E1                    8273 	pop	hl
                                   8274 ;main.c:968: if (joydata & J_B && fireCooldown == 0) {
      002521 FAr8Cr00              8275 	ld	a, (#_joydata)
      002524 CB 6F                 8276 	bit	5, a
      002526 28 09                 8277 	jr	Z, 00102$
      002528 FAr55r00              8278 	ld	a, (#_fireCooldown)
      00252B B7                    8279 	or	a, a
      00252C 20 03                 8280 	jr	NZ, 00102$
                                   8281 ;main.c:969: fire();
      00252E CDrFAr1B              8282 	call	_fire
      002531                       8283 00102$:
                                   8284 ;main.c:971: if (fireCooldown > 0) {
      002531 21r55r00              8285 	ld	hl, #_fireCooldown
      002534 7E                    8286 	ld	a, (hl)
      002535 B7                    8287 	or	a, a
      002536 28 01                 8288 	jr	Z, 00105$
                                   8289 ;main.c:972: --fireCooldown;
      002538 35                    8290 	dec	(hl)
      002539                       8291 00105$:
                                   8292 ;main.c:975: if (joydata & J_SELECT && switchDelay == 0) {
      002539 FAr8Cr00              8293 	ld	a, (#_joydata)
      00253C CB 77                 8294 	bit	6, a
      00253E 28 1F                 8295 	jr	Z, 00109$
      002540 FAr6Ar00              8296 	ld	a, (#_switchDelay)
      002543 B7                    8297 	or	a, a
      002544 20 19                 8298 	jr	NZ, 00109$
                                   8299 ;main.c:976: currentGun++;
      002546 21r69r00              8300 	ld	hl, #_currentGun
      002549 34                    8301 	inc	(hl)
                                   8302 ;main.c:977: if (currentGun >= GUNCOUNT) {
      00254A 21rA1r07              8303 	ld	hl, #_GUNCOUNT
      00254D 4E                    8304 	ld	c, (hl)
      00254E 21r69r00              8305 	ld	hl, #_currentGun
      002551 7E                    8306 	ld	a, (hl)
      002552 91                    8307 	sub	a, c
      002553 38 02                 8308 	jr	C, 00107$
                                   8309 ;main.c:978: currentGun = 0;
      002555 36 00                 8310 	ld	(hl), #0x00
      002557                       8311 00107$:
                                   8312 ;main.c:980: setGunIcon();
      002557 CDrDFr1B              8313 	call	_setGunIcon
                                   8314 ;main.c:981: switchDelay = 30;
      00255A 21r6Ar00              8315 	ld	hl, #_switchDelay
      00255D 36 1E                 8316 	ld	(hl), #0x1e
      00255F                       8317 00109$:
                                   8318 ;main.c:983: if (switchDelay != 0) {
      00255F 21r6Ar00              8319 	ld	hl, #_switchDelay
      002562 7E                    8320 	ld	a, (hl)
      002563 B7                    8321 	or	a, a
      002564 28 01                 8322 	jr	Z, 00112$
                                   8323 ;main.c:984: switchDelay--;
      002566 35                    8324 	dec	(hl)
      002567                       8325 00112$:
                                   8326 ;main.c:986: moveProjectiles();
      002567 CDrC9r21              8327 	call	_moveProjectiles
                                   8328 ;main.c:998: SHOW_WIN;	
      00256A F0r00                 8329 	ldh	a, (_LCDC_REG + 0)
      00256C F6 20                 8330 	or	a, #0x20
      00256E E0r00                 8331 	ldh	(_LCDC_REG + 0), a
                                   8332 ;main.c:999: wait_vbl_done(); // Idle until next frame
      002570 CDr00r00              8333 	call	_wait_vbl_done
                                   8334 ;main.c:1004: }
      002573 C3rD1r24              8335 	jp	00114$
                                   8336 	.area _CODE
                                   8337 	.area _INITIALIZER
      000000                       8338 __xinit__hullabel:
      000000 12                    8339 	.db #0x12	; 18
      000001 1F                    8340 	.db #0x1f	; 31
      000002 16                    8341 	.db #0x16	; 22
      000003 16                    8342 	.db #0x16	; 22
      000004                       8343 __xinit__shieldlabel:
      000004 1D                    8344 	.db #0x1d	; 29
      000005 12                    8345 	.db #0x12	; 18
      000006 16                    8346 	.db #0x16	; 22
      000007 0E                    8347 	.db #0x0e	; 14
      000008                       8348 __xinit__weaponlabel:
      000008 21                    8349 	.db #0x21	; 33
      000009 0F                    8350 	.db #0x0f	; 15
      00000A 1A                    8351 	.db #0x1a	; 26
      00000B 18                    8352 	.db #0x18	; 24
      00000C                       8353 __xinit__scorelabel:
      00000C 1D                    8354 	.db #0x1d	; 29
      00000D 0D                    8355 	.db #0x0d	; 13
      00000E 1C                    8356 	.db #0x1c	; 28
      00000F 0F                    8357 	.db #0x0f	; 15
      000010                       8358 __xinit__blob:
      000010 00 00                 8359 	.dw #0x0000
      000012 00 00                 8360 	.dw #0x0000
      000014 00                    8361 	.db #0x00	;  0
      000015 00                    8362 	.db #0x00	;  0
      000016 40                    8363 	.db #0x40	; 64
      000017 00                    8364 	.db #0x00	; 0
      000018 01                    8365 	.db #0x01	; 1
      000019 01                    8366 	.db #0x01	; 1
      00001A 01                    8367 	.db #0x01	; 1
      00001B 32                    8368 	.db #0x32	; 50	'2'
      00001C 03                    8369 	.db #0x03	;  3
      00001D 01                    8370 	.db #0x01	; 1
      00001E 00                    8371 	.db #0x00	;  0
      00001F 00                    8372 	.db #0x00	;  0
      000020                       8373 __xinit__bigblob:
      000020 00 00                 8374 	.dw #0x0000
      000022 00 00                 8375 	.dw #0x0000
      000024 00                    8376 	.db #0x00	;  0
      000025 00                    8377 	.db #0x00	;  0
      000026 50                    8378 	.db #0x50	; 80	'P'
      000027 52                    8379 	.db #0x52	; 82	'R'
      000028 02                    8380 	.db #0x02	; 2
      000029 01                    8381 	.db #0x01	; 1
      00002A 01                    8382 	.db #0x01	; 1
      00002B 32                    8383 	.db #0x32	; 50	'2'
      00002C 03                    8384 	.db #0x03	;  3
      00002D 01                    8385 	.db #0x01	; 1
      00002E 00                    8386 	.db #0x00	;  0
      00002F 00                    8387 	.db #0x00	;  0
      000030                       8388 __xinit__singleGun:
      000030 00 00                 8389 	.dw #0x0000
      000032 00 00                 8390 	.dw #0x0000
      000034 00                    8391 	.db #0x00	;  0
      000035 00                    8392 	.db #0x00	;  0
      000036 FF                    8393 	.db #0xff	; -1
      000037 02                    8394 	.db #0x02	; 2
      000038 00                    8395 	.db #0x00	; 0
      000039 01                    8396 	.db #0x01	; 1
      00003A 0F                    8397 	.db #0x0f	; 15
      00003B 20                    8398 	.db #0x20	; 32
      00003C                       8399 __xinit__doubleGun:
      00003C 00 00                 8400 	.dw #0x0000
      00003E 00 00                 8401 	.dw #0x0000
      000040 00                    8402 	.db #0x00	;  0
      000041 00                    8403 	.db #0x00	;  0
      000042 FF                    8404 	.db #0xff	; -1
      000043 02                    8405 	.db #0x02	; 2
      000044 00                    8406 	.db #0x00	; 0
      000045 01                    8407 	.db #0x01	; 1
      000046 0F                    8408 	.db #0x0f	; 15
      000047 26                    8409 	.db #0x26	; 38
      000048                       8410 __xinit__missile:
      000048 00 00                 8411 	.dw #0x0000
      00004A 00 00                 8412 	.dw #0x0000
      00004C 00                    8413 	.db #0x00	;  0
      00004D 00                    8414 	.db #0x00	;  0
      00004E FF                    8415 	.db #0xff	; -1
      00004F 01                    8416 	.db #0x01	; 1
      000050 00                    8417 	.db #0x00	; 0
      000051 01                    8418 	.db #0x01	; 1
      000052 1E                    8419 	.db #0x1e	; 30
      000053 2C                    8420 	.db #0x2c	; 44
      000054                       8421 __xinit__oldestProjectile:
      000054 00                    8422 	.db #0x00	; 0
      000055                       8423 __xinit__fireCooldown:
      000055 00                    8424 	.db #0x00	; 0
      000056                       8425 __xinit__xDir:
      000056 00                    8426 	.db #0x00	;  0
      000057                       8427 __xinit__yDir:
      000057 FF                    8428 	.db #0xff	; -1
      000058                       8429 __xinit__xSpeed:
      000058 00                    8430 	.db #0x00	;  0
      000059                       8431 __xinit__ySpeed:
      000059 00                    8432 	.db #0x00	;  0
      00005A                       8433 __xinit__playerX:
      00005A 00 0A                 8434 	.dw #0x0a00
      00005C                       8435 __xinit__playerY:
      00005C 00 0A                 8436 	.dw #0x0a00
      00005E                       8437 __xinit__playerDrawX:
      00005E 50                    8438 	.db #0x50	; 80	'P'
      00005F                       8439 __xinit__playerDrawY:
      00005F 50                    8440 	.db #0x50	; 80	'P'
      000060                       8441 __xinit__bgX:
      000060 00 00                 8442 	.dw #0x0000
      000062                       8443 __xinit__bgY:
      000062 00 00                 8444 	.dw #0x0000
      000064                       8445 __xinit__xOverflow:
      000064 00 00                 8446 	.dw #0x0000
      000066                       8447 __xinit__yOverflow:
      000066 00 00                 8448 	.dw #0x0000
      000068                       8449 __xinit__enemyCollisionCount:
      000068 00                    8450 	.db #0x00	; 0
      000069                       8451 __xinit__currentGun:
      000069 00                    8452 	.db #0x00	; 0
      00006A                       8453 __xinit__switchDelay:
      00006A 00                    8454 	.db #0x00	; 0
      00006B                       8455 __xinit__gunMap:
      00006B 53                    8456 	.db #0x53	; 83	'S'
      00006C 5B                    8457 	.db #0x5b	; 91
      00006D 61                    8458 	.db #0x61	; 97	'a'
      00006E                       8459 __xinit__score:
      00006E 00 00                 8460 	.dw #0x0000
      000070                       8461 __xinit__bcd:
      000070 00 00 00 00           8462 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      000074                       8463 __xinit__INCREMENT:
      000074 01 00 00 00           8464 	.byte #0x01, #0x00, #0x00, #0x00	; 1
                                   8465 	.area _CABS (ABS)
