                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _moveProjectiles
                                     15 	.globl _fire
                                     16 	.globl _setGunIcon
                                     17 	.globl _checkCollision
                                     18 	.globl _takeDamage
                                     19 	.globl _move
                                     20 	.globl _initEnemies
                                     21 	.globl _updateEnemyPositions
                                     22 	.globl _playSound
                                     23 	.globl _updateDirection
                                     24 	.globl _incrementScore
                                     25 	.globl _updateScore
                                     26 	.globl _setHealthBar
                                     27 	.globl _interruptLCD
                                     28 	.globl _bcd2text
                                     29 	.globl _bcd_add
                                     30 	.globl _rand
                                     31 	.globl _initrand
                                     32 	.globl _font_set
                                     33 	.globl _font_load
                                     34 	.globl _font_init
                                     35 	.globl _set_sprite_data
                                     36 	.globl _set_win_tiles
                                     37 	.globl _set_bkg_tiles
                                     38 	.globl _set_bkg_data
                                     39 	.globl _wait_vbl_done
                                     40 	.globl _set_interrupts
                                     41 	.globl _waitpad
                                     42 	.globl _joypad
                                     43 	.globl _add_LCD
                                     44 	.globl _INCREMENT
                                     45 	.globl _bcd
                                     46 	.globl _score
                                     47 	.globl _gunMap
                                     48 	.globl _switchDelay
                                     49 	.globl _currentGun
                                     50 	.globl _enemyCollisionCount
                                     51 	.globl _yOverflow
                                     52 	.globl _xOverflow
                                     53 	.globl _bgY
                                     54 	.globl _bgX
                                     55 	.globl _playerDrawY
                                     56 	.globl _playerDrawX
                                     57 	.globl _playerY
                                     58 	.globl _playerX
                                     59 	.globl _ySpeed
                                     60 	.globl _xSpeed
                                     61 	.globl _yDir
                                     62 	.globl _xDir
                                     63 	.globl _fireCooldown
                                     64 	.globl _oldestProjectile
                                     65 	.globl _missile
                                     66 	.globl _doubleGun
                                     67 	.globl _singleGun
                                     68 	.globl _blob
                                     69 	.globl _scorelabel
                                     70 	.globl _weaponlabel
                                     71 	.globl _shieldlabel
                                     72 	.globl _hullabel
                                     73 	.globl _min_font
                                     74 	.globl _shield
                                     75 	.globl _hull
                                     76 	.globl _joydata
                                     77 	.globl _projectiles
                                     78 	.globl _enemies
                                     79 	.globl _GUNCOUNT
                                     80 	.globl _maxShield
                                     81 	.globl _maxHull
                                     82 	.globl _PLAYERSIZE
                                     83 	.globl _PROJECTILECOUNT
                                     84 	.globl _ySpawnPositions
                                     85 	.globl _xSpawnPositions
                                     86 	.globl _ENEMYCOUNT
                                     87 	.globl _EMPTYSPRITE
                                     88 	.globl _BLANK
                                     89 	.globl _BLANKSIZE
                                     90 	.globl _Player1
                                     91 	.globl _ProjectileTiles
                                     92 	.globl _enemy1
                                     93 	.globl _healthblock
                                     94 	.globl _backgroundtiles
                                     95 	.globl _background1
                                     96 	.globl _cross
                                     97 ;--------------------------------------------------------
                                     98 ; special function registers
                                     99 ;--------------------------------------------------------
                                    100 ;--------------------------------------------------------
                                    101 ; ram data
                                    102 ;--------------------------------------------------------
                                    103 	.area _DATA
      000000                        104 _enemies::
      000000                        105 	.ds 80
      000050                        106 _projectiles::
      000050                        107 	.ds 55
      000087                        108 _joydata::
      000087                        109 	.ds 1
      000088                        110 _hull::
      000088                        111 	.ds 1
      000089                        112 _shield::
      000089                        113 	.ds 1
      00008A                        114 _min_font::
      00008A                        115 	.ds 2
                                    116 ;--------------------------------------------------------
                                    117 ; ram data
                                    118 ;--------------------------------------------------------
                                    119 	.area _INITIALIZED
      000000                        120 _hullabel::
      000000                        121 	.ds 4
      000004                        122 _shieldlabel::
      000004                        123 	.ds 4
      000008                        124 _weaponlabel::
      000008                        125 	.ds 4
      00000C                        126 _scorelabel::
      00000C                        127 	.ds 4
      000010                        128 _blob::
      000010                        129 	.ds 16
      000020                        130 _singleGun::
      000020                        131 	.ds 11
      00002B                        132 _doubleGun::
      00002B                        133 	.ds 11
      000036                        134 _missile::
      000036                        135 	.ds 11
      000041                        136 _oldestProjectile::
      000041                        137 	.ds 1
      000042                        138 _fireCooldown::
      000042                        139 	.ds 1
      000043                        140 _xDir::
      000043                        141 	.ds 1
      000044                        142 _yDir::
      000044                        143 	.ds 1
      000045                        144 _xSpeed::
      000045                        145 	.ds 1
      000046                        146 _ySpeed::
      000046                        147 	.ds 1
      000047                        148 _playerX::
      000047                        149 	.ds 2
      000049                        150 _playerY::
      000049                        151 	.ds 2
      00004B                        152 _playerDrawX::
      00004B                        153 	.ds 1
      00004C                        154 _playerDrawY::
      00004C                        155 	.ds 1
      00004D                        156 _bgX::
      00004D                        157 	.ds 2
      00004F                        158 _bgY::
      00004F                        159 	.ds 2
      000051                        160 _xOverflow::
      000051                        161 	.ds 2
      000053                        162 _yOverflow::
      000053                        163 	.ds 2
      000055                        164 _enemyCollisionCount::
      000055                        165 	.ds 1
      000056                        166 _currentGun::
      000056                        167 	.ds 1
      000057                        168 _switchDelay::
      000057                        169 	.ds 1
      000058                        170 _gunMap::
      000058                        171 	.ds 3
      00005B                        172 _score::
      00005B                        173 	.ds 2
      00005D                        174 _bcd::
      00005D                        175 	.ds 4
      000061                        176 _INCREMENT::
      000061                        177 	.ds 4
                                    178 ;--------------------------------------------------------
                                    179 ; absolute external ram data
                                    180 ;--------------------------------------------------------
                                    181 	.area _DABS (ABS)
                                    182 ;--------------------------------------------------------
                                    183 ; global & static initialisations
                                    184 ;--------------------------------------------------------
                                    185 	.area _HOME
                                    186 	.area _GSINIT
                                    187 	.area _GSFINAL
                                    188 	.area _GSINIT
                                    189 ;--------------------------------------------------------
                                    190 ; Home
                                    191 ;--------------------------------------------------------
                                    192 	.area _HOME
                                    193 	.area _HOME
                                    194 ;--------------------------------------------------------
                                    195 ; code
                                    196 ;--------------------------------------------------------
                                    197 	.area _CODE
                                    198 ;main.c:101: void interruptLCD()
                                    199 ;	---------------------------------
                                    200 ; Function interruptLCD
                                    201 ; ---------------------------------
      000000                        202 _interruptLCD::
                                    203 ;main.c:103: HIDE_SPRITES;
      000000 F0r00                  204 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  205 	and	a, #0xfd
      000004 E0r00                  206 	ldh	(_LCDC_REG + 0), a
                                    207 ;main.c:104: }
      000006 C9                     208 	ret
      000007                        209 _cross:
      000007 18                     210 	.db #0x18	; 24
      000008 18                     211 	.db #0x18	; 24
      000009 18                     212 	.db #0x18	; 24
      00000A 18                     213 	.db #0x18	; 24
      00000B 3C                     214 	.db #0x3c	; 60
      00000C 3C                     215 	.db #0x3c	; 60
      00000D 3C                     216 	.db #0x3c	; 60
      00000E 3C                     217 	.db #0x3c	; 60
      00000F 7E                     218 	.db #0x7e	; 126
      000010 7E                     219 	.db #0x7e	; 126
      000011 7E                     220 	.db #0x7e	; 126
      000012 7E                     221 	.db #0x7e	; 126
      000013 FF                     222 	.db #0xff	; 255
      000014 FF                     223 	.db #0xff	; 255
      000015 FF                     224 	.db #0xff	; 255
      000016 FF                     225 	.db #0xff	; 255
      000017 0F                     226 	.db #0x0f	; 15
      000018 0F                     227 	.db #0x0f	; 15
      000019 3F                     228 	.db #0x3f	; 63
      00001A 3F                     229 	.db #0x3f	; 63
      00001B FF                     230 	.db #0xff	; 255
      00001C FF                     231 	.db #0xff	; 255
      00001D FF                     232 	.db #0xff	; 255
      00001E FF                     233 	.db #0xff	; 255
      00001F 7E                     234 	.db #0x7e	; 126
      000020 7E                     235 	.db #0x7e	; 126
      000021 3E                     236 	.db #0x3e	; 62
      000022 3E                     237 	.db #0x3e	; 62
      000023 1C                     238 	.db #0x1c	; 28
      000024 1C                     239 	.db #0x1c	; 28
      000025 0C                     240 	.db #0x0c	; 12
      000026 0C                     241 	.db #0x0c	; 12
      000027 C0                     242 	.db #0xc0	; 192
      000028 C0                     243 	.db #0xc0	; 192
      000029 F0                     244 	.db #0xf0	; 240
      00002A F0                     245 	.db #0xf0	; 240
      00002B FC                     246 	.db #0xfc	; 252
      00002C FC                     247 	.db #0xfc	; 252
      00002D FF                     248 	.db #0xff	; 255
      00002E FF                     249 	.db #0xff	; 255
      00002F FF                     250 	.db #0xff	; 255
      000030 FF                     251 	.db #0xff	; 255
      000031 FC                     252 	.db #0xfc	; 252
      000032 FC                     253 	.db #0xfc	; 252
      000033 F0                     254 	.db #0xf0	; 240
      000034 F0                     255 	.db #0xf0	; 240
      000035 C0                     256 	.db #0xc0	; 192
      000036 C0                     257 	.db #0xc0	; 192
      000037 0C                     258 	.db #0x0c	; 12
      000038 0C                     259 	.db #0x0c	; 12
      000039 1C                     260 	.db #0x1c	; 28
      00003A 1C                     261 	.db #0x1c	; 28
      00003B 3E                     262 	.db #0x3e	; 62
      00003C 3E                     263 	.db #0x3e	; 62
      00003D 7E                     264 	.db #0x7e	; 126
      00003E 7E                     265 	.db #0x7e	; 126
      00003F FF                     266 	.db #0xff	; 255
      000040 FF                     267 	.db #0xff	; 255
      000041 FF                     268 	.db #0xff	; 255
      000042 FF                     269 	.db #0xff	; 255
      000043 3F                     270 	.db #0x3f	; 63
      000044 3F                     271 	.db #0x3f	; 63
      000045 0F                     272 	.db #0x0f	; 15
      000046 0F                     273 	.db #0x0f	; 15
      000047 FF                     274 	.db #0xff	; 255
      000048 FF                     275 	.db #0xff	; 255
      000049 FF                     276 	.db #0xff	; 255
      00004A FF                     277 	.db #0xff	; 255
      00004B 7E                     278 	.db #0x7e	; 126
      00004C 7E                     279 	.db #0x7e	; 126
      00004D 7E                     280 	.db #0x7e	; 126
      00004E 7E                     281 	.db #0x7e	; 126
      00004F 3C                     282 	.db #0x3c	; 60
      000050 3C                     283 	.db #0x3c	; 60
      000051 3C                     284 	.db #0x3c	; 60
      000052 3C                     285 	.db #0x3c	; 60
      000053 18                     286 	.db #0x18	; 24
      000054 18                     287 	.db #0x18	; 24
      000055 18                     288 	.db #0x18	; 24
      000056 18                     289 	.db #0x18	; 24
      000057 30                     290 	.db #0x30	; 48	'0'
      000058 30                     291 	.db #0x30	; 48	'0'
      000059 38                     292 	.db #0x38	; 56	'8'
      00005A 38                     293 	.db #0x38	; 56	'8'
      00005B 7C                     294 	.db #0x7c	; 124
      00005C 7C                     295 	.db #0x7c	; 124
      00005D 7E                     296 	.db #0x7e	; 126
      00005E 7E                     297 	.db #0x7e	; 126
      00005F FF                     298 	.db #0xff	; 255
      000060 FF                     299 	.db #0xff	; 255
      000061 FF                     300 	.db #0xff	; 255
      000062 FF                     301 	.db #0xff	; 255
      000063 FC                     302 	.db #0xfc	; 252
      000064 FC                     303 	.db #0xfc	; 252
      000065 F0                     304 	.db #0xf0	; 240
      000066 F0                     305 	.db #0xf0	; 240
      000067 03                     306 	.db #0x03	; 3
      000068 03                     307 	.db #0x03	; 3
      000069 0F                     308 	.db #0x0f	; 15
      00006A 0F                     309 	.db #0x0f	; 15
      00006B 3F                     310 	.db #0x3f	; 63
      00006C 3F                     311 	.db #0x3f	; 63
      00006D FF                     312 	.db #0xff	; 255
      00006E FF                     313 	.db #0xff	; 255
      00006F FF                     314 	.db #0xff	; 255
      000070 FF                     315 	.db #0xff	; 255
      000071 3F                     316 	.db #0x3f	; 63
      000072 3F                     317 	.db #0x3f	; 63
      000073 0F                     318 	.db #0x0f	; 15
      000074 0F                     319 	.db #0x0f	; 15
      000075 03                     320 	.db #0x03	; 3
      000076 03                     321 	.db #0x03	; 3
      000077 F0                     322 	.db #0xf0	; 240
      000078 F0                     323 	.db #0xf0	; 240
      000079 FC                     324 	.db #0xfc	; 252
      00007A FC                     325 	.db #0xfc	; 252
      00007B FF                     326 	.db #0xff	; 255
      00007C FF                     327 	.db #0xff	; 255
      00007D FF                     328 	.db #0xff	; 255
      00007E FF                     329 	.db #0xff	; 255
      00007F 7E                     330 	.db #0x7e	; 126
      000080 7E                     331 	.db #0x7e	; 126
      000081 7C                     332 	.db #0x7c	; 124
      000082 7C                     333 	.db #0x7c	; 124
      000083 38                     334 	.db #0x38	; 56	'8'
      000084 38                     335 	.db #0x38	; 56	'8'
      000085 30                     336 	.db #0x30	; 48	'0'
      000086 30                     337 	.db #0x30	; 48	'0'
      000087                        338 _background1:
      000087 26                     339 	.db #0x26	; 38
      000088 26                     340 	.db #0x26	; 38
      000089 26                     341 	.db #0x26	; 38
      00008A 26                     342 	.db #0x26	; 38
      00008B 26                     343 	.db #0x26	; 38
      00008C 26                     344 	.db #0x26	; 38
      00008D 26                     345 	.db #0x26	; 38
      00008E 26                     346 	.db #0x26	; 38
      00008F 26                     347 	.db #0x26	; 38
      000090 26                     348 	.db #0x26	; 38
      000091 26                     349 	.db #0x26	; 38
      000092 2A                     350 	.db #0x2a	; 42
      000093 29                     351 	.db #0x29	; 41
      000094 26                     352 	.db #0x26	; 38
      000095 26                     353 	.db #0x26	; 38
      000096 26                     354 	.db #0x26	; 38
      000097 26                     355 	.db #0x26	; 38
      000098 26                     356 	.db #0x26	; 38
      000099 26                     357 	.db #0x26	; 38
      00009A 26                     358 	.db #0x26	; 38
      00009B 2C                     359 	.db #0x2c	; 44
      00009C 26                     360 	.db #0x26	; 38
      00009D 26                     361 	.db #0x26	; 38
      00009E 26                     362 	.db #0x26	; 38
      00009F 26                     363 	.db #0x26	; 38
      0000A0 26                     364 	.db #0x26	; 38
      0000A1 26                     365 	.db #0x26	; 38
      0000A2 26                     366 	.db #0x26	; 38
      0000A3 26                     367 	.db #0x26	; 38
      0000A4 26                     368 	.db #0x26	; 38
      0000A5 26                     369 	.db #0x26	; 38
      0000A6 26                     370 	.db #0x26	; 38
      0000A7 26                     371 	.db #0x26	; 38
      0000A8 2B                     372 	.db #0x2b	; 43
      0000A9 26                     373 	.db #0x26	; 38
      0000AA 26                     374 	.db #0x26	; 38
      0000AB 26                     375 	.db #0x26	; 38
      0000AC 26                     376 	.db #0x26	; 38
      0000AD 26                     377 	.db #0x26	; 38
      0000AE 26                     378 	.db #0x26	; 38
      0000AF 26                     379 	.db #0x26	; 38
      0000B0 26                     380 	.db #0x26	; 38
      0000B1 26                     381 	.db #0x26	; 38
      0000B2 26                     382 	.db #0x26	; 38
      0000B3 26                     383 	.db #0x26	; 38
      0000B4 26                     384 	.db #0x26	; 38
      0000B5 26                     385 	.db #0x26	; 38
      0000B6 26                     386 	.db #0x26	; 38
      0000B7 26                     387 	.db #0x26	; 38
      0000B8 26                     388 	.db #0x26	; 38
      0000B9 26                     389 	.db #0x26	; 38
      0000BA 26                     390 	.db #0x26	; 38
      0000BB 26                     391 	.db #0x26	; 38
      0000BC 26                     392 	.db #0x26	; 38
      0000BD 26                     393 	.db #0x26	; 38
      0000BE 26                     394 	.db #0x26	; 38
      0000BF 26                     395 	.db #0x26	; 38
      0000C0 26                     396 	.db #0x26	; 38
      0000C1 26                     397 	.db #0x26	; 38
      0000C2 26                     398 	.db #0x26	; 38
      0000C3 26                     399 	.db #0x26	; 38
      0000C4 26                     400 	.db #0x26	; 38
      0000C5 26                     401 	.db #0x26	; 38
      0000C6 26                     402 	.db #0x26	; 38
      0000C7 26                     403 	.db #0x26	; 38
      0000C8 26                     404 	.db #0x26	; 38
      0000C9 26                     405 	.db #0x26	; 38
      0000CA 26                     406 	.db #0x26	; 38
      0000CB 26                     407 	.db #0x26	; 38
      0000CC 26                     408 	.db #0x26	; 38
      0000CD 26                     409 	.db #0x26	; 38
      0000CE 26                     410 	.db #0x26	; 38
      0000CF 26                     411 	.db #0x26	; 38
      0000D0 26                     412 	.db #0x26	; 38
      0000D1 26                     413 	.db #0x26	; 38
      0000D2 26                     414 	.db #0x26	; 38
      0000D3 26                     415 	.db #0x26	; 38
      0000D4 26                     416 	.db #0x26	; 38
      0000D5 26                     417 	.db #0x26	; 38
      0000D6 26                     418 	.db #0x26	; 38
      0000D7 26                     419 	.db #0x26	; 38
      0000D8 26                     420 	.db #0x26	; 38
      0000D9 26                     421 	.db #0x26	; 38
      0000DA 26                     422 	.db #0x26	; 38
      0000DB 26                     423 	.db #0x26	; 38
      0000DC 26                     424 	.db #0x26	; 38
      0000DD 26                     425 	.db #0x26	; 38
      0000DE 26                     426 	.db #0x26	; 38
      0000DF 26                     427 	.db #0x26	; 38
      0000E0 26                     428 	.db #0x26	; 38
      0000E1 26                     429 	.db #0x26	; 38
      0000E2 26                     430 	.db #0x26	; 38
      0000E3 26                     431 	.db #0x26	; 38
      0000E4 26                     432 	.db #0x26	; 38
      0000E5 26                     433 	.db #0x26	; 38
      0000E6 26                     434 	.db #0x26	; 38
      0000E7 26                     435 	.db #0x26	; 38
      0000E8 26                     436 	.db #0x26	; 38
      0000E9 26                     437 	.db #0x26	; 38
      0000EA 26                     438 	.db #0x26	; 38
      0000EB 26                     439 	.db #0x26	; 38
      0000EC 26                     440 	.db #0x26	; 38
      0000ED 26                     441 	.db #0x26	; 38
      0000EE 26                     442 	.db #0x26	; 38
      0000EF 26                     443 	.db #0x26	; 38
      0000F0 26                     444 	.db #0x26	; 38
      0000F1 26                     445 	.db #0x26	; 38
      0000F2 26                     446 	.db #0x26	; 38
      0000F3 26                     447 	.db #0x26	; 38
      0000F4 26                     448 	.db #0x26	; 38
      0000F5 26                     449 	.db #0x26	; 38
      0000F6 26                     450 	.db #0x26	; 38
      0000F7 26                     451 	.db #0x26	; 38
      0000F8 2B                     452 	.db #0x2b	; 43
      0000F9 26                     453 	.db #0x26	; 38
      0000FA 26                     454 	.db #0x26	; 38
      0000FB 26                     455 	.db #0x26	; 38
      0000FC 26                     456 	.db #0x26	; 38
      0000FD 26                     457 	.db #0x26	; 38
      0000FE 26                     458 	.db #0x26	; 38
      0000FF 2B                     459 	.db #0x2b	; 43
      000100 26                     460 	.db #0x26	; 38
      000101 26                     461 	.db #0x26	; 38
      000102 26                     462 	.db #0x26	; 38
      000103 26                     463 	.db #0x26	; 38
      000104 26                     464 	.db #0x26	; 38
      000105 26                     465 	.db #0x26	; 38
      000106 26                     466 	.db #0x26	; 38
      000107 26                     467 	.db #0x26	; 38
      000108 26                     468 	.db #0x26	; 38
      000109 26                     469 	.db #0x26	; 38
      00010A 26                     470 	.db #0x26	; 38
      00010B 26                     471 	.db #0x26	; 38
      00010C 2B                     472 	.db #0x2b	; 43
      00010D 26                     473 	.db #0x26	; 38
      00010E 26                     474 	.db #0x26	; 38
      00010F 26                     475 	.db #0x26	; 38
      000110 26                     476 	.db #0x26	; 38
      000111 26                     477 	.db #0x26	; 38
      000112 26                     478 	.db #0x26	; 38
      000113 26                     479 	.db #0x26	; 38
      000114 2C                     480 	.db #0x2c	; 44
      000115 26                     481 	.db #0x26	; 38
      000116 26                     482 	.db #0x26	; 38
      000117 26                     483 	.db #0x26	; 38
      000118 26                     484 	.db #0x26	; 38
      000119 26                     485 	.db #0x26	; 38
      00011A 26                     486 	.db #0x26	; 38
      00011B 26                     487 	.db #0x26	; 38
      00011C 26                     488 	.db #0x26	; 38
      00011D 26                     489 	.db #0x26	; 38
      00011E 26                     490 	.db #0x26	; 38
      00011F 26                     491 	.db #0x26	; 38
      000120 26                     492 	.db #0x26	; 38
      000121 26                     493 	.db #0x26	; 38
      000122 26                     494 	.db #0x26	; 38
      000123 26                     495 	.db #0x26	; 38
      000124 26                     496 	.db #0x26	; 38
      000125 26                     497 	.db #0x26	; 38
      000126 26                     498 	.db #0x26	; 38
      000127 26                     499 	.db #0x26	; 38
      000128 26                     500 	.db #0x26	; 38
      000129 2C                     501 	.db #0x2c	; 44
      00012A 26                     502 	.db #0x26	; 38
      00012B 26                     503 	.db #0x26	; 38
      00012C 26                     504 	.db #0x26	; 38
      00012D 26                     505 	.db #0x26	; 38
      00012E 25                     506 	.db #0x25	; 37
      00012F 26                     507 	.db #0x26	; 38
      000130 26                     508 	.db #0x26	; 38
      000131 26                     509 	.db #0x26	; 38
      000132 26                     510 	.db #0x26	; 38
      000133 26                     511 	.db #0x26	; 38
      000134 26                     512 	.db #0x26	; 38
      000135 26                     513 	.db #0x26	; 38
      000136 26                     514 	.db #0x26	; 38
      000137 26                     515 	.db #0x26	; 38
      000138 26                     516 	.db #0x26	; 38
      000139 26                     517 	.db #0x26	; 38
      00013A 26                     518 	.db #0x26	; 38
      00013B 26                     519 	.db #0x26	; 38
      00013C 2C                     520 	.db #0x2c	; 44
      00013D 26                     521 	.db #0x26	; 38
      00013E 26                     522 	.db #0x26	; 38
      00013F 26                     523 	.db #0x26	; 38
      000140 26                     524 	.db #0x26	; 38
      000141 26                     525 	.db #0x26	; 38
      000142 26                     526 	.db #0x26	; 38
      000143 26                     527 	.db #0x26	; 38
      000144 2B                     528 	.db #0x2b	; 43
      000145 26                     529 	.db #0x26	; 38
      000146 26                     530 	.db #0x26	; 38
      000147 26                     531 	.db #0x26	; 38
      000148 26                     532 	.db #0x26	; 38
      000149 26                     533 	.db #0x26	; 38
      00014A 26                     534 	.db #0x26	; 38
      00014B 26                     535 	.db #0x26	; 38
      00014C 26                     536 	.db #0x26	; 38
      00014D 26                     537 	.db #0x26	; 38
      00014E 26                     538 	.db #0x26	; 38
      00014F 26                     539 	.db #0x26	; 38
      000150 26                     540 	.db #0x26	; 38
      000151 26                     541 	.db #0x26	; 38
      000152 26                     542 	.db #0x26	; 38
      000153 26                     543 	.db #0x26	; 38
      000154 26                     544 	.db #0x26	; 38
      000155 26                     545 	.db #0x26	; 38
      000156 26                     546 	.db #0x26	; 38
      000157 26                     547 	.db #0x26	; 38
      000158 26                     548 	.db #0x26	; 38
      000159 26                     549 	.db #0x26	; 38
      00015A 26                     550 	.db #0x26	; 38
      00015B 26                     551 	.db #0x26	; 38
      00015C 26                     552 	.db #0x26	; 38
      00015D 26                     553 	.db #0x26	; 38
      00015E 26                     554 	.db #0x26	; 38
      00015F 26                     555 	.db #0x26	; 38
      000160 2C                     556 	.db #0x2c	; 44
      000161 26                     557 	.db #0x26	; 38
      000162 26                     558 	.db #0x26	; 38
      000163 26                     559 	.db #0x26	; 38
      000164 26                     560 	.db #0x26	; 38
      000165 26                     561 	.db #0x26	; 38
      000166 26                     562 	.db #0x26	; 38
      000167 26                     563 	.db #0x26	; 38
      000168 26                     564 	.db #0x26	; 38
      000169 26                     565 	.db #0x26	; 38
      00016A 26                     566 	.db #0x26	; 38
      00016B 26                     567 	.db #0x26	; 38
      00016C 26                     568 	.db #0x26	; 38
      00016D 26                     569 	.db #0x26	; 38
      00016E 26                     570 	.db #0x26	; 38
      00016F 26                     571 	.db #0x26	; 38
      000170 26                     572 	.db #0x26	; 38
      000171 26                     573 	.db #0x26	; 38
      000172 26                     574 	.db #0x26	; 38
      000173 26                     575 	.db #0x26	; 38
      000174 26                     576 	.db #0x26	; 38
      000175 26                     577 	.db #0x26	; 38
      000176 26                     578 	.db #0x26	; 38
      000177 26                     579 	.db #0x26	; 38
      000178 26                     580 	.db #0x26	; 38
      000179 26                     581 	.db #0x26	; 38
      00017A 26                     582 	.db #0x26	; 38
      00017B 26                     583 	.db #0x26	; 38
      00017C 26                     584 	.db #0x26	; 38
      00017D 26                     585 	.db #0x26	; 38
      00017E 26                     586 	.db #0x26	; 38
      00017F 26                     587 	.db #0x26	; 38
      000180 26                     588 	.db #0x26	; 38
      000181 26                     589 	.db #0x26	; 38
      000182 26                     590 	.db #0x26	; 38
      000183 26                     591 	.db #0x26	; 38
      000184 26                     592 	.db #0x26	; 38
      000185 26                     593 	.db #0x26	; 38
      000186 26                     594 	.db #0x26	; 38
      000187 26                     595 	.db #0x26	; 38
      000188 26                     596 	.db #0x26	; 38
      000189 26                     597 	.db #0x26	; 38
      00018A 26                     598 	.db #0x26	; 38
      00018B 26                     599 	.db #0x26	; 38
      00018C 26                     600 	.db #0x26	; 38
      00018D 26                     601 	.db #0x26	; 38
      00018E 26                     602 	.db #0x26	; 38
      00018F 26                     603 	.db #0x26	; 38
      000190 26                     604 	.db #0x26	; 38
      000191 26                     605 	.db #0x26	; 38
      000192 26                     606 	.db #0x26	; 38
      000193 26                     607 	.db #0x26	; 38
      000194 26                     608 	.db #0x26	; 38
      000195 2B                     609 	.db #0x2b	; 43
      000196 26                     610 	.db #0x26	; 38
      000197 26                     611 	.db #0x26	; 38
      000198 26                     612 	.db #0x26	; 38
      000199 26                     613 	.db #0x26	; 38
      00019A 26                     614 	.db #0x26	; 38
      00019B 26                     615 	.db #0x26	; 38
      00019C 26                     616 	.db #0x26	; 38
      00019D 26                     617 	.db #0x26	; 38
      00019E 26                     618 	.db #0x26	; 38
      00019F 26                     619 	.db #0x26	; 38
      0001A0 26                     620 	.db #0x26	; 38
      0001A1 26                     621 	.db #0x26	; 38
      0001A2 26                     622 	.db #0x26	; 38
      0001A3 26                     623 	.db #0x26	; 38
      0001A4 26                     624 	.db #0x26	; 38
      0001A5 26                     625 	.db #0x26	; 38
      0001A6 25                     626 	.db #0x25	; 37
      0001A7 26                     627 	.db #0x26	; 38
      0001A8 26                     628 	.db #0x26	; 38
      0001A9 26                     629 	.db #0x26	; 38
      0001AA 2B                     630 	.db #0x2b	; 43
      0001AB 26                     631 	.db #0x26	; 38
      0001AC 26                     632 	.db #0x26	; 38
      0001AD 26                     633 	.db #0x26	; 38
      0001AE 26                     634 	.db #0x26	; 38
      0001AF 26                     635 	.db #0x26	; 38
      0001B0 26                     636 	.db #0x26	; 38
      0001B1 26                     637 	.db #0x26	; 38
      0001B2 26                     638 	.db #0x26	; 38
      0001B3 26                     639 	.db #0x26	; 38
      0001B4 26                     640 	.db #0x26	; 38
      0001B5 26                     641 	.db #0x26	; 38
      0001B6 26                     642 	.db #0x26	; 38
      0001B7 26                     643 	.db #0x26	; 38
      0001B8 26                     644 	.db #0x26	; 38
      0001B9 26                     645 	.db #0x26	; 38
      0001BA 26                     646 	.db #0x26	; 38
      0001BB 26                     647 	.db #0x26	; 38
      0001BC 26                     648 	.db #0x26	; 38
      0001BD 26                     649 	.db #0x26	; 38
      0001BE 26                     650 	.db #0x26	; 38
      0001BF 26                     651 	.db #0x26	; 38
      0001C0 26                     652 	.db #0x26	; 38
      0001C1 26                     653 	.db #0x26	; 38
      0001C2 26                     654 	.db #0x26	; 38
      0001C3 26                     655 	.db #0x26	; 38
      0001C4 2B                     656 	.db #0x2b	; 43
      0001C5 26                     657 	.db #0x26	; 38
      0001C6 26                     658 	.db #0x26	; 38
      0001C7 26                     659 	.db #0x26	; 38
      0001C8 26                     660 	.db #0x26	; 38
      0001C9 26                     661 	.db #0x26	; 38
      0001CA 26                     662 	.db #0x26	; 38
      0001CB 26                     663 	.db #0x26	; 38
      0001CC 26                     664 	.db #0x26	; 38
      0001CD 26                     665 	.db #0x26	; 38
      0001CE 26                     666 	.db #0x26	; 38
      0001CF 26                     667 	.db #0x26	; 38
      0001D0 26                     668 	.db #0x26	; 38
      0001D1 26                     669 	.db #0x26	; 38
      0001D2 26                     670 	.db #0x26	; 38
      0001D3 26                     671 	.db #0x26	; 38
      0001D4 26                     672 	.db #0x26	; 38
      0001D5 26                     673 	.db #0x26	; 38
      0001D6 26                     674 	.db #0x26	; 38
      0001D7 26                     675 	.db #0x26	; 38
      0001D8 26                     676 	.db #0x26	; 38
      0001D9 26                     677 	.db #0x26	; 38
      0001DA 27                     678 	.db #0x27	; 39
      0001DB 28                     679 	.db #0x28	; 40
      0001DC 26                     680 	.db #0x26	; 38
      0001DD 26                     681 	.db #0x26	; 38
      0001DE 26                     682 	.db #0x26	; 38
      0001DF 26                     683 	.db #0x26	; 38
      0001E0 26                     684 	.db #0x26	; 38
      0001E1 26                     685 	.db #0x26	; 38
      0001E2 26                     686 	.db #0x26	; 38
      0001E3 26                     687 	.db #0x26	; 38
      0001E4 26                     688 	.db #0x26	; 38
      0001E5 26                     689 	.db #0x26	; 38
      0001E6 26                     690 	.db #0x26	; 38
      0001E7 26                     691 	.db #0x26	; 38
      0001E8 26                     692 	.db #0x26	; 38
      0001E9 26                     693 	.db #0x26	; 38
      0001EA 26                     694 	.db #0x26	; 38
      0001EB 26                     695 	.db #0x26	; 38
      0001EC 26                     696 	.db #0x26	; 38
      0001ED 26                     697 	.db #0x26	; 38
      0001EE 26                     698 	.db #0x26	; 38
      0001EF 26                     699 	.db #0x26	; 38
      0001F0 26                     700 	.db #0x26	; 38
      0001F1 26                     701 	.db #0x26	; 38
      0001F2 26                     702 	.db #0x26	; 38
      0001F3 26                     703 	.db #0x26	; 38
      0001F4 26                     704 	.db #0x26	; 38
      0001F5 26                     705 	.db #0x26	; 38
      0001F6 26                     706 	.db #0x26	; 38
      0001F7 26                     707 	.db #0x26	; 38
      0001F8 26                     708 	.db #0x26	; 38
      0001F9 26                     709 	.db #0x26	; 38
      0001FA 2A                     710 	.db #0x2a	; 42
      0001FB 29                     711 	.db #0x29	; 41
      0001FC 26                     712 	.db #0x26	; 38
      0001FD 26                     713 	.db #0x26	; 38
      0001FE 26                     714 	.db #0x26	; 38
      0001FF 26                     715 	.db #0x26	; 38
      000200 26                     716 	.db #0x26	; 38
      000201 26                     717 	.db #0x26	; 38
      000202 26                     718 	.db #0x26	; 38
      000203 26                     719 	.db #0x26	; 38
      000204 26                     720 	.db #0x26	; 38
      000205 26                     721 	.db #0x26	; 38
      000206 26                     722 	.db #0x26	; 38
      000207 26                     723 	.db #0x26	; 38
      000208 26                     724 	.db #0x26	; 38
      000209 26                     725 	.db #0x26	; 38
      00020A 26                     726 	.db #0x26	; 38
      00020B 26                     727 	.db #0x26	; 38
      00020C 26                     728 	.db #0x26	; 38
      00020D 26                     729 	.db #0x26	; 38
      00020E 27                     730 	.db #0x27	; 39
      00020F 28                     731 	.db #0x28	; 40
      000210 26                     732 	.db #0x26	; 38
      000211 26                     733 	.db #0x26	; 38
      000212 26                     734 	.db #0x26	; 38
      000213 26                     735 	.db #0x26	; 38
      000214 26                     736 	.db #0x26	; 38
      000215 26                     737 	.db #0x26	; 38
      000216 26                     738 	.db #0x26	; 38
      000217 26                     739 	.db #0x26	; 38
      000218 26                     740 	.db #0x26	; 38
      000219 26                     741 	.db #0x26	; 38
      00021A 26                     742 	.db #0x26	; 38
      00021B 26                     743 	.db #0x26	; 38
      00021C 26                     744 	.db #0x26	; 38
      00021D 26                     745 	.db #0x26	; 38
      00021E 26                     746 	.db #0x26	; 38
      00021F 2C                     747 	.db #0x2c	; 44
      000220 26                     748 	.db #0x26	; 38
      000221 26                     749 	.db #0x26	; 38
      000222 26                     750 	.db #0x26	; 38
      000223 26                     751 	.db #0x26	; 38
      000224 26                     752 	.db #0x26	; 38
      000225 26                     753 	.db #0x26	; 38
      000226 26                     754 	.db #0x26	; 38
      000227 26                     755 	.db #0x26	; 38
      000228 26                     756 	.db #0x26	; 38
      000229 26                     757 	.db #0x26	; 38
      00022A 26                     758 	.db #0x26	; 38
      00022B 26                     759 	.db #0x26	; 38
      00022C 26                     760 	.db #0x26	; 38
      00022D 26                     761 	.db #0x26	; 38
      00022E 2A                     762 	.db #0x2a	; 42
      00022F 29                     763 	.db #0x29	; 41
      000230 26                     764 	.db #0x26	; 38
      000231 26                     765 	.db #0x26	; 38
      000232 26                     766 	.db #0x26	; 38
      000233 26                     767 	.db #0x26	; 38
      000234 26                     768 	.db #0x26	; 38
      000235 26                     769 	.db #0x26	; 38
      000236 26                     770 	.db #0x26	; 38
      000237 26                     771 	.db #0x26	; 38
      000238 26                     772 	.db #0x26	; 38
      000239 26                     773 	.db #0x26	; 38
      00023A 26                     774 	.db #0x26	; 38
      00023B 26                     775 	.db #0x26	; 38
      00023C 26                     776 	.db #0x26	; 38
      00023D 25                     777 	.db #0x25	; 37
      00023E 26                     778 	.db #0x26	; 38
      00023F 26                     779 	.db #0x26	; 38
      000240 26                     780 	.db #0x26	; 38
      000241 26                     781 	.db #0x26	; 38
      000242 26                     782 	.db #0x26	; 38
      000243 26                     783 	.db #0x26	; 38
      000244 2C                     784 	.db #0x2c	; 44
      000245 26                     785 	.db #0x26	; 38
      000246 26                     786 	.db #0x26	; 38
      000247 26                     787 	.db #0x26	; 38
      000248 26                     788 	.db #0x26	; 38
      000249 26                     789 	.db #0x26	; 38
      00024A 26                     790 	.db #0x26	; 38
      00024B 26                     791 	.db #0x26	; 38
      00024C 26                     792 	.db #0x26	; 38
      00024D 26                     793 	.db #0x26	; 38
      00024E 26                     794 	.db #0x26	; 38
      00024F 26                     795 	.db #0x26	; 38
      000250 26                     796 	.db #0x26	; 38
      000251 26                     797 	.db #0x26	; 38
      000252 26                     798 	.db #0x26	; 38
      000253 26                     799 	.db #0x26	; 38
      000254 26                     800 	.db #0x26	; 38
      000255 26                     801 	.db #0x26	; 38
      000256 26                     802 	.db #0x26	; 38
      000257 26                     803 	.db #0x26	; 38
      000258 26                     804 	.db #0x26	; 38
      000259 26                     805 	.db #0x26	; 38
      00025A 26                     806 	.db #0x26	; 38
      00025B 26                     807 	.db #0x26	; 38
      00025C 26                     808 	.db #0x26	; 38
      00025D 26                     809 	.db #0x26	; 38
      00025E 26                     810 	.db #0x26	; 38
      00025F 26                     811 	.db #0x26	; 38
      000260 26                     812 	.db #0x26	; 38
      000261 26                     813 	.db #0x26	; 38
      000262 26                     814 	.db #0x26	; 38
      000263 26                     815 	.db #0x26	; 38
      000264 26                     816 	.db #0x26	; 38
      000265 26                     817 	.db #0x26	; 38
      000266 26                     818 	.db #0x26	; 38
      000267 26                     819 	.db #0x26	; 38
      000268 26                     820 	.db #0x26	; 38
      000269 26                     821 	.db #0x26	; 38
      00026A 2C                     822 	.db #0x2c	; 44
      00026B 26                     823 	.db #0x26	; 38
      00026C 26                     824 	.db #0x26	; 38
      00026D 26                     825 	.db #0x26	; 38
      00026E 26                     826 	.db #0x26	; 38
      00026F 26                     827 	.db #0x26	; 38
      000270 26                     828 	.db #0x26	; 38
      000271 26                     829 	.db #0x26	; 38
      000272 26                     830 	.db #0x26	; 38
      000273 26                     831 	.db #0x26	; 38
      000274 26                     832 	.db #0x26	; 38
      000275 26                     833 	.db #0x26	; 38
      000276 26                     834 	.db #0x26	; 38
      000277 26                     835 	.db #0x26	; 38
      000278 26                     836 	.db #0x26	; 38
      000279 2C                     837 	.db #0x2c	; 44
      00027A 26                     838 	.db #0x26	; 38
      00027B 26                     839 	.db #0x26	; 38
      00027C 26                     840 	.db #0x26	; 38
      00027D 26                     841 	.db #0x26	; 38
      00027E 26                     842 	.db #0x26	; 38
      00027F 26                     843 	.db #0x26	; 38
      000280 26                     844 	.db #0x26	; 38
      000281 26                     845 	.db #0x26	; 38
      000282 26                     846 	.db #0x26	; 38
      000283 26                     847 	.db #0x26	; 38
      000284 26                     848 	.db #0x26	; 38
      000285 26                     849 	.db #0x26	; 38
      000286 26                     850 	.db #0x26	; 38
      000287 26                     851 	.db #0x26	; 38
      000288 26                     852 	.db #0x26	; 38
      000289 26                     853 	.db #0x26	; 38
      00028A 26                     854 	.db #0x26	; 38
      00028B 26                     855 	.db #0x26	; 38
      00028C 26                     856 	.db #0x26	; 38
      00028D 26                     857 	.db #0x26	; 38
      00028E 26                     858 	.db #0x26	; 38
      00028F 26                     859 	.db #0x26	; 38
      000290 26                     860 	.db #0x26	; 38
      000291 26                     861 	.db #0x26	; 38
      000292 26                     862 	.db #0x26	; 38
      000293 26                     863 	.db #0x26	; 38
      000294 26                     864 	.db #0x26	; 38
      000295 2B                     865 	.db #0x2b	; 43
      000296 26                     866 	.db #0x26	; 38
      000297 26                     867 	.db #0x26	; 38
      000298 26                     868 	.db #0x26	; 38
      000299 26                     869 	.db #0x26	; 38
      00029A 26                     870 	.db #0x26	; 38
      00029B 26                     871 	.db #0x26	; 38
      00029C 26                     872 	.db #0x26	; 38
      00029D 26                     873 	.db #0x26	; 38
      00029E 26                     874 	.db #0x26	; 38
      00029F 26                     875 	.db #0x26	; 38
      0002A0 26                     876 	.db #0x26	; 38
      0002A1 26                     877 	.db #0x26	; 38
      0002A2 26                     878 	.db #0x26	; 38
      0002A3 26                     879 	.db #0x26	; 38
      0002A4 26                     880 	.db #0x26	; 38
      0002A5 26                     881 	.db #0x26	; 38
      0002A6 26                     882 	.db #0x26	; 38
      0002A7 28                     883 	.db #0x28	; 40
      0002A8 26                     884 	.db #0x26	; 38
      0002A9 26                     885 	.db #0x26	; 38
      0002AA 26                     886 	.db #0x26	; 38
      0002AB 26                     887 	.db #0x26	; 38
      0002AC 26                     888 	.db #0x26	; 38
      0002AD 26                     889 	.db #0x26	; 38
      0002AE 26                     890 	.db #0x26	; 38
      0002AF 26                     891 	.db #0x26	; 38
      0002B0 26                     892 	.db #0x26	; 38
      0002B1 26                     893 	.db #0x26	; 38
      0002B2 26                     894 	.db #0x26	; 38
      0002B3 26                     895 	.db #0x26	; 38
      0002B4 26                     896 	.db #0x26	; 38
      0002B5 26                     897 	.db #0x26	; 38
      0002B6 26                     898 	.db #0x26	; 38
      0002B7 26                     899 	.db #0x26	; 38
      0002B8 26                     900 	.db #0x26	; 38
      0002B9 26                     901 	.db #0x26	; 38
      0002BA 26                     902 	.db #0x26	; 38
      0002BB 26                     903 	.db #0x26	; 38
      0002BC 26                     904 	.db #0x26	; 38
      0002BD 26                     905 	.db #0x26	; 38
      0002BE 26                     906 	.db #0x26	; 38
      0002BF 26                     907 	.db #0x26	; 38
      0002C0 2B                     908 	.db #0x2b	; 43
      0002C1 26                     909 	.db #0x26	; 38
      0002C2 26                     910 	.db #0x26	; 38
      0002C3 26                     911 	.db #0x26	; 38
      0002C4 26                     912 	.db #0x26	; 38
      0002C5 26                     913 	.db #0x26	; 38
      0002C6 27                     914 	.db #0x27	; 39
      0002C7 29                     915 	.db #0x29	; 41
      0002C8 26                     916 	.db #0x26	; 38
      0002C9 26                     917 	.db #0x26	; 38
      0002CA 26                     918 	.db #0x26	; 38
      0002CB 26                     919 	.db #0x26	; 38
      0002CC 26                     920 	.db #0x26	; 38
      0002CD 26                     921 	.db #0x26	; 38
      0002CE 2B                     922 	.db #0x2b	; 43
      0002CF 26                     923 	.db #0x26	; 38
      0002D0 26                     924 	.db #0x26	; 38
      0002D1 26                     925 	.db #0x26	; 38
      0002D2 26                     926 	.db #0x26	; 38
      0002D3 26                     927 	.db #0x26	; 38
      0002D4 26                     928 	.db #0x26	; 38
      0002D5 26                     929 	.db #0x26	; 38
      0002D6 26                     930 	.db #0x26	; 38
      0002D7 26                     931 	.db #0x26	; 38
      0002D8 26                     932 	.db #0x26	; 38
      0002D9 26                     933 	.db #0x26	; 38
      0002DA 26                     934 	.db #0x26	; 38
      0002DB 26                     935 	.db #0x26	; 38
      0002DC 26                     936 	.db #0x26	; 38
      0002DD 26                     937 	.db #0x26	; 38
      0002DE 26                     938 	.db #0x26	; 38
      0002DF 26                     939 	.db #0x26	; 38
      0002E0 26                     940 	.db #0x26	; 38
      0002E1 26                     941 	.db #0x26	; 38
      0002E2 26                     942 	.db #0x26	; 38
      0002E3 26                     943 	.db #0x26	; 38
      0002E4 26                     944 	.db #0x26	; 38
      0002E5 26                     945 	.db #0x26	; 38
      0002E6 2A                     946 	.db #0x2a	; 42
      0002E7 26                     947 	.db #0x26	; 38
      0002E8 26                     948 	.db #0x26	; 38
      0002E9 26                     949 	.db #0x26	; 38
      0002EA 26                     950 	.db #0x26	; 38
      0002EB 26                     951 	.db #0x26	; 38
      0002EC 26                     952 	.db #0x26	; 38
      0002ED 26                     953 	.db #0x26	; 38
      0002EE 26                     954 	.db #0x26	; 38
      0002EF 26                     955 	.db #0x26	; 38
      0002F0 26                     956 	.db #0x26	; 38
      0002F1 26                     957 	.db #0x26	; 38
      0002F2 2C                     958 	.db #0x2c	; 44
      0002F3 26                     959 	.db #0x26	; 38
      0002F4 26                     960 	.db #0x26	; 38
      0002F5 26                     961 	.db #0x26	; 38
      0002F6 26                     962 	.db #0x26	; 38
      0002F7 26                     963 	.db #0x26	; 38
      0002F8 26                     964 	.db #0x26	; 38
      0002F9 26                     965 	.db #0x26	; 38
      0002FA 26                     966 	.db #0x26	; 38
      0002FB 26                     967 	.db #0x26	; 38
      0002FC 26                     968 	.db #0x26	; 38
      0002FD 26                     969 	.db #0x26	; 38
      0002FE 26                     970 	.db #0x26	; 38
      0002FF 26                     971 	.db #0x26	; 38
      000300 26                     972 	.db #0x26	; 38
      000301 26                     973 	.db #0x26	; 38
      000302 26                     974 	.db #0x26	; 38
      000303 26                     975 	.db #0x26	; 38
      000304 26                     976 	.db #0x26	; 38
      000305 26                     977 	.db #0x26	; 38
      000306 26                     978 	.db #0x26	; 38
      000307 26                     979 	.db #0x26	; 38
      000308 26                     980 	.db #0x26	; 38
      000309 26                     981 	.db #0x26	; 38
      00030A 26                     982 	.db #0x26	; 38
      00030B 26                     983 	.db #0x26	; 38
      00030C 26                     984 	.db #0x26	; 38
      00030D 26                     985 	.db #0x26	; 38
      00030E 26                     986 	.db #0x26	; 38
      00030F 26                     987 	.db #0x26	; 38
      000310 26                     988 	.db #0x26	; 38
      000311 26                     989 	.db #0x26	; 38
      000312 26                     990 	.db #0x26	; 38
      000313 26                     991 	.db #0x26	; 38
      000314 26                     992 	.db #0x26	; 38
      000315 26                     993 	.db #0x26	; 38
      000316 26                     994 	.db #0x26	; 38
      000317 2B                     995 	.db #0x2b	; 43
      000318 26                     996 	.db #0x26	; 38
      000319 26                     997 	.db #0x26	; 38
      00031A 26                     998 	.db #0x26	; 38
      00031B 26                     999 	.db #0x26	; 38
      00031C 26                    1000 	.db #0x26	; 38
      00031D 26                    1001 	.db #0x26	; 38
      00031E 26                    1002 	.db #0x26	; 38
      00031F 26                    1003 	.db #0x26	; 38
      000320 26                    1004 	.db #0x26	; 38
      000321 26                    1005 	.db #0x26	; 38
      000322 26                    1006 	.db #0x26	; 38
      000323 26                    1007 	.db #0x26	; 38
      000324 26                    1008 	.db #0x26	; 38
      000325 26                    1009 	.db #0x26	; 38
      000326 26                    1010 	.db #0x26	; 38
      000327 26                    1011 	.db #0x26	; 38
      000328 26                    1012 	.db #0x26	; 38
      000329 26                    1013 	.db #0x26	; 38
      00032A 26                    1014 	.db #0x26	; 38
      00032B 26                    1015 	.db #0x26	; 38
      00032C 26                    1016 	.db #0x26	; 38
      00032D 26                    1017 	.db #0x26	; 38
      00032E 26                    1018 	.db #0x26	; 38
      00032F 26                    1019 	.db #0x26	; 38
      000330 26                    1020 	.db #0x26	; 38
      000331 26                    1021 	.db #0x26	; 38
      000332 26                    1022 	.db #0x26	; 38
      000333 26                    1023 	.db #0x26	; 38
      000334 26                    1024 	.db #0x26	; 38
      000335 26                    1025 	.db #0x26	; 38
      000336 26                    1026 	.db #0x26	; 38
      000337 26                    1027 	.db #0x26	; 38
      000338 26                    1028 	.db #0x26	; 38
      000339 26                    1029 	.db #0x26	; 38
      00033A 26                    1030 	.db #0x26	; 38
      00033B 26                    1031 	.db #0x26	; 38
      00033C 26                    1032 	.db #0x26	; 38
      00033D 26                    1033 	.db #0x26	; 38
      00033E 2B                    1034 	.db #0x2b	; 43
      00033F 26                    1035 	.db #0x26	; 38
      000340 26                    1036 	.db #0x26	; 38
      000341 26                    1037 	.db #0x26	; 38
      000342 26                    1038 	.db #0x26	; 38
      000343 26                    1039 	.db #0x26	; 38
      000344 26                    1040 	.db #0x26	; 38
      000345 26                    1041 	.db #0x26	; 38
      000346 26                    1042 	.db #0x26	; 38
      000347 26                    1043 	.db #0x26	; 38
      000348 26                    1044 	.db #0x26	; 38
      000349 26                    1045 	.db #0x26	; 38
      00034A 2B                    1046 	.db #0x2b	; 43
      00034B 26                    1047 	.db #0x26	; 38
      00034C 26                    1048 	.db #0x26	; 38
      00034D 26                    1049 	.db #0x26	; 38
      00034E 26                    1050 	.db #0x26	; 38
      00034F 26                    1051 	.db #0x26	; 38
      000350 26                    1052 	.db #0x26	; 38
      000351 26                    1053 	.db #0x26	; 38
      000352 26                    1054 	.db #0x26	; 38
      000353 26                    1055 	.db #0x26	; 38
      000354 26                    1056 	.db #0x26	; 38
      000355 26                    1057 	.db #0x26	; 38
      000356 26                    1058 	.db #0x26	; 38
      000357 26                    1059 	.db #0x26	; 38
      000358 26                    1060 	.db #0x26	; 38
      000359 26                    1061 	.db #0x26	; 38
      00035A 26                    1062 	.db #0x26	; 38
      00035B 26                    1063 	.db #0x26	; 38
      00035C 26                    1064 	.db #0x26	; 38
      00035D 26                    1065 	.db #0x26	; 38
      00035E 26                    1066 	.db #0x26	; 38
      00035F 26                    1067 	.db #0x26	; 38
      000360 26                    1068 	.db #0x26	; 38
      000361 26                    1069 	.db #0x26	; 38
      000362 26                    1070 	.db #0x26	; 38
      000363 26                    1071 	.db #0x26	; 38
      000364 26                    1072 	.db #0x26	; 38
      000365 26                    1073 	.db #0x26	; 38
      000366 2C                    1074 	.db #0x2c	; 44
      000367 26                    1075 	.db #0x26	; 38
      000368 26                    1076 	.db #0x26	; 38
      000369 26                    1077 	.db #0x26	; 38
      00036A 26                    1078 	.db #0x26	; 38
      00036B 26                    1079 	.db #0x26	; 38
      00036C 26                    1080 	.db #0x26	; 38
      00036D 26                    1081 	.db #0x26	; 38
      00036E 26                    1082 	.db #0x26	; 38
      00036F 26                    1083 	.db #0x26	; 38
      000370 2B                    1084 	.db #0x2b	; 43
      000371 26                    1085 	.db #0x26	; 38
      000372 26                    1086 	.db #0x26	; 38
      000373 26                    1087 	.db #0x26	; 38
      000374 26                    1088 	.db #0x26	; 38
      000375 26                    1089 	.db #0x26	; 38
      000376 26                    1090 	.db #0x26	; 38
      000377 26                    1091 	.db #0x26	; 38
      000378 26                    1092 	.db #0x26	; 38
      000379 26                    1093 	.db #0x26	; 38
      00037A 26                    1094 	.db #0x26	; 38
      00037B 26                    1095 	.db #0x26	; 38
      00037C 26                    1096 	.db #0x26	; 38
      00037D 26                    1097 	.db #0x26	; 38
      00037E 26                    1098 	.db #0x26	; 38
      00037F 26                    1099 	.db #0x26	; 38
      000380 26                    1100 	.db #0x26	; 38
      000381 26                    1101 	.db #0x26	; 38
      000382 26                    1102 	.db #0x26	; 38
      000383 26                    1103 	.db #0x26	; 38
      000384 26                    1104 	.db #0x26	; 38
      000385 26                    1105 	.db #0x26	; 38
      000386 26                    1106 	.db #0x26	; 38
      000387 26                    1107 	.db #0x26	; 38
      000388 26                    1108 	.db #0x26	; 38
      000389 26                    1109 	.db #0x26	; 38
      00038A 26                    1110 	.db #0x26	; 38
      00038B 26                    1111 	.db #0x26	; 38
      00038C 26                    1112 	.db #0x26	; 38
      00038D 26                    1113 	.db #0x26	; 38
      00038E 26                    1114 	.db #0x26	; 38
      00038F 26                    1115 	.db #0x26	; 38
      000390 26                    1116 	.db #0x26	; 38
      000391 26                    1117 	.db #0x26	; 38
      000392 26                    1118 	.db #0x26	; 38
      000393 26                    1119 	.db #0x26	; 38
      000394 26                    1120 	.db #0x26	; 38
      000395 26                    1121 	.db #0x26	; 38
      000396 26                    1122 	.db #0x26	; 38
      000397 26                    1123 	.db #0x26	; 38
      000398 27                    1124 	.db #0x27	; 39
      000399 28                    1125 	.db #0x28	; 40
      00039A 26                    1126 	.db #0x26	; 38
      00039B 26                    1127 	.db #0x26	; 38
      00039C 26                    1128 	.db #0x26	; 38
      00039D 26                    1129 	.db #0x26	; 38
      00039E 26                    1130 	.db #0x26	; 38
      00039F 26                    1131 	.db #0x26	; 38
      0003A0 26                    1132 	.db #0x26	; 38
      0003A1 26                    1133 	.db #0x26	; 38
      0003A2 26                    1134 	.db #0x26	; 38
      0003A3 26                    1135 	.db #0x26	; 38
      0003A4 26                    1136 	.db #0x26	; 38
      0003A5 26                    1137 	.db #0x26	; 38
      0003A6 26                    1138 	.db #0x26	; 38
      0003A7 26                    1139 	.db #0x26	; 38
      0003A8 26                    1140 	.db #0x26	; 38
      0003A9 26                    1141 	.db #0x26	; 38
      0003AA 26                    1142 	.db #0x26	; 38
      0003AB 26                    1143 	.db #0x26	; 38
      0003AC 26                    1144 	.db #0x26	; 38
      0003AD 2B                    1145 	.db #0x2b	; 43
      0003AE 26                    1146 	.db #0x26	; 38
      0003AF 26                    1147 	.db #0x26	; 38
      0003B0 26                    1148 	.db #0x26	; 38
      0003B1 26                    1149 	.db #0x26	; 38
      0003B2 26                    1150 	.db #0x26	; 38
      0003B3 26                    1151 	.db #0x26	; 38
      0003B4 26                    1152 	.db #0x26	; 38
      0003B5 25                    1153 	.db #0x25	; 37
      0003B6 26                    1154 	.db #0x26	; 38
      0003B7 26                    1155 	.db #0x26	; 38
      0003B8 2A                    1156 	.db #0x2a	; 42
      0003B9 29                    1157 	.db #0x29	; 41
      0003BA 26                    1158 	.db #0x26	; 38
      0003BB 26                    1159 	.db #0x26	; 38
      0003BC 26                    1160 	.db #0x26	; 38
      0003BD 26                    1161 	.db #0x26	; 38
      0003BE 26                    1162 	.db #0x26	; 38
      0003BF 26                    1163 	.db #0x26	; 38
      0003C0 26                    1164 	.db #0x26	; 38
      0003C1 26                    1165 	.db #0x26	; 38
      0003C2 2B                    1166 	.db #0x2b	; 43
      0003C3 26                    1167 	.db #0x26	; 38
      0003C4 26                    1168 	.db #0x26	; 38
      0003C5 26                    1169 	.db #0x26	; 38
      0003C6 26                    1170 	.db #0x26	; 38
      0003C7 26                    1171 	.db #0x26	; 38
      0003C8 26                    1172 	.db #0x26	; 38
      0003C9 2C                    1173 	.db #0x2c	; 44
      0003CA 26                    1174 	.db #0x26	; 38
      0003CB 26                    1175 	.db #0x26	; 38
      0003CC 26                    1176 	.db #0x26	; 38
      0003CD 26                    1177 	.db #0x26	; 38
      0003CE 26                    1178 	.db #0x26	; 38
      0003CF 26                    1179 	.db #0x26	; 38
      0003D0 26                    1180 	.db #0x26	; 38
      0003D1 26                    1181 	.db #0x26	; 38
      0003D2 26                    1182 	.db #0x26	; 38
      0003D3 26                    1183 	.db #0x26	; 38
      0003D4 26                    1184 	.db #0x26	; 38
      0003D5 2C                    1185 	.db #0x2c	; 44
      0003D6 26                    1186 	.db #0x26	; 38
      0003D7 26                    1187 	.db #0x26	; 38
      0003D8 26                    1188 	.db #0x26	; 38
      0003D9 26                    1189 	.db #0x26	; 38
      0003DA 26                    1190 	.db #0x26	; 38
      0003DB 26                    1191 	.db #0x26	; 38
      0003DC 26                    1192 	.db #0x26	; 38
      0003DD 26                    1193 	.db #0x26	; 38
      0003DE 26                    1194 	.db #0x26	; 38
      0003DF 26                    1195 	.db #0x26	; 38
      0003E0 26                    1196 	.db #0x26	; 38
      0003E1 26                    1197 	.db #0x26	; 38
      0003E2 26                    1198 	.db #0x26	; 38
      0003E3 26                    1199 	.db #0x26	; 38
      0003E4 26                    1200 	.db #0x26	; 38
      0003E5 26                    1201 	.db #0x26	; 38
      0003E6 26                    1202 	.db #0x26	; 38
      0003E7 26                    1203 	.db #0x26	; 38
      0003E8 26                    1204 	.db #0x26	; 38
      0003E9 26                    1205 	.db #0x26	; 38
      0003EA 26                    1206 	.db #0x26	; 38
      0003EB 26                    1207 	.db #0x26	; 38
      0003EC 26                    1208 	.db #0x26	; 38
      0003ED 26                    1209 	.db #0x26	; 38
      0003EE 26                    1210 	.db #0x26	; 38
      0003EF 26                    1211 	.db #0x26	; 38
      0003F0 26                    1212 	.db #0x26	; 38
      0003F1 26                    1213 	.db #0x26	; 38
      0003F2 26                    1214 	.db #0x26	; 38
      0003F3 26                    1215 	.db #0x26	; 38
      0003F4 26                    1216 	.db #0x26	; 38
      0003F5 26                    1217 	.db #0x26	; 38
      0003F6 26                    1218 	.db #0x26	; 38
      0003F7 26                    1219 	.db #0x26	; 38
      0003F8 26                    1220 	.db #0x26	; 38
      0003F9 26                    1221 	.db #0x26	; 38
      0003FA 26                    1222 	.db #0x26	; 38
      0003FB 26                    1223 	.db #0x26	; 38
      0003FC 26                    1224 	.db #0x26	; 38
      0003FD 26                    1225 	.db #0x26	; 38
      0003FE 26                    1226 	.db #0x26	; 38
      0003FF 26                    1227 	.db #0x26	; 38
      000400 26                    1228 	.db #0x26	; 38
      000401 26                    1229 	.db #0x26	; 38
      000402 26                    1230 	.db #0x26	; 38
      000403 26                    1231 	.db #0x26	; 38
      000404 26                    1232 	.db #0x26	; 38
      000405 26                    1233 	.db #0x26	; 38
      000406 26                    1234 	.db #0x26	; 38
      000407 26                    1235 	.db #0x26	; 38
      000408 26                    1236 	.db #0x26	; 38
      000409 26                    1237 	.db #0x26	; 38
      00040A 26                    1238 	.db #0x26	; 38
      00040B 26                    1239 	.db #0x26	; 38
      00040C 26                    1240 	.db #0x26	; 38
      00040D 2B                    1241 	.db #0x2b	; 43
      00040E 26                    1242 	.db #0x26	; 38
      00040F 26                    1243 	.db #0x26	; 38
      000410 26                    1244 	.db #0x26	; 38
      000411 26                    1245 	.db #0x26	; 38
      000412 26                    1246 	.db #0x26	; 38
      000413 26                    1247 	.db #0x26	; 38
      000414 26                    1248 	.db #0x26	; 38
      000415 26                    1249 	.db #0x26	; 38
      000416 26                    1250 	.db #0x26	; 38
      000417 26                    1251 	.db #0x26	; 38
      000418 26                    1252 	.db #0x26	; 38
      000419 26                    1253 	.db #0x26	; 38
      00041A 26                    1254 	.db #0x26	; 38
      00041B 26                    1255 	.db #0x26	; 38
      00041C 26                    1256 	.db #0x26	; 38
      00041D 26                    1257 	.db #0x26	; 38
      00041E 26                    1258 	.db #0x26	; 38
      00041F 26                    1259 	.db #0x26	; 38
      000420 2B                    1260 	.db #0x2b	; 43
      000421 26                    1261 	.db #0x26	; 38
      000422 26                    1262 	.db #0x26	; 38
      000423 26                    1263 	.db #0x26	; 38
      000424 26                    1264 	.db #0x26	; 38
      000425 26                    1265 	.db #0x26	; 38
      000426 26                    1266 	.db #0x26	; 38
      000427 26                    1267 	.db #0x26	; 38
      000428 26                    1268 	.db #0x26	; 38
      000429 26                    1269 	.db #0x26	; 38
      00042A 26                    1270 	.db #0x26	; 38
      00042B 26                    1271 	.db #0x26	; 38
      00042C 26                    1272 	.db #0x26	; 38
      00042D 26                    1273 	.db #0x26	; 38
      00042E 26                    1274 	.db #0x26	; 38
      00042F 26                    1275 	.db #0x26	; 38
      000430 26                    1276 	.db #0x26	; 38
      000431 26                    1277 	.db #0x26	; 38
      000432 26                    1278 	.db #0x26	; 38
      000433 26                    1279 	.db #0x26	; 38
      000434 26                    1280 	.db #0x26	; 38
      000435 26                    1281 	.db #0x26	; 38
      000436 26                    1282 	.db #0x26	; 38
      000437 2C                    1283 	.db #0x2c	; 44
      000438 26                    1284 	.db #0x26	; 38
      000439 26                    1285 	.db #0x26	; 38
      00043A 26                    1286 	.db #0x26	; 38
      00043B 26                    1287 	.db #0x26	; 38
      00043C 26                    1288 	.db #0x26	; 38
      00043D 26                    1289 	.db #0x26	; 38
      00043E 26                    1290 	.db #0x26	; 38
      00043F 26                    1291 	.db #0x26	; 38
      000440 26                    1292 	.db #0x26	; 38
      000441 26                    1293 	.db #0x26	; 38
      000442 26                    1294 	.db #0x26	; 38
      000443 26                    1295 	.db #0x26	; 38
      000444 26                    1296 	.db #0x26	; 38
      000445 26                    1297 	.db #0x26	; 38
      000446 26                    1298 	.db #0x26	; 38
      000447 26                    1299 	.db #0x26	; 38
      000448 25                    1300 	.db #0x25	; 37
      000449 2C                    1301 	.db #0x2c	; 44
      00044A 26                    1302 	.db #0x26	; 38
      00044B 26                    1303 	.db #0x26	; 38
      00044C 26                    1304 	.db #0x26	; 38
      00044D 26                    1305 	.db #0x26	; 38
      00044E 26                    1306 	.db #0x26	; 38
      00044F 26                    1307 	.db #0x26	; 38
      000450 26                    1308 	.db #0x26	; 38
      000451 26                    1309 	.db #0x26	; 38
      000452 26                    1310 	.db #0x26	; 38
      000453 26                    1311 	.db #0x26	; 38
      000454 26                    1312 	.db #0x26	; 38
      000455 26                    1313 	.db #0x26	; 38
      000456 26                    1314 	.db #0x26	; 38
      000457 26                    1315 	.db #0x26	; 38
      000458 26                    1316 	.db #0x26	; 38
      000459 26                    1317 	.db #0x26	; 38
      00045A 2B                    1318 	.db #0x2b	; 43
      00045B 26                    1319 	.db #0x26	; 38
      00045C 26                    1320 	.db #0x26	; 38
      00045D 26                    1321 	.db #0x26	; 38
      00045E 26                    1322 	.db #0x26	; 38
      00045F 26                    1323 	.db #0x26	; 38
      000460 26                    1324 	.db #0x26	; 38
      000461 26                    1325 	.db #0x26	; 38
      000462 26                    1326 	.db #0x26	; 38
      000463 26                    1327 	.db #0x26	; 38
      000464 26                    1328 	.db #0x26	; 38
      000465 26                    1329 	.db #0x26	; 38
      000466 26                    1330 	.db #0x26	; 38
      000467 26                    1331 	.db #0x26	; 38
      000468 26                    1332 	.db #0x26	; 38
      000469 26                    1333 	.db #0x26	; 38
      00046A 26                    1334 	.db #0x26	; 38
      00046B 26                    1335 	.db #0x26	; 38
      00046C 26                    1336 	.db #0x26	; 38
      00046D 26                    1337 	.db #0x26	; 38
      00046E 26                    1338 	.db #0x26	; 38
      00046F 26                    1339 	.db #0x26	; 38
      000470 26                    1340 	.db #0x26	; 38
      000471 26                    1341 	.db #0x26	; 38
      000472 27                    1342 	.db #0x27	; 39
      000473 28                    1343 	.db #0x28	; 40
      000474 26                    1344 	.db #0x26	; 38
      000475 26                    1345 	.db #0x26	; 38
      000476 26                    1346 	.db #0x26	; 38
      000477 26                    1347 	.db #0x26	; 38
      000478 26                    1348 	.db #0x26	; 38
      000479 26                    1349 	.db #0x26	; 38
      00047A 26                    1350 	.db #0x26	; 38
      00047B 26                    1351 	.db #0x26	; 38
      00047C 26                    1352 	.db #0x26	; 38
      00047D 26                    1353 	.db #0x26	; 38
      00047E 26                    1354 	.db #0x26	; 38
      00047F 26                    1355 	.db #0x26	; 38
      000480 26                    1356 	.db #0x26	; 38
      000481 26                    1357 	.db #0x26	; 38
      000482 26                    1358 	.db #0x26	; 38
      000483 26                    1359 	.db #0x26	; 38
      000484 26                    1360 	.db #0x26	; 38
      000485 26                    1361 	.db #0x26	; 38
      000486 2B                    1362 	.db #0x2b	; 43
      000487                       1363 _backgroundtiles:
      000487 40                    1364 	.db #0x40	; 64
      000488 38                    1365 	.db #0x38	; 56	'8'
      000489 3A                    1366 	.db #0x3a	; 58
      00048A 44                    1367 	.db #0x44	; 68	'D'
      00048B 7C                    1368 	.db #0x7c	; 124
      00048C 9A                    1369 	.db #0x9a	; 154
      00048D 5E                    1370 	.db #0x5e	; 94
      00048E E9                    1371 	.db #0xe9	; 233
      00048F 7A                    1372 	.db #0x7a	; 122	'z'
      000490 87                    1373 	.db #0x87	; 135
      000491 76                    1374 	.db #0x76	; 118	'v'
      000492 B9                    1375 	.db #0xb9	; 185
      000493 3C                    1376 	.db #0x3c	; 60
      000494 72                    1377 	.db #0x72	; 114	'r'
      000495 00                    1378 	.db #0x00	; 0
      000496 3C                    1379 	.db #0x3c	; 60
      000497 00                    1380 	.db #0x00	; 0
      000498 00                    1381 	.db #0x00	; 0
      000499 00                    1382 	.db #0x00	; 0
      00049A 00                    1383 	.db #0x00	; 0
      00049B 00                    1384 	.db #0x00	; 0
      00049C 00                    1385 	.db #0x00	; 0
      00049D 00                    1386 	.db #0x00	; 0
      00049E 00                    1387 	.db #0x00	; 0
      00049F 00                    1388 	.db #0x00	; 0
      0004A0 00                    1389 	.db #0x00	; 0
      0004A1 00                    1390 	.db #0x00	; 0
      0004A2 00                    1391 	.db #0x00	; 0
      0004A3 00                    1392 	.db #0x00	; 0
      0004A4 00                    1393 	.db #0x00	; 0
      0004A5 00                    1394 	.db #0x00	; 0
      0004A6 00                    1395 	.db #0x00	; 0
      0004A7 00                    1396 	.db #0x00	; 0
      0004A8 0F                    1397 	.db #0x0f	; 15
      0004A9 08                    1398 	.db #0x08	; 8
      0004AA 17                    1399 	.db #0x17	; 23
      0004AB 1C                    1400 	.db #0x1c	; 28
      0004AC 23                    1401 	.db #0x23	; 35
      0004AD 3E                    1402 	.db #0x3e	; 62
      0004AE 41                    1403 	.db #0x41	; 65	'A'
      0004AF 1B                    1404 	.db #0x1b	; 27
      0004B0 64                    1405 	.db #0x64	; 100	'd'
      0004B1 31                    1406 	.db #0x31	; 49	'1'
      0004B2 4E                    1407 	.db #0x4e	; 78	'N'
      0004B3 B1                    1408 	.db #0xb1	; 177
      0004B4 CE                    1409 	.db #0xce	; 206
      0004B5 BB                    1410 	.db #0xbb	; 187
      0004B6 C4                    1411 	.db #0xc4	; 196
      0004B7 00                    1412 	.db #0x00	; 0
      0004B8 F8                    1413 	.db #0xf8	; 248
      0004B9 00                    1414 	.db #0x00	; 0
      0004BA FC                    1415 	.db #0xfc	; 252
      0004BB E0                    1416 	.db #0xe0	; 224
      0004BC 1E                    1417 	.db #0x1e	; 30
      0004BD F0                    1418 	.db #0xf0	; 240
      0004BE 0F                    1419 	.db #0x0f	; 15
      0004BF BE                    1420 	.db #0xbe	; 190
      0004C0 01                    1421 	.db #0x01	; 1
      0004C1 BC                    1422 	.db #0xbc	; 188
      0004C2 02                    1423 	.db #0x02	; 2
      0004C3 CE                    1424 	.db #0xce	; 206
      0004C4 01                    1425 	.db #0x01	; 1
      0004C5 F6                    1426 	.db #0xf6	; 246
      0004C6 61                    1427 	.db #0x61	; 97	'a'
      0004C7 F4                    1428 	.db #0xf4	; 244
      0004C8 02                    1429 	.db #0x02	; 2
      0004C9 94                    1430 	.db #0x94	; 148
      0004CA 62                    1431 	.db #0x62	; 98	'b'
      0004CB E4                    1432 	.db #0xe4	; 228
      0004CC 02                    1433 	.db #0x02	; 2
      0004CD 6C                    1434 	.db #0x6c	; 108	'l'
      0004CE 82                    1435 	.db #0x82	; 130
      0004CF 70                    1436 	.db #0x70	; 112	'p'
      0004D0 8C                    1437 	.db #0x8c	; 140
      0004D1 60                    1438 	.db #0x60	; 96
      0004D2 90                    1439 	.db #0x90	; 144
      0004D3 00                    1440 	.db #0x00	; 0
      0004D4 E0                    1441 	.db #0xe0	; 224
      0004D5 80                    1442 	.db #0x80	; 128
      0004D6 80                    1443 	.db #0x80	; 128
      0004D7 8E                    1444 	.db #0x8e	; 142
      0004D8 F7                    1445 	.db #0xf7	; 247
      0004D9 8F                    1446 	.db #0x8f	; 143
      0004DA F3                    1447 	.db #0xf3	; 243
      0004DB 86                    1448 	.db #0x86	; 134
      0004DC F9                    1449 	.db #0xf9	; 249
      0004DD 42                    1450 	.db #0x42	; 66	'B'
      0004DE 7D                    1451 	.db #0x7d	; 125
      0004DF 80                    1452 	.db #0x80	; 128
      0004E0 FF                    1453 	.db #0xff	; 255
      0004E1 44                    1454 	.db #0x44	; 68	'D'
      0004E2 7F                    1455 	.db #0x7f	; 127
      0004E3 28                    1456 	.db #0x28	; 40
      0004E4 3F                    1457 	.db #0x3f	; 63
      0004E5 07                    1458 	.db #0x07	; 7
      0004E6 07                    1459 	.db #0x07	; 7
      0004E7 00                    1460 	.db #0x00	; 0
      0004E8 00                    1461 	.db #0x00	; 0
      0004E9 08                    1462 	.db #0x08	; 8
      0004EA 00                    1463 	.db #0x00	; 0
      0004EB 08                    1464 	.db #0x08	; 8
      0004EC 00                    1465 	.db #0x00	; 0
      0004ED 1C                    1466 	.db #0x1c	; 28
      0004EE 00                    1467 	.db #0x00	; 0
      0004EF 7F                    1468 	.db #0x7f	; 127
      0004F0 00                    1469 	.db #0x00	; 0
      0004F1 1C                    1470 	.db #0x1c	; 28
      0004F2 00                    1471 	.db #0x00	; 0
      0004F3 08                    1472 	.db #0x08	; 8
      0004F4 00                    1473 	.db #0x00	; 0
      0004F5 08                    1474 	.db #0x08	; 8
      0004F6 00                    1475 	.db #0x00	; 0
      0004F7 00                    1476 	.db #0x00	; 0
      0004F8 00                    1477 	.db #0x00	; 0
      0004F9 00                    1478 	.db #0x00	; 0
      0004FA 00                    1479 	.db #0x00	; 0
      0004FB 00                    1480 	.db #0x00	; 0
      0004FC 00                    1481 	.db #0x00	; 0
      0004FD 10                    1482 	.db #0x10	; 16
      0004FE 00                    1483 	.db #0x00	; 0
      0004FF 00                    1484 	.db #0x00	; 0
      000500 00                    1485 	.db #0x00	; 0
      000501 00                    1486 	.db #0x00	; 0
      000502 00                    1487 	.db #0x00	; 0
      000503 00                    1488 	.db #0x00	; 0
      000504 00                    1489 	.db #0x00	; 0
      000505 00                    1490 	.db #0x00	; 0
      000506 00                    1491 	.db #0x00	; 0
      000507                       1492 _healthblock:
      000507 FE                    1493 	.db #0xfe	; 254
      000508 FE                    1494 	.db #0xfe	; 254
      000509 FE                    1495 	.db #0xfe	; 254
      00050A FE                    1496 	.db #0xfe	; 254
      00050B FE                    1497 	.db #0xfe	; 254
      00050C FE                    1498 	.db #0xfe	; 254
      00050D FE                    1499 	.db #0xfe	; 254
      00050E FE                    1500 	.db #0xfe	; 254
      00050F FE                    1501 	.db #0xfe	; 254
      000510 FE                    1502 	.db #0xfe	; 254
      000511 FE                    1503 	.db #0xfe	; 254
      000512 FE                    1504 	.db #0xfe	; 254
      000513 FE                    1505 	.db #0xfe	; 254
      000514 FE                    1506 	.db #0xfe	; 254
      000515 00                    1507 	.db #0x00	; 0
      000516 00                    1508 	.db #0x00	; 0
      000517                       1509 _enemy1:
      000517 66                    1510 	.db #0x66	; 102	'f'
      000518 24                    1511 	.db #0x24	; 36
      000519 E7                    1512 	.db #0xe7	; 231
      00051A 66                    1513 	.db #0x66	; 102	'f'
      00051B F7                    1514 	.db #0xf7	; 247
      00051C E7                    1515 	.db #0xe7	; 231
      00051D 1C                    1516 	.db #0x1c	; 28
      00051E 18                    1517 	.db #0x18	; 24
      00051F 38                    1518 	.db #0x38	; 56	'8'
      000520 18                    1519 	.db #0x18	; 24
      000521 EF                    1520 	.db #0xef	; 239
      000522 E7                    1521 	.db #0xe7	; 231
      000523 E7                    1522 	.db #0xe7	; 231
      000524 66                    1523 	.db #0x66	; 102	'f'
      000525 66                    1524 	.db #0x66	; 102	'f'
      000526 24                    1525 	.db #0x24	; 36
      000527                       1526 _ProjectileTiles:
      000527 00                    1527 	.db #0x00	; 0
      000528 00                    1528 	.db #0x00	; 0
      000529 00                    1529 	.db #0x00	; 0
      00052A 00                    1530 	.db #0x00	; 0
      00052B 24                    1531 	.db #0x24	; 36
      00052C 18                    1532 	.db #0x18	; 24
      00052D 18                    1533 	.db #0x18	; 24
      00052E 3C                    1534 	.db #0x3c	; 60
      00052F 18                    1535 	.db #0x18	; 24
      000530 3C                    1536 	.db #0x3c	; 60
      000531 24                    1537 	.db #0x24	; 36
      000532 18                    1538 	.db #0x18	; 24
      000533 00                    1539 	.db #0x00	; 0
      000534 00                    1540 	.db #0x00	; 0
      000535 00                    1541 	.db #0x00	; 0
      000536 00                    1542 	.db #0x00	; 0
      000537 00                    1543 	.db #0x00	; 0
      000538 00                    1544 	.db #0x00	; 0
      000539 00                    1545 	.db #0x00	; 0
      00053A 00                    1546 	.db #0x00	; 0
      00053B 09                    1547 	.db #0x09	; 9
      00053C 06                    1548 	.db #0x06	; 6
      00053D 06                    1549 	.db #0x06	; 6
      00053E 0F                    1550 	.db #0x0f	; 15
      00053F 06                    1551 	.db #0x06	; 6
      000540 0F                    1552 	.db #0x0f	; 15
      000541 09                    1553 	.db #0x09	; 9
      000542 06                    1554 	.db #0x06	; 6
      000543 00                    1555 	.db #0x00	; 0
      000544 00                    1556 	.db #0x00	; 0
      000545 00                    1557 	.db #0x00	; 0
      000546 00                    1558 	.db #0x00	; 0
      000547 09                    1559 	.db #0x09	; 9
      000548 06                    1560 	.db #0x06	; 6
      000549 06                    1561 	.db #0x06	; 6
      00054A 0F                    1562 	.db #0x0f	; 15
      00054B 06                    1563 	.db #0x06	; 6
      00054C 0F                    1564 	.db #0x0f	; 15
      00054D 09                    1565 	.db #0x09	; 9
      00054E 06                    1566 	.db #0x06	; 6
      00054F 00                    1567 	.db #0x00	; 0
      000550 00                    1568 	.db #0x00	; 0
      000551 00                    1569 	.db #0x00	; 0
      000552 00                    1570 	.db #0x00	; 0
      000553 00                    1571 	.db #0x00	; 0
      000554 00                    1572 	.db #0x00	; 0
      000555 00                    1573 	.db #0x00	; 0
      000556 00                    1574 	.db #0x00	; 0
      000557 99                    1575 	.db #0x99	; 153
      000558 66                    1576 	.db #0x66	; 102	'f'
      000559 66                    1577 	.db #0x66	; 102	'f'
      00055A FF                    1578 	.db #0xff	; 255
      00055B 66                    1579 	.db #0x66	; 102	'f'
      00055C FF                    1580 	.db #0xff	; 255
      00055D 99                    1581 	.db #0x99	; 153
      00055E 66                    1582 	.db #0x66	; 102	'f'
      00055F 00                    1583 	.db #0x00	; 0
      000560 00                    1584 	.db #0x00	; 0
      000561 00                    1585 	.db #0x00	; 0
      000562 00                    1586 	.db #0x00	; 0
      000563 00                    1587 	.db #0x00	; 0
      000564 00                    1588 	.db #0x00	; 0
      000565 00                    1589 	.db #0x00	; 0
      000566 00                    1590 	.db #0x00	; 0
      000567 09                    1591 	.db #0x09	; 9
      000568 06                    1592 	.db #0x06	; 6
      000569 06                    1593 	.db #0x06	; 6
      00056A 0F                    1594 	.db #0x0f	; 15
      00056B 06                    1595 	.db #0x06	; 6
      00056C 0F                    1596 	.db #0x0f	; 15
      00056D 09                    1597 	.db #0x09	; 9
      00056E 06                    1598 	.db #0x06	; 6
      00056F 09                    1599 	.db #0x09	; 9
      000570 06                    1600 	.db #0x06	; 6
      000571 06                    1601 	.db #0x06	; 6
      000572 0F                    1602 	.db #0x0f	; 15
      000573 06                    1603 	.db #0x06	; 6
      000574 0F                    1604 	.db #0x0f	; 15
      000575 09                    1605 	.db #0x09	; 9
      000576 06                    1606 	.db #0x06	; 6
      000577 90                    1607 	.db #0x90	; 144
      000578 60                    1608 	.db #0x60	; 96
      000579 60                    1609 	.db #0x60	; 96
      00057A F0                    1610 	.db #0xf0	; 240
      00057B 60                    1611 	.db #0x60	; 96
      00057C F0                    1612 	.db #0xf0	; 240
      00057D 90                    1613 	.db #0x90	; 144
      00057E 60                    1614 	.db #0x60	; 96
      00057F 09                    1615 	.db #0x09	; 9
      000580 06                    1616 	.db #0x06	; 6
      000581 06                    1617 	.db #0x06	; 6
      000582 0F                    1618 	.db #0x0f	; 15
      000583 06                    1619 	.db #0x06	; 6
      000584 0F                    1620 	.db #0x0f	; 15
      000585 09                    1621 	.db #0x09	; 9
      000586 06                    1622 	.db #0x06	; 6
      000587 18                    1623 	.db #0x18	; 24
      000588 00                    1624 	.db #0x00	; 0
      000589 18                    1625 	.db #0x18	; 24
      00058A 18                    1626 	.db #0x18	; 24
      00058B 18                    1627 	.db #0x18	; 24
      00058C 18                    1628 	.db #0x18	; 24
      00058D 3C                    1629 	.db #0x3c	; 60
      00058E 18                    1630 	.db #0x18	; 24
      00058F 3C                    1631 	.db #0x3c	; 60
      000590 18                    1632 	.db #0x18	; 24
      000591 3C                    1633 	.db #0x3c	; 60
      000592 3C                    1634 	.db #0x3c	; 60
      000593 7E                    1635 	.db #0x7e	; 126
      000594 3C                    1636 	.db #0x3c	; 60
      000595 7E                    1637 	.db #0x7e	; 126
      000596 24                    1638 	.db #0x24	; 36
      000597 00                    1639 	.db #0x00	; 0
      000598 00                    1640 	.db #0x00	; 0
      000599 C0                    1641 	.db #0xc0	; 192
      00059A 00                    1642 	.db #0x00	; 0
      00059B F8                    1643 	.db #0xf8	; 248
      00059C E0                    1644 	.db #0xe0	; 224
      00059D FF                    1645 	.db #0xff	; 255
      00059E 7E                    1646 	.db #0x7e	; 126
      00059F FF                    1647 	.db #0xff	; 255
      0005A0 7E                    1648 	.db #0x7e	; 126
      0005A1 F8                    1649 	.db #0xf8	; 248
      0005A2 E0                    1650 	.db #0xe0	; 224
      0005A3 C0                    1651 	.db #0xc0	; 192
      0005A4 00                    1652 	.db #0x00	; 0
      0005A5 00                    1653 	.db #0x00	; 0
      0005A6 00                    1654 	.db #0x00	; 0
      0005A7 06                    1655 	.db #0x06	; 6
      0005A8 00                    1656 	.db #0x00	; 0
      0005A9 0F                    1657 	.db #0x0f	; 15
      0005AA 06                    1658 	.db #0x06	; 6
      0005AB 1F                    1659 	.db #0x1f	; 31
      0005AC 0E                    1660 	.db #0x0e	; 14
      0005AD 7E                    1661 	.db #0x7e	; 126
      0005AE 1C                    1662 	.db #0x1c	; 28
      0005AF FC                    1663 	.db #0xfc	; 252
      0005B0 78                    1664 	.db #0x78	; 120	'x'
      0005B1 F8                    1665 	.db #0xf8	; 248
      0005B2 F0                    1666 	.db #0xf0	; 240
      0005B3 F8                    1667 	.db #0xf8	; 248
      0005B4 70                    1668 	.db #0x70	; 112	'p'
      0005B5 70                    1669 	.db #0x70	; 112	'p'
      0005B6 20                    1670 	.db #0x20	; 32
      0005B7                       1671 _Player1:
      0005B7 08                    1672 	.db #0x08	; 8
      0005B8 08                    1673 	.db #0x08	; 8
      0005B9 1C                    1674 	.db #0x1c	; 28
      0005BA 14                    1675 	.db #0x14	; 20
      0005BB 38                    1676 	.db #0x38	; 56	'8'
      0005BC 28                    1677 	.db #0x28	; 40
      0005BD 68                    1678 	.db #0x68	; 104	'h'
      0005BE 58                    1679 	.db #0x58	; 88	'X'
      0005BF 50                    1680 	.db #0x50	; 80	'P'
      0005C0 71                    1681 	.db #0x71	; 113	'q'
      0005C1 D0                    1682 	.db #0xd0	; 208
      0005C2 B2                    1683 	.db #0xb2	; 178
      0005C3 D5                    1684 	.db #0xd5	; 213
      0005C4 B6                    1685 	.db #0xb6	; 182
      0005C5 D5                    1686 	.db #0xd5	; 213
      0005C6 B6                    1687 	.db #0xb6	; 182
      0005C7 D5                    1688 	.db #0xd5	; 213
      0005C8 B6                    1689 	.db #0xb6	; 182
      0005C9 CD                    1690 	.db #0xcd	; 205
      0005CA BE                    1691 	.db #0xbe	; 190
      0005CB C5                    1692 	.db #0xc5	; 197
      0005CC BE                    1693 	.db #0xbe	; 190
      0005CD 65                    1694 	.db #0x65	; 101	'e'
      0005CE 5E                    1695 	.db #0x5e	; 94
      0005CF 3E                    1696 	.db #0x3e	; 62
      0005D0 2F                    1697 	.db #0x2f	; 47
      0005D1 13                    1698 	.db #0x13	; 19
      0005D2 13                    1699 	.db #0x13	; 19
      0005D3 06                    1700 	.db #0x06	; 6
      0005D4 07                    1701 	.db #0x07	; 7
      0005D5 07                    1702 	.db #0x07	; 7
      0005D6 05                    1703 	.db #0x05	; 5
      0005D7 10                    1704 	.db #0x10	; 16
      0005D8 10                    1705 	.db #0x10	; 16
      0005D9 38                    1706 	.db #0x38	; 56	'8'
      0005DA 28                    1707 	.db #0x28	; 40
      0005DB 1C                    1708 	.db #0x1c	; 28
      0005DC 14                    1709 	.db #0x14	; 20
      0005DD 16                    1710 	.db #0x16	; 22
      0005DE 1A                    1711 	.db #0x1a	; 26
      0005DF 0A                    1712 	.db #0x0a	; 10
      0005E0 8E                    1713 	.db #0x8e	; 142
      0005E1 0B                    1714 	.db #0x0b	; 11
      0005E2 4D                    1715 	.db #0x4d	; 77	'M'
      0005E3 AB                    1716 	.db #0xab	; 171
      0005E4 6D                    1717 	.db #0x6d	; 109	'm'
      0005E5 AB                    1718 	.db #0xab	; 171
      0005E6 6D                    1719 	.db #0x6d	; 109	'm'
      0005E7 AB                    1720 	.db #0xab	; 171
      0005E8 6D                    1721 	.db #0x6d	; 109	'm'
      0005E9 B3                    1722 	.db #0xb3	; 179
      0005EA 7D                    1723 	.db #0x7d	; 125
      0005EB A3                    1724 	.db #0xa3	; 163
      0005EC 7D                    1725 	.db #0x7d	; 125
      0005ED A6                    1726 	.db #0xa6	; 166
      0005EE 7A                    1727 	.db #0x7a	; 122	'z'
      0005EF 7C                    1728 	.db #0x7c	; 124
      0005F0 F4                    1729 	.db #0xf4	; 244
      0005F1 C8                    1730 	.db #0xc8	; 200
      0005F2 C8                    1731 	.db #0xc8	; 200
      0005F3 60                    1732 	.db #0x60	; 96
      0005F4 E0                    1733 	.db #0xe0	; 224
      0005F5 E0                    1734 	.db #0xe0	; 224
      0005F6 A0                    1735 	.db #0xa0	; 160
      0005F7 07                    1736 	.db #0x07	; 7
      0005F8 07                    1737 	.db #0x07	; 7
      0005F9 0F                    1738 	.db #0x0f	; 15
      0005FA 08                    1739 	.db #0x08	; 8
      0005FB 18                    1740 	.db #0x18	; 24
      0005FC 17                    1741 	.db #0x17	; 23
      0005FD 31                    1742 	.db #0x31	; 49	'1'
      0005FE 2F                    1743 	.db #0x2f	; 47
      0005FF 12                    1744 	.db #0x12	; 18
      000600 1E                    1745 	.db #0x1e	; 30
      000601 DF                    1746 	.db #0xdf	; 223
      000602 DF                    1747 	.db #0xdf	; 223
      000603 F0                    1748 	.db #0xf0	; 240
      000604 7F                    1749 	.db #0x7f	; 127
      000605 AF                    1750 	.db #0xaf	; 175
      000606 F0                    1751 	.db #0xf0	; 240
      000607 AF                    1752 	.db #0xaf	; 175
      000608 F0                    1753 	.db #0xf0	; 240
      000609 F0                    1754 	.db #0xf0	; 240
      00060A 7F                    1755 	.db #0x7f	; 127
      00060B DF                    1756 	.db #0xdf	; 223
      00060C DF                    1757 	.db #0xdf	; 223
      00060D 12                    1758 	.db #0x12	; 18
      00060E 1E                    1759 	.db #0x1e	; 30
      00060F 31                    1760 	.db #0x31	; 49	'1'
      000610 2F                    1761 	.db #0x2f	; 47
      000611 18                    1762 	.db #0x18	; 24
      000612 17                    1763 	.db #0x17	; 23
      000613 0F                    1764 	.db #0x0f	; 15
      000614 08                    1765 	.db #0x08	; 8
      000615 07                    1766 	.db #0x07	; 7
      000616 07                    1767 	.db #0x07	; 7
      000617 E0                    1768 	.db #0xe0	; 224
      000618 E0                    1769 	.db #0xe0	; 224
      000619 F8                    1770 	.db #0xf8	; 248
      00061A 18                    1771 	.db #0x18	; 24
      00061B 0C                    1772 	.db #0x0c	; 12
      00061C F4                    1773 	.db #0xf4	; 244
      00061D F6                    1774 	.db #0xf6	; 246
      00061E FA                    1775 	.db #0xfa	; 250
      00061F 0F                    1776 	.db #0x0f	; 15
      000620 0D                    1777 	.db #0x0d	; 13
      000621 C2                    1778 	.db #0xc2	; 194
      000622 C2                    1779 	.db #0xc2	; 194
      000623 00                    1780 	.db #0x00	; 0
      000624 E0                    1781 	.db #0xe0	; 224
      000625 C0                    1782 	.db #0xc0	; 192
      000626 10                    1783 	.db #0x10	; 16
      000627 C0                    1784 	.db #0xc0	; 192
      000628 10                    1785 	.db #0x10	; 16
      000629 00                    1786 	.db #0x00	; 0
      00062A E0                    1787 	.db #0xe0	; 224
      00062B C2                    1788 	.db #0xc2	; 194
      00062C C2                    1789 	.db #0xc2	; 194
      00062D 0F                    1790 	.db #0x0f	; 15
      00062E 0D                    1791 	.db #0x0d	; 13
      00062F F6                    1792 	.db #0xf6	; 246
      000630 FA                    1793 	.db #0xfa	; 250
      000631 0C                    1794 	.db #0x0c	; 12
      000632 F4                    1795 	.db #0xf4	; 244
      000633 F8                    1796 	.db #0xf8	; 248
      000634 18                    1797 	.db #0x18	; 24
      000635 E0                    1798 	.db #0xe0	; 224
      000636 E0                    1799 	.db #0xe0	; 224
      000637 07                    1800 	.db #0x07	; 7
      000638 07                    1801 	.db #0x07	; 7
      000639 1B                    1802 	.db #0x1b	; 27
      00063A 1C                    1803 	.db #0x1c	; 28
      00063B 38                    1804 	.db #0x38	; 56	'8'
      00063C 27                    1805 	.db #0x27	; 39
      00063D 60                    1806 	.db #0x60	; 96
      00063E 5E                    1807 	.db #0x5e	; 94
      00063F 60                    1808 	.db #0x60	; 96
      000640 5C                    1809 	.db #0x5c	; 92
      000641 41                    1810 	.db #0x41	; 65	'A'
      000642 79                    1811 	.db #0x79	; 121	'y'
      000643 C4                    1812 	.db #0xc4	; 196
      000644 B7                    1813 	.db #0xb7	; 183
      000645 99                    1814 	.db #0x99	; 153
      000646 FE                    1815 	.db #0xfe	; 254
      000647 B3                    1816 	.db #0xb3	; 179
      000648 EC                    1817 	.db #0xec	; 236
      000649 67                    1818 	.db #0x67	; 103	'g'
      00064A 58                    1819 	.db #0x58	; 88	'X'
      00064B 2E                    1820 	.db #0x2e	; 46
      00064C 31                    1821 	.db #0x31	; 49	'1'
      00064D 5C                    1822 	.db #0x5c	; 92
      00064E 73                    1823 	.db #0x73	; 115	's'
      00064F 69                    1824 	.db #0x69	; 105	'i'
      000650 5E                    1825 	.db #0x5e	; 94
      000651 37                    1826 	.db #0x37	; 55	'7'
      000652 2D                    1827 	.db #0x2d	; 45
      000653 1A                    1828 	.db #0x1a	; 26
      000654 1B                    1829 	.db #0x1b	; 27
      000655 01                    1830 	.db #0x01	; 1
      000656 01                    1831 	.db #0x01	; 1
      000657 E0                    1832 	.db #0xe0	; 224
      000658 E0                    1833 	.db #0xe0	; 224
      000659 90                    1834 	.db #0x90	; 144
      00065A 70                    1835 	.db #0x70	; 112	'p'
      00065B C0                    1836 	.db #0xc0	; 192
      00065C C0                    1837 	.db #0xc0	; 192
      00065D 00                    1838 	.db #0x00	; 0
      00065E 00                    1839 	.db #0x00	; 0
      00065F 02                    1840 	.db #0x02	; 2
      000660 02                    1841 	.db #0x02	; 2
      000661 C1                    1842 	.db #0xc1	; 193
      000662 C3                    1843 	.db #0xc3	; 195
      000663 65                    1844 	.db #0x65	; 101	'e'
      000664 A7                    1845 	.db #0xa7	; 167
      000665 A7                    1846 	.db #0xa7	; 167
      000666 65                    1847 	.db #0x65	; 101	'e'
      000667 A3                    1848 	.db #0xa3	; 163
      000668 65                    1849 	.db #0x65	; 101	'e'
      000669 03                    1850 	.db #0x03	; 3
      00066A CD                    1851 	.db #0xcd	; 205
      00066B 41                    1852 	.db #0x41	; 65	'A'
      00066C DF                    1853 	.db #0xdf	; 223
      00066D 86                    1854 	.db #0x86	; 134
      00066E BA                    1855 	.db #0xba	; 186
      00066F 86                    1856 	.db #0x86	; 134
      000670 FA                    1857 	.db #0xfa	; 250
      000671 1C                    1858 	.db #0x1c	; 28
      000672 E4                    1859 	.db #0xe4	; 228
      000673 78                    1860 	.db #0x78	; 120	'x'
      000674 B8                    1861 	.db #0xb8	; 184
      000675 C0                    1862 	.db #0xc0	; 192
      000676 C0                    1863 	.db #0xc0	; 192
      000677 00                    1864 	.db #0x00	; 0
      000678 00                    1865 	.db #0x00	; 0
      000679 00                    1866 	.db #0x00	; 0
      00067A 00                    1867 	.db #0x00	; 0
      00067B 00                    1868 	.db #0x00	; 0
      00067C 00                    1869 	.db #0x00	; 0
      00067D 00                    1870 	.db #0x00	; 0
      00067E 00                    1871 	.db #0x00	; 0
      00067F 00                    1872 	.db #0x00	; 0
      000680 00                    1873 	.db #0x00	; 0
      000681 00                    1874 	.db #0x00	; 0
      000682 00                    1875 	.db #0x00	; 0
      000683 00                    1876 	.db #0x00	; 0
      000684 00                    1877 	.db #0x00	; 0
      000685 00                    1878 	.db #0x00	; 0
      000686 00                    1879 	.db #0x00	; 0
      000687 00                    1880 	.db #0x00	; 0
      000688 00                    1881 	.db #0x00	; 0
      000689 00                    1882 	.db #0x00	; 0
      00068A 00                    1883 	.db #0x00	; 0
      00068B 00                    1884 	.db #0x00	; 0
      00068C 00                    1885 	.db #0x00	; 0
      00068D 00                    1886 	.db #0x00	; 0
      00068E 00                    1887 	.db #0x00	; 0
      00068F 00                    1888 	.db #0x00	; 0
      000690 00                    1889 	.db #0x00	; 0
      000691 00                    1890 	.db #0x00	; 0
      000692 00                    1891 	.db #0x00	; 0
      000693 00                    1892 	.db #0x00	; 0
      000694 00                    1893 	.db #0x00	; 0
      000695 00                    1894 	.db #0x00	; 0
      000696 00                    1895 	.db #0x00	; 0
      000697 00                    1896 	.db #0x00	; 0
      000698 00                    1897 	.db #0x00	; 0
      000699 00                    1898 	.db #0x00	; 0
      00069A 00                    1899 	.db #0x00	; 0
      00069B 00                    1900 	.db #0x00	; 0
      00069C 00                    1901 	.db #0x00	; 0
      00069D 00                    1902 	.db #0x00	; 0
      00069E 00                    1903 	.db #0x00	; 0
      00069F 00                    1904 	.db #0x00	; 0
      0006A0 00                    1905 	.db #0x00	; 0
      0006A1 00                    1906 	.db #0x00	; 0
      0006A2 00                    1907 	.db #0x00	; 0
      0006A3 00                    1908 	.db #0x00	; 0
      0006A4 00                    1909 	.db #0x00	; 0
      0006A5 00                    1910 	.db #0x00	; 0
      0006A6 00                    1911 	.db #0x00	; 0
      0006A7 00                    1912 	.db #0x00	; 0
      0006A8 00                    1913 	.db #0x00	; 0
      0006A9 00                    1914 	.db #0x00	; 0
      0006AA 00                    1915 	.db #0x00	; 0
      0006AB 00                    1916 	.db #0x00	; 0
      0006AC 00                    1917 	.db #0x00	; 0
      0006AD 00                    1918 	.db #0x00	; 0
      0006AE 00                    1919 	.db #0x00	; 0
      0006AF 00                    1920 	.db #0x00	; 0
      0006B0 00                    1921 	.db #0x00	; 0
      0006B1 00                    1922 	.db #0x00	; 0
      0006B2 00                    1923 	.db #0x00	; 0
      0006B3 00                    1924 	.db #0x00	; 0
      0006B4 00                    1925 	.db #0x00	; 0
      0006B5 00                    1926 	.db #0x00	; 0
      0006B6 00                    1927 	.db #0x00	; 0
      0006B7                       1928 _BLANKSIZE:
      0006B7 03                    1929 	.db #0x03	; 3
      0006B8                       1930 _BLANK:
      0006B8 26                    1931 	.db #0x26	; 38
      0006B9 2B                    1932 	.db #0x2b	; 43
      0006BA 2C                    1933 	.db #0x2c	; 44
      0006BB                       1934 _EMPTYSPRITE:
      0006BB 50                    1935 	.db #0x50	; 80	'P'
      0006BC                       1936 _ENEMYCOUNT:
      0006BC 05                    1937 	.db #0x05	; 5
      0006BD                       1938 _xSpawnPositions:
      0006BD 00                    1939 	.db #0x00	; 0
      0006BE 60                    1940 	.db #0x60	; 96
      0006BF B0                    1941 	.db #0xb0	; 176
      0006C0 00                    1942 	.db #0x00	; 0
      0006C1 B0                    1943 	.db #0xb0	; 176
      0006C2 00                    1944 	.db #0x00	; 0
      0006C3 60                    1945 	.db #0x60	; 96
      0006C4 B0                    1946 	.db #0xb0	; 176
      0006C5                       1947 _ySpawnPositions:
      0006C5 00                    1948 	.db #0x00	; 0
      0006C6 00                    1949 	.db #0x00	; 0
      0006C7 00                    1950 	.db #0x00	; 0
      0006C8 5C                    1951 	.db #0x5c	; 92
      0006C9 5C                    1952 	.db #0x5c	; 92
      0006CA A0                    1953 	.db #0xa0	; 160
      0006CB A0                    1954 	.db #0xa0	; 160
      0006CC A0                    1955 	.db #0xa0	; 160
      0006CD                       1956 _PROJECTILECOUNT:
      0006CD 05                    1957 	.db #0x05	; 5
      0006CE                       1958 _PLAYERSIZE:
      0006CE 10                    1959 	.db #0x10	; 16
      0006CF                       1960 _maxHull:
      0006CF 64                    1961 	.db #0x64	;  100	'd'
      0006D0                       1962 _maxShield:
      0006D0 64                    1963 	.db #0x64	;  100	'd'
      0006D1                       1964 _GUNCOUNT:
      0006D1 03                    1965 	.db #0x03	; 3
                                   1966 ;main.c:107: void setHealthBar(uint8_t row, uint8_t hp) {
                                   1967 ;	---------------------------------
                                   1968 ; Function setHealthBar
                                   1969 ; ---------------------------------
      0006D2                       1970 _setHealthBar::
      0006D2 E8 FB                 1971 	add	sp, #-5
                                   1972 ;main.c:109: if (hp >= 80) {
      0006D4 F8 08                 1973 	ldhl	sp,	#8
      0006D6 7E                    1974 	ld	a, (hl)
      0006D7 D6 50                 1975 	sub	a, #0x50
      0006D9 38 31                 1976 	jr	C, 00102$
                                   1977 ;main.c:110: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      0006DB F8 00                 1978 	ldhl	sp,	#0
      0006DD 4D                    1979 	ld	c, l
      0006DE 44                    1980 	ld	b, h
      0006DF 36 50                 1981 	ld	(hl), #0x50
      0006E1 69                    1982 	ld	l, c
                                   1983 ;	spillPairReg hl
                                   1984 ;	spillPairReg hl
      0006E2 60                    1985 	ld	h, b
                                   1986 ;	spillPairReg hl
                                   1987 ;	spillPairReg hl
      0006E3 23                    1988 	inc	hl
      0006E4 36 50                 1989 	ld	(hl), #0x50
      0006E6 69                    1990 	ld	l, c
                                   1991 ;	spillPairReg hl
                                   1992 ;	spillPairReg hl
      0006E7 60                    1993 	ld	h, b
                                   1994 ;	spillPairReg hl
                                   1995 ;	spillPairReg hl
      0006E8 23                    1996 	inc	hl
      0006E9 23                    1997 	inc	hl
      0006EA 36 50                 1998 	ld	(hl), #0x50
      0006EC 69                    1999 	ld	l, c
                                   2000 ;	spillPairReg hl
                                   2001 ;	spillPairReg hl
      0006ED 60                    2002 	ld	h, b
                                   2003 ;	spillPairReg hl
                                   2004 ;	spillPairReg hl
      0006EE 23                    2005 	inc	hl
      0006EF 23                    2006 	inc	hl
      0006F0 23                    2007 	inc	hl
      0006F1 36 50                 2008 	ld	(hl), #0x50
      0006F3 21 04 00              2009 	ld	hl, #0x0004
      0006F6 09                    2010 	add	hl, bc
      0006F7 36 50                 2011 	ld	(hl), #0x50
                                   2012 ;main.c:111: set_win_tiles(5,row,5,1,blockmap);
      0006F9 C5                    2013 	push	bc
      0006FA 21 05 01              2014 	ld	hl, #0x105
      0006FD E5                    2015 	push	hl
      0006FE F8 0B                 2016 	ldhl	sp,	#11
      000700 66                    2017 	ld	h, (hl)
      000701 2E 05                 2018 	ld	l, #0x05
      000703 E5                    2019 	push	hl
      000704 CDr00r00              2020 	call	_set_win_tiles
      000707 E8 06                 2021 	add	sp, #6
                                   2022 ;main.c:112: return;
      000709 C3rE0r07              2023 	jp	00109$
      00070C                       2024 00102$:
                                   2025 ;main.c:114: if (hp >= 60) {
      00070C F8 08                 2026 	ldhl	sp,	#8
      00070E 7E                    2027 	ld	a, (hl)
      00070F D6 3C                 2028 	sub	a, #0x3c
      000711 38 31                 2029 	jr	C, 00104$
                                   2030 ;main.c:115: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      000713 F8 00                 2031 	ldhl	sp,	#0
      000715 4D                    2032 	ld	c, l
      000716 44                    2033 	ld	b, h
      000717 36 50                 2034 	ld	(hl), #0x50
      000719 69                    2035 	ld	l, c
                                   2036 ;	spillPairReg hl
                                   2037 ;	spillPairReg hl
      00071A 60                    2038 	ld	h, b
                                   2039 ;	spillPairReg hl
                                   2040 ;	spillPairReg hl
      00071B 23                    2041 	inc	hl
      00071C 36 50                 2042 	ld	(hl), #0x50
      00071E 69                    2043 	ld	l, c
                                   2044 ;	spillPairReg hl
                                   2045 ;	spillPairReg hl
      00071F 60                    2046 	ld	h, b
                                   2047 ;	spillPairReg hl
                                   2048 ;	spillPairReg hl
      000720 23                    2049 	inc	hl
      000721 23                    2050 	inc	hl
      000722 36 50                 2051 	ld	(hl), #0x50
      000724 69                    2052 	ld	l, c
                                   2053 ;	spillPairReg hl
                                   2054 ;	spillPairReg hl
      000725 60                    2055 	ld	h, b
                                   2056 ;	spillPairReg hl
                                   2057 ;	spillPairReg hl
      000726 23                    2058 	inc	hl
      000727 23                    2059 	inc	hl
      000728 23                    2060 	inc	hl
      000729 36 50                 2061 	ld	(hl), #0x50
      00072B 21 04 00              2062 	ld	hl, #0x0004
      00072E 09                    2063 	add	hl, bc
      00072F 36 00                 2064 	ld	(hl), #0x00
                                   2065 ;main.c:116: set_win_tiles(5,row,5,1,blockmap);
      000731 C5                    2066 	push	bc
      000732 21 05 01              2067 	ld	hl, #0x105
      000735 E5                    2068 	push	hl
      000736 F8 0B                 2069 	ldhl	sp,	#11
      000738 66                    2070 	ld	h, (hl)
      000739 2E 05                 2071 	ld	l, #0x05
      00073B E5                    2072 	push	hl
      00073C CDr00r00              2073 	call	_set_win_tiles
      00073F E8 06                 2074 	add	sp, #6
                                   2075 ;main.c:117: return;
      000741 C3rE0r07              2076 	jp	00109$
      000744                       2077 00104$:
                                   2078 ;main.c:119: if (hp >= 40) {
      000744 F8 08                 2079 	ldhl	sp,	#8
      000746 7E                    2080 	ld	a, (hl)
      000747 D6 28                 2081 	sub	a, #0x28
      000749 38 30                 2082 	jr	C, 00106$
                                   2083 ;main.c:120: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      00074B F8 00                 2084 	ldhl	sp,	#0
      00074D 4D                    2085 	ld	c, l
      00074E 44                    2086 	ld	b, h
      00074F 36 50                 2087 	ld	(hl), #0x50
      000751 69                    2088 	ld	l, c
                                   2089 ;	spillPairReg hl
                                   2090 ;	spillPairReg hl
      000752 60                    2091 	ld	h, b
                                   2092 ;	spillPairReg hl
                                   2093 ;	spillPairReg hl
      000753 23                    2094 	inc	hl
      000754 36 50                 2095 	ld	(hl), #0x50
      000756 69                    2096 	ld	l, c
                                   2097 ;	spillPairReg hl
                                   2098 ;	spillPairReg hl
      000757 60                    2099 	ld	h, b
                                   2100 ;	spillPairReg hl
                                   2101 ;	spillPairReg hl
      000758 23                    2102 	inc	hl
      000759 23                    2103 	inc	hl
      00075A 36 50                 2104 	ld	(hl), #0x50
      00075C 59                    2105 	ld	e, c
      00075D 50                    2106 	ld	d, b
      00075E 13                    2107 	inc	de
      00075F 13                    2108 	inc	de
      000760 13                    2109 	inc	de
      000761 AF                    2110 	xor	a, a
      000762 12                    2111 	ld	(de), a
      000763 21 04 00              2112 	ld	hl, #0x0004
      000766 09                    2113 	add	hl, bc
      000767 36 00                 2114 	ld	(hl), #0x00
                                   2115 ;main.c:121: set_win_tiles(5,row,5,1,blockmap);
      000769 C5                    2116 	push	bc
      00076A 21 05 01              2117 	ld	hl, #0x105
      00076D E5                    2118 	push	hl
      00076E F8 0B                 2119 	ldhl	sp,	#11
      000770 66                    2120 	ld	h, (hl)
      000771 2E 05                 2121 	ld	l, #0x05
      000773 E5                    2122 	push	hl
      000774 CDr00r00              2123 	call	_set_win_tiles
      000777 E8 06                 2124 	add	sp, #6
                                   2125 ;main.c:122: return;
      000779 18 65                 2126 	jr	00109$
      00077B                       2127 00106$:
                                   2128 ;main.c:124: if (hp >= 20) {
      00077B F8 08                 2129 	ldhl	sp,	#8
      00077D 7E                    2130 	ld	a, (hl)
      00077E D6 14                 2131 	sub	a, #0x14
      000780 38 30                 2132 	jr	C, 00108$
                                   2133 ;main.c:125: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000782 F8 00                 2134 	ldhl	sp,	#0
      000784 4D                    2135 	ld	c, l
      000785 44                    2136 	ld	b, h
      000786 36 50                 2137 	ld	(hl), #0x50
      000788 69                    2138 	ld	l, c
                                   2139 ;	spillPairReg hl
                                   2140 ;	spillPairReg hl
      000789 60                    2141 	ld	h, b
                                   2142 ;	spillPairReg hl
                                   2143 ;	spillPairReg hl
      00078A 23                    2144 	inc	hl
      00078B 36 50                 2145 	ld	(hl), #0x50
      00078D 59                    2146 	ld	e, c
      00078E 50                    2147 	ld	d, b
      00078F 13                    2148 	inc	de
      000790 13                    2149 	inc	de
      000791 AF                    2150 	xor	a, a
      000792 12                    2151 	ld	(de), a
      000793 59                    2152 	ld	e, c
      000794 50                    2153 	ld	d, b
      000795 13                    2154 	inc	de
      000796 13                    2155 	inc	de
      000797 13                    2156 	inc	de
      000798 AF                    2157 	xor	a, a
      000799 12                    2158 	ld	(de), a
      00079A 21 04 00              2159 	ld	hl, #0x0004
      00079D 09                    2160 	add	hl, bc
      00079E 36 00                 2161 	ld	(hl), #0x00
                                   2162 ;main.c:126: set_win_tiles(5,row,5,1,blockmap);
      0007A0 C5                    2163 	push	bc
      0007A1 21 05 01              2164 	ld	hl, #0x105
      0007A4 E5                    2165 	push	hl
      0007A5 F8 0B                 2166 	ldhl	sp,	#11
      0007A7 66                    2167 	ld	h, (hl)
      0007A8 2E 05                 2168 	ld	l, #0x05
      0007AA E5                    2169 	push	hl
      0007AB CDr00r00              2170 	call	_set_win_tiles
      0007AE E8 06                 2171 	add	sp, #6
                                   2172 ;main.c:127: return;
      0007B0 18 2E                 2173 	jr	00109$
      0007B2                       2174 00108$:
                                   2175 ;main.c:129: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      0007B2 F8 00                 2176 	ldhl	sp,	#0
      0007B4 4D                    2177 	ld	c, l
      0007B5 44                    2178 	ld	b, h
      0007B6 36 50                 2179 	ld	(hl), #0x50
      0007B8 59                    2180 	ld	e, c
      0007B9 50                    2181 	ld	d, b
      0007BA 13                    2182 	inc	de
      0007BB AF                    2183 	xor	a, a
      0007BC 12                    2184 	ld	(de), a
      0007BD 59                    2185 	ld	e, c
      0007BE 50                    2186 	ld	d, b
      0007BF 13                    2187 	inc	de
      0007C0 13                    2188 	inc	de
      0007C1 AF                    2189 	xor	a, a
      0007C2 12                    2190 	ld	(de), a
      0007C3 59                    2191 	ld	e, c
      0007C4 50                    2192 	ld	d, b
      0007C5 13                    2193 	inc	de
      0007C6 13                    2194 	inc	de
      0007C7 13                    2195 	inc	de
      0007C8 AF                    2196 	xor	a, a
      0007C9 12                    2197 	ld	(de), a
      0007CA 21 04 00              2198 	ld	hl, #0x0004
      0007CD 09                    2199 	add	hl, bc
      0007CE 36 00                 2200 	ld	(hl), #0x00
                                   2201 ;main.c:130: set_win_tiles(5,row,5,1,blockmap);
      0007D0 C5                    2202 	push	bc
      0007D1 21 05 01              2203 	ld	hl, #0x105
      0007D4 E5                    2204 	push	hl
      0007D5 F8 0B                 2205 	ldhl	sp,	#11
      0007D7 66                    2206 	ld	h, (hl)
      0007D8 2E 05                 2207 	ld	l, #0x05
      0007DA E5                    2208 	push	hl
      0007DB CDr00r00              2209 	call	_set_win_tiles
      0007DE E8 06                 2210 	add	sp, #6
                                   2211 ;main.c:131: return;
      0007E0                       2212 00109$:
                                   2213 ;main.c:133: }
      0007E0 E8 05                 2214 	add	sp, #5
      0007E2 C9                    2215 	ret
                                   2216 ;main.c:135: void updateScore() {
                                   2217 ;	---------------------------------
                                   2218 ; Function updateScore
                                   2219 ; ---------------------------------
      0007E3                       2220 _updateScore::
      0007E3 E8 F6                 2221 	add	sp, #-10
                                   2222 ;main.c:139: len = bcd2text(&bcd, 0x01, buf);
      0007E5 F8 00                 2223 	ldhl	sp,	#0
      0007E7 4D                    2224 	ld	c, l
      0007E8 44                    2225 	ld	b, h
      0007E9 59                    2226 	ld	e, c
      0007EA 50                    2227 	ld	d, b
      0007EB C5                    2228 	push	bc
      0007EC D5                    2229 	push	de
      0007ED 3E 01                 2230 	ld	a, #0x01
      0007EF F5                    2231 	push	af
      0007F0 33                    2232 	inc	sp
      0007F1 11r5Dr00              2233 	ld	de, #_bcd
      0007F4 D5                    2234 	push	de
      0007F5 CDr00r00              2235 	call	_bcd2text
      0007F8 E8 05                 2236 	add	sp, #5
      0007FA C1                    2237 	pop	bc
                                   2238 ;main.c:140: set_win_tiles(15, 1, 5, 1, buf+3);
      0007FB 03                    2239 	inc	bc
      0007FC 03                    2240 	inc	bc
      0007FD 03                    2241 	inc	bc
      0007FE C5                    2242 	push	bc
      0007FF 21 05 01              2243 	ld	hl, #0x105
      000802 E5                    2244 	push	hl
      000803 21 0F 01              2245 	ld	hl, #0x10f
      000806 E5                    2246 	push	hl
      000807 CDr00r00              2247 	call	_set_win_tiles
                                   2248 ;main.c:141: }
      00080A E8 10                 2249 	add	sp, #16
      00080C C9                    2250 	ret
                                   2251 ;main.c:143: void incrementScore() {
                                   2252 ;	---------------------------------
                                   2253 ; Function incrementScore
                                   2254 ; ---------------------------------
      00080D                       2255 _incrementScore::
                                   2256 ;main.c:144: score += 1;
      00080D 21r5Br00              2257 	ld	hl, #_score
      000810 2A                    2258 	ld	a, (hl+)
      000811 4F                    2259 	ld	c, a
      000812 3A                    2260 	ld	a, (hl-)
      000813 47                    2261 	ld	b, a
      000814 03                    2262 	inc	bc
      000815 79                    2263 	ld	a, c
      000816 22                    2264 	ld	(hl+), a
      000817 70                    2265 	ld	(hl), b
                                   2266 ;main.c:145: bcd_add(&bcd, &INCREMENT);
      000818 11r61r00              2267 	ld	de, #_INCREMENT
      00081B D5                    2268 	push	de
      00081C 11r5Dr00              2269 	ld	de, #_bcd
      00081F D5                    2270 	push	de
      000820 CDr00r00              2271 	call	_bcd_add
      000823 E8 04                 2272 	add	sp, #4
                                   2273 ;main.c:146: }
      000825 C9                    2274 	ret
                                   2275 ;main.c:148: void updateDirection() {
                                   2276 ;	---------------------------------
                                   2277 ; Function updateDirection
                                   2278 ; ---------------------------------
      000826                       2279 _updateDirection::
      000826 E8 FC                 2280 	add	sp, #-4
                                   2281 ;main.c:152: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000828 21r87r00              2282 	ld	hl, #_joydata
      00082B 5E                    2283 	ld	e, (hl)
      00082C 7B                    2284 	ld	a, e
      00082D E6 01                 2285 	and	a, #0x01
      00082F F8 00                 2286 	ldhl	sp,	#0
      000831 22                    2287 	ld	(hl+), a
      000832 AF                    2288 	xor	a, a
      000833 22                    2289 	ld	(hl+), a
      000834 7B                    2290 	ld	a, e
      000835 E6 04                 2291 	and	a, #0x04
      000837 22                    2292 	ld	(hl+), a
      000838 AF                    2293 	xor	a, a
      000839 32                    2294 	ld	(hl-), a
      00083A 2B                    2295 	dec	hl
      00083B 7B                    2296 	ld	a, e
      00083C E6 08                 2297 	and	a, #0x08
      00083E 4F                    2298 	ld	c, a
      00083F 06 00                 2299 	ld	b, #0x00
      000841 3A                    2300 	ld	a, (hl-)
      000842 B6                    2301 	or	a, (hl)
      000843 28 14                 2302 	jr	Z, 00102$
      000845 F8 03                 2303 	ldhl	sp,	#3
      000847 3A                    2304 	ld	a, (hl-)
      000848 B6                    2305 	or	a, (hl)
      000849 20 0E                 2306 	jr	NZ, 00102$
      00084B 78                    2307 	ld	a, b
      00084C B1                    2308 	or	a, c
      00084D 20 0A                 2309 	jr	NZ, 00102$
                                   2310 ;main.c:153: xDir = 1;
      00084F 21r43r00              2311 	ld	hl, #_xDir
      000852 36 01                 2312 	ld	(hl), #0x01
                                   2313 ;main.c:154: yDir = 0;
      000854 21r44r00              2314 	ld	hl, #_yDir
      000857 36 00                 2315 	ld	(hl), #0x00
      000859                       2316 00102$:
                                   2317 ;main.c:156: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000859 7B                    2318 	ld	a, e
      00085A E6 02                 2319 	and	a, #0x02
      00085C 5F                    2320 	ld	e, a
      00085D 16 00                 2321 	ld	d, #0x00
      00085F 7A                    2322 	ld	a, d
      000860 B3                    2323 	or	a, e
      000861 28 14                 2324 	jr	Z, 00106$
      000863 F8 03                 2325 	ldhl	sp,	#3
      000865 3A                    2326 	ld	a, (hl-)
      000866 B6                    2327 	or	a, (hl)
      000867 20 0E                 2328 	jr	NZ, 00106$
      000869 78                    2329 	ld	a, b
      00086A B1                    2330 	or	a, c
      00086B 20 0A                 2331 	jr	NZ, 00106$
                                   2332 ;main.c:157: xDir = -1;
      00086D 21r43r00              2333 	ld	hl, #_xDir
      000870 36 FF                 2334 	ld	(hl), #0xff
                                   2335 ;main.c:158: yDir = 0;
      000872 21r44r00              2336 	ld	hl, #_yDir
      000875 36 00                 2337 	ld	(hl), #0x00
      000877                       2338 00106$:
                                   2339 ;main.c:160: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000877 F8 03                 2340 	ldhl	sp,	#3
      000879 3A                    2341 	ld	a, (hl-)
      00087A B6                    2342 	or	a, (hl)
      00087B 28 13                 2343 	jr	Z, 00110$
      00087D 7A                    2344 	ld	a, d
      00087E B3                    2345 	or	a, e
      00087F 20 0F                 2346 	jr	NZ, 00110$
      000881 2B                    2347 	dec	hl
      000882 3A                    2348 	ld	a, (hl-)
      000883 B6                    2349 	or	a, (hl)
      000884 20 0A                 2350 	jr	NZ, 00110$
                                   2351 ;main.c:161: xDir = 0;
      000886 21r43r00              2352 	ld	hl, #_xDir
      000889 36 00                 2353 	ld	(hl), #0x00
                                   2354 ;main.c:162: yDir = -1;
      00088B 21r44r00              2355 	ld	hl, #_yDir
      00088E 36 FF                 2356 	ld	(hl), #0xff
      000890                       2357 00110$:
                                   2358 ;main.c:164: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000890 78                    2359 	ld	a, b
      000891 B1                    2360 	or	a, c
      000892 28 14                 2361 	jr	Z, 00114$
      000894 7A                    2362 	ld	a, d
      000895 B3                    2363 	or	a, e
      000896 20 10                 2364 	jr	NZ, 00114$
      000898 F8 01                 2365 	ldhl	sp,	#1
      00089A 3A                    2366 	ld	a, (hl-)
      00089B B6                    2367 	or	a, (hl)
      00089C 20 0A                 2368 	jr	NZ, 00114$
                                   2369 ;main.c:165: xDir = 0;
      00089E 21r43r00              2370 	ld	hl, #_xDir
      0008A1 36 00                 2371 	ld	(hl), #0x00
                                   2372 ;main.c:166: yDir = 1;
      0008A3 21r44r00              2373 	ld	hl, #_yDir
      0008A6 36 01                 2374 	ld	(hl), #0x01
      0008A8                       2375 00114$:
                                   2376 ;main.c:170: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      0008A8 F8 03                 2377 	ldhl	sp,	#3
      0008AA 3A                    2378 	ld	a, (hl-)
      0008AB B6                    2379 	or	a, (hl)
      0008AC 28 0F                 2380 	jr	Z, 00118$
      0008AE 2B                    2381 	dec	hl
      0008AF 3A                    2382 	ld	a, (hl-)
      0008B0 B6                    2383 	or	a, (hl)
      0008B1 28 0A                 2384 	jr	Z, 00118$
                                   2385 ;main.c:171: xDir = 1;
      0008B3 21r43r00              2386 	ld	hl, #_xDir
      0008B6 36 01                 2387 	ld	(hl), #0x01
                                   2388 ;main.c:172: yDir = -1;
      0008B8 21r44r00              2389 	ld	hl, #_yDir
      0008BB 36 FF                 2390 	ld	(hl), #0xff
      0008BD                       2391 00118$:
                                   2392 ;main.c:174: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      0008BD F8 03                 2393 	ldhl	sp,	#3
      0008BF 3A                    2394 	ld	a, (hl-)
      0008C0 B6                    2395 	or	a, (hl)
      0008C1 28 0E                 2396 	jr	Z, 00121$
      0008C3 7A                    2397 	ld	a, d
      0008C4 B3                    2398 	or	a, e
      0008C5 28 0A                 2399 	jr	Z, 00121$
                                   2400 ;main.c:175: xDir = -1;
      0008C7 21r43r00              2401 	ld	hl, #_xDir
      0008CA 36 FF                 2402 	ld	(hl), #0xff
                                   2403 ;main.c:176: yDir = -1;
      0008CC 21r44r00              2404 	ld	hl, #_yDir
      0008CF 36 FF                 2405 	ld	(hl), #0xff
      0008D1                       2406 00121$:
                                   2407 ;main.c:178: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      0008D1 78                    2408 	ld	a, b
      0008D2 B1                    2409 	or	a, c
      0008D3 28 10                 2410 	jr	Z, 00124$
      0008D5 F8 01                 2411 	ldhl	sp,	#1
      0008D7 3A                    2412 	ld	a, (hl-)
      0008D8 B6                    2413 	or	a, (hl)
      0008D9 28 0A                 2414 	jr	Z, 00124$
                                   2415 ;main.c:179: xDir = 1;
      0008DB 21r43r00              2416 	ld	hl, #_xDir
      0008DE 36 01                 2417 	ld	(hl), #0x01
                                   2418 ;main.c:180: yDir = 1;
      0008E0 21r44r00              2419 	ld	hl, #_yDir
      0008E3 36 01                 2420 	ld	(hl), #0x01
      0008E5                       2421 00124$:
                                   2422 ;main.c:182: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      0008E5 78                    2423 	ld	a, b
      0008E6 B1                    2424 	or	a, c
      0008E7 28 0E                 2425 	jr	Z, 00127$
      0008E9 7A                    2426 	ld	a, d
      0008EA B3                    2427 	or	a, e
      0008EB 28 0A                 2428 	jr	Z, 00127$
                                   2429 ;main.c:183: xDir = -1;
      0008ED 21r43r00              2430 	ld	hl, #_xDir
      0008F0 36 FF                 2431 	ld	(hl), #0xff
                                   2432 ;main.c:184: yDir = 1;
      0008F2 21r44r00              2433 	ld	hl, #_yDir
      0008F5 36 01                 2434 	ld	(hl), #0x01
      0008F7                       2435 00127$:
                                   2436 ;main.c:189: if (xDir == 0 && yDir == 0) {
      0008F7 FAr43r00              2437 	ld	a, (#_xDir)
      0008FA B7                    2438 	or	a, a
      0008FB 20 07                 2439 	jr	NZ, 00130$
      0008FD FAr44r00              2440 	ld	a, (#_yDir)
      000900 B7                    2441 	or	a, a
                                   2442 ;main.c:190: return;
      000901 CAr4Dr0A              2443 	jp	Z,00195$
      000904                       2444 00130$:
                                   2445 ;main.c:222: if (xDir == 0 && yDir > 0) {
      000904 21r44r00              2446 	ld	hl, #_yDir
      000907 5E                    2447 	ld	e, (hl)
      000908 AF                    2448 	xor	a, a
      000909 57                    2449 	ld	d, a
      00090A 96                    2450 	sub	a, (hl)
      00090B CB 7B                 2451 	bit	7, e
      00090D 28 07                 2452 	jr	Z, 00387$
      00090F CB 7A                 2453 	bit	7, d
      000911 20 08                 2454 	jr	NZ, 00388$
      000913 BF                    2455 	cp	a, a
      000914 18 05                 2456 	jr	00388$
      000916                       2457 00387$:
      000916 CB 7A                 2458 	bit	7, d
      000918 28 01                 2459 	jr	Z, 00388$
      00091A 37                    2460 	scf
      00091B                       2461 00388$:
      00091B 3E 00                 2462 	ld	a, #0x00
      00091D 17                    2463 	rla
      00091E 4F                    2464 	ld	c, a
      00091F FAr43r00              2465 	ld	a, (#_xDir)
      000922 B7                    2466 	or	a,a
      000923 20 1A                 2467 	jr	NZ, 00160$
      000925 B1                    2468 	or	a,c
      000926 28 17                 2469 	jr	Z, 00160$
                                   2470 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000928 21r02r00              2471 	ld	hl, #(_shadow_OAM + 2)
      00092B 36 00                 2472 	ld	(hl), #0x00
      00092D 21r06r00              2473 	ld	hl, #(_shadow_OAM + 6)
      000930 36 02                 2474 	ld	(hl), #0x02
                                   2475 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000932 21r03r00              2476 	ld	hl, #(_shadow_OAM + 3)
      000935 36 40                 2477 	ld	(hl), #0x40
      000937 21r07r00              2478 	ld	hl, #(_shadow_OAM + 7)
      00093A 36 40                 2479 	ld	(hl), #0x40
                                   2480 ;main.c:226: set_sprite_prop(1, S_FLIPY); 
      00093C C3r4Dr0A              2481 	jp	00195$
      00093F                       2482 00160$:
                                   2483 ;main.c:228: else if (xDir == 0 && yDir < 0) {
      00093F FAr44r00              2484 	ld	a, (#_yDir)
      000942 07                    2485 	rlca
      000943 E6 01                 2486 	and	a,#0x01
      000945 F8 02                 2487 	ldhl	sp,	#2
      000947 77                    2488 	ld	(hl), a
      000948 FAr43r00              2489 	ld	a, (#_xDir)
      00094B B7                    2490 	or	a, a
      00094C 20 1D                 2491 	jr	NZ, 00156$
      00094E F8 02                 2492 	ldhl	sp,	#2
      000950 7E                    2493 	ld	a, (hl)
      000951 B7                    2494 	or	a, a
      000952 28 17                 2495 	jr	Z, 00156$
                                   2496 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000954 21r02r00              2497 	ld	hl, #(_shadow_OAM + 2)
      000957 36 00                 2498 	ld	(hl), #0x00
      000959 21r06r00              2499 	ld	hl, #(_shadow_OAM + 6)
      00095C 36 02                 2500 	ld	(hl), #0x02
                                   2501 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00095E 21r03r00              2502 	ld	hl, #(_shadow_OAM + 3)
      000961 36 00                 2503 	ld	(hl), #0x00
      000963 21r07r00              2504 	ld	hl, #(_shadow_OAM + 7)
      000966 36 00                 2505 	ld	(hl), #0x00
                                   2506 ;main.c:232: set_sprite_prop(1, 0); 
      000968 C3r4Dr0A              2507 	jp	00195$
      00096B                       2508 00156$:
                                   2509 ;main.c:234: else if (xDir > 0 && yDir == 0) {
      00096B 21r43r00              2510 	ld	hl, #_xDir
      00096E 5E                    2511 	ld	e, (hl)
      00096F AF                    2512 	xor	a, a
      000970 57                    2513 	ld	d, a
      000971 96                    2514 	sub	a, (hl)
      000972 CB 7B                 2515 	bit	7, e
      000974 28 07                 2516 	jr	Z, 00389$
      000976 CB 7A                 2517 	bit	7, d
      000978 20 08                 2518 	jr	NZ, 00390$
      00097A BF                    2519 	cp	a, a
      00097B 18 05                 2520 	jr	00390$
      00097D                       2521 00389$:
      00097D CB 7A                 2522 	bit	7, d
      00097F 28 01                 2523 	jr	Z, 00390$
      000981 37                    2524 	scf
      000982                       2525 00390$:
      000982 3E 00                 2526 	ld	a, #0x00
      000984 17                    2527 	rla
      000985 47                    2528 	ld	b, a
      000986 B7                    2529 	or	a, a
      000987 28 1D                 2530 	jr	Z, 00152$
      000989 FAr44r00              2531 	ld	a, (#_yDir)
      00098C B7                    2532 	or	a, a
      00098D 20 17                 2533 	jr	NZ, 00152$
                                   2534 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00098F 21r02r00              2535 	ld	hl, #(_shadow_OAM + 2)
      000992 36 04                 2536 	ld	(hl), #0x04
      000994 21r06r00              2537 	ld	hl, #(_shadow_OAM + 6)
      000997 36 06                 2538 	ld	(hl), #0x06
                                   2539 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000999 21r03r00              2540 	ld	hl, #(_shadow_OAM + 3)
      00099C 36 00                 2541 	ld	(hl), #0x00
      00099E 21r07r00              2542 	ld	hl, #(_shadow_OAM + 7)
      0009A1 36 00                 2543 	ld	(hl), #0x00
                                   2544 ;main.c:238: set_sprite_prop(1, 0); 
      0009A3 C3r4Dr0A              2545 	jp	00195$
      0009A6                       2546 00152$:
                                   2547 ;main.c:240: else if (xDir < 0 && yDir == 0) {
      0009A6 FAr43r00              2548 	ld	a, (#_xDir)
      0009A9 07                    2549 	rlca
      0009AA E6 01                 2550 	and	a,#0x01
      0009AC F8 03                 2551 	ldhl	sp,	#3
      0009AE 77                    2552 	ld	(hl), a
      0009AF 7E                    2553 	ld	a, (hl)
      0009B0 B7                    2554 	or	a, a
      0009B1 28 1D                 2555 	jr	Z, 00148$
      0009B3 FAr44r00              2556 	ld	a, (#_yDir)
      0009B6 B7                    2557 	or	a, a
      0009B7 20 17                 2558 	jr	NZ, 00148$
                                   2559 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0009B9 21r02r00              2560 	ld	hl, #(_shadow_OAM + 2)
      0009BC 36 04                 2561 	ld	(hl), #0x04
      0009BE 21r06r00              2562 	ld	hl, #(_shadow_OAM + 6)
      0009C1 36 06                 2563 	ld	(hl), #0x06
                                   2564 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0009C3 21r03r00              2565 	ld	hl, #(_shadow_OAM + 3)
      0009C6 36 20                 2566 	ld	(hl), #0x20
      0009C8 21r07r00              2567 	ld	hl, #(_shadow_OAM + 7)
      0009CB 36 20                 2568 	ld	(hl), #0x20
                                   2569 ;main.c:244: set_sprite_prop(1, S_FLIPX); 
      0009CD C3r4Dr0A              2570 	jp	00195$
      0009D0                       2571 00148$:
                                   2572 ;main.c:246: else if (xDir > 0 && yDir < 0) {
      0009D0 78                    2573 	ld	a, b
      0009D1 B7                    2574 	or	a, a
      0009D2 28 1C                 2575 	jr	Z, 00144$
      0009D4 F8 02                 2576 	ldhl	sp,	#2
      0009D6 7E                    2577 	ld	a, (hl)
      0009D7 B7                    2578 	or	a, a
      0009D8 28 16                 2579 	jr	Z, 00144$
                                   2580 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0009DA 21r02r00              2581 	ld	hl, #(_shadow_OAM + 2)
      0009DD 36 08                 2582 	ld	(hl), #0x08
      0009DF 21r06r00              2583 	ld	hl, #(_shadow_OAM + 6)
      0009E2 36 0A                 2584 	ld	(hl), #0x0a
                                   2585 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0009E4 21r03r00              2586 	ld	hl, #(_shadow_OAM + 3)
      0009E7 36 00                 2587 	ld	(hl), #0x00
      0009E9 21r07r00              2588 	ld	hl, #(_shadow_OAM + 7)
      0009EC 36 00                 2589 	ld	(hl), #0x00
                                   2590 ;main.c:250: set_sprite_prop(1, 0); 
      0009EE 18 5D                 2591 	jr	00195$
      0009F0                       2592 00144$:
                                   2593 ;main.c:252: else if (xDir > 0 && yDir > 0) {
      0009F0 78                    2594 	ld	a, b
      0009F1 B7                    2595 	or	a, a
      0009F2 28 1A                 2596 	jr	Z, 00140$
      0009F4 79                    2597 	ld	a, c
      0009F5 B7                    2598 	or	a, a
      0009F6 28 16                 2599 	jr	Z, 00140$
                                   2600 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0009F8 21r02r00              2601 	ld	hl, #(_shadow_OAM + 2)
      0009FB 36 08                 2602 	ld	(hl), #0x08
      0009FD 21r06r00              2603 	ld	hl, #(_shadow_OAM + 6)
      000A00 36 0A                 2604 	ld	(hl), #0x0a
                                   2605 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000A02 21r03r00              2606 	ld	hl, #(_shadow_OAM + 3)
      000A05 36 40                 2607 	ld	(hl), #0x40
      000A07 21r07r00              2608 	ld	hl, #(_shadow_OAM + 7)
      000A0A 36 40                 2609 	ld	(hl), #0x40
                                   2610 ;main.c:256: set_sprite_prop(1, S_FLIPY); 
      000A0C 18 3F                 2611 	jr	00195$
      000A0E                       2612 00140$:
                                   2613 ;main.c:258: else if (xDir < 0 && yDir > 0) {
      000A0E F8 03                 2614 	ldhl	sp,	#3
      000A10 7E                    2615 	ld	a, (hl)
      000A11 B7                    2616 	or	a, a
      000A12 28 1A                 2617 	jr	Z, 00136$
      000A14 79                    2618 	ld	a, c
      000A15 B7                    2619 	or	a, a
      000A16 28 16                 2620 	jr	Z, 00136$
                                   2621 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000A18 21r02r00              2622 	ld	hl, #(_shadow_OAM + 2)
      000A1B 36 08                 2623 	ld	(hl), #0x08
      000A1D 21r06r00              2624 	ld	hl, #(_shadow_OAM + 6)
      000A20 36 0A                 2625 	ld	(hl), #0x0a
                                   2626 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000A22 21r03r00              2627 	ld	hl, #(_shadow_OAM + 3)
      000A25 36 60                 2628 	ld	(hl), #0x60
      000A27 21r07r00              2629 	ld	hl, #(_shadow_OAM + 7)
      000A2A 36 60                 2630 	ld	(hl), #0x60
                                   2631 ;main.c:262: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000A2C 18 1F                 2632 	jr	00195$
      000A2E                       2633 00136$:
                                   2634 ;main.c:264: else if (xDir < 0 && yDir < 0) {
      000A2E F8 03                 2635 	ldhl	sp,	#3
      000A30 7E                    2636 	ld	a, (hl)
      000A31 B7                    2637 	or	a, a
      000A32 28 19                 2638 	jr	Z, 00195$
      000A34 2B                    2639 	dec	hl
      000A35 7E                    2640 	ld	a, (hl)
      000A36 B7                    2641 	or	a, a
      000A37 28 14                 2642 	jr	Z, 00195$
                                   2643 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000A39 21r02r00              2644 	ld	hl, #(_shadow_OAM + 2)
      000A3C 36 08                 2645 	ld	(hl), #0x08
      000A3E 21r06r00              2646 	ld	hl, #(_shadow_OAM + 6)
      000A41 36 0A                 2647 	ld	(hl), #0x0a
                                   2648 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000A43 21r03r00              2649 	ld	hl, #(_shadow_OAM + 3)
      000A46 36 20                 2650 	ld	(hl), #0x20
      000A48 21r07r00              2651 	ld	hl, #(_shadow_OAM + 7)
      000A4B 36 20                 2652 	ld	(hl), #0x20
                                   2653 ;main.c:268: set_sprite_prop(1, S_FLIPX); 
      000A4D                       2654 00195$:
                                   2655 ;main.c:270: }
      000A4D E8 04                 2656 	add	sp, #4
      000A4F C9                    2657 	ret
                                   2658 ;main.c:299: void playSound(uint8_t type) {
                                   2659 ;	---------------------------------
                                   2660 ; Function playSound
                                   2661 ; ---------------------------------
      000A50                       2662 _playSound::
                                   2663 ;main.c:300: if (type == 20) { //singlegun
      000A50 F8 02                 2664 	ldhl	sp,	#2
      000A52 7E                    2665 	ld	a, (hl)
      000A53 D6 14                 2666 	sub	a, #0x14
      000A55 20 13                 2667 	jr	NZ, 00102$
                                   2668 ;main.c:301: NR10_REG = 0x00;
      000A57 AF                    2669 	xor	a, a
      000A58 E0r00                 2670 	ldh	(_NR10_REG + 0), a
                                   2671 ;main.c:302: NR11_REG = 0x81;
      000A5A 3E 81                 2672 	ld	a, #0x81
      000A5C E0r00                 2673 	ldh	(_NR11_REG + 0), a
                                   2674 ;main.c:303: NR12_REG = 0x43;
      000A5E 3E 43                 2675 	ld	a, #0x43
      000A60 E0r00                 2676 	ldh	(_NR12_REG + 0), a
                                   2677 ;main.c:304: NR13_REG = 0X00;//0x6D;
      000A62 AF                    2678 	xor	a, a
      000A63 E0r00                 2679 	ldh	(_NR13_REG + 0), a
                                   2680 ;main.c:305: NR14_REG = 0x86;
      000A65 3E 86                 2681 	ld	a, #0x86
      000A67 E0r00                 2682 	ldh	(_NR14_REG + 0), a
                                   2683 ;main.c:306: return;
      000A69 C9                    2684 	ret
      000A6A                       2685 00102$:
                                   2686 ;main.c:308: if (type == 23) {
      000A6A F8 02                 2687 	ldhl	sp,	#2
      000A6C 7E                    2688 	ld	a, (hl)
      000A6D D6 17                 2689 	sub	a, #0x17
      000A6F 20 12                 2690 	jr	NZ, 00104$
                                   2691 ;main.c:309: NR10_REG = 0x00;
      000A71 AF                    2692 	xor	a, a
      000A72 E0r00                 2693 	ldh	(_NR10_REG + 0), a
                                   2694 ;main.c:310: NR11_REG = 0x81;
      000A74 3E 81                 2695 	ld	a, #0x81
      000A76 E0r00                 2696 	ldh	(_NR11_REG + 0), a
                                   2697 ;main.c:311: NR12_REG = 0x53;
      000A78 3E 53                 2698 	ld	a, #0x53
      000A7A E0r00                 2699 	ldh	(_NR12_REG + 0), a
                                   2700 ;main.c:312: NR13_REG = 0X00;//0x6D;
      000A7C AF                    2701 	xor	a, a
      000A7D E0r00                 2702 	ldh	(_NR13_REG + 0), a
                                   2703 ;main.c:313: NR14_REG = 0x86;
      000A7F 3E 86                 2704 	ld	a, #0x86
      000A81 E0r00                 2705 	ldh	(_NR14_REG + 0), a
      000A83                       2706 00104$:
                                   2707 ;main.c:315: if (type == 26) {
      000A83 F8 02                 2708 	ldhl	sp,	#2
      000A85 7E                    2709 	ld	a, (hl)
      000A86 D6 1A                 2710 	sub	a, #0x1a
      000A88 20 13                 2711 	jr	NZ, 00106$
                                   2712 ;main.c:316: NR10_REG = 0x00;
      000A8A AF                    2713 	xor	a, a
      000A8B E0r00                 2714 	ldh	(_NR10_REG + 0), a
                                   2715 ;main.c:317: NR11_REG = 0x89;
      000A8D 3E 89                 2716 	ld	a, #0x89
      000A8F E0r00                 2717 	ldh	(_NR11_REG + 0), a
                                   2718 ;main.c:318: NR12_REG = 0x55;
      000A91 3E 55                 2719 	ld	a, #0x55
      000A93 E0r00                 2720 	ldh	(_NR12_REG + 0), a
                                   2721 ;main.c:319: NR13_REG = 0x70;//0Xbe;//0x6D;
      000A95 3E 70                 2722 	ld	a, #0x70
      000A97 E0r00                 2723 	ldh	(_NR13_REG + 0), a
                                   2724 ;main.c:320: NR14_REG = 0x84;
      000A99 3E 84                 2725 	ld	a, #0x84
      000A9B E0r00                 2726 	ldh	(_NR14_REG + 0), a
      000A9D                       2727 00106$:
                                   2728 ;main.c:322: if (type == 0) {  // explosion
      000A9D F8 02                 2729 	ldhl	sp,	#2
      000A9F 7E                    2730 	ld	a, (hl)
      000AA0 B7                    2731 	or	a, a
      000AA1 C0                    2732 	ret	NZ
                                   2733 ;main.c:323: NR41_REG = 0x20;  
      000AA2 3E 20                 2734 	ld	a, #0x20
      000AA4 E0r00                 2735 	ldh	(_NR41_REG + 0), a
                                   2736 ;main.c:324: NR42_REG = 0xa2;//0xa3;  
      000AA6 3E A2                 2737 	ld	a, #0xa2
      000AA8 E0r00                 2738 	ldh	(_NR42_REG + 0), a
                                   2739 ;main.c:325: NR43_REG = 0x57;  
      000AAA 3E 57                 2740 	ld	a, #0x57
      000AAC E0r00                 2741 	ldh	(_NR43_REG + 0), a
                                   2742 ;main.c:326: NR44_REG = 0x80;  
      000AAE 3E 80                 2743 	ld	a, #0x80
      000AB0 E0r00                 2744 	ldh	(_NR44_REG + 0), a
                                   2745 ;main.c:332: }
      000AB2 C9                    2746 	ret
                                   2747 ;main.c:335: void updateEnemyPositions() {
                                   2748 ;	---------------------------------
                                   2749 ; Function updateEnemyPositions
                                   2750 ; ---------------------------------
      000AB3                       2751 _updateEnemyPositions::
      000AB3 E8 F0                 2752 	add	sp, #-16
                                   2753 ;main.c:337: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000AB5 F8 0F                 2754 	ldhl	sp,	#15
      000AB7 36 00                 2755 	ld	(hl), #0x00
      000AB9                       2756 00143$:
      000AB9 21rBCr06              2757 	ld	hl, #_ENEMYCOUNT
      000ABC 4E                    2758 	ld	c, (hl)
      000ABD F8 0F                 2759 	ldhl	sp,	#15
      000ABF 7E                    2760 	ld	a, (hl)
      000AC0 91                    2761 	sub	a, c
      000AC1 D2r8Cr0E              2762 	jp	NC, 00120$
                                   2763 ;main.c:338: if (!enemies[i].alive) {
      000AC4 3A                    2764 	ld	a, (hl-)
      000AC5 2B                    2765 	dec	hl
      000AC6 22                    2766 	ld	(hl+), a
      000AC7 36 00                 2767 	ld	(hl), #0x00
      000AC9 3E 04                 2768 	ld	a, #0x04
      000ACB                       2769 00279$:
      000ACB F8 0D                 2770 	ldhl	sp,	#13
      000ACD CB 26                 2771 	sla	(hl)
      000ACF 23                    2772 	inc	hl
      000AD0 CB 16                 2773 	rl	(hl)
      000AD2 3D                    2774 	dec	a
      000AD3 20 F6                 2775 	jr	NZ, 00279$
      000AD5 2B                    2776 	dec	hl
      000AD6 2A                    2777 	ld	a, (hl+)
      000AD7 5F                    2778 	ld	e, a
      000AD8 56                    2779 	ld	d, (hl)
      000AD9 21r00r00              2780 	ld	hl, #_enemies
      000ADC 19                    2781 	add	hl, de
      000ADD E5                    2782 	push	hl
      000ADE 7D                    2783 	ld	a, l
      000ADF F8 06                 2784 	ldhl	sp,	#6
      000AE1 77                    2785 	ld	(hl), a
      000AE2 E1                    2786 	pop	hl
      000AE3 7C                    2787 	ld	a, h
      000AE4 F8 05                 2788 	ldhl	sp,	#5
      000AE6 32                    2789 	ld	(hl-), a
      000AE7 2A                    2790 	ld	a, (hl+)
      000AE8 5F                    2791 	ld	e, a
      000AE9 56                    2792 	ld	d, (hl)
      000AEA 21 09 00              2793 	ld	hl, #0x0009
      000AED 19                    2794 	add	hl, de
      000AEE 4D                    2795 	ld	c, l
      000AEF 44                    2796 	ld	b, h
      000AF0 0A                    2797 	ld	a, (bc)
      000AF1 B7                    2798 	or	a, a
      000AF2 CAr86r0E              2799 	jp	Z, 00119$
                                   2800 ;main.c:341: enemies[i].x -= xOverflow;
      000AF5 F8 04                 2801 	ldhl	sp,#4
      000AF7 2A                    2802 	ld	a, (hl+)
      000AF8 5F                    2803 	ld	e, a
      000AF9 56                    2804 	ld	d, (hl)
      000AFA 1A                    2805 	ld	a, (de)
      000AFB 47                    2806 	ld	b, a
      000AFC 13                    2807 	inc	de
      000AFD 1A                    2808 	ld	a, (de)
      000AFE 4F                    2809 	ld	c, a
      000AFF 58                    2810 	ld	e, b
      000B00 51                    2811 	ld	d, c
      000B01 21r51r00              2812 	ld	hl, #_xOverflow
      000B04 2A                    2813 	ld	a,	(hl+)
      000B05 66                    2814 	ld	h, (hl)
      000B06 6F                    2815 	ld	l, a
      000B07 7B                    2816 	ld	a, e
      000B08 95                    2817 	sub	a, l
      000B09 5F                    2818 	ld	e, a
      000B0A 7A                    2819 	ld	a, d
      000B0B 9C                    2820 	sbc	a, h
      000B0C F8 0C                 2821 	ldhl	sp,	#12
      000B0E 32                    2822 	ld	(hl-), a
      000B0F 73                    2823 	ld	(hl), e
      000B10 F8 04                 2824 	ldhl	sp,#4
      000B12 2A                    2825 	ld	a, (hl+)
      000B13 5F                    2826 	ld	e, a
      000B14 56                    2827 	ld	d, (hl)
      000B15 F8 0B                 2828 	ldhl	sp,	#11
      000B17 2A                    2829 	ld	a, (hl+)
      000B18 12                    2830 	ld	(de), a
      000B19 13                    2831 	inc	de
      000B1A 7E                    2832 	ld	a, (hl)
      000B1B 12                    2833 	ld	(de), a
                                   2834 ;main.c:342: enemies[i].y -= yOverflow;
      000B1C F8 04                 2835 	ldhl	sp,#4
      000B1E 2A                    2836 	ld	a, (hl+)
      000B1F 5F                    2837 	ld	e, a
      000B20 56                    2838 	ld	d, (hl)
      000B21 21 02 00              2839 	ld	hl, #0x0002
      000B24 19                    2840 	add	hl, de
      000B25 E5                    2841 	push	hl
      000B26 7D                    2842 	ld	a, l
      000B27 F8 08                 2843 	ldhl	sp,	#8
      000B29 77                    2844 	ld	(hl), a
      000B2A E1                    2845 	pop	hl
      000B2B 7C                    2846 	ld	a, h
      000B2C F8 07                 2847 	ldhl	sp,	#7
      000B2E 32                    2848 	ld	(hl-), a
      000B2F 2A                    2849 	ld	a, (hl+)
      000B30 5F                    2850 	ld	e, a
      000B31 56                    2851 	ld	d, (hl)
      000B32 1A                    2852 	ld	a, (de)
      000B33 4F                    2853 	ld	c, a
      000B34 13                    2854 	inc	de
      000B35 1A                    2855 	ld	a, (de)
      000B36 47                    2856 	ld	b, a
      000B37 79                    2857 	ld	a, c
      000B38 21r53r00              2858 	ld	hl, #_yOverflow
      000B3B 96                    2859 	sub	a, (hl)
      000B3C 23                    2860 	inc	hl
      000B3D 4F                    2861 	ld	c, a
      000B3E 78                    2862 	ld	a, b
      000B3F 9E                    2863 	sbc	a, (hl)
      000B40 47                    2864 	ld	b, a
      000B41 F8 06                 2865 	ldhl	sp,	#6
      000B43 2A                    2866 	ld	a,	(hl+)
      000B44 66                    2867 	ld	h, (hl)
      000B45 6F                    2868 	ld	l, a
      000B46 79                    2869 	ld	a, c
      000B47 22                    2870 	ld	(hl+), a
      000B48 70                    2871 	ld	(hl), b
                                   2872 ;main.c:345: if (enemies[i].x < playerDrawX) {
      000B49 21r4Br00              2873 	ld	hl, #_playerDrawX
      000B4C 4E                    2874 	ld	c, (hl)
      000B4D 06 00                 2875 	ld	b, #0x00
                                   2876 ;main.c:346: enemies[i].xSpeed += enemies[i].accel;
      000B4F F8 04                 2877 	ldhl	sp,#4
      000B51 2A                    2878 	ld	a, (hl+)
      000B52 5F                    2879 	ld	e, a
      000B53 56                    2880 	ld	d, (hl)
      000B54 21 0E 00              2881 	ld	hl, #0x000e
      000B57 19                    2882 	add	hl, de
      000B58 E5                    2883 	push	hl
      000B59 7D                    2884 	ld	a, l
      000B5A F8 0A                 2885 	ldhl	sp,	#10
      000B5C 77                    2886 	ld	(hl), a
      000B5D E1                    2887 	pop	hl
      000B5E 7C                    2888 	ld	a, h
      000B5F F8 09                 2889 	ldhl	sp,	#9
      000B61 77                    2890 	ld	(hl), a
      000B62 F8 04                 2891 	ldhl	sp,#4
      000B64 2A                    2892 	ld	a, (hl+)
      000B65 5F                    2893 	ld	e, a
      000B66 56                    2894 	ld	d, (hl)
      000B67 21 0D 00              2895 	ld	hl, #0x000d
      000B6A 19                    2896 	add	hl, de
      000B6B 33                    2897 	inc	sp
      000B6C 33                    2898 	inc	sp
      000B6D E5                    2899 	push	hl
      000B6E F8 08                 2900 	ldhl	sp,#8
      000B70 2A                    2901 	ld	a, (hl+)
      000B71 5F                    2902 	ld	e, a
      000B72 56                    2903 	ld	d, (hl)
      000B73 1A                    2904 	ld	a, (de)
      000B74 F8 0D                 2905 	ldhl	sp,	#13
      000B76 22                    2906 	ld	(hl+), a
      000B77 D1                    2907 	pop	de
      000B78 D5                    2908 	push	de
      000B79 1A                    2909 	ld	a, (de)
      000B7A 77                    2910 	ld	(hl), a
                                   2911 ;main.c:345: if (enemies[i].x < playerDrawX) {
      000B7B F8 0B                 2912 	ldhl	sp,	#11
      000B7D 2A                    2913 	ld	a, (hl+)
      000B7E 91                    2914 	sub	a, c
      000B7F 7E                    2915 	ld	a, (hl)
      000B80 98                    2916 	sbc	a, b
      000B81 56                    2917 	ld	d, (hl)
      000B82 78                    2918 	ld	a, b
      000B83 CB 7F                 2919 	bit	7,a
      000B85 28 07                 2920 	jr	Z, 00280$
      000B87 CB 7A                 2921 	bit	7, d
      000B89 20 08                 2922 	jr	NZ, 00281$
      000B8B BF                    2923 	cp	a, a
      000B8C 18 05                 2924 	jr	00281$
      000B8E                       2925 00280$:
      000B8E CB 7A                 2926 	bit	7, d
      000B90 28 01                 2927 	jr	Z, 00281$
      000B92 37                    2928 	scf
      000B93                       2929 00281$:
      000B93 30 0D                 2930 	jr	NC, 00104$
                                   2931 ;main.c:346: enemies[i].xSpeed += enemies[i].accel;
      000B95 F8 0E                 2932 	ldhl	sp,	#14
      000B97 3A                    2933 	ld	a, (hl-)
      000B98 86                    2934 	add	a, (hl)
      000B99 4F                    2935 	ld	c, a
      000B9A F8 08                 2936 	ldhl	sp,	#8
      000B9C 2A                    2937 	ld	a,	(hl+)
      000B9D 66                    2938 	ld	h, (hl)
      000B9E 6F                    2939 	ld	l, a
      000B9F 71                    2940 	ld	(hl), c
      000BA0 18 0B                 2941 	jr	00105$
      000BA2                       2942 00104$:
                                   2943 ;main.c:349: enemies[i].xSpeed -= enemies[i].accel;
      000BA2 F8 0D                 2944 	ldhl	sp,	#13
      000BA4 2A                    2945 	ld	a, (hl+)
      000BA5 96                    2946 	sub	a, (hl)
      000BA6 4F                    2947 	ld	c, a
      000BA7 F8 08                 2948 	ldhl	sp,	#8
      000BA9 2A                    2949 	ld	a,	(hl+)
      000BAA 66                    2950 	ld	h, (hl)
      000BAB 6F                    2951 	ld	l, a
      000BAC 71                    2952 	ld	(hl), c
      000BAD                       2953 00105$:
                                   2954 ;main.c:351: if (enemies[i].y < playerDrawY) {
      000BAD F8 06                 2955 	ldhl	sp,#6
      000BAF 2A                    2956 	ld	a, (hl+)
      000BB0 5F                    2957 	ld	e, a
      000BB1 56                    2958 	ld	d, (hl)
      000BB2 1A                    2959 	ld	a, (de)
      000BB3 F8 02                 2960 	ldhl	sp,	#2
      000BB5 22                    2961 	ld	(hl+), a
      000BB6 13                    2962 	inc	de
      000BB7 1A                    2963 	ld	a, (de)
      000BB8 77                    2964 	ld	(hl), a
      000BB9 21r4Cr00              2965 	ld	hl, #_playerDrawY
      000BBC 4E                    2966 	ld	c, (hl)
      000BBD 06 00                 2967 	ld	b, #0x00
                                   2968 ;main.c:352: enemies[i].ySpeed += enemies[i].accel;
      000BBF F8 04                 2969 	ldhl	sp,#4
      000BC1 2A                    2970 	ld	a, (hl+)
      000BC2 5F                    2971 	ld	e, a
      000BC3 56                    2972 	ld	d, (hl)
      000BC4 21 0F 00              2973 	ld	hl, #0x000f
      000BC7 19                    2974 	add	hl, de
      000BC8 E5                    2975 	push	hl
      000BC9 7D                    2976 	ld	a, l
      000BCA F8 0C                 2977 	ldhl	sp,	#12
      000BCC 77                    2978 	ld	(hl), a
      000BCD E1                    2979 	pop	hl
      000BCE 7C                    2980 	ld	a, h
      000BCF F8 0B                 2981 	ldhl	sp,	#11
      000BD1 32                    2982 	ld	(hl-), a
      000BD2 2A                    2983 	ld	a, (hl+)
      000BD3 5F                    2984 	ld	e, a
      000BD4 2A                    2985 	ld	a, (hl+)
      000BD5 23                    2986 	inc	hl
      000BD6 57                    2987 	ld	d, a
      000BD7 1A                    2988 	ld	a, (de)
      000BD8 22                    2989 	ld	(hl+), a
      000BD9 D1                    2990 	pop	de
      000BDA D5                    2991 	push	de
      000BDB 1A                    2992 	ld	a, (de)
      000BDC 77                    2993 	ld	(hl), a
                                   2994 ;main.c:351: if (enemies[i].y < playerDrawY) {
      000BDD F8 02                 2995 	ldhl	sp,	#2
      000BDF 2A                    2996 	ld	a, (hl+)
      000BE0 91                    2997 	sub	a, c
      000BE1 7E                    2998 	ld	a, (hl)
      000BE2 98                    2999 	sbc	a, b
      000BE3 56                    3000 	ld	d, (hl)
      000BE4 78                    3001 	ld	a, b
      000BE5 CB 7F                 3002 	bit	7,a
      000BE7 28 07                 3003 	jr	Z, 00282$
      000BE9 CB 7A                 3004 	bit	7, d
      000BEB 20 08                 3005 	jr	NZ, 00283$
      000BED BF                    3006 	cp	a, a
      000BEE 18 05                 3007 	jr	00283$
      000BF0                       3008 00282$:
      000BF0 CB 7A                 3009 	bit	7, d
      000BF2 28 01                 3010 	jr	Z, 00283$
      000BF4 37                    3011 	scf
      000BF5                       3012 00283$:
      000BF5 30 0D                 3013 	jr	NC, 00107$
                                   3014 ;main.c:352: enemies[i].ySpeed += enemies[i].accel;
      000BF7 F8 0E                 3015 	ldhl	sp,	#14
      000BF9 3A                    3016 	ld	a, (hl-)
      000BFA 86                    3017 	add	a, (hl)
      000BFB 4F                    3018 	ld	c, a
      000BFC F8 0A                 3019 	ldhl	sp,	#10
      000BFE 2A                    3020 	ld	a,	(hl+)
      000BFF 66                    3021 	ld	h, (hl)
      000C00 6F                    3022 	ld	l, a
      000C01 71                    3023 	ld	(hl), c
      000C02 18 0B                 3024 	jr	00108$
      000C04                       3025 00107$:
                                   3026 ;main.c:355: enemies[i].ySpeed -= enemies[i].accel;
      000C04 F8 0D                 3027 	ldhl	sp,	#13
      000C06 2A                    3028 	ld	a, (hl+)
      000C07 96                    3029 	sub	a, (hl)
      000C08 4F                    3030 	ld	c, a
      000C09 F8 0A                 3031 	ldhl	sp,	#10
      000C0B 2A                    3032 	ld	a,	(hl+)
      000C0C 66                    3033 	ld	h, (hl)
      000C0D 6F                    3034 	ld	l, a
      000C0E 71                    3035 	ld	(hl), c
      000C0F                       3036 00108$:
                                   3037 ;main.c:358: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000C0F F8 04                 3038 	ldhl	sp,#4
      000C11 2A                    3039 	ld	a, (hl+)
      000C12 5F                    3040 	ld	e, a
      000C13 56                    3041 	ld	d, (hl)
      000C14 21 0C 00              3042 	ld	hl, #0x000c
      000C17 19                    3043 	add	hl, de
      000C18 4D                    3044 	ld	c, l
      000C19 44                    3045 	ld	b, h
      000C1A 0A                    3046 	ld	a, (bc)
      000C1B 5F                    3047 	ld	e, a
      000C1C F8 0C                 3048 	ldhl	sp,	#12
      000C1E 7B                    3049 	ld	a, e
      000C1F 22                    3050 	ld	(hl+), a
      000C20 AF                    3051 	xor	a, a
      000C21 93                    3052 	sub	a, e
      000C22 77                    3053 	ld	(hl), a
      000C23 F8 08                 3054 	ldhl	sp,#8
      000C25 2A                    3055 	ld	a, (hl+)
      000C26 5F                    3056 	ld	e, a
      000C27 56                    3057 	ld	d, (hl)
      000C28 1A                    3058 	ld	a, (de)
      000C29 F8 0E                 3059 	ldhl	sp,	#14
                                   3060 ;main.c:275: return (value < min) ? min : (value > max) ? max : value;
      000C2B 32                    3061 	ld	(hl-), a
      000C2C 2A                    3062 	ld	a, (hl+)
      000C2D 5F                    3063 	ld	e, a
      000C2E 56                    3064 	ld	d, (hl)
      000C2F 3A                    3065 	ld	a, (hl-)
      000C30 96                    3066 	sub	a, (hl)
      000C31 CB 7B                 3067 	bit	7, e
      000C33 28 07                 3068 	jr	Z, 00284$
      000C35 CB 7A                 3069 	bit	7, d
      000C37 20 08                 3070 	jr	NZ, 00285$
      000C39 BF                    3071 	cp	a, a
      000C3A 18 05                 3072 	jr	00285$
      000C3C                       3073 00284$:
      000C3C CB 7A                 3074 	bit	7, d
      000C3E 28 01                 3075 	jr	Z, 00285$
      000C40 37                    3076 	scf
      000C41                       3077 00285$:
      000C41 30 05                 3078 	jr	NC, 00149$
      000C43 F8 0D                 3079 	ldhl	sp,	#13
      000C45 7E                    3080 	ld	a, (hl)
      000C46 18 23                 3081 	jr	00150$
      000C48                       3082 00149$:
      000C48 F8 0E                 3083 	ldhl	sp,	#14
      000C4A 3A                    3084 	ld	a, (hl-)
      000C4B 2B                    3085 	dec	hl
      000C4C 5F                    3086 	ld	e, a
      000C4D 56                    3087 	ld	d, (hl)
      000C4E 2A                    3088 	ld	a, (hl+)
      000C4F 23                    3089 	inc	hl
      000C50 96                    3090 	sub	a, (hl)
      000C51 CB 7B                 3091 	bit	7, e
      000C53 28 07                 3092 	jr	Z, 00286$
      000C55 CB 7A                 3093 	bit	7, d
      000C57 20 08                 3094 	jr	NZ, 00287$
      000C59 BF                    3095 	cp	a, a
      000C5A 18 05                 3096 	jr	00287$
      000C5C                       3097 00286$:
      000C5C CB 7A                 3098 	bit	7, d
      000C5E 28 01                 3099 	jr	Z, 00287$
      000C60 37                    3100 	scf
      000C61                       3101 00287$:
      000C61 30 05                 3102 	jr	NC, 00151$
      000C63 F8 0C                 3103 	ldhl	sp,	#12
      000C65 7E                    3104 	ld	a, (hl)
      000C66 18 03                 3105 	jr	00152$
      000C68                       3106 00151$:
      000C68 F8 0E                 3107 	ldhl	sp,	#14
      000C6A 7E                    3108 	ld	a, (hl)
      000C6B                       3109 00152$:
      000C6B                       3110 00150$:
                                   3111 ;main.c:358: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000C6B F8 08                 3112 	ldhl	sp,	#8
      000C6D F5                    3113 	push	af
      000C6E 2A                    3114 	ld	a,	(hl+)
      000C6F 66                    3115 	ld	h, (hl)
      000C70 6F                    3116 	ld	l, a
      000C71 F1                    3117 	pop	af
      000C72 77                    3118 	ld	(hl), a
                                   3119 ;main.c:359: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000C73 0A                    3120 	ld	a, (bc)
      000C74 47                    3121 	ld	b, a
      000C75 48                    3122 	ld	c, b
      000C76 AF                    3123 	xor	a, a
      000C77 90                    3124 	sub	a, b
      000C78 47                    3125 	ld	b, a
      000C79 F8 0A                 3126 	ldhl	sp,#10
      000C7B 2A                    3127 	ld	a, (hl+)
      000C7C 5F                    3128 	ld	e, a
      000C7D 56                    3129 	ld	d, (hl)
      000C7E 1A                    3130 	ld	a, (de)
      000C7F 6F                    3131 	ld	l, a
                                   3132 ;	spillPairReg hl
                                   3133 ;	spillPairReg hl
                                   3134 ;main.c:275: return (value < min) ? min : (value > max) ? max : value;
      000C80 58                    3135 	ld	e, b
      000C81 7D                    3136 	ld	a,l
      000C82 57                    3137 	ld	d,a
      000C83 90                    3138 	sub	a, b
      000C84 CB 7B                 3139 	bit	7, e
      000C86 28 07                 3140 	jr	Z, 00288$
      000C88 CB 7A                 3141 	bit	7, d
      000C8A 20 08                 3142 	jr	NZ, 00289$
      000C8C BF                    3143 	cp	a, a
      000C8D 18 05                 3144 	jr	00289$
      000C8F                       3145 00288$:
      000C8F CB 7A                 3146 	bit	7, d
      000C91 28 01                 3147 	jr	Z, 00289$
      000C93 37                    3148 	scf
      000C94                       3149 00289$:
      000C94 30 03                 3150 	jr	NC, 00153$
      000C96 48                    3151 	ld	c, b
      000C97 18 17                 3152 	jr	00154$
      000C99                       3153 00153$:
      000C99 5D                    3154 	ld	e, l
      000C9A 79                    3155 	ld	a,c
      000C9B 57                    3156 	ld	d,a
      000C9C 95                    3157 	sub	a, l
      000C9D CB 7B                 3158 	bit	7, e
      000C9F 28 07                 3159 	jr	Z, 00290$
      000CA1 CB 7A                 3160 	bit	7, d
      000CA3 20 08                 3161 	jr	NZ, 00291$
      000CA5 BF                    3162 	cp	a, a
      000CA6 18 05                 3163 	jr	00291$
      000CA8                       3164 00290$:
      000CA8 CB 7A                 3165 	bit	7, d
      000CAA 28 01                 3166 	jr	Z, 00291$
      000CAC 37                    3167 	scf
      000CAD                       3168 00291$:
      000CAD 38 01                 3169 	jr	C, 00156$
      000CAF 4D                    3170 	ld	c, l
      000CB0                       3171 00156$:
      000CB0                       3172 00154$:
                                   3173 ;main.c:359: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      000CB0 F8 0A                 3174 	ldhl	sp,	#10
      000CB2 2A                    3175 	ld	a,	(hl+)
      000CB3 66                    3176 	ld	h, (hl)
      000CB4 6F                    3177 	ld	l, a
      000CB5 71                    3178 	ld	(hl), c
                                   3179 ;main.c:362: enemies[i].xReserve += enemies[i].xSpeed;
      000CB6 F8 04                 3180 	ldhl	sp,#4
      000CB8 2A                    3181 	ld	a, (hl+)
      000CB9 5F                    3182 	ld	e, a
      000CBA 56                    3183 	ld	d, (hl)
      000CBB 21 04 00              3184 	ld	hl, #0x0004
      000CBE 19                    3185 	add	hl, de
      000CBF E5                    3186 	push	hl
      000CC0 7D                    3187 	ld	a, l
      000CC1 F8 0F                 3188 	ldhl	sp,	#15
      000CC3 77                    3189 	ld	(hl), a
      000CC4 E1                    3190 	pop	hl
      000CC5 7C                    3191 	ld	a, h
      000CC6 F8 0E                 3192 	ldhl	sp,	#14
      000CC8 32                    3193 	ld	(hl-), a
      000CC9 2A                    3194 	ld	a, (hl+)
      000CCA 5F                    3195 	ld	e, a
      000CCB 56                    3196 	ld	d, (hl)
      000CCC 1A                    3197 	ld	a, (de)
      000CCD 47                    3198 	ld	b, a
      000CCE F8 08                 3199 	ldhl	sp,#8
      000CD0 2A                    3200 	ld	a, (hl+)
      000CD1 5F                    3201 	ld	e, a
      000CD2 56                    3202 	ld	d, (hl)
      000CD3 1A                    3203 	ld	a, (de)
      000CD4 80                    3204 	add	a, b
      000CD5 47                    3205 	ld	b, a
      000CD6 F8 0D                 3206 	ldhl	sp,	#13
      000CD8 2A                    3207 	ld	a,	(hl+)
      000CD9 66                    3208 	ld	h, (hl)
      000CDA 6F                    3209 	ld	l, a
      000CDB 70                    3210 	ld	(hl), b
                                   3211 ;main.c:363: enemies[i].yReserve += enemies[i].ySpeed;
      000CDC F8 04                 3212 	ldhl	sp,#4
      000CDE 2A                    3213 	ld	a, (hl+)
      000CDF 5F                    3214 	ld	e, a
      000CE0 56                    3215 	ld	d, (hl)
      000CE1 21 05 00              3216 	ld	hl, #0x0005
      000CE4 19                    3217 	add	hl, de
      000CE5 E5                    3218 	push	hl
      000CE6 7D                    3219 	ld	a, l
      000CE7 F8 0C                 3220 	ldhl	sp,	#12
      000CE9 77                    3221 	ld	(hl), a
      000CEA E1                    3222 	pop	hl
      000CEB 7C                    3223 	ld	a, h
      000CEC F8 0B                 3224 	ldhl	sp,	#11
      000CEE 32                    3225 	ld	(hl-), a
      000CEF 2A                    3226 	ld	a, (hl+)
      000CF0 5F                    3227 	ld	e, a
      000CF1 56                    3228 	ld	d, (hl)
      000CF2 1A                    3229 	ld	a, (de)
      000CF3 81                    3230 	add	a, c
      000CF4 4F                    3231 	ld	c, a
      000CF5 3A                    3232 	ld	a, (hl-)
      000CF6 6E                    3233 	ld	l, (hl)
      000CF7 67                    3234 	ld	h, a
      000CF8 71                    3235 	ld	(hl), c
                                   3236 ;main.c:367: if (enemies[i].xReserve >> 3 > 0) {
      000CF9 F8 0D                 3237 	ldhl	sp,#13
      000CFB 2A                    3238 	ld	a, (hl+)
      000CFC 5F                    3239 	ld	e, a
      000CFD 56                    3240 	ld	d, (hl)
      000CFE 1A                    3241 	ld	a, (de)
      000CFF 4F                    3242 	ld	c, a
      000D00 CB 28                 3243 	sra	b
      000D02 CB 28                 3244 	sra	b
      000D04 CB 28                 3245 	sra	b
      000D06 58                    3246 	ld	e, b
      000D07 AF                    3247 	xor	a, a
      000D08 57                    3248 	ld	d, a
      000D09 90                    3249 	sub	a, b
      000D0A CB 7B                 3250 	bit	7, e
      000D0C 28 07                 3251 	jr	Z, 00292$
      000D0E CB 7A                 3252 	bit	7, d
      000D10 20 08                 3253 	jr	NZ, 00293$
      000D12 BF                    3254 	cp	a, a
      000D13 18 05                 3255 	jr	00293$
      000D15                       3256 00292$:
      000D15 CB 7A                 3257 	bit	7, d
      000D17 28 01                 3258 	jr	Z, 00293$
      000D19 37                    3259 	scf
      000D1A                       3260 00293$:
      000D1A 30 3F                 3261 	jr	NC, 00112$
                                   3262 ;main.c:368: int8_t xMovement = enemies[i].xReserve >> 3;
      000D1C 79                    3263 	ld	a, c
      000D1D CB 2F                 3264 	sra	a
      000D1F CB 2F                 3265 	sra	a
      000D21 CB 2F                 3266 	sra	a
      000D23 F8 0C                 3267 	ldhl	sp,	#12
      000D25 77                    3268 	ld	(hl), a
                                   3269 ;main.c:369: enemies[i].x += xMovement;
      000D26 F8 04                 3270 	ldhl	sp,#4
      000D28 2A                    3271 	ld	a, (hl+)
      000D29 5F                    3272 	ld	e, a
      000D2A 56                    3273 	ld	d, (hl)
      000D2B 1A                    3274 	ld	a, (de)
      000D2C 4F                    3275 	ld	c, a
      000D2D 13                    3276 	inc	de
      000D2E 1A                    3277 	ld	a, (de)
      000D2F 47                    3278 	ld	b, a
      000D30 F8 0C                 3279 	ldhl	sp,	#12
      000D32 7E                    3280 	ld	a, (hl)
      000D33 5F                    3281 	ld	e, a
      000D34 07                    3282 	rlca
      000D35 9F                    3283 	sbc	a, a
      000D36 57                    3284 	ld	d, a
      000D37 69                    3285 	ld	l, c
                                   3286 ;	spillPairReg hl
                                   3287 ;	spillPairReg hl
      000D38 60                    3288 	ld	h, b
                                   3289 ;	spillPairReg hl
                                   3290 ;	spillPairReg hl
      000D39 19                    3291 	add	hl, de
      000D3A 4D                    3292 	ld	c, l
      000D3B 44                    3293 	ld	b, h
      000D3C F8 04                 3294 	ldhl	sp,	#4
      000D3E 2A                    3295 	ld	a,	(hl+)
      000D3F 66                    3296 	ld	h, (hl)
      000D40 6F                    3297 	ld	l, a
      000D41 79                    3298 	ld	a, c
      000D42 22                    3299 	ld	(hl+), a
      000D43 70                    3300 	ld	(hl), b
                                   3301 ;main.c:370: enemies[i].xReserve -=  xMovement << 3;
      000D44 F8 0D                 3302 	ldhl	sp,#13
      000D46 2A                    3303 	ld	a, (hl+)
      000D47 5F                    3304 	ld	e, a
      000D48 3A                    3305 	ld	a, (hl-)
      000D49 2B                    3306 	dec	hl
      000D4A 57                    3307 	ld	d, a
      000D4B 1A                    3308 	ld	a, (de)
      000D4C F5                    3309 	push	af
      000D4D 2A                    3310 	ld	a, (hl+)
      000D4E 87                    3311 	add	a, a
      000D4F 87                    3312 	add	a, a
      000D50 87                    3313 	add	a, a
      000D51 4F                    3314 	ld	c, a
      000D52 F1                    3315 	pop	af
      000D53 91                    3316 	sub	a, c
      000D54 4F                    3317 	ld	c, a
      000D55 2A                    3318 	ld	a,	(hl+)
      000D56 66                    3319 	ld	h, (hl)
      000D57 6F                    3320 	ld	l, a
      000D58 71                    3321 	ld	(hl), c
      000D59 18 66                 3322 	jr	00113$
      000D5B                       3323 00112$:
                                   3324 ;main.c:373: else if ((-enemies[i].xReserve) >> 3 > 0){
      000D5B 79                    3325 	ld	a, c
      000D5C 07                    3326 	rlca
      000D5D 9F                    3327 	sbc	a, a
      000D5E 47                    3328 	ld	b, a
      000D5F AF                    3329 	xor	a, a
      000D60 91                    3330 	sub	a, c
      000D61 4F                    3331 	ld	c, a
      000D62 9F                    3332 	sbc	a, a
      000D63 90                    3333 	sub	a, b
      000D64 47                    3334 	ld	b, a
      000D65 CB 28                 3335 	sra	b
      000D67 CB 19                 3336 	rr	c
      000D69 CB 28                 3337 	sra	b
      000D6B CB 19                 3338 	rr	c
      000D6D CB 28                 3339 	sra	b
      000D6F CB 19                 3340 	rr	c
      000D71 58                    3341 	ld	e, b
      000D72 AF                    3342 	xor	a, a
      000D73 57                    3343 	ld	d, a
      000D74 B9                    3344 	cp	a, c
      000D75 98                    3345 	sbc	a, b
      000D76 CB 7B                 3346 	bit	7, e
      000D78 28 07                 3347 	jr	Z, 00294$
      000D7A CB 7A                 3348 	bit	7, d
      000D7C 20 08                 3349 	jr	NZ, 00295$
      000D7E BF                    3350 	cp	a, a
      000D7F 18 05                 3351 	jr	00295$
      000D81                       3352 00294$:
      000D81 CB 7A                 3353 	bit	7, d
      000D83 28 01                 3354 	jr	Z, 00295$
      000D85 37                    3355 	scf
      000D86                       3356 00295$:
      000D86 30 39                 3357 	jr	NC, 00113$
                                   3358 ;main.c:374: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      000D88 AF                    3359 	xor	a, a
      000D89 91                    3360 	sub	a, c
      000D8A 4F                    3361 	ld	c, a
      000D8B F8 0C                 3362 	ldhl	sp,	#12
      000D8D 71                    3363 	ld	(hl), c
                                   3364 ;main.c:375: enemies[i].x += xMovement;
      000D8E F8 04                 3365 	ldhl	sp,#4
      000D90 2A                    3366 	ld	a, (hl+)
      000D91 5F                    3367 	ld	e, a
      000D92 56                    3368 	ld	d, (hl)
      000D93 1A                    3369 	ld	a, (de)
      000D94 4F                    3370 	ld	c, a
      000D95 13                    3371 	inc	de
      000D96 1A                    3372 	ld	a, (de)
      000D97 47                    3373 	ld	b, a
      000D98 F8 0C                 3374 	ldhl	sp,	#12
      000D9A 7E                    3375 	ld	a, (hl)
      000D9B 5F                    3376 	ld	e, a
      000D9C 07                    3377 	rlca
      000D9D 9F                    3378 	sbc	a, a
      000D9E 57                    3379 	ld	d, a
      000D9F 69                    3380 	ld	l, c
                                   3381 ;	spillPairReg hl
                                   3382 ;	spillPairReg hl
      000DA0 60                    3383 	ld	h, b
                                   3384 ;	spillPairReg hl
                                   3385 ;	spillPairReg hl
      000DA1 19                    3386 	add	hl, de
      000DA2 4D                    3387 	ld	c, l
      000DA3 44                    3388 	ld	b, h
      000DA4 F8 04                 3389 	ldhl	sp,	#4
      000DA6 2A                    3390 	ld	a,	(hl+)
      000DA7 66                    3391 	ld	h, (hl)
      000DA8 6F                    3392 	ld	l, a
      000DA9 79                    3393 	ld	a, c
      000DAA 22                    3394 	ld	(hl+), a
      000DAB 70                    3395 	ld	(hl), b
                                   3396 ;main.c:376: enemies[i].xReserve +=  (-xMovement) << 3;
      000DAC F8 0D                 3397 	ldhl	sp,#13
      000DAE 2A                    3398 	ld	a, (hl+)
      000DAF 5F                    3399 	ld	e, a
      000DB0 3A                    3400 	ld	a, (hl-)
      000DB1 2B                    3401 	dec	hl
      000DB2 57                    3402 	ld	d, a
      000DB3 1A                    3403 	ld	a, (de)
      000DB4 4F                    3404 	ld	c, a
      000DB5 AF                    3405 	xor	a, a
      000DB6 96                    3406 	sub	a, (hl)
      000DB7 23                    3407 	inc	hl
      000DB8 87                    3408 	add	a, a
      000DB9 87                    3409 	add	a, a
      000DBA 87                    3410 	add	a, a
      000DBB 81                    3411 	add	a, c
      000DBC 4F                    3412 	ld	c, a
      000DBD 2A                    3413 	ld	a,	(hl+)
      000DBE 66                    3414 	ld	h, (hl)
      000DBF 6F                    3415 	ld	l, a
      000DC0 71                    3416 	ld	(hl), c
      000DC1                       3417 00113$:
                                   3418 ;main.c:363: enemies[i].yReserve += enemies[i].ySpeed;
      000DC1 F8 0A                 3419 	ldhl	sp,#10
      000DC3 2A                    3420 	ld	a, (hl+)
      000DC4 5F                    3421 	ld	e, a
      000DC5 56                    3422 	ld	d, (hl)
      000DC6 1A                    3423 	ld	a, (de)
      000DC7 4F                    3424 	ld	c, a
                                   3425 ;main.c:379: if (enemies[i].yReserve >> 3 > 0) {
      000DC8 41                    3426 	ld	b, c
      000DC9 CB 28                 3427 	sra	b
      000DCB CB 28                 3428 	sra	b
      000DCD CB 28                 3429 	sra	b
      000DCF 58                    3430 	ld	e, b
      000DD0 AF                    3431 	xor	a, a
      000DD1 57                    3432 	ld	d, a
      000DD2 90                    3433 	sub	a, b
      000DD3 CB 7B                 3434 	bit	7, e
      000DD5 28 07                 3435 	jr	Z, 00296$
      000DD7 CB 7A                 3436 	bit	7, d
      000DD9 20 08                 3437 	jr	NZ, 00297$
      000DDB BF                    3438 	cp	a, a
      000DDC 18 05                 3439 	jr	00297$
      000DDE                       3440 00296$:
      000DDE CB 7A                 3441 	bit	7, d
      000DE0 28 01                 3442 	jr	Z, 00297$
      000DE2 37                    3443 	scf
      000DE3                       3444 00297$:
      000DE3 30 3A                 3445 	jr	NC, 00117$
                                   3446 ;main.c:380: int8_t yMovement = enemies[i].yReserve >> 3;
      000DE5 F8 0E                 3447 	ldhl	sp,	#14
      000DE7 70                    3448 	ld	(hl), b
                                   3449 ;main.c:381: enemies[i].y += yMovement;
      000DE8 F8 06                 3450 	ldhl	sp,#6
      000DEA 2A                    3451 	ld	a, (hl+)
      000DEB 5F                    3452 	ld	e, a
      000DEC 56                    3453 	ld	d, (hl)
      000DED 1A                    3454 	ld	a, (de)
      000DEE 4F                    3455 	ld	c, a
      000DEF 13                    3456 	inc	de
      000DF0 1A                    3457 	ld	a, (de)
      000DF1 47                    3458 	ld	b, a
      000DF2 F8 0E                 3459 	ldhl	sp,	#14
      000DF4 7E                    3460 	ld	a, (hl)
      000DF5 5F                    3461 	ld	e, a
      000DF6 07                    3462 	rlca
      000DF7 9F                    3463 	sbc	a, a
      000DF8 57                    3464 	ld	d, a
      000DF9 69                    3465 	ld	l, c
                                   3466 ;	spillPairReg hl
                                   3467 ;	spillPairReg hl
      000DFA 60                    3468 	ld	h, b
                                   3469 ;	spillPairReg hl
                                   3470 ;	spillPairReg hl
      000DFB 19                    3471 	add	hl, de
      000DFC 4D                    3472 	ld	c, l
      000DFD 44                    3473 	ld	b, h
      000DFE F8 06                 3474 	ldhl	sp,	#6
      000E00 2A                    3475 	ld	a,	(hl+)
      000E01 66                    3476 	ld	h, (hl)
      000E02 6F                    3477 	ld	l, a
      000E03 79                    3478 	ld	a, c
      000E04 22                    3479 	ld	(hl+), a
      000E05 70                    3480 	ld	(hl), b
                                   3481 ;main.c:382: enemies[i].yReserve -=  yMovement << 3;
      000E06 F8 0A                 3482 	ldhl	sp,#10
      000E08 2A                    3483 	ld	a, (hl+)
      000E09 5F                    3484 	ld	e, a
      000E0A 56                    3485 	ld	d, (hl)
      000E0B 1A                    3486 	ld	a, (de)
      000E0C F5                    3487 	push	af
      000E0D F8 10                 3488 	ldhl	sp,	#16
      000E0F 7E                    3489 	ld	a, (hl)
      000E10 87                    3490 	add	a, a
      000E11 87                    3491 	add	a, a
      000E12 87                    3492 	add	a, a
      000E13 4F                    3493 	ld	c, a
      000E14 F1                    3494 	pop	af
      000E15 91                    3495 	sub	a, c
      000E16 4F                    3496 	ld	c, a
      000E17 F8 0A                 3497 	ldhl	sp,	#10
      000E19 2A                    3498 	ld	a,	(hl+)
      000E1A 66                    3499 	ld	h, (hl)
      000E1B 6F                    3500 	ld	l, a
      000E1C 71                    3501 	ld	(hl), c
      000E1D 18 67                 3502 	jr	00119$
      000E1F                       3503 00117$:
                                   3504 ;main.c:384: else if ((-enemies[i].yReserve) >> 3 > 0){
      000E1F 79                    3505 	ld	a, c
      000E20 07                    3506 	rlca
      000E21 9F                    3507 	sbc	a, a
      000E22 47                    3508 	ld	b, a
      000E23 AF                    3509 	xor	a, a
      000E24 91                    3510 	sub	a, c
      000E25 4F                    3511 	ld	c, a
      000E26 9F                    3512 	sbc	a, a
      000E27 90                    3513 	sub	a, b
      000E28 47                    3514 	ld	b, a
      000E29 CB 28                 3515 	sra	b
      000E2B CB 19                 3516 	rr	c
      000E2D CB 28                 3517 	sra	b
      000E2F CB 19                 3518 	rr	c
      000E31 CB 28                 3519 	sra	b
      000E33 CB 19                 3520 	rr	c
      000E35 58                    3521 	ld	e, b
      000E36 AF                    3522 	xor	a, a
      000E37 57                    3523 	ld	d, a
      000E38 B9                    3524 	cp	a, c
      000E39 98                    3525 	sbc	a, b
      000E3A CB 7B                 3526 	bit	7, e
      000E3C 28 07                 3527 	jr	Z, 00298$
      000E3E CB 7A                 3528 	bit	7, d
      000E40 20 08                 3529 	jr	NZ, 00299$
      000E42 BF                    3530 	cp	a, a
      000E43 18 05                 3531 	jr	00299$
      000E45                       3532 00298$:
      000E45 CB 7A                 3533 	bit	7, d
      000E47 28 01                 3534 	jr	Z, 00299$
      000E49 37                    3535 	scf
      000E4A                       3536 00299$:
      000E4A 30 3A                 3537 	jr	NC, 00119$
                                   3538 ;main.c:385: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      000E4C AF                    3539 	xor	a, a
      000E4D 91                    3540 	sub	a, c
      000E4E 4F                    3541 	ld	c, a
      000E4F F8 0E                 3542 	ldhl	sp,	#14
      000E51 71                    3543 	ld	(hl), c
                                   3544 ;main.c:386: enemies[i].y += yMovement;
      000E52 F8 06                 3545 	ldhl	sp,#6
      000E54 2A                    3546 	ld	a, (hl+)
      000E55 5F                    3547 	ld	e, a
      000E56 56                    3548 	ld	d, (hl)
      000E57 1A                    3549 	ld	a, (de)
      000E58 4F                    3550 	ld	c, a
      000E59 13                    3551 	inc	de
      000E5A 1A                    3552 	ld	a, (de)
      000E5B 47                    3553 	ld	b, a
      000E5C F8 0E                 3554 	ldhl	sp,	#14
      000E5E 7E                    3555 	ld	a, (hl)
      000E5F 5F                    3556 	ld	e, a
      000E60 07                    3557 	rlca
      000E61 9F                    3558 	sbc	a, a
      000E62 57                    3559 	ld	d, a
      000E63 69                    3560 	ld	l, c
      000E64 60                    3561 	ld	h, b
      000E65 19                    3562 	add	hl, de
      000E66 4D                    3563 	ld	c, l
      000E67 44                    3564 	ld	b, h
      000E68 F8 06                 3565 	ldhl	sp,	#6
      000E6A 2A                    3566 	ld	a,	(hl+)
      000E6B 66                    3567 	ld	h, (hl)
      000E6C 6F                    3568 	ld	l, a
      000E6D 79                    3569 	ld	a, c
      000E6E 22                    3570 	ld	(hl+), a
      000E6F 70                    3571 	ld	(hl), b
                                   3572 ;main.c:387: enemies[i].yReserve +=  (-yMovement) << 3;
      000E70 F8 0A                 3573 	ldhl	sp,#10
      000E72 2A                    3574 	ld	a, (hl+)
      000E73 5F                    3575 	ld	e, a
      000E74 56                    3576 	ld	d, (hl)
      000E75 1A                    3577 	ld	a, (de)
      000E76 4F                    3578 	ld	c, a
      000E77 AF                    3579 	xor	a, a
      000E78 F8 0E                 3580 	ldhl	sp,	#14
      000E7A 96                    3581 	sub	a, (hl)
      000E7B 87                    3582 	add	a, a
      000E7C 87                    3583 	add	a, a
      000E7D 87                    3584 	add	a, a
      000E7E 81                    3585 	add	a, c
      000E7F 4F                    3586 	ld	c, a
      000E80 F8 0A                 3587 	ldhl	sp,	#10
      000E82 2A                    3588 	ld	a,	(hl+)
      000E83 66                    3589 	ld	h, (hl)
      000E84 6F                    3590 	ld	l, a
      000E85 71                    3591 	ld	(hl), c
      000E86                       3592 00119$:
                                   3593 ;main.c:337: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E86 F8 0F                 3594 	ldhl	sp,	#15
      000E88 34                    3595 	inc	(hl)
      000E89 C3rB9r0A              3596 	jp	00143$
      000E8C                       3597 00120$:
                                   3598 ;main.c:398: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E8C F8 0F                 3599 	ldhl	sp,	#15
      000E8E 36 00                 3600 	ld	(hl), #0x00
      000E90                       3601 00145$:
      000E90 21rBCr06              3602 	ld	hl, #_ENEMYCOUNT
      000E93 4E                    3603 	ld	c, (hl)
      000E94 F8 0F                 3604 	ldhl	sp,	#15
      000E96 7E                    3605 	ld	a, (hl)
      000E97 91                    3606 	sub	a, c
      000E98 D2r07r10              3607 	jp	NC, 00147$
                                   3608 ;main.c:400: if (enemies[i].alive) {
      000E9B 7E                    3609 	ld	a, (hl)
      000E9C 16 00                 3610 	ld	d, #0x00
      000E9E 87                    3611 	add	a, a
      000E9F CB 12                 3612 	rl	d
      000EA1 87                    3613 	add	a, a
      000EA2 CB 12                 3614 	rl	d
      000EA4 87                    3615 	add	a, a
      000EA5 CB 12                 3616 	rl	d
      000EA7 87                    3617 	add	a, a
      000EA8 CB 12                 3618 	rl	d
      000EAA 5F                    3619 	ld	e, a
      000EAB 21r00r00              3620 	ld	hl, #_enemies
      000EAE 19                    3621 	add	hl, de
      000EAF E5                    3622 	push	hl
      000EB0 7D                    3623 	ld	a, l
      000EB1 F8 09                 3624 	ldhl	sp,	#9
      000EB3 77                    3625 	ld	(hl), a
      000EB4 E1                    3626 	pop	hl
      000EB5 7C                    3627 	ld	a, h
      000EB6 F8 08                 3628 	ldhl	sp,	#8
      000EB8 32                    3629 	ld	(hl-), a
      000EB9 2A                    3630 	ld	a, (hl+)
      000EBA 5F                    3631 	ld	e, a
      000EBB 56                    3632 	ld	d, (hl)
      000EBC 21 09 00              3633 	ld	hl, #0x0009
      000EBF 19                    3634 	add	hl, de
      000EC0 4D                    3635 	ld	c, l
      000EC1 44                    3636 	ld	b, h
      000EC2 0A                    3637 	ld	a, (bc)
      000EC3 F8 0E                 3638 	ldhl	sp,	#14
      000EC5 77                    3639 	ld	(hl), a
      000EC6 7E                    3640 	ld	a, (hl)
      000EC7 B7                    3641 	or	a, a
      000EC8 CArD7r0F              3642 	jp	Z, 00135$
                                   3643 ;main.c:401: if (enemies[i].visible == 1) {
      000ECB F8 07                 3644 	ldhl	sp,#7
      000ECD 2A                    3645 	ld	a, (hl+)
      000ECE 5F                    3646 	ld	e, a
      000ECF 56                    3647 	ld	d, (hl)
      000ED0 21 0A 00              3648 	ld	hl, #0x000a
      000ED3 19                    3649 	add	hl, de
      000ED4 E5                    3650 	push	hl
      000ED5 7D                    3651 	ld	a, l
      000ED6 F8 0B                 3652 	ldhl	sp,	#11
      000ED8 77                    3653 	ld	(hl), a
      000ED9 E1                    3654 	pop	hl
      000EDA 7C                    3655 	ld	a, h
      000EDB F8 0A                 3656 	ldhl	sp,	#10
      000EDD 32                    3657 	ld	(hl-), a
      000EDE 2A                    3658 	ld	a, (hl+)
      000EDF 5F                    3659 	ld	e, a
      000EE0 2A                    3660 	ld	a, (hl+)
      000EE1 57                    3661 	ld	d, a
      000EE2 1A                    3662 	ld	a, (de)
      000EE3 77                    3663 	ld	(hl), a
                                   3664 ;main.c:402: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000EE4 F8 07                 3665 	ldhl	sp,#7
      000EE6 2A                    3666 	ld	a, (hl+)
      000EE7 5F                    3667 	ld	e, a
      000EE8 56                    3668 	ld	d, (hl)
      000EE9 1A                    3669 	ld	a, (de)
      000EEA F8 05                 3670 	ldhl	sp,	#5
      000EEC 22                    3671 	ld	(hl+), a
      000EED 13                    3672 	inc	de
      000EEE 1A                    3673 	ld	a, (de)
      000EEF 22                    3674 	ld	(hl+), a
      000EF0 2A                    3675 	ld	a, (hl+)
      000EF1 5F                    3676 	ld	e, a
      000EF2 56                    3677 	ld	d, (hl)
      000EF3 21 02 00              3678 	ld	hl, #0x0002
      000EF6 19                    3679 	add	hl, de
      000EF7 E5                    3680 	push	hl
      000EF8 7D                    3681 	ld	a, l
      000EF9 F8 0E                 3682 	ldhl	sp,	#14
      000EFB 77                    3683 	ld	(hl), a
      000EFC E1                    3684 	pop	hl
      000EFD 7C                    3685 	ld	a, h
      000EFE F8 0D                 3686 	ldhl	sp,	#13
                                   3687 ;main.c:404: set_sprite_tile(10+i, 0x7f);
      000F00 22                    3688 	ld	(hl+), a
      000F01 23                    3689 	inc	hl
      000F02 7E                    3690 	ld	a, (hl)
                                   3691 ;main.c:402: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000F03 F8 05                 3692 	ldhl	sp,	#5
      000F05 4E                    3693 	ld	c, (hl)
      000F06 23                    3694 	inc	hl
      000F07 46                    3695 	ld	b, (hl)
                                   3696 ;main.c:404: set_sprite_tile(10+i, 0x7f);
      000F08 C6 0A                 3697 	add	a, #0x0a
      000F0A F8 0E                 3698 	ldhl	sp,	#14
      000F0C 77                    3699 	ld	(hl), a
                                   3700 ;main.c:402: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000F0D 78                    3701 	ld	a, b
      000F0E 07                    3702 	rlca
      000F0F E6 01                 3703 	and	a,#0x01
      000F11 6F                    3704 	ld	l, a
                                   3705 ;	spillPairReg hl
                                   3706 ;	spillPairReg hl
                                   3707 ;main.c:401: if (enemies[i].visible == 1) {
      000F12 E5                    3708 	push	hl
      000F13 F8 0D                 3709 	ldhl	sp,	#13
      000F15 7E                    3710 	ld	a, (hl)
      000F16 3D                    3711 	dec	a
      000F17 E1                    3712 	pop	hl
      000F18 20 60                 3713 	jr	NZ, 00132$
                                   3714 ;main.c:402: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      000F1A 7D                    3715 	ld	a, l
      000F1B B7                    3716 	or	a, a
      000F1C 20 44                 3717 	jr	NZ, 00121$
      000F1E 58                    3718 	ld	e, b
      000F1F 16 00                 3719 	ld	d, #0x00
      000F21 3E AC                 3720 	ld	a, #0xac
      000F23 B9                    3721 	cp	a, c
      000F24 3E 00                 3722 	ld	a, #0x00
      000F26 98                    3723 	sbc	a, b
      000F27 CB 7B                 3724 	bit	7, e
      000F29 28 07                 3725 	jr	Z, 00303$
      000F2B CB 7A                 3726 	bit	7, d
      000F2D 20 08                 3727 	jr	NZ, 00304$
      000F2F BF                    3728 	cp	a, a
      000F30 18 05                 3729 	jr	00304$
      000F32                       3730 00303$:
      000F32 CB 7A                 3731 	bit	7, d
      000F34 28 01                 3732 	jr	Z, 00304$
      000F36 37                    3733 	scf
      000F37                       3734 00304$:
      000F37 38 29                 3735 	jr	C, 00121$
      000F39 F8 0C                 3736 	ldhl	sp,#12
      000F3B 2A                    3737 	ld	a, (hl+)
      000F3C 5F                    3738 	ld	e, a
      000F3D 56                    3739 	ld	d, (hl)
      000F3E 1A                    3740 	ld	a, (de)
      000F3F 4F                    3741 	ld	c, a
      000F40 13                    3742 	inc	de
      000F41 1A                    3743 	ld	a, (de)
      000F42 47                    3744 	ld	b, a
      000F43 CB 78                 3745 	bit	7, b
      000F45 20 1B                 3746 	jr	NZ, 00121$
      000F47 58                    3747 	ld	e, b
      000F48 16 00                 3748 	ld	d, #0x00
      000F4A 3E 98                 3749 	ld	a, #0x98
      000F4C B9                    3750 	cp	a, c
      000F4D 3E 00                 3751 	ld	a, #0x00
      000F4F 98                    3752 	sbc	a, b
      000F50 CB 7B                 3753 	bit	7, e
      000F52 28 07                 3754 	jr	Z, 00305$
      000F54 CB 7A                 3755 	bit	7, d
      000F56 20 08                 3756 	jr	NZ, 00306$
      000F58 BF                    3757 	cp	a, a
      000F59 18 05                 3758 	jr	00306$
      000F5B                       3759 00305$:
      000F5B CB 7A                 3760 	bit	7, d
      000F5D 28 01                 3761 	jr	Z, 00306$
      000F5F 37                    3762 	scf
      000F60                       3763 00306$:
      000F60 30 75                 3764 	jr	NC, 00135$
      000F62                       3765 00121$:
                                   3766 ;main.c:403: enemies[i].visible = 0;
      000F62 F8 09                 3767 	ldhl	sp,	#9
      000F64 2A                    3768 	ld	a,	(hl+)
      000F65 66                    3769 	ld	h, (hl)
      000F66 6F                    3770 	ld	l, a
      000F67 36 00                 3771 	ld	(hl), #0x00
                                   3772 ;main.c:404: set_sprite_tile(10+i, 0x7f);
      000F69 F8 0E                 3773 	ldhl	sp,	#14
                                   3774 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F6B 6E                    3775 	ld	l, (hl)
      000F6C 01r00r00              3776 	ld	bc, #_shadow_OAM+0
                                   3777 ;	spillPairReg hl
                                   3778 ;	spillPairReg hl
      000F6F 26 00                 3779 	ld	h, #0x00
                                   3780 ;	spillPairReg hl
                                   3781 ;	spillPairReg hl
      000F71 29                    3782 	add	hl, hl
      000F72 29                    3783 	add	hl, hl
      000F73 09                    3784 	add	hl, bc
      000F74 23                    3785 	inc	hl
      000F75 23                    3786 	inc	hl
      000F76 36 7F                 3787 	ld	(hl), #0x7f
                                   3788 ;main.c:404: set_sprite_tile(10+i, 0x7f);
      000F78 18 5D                 3789 	jr	00135$
      000F7A                       3790 00132$:
                                   3791 ;main.c:408: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      000F7A CB 45                 3792 	bit	0, l
      000F7C 20 59                 3793 	jr	NZ, 00135$
      000F7E 79                    3794 	ld	a, c
      000F7F D6 AC                 3795 	sub	a, #0xac
      000F81 78                    3796 	ld	a, b
      000F82 17                    3797 	rla
      000F83 3F                    3798 	ccf
      000F84 1F                    3799 	rra
      000F85 DE 80                 3800 	sbc	a, #0x80
      000F87 30 4E                 3801 	jr	NC, 00135$
      000F89 F8 0C                 3802 	ldhl	sp,#12
      000F8B 2A                    3803 	ld	a, (hl+)
      000F8C 5F                    3804 	ld	e, a
      000F8D 56                    3805 	ld	d, (hl)
      000F8E 1A                    3806 	ld	a, (de)
      000F8F 4F                    3807 	ld	c, a
      000F90 13                    3808 	inc	de
      000F91 1A                    3809 	ld	a, (de)
      000F92 47                    3810 	ld	b, a
      000F93 58                    3811 	ld	e, b
      000F94 AF                    3812 	xor	a, a
      000F95 57                    3813 	ld	d, a
      000F96 B9                    3814 	cp	a, c
      000F97 98                    3815 	sbc	a, b
      000F98 CB 7B                 3816 	bit	7, e
      000F9A 28 07                 3817 	jr	Z, 00307$
      000F9C CB 7A                 3818 	bit	7, d
      000F9E 20 08                 3819 	jr	NZ, 00308$
      000FA0 BF                    3820 	cp	a, a
      000FA1 18 05                 3821 	jr	00308$
      000FA3                       3822 00307$:
      000FA3 CB 7A                 3823 	bit	7, d
      000FA5 28 01                 3824 	jr	Z, 00308$
      000FA7 37                    3825 	scf
      000FA8                       3826 00308$:
      000FA8 30 2D                 3827 	jr	NC, 00135$
      000FAA 79                    3828 	ld	a, c
      000FAB D6 98                 3829 	sub	a, #0x98
      000FAD 78                    3830 	ld	a, b
      000FAE 17                    3831 	rla
      000FAF 3F                    3832 	ccf
      000FB0 1F                    3833 	rra
      000FB1 DE 80                 3834 	sbc	a, #0x80
      000FB3 30 22                 3835 	jr	NC, 00135$
                                   3836 ;main.c:409: enemies[i].visible = 1;
      000FB5 F8 09                 3837 	ldhl	sp,	#9
      000FB7 2A                    3838 	ld	a,	(hl+)
      000FB8 66                    3839 	ld	h, (hl)
      000FB9 6F                    3840 	ld	l, a
      000FBA 36 01                 3841 	ld	(hl), #0x01
                                   3842 ;main.c:410: set_sprite_tile(10+i, enemies[i].sprite0);
      000FBC F8 07                 3843 	ldhl	sp,#7
      000FBE 2A                    3844 	ld	a, (hl+)
      000FBF 5F                    3845 	ld	e, a
      000FC0 56                    3846 	ld	d, (hl)
      000FC1 21 06 00              3847 	ld	hl, #0x0006
      000FC4 19                    3848 	add	hl, de
      000FC5 4D                    3849 	ld	c, l
      000FC6 44                    3850 	ld	b, h
      000FC7 0A                    3851 	ld	a, (bc)
      000FC8 4F                    3852 	ld	c, a
      000FC9 F8 0E                 3853 	ldhl	sp,	#14
                                   3854 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000FCB 6E                    3855 	ld	l, (hl)
      000FCC 11r00r00              3856 	ld	de, #_shadow_OAM+0
                                   3857 ;	spillPairReg hl
                                   3858 ;	spillPairReg hl
      000FCF 26 00                 3859 	ld	h, #0x00
                                   3860 ;	spillPairReg hl
                                   3861 ;	spillPairReg hl
      000FD1 29                    3862 	add	hl, hl
      000FD2 29                    3863 	add	hl, hl
      000FD3 19                    3864 	add	hl, de
      000FD4 23                    3865 	inc	hl
      000FD5 23                    3866 	inc	hl
      000FD6 71                    3867 	ld	(hl), c
                                   3868 ;main.c:410: set_sprite_tile(10+i, enemies[i].sprite0);
      000FD7                       3869 00135$:
                                   3870 ;main.c:415: move_sprite(10+i, enemies[i].x+4, enemies[i].y+12);
      000FD7 F8 0F                 3871 	ldhl	sp,	#15
      000FD9 6E                    3872 	ld	l, (hl)
      000FDA 26 00                 3873 	ld	h, #0x00
      000FDC 29                    3874 	add	hl, hl
      000FDD 29                    3875 	add	hl, hl
      000FDE 29                    3876 	add	hl, hl
      000FDF 29                    3877 	add	hl, hl
      000FE0 11r00r00              3878 	ld	de, #_enemies
      000FE3 19                    3879 	add	hl, de
      000FE4 4D                    3880 	ld	c, l
      000FE5 44                    3881 	ld	b, h
      000FE6 03                    3882 	inc	bc
      000FE7 03                    3883 	inc	bc
      000FE8 0A                    3884 	ld	a, (bc)
      000FE9 C6 0C                 3885 	add	a, #0x0c
      000FEB 47                    3886 	ld	b, a
      000FEC 7E                    3887 	ld	a, (hl)
      000FED C6 04                 3888 	add	a, #0x04
      000FEF 4F                    3889 	ld	c, a
      000FF0 F8 0F                 3890 	ldhl	sp,	#15
      000FF2 7E                    3891 	ld	a, (hl)
      000FF3 C6 0A                 3892 	add	a, #0x0a
                                   3893 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000FF5 6F                    3894 	ld	l, a
                                   3895 ;	spillPairReg hl
                                   3896 ;	spillPairReg hl
      000FF6 26 00                 3897 	ld	h, #0x00
                                   3898 ;	spillPairReg hl
                                   3899 ;	spillPairReg hl
      000FF8 29                    3900 	add	hl, hl
      000FF9 29                    3901 	add	hl, hl
      000FFA 11r00r00              3902 	ld	de, #_shadow_OAM
      000FFD 19                    3903 	add	hl, de
                                   3904 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000FFE 78                    3905 	ld	a, b
      000FFF 22                    3906 	ld	(hl+), a
      001000 71                    3907 	ld	(hl), c
                                   3908 ;main.c:398: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001001 F8 0F                 3909 	ldhl	sp,	#15
      001003 34                    3910 	inc	(hl)
      001004 C3r90r0E              3911 	jp	00145$
      001007                       3912 00147$:
                                   3913 ;main.c:417: }
      001007 E8 10                 3914 	add	sp, #16
      001009 C9                    3915 	ret
                                   3916 ;main.c:419: void initEnemies(uint8_t loadSprites) {
                                   3917 ;	---------------------------------
                                   3918 ; Function initEnemies
                                   3919 ; ---------------------------------
      00100A                       3920 _initEnemies::
      00100A E8 F9                 3921 	add	sp, #-7
                                   3922 ;main.c:421: if (loadSprites) {
      00100C F8 09                 3923 	ldhl	sp,	#9
      00100E 7E                    3924 	ld	a, (hl)
      00100F B7                    3925 	or	a, a
      001010 28 0D                 3926 	jr	Z, 00116$
                                   3927 ;main.c:423: set_sprite_data(0x30, 1, enemy1);
      001012 11r17r05              3928 	ld	de, #_enemy1
      001015 D5                    3929 	push	de
      001016 21 30 01              3930 	ld	hl, #0x130
      001019 E5                    3931 	push	hl
      00101A CDr00r00              3932 	call	_set_sprite_data
      00101D E8 04                 3933 	add	sp, #4
                                   3934 ;main.c:428: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00101F                       3935 00116$:
      00101F 0E 00                 3936 	ld	c, #0x00
      001021                       3937 00109$:
      001021 21rBCr06              3938 	ld	hl, #_ENEMYCOUNT
      001024 46                    3939 	ld	b, (hl)
      001025 79                    3940 	ld	a, c
      001026 90                    3941 	sub	a, b
      001027 D2rC4r10              3942 	jp	NC, 00111$
                                   3943 ;main.c:429: if (enemies[i].alive == 0) {
      00102A 69                    3944 	ld	l, c
                                   3945 ;	spillPairReg hl
                                   3946 ;	spillPairReg hl
      00102B 26 00                 3947 	ld	h, #0x00
                                   3948 ;	spillPairReg hl
                                   3949 ;	spillPairReg hl
      00102D 29                    3950 	add	hl, hl
      00102E 29                    3951 	add	hl, hl
      00102F 29                    3952 	add	hl, hl
      001030 29                    3953 	add	hl, hl
      001031 5D                    3954 	ld	e, l
      001032 54                    3955 	ld	d, h
      001033 21r00r00              3956 	ld	hl, #_enemies
      001036 19                    3957 	add	hl, de
      001037 33                    3958 	inc	sp
      001038 33                    3959 	inc	sp
      001039 5D                    3960 	ld	e, l
      00103A 54                    3961 	ld	d, h
      00103B D5                    3962 	push	de
      00103C 21 09 00              3963 	ld	hl, #0x0009
      00103F 19                    3964 	add	hl, de
      001040 5D                    3965 	ld	e, l
      001041 54                    3966 	ld	d, h
      001042 1A                    3967 	ld	a, (de)
      001043 B7                    3968 	or	a, a
      001044 20 7A                 3969 	jr	NZ, 00110$
                                   3970 ;main.c:431: enemies[i] = blob;
      001046 D1                    3971 	pop	de
      001047 D5                    3972 	push	de
      001048 C5                    3973 	push	bc
      001049 21 10 00              3974 	ld	hl, #0x0010
      00104C E5                    3975 	push	hl
      00104D 21r10r00              3976 	ld	hl, #_blob
      001050 E5                    3977 	push	hl
      001051 D5                    3978 	push	de
      001052 CDr00r00              3979 	call	___memcpy
      001055 E8 06                 3980 	add	sp, #6
      001057 CDr00r00              3981 	call	_rand
      00105A 7B                    3982 	ld	a, e
      00105B C1                    3983 	pop	bc
      00105C E6 07                 3984 	and	a, #0x07
                                   3985 ;main.c:435: enemies[i].x = xSpawnPositions[posIndex];
      00105E 47                    3986 	ld	b, a
      00105F C6rBD                 3987 	add	a,#<(_xSpawnPositions)
      001061 5F                    3988 	ld	e, a
      001062 3Es06                 3989 	ld	a, #>(_xSpawnPositions)
      001064 CE 00                 3990 	adc	a, #0x00
      001066 57                    3991 	ld	d, a
      001067 1A                    3992 	ld	a, (de)
      001068 F8 02                 3993 	ldhl	sp,	#2
      00106A 22                    3994 	ld	(hl+), a
      00106B AF                    3995 	xor	a, a
      00106C 32                    3996 	ld	(hl-), a
      00106D D1                    3997 	pop	de
      00106E D5                    3998 	push	de
      00106F 2A                    3999 	ld	a, (hl+)
      001070 12                    4000 	ld	(de), a
      001071 13                    4001 	inc	de
      001072 7E                    4002 	ld	a, (hl)
      001073 12                    4003 	ld	(de), a
                                   4004 ;main.c:436: enemies[i].y = ySpawnPositions[posIndex];
      001074 D1                    4005 	pop	de
      001075 D5                    4006 	push	de
      001076 13                    4007 	inc	de
      001077 13                    4008 	inc	de
      001078 78                    4009 	ld	a, b
      001079 C6rC5                 4010 	add	a, #<(_ySpawnPositions)
      00107B 6F                    4011 	ld	l, a
                                   4012 ;	spillPairReg hl
                                   4013 ;	spillPairReg hl
      00107C 3E 00                 4014 	ld	a, #0x00
      00107E CEs06                 4015 	adc	a, #>(_ySpawnPositions)
      001080 67                    4016 	ld	h, a
                                   4017 ;	spillPairReg hl
                                   4018 ;	spillPairReg hl
      001081 7E                    4019 	ld	a, (hl)
      001082 F8 04                 4020 	ldhl	sp,	#4
      001084 22                    4021 	ld	(hl+), a
      001085 AF                    4022 	xor	a, a
      001086 32                    4023 	ld	(hl-), a
      001087 2A                    4024 	ld	a, (hl+)
      001088 12                    4025 	ld	(de), a
      001089 13                    4026 	inc	de
      00108A 7E                    4027 	ld	a, (hl)
      00108B 12                    4028 	ld	(de), a
                                   4029 ;main.c:438: set_sprite_tile(10+i, enemies[i].sprite0);
      00108C D1                    4030 	pop	de
      00108D D5                    4031 	push	de
      00108E 21 06 00              4032 	ld	hl, #0x0006
      001091 19                    4033 	add	hl, de
      001092 5D                    4034 	ld	e, l
      001093 54                    4035 	ld	d, h
      001094 1A                    4036 	ld	a, (de)
      001095 47                    4037 	ld	b, a
      001096 79                    4038 	ld	a, c
      001097 C6 0A                 4039 	add	a, #0x0a
      001099 F8 06                 4040 	ldhl	sp,	#6
      00109B 77                    4041 	ld	(hl), a
      00109C 5E                    4042 	ld	e, (hl)
                                   4043 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00109D 26 00                 4044 	ld	h, #0x00
                                   4045 ;	spillPairReg hl
                                   4046 ;	spillPairReg hl
      00109F 6B                    4047 	ld	l, e
      0010A0 29                    4048 	add	hl, hl
      0010A1 29                    4049 	add	hl, hl
      0010A2 11r00r00              4050 	ld	de, #_shadow_OAM
      0010A5 19                    4051 	add	hl, de
      0010A6 23                    4052 	inc	hl
      0010A7 23                    4053 	inc	hl
      0010A8 70                    4054 	ld	(hl), b
                                   4055 ;main.c:441: move_sprite(10+i, enemies[i].x, enemies[i].y);
      0010A9 F8 04                 4056 	ldhl	sp,	#4
      0010AB 3A                    4057 	ld	a, (hl-)
      0010AC 2B                    4058 	dec	hl
      0010AD 5F                    4059 	ld	e, a
      0010AE 46                    4060 	ld	b, (hl)
      0010AF F8 06                 4061 	ldhl	sp,	#6
      0010B1 56                    4062 	ld	d, (hl)
                                   4063 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0010B2 26 00                 4064 	ld	h, #0x00
                                   4065 ;	spillPairReg hl
                                   4066 ;	spillPairReg hl
      0010B4 6A                    4067 	ld	l, d
      0010B5 29                    4068 	add	hl, hl
      0010B6 29                    4069 	add	hl, hl
      0010B7 D5                    4070 	push	de
      0010B8 11r00r00              4071 	ld	de, #_shadow_OAM
      0010BB 19                    4072 	add	hl, de
      0010BC D1                    4073 	pop	de
                                   4074 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0010BD 7B                    4075 	ld	a, e
      0010BE 22                    4076 	ld	(hl+), a
      0010BF 70                    4077 	ld	(hl), b
                                   4078 ;main.c:441: move_sprite(10+i, enemies[i].x, enemies[i].y);
      0010C0                       4079 00110$:
                                   4080 ;main.c:428: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0010C0 0C                    4081 	inc	c
      0010C1 C3r21r10              4082 	jp	00109$
      0010C4                       4083 00111$:
                                   4084 ;main.c:444: }
      0010C4 E8 07                 4085 	add	sp, #7
      0010C6 C9                    4086 	ret
                                   4087 ;main.c:447: void move() {
                                   4088 ;	---------------------------------
                                   4089 ; Function move
                                   4090 ; ---------------------------------
      0010C7                       4091 _move::
      0010C7 E8 F8                 4092 	add	sp, #-8
                                   4093 ;main.c:451: if (joydata & J_A) {
      0010C9 FAr87r00              4094 	ld	a, (#_joydata)
      0010CC CB 67                 4095 	bit	4, a
      0010CE 28 16                 4096 	jr	Z, 00102$
                                   4097 ;main.c:452: xSpeed += xDir + xDir + xDir;
      0010D0 21r43r00              4098 	ld	hl, #_xDir
      0010D3 7E                    4099 	ld	a, (hl)
      0010D4 87                    4100 	add	a, a
      0010D5 86                    4101 	add	a, (hl)
      0010D6 21r45r00              4102 	ld	hl, #_xSpeed
      0010D9 86                    4103 	add	a, (hl)
      0010DA 77                    4104 	ld	(hl), a
                                   4105 ;main.c:453: ySpeed += yDir + yDir + yDir;
      0010DB 21r44r00              4106 	ld	hl, #_yDir
      0010DE 7E                    4107 	ld	a, (hl)
      0010DF 87                    4108 	add	a, a
      0010E0 86                    4109 	add	a, (hl)
      0010E1 21r46r00              4110 	ld	hl, #_ySpeed
      0010E4 86                    4111 	add	a, (hl)
      0010E5 77                    4112 	ld	(hl), a
      0010E6                       4113 00102$:
                                   4114 ;main.c:457: xSpeed = clamp(xSpeed, -100, 100);
      0010E6 21r45r00              4115 	ld	hl, #_xSpeed
      0010E9 4E                    4116 	ld	c, (hl)
                                   4117 ;main.c:275: return (value < min) ? min : (value > max) ? max : value;
      0010EA 79                    4118 	ld	a, c
      0010EB EE 80                 4119 	xor	a, #0x80
      0010ED D6 1C                 4120 	sub	a, #0x1c
      0010EF 30 04                 4121 	jr	NC, 00165$
      0010F1 0E 9C                 4122 	ld	c, #0x9c
      0010F3 18 19                 4123 	jr	00166$
      0010F5                       4124 00165$:
      0010F5 59                    4125 	ld	e, c
      0010F6 3E 64                 4126 	ld	a,#0x64
      0010F8 57                    4127 	ld	d,a
      0010F9 91                    4128 	sub	a, c
      0010FA CB 7B                 4129 	bit	7, e
      0010FC 28 07                 4130 	jr	Z, 00342$
      0010FE CB 7A                 4131 	bit	7, d
      001100 20 08                 4132 	jr	NZ, 00343$
      001102 BF                    4133 	cp	a, a
      001103 18 05                 4134 	jr	00343$
      001105                       4135 00342$:
      001105 CB 7A                 4136 	bit	7, d
      001107 28 01                 4137 	jr	Z, 00343$
      001109 37                    4138 	scf
      00110A                       4139 00343$:
      00110A 30 02                 4140 	jr	NC, 00167$
      00110C 0E 64                 4141 	ld	c, #0x64
      00110E                       4142 00167$:
      00110E                       4143 00166$:
      00110E 21r45r00              4144 	ld	hl, #_xSpeed
      001111 71                    4145 	ld	(hl), c
                                   4146 ;main.c:458: ySpeed = clamp(ySpeed, -100, 100);
      001112 21r46r00              4147 	ld	hl, #_ySpeed
      001115 4E                    4148 	ld	c, (hl)
                                   4149 ;main.c:275: return (value < min) ? min : (value > max) ? max : value;
      001116 79                    4150 	ld	a, c
      001117 EE 80                 4151 	xor	a, #0x80
      001119 D6 1C                 4152 	sub	a, #0x1c
      00111B 30 04                 4153 	jr	NC, 00169$
      00111D 0E 9C                 4154 	ld	c, #0x9c
      00111F 18 19                 4155 	jr	00170$
      001121                       4156 00169$:
      001121 59                    4157 	ld	e, c
      001122 3E 64                 4158 	ld	a,#0x64
      001124 57                    4159 	ld	d,a
      001125 91                    4160 	sub	a, c
      001126 CB 7B                 4161 	bit	7, e
      001128 28 07                 4162 	jr	Z, 00344$
      00112A CB 7A                 4163 	bit	7, d
      00112C 20 08                 4164 	jr	NZ, 00345$
      00112E BF                    4165 	cp	a, a
      00112F 18 05                 4166 	jr	00345$
      001131                       4167 00344$:
      001131 CB 7A                 4168 	bit	7, d
      001133 28 01                 4169 	jr	Z, 00345$
      001135 37                    4170 	scf
      001136                       4171 00345$:
      001136 30 02                 4172 	jr	NC, 00171$
      001138 0E 64                 4173 	ld	c, #0x64
      00113A                       4174 00171$:
      00113A                       4175 00170$:
      00113A 21r46r00              4176 	ld	hl, #_ySpeed
      00113D 71                    4177 	ld	(hl), c
                                   4178 ;main.c:460: xOverflow = 0;
      00113E AF                    4179 	xor	a, a
      00113F 21r51r00              4180 	ld	hl, #_xOverflow
      001142 22                    4181 	ld	(hl+), a
      001143 77                    4182 	ld	(hl), a
                                   4183 ;main.c:461: yOverflow = 0;
      001144 AF                    4184 	xor	a, a
      001145 21r53r00              4185 	ld	hl, #_yOverflow
      001148 22                    4186 	ld	(hl+), a
      001149 77                    4187 	ld	(hl), a
                                   4188 ;main.c:466: uint8_t xCollisionPoint = playerDrawX; 
      00114A 21r4Br00              4189 	ld	hl, #_playerDrawX
      00114D 4E                    4190 	ld	c, (hl)
                                   4191 ;main.c:469: xCollisionPoint = playerDrawX +8; //right edge
      00114E 46                    4192 	ld	b, (hl)
                                   4193 ;main.c:468: if (xSpeed > 0) {
      00114F 21r45r00              4194 	ld	hl, #_xSpeed
      001152 5E                    4195 	ld	e, (hl)
      001153 AF                    4196 	xor	a, a
      001154 57                    4197 	ld	d, a
      001155 96                    4198 	sub	a, (hl)
      001156 CB 7B                 4199 	bit	7, e
      001158 28 07                 4200 	jr	Z, 00346$
      00115A CB 7A                 4201 	bit	7, d
      00115C 20 08                 4202 	jr	NZ, 00347$
      00115E BF                    4203 	cp	a, a
      00115F 18 05                 4204 	jr	00347$
      001161                       4205 00346$:
      001161 CB 7A                 4206 	bit	7, d
      001163 28 01                 4207 	jr	Z, 00347$
      001165 37                    4208 	scf
      001166                       4209 00347$:
      001166 30 04                 4210 	jr	NC, 00104$
                                   4211 ;main.c:469: xCollisionPoint = playerDrawX +8; //right edge
      001168 78                    4212 	ld	a, b
      001169 C6 08                 4213 	add	a, #0x08
      00116B 4F                    4214 	ld	c, a
      00116C                       4215 00104$:
                                   4216 ;main.c:471: if (xSpeed < 0) {
      00116C FAr45r00              4217 	ld	a, (#_xSpeed)
      00116F CB 7F                 4218 	bit	7, a
      001171 28 04                 4219 	jr	Z, 00106$
                                   4220 ;main.c:472: xCollisionPoint = playerDrawX -8; //left edge
      001173 78                    4221 	ld	a, b
      001174 C6 F8                 4222 	add	a, #0xf8
      001176 4F                    4223 	ld	c, a
      001177                       4224 00106$:
                                   4225 ;main.c:476: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      001177 06 00                 4226 	ld	b, #0x00
      001179 79                    4227 	ld	a, c
      00117A 21r4Dr00              4228 	ld	hl, #_bgX
      00117D 86                    4229 	add	a, (hl)
      00117E 23                    4230 	inc	hl
      00117F 4F                    4231 	ld	c, a
      001180 78                    4232 	ld	a, b
      001181 8E                    4233 	adc	a, (hl)
      001182 47                    4234 	ld	b, a
      001183 CB 28                 4235 	sra	b
      001185 CB 19                 4236 	rr	c
      001187 CB 28                 4237 	sra	b
      001189 CB 19                 4238 	rr	c
      00118B CB 28                 4239 	sra	b
      00118D CB 19                 4240 	rr	c
      00118F 11 20 00              4241 	ld	de, #0x0020
      001192 D5                    4242 	push	de
      001193 C5                    4243 	push	bc
      001194 CDr00r00              4244 	call	__modsint
      001197 E8 04                 4245 	add	sp, #4
                                   4246 ;main.c:480: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001199 21r4Cr00              4247 	ld	hl, #_playerDrawY
      00119C 4E                    4248 	ld	c, (hl)
      00119D 06 00                 4249 	ld	b, #0x00
      00119F 79                    4250 	ld	a, c
      0011A0 21r4Fr00              4251 	ld	hl, #_bgY
      0011A3 86                    4252 	add	a, (hl)
      0011A4 23                    4253 	inc	hl
      0011A5 4F                    4254 	ld	c, a
      0011A6 78                    4255 	ld	a, b
      0011A7 8E                    4256 	adc	a, (hl)
      0011A8 47                    4257 	ld	b, a
      0011A9 CB 28                 4258 	sra	b
      0011AB CB 19                 4259 	rr	c
      0011AD CB 28                 4260 	sra	b
      0011AF CB 19                 4261 	rr	c
      0011B1 CB 28                 4262 	sra	b
      0011B3 CB 19                 4263 	rr	c
      0011B5 D5                    4264 	push	de
      0011B6 21 20 00              4265 	ld	hl, #0x0020
      0011B9 E5                    4266 	push	hl
      0011BA C5                    4267 	push	bc
      0011BB CDr00r00              4268 	call	__modsint
      0011BE E8 04                 4269 	add	sp, #4
      0011C0 6B                    4270 	ld	l, e
                                   4271 ;	spillPairReg hl
                                   4272 ;	spillPairReg hl
                                   4273 ;	spillPairReg hl
                                   4274 ;	spillPairReg hl
      0011C1 D1                    4275 	pop	de
                                   4276 ;main.c:483: uint16_t ind = 32*bgindY + bgindX;
      0011C2 26 00                 4277 	ld	h, #0x00
                                   4278 ;	spillPairReg hl
                                   4279 ;	spillPairReg hl
      0011C4 29                    4280 	add	hl, hl
      0011C5 29                    4281 	add	hl, hl
      0011C6 29                    4282 	add	hl, hl
      0011C7 29                    4283 	add	hl, hl
      0011C8 29                    4284 	add	hl, hl
      0011C9 19                    4285 	add	hl, de
      0011CA 5D                    4286 	ld	e, l
      0011CB 54                    4287 	ld	d, h
                                   4288 ;main.c:484: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      0011CC 0E 01                 4289 	ld	c, #0x01
                                   4290 ;main.c:485: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0011CE 21r87r00              4291 	ld	hl, #_background1
      0011D1 19                    4292 	add	hl, de
      0011D2 46                    4293 	ld	b, (hl)
      0011D3 1E 00                 4294 	ld	e, #0x00
      0011D5                       4295 00158$:
      0011D5 FArB7r06              4296 	ld	a, (#_BLANKSIZE)
      0011D8 F8 02                 4297 	ldhl	sp,	#2
      0011DA 77                    4298 	ld	(hl), a
      0011DB 7B                    4299 	ld	a, e
      0011DC 96                    4300 	sub	a, (hl)
      0011DD 30 11                 4301 	jr	NC, 00109$
                                   4302 ;main.c:486: if (background1[ind] == BLANK[i] ) {
      0011DF 21rB8r06              4303 	ld	hl, #_BLANK
      0011E2 16 00                 4304 	ld	d, #0x00
      0011E4 19                    4305 	add	hl, de
      0011E5 56                    4306 	ld	d, (hl)
      0011E6 78                    4307 	ld	a, b
                                   4308 ;main.c:487: result = 0;
      0011E7 92                    4309 	sub	a,d
      0011E8 20 03                 4310 	jr	NZ, 00159$
      0011EA 4F                    4311 	ld	c,a
                                   4312 ;main.c:488: break;
      0011EB 18 03                 4313 	jr	00109$
      0011ED                       4314 00159$:
                                   4315 ;main.c:485: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0011ED 1C                    4316 	inc	e
      0011EE 18 E5                 4317 	jr	00158$
      0011F0                       4318 00109$:
                                   4319 ;main.c:492: if (result == 0) {
      0011F0 79                    4320 	ld	a, c
      0011F1 B7                    4321 	or	a, a
      0011F2 C2rC0r12              4322 	jp	NZ, 00114$
                                   4323 ;main.c:493: playerX+=xSpeed;
      0011F5 FAr45r00              4324 	ld	a, (#_xSpeed)
      0011F8 4F                    4325 	ld	c, a
      0011F9 07                    4326 	rlca
      0011FA 9F                    4327 	sbc	a, a
      0011FB 47                    4328 	ld	b, a
      0011FC 21r47r00              4329 	ld	hl, #_playerX
      0011FF 6E                    4330 	ld	l, (hl)
                                   4331 ;	spillPairReg hl
                                   4332 ;	spillPairReg hl
      001200 FAr48r00              4333 	ld	a, (_playerX + 1)
      001203 67                    4334 	ld	h, a
                                   4335 ;	spillPairReg hl
                                   4336 ;	spillPairReg hl
      001204 09                    4337 	add	hl, bc
      001205 4D                    4338 	ld	c, l
      001206 44                    4339 	ld	b, h
      001207 21r47r00              4340 	ld	hl, #_playerX
      00120A 79                    4341 	ld	a, c
      00120B 22                    4342 	ld	(hl+), a
                                   4343 ;main.c:495: uint16_t limitedPlayerX = u16Clamp(playerX, 58<<5, 110<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      00120C 78                    4344 	ld	a, b
      00120D 32                    4345 	ld	(hl-), a
      00120E 2A                    4346 	ld	a, (hl+)
      00120F 4F                    4347 	ld	c, a
      001210 46                    4348 	ld	b, (hl)
      001211 79                    4349 	ld	a, c
      001212 D6 40                 4350 	sub	a, #0x40
      001214 78                    4351 	ld	a, b
      001215 DE 07                 4352 	sbc	a, #0x07
      001217 30 05                 4353 	jr	NC, 00173$
      001219 01 40 07              4354 	ld	bc, #0x0740
      00121C 18 0B                 4355 	jr	00174$
      00121E                       4356 00173$:
      00121E 3E C0                 4357 	ld	a, #0xc0
      001220 B9                    4358 	cp	a, c
      001221 3E 0D                 4359 	ld	a, #0x0d
      001223 98                    4360 	sbc	a, b
      001224 30 03                 4361 	jr	NC, 00175$
      001226 01 C0 0D              4362 	ld	bc, #0x0dc0
      001229                       4363 00175$:
      001229                       4364 00174$:
      001229 59                    4365 	ld	e,c
      00122A 50                    4366 	ld	d,b
                                   4367 ;main.c:497: xOverflow = (playerX - limitedPlayerX);
      00122B FAr47r00              4368 	ld	a, (#_playerX)
      00122E 93                    4369 	sub	a, e
      00122F EAr51r00              4370 	ld	(#_xOverflow),a
      001232 FAr48r00              4371 	ld	a, (#_playerX + 1)
      001235 9A                    4372 	sbc	a, d
      001236 21r52r00              4373 	ld	hl, #_xOverflow + 1
                                   4374 ;main.c:498: if (xOverflow >= 0) {
      001239 32                    4375 	ld	(hl-), a
      00123A 6E                    4376 	ld	l, (hl)
                                   4377 ;	spillPairReg hl
                                   4378 ;	spillPairReg hl
      00123B FAr52r00              4379 	ld	a, (_xOverflow + 1)
                                   4380 ;	spillPairReg hl
                                   4381 ;	spillPairReg hl
      00123E CB 7F                 4382 	bit	7,a
      001240 20 22                 4383 	jr	NZ, 00111$
                                   4384 ;main.c:499: xOverflow = xOverflow >> 5;
      001242 21r52r00              4385 	ld	hl, #_xOverflow + 1
      001245 CB 2E                 4386 	sra	(hl)
      001247 2B                    4387 	dec	hl
      001248 CB 1E                 4388 	rr	(hl)
      00124A 23                    4389 	inc	hl
      00124B CB 2E                 4390 	sra	(hl)
      00124D 2B                    4391 	dec	hl
      00124E CB 1E                 4392 	rr	(hl)
      001250 23                    4393 	inc	hl
      001251 CB 2E                 4394 	sra	(hl)
      001253 2B                    4395 	dec	hl
      001254 CB 1E                 4396 	rr	(hl)
      001256 23                    4397 	inc	hl
      001257 CB 2E                 4398 	sra	(hl)
      001259 2B                    4399 	dec	hl
      00125A CB 1E                 4400 	rr	(hl)
      00125C 23                    4401 	inc	hl
      00125D CB 2E                 4402 	sra	(hl)
      00125F 2B                    4403 	dec	hl
      001260 CB 1E                 4404 	rr	(hl)
      001262 18 25                 4405 	jr	00112$
      001264                       4406 00111$:
                                   4407 ;main.c:502: xOverflow = -((-xOverflow) >> 5);
      001264 AF                    4408 	xor	a, a
      001265 21r51r00              4409 	ld	hl, #_xOverflow
      001268 96                    4410 	sub	a, (hl)
      001269 23                    4411 	inc	hl
      00126A 5F                    4412 	ld	e, a
      00126B 9F                    4413 	sbc	a, a
      00126C 96                    4414 	sub	a, (hl)
      00126D 2B                    4415 	dec	hl
      00126E 57                    4416 	ld	d, a
      00126F CB 2A                 4417 	sra	d
      001271 CB 1B                 4418 	rr	e
      001273 CB 2A                 4419 	sra	d
      001275 CB 1B                 4420 	rr	e
      001277 CB 2A                 4421 	sra	d
      001279 CB 1B                 4422 	rr	e
      00127B CB 2A                 4423 	sra	d
      00127D CB 1B                 4424 	rr	e
      00127F CB 2A                 4425 	sra	d
      001281 CB 1B                 4426 	rr	e
      001283 AF                    4427 	xor	a, a
      001284 93                    4428 	sub	a, e
      001285 22                    4429 	ld	(hl+), a
      001286 9F                    4430 	sbc	a, a
      001287 92                    4431 	sub	a, d
      001288 77                    4432 	ld	(hl), a
      001289                       4433 00112$:
                                   4434 ;main.c:504: bgX += xOverflow;
      001289 FAr4Dr00              4435 	ld	a, (#_bgX)
      00128C 21r51r00              4436 	ld	hl, #_xOverflow
      00128F 86                    4437 	add	a, (hl)
      001290 21r4Dr00              4438 	ld	hl, #_bgX
      001293 22                    4439 	ld	(hl+), a
      001294 7E                    4440 	ld	a, (hl)
      001295 21r52r00              4441 	ld	hl, #_xOverflow + 1
      001298 8E                    4442 	adc	a, (hl)
      001299 EAr4Er00              4443 	ld	(#_bgX + 1),a
                                   4444 ;main.c:505: playerX = limitedPlayerX;
      00129C 21r47r00              4445 	ld	hl, #_playerX
      00129F 79                    4446 	ld	a, c
      0012A0 22                    4447 	ld	(hl+), a
                                   4448 ;main.c:506: playerDrawX=playerX >> 5;
      0012A1 78                    4449 	ld	a, b
      0012A2 32                    4450 	ld	(hl-), a
      0012A3 2A                    4451 	ld	a, (hl+)
      0012A4 4F                    4452 	ld	c, a
      0012A5 46                    4453 	ld	b, (hl)
      0012A6 CB 38                 4454 	srl	b
      0012A8 CB 19                 4455 	rr	c
      0012AA CB 38                 4456 	srl	b
      0012AC CB 19                 4457 	rr	c
      0012AE CB 38                 4458 	srl	b
      0012B0 CB 19                 4459 	rr	c
      0012B2 CB 38                 4460 	srl	b
      0012B4 CB 19                 4461 	rr	c
      0012B6 CB 38                 4462 	srl	b
      0012B8 CB 19                 4463 	rr	c
      0012BA 21r4Br00              4464 	ld	hl, #_playerDrawX
      0012BD 71                    4465 	ld	(hl), c
      0012BE 18 05                 4466 	jr	00115$
      0012C0                       4467 00114$:
                                   4468 ;main.c:514: xSpeed = 0;
      0012C0 21r45r00              4469 	ld	hl, #_xSpeed
      0012C3 36 00                 4470 	ld	(hl), #0x00
      0012C5                       4471 00115$:
                                   4472 ;main.c:522: uint8_t yCollisionPoint = playerDrawY; 
      0012C5 FAr4Cr00              4473 	ld	a, (#_playerDrawY)
      0012C8 F8 07                 4474 	ldhl	sp,	#7
      0012CA 77                    4475 	ld	(hl), a
                                   4476 ;main.c:525: yCollisionPoint = playerDrawY +8; //bottom edge
      0012CB 21r4Cr00              4477 	ld	hl, #_playerDrawY
      0012CE 4E                    4478 	ld	c, (hl)
                                   4479 ;main.c:524: if (ySpeed > 0) {
      0012CF 21r46r00              4480 	ld	hl, #_ySpeed
      0012D2 5E                    4481 	ld	e, (hl)
      0012D3 AF                    4482 	xor	a, a
      0012D4 57                    4483 	ld	d, a
      0012D5 96                    4484 	sub	a, (hl)
      0012D6 CB 7B                 4485 	bit	7, e
      0012D8 28 07                 4486 	jr	Z, 00350$
      0012DA CB 7A                 4487 	bit	7, d
      0012DC 20 08                 4488 	jr	NZ, 00351$
      0012DE BF                    4489 	cp	a, a
      0012DF 18 05                 4490 	jr	00351$
      0012E1                       4491 00350$:
      0012E1 CB 7A                 4492 	bit	7, d
      0012E3 28 01                 4493 	jr	Z, 00351$
      0012E5 37                    4494 	scf
      0012E6                       4495 00351$:
      0012E6 30 06                 4496 	jr	NC, 00117$
                                   4497 ;main.c:525: yCollisionPoint = playerDrawY +8; //bottom edge
      0012E8 79                    4498 	ld	a, c
      0012E9 C6 08                 4499 	add	a, #0x08
      0012EB F8 07                 4500 	ldhl	sp,	#7
      0012ED 77                    4501 	ld	(hl), a
      0012EE                       4502 00117$:
                                   4503 ;main.c:527: if (ySpeed < 0) {
      0012EE FAr46r00              4504 	ld	a, (#_ySpeed)
      0012F1 CB 7F                 4505 	bit	7, a
      0012F3 28 06                 4506 	jr	Z, 00119$
                                   4507 ;main.c:528: yCollisionPoint = playerDrawY -8; //top edge, 
      0012F5 79                    4508 	ld	a, c
      0012F6 C6 F8                 4509 	add	a, #0xf8
      0012F8 F8 07                 4510 	ldhl	sp,	#7
      0012FA 77                    4511 	ld	(hl), a
      0012FB                       4512 00119$:
                                   4513 ;main.c:532: bgindX = ((playerDrawX + bgX) >> 3)%32;
      0012FB FAr4Br00              4514 	ld	a, (#_playerDrawX)
      0012FE 0E 00                 4515 	ld	c, #0x00
      001300 F8 03                 4516 	ldhl	sp,	#3
      001302 22                    4517 	ld	(hl+), a
      001303 79                    4518 	ld	a, c
      001304 32                    4519 	ld	(hl-), a
      001305 2A                    4520 	ld	a, (hl+)
      001306 5F                    4521 	ld	e, a
      001307 56                    4522 	ld	d, (hl)
      001308 21r4Dr00              4523 	ld	hl, #_bgX
      00130B 2A                    4524 	ld	a,	(hl+)
      00130C 66                    4525 	ld	h, (hl)
      00130D 6F                    4526 	ld	l, a
      00130E 19                    4527 	add	hl, de
      00130F E5                    4528 	push	hl
      001310 7D                    4529 	ld	a, l
      001311 F8 07                 4530 	ldhl	sp,	#7
      001313 77                    4531 	ld	(hl), a
      001314 E1                    4532 	pop	hl
      001315 7C                    4533 	ld	a, h
      001316 F8 06                 4534 	ldhl	sp,	#6
      001318 77                    4535 	ld	(hl), a
      001319 CB 2E                 4536 	sra	(hl)
      00131B 2B                    4537 	dec	hl
      00131C CB 1E                 4538 	rr	(hl)
      00131E 23                    4539 	inc	hl
      00131F CB 2E                 4540 	sra	(hl)
      001321 2B                    4541 	dec	hl
      001322 CB 1E                 4542 	rr	(hl)
      001324 23                    4543 	inc	hl
      001325 CB 2E                 4544 	sra	(hl)
      001327 2B                    4545 	dec	hl
      001328 CB 1E                 4546 	rr	(hl)
      00132A 11 20 00              4547 	ld	de, #0x0020
      00132D D5                    4548 	push	de
      00132E 2A                    4549 	ld	a, (hl+)
      00132F 5F                    4550 	ld	e, a
      001330 56                    4551 	ld	d, (hl)
      001331 D5                    4552 	push	de
      001332 CDr00r00              4553 	call	__modsint
      001335 E8 04                 4554 	add	sp, #4
      001337 F8 05                 4555 	ldhl	sp,	#5
      001339 7B                    4556 	ld	a, e
      00133A 22                    4557 	ld	(hl+), a
      00133B 72                    4558 	ld	(hl), d
      00133C F8 05                 4559 	ldhl	sp,	#5
      00133E 7E                    4560 	ld	a, (hl)
      00133F F8 00                 4561 	ldhl	sp,	#0
      001341 77                    4562 	ld	(hl), a
      001342 F8 06                 4563 	ldhl	sp,	#6
      001344 7E                    4564 	ld	a, (hl)
      001345 F8 01                 4565 	ldhl	sp,	#1
      001347 77                    4566 	ld	(hl), a
                                   4567 ;main.c:535: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001348 F8 07                 4568 	ldhl	sp,	#7
      00134A 3A                    4569 	ld	a, (hl-)
      00134B 22                    4570 	ld	(hl+), a
      00134C AF                    4571 	xor	a, a
      00134D 32                    4572 	ld	(hl-), a
      00134E 3A                    4573 	ld	a, (hl-)
      00134F 2B                    4574 	dec	hl
      001350 77                    4575 	ld	(hl), a
      001351 F8 07                 4576 	ldhl	sp,	#7
      001353 3A                    4577 	ld	a, (hl-)
      001354 2B                    4578 	dec	hl
      001355 32                    4579 	ld	(hl-), a
      001356 2A                    4580 	ld	a, (hl+)
      001357 5F                    4581 	ld	e, a
      001358 56                    4582 	ld	d, (hl)
      001359 21r4Fr00              4583 	ld	hl, #_bgY
      00135C 2A                    4584 	ld	a,	(hl+)
      00135D 66                    4585 	ld	h, (hl)
      00135E 6F                    4586 	ld	l, a
      00135F 19                    4587 	add	hl, de
      001360 E5                    4588 	push	hl
      001361 7D                    4589 	ld	a, l
      001362 F8 08                 4590 	ldhl	sp,	#8
      001364 77                    4591 	ld	(hl), a
      001365 E1                    4592 	pop	hl
      001366 7C                    4593 	ld	a, h
      001367 F8 07                 4594 	ldhl	sp,	#7
      001369 77                    4595 	ld	(hl), a
      00136A CB 2E                 4596 	sra	(hl)
      00136C 2B                    4597 	dec	hl
      00136D CB 1E                 4598 	rr	(hl)
      00136F 23                    4599 	inc	hl
      001370 CB 2E                 4600 	sra	(hl)
      001372 2B                    4601 	dec	hl
      001373 CB 1E                 4602 	rr	(hl)
      001375 23                    4603 	inc	hl
      001376 CB 2E                 4604 	sra	(hl)
      001378 2B                    4605 	dec	hl
      001379 CB 1E                 4606 	rr	(hl)
      00137B 11 20 00              4607 	ld	de, #0x0020
      00137E D5                    4608 	push	de
      00137F 2A                    4609 	ld	a, (hl+)
      001380 5F                    4610 	ld	e, a
      001381 56                    4611 	ld	d, (hl)
      001382 D5                    4612 	push	de
      001383 CDr00r00              4613 	call	__modsint
      001386 E8 04                 4614 	add	sp, #4
      001388 F8 06                 4615 	ldhl	sp,	#6
      00138A 7B                    4616 	ld	a, e
      00138B 22                    4617 	ld	(hl+), a
      00138C 72                    4618 	ld	(hl), d
      00138D F8 06                 4619 	ldhl	sp,	#6
      00138F 2A                    4620 	ld	a, (hl+)
      001390 77                    4621 	ld	(hl), a
                                   4622 ;main.c:538: ind = 32*bgindY + bgindX;
      001391 3A                    4623 	ld	a, (hl-)
      001392 22                    4624 	ld	(hl+), a
      001393 36 00                 4625 	ld	(hl), #0x00
      001395 3E 05                 4626 	ld	a, #0x05
      001397                       4627 00352$:
      001397 F8 06                 4628 	ldhl	sp,	#6
      001399 CB 26                 4629 	sla	(hl)
      00139B 23                    4630 	inc	hl
      00139C CB 16                 4631 	rl	(hl)
      00139E 3D                    4632 	dec	a
      00139F 20 F6                 4633 	jr	NZ, 00352$
      0013A1 2B                    4634 	dec	hl
      0013A2 3A                    4635 	ld	a, (hl-)
      0013A3 2B                    4636 	dec	hl
      0013A4 77                    4637 	ld	(hl), a
      0013A5 F8 07                 4638 	ldhl	sp,	#7
      0013A7 3A                    4639 	ld	a, (hl-)
      0013A8 2B                    4640 	dec	hl
      0013A9 77                    4641 	ld	(hl), a
      0013AA D1                    4642 	pop	de
      0013AB D5                    4643 	push	de
      0013AC 3A                    4644 	ld	a, (hl-)
      0013AD 6E                    4645 	ld	l, (hl)
      0013AE 67                    4646 	ld	h, a
      0013AF 19                    4647 	add	hl, de
      0013B0 E5                    4648 	push	hl
      0013B1 7D                    4649 	ld	a, l
      0013B2 F8 08                 4650 	ldhl	sp,	#8
      0013B4 77                    4651 	ld	(hl), a
      0013B5 E1                    4652 	pop	hl
      0013B6 7C                    4653 	ld	a, h
      0013B7 F8 07                 4654 	ldhl	sp,	#7
      0013B9 77                    4655 	ld	(hl), a
                                   4656 ;main.c:539: result = 1;
      0013BA F8 03                 4657 	ldhl	sp,	#3
      0013BC 36 01                 4658 	ld	(hl), #0x01
                                   4659 ;main.c:540: for (uint8_t j=0; j<BLANKSIZE; j++) {
      0013BE F8 06                 4660 	ldhl	sp,#6
      0013C0 2A                    4661 	ld	a, (hl+)
      0013C1 5F                    4662 	ld	e, a
      0013C2 56                    4663 	ld	d, (hl)
      0013C3 21r87r00              4664 	ld	hl, #_background1
      0013C6 19                    4665 	add	hl, de
      0013C7 4D                    4666 	ld	c, l
      0013C8 44                    4667 	ld	b, h
      0013C9 0A                    4668 	ld	a, (bc)
      0013CA F8 04                 4669 	ldhl	sp,	#4
      0013CC 77                    4670 	ld	(hl), a
      0013CD F8 07                 4671 	ldhl	sp,	#7
      0013CF 36 00                 4672 	ld	(hl), #0x00
      0013D1                       4673 00161$:
      0013D1 F8 07                 4674 	ldhl	sp,	#7
      0013D3 7E                    4675 	ld	a, (hl)
      0013D4 F8 02                 4676 	ldhl	sp,	#2
      0013D6 96                    4677 	sub	a, (hl)
      0013D7 30 29                 4678 	jr	NC, 00122$
                                   4679 ;main.c:541: if (background1[ind] == BLANK[j] ) {
      0013D9 11rB8r06              4680 	ld	de, #_BLANK
      0013DC F8 07                 4681 	ldhl	sp,	#7
      0013DE 6E                    4682 	ld	l, (hl)
      0013DF 26 00                 4683 	ld	h, #0x00
      0013E1 19                    4684 	add	hl, de
      0013E2 E5                    4685 	push	hl
      0013E3 7D                    4686 	ld	a, l
      0013E4 F8 07                 4687 	ldhl	sp,	#7
      0013E6 77                    4688 	ld	(hl), a
      0013E7 E1                    4689 	pop	hl
      0013E8 7C                    4690 	ld	a, h
      0013E9 F8 06                 4691 	ldhl	sp,	#6
      0013EB 32                    4692 	ld	(hl-), a
      0013EC 2A                    4693 	ld	a, (hl+)
      0013ED 5F                    4694 	ld	e, a
      0013EE 3A                    4695 	ld	a, (hl-)
      0013EF 2B                    4696 	dec	hl
      0013F0 57                    4697 	ld	d, a
      0013F1 1A                    4698 	ld	a, (de)
      0013F2 4F                    4699 	ld	c, a
      0013F3 7E                    4700 	ld	a, (hl)
      0013F4 91                    4701 	sub	a, c
      0013F5 20 06                 4702 	jr	NZ, 00162$
                                   4703 ;main.c:542: result = 0;
      0013F7 F8 03                 4704 	ldhl	sp,	#3
      0013F9 36 00                 4705 	ld	(hl), #0x00
                                   4706 ;main.c:543: break;
      0013FB 18 05                 4707 	jr	00122$
      0013FD                       4708 00162$:
                                   4709 ;main.c:540: for (uint8_t j=0; j<BLANKSIZE; j++) {
      0013FD F8 07                 4710 	ldhl	sp,	#7
      0013FF 34                    4711 	inc	(hl)
      001400 18 CF                 4712 	jr	00161$
      001402                       4713 00122$:
                                   4714 ;main.c:546: if (result == 0) {
      001402 F8 03                 4715 	ldhl	sp,	#3
      001404 7E                    4716 	ld	a, (hl)
      001405 B7                    4717 	or	a, a
      001406 C2rD3r14              4718 	jp	NZ, 00127$
                                   4719 ;main.c:547: playerY += ySpeed;
      001409 FAr46r00              4720 	ld	a, (#_ySpeed)
      00140C 4F                    4721 	ld	c, a
      00140D 07                    4722 	rlca
      00140E 9F                    4723 	sbc	a, a
      00140F 21r49r00              4724 	ld	hl, #_playerY
      001412 5E                    4725 	ld	e, (hl)
      001413 23                    4726 	inc	hl
      001414 56                    4727 	ld	d, (hl)
      001415 2B                    4728 	dec	hl
      001416 47                    4729 	ld	b, a
      001417 79                    4730 	ld	a, c
      001418 83                    4731 	add	a, e
      001419 4F                    4732 	ld	c, a
      00141A 78                    4733 	ld	a, b
      00141B 8A                    4734 	adc	a, d
      00141C 47                    4735 	ld	b, a
      00141D 79                    4736 	ld	a, c
      00141E 22                    4737 	ld	(hl+), a
                                   4738 ;main.c:549: uint16_t limitedPlayerY = u16Clamp(playerY, 61<<5, 107<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      00141F 78                    4739 	ld	a, b
      001420 32                    4740 	ld	(hl-), a
      001421 2A                    4741 	ld	a, (hl+)
      001422 5F                    4742 	ld	e, a
      001423 56                    4743 	ld	d, (hl)
      001424 7B                    4744 	ld	a, e
      001425 D6 A0                 4745 	sub	a, #0xa0
      001427 7A                    4746 	ld	a, d
      001428 DE 07                 4747 	sbc	a, #0x07
      00142A 30 05                 4748 	jr	NC, 00177$
      00142C 11 A0 07              4749 	ld	de, #0x07a0
      00142F 18 0B                 4750 	jr	00178$
      001431                       4751 00177$:
      001431 3E 60                 4752 	ld	a, #0x60
      001433 BB                    4753 	cp	a, e
      001434 3E 0D                 4754 	ld	a, #0x0d
      001436 9A                    4755 	sbc	a, d
      001437 30 03                 4756 	jr	NC, 00179$
      001439 11 60 0D              4757 	ld	de, #0x0d60
      00143C                       4758 00179$:
      00143C                       4759 00178$:
      00143C 4B                    4760 	ld	c, e
      00143D 42                    4761 	ld	b, d
                                   4762 ;main.c:551: yOverflow = (playerY - limitedPlayerY);
      00143E FAr49r00              4763 	ld	a, (#_playerY)
      001441 93                    4764 	sub	a, e
      001442 EAr53r00              4765 	ld	(#_yOverflow),a
      001445 FAr4Ar00              4766 	ld	a, (#_playerY + 1)
      001448 9A                    4767 	sbc	a, d
      001449 21r54r00              4768 	ld	hl, #_yOverflow + 1
                                   4769 ;main.c:552: if (yOverflow >= 0) {
      00144C 32                    4770 	ld	(hl-), a
      00144D 6E                    4771 	ld	l, (hl)
                                   4772 ;	spillPairReg hl
                                   4773 ;	spillPairReg hl
      00144E FAr54r00              4774 	ld	a, (_yOverflow + 1)
                                   4775 ;	spillPairReg hl
                                   4776 ;	spillPairReg hl
      001451 CB 7F                 4777 	bit	7,a
      001453 20 22                 4778 	jr	NZ, 00124$
                                   4779 ;main.c:553: yOverflow = yOverflow >> 5;
      001455 21r54r00              4780 	ld	hl, #_yOverflow + 1
      001458 CB 2E                 4781 	sra	(hl)
      00145A 2B                    4782 	dec	hl
      00145B CB 1E                 4783 	rr	(hl)
      00145D 23                    4784 	inc	hl
      00145E CB 2E                 4785 	sra	(hl)
      001460 2B                    4786 	dec	hl
      001461 CB 1E                 4787 	rr	(hl)
      001463 23                    4788 	inc	hl
      001464 CB 2E                 4789 	sra	(hl)
      001466 2B                    4790 	dec	hl
      001467 CB 1E                 4791 	rr	(hl)
      001469 23                    4792 	inc	hl
      00146A CB 2E                 4793 	sra	(hl)
      00146C 2B                    4794 	dec	hl
      00146D CB 1E                 4795 	rr	(hl)
      00146F 23                    4796 	inc	hl
      001470 CB 2E                 4797 	sra	(hl)
      001472 2B                    4798 	dec	hl
      001473 CB 1E                 4799 	rr	(hl)
      001475 18 25                 4800 	jr	00125$
      001477                       4801 00124$:
                                   4802 ;main.c:556: yOverflow = -((-yOverflow) >> 5);
      001477 AF                    4803 	xor	a, a
      001478 21r53r00              4804 	ld	hl, #_yOverflow
      00147B 96                    4805 	sub	a, (hl)
      00147C 23                    4806 	inc	hl
      00147D 5F                    4807 	ld	e, a
      00147E 9F                    4808 	sbc	a, a
      00147F 96                    4809 	sub	a, (hl)
      001480 2B                    4810 	dec	hl
      001481 57                    4811 	ld	d, a
      001482 CB 2A                 4812 	sra	d
      001484 CB 1B                 4813 	rr	e
      001486 CB 2A                 4814 	sra	d
      001488 CB 1B                 4815 	rr	e
      00148A CB 2A                 4816 	sra	d
      00148C CB 1B                 4817 	rr	e
      00148E CB 2A                 4818 	sra	d
      001490 CB 1B                 4819 	rr	e
      001492 CB 2A                 4820 	sra	d
      001494 CB 1B                 4821 	rr	e
      001496 AF                    4822 	xor	a, a
      001497 93                    4823 	sub	a, e
      001498 22                    4824 	ld	(hl+), a
      001499 9F                    4825 	sbc	a, a
      00149A 92                    4826 	sub	a, d
      00149B 77                    4827 	ld	(hl), a
      00149C                       4828 00125$:
                                   4829 ;main.c:558: bgY += yOverflow;
      00149C FAr4Fr00              4830 	ld	a, (#_bgY)
      00149F 21r53r00              4831 	ld	hl, #_yOverflow
      0014A2 86                    4832 	add	a, (hl)
      0014A3 21r4Fr00              4833 	ld	hl, #_bgY
      0014A6 22                    4834 	ld	(hl+), a
      0014A7 7E                    4835 	ld	a, (hl)
      0014A8 21r54r00              4836 	ld	hl, #_yOverflow + 1
      0014AB 8E                    4837 	adc	a, (hl)
      0014AC EAr50r00              4838 	ld	(#_bgY + 1),a
                                   4839 ;main.c:559: playerY = limitedPlayerY;
      0014AF 21r49r00              4840 	ld	hl, #_playerY
      0014B2 79                    4841 	ld	a, c
      0014B3 22                    4842 	ld	(hl+), a
                                   4843 ;main.c:560: playerDrawY=playerY >> 5;
      0014B4 78                    4844 	ld	a, b
      0014B5 32                    4845 	ld	(hl-), a
      0014B6 2A                    4846 	ld	a, (hl+)
      0014B7 4F                    4847 	ld	c, a
      0014B8 46                    4848 	ld	b, (hl)
      0014B9 CB 38                 4849 	srl	b
      0014BB CB 19                 4850 	rr	c
      0014BD CB 38                 4851 	srl	b
      0014BF CB 19                 4852 	rr	c
      0014C1 CB 38                 4853 	srl	b
      0014C3 CB 19                 4854 	rr	c
      0014C5 CB 38                 4855 	srl	b
      0014C7 CB 19                 4856 	rr	c
      0014C9 CB 38                 4857 	srl	b
      0014CB CB 19                 4858 	rr	c
      0014CD 21r4Cr00              4859 	ld	hl, #_playerDrawY
      0014D0 71                    4860 	ld	(hl), c
      0014D1 18 05                 4861 	jr	00128$
      0014D3                       4862 00127$:
                                   4863 ;main.c:565: ySpeed = 0;
      0014D3 21r46r00              4864 	ld	hl, #_ySpeed
      0014D6 36 00                 4865 	ld	(hl), #0x00
      0014D8                       4866 00128$:
                                   4867 ;main.c:466: uint8_t xCollisionPoint = playerDrawX; 
      0014D8 FAr4Br00              4868 	ld	a, (#_playerDrawX)
      0014DB F8 07                 4869 	ldhl	sp,	#7
      0014DD 77                    4870 	ld	(hl), a
                                   4871 ;main.c:525: yCollisionPoint = playerDrawY +8; //bottom edge
      0014DE FAr4Cr00              4872 	ld	a, (#_playerDrawY)
      0014E1 C6 08                 4873 	add	a, #0x08
      0014E3 F8 06                 4874 	ldhl	sp,	#6
      0014E5 77                    4875 	ld	(hl), a
                                   4876 ;main.c:568: if (xDir >= 0) {
      0014E6 FAr43r00              4877 	ld	a, (#_xDir)
      0014E9 CB 7F                 4878 	bit	7, a
      0014EB 20 2A                 4879 	jr	NZ, 00130$
                                   4880 ;main.c:569: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   4881 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   4882 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0014ED 11r00r00              4883 	ld	de, #_shadow_OAM
      0014F0 F8 06                 4884 	ldhl	sp,	#6
      0014F2 2A                    4885 	ld	a, (hl+)
      0014F3 12                    4886 	ld	(de), a
      0014F4 11r01r00              4887 	ld	de, #(_shadow_OAM + 1)
      0014F7 7E                    4888 	ld	a, (hl)
      0014F8 12                    4889 	ld	(de), a
                                   4890 ;main.c:571: move_sprite(1, playerDrawX +8, playerDrawY +8);
      0014F9 FAr4Cr00              4891 	ld	a, (#_playerDrawY)
      0014FC F8 07                 4892 	ldhl	sp,	#7
      0014FE 77                    4893 	ld	(hl), a
      0014FF 3A                    4894 	ld	a, (hl-)
      001500 C6 08                 4895 	add	a, #0x08
      001502 77                    4896 	ld	(hl), a
      001503 FAr4Br00              4897 	ld	a, (#_playerDrawX)
      001506 C6 08                 4898 	add	a, #0x08
      001508 F8 07                 4899 	ldhl	sp,	#7
                                   4900 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   4901 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00150A 32                    4902 	ld	(hl-), a
      00150B 11r04r00              4903 	ld	de, #(_shadow_OAM + 4)
      00150E 2A                    4904 	ld	a, (hl+)
      00150F 12                    4905 	ld	(de), a
      001510 11r05r00              4906 	ld	de, #(_shadow_OAM + 5)
      001513 7E                    4907 	ld	a, (hl)
      001514 12                    4908 	ld	(de), a
                                   4909 ;main.c:571: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001515 18 28                 4910 	jr	00131$
      001517                       4911 00130$:
                                   4912 ;main.c:574: move_sprite(1, playerDrawX , playerDrawY +8);
                                   4913 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001517 01r04r00              4914 	ld	bc, #(_shadow_OAM + 4)
                                   4915 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00151A F8 06                 4916 	ldhl	sp,	#6
      00151C 2A                    4917 	ld	a, (hl+)
      00151D 02                    4918 	ld	(bc), a
      00151E 03                    4919 	inc	bc
      00151F 7E                    4920 	ld	a, (hl)
      001520 02                    4921 	ld	(bc), a
                                   4922 ;main.c:576: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001521 FAr4Cr00              4923 	ld	a, (#_playerDrawY)
      001524 F8 07                 4924 	ldhl	sp,	#7
      001526 77                    4925 	ld	(hl), a
      001527 3A                    4926 	ld	a, (hl-)
      001528 C6 08                 4927 	add	a, #0x08
      00152A 77                    4928 	ld	(hl), a
      00152B FAr4Br00              4929 	ld	a, (#_playerDrawX)
      00152E F8 07                 4930 	ldhl	sp,	#7
      001530 77                    4931 	ld	(hl), a
      001531 7E                    4932 	ld	a, (hl)
      001532 C6 08                 4933 	add	a, #0x08
                                   4934 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   4935 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001534 32                    4936 	ld	(hl-), a
      001535 11r00r00              4937 	ld	de, #_shadow_OAM
      001538 2A                    4938 	ld	a, (hl+)
      001539 12                    4939 	ld	(de), a
      00153A 11r01r00              4940 	ld	de, #(_shadow_OAM + 1)
      00153D 7E                    4941 	ld	a, (hl)
      00153E 12                    4942 	ld	(de), a
                                   4943 ;main.c:576: move_sprite(0, playerDrawX +8, playerDrawY +8);
      00153F                       4944 00131$:
                                   4945 ;main.c:581: if (bgX >= 256) {
      00153F 21r4Dr00              4946 	ld	hl, #_bgX
      001542 2A                    4947 	ld	a, (hl+)
      001543 4F                    4948 	ld	c, a
      001544 46                    4949 	ld	b, (hl)
      001545 78                    4950 	ld	a, b
      001546 EE 80                 4951 	xor	a, #0x80
      001548 D6 81                 4952 	sub	a, #0x81
      00154A 38 0F                 4953 	jr	C, 00133$
                                   4954 ;main.c:582: bgX = bgX % 256;
      00154C AF                    4955 	xor	a, a
      00154D 3C                    4956 	inc	a
      00154E F5                    4957 	push	af
      00154F C5                    4958 	push	bc
      001550 CDr00r00              4959 	call	__modsint
      001553 E8 04                 4960 	add	sp, #4
      001555 21r4Dr00              4961 	ld	hl, #_bgX
      001558 7B                    4962 	ld	a, e
      001559 22                    4963 	ld	(hl+), a
      00155A 72                    4964 	ld	(hl), d
      00155B                       4965 00133$:
                                   4966 ;main.c:584: if (bgX < 0) {
      00155B 21r4Dr00              4967 	ld	hl, #_bgX
      00155E 2A                    4968 	ld	a, (hl+)
      00155F 4F                    4969 	ld	c, a
      001560 46                    4970 	ld	b, (hl)
      001561 CB 78                 4971 	bit	7, b
      001563 28 15                 4972 	jr	Z, 00135$
                                   4973 ;main.c:585: bgX = 255 - (bgX % 256);
      001565 AF                    4974 	xor	a, a
      001566 3C                    4975 	inc	a
      001567 F5                    4976 	push	af
      001568 C5                    4977 	push	bc
      001569 CDr00r00              4978 	call	__modsint
      00156C E8 04                 4979 	add	sp, #4
      00156E 3E FF                 4980 	ld	a, #0xff
      001570 93                    4981 	sub	a, e
      001571 4F                    4982 	ld	c, a
      001572 9F                    4983 	sbc	a, a
      001573 92                    4984 	sub	a, d
      001574 21r4Dr00              4985 	ld	hl, #_bgX
      001577 71                    4986 	ld	(hl), c
      001578 23                    4987 	inc	hl
      001579 77                    4988 	ld	(hl), a
      00157A                       4989 00135$:
                                   4990 ;main.c:587: if (bgY >= 256) {
      00157A 21r4Fr00              4991 	ld	hl, #_bgY
      00157D 2A                    4992 	ld	a, (hl+)
      00157E 4F                    4993 	ld	c, a
      00157F 46                    4994 	ld	b, (hl)
      001580 78                    4995 	ld	a, b
      001581 EE 80                 4996 	xor	a, #0x80
      001583 D6 81                 4997 	sub	a, #0x81
      001585 38 0F                 4998 	jr	C, 00137$
                                   4999 ;main.c:588: bgY = bgY % 256;
      001587 AF                    5000 	xor	a, a
      001588 3C                    5001 	inc	a
      001589 F5                    5002 	push	af
      00158A C5                    5003 	push	bc
      00158B CDr00r00              5004 	call	__modsint
      00158E E8 04                 5005 	add	sp, #4
      001590 21r4Fr00              5006 	ld	hl, #_bgY
      001593 7B                    5007 	ld	a, e
      001594 22                    5008 	ld	(hl+), a
      001595 72                    5009 	ld	(hl), d
      001596                       5010 00137$:
                                   5011 ;main.c:590: if (bgY < 0) {
      001596 21r4Fr00              5012 	ld	hl, #_bgY
      001599 2A                    5013 	ld	a, (hl+)
      00159A 4F                    5014 	ld	c, a
      00159B 46                    5015 	ld	b, (hl)
      00159C CB 78                 5016 	bit	7, b
      00159E 28 15                 5017 	jr	Z, 00139$
                                   5018 ;main.c:591: bgY = 255 - (bgY % 256);
      0015A0 AF                    5019 	xor	a, a
      0015A1 3C                    5020 	inc	a
      0015A2 F5                    5021 	push	af
      0015A3 C5                    5022 	push	bc
      0015A4 CDr00r00              5023 	call	__modsint
      0015A7 E8 04                 5024 	add	sp, #4
      0015A9 3E FF                 5025 	ld	a, #0xff
      0015AB 93                    5026 	sub	a, e
      0015AC 4F                    5027 	ld	c, a
      0015AD 9F                    5028 	sbc	a, a
      0015AE 92                    5029 	sub	a, d
      0015AF 21r4Fr00              5030 	ld	hl, #_bgY
      0015B2 71                    5031 	ld	(hl), c
      0015B3 23                    5032 	inc	hl
      0015B4 77                    5033 	ld	(hl), a
      0015B5                       5034 00139$:
                                   5035 ;main.c:594: move_bkg(bgX, bgY);
      0015B5 21r4Fr00              5036 	ld	hl, #_bgY
      0015B8 4E                    5037 	ld	c, (hl)
      0015B9 FAr4Dr00              5038 	ld	a, (#_bgX)
      0015BC E0r00                 5039 	ldh	(_SCX_REG + 0), a
                                   5040 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      0015BE 79                    5041 	ld	a, c
      0015BF E0r00                 5042 	ldh	(_SCY_REG + 0), a
                                   5043 ;main.c:597: if (ySpeed > 0) ySpeed--;
      0015C1 21r46r00              5044 	ld	hl, #_ySpeed
      0015C4 5E                    5045 	ld	e, (hl)
      0015C5 AF                    5046 	xor	a, a
      0015C6 57                    5047 	ld	d, a
      0015C7 96                    5048 	sub	a, (hl)
      0015C8 CB 7B                 5049 	bit	7, e
      0015CA 28 07                 5050 	jr	Z, 00355$
      0015CC CB 7A                 5051 	bit	7, d
      0015CE 20 08                 5052 	jr	NZ, 00356$
      0015D0 BF                    5053 	cp	a, a
      0015D1 18 05                 5054 	jr	00356$
      0015D3                       5055 00355$:
      0015D3 CB 7A                 5056 	bit	7, d
      0015D5 28 01                 5057 	jr	Z, 00356$
      0015D7 37                    5058 	scf
      0015D8                       5059 00356$:
      0015D8 30 04                 5060 	jr	NC, 00141$
      0015DA 21r46r00              5061 	ld	hl, #_ySpeed
      0015DD 35                    5062 	dec	(hl)
      0015DE                       5063 00141$:
                                   5064 ;main.c:598: if (ySpeed < 0) ySpeed++;
      0015DE 21r46r00              5065 	ld	hl, #_ySpeed
      0015E1 CB 7E                 5066 	bit	7, (hl)
      0015E3 28 01                 5067 	jr	Z, 00143$
      0015E5 34                    5068 	inc	(hl)
      0015E6                       5069 00143$:
                                   5070 ;main.c:599: if (xSpeed > 0) xSpeed--;
      0015E6 21r45r00              5071 	ld	hl, #_xSpeed
      0015E9 5E                    5072 	ld	e, (hl)
      0015EA AF                    5073 	xor	a, a
      0015EB 57                    5074 	ld	d, a
      0015EC 96                    5075 	sub	a, (hl)
      0015ED CB 7B                 5076 	bit	7, e
      0015EF 28 07                 5077 	jr	Z, 00357$
      0015F1 CB 7A                 5078 	bit	7, d
      0015F3 20 08                 5079 	jr	NZ, 00358$
      0015F5 BF                    5080 	cp	a, a
      0015F6 18 05                 5081 	jr	00358$
      0015F8                       5082 00357$:
      0015F8 CB 7A                 5083 	bit	7, d
      0015FA 28 01                 5084 	jr	Z, 00358$
      0015FC 37                    5085 	scf
      0015FD                       5086 00358$:
      0015FD 30 04                 5087 	jr	NC, 00145$
      0015FF 21r45r00              5088 	ld	hl, #_xSpeed
      001602 35                    5089 	dec	(hl)
      001603                       5090 00145$:
                                   5091 ;main.c:600: if (xSpeed < 0) xSpeed++;
      001603 21r45r00              5092 	ld	hl, #_xSpeed
      001606 CB 7E                 5093 	bit	7, (hl)
      001608 28 01                 5094 	jr	Z, 00163$
      00160A 34                    5095 	inc	(hl)
      00160B                       5096 00163$:
                                   5097 ;main.c:604: }
      00160B E8 08                 5098 	add	sp, #8
      00160D C9                    5099 	ret
                                   5100 ;main.c:606: void takeDamage(int16_t amount) {
                                   5101 ;	---------------------------------
                                   5102 ; Function takeDamage
                                   5103 ; ---------------------------------
      00160E                       5104 _takeDamage::
      00160E 3B                    5105 	dec	sp
                                   5106 ;main.c:607: if (amount > shield) {
      00160F FAr89r00              5107 	ld	a, (#_shield)
      001612 4F                    5108 	ld	c, a
      001613 07                    5109 	rlca
      001614 9F                    5110 	sbc	a, a
      001615 47                    5111 	ld	b, a
                                   5112 ;main.c:609: hull -= (amount - shield);
      001616 F8 03                 5113 	ldhl	sp,	#3
      001618 7E                    5114 	ld	a, (hl)
      001619 F8 00                 5115 	ldhl	sp,	#0
      00161B 77                    5116 	ld	(hl), a
                                   5117 ;main.c:607: if (amount > shield) {
      00161C F8 03                 5118 	ldhl	sp,	#3
      00161E 79                    5119 	ld	a, c
      00161F 96                    5120 	sub	a, (hl)
      001620 23                    5121 	inc	hl
      001621 78                    5122 	ld	a, b
      001622 9E                    5123 	sbc	a, (hl)
      001623 78                    5124 	ld	a, b
      001624 57                    5125 	ld	d, a
      001625 CB 7E                 5126 	bit	7, (hl)
      001627 28 07                 5127 	jr	Z, 00111$
      001629 CB 7A                 5128 	bit	7, d
      00162B 20 08                 5129 	jr	NZ, 00112$
      00162D BF                    5130 	cp	a, a
      00162E 18 05                 5131 	jr	00112$
      001630                       5132 00111$:
      001630 CB 7A                 5133 	bit	7, d
      001632 28 01                 5134 	jr	Z, 00112$
      001634 37                    5135 	scf
      001635                       5136 00112$:
      001635 30 10                 5137 	jr	NC, 00102$
                                   5138 ;main.c:608: shield = 0;
      001637 21r89r00              5139 	ld	hl, #_shield
      00163A 36 00                 5140 	ld	(hl), #0x00
                                   5141 ;main.c:609: hull -= (amount - shield);
      00163C FAr88r00              5142 	ld	a, (#_hull)
      00163F F8 00                 5143 	ldhl	sp,	#0
      001641 96                    5144 	sub	a, (hl)
      001642 EAr88r00              5145 	ld	(#_hull),a
      001645 18 09                 5146 	jr	00104$
      001647                       5147 00102$:
                                   5148 ;main.c:612: shield -= amount;
      001647 FAr89r00              5149 	ld	a, (#_shield)
      00164A F8 00                 5150 	ldhl	sp,	#0
      00164C 96                    5151 	sub	a, (hl)
      00164D EAr89r00              5152 	ld	(#_shield),a
      001650                       5153 00104$:
                                   5154 ;main.c:614: }
      001650 33                    5155 	inc	sp
      001651 C9                    5156 	ret
                                   5157 ;main.c:616: void checkCollision() {
                                   5158 ;	---------------------------------
                                   5159 ; Function checkCollision
                                   5160 ; ---------------------------------
      001652                       5161 _checkCollision::
      001652 E8 E9                 5162 	add	sp, #-23
                                   5163 ;main.c:623: struct Enemy *eptr = enemies;
                                   5164 ;main.c:624: uint8_t i = enemyCollisionCount;
      001654 21r55r00              5165 	ld	hl, #_enemyCollisionCount
      001657 4E                    5166 	ld	c, (hl)
                                   5167 ;main.c:626: while (i < ENEMYCOUNT) {
      001658 21rBCr06              5168 	ld	hl, #_ENEMYCOUNT
      00165B 46                    5169 	ld	b, (hl)
      00165C 79                    5170 	ld	a, c
      00165D 90                    5171 	sub	a, b
      00165E D2r0Cr19              5172 	jp	NC, 00121$
                                   5173 ;main.c:627: eptr += enemyCollisionCount;
      001661 21r55r00              5174 	ld	hl, #_enemyCollisionCount
      001664 6E                    5175 	ld	l, (hl)
                                   5176 ;	spillPairReg hl
                                   5177 ;	spillPairReg hl
      001665 26 00                 5178 	ld	h, #0x00
                                   5179 ;	spillPairReg hl
                                   5180 ;	spillPairReg hl
      001667 29                    5181 	add	hl, hl
      001668 29                    5182 	add	hl, hl
      001669 29                    5183 	add	hl, hl
      00166A 29                    5184 	add	hl, hl
      00166B 7D                    5185 	ld	a, l
      00166C C6r00                 5186 	add	a, #<(_enemies)
      00166E 47                    5187 	ld	b, a
      00166F 7C                    5188 	ld	a, h
      001670 CEs00                 5189 	adc	a, #>(_enemies)
      001672 F8 00                 5190 	ldhl	sp,	#0
      001674 70                    5191 	ld	(hl), b
      001675 23                    5192 	inc	hl
      001676 77                    5193 	ld	(hl), a
                                   5194 ;main.c:628: if (eptr->visible && eptr->alive) {
      001677 D1                    5195 	pop	de
      001678 D5                    5196 	push	de
      001679 21 0A 00              5197 	ld	hl, #0x000a
      00167C 19                    5198 	add	hl, de
      00167D E5                    5199 	push	hl
      00167E 7D                    5200 	ld	a, l
      00167F F8 04                 5201 	ldhl	sp,	#4
      001681 77                    5202 	ld	(hl), a
      001682 E1                    5203 	pop	hl
      001683 7C                    5204 	ld	a, h
      001684 F8 03                 5205 	ldhl	sp,	#3
      001686 32                    5206 	ld	(hl-), a
      001687 2A                    5207 	ld	a, (hl+)
      001688 5F                    5208 	ld	e, a
      001689 56                    5209 	ld	d, (hl)
      00168A 1A                    5210 	ld	a, (de)
      00168B B7                    5211 	or	a, a
      00168C CAr0Cr19              5212 	jp	Z, 00121$
      00168F D1                    5213 	pop	de
      001690 D5                    5214 	push	de
      001691 21 09 00              5215 	ld	hl, #0x0009
      001694 19                    5216 	add	hl, de
      001695 E5                    5217 	push	hl
      001696 7D                    5218 	ld	a, l
      001697 F8 06                 5219 	ldhl	sp,	#6
      001699 77                    5220 	ld	(hl), a
      00169A E1                    5221 	pop	hl
      00169B 7C                    5222 	ld	a, h
      00169C F8 05                 5223 	ldhl	sp,	#5
      00169E 32                    5224 	ld	(hl-), a
      00169F 2A                    5225 	ld	a, (hl+)
      0016A0 5F                    5226 	ld	e, a
      0016A1 56                    5227 	ld	d, (hl)
      0016A2 1A                    5228 	ld	a, (de)
      0016A3 B7                    5229 	or	a, a
      0016A4 CAr0Cr19              5230 	jp	Z, 00121$
                                   5231 ;main.c:631: if (abs(eptr->x - playerDrawX) <= 8 ) {
      0016A7 D1                    5232 	pop	de
      0016A8 D5                    5233 	push	de
      0016A9 1A                    5234 	ld	a, (de)
      0016AA 21r4Br00              5235 	ld	hl, #_playerDrawX
      0016AD 46                    5236 	ld	b, (hl)
      0016AE 90                    5237 	sub	a, b
      0016AF 6F                    5238 	ld	l, a
                                   5239 ;	spillPairReg hl
                                   5240 ;	spillPairReg hl
                                   5241 ;main.c:294: if (value >= 0) return value;
      0016B0 CB 7D                 5242 	bit	7, l
      0016B2 28 03                 5243 	jr	Z, 00128$
                                   5244 ;main.c:295: else return - value;
      0016B4 AF                    5245 	xor	a, a
      0016B5 95                    5246 	sub	a, l
      0016B6 6F                    5247 	ld	l, a
                                   5248 ;	spillPairReg hl
                                   5249 ;	spillPairReg hl
                                   5250 ;main.c:631: if (abs(eptr->x - playerDrawX) <= 8 ) {
      0016B7                       5251 00128$:
      0016B7 5D                    5252 	ld	e, l
      0016B8 3E 08                 5253 	ld	a,#0x08
      0016BA 57                    5254 	ld	d,a
      0016BB 95                    5255 	sub	a, l
      0016BC CB 7B                 5256 	bit	7, e
      0016BE 28 07                 5257 	jr	Z, 00214$
      0016C0 CB 7A                 5258 	bit	7, d
      0016C2 20 08                 5259 	jr	NZ, 00215$
      0016C4 BF                    5260 	cp	a, a
      0016C5 18 05                 5261 	jr	00215$
      0016C7                       5262 00214$:
      0016C7 CB 7A                 5263 	bit	7, d
      0016C9 28 01                 5264 	jr	Z, 00215$
      0016CB 37                    5265 	scf
      0016CC                       5266 00215$:
      0016CC 38 69                 5267 	jr	C, 00104$
                                   5268 ;main.c:632: if (abs(eptr->y - playerDrawY) <= 8) {
      0016CE D1                    5269 	pop	de
      0016CF D5                    5270 	push	de
      0016D0 13                    5271 	inc	de
      0016D1 13                    5272 	inc	de
      0016D2 1A                    5273 	ld	a, (de)
      0016D3 21r4Cr00              5274 	ld	hl, #_playerDrawY
      0016D6 46                    5275 	ld	b, (hl)
      0016D7 90                    5276 	sub	a, b
      0016D8 6F                    5277 	ld	l, a
                                   5278 ;	spillPairReg hl
                                   5279 ;	spillPairReg hl
                                   5280 ;main.c:294: if (value >= 0) return value;
      0016D9 CB 7D                 5281 	bit	7, l
      0016DB 28 03                 5282 	jr	Z, 00132$
                                   5283 ;main.c:295: else return - value;
      0016DD AF                    5284 	xor	a, a
      0016DE 95                    5285 	sub	a, l
      0016DF 6F                    5286 	ld	l, a
                                   5287 ;	spillPairReg hl
                                   5288 ;	spillPairReg hl
                                   5289 ;main.c:632: if (abs(eptr->y - playerDrawY) <= 8) {
      0016E0                       5290 00132$:
      0016E0 5D                    5291 	ld	e, l
      0016E1 3E 08                 5292 	ld	a,#0x08
      0016E3 57                    5293 	ld	d,a
      0016E4 95                    5294 	sub	a, l
      0016E5 CB 7B                 5295 	bit	7, e
      0016E7 28 07                 5296 	jr	Z, 00216$
      0016E9 CB 7A                 5297 	bit	7, d
      0016EB 20 08                 5298 	jr	NZ, 00217$
      0016ED BF                    5299 	cp	a, a
      0016EE 18 05                 5300 	jr	00217$
      0016F0                       5301 00216$:
      0016F0 CB 7A                 5302 	bit	7, d
      0016F2 28 01                 5303 	jr	Z, 00217$
      0016F4 37                    5304 	scf
      0016F5                       5305 00217$:
      0016F5 38 40                 5306 	jr	C, 00104$
                                   5307 ;main.c:633: set_sprite_tile(0x30+i, 0x7f);
      0016F7 79                    5308 	ld	a, c
      0016F8 C6 30                 5309 	add	a, #0x30
      0016FA 47                    5310 	ld	b, a
                                   5311 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0016FB 11r00r00              5312 	ld	de, #_shadow_OAM+0
      0016FE 68                    5313 	ld	l, b
                                   5314 ;	spillPairReg hl
                                   5315 ;	spillPairReg hl
      0016FF 26 00                 5316 	ld	h, #0x00
                                   5317 ;	spillPairReg hl
                                   5318 ;	spillPairReg hl
      001701 29                    5319 	add	hl, hl
      001702 29                    5320 	add	hl, hl
      001703 19                    5321 	add	hl, de
      001704 23                    5322 	inc	hl
      001705 23                    5323 	inc	hl
      001706 36 7F                 5324 	ld	(hl), #0x7f
                                   5325 ;main.c:634: eptr->alive = 0;
      001708 F8 04                 5326 	ldhl	sp,	#4
      00170A 2A                    5327 	ld	a,	(hl+)
      00170B 66                    5328 	ld	h, (hl)
      00170C 6F                    5329 	ld	l, a
      00170D 36 00                 5330 	ld	(hl), #0x00
                                   5331 ;main.c:635: eptr->visible = 0;
      00170F F8 02                 5332 	ldhl	sp,	#2
      001711 2A                    5333 	ld	a,	(hl+)
      001712 66                    5334 	ld	h, (hl)
      001713 6F                    5335 	ld	l, a
      001714 36 00                 5336 	ld	(hl), #0x00
                                   5337 ;main.c:636: takeDamage(eptr->damage);
      001716 D1                    5338 	pop	de
      001717 D5                    5339 	push	de
      001718 21 0B 00              5340 	ld	hl, #0x000b
      00171B 19                    5341 	add	hl, de
      00171C 5D                    5342 	ld	e, l
      00171D 54                    5343 	ld	d, h
      00171E 1A                    5344 	ld	a, (de)
      00171F 16 00                 5345 	ld	d, #0x00
      001721 C5                    5346 	push	bc
      001722 5F                    5347 	ld	e, a
      001723 D5                    5348 	push	de
      001724 CDr0Er16              5349 	call	_takeDamage
      001727 E1                    5350 	pop	hl
      001728 AF                    5351 	xor	a, a
      001729 F5                    5352 	push	af
      00172A 33                    5353 	inc	sp
      00172B CDr0Ar10              5354 	call	_initEnemies
      00172E 33                    5355 	inc	sp
      00172F AF                    5356 	xor	a, a
      001730 F5                    5357 	push	af
      001731 33                    5358 	inc	sp
      001732 CDr50r0A              5359 	call	_playSound
      001735 33                    5360 	inc	sp
      001736 C1                    5361 	pop	bc
      001737                       5362 00104$:
                                   5363 ;main.c:644: struct Projectile *pptr = projectiles;
      001737 F8 14                 5364 	ldhl	sp,	#20
      001739 3Er50                 5365 	ld	a, #<(_projectiles)
      00173B 22                    5366 	ld	(hl+), a
      00173C 36s00                 5367 	ld	(hl), #>(_projectiles)
                                   5368 ;main.c:646: while (j < PROJECTILECOUNT) {
      00173E D1                    5369 	pop	de
      00173F D5                    5370 	push	de
      001740 21 02 00              5371 	ld	hl, #0x0002
      001743 19                    5372 	add	hl, de
      001744 E5                    5373 	push	hl
      001745 7D                    5374 	ld	a, l
      001746 F8 08                 5375 	ldhl	sp,	#8
      001748 77                    5376 	ld	(hl), a
      001749 E1                    5377 	pop	hl
      00174A 7C                    5378 	ld	a, h
      00174B F8 07                 5379 	ldhl	sp,	#7
      00174D 77                    5380 	ld	(hl), a
      00174E D1                    5381 	pop	de
      00174F D5                    5382 	push	de
      001750 21 08 00              5383 	ld	hl, #0x0008
      001753 19                    5384 	add	hl, de
      001754 E5                    5385 	push	hl
      001755 7D                    5386 	ld	a, l
      001756 F8 0A                 5387 	ldhl	sp,	#10
      001758 77                    5388 	ld	(hl), a
      001759 E1                    5389 	pop	hl
      00175A 7C                    5390 	ld	a, h
      00175B F8 09                 5391 	ldhl	sp,	#9
      00175D 77                    5392 	ld	(hl), a
      00175E F8 16                 5393 	ldhl	sp,	#22
      001760 36 00                 5394 	ld	(hl), #0x00
      001762                       5395 00113$:
      001762 21rCDr06              5396 	ld	hl, #_PROJECTILECOUNT
      001765 46                    5397 	ld	b, (hl)
      001766 F8 16                 5398 	ldhl	sp,	#22
      001768 7E                    5399 	ld	a, (hl)
      001769 90                    5400 	sub	a, b
      00176A D2r0Cr19              5401 	jp	NC, 00121$
                                   5402 ;main.c:647: if (pptr->active) {
      00176D 2B                    5403 	dec	hl
      00176E 2B                    5404 	dec	hl
      00176F 2A                    5405 	ld	a, (hl+)
      001770 5F                    5406 	ld	e, a
      001771 56                    5407 	ld	d, (hl)
      001772 21 08 00              5408 	ld	hl, #0x0008
      001775 19                    5409 	add	hl, de
      001776 E5                    5410 	push	hl
      001777 7D                    5411 	ld	a, l
      001778 F8 0C                 5412 	ldhl	sp,	#12
      00177A 77                    5413 	ld	(hl), a
      00177B E1                    5414 	pop	hl
      00177C 7C                    5415 	ld	a, h
      00177D F8 0B                 5416 	ldhl	sp,	#11
      00177F 32                    5417 	ld	(hl-), a
      001780 2A                    5418 	ld	a, (hl+)
      001781 5F                    5419 	ld	e, a
      001782 56                    5420 	ld	d, (hl)
      001783 1A                    5421 	ld	a, (de)
      001784 B7                    5422 	or	a, a
      001785 CArF3r18              5423 	jp	Z, 00112$
                                   5424 ;main.c:648: if (eptr->x > pptr->x - 8 && eptr->x - (8>>(eptr->spriteCount-1)) < pptr->x) {
      001788 D1                    5425 	pop	de
      001789 D5                    5426 	push	de
      00178A 1A                    5427 	ld	a, (de)
      00178B F8 12                 5428 	ldhl	sp,	#18
      00178D 22                    5429 	ld	(hl+), a
      00178E 13                    5430 	inc	de
      00178F 1A                    5431 	ld	a, (de)
      001790 22                    5432 	ld	(hl+), a
      001791 2A                    5433 	ld	a, (hl+)
      001792 5F                    5434 	ld	e, a
      001793 56                    5435 	ld	d, (hl)
      001794 1A                    5436 	ld	a, (de)
      001795 F8 10                 5437 	ldhl	sp,	#16
      001797 22                    5438 	ld	(hl+), a
      001798 13                    5439 	inc	de
      001799 1A                    5440 	ld	a, (de)
      00179A 32                    5441 	ld	(hl-), a
      00179B 2A                    5442 	ld	a, (hl+)
      00179C 46                    5443 	ld	b, (hl)
      00179D 5F                    5444 	ld	e, a
      00179E 50                    5445 	ld	d, b
      00179F 21 08 00              5446 	ld	hl, #0x0008
      0017A2 7B                    5447 	ld	a, e
      0017A3 95                    5448 	sub	a, l
      0017A4 5F                    5449 	ld	e, a
      0017A5 7A                    5450 	ld	a, d
      0017A6 9C                    5451 	sbc	a, h
      0017A7 F8 0F                 5452 	ldhl	sp,	#15
      0017A9 32                    5453 	ld	(hl-), a
      0017AA 73                    5454 	ld	(hl), e
      0017AB F8 0E                 5455 	ldhl	sp,	#14
      0017AD 5D                    5456 	ld	e, l
      0017AE 54                    5457 	ld	d, h
      0017AF F8 12                 5458 	ldhl	sp,	#18
      0017B1 1A                    5459 	ld	a, (de)
      0017B2 13                    5460 	inc	de
      0017B3 96                    5461 	sub	a, (hl)
      0017B4 23                    5462 	inc	hl
      0017B5 1A                    5463 	ld	a, (de)
      0017B6 9E                    5464 	sbc	a, (hl)
      0017B7 1A                    5465 	ld	a, (de)
      0017B8 57                    5466 	ld	d, a
      0017B9 CB 7E                 5467 	bit	7, (hl)
      0017BB 28 07                 5468 	jr	Z, 00218$
      0017BD CB 7A                 5469 	bit	7, d
      0017BF 20 08                 5470 	jr	NZ, 00219$
      0017C1 BF                    5471 	cp	a, a
      0017C2 18 05                 5472 	jr	00219$
      0017C4                       5473 00218$:
      0017C4 CB 7A                 5474 	bit	7, d
      0017C6 28 01                 5475 	jr	Z, 00219$
      0017C8 37                    5476 	scf
      0017C9                       5477 00219$:
      0017C9 D2rF3r18              5478 	jp	NC, 00112$
      0017CC F8 08                 5479 	ldhl	sp,#8
      0017CE 2A                    5480 	ld	a, (hl+)
      0017CF 5F                    5481 	ld	e, a
      0017D0 56                    5482 	ld	d, (hl)
      0017D1 1A                    5483 	ld	a, (de)
      0017D2 47                    5484 	ld	b, a
      0017D3 05                    5485 	dec	b
      0017D4 F8 0C                 5486 	ldhl	sp,	#12
      0017D6 3E 08                 5487 	ld	a, #0x08
      0017D8 22                    5488 	ld	(hl+), a
      0017D9 AF                    5489 	xor	a, a
      0017DA 77                    5490 	ld	(hl), a
      0017DB 04                    5491 	inc	b
      0017DC 18 07                 5492 	jr	00221$
      0017DE                       5493 00220$:
      0017DE F8 0D                 5494 	ldhl	sp,	#13
      0017E0 CB 2E                 5495 	sra	(hl)
      0017E2 2B                    5496 	dec	hl
      0017E3 CB 1E                 5497 	rr	(hl)
      0017E5                       5498 00221$:
      0017E5 05                    5499 	dec	b
      0017E6 20 F6                 5500 	jr	NZ, 00220$
      0017E8 F8 12                 5501 	ldhl	sp,#18
      0017EA 2A                    5502 	ld	a, (hl+)
      0017EB 5F                    5503 	ld	e, a
      0017EC 56                    5504 	ld	d, (hl)
      0017ED F8 0C                 5505 	ldhl	sp,	#12
      0017EF 2A                    5506 	ld	a,	(hl+)
      0017F0 66                    5507 	ld	h, (hl)
      0017F1 6F                    5508 	ld	l, a
      0017F2 7B                    5509 	ld	a, e
      0017F3 95                    5510 	sub	a, l
      0017F4 5F                    5511 	ld	e, a
      0017F5 7A                    5512 	ld	a, d
      0017F6 9C                    5513 	sbc	a, h
      0017F7 43                    5514 	ld	b, e
      0017F8 F8 12                 5515 	ldhl	sp,	#18
      0017FA 70                    5516 	ld	(hl), b
      0017FB 23                    5517 	inc	hl
      0017FC 77                    5518 	ld	(hl), a
      0017FD F8 12                 5519 	ldhl	sp,	#18
      0017FF 5D                    5520 	ld	e, l
      001800 54                    5521 	ld	d, h
      001801 F8 10                 5522 	ldhl	sp,	#16
      001803 1A                    5523 	ld	a, (de)
      001804 13                    5524 	inc	de
      001805 96                    5525 	sub	a, (hl)
      001806 23                    5526 	inc	hl
      001807 1A                    5527 	ld	a, (de)
      001808 9E                    5528 	sbc	a, (hl)
      001809 1A                    5529 	ld	a, (de)
      00180A 57                    5530 	ld	d, a
      00180B CB 7E                 5531 	bit	7, (hl)
      00180D 28 07                 5532 	jr	Z, 00222$
      00180F CB 7A                 5533 	bit	7, d
      001811 20 08                 5534 	jr	NZ, 00223$
      001813 BF                    5535 	cp	a, a
      001814 18 05                 5536 	jr	00223$
      001816                       5537 00222$:
      001816 CB 7A                 5538 	bit	7, d
      001818 28 01                 5539 	jr	Z, 00223$
      00181A 37                    5540 	scf
      00181B                       5541 00223$:
      00181B D2rF3r18              5542 	jp	NC, 00112$
                                   5543 ;main.c:649: if (eptr->y > pptr->y - 8 && eptr->y -(8>>(eptr->spriteCount-1)) < pptr->y ) {
      00181E F8 06                 5544 	ldhl	sp,#6
      001820 2A                    5545 	ld	a, (hl+)
      001821 5F                    5546 	ld	e, a
      001822 56                    5547 	ld	d, (hl)
      001823 1A                    5548 	ld	a, (de)
      001824 F8 12                 5549 	ldhl	sp,	#18
      001826 22                    5550 	ld	(hl+), a
      001827 13                    5551 	inc	de
      001828 1A                    5552 	ld	a, (de)
      001829 22                    5553 	ld	(hl+), a
      00182A 2A                    5554 	ld	a, (hl+)
      00182B 66                    5555 	ld	h, (hl)
                                   5556 ;	spillPairReg hl
                                   5557 ;	spillPairReg hl
      00182C 6F                    5558 	ld	l, a
                                   5559 ;	spillPairReg hl
                                   5560 ;	spillPairReg hl
      00182D 23                    5561 	inc	hl
      00182E 23                    5562 	inc	hl
      00182F 5D                    5563 	ld	e, l
      001830 54                    5564 	ld	d, h
      001831 1A                    5565 	ld	a, (de)
      001832 F8 0E                 5566 	ldhl	sp,	#14
      001834 22                    5567 	ld	(hl+), a
      001835 13                    5568 	inc	de
      001836 1A                    5569 	ld	a, (de)
      001837 77                    5570 	ld	(hl), a
      001838 F8 0E                 5571 	ldhl	sp,	#14
      00183A 2A                    5572 	ld	a, (hl+)
      00183B 46                    5573 	ld	b, (hl)
      00183C 5F                    5574 	ld	e, a
      00183D 50                    5575 	ld	d, b
      00183E 21 08 00              5576 	ld	hl, #0x0008
      001841 7B                    5577 	ld	a, e
      001842 95                    5578 	sub	a, l
      001843 5F                    5579 	ld	e, a
      001844 7A                    5580 	ld	a, d
      001845 9C                    5581 	sbc	a, h
      001846 F8 11                 5582 	ldhl	sp,	#17
      001848 32                    5583 	ld	(hl-), a
      001849 73                    5584 	ld	(hl), e
      00184A F8 10                 5585 	ldhl	sp,	#16
      00184C 5D                    5586 	ld	e, l
      00184D 54                    5587 	ld	d, h
      00184E F8 12                 5588 	ldhl	sp,	#18
      001850 1A                    5589 	ld	a, (de)
      001851 13                    5590 	inc	de
      001852 96                    5591 	sub	a, (hl)
      001853 23                    5592 	inc	hl
      001854 1A                    5593 	ld	a, (de)
      001855 9E                    5594 	sbc	a, (hl)
      001856 1A                    5595 	ld	a, (de)
      001857 57                    5596 	ld	d, a
      001858 CB 7E                 5597 	bit	7, (hl)
      00185A 28 07                 5598 	jr	Z, 00224$
      00185C CB 7A                 5599 	bit	7, d
      00185E 20 08                 5600 	jr	NZ, 00225$
      001860 BF                    5601 	cp	a, a
      001861 18 05                 5602 	jr	00225$
      001863                       5603 00224$:
      001863 CB 7A                 5604 	bit	7, d
      001865 28 01                 5605 	jr	Z, 00225$
      001867 37                    5606 	scf
      001868                       5607 00225$:
      001868 D2rF3r18              5608 	jp	NC, 00112$
      00186B F8 12                 5609 	ldhl	sp,#18
      00186D 2A                    5610 	ld	a, (hl+)
      00186E 5F                    5611 	ld	e, a
      00186F 56                    5612 	ld	d, (hl)
      001870 F8 0C                 5613 	ldhl	sp,	#12
      001872 2A                    5614 	ld	a,	(hl+)
      001873 66                    5615 	ld	h, (hl)
      001874 6F                    5616 	ld	l, a
      001875 7B                    5617 	ld	a, e
      001876 95                    5618 	sub	a, l
      001877 5F                    5619 	ld	e, a
      001878 7A                    5620 	ld	a, d
      001879 9C                    5621 	sbc	a, h
      00187A 43                    5622 	ld	b, e
      00187B F8 12                 5623 	ldhl	sp,	#18
      00187D 70                    5624 	ld	(hl), b
      00187E 23                    5625 	inc	hl
      00187F 77                    5626 	ld	(hl), a
      001880 F8 12                 5627 	ldhl	sp,	#18
      001882 5D                    5628 	ld	e, l
      001883 54                    5629 	ld	d, h
      001884 F8 0E                 5630 	ldhl	sp,	#14
      001886 1A                    5631 	ld	a, (de)
      001887 13                    5632 	inc	de
      001888 96                    5633 	sub	a, (hl)
      001889 23                    5634 	inc	hl
      00188A 1A                    5635 	ld	a, (de)
      00188B 9E                    5636 	sbc	a, (hl)
      00188C 1A                    5637 	ld	a, (de)
      00188D 57                    5638 	ld	d, a
      00188E CB 7E                 5639 	bit	7, (hl)
      001890 28 07                 5640 	jr	Z, 00226$
      001892 CB 7A                 5641 	bit	7, d
      001894 20 08                 5642 	jr	NZ, 00227$
      001896 BF                    5643 	cp	a, a
      001897 18 05                 5644 	jr	00227$
      001899                       5645 00226$:
      001899 CB 7A                 5646 	bit	7, d
      00189B 28 01                 5647 	jr	Z, 00227$
      00189D 37                    5648 	scf
      00189E                       5649 00227$:
      00189E 30 53                 5650 	jr	NC, 00112$
                                   5651 ;main.c:650: set_sprite_tile(0x30+i, 0x7f);
      0018A0 79                    5652 	ld	a, c
      0018A1 C6 30                 5653 	add	a, #0x30
      0018A3 47                    5654 	ld	b, a
                                   5655 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0018A4 26 00                 5656 	ld	h, #0x00
                                   5657 ;	spillPairReg hl
                                   5658 ;	spillPairReg hl
      0018A6 68                    5659 	ld	l, b
      0018A7 29                    5660 	add	hl, hl
      0018A8 29                    5661 	add	hl, hl
      0018A9 11r00r00              5662 	ld	de, #_shadow_OAM
      0018AC 19                    5663 	add	hl, de
      0018AD 23                    5664 	inc	hl
      0018AE 23                    5665 	inc	hl
      0018AF 36 7F                 5666 	ld	(hl), #0x7f
                                   5667 ;main.c:651: eptr->alive = 0;
      0018B1 F8 04                 5668 	ldhl	sp,	#4
      0018B3 2A                    5669 	ld	a,	(hl+)
      0018B4 66                    5670 	ld	h, (hl)
      0018B5 6F                    5671 	ld	l, a
      0018B6 36 00                 5672 	ld	(hl), #0x00
                                   5673 ;main.c:652: eptr->visible = 0;
      0018B8 F8 02                 5674 	ldhl	sp,	#2
      0018BA 2A                    5675 	ld	a,	(hl+)
      0018BB 66                    5676 	ld	h, (hl)
      0018BC 6F                    5677 	ld	l, a
      0018BD 36 00                 5678 	ld	(hl), #0x00
                                   5679 ;main.c:653: initEnemies(0);
      0018BF C5                    5680 	push	bc
      0018C0 AF                    5681 	xor	a, a
      0018C1 F5                    5682 	push	af
      0018C2 33                    5683 	inc	sp
      0018C3 CDr0Ar10              5684 	call	_initEnemies
      0018C6 33                    5685 	inc	sp
      0018C7 C1                    5686 	pop	bc
                                   5687 ;main.c:654: set_sprite_tile(20+j, 0x7f);
      0018C8 F8 16                 5688 	ldhl	sp,	#22
      0018CA 7E                    5689 	ld	a, (hl)
      0018CB C6 14                 5690 	add	a, #0x14
      0018CD 47                    5691 	ld	b, a
                                   5692 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0018CE 68                    5693 	ld	l, b
                                   5694 ;	spillPairReg hl
                                   5695 ;	spillPairReg hl
      0018CF 26 00                 5696 	ld	h, #0x00
                                   5697 ;	spillPairReg hl
                                   5698 ;	spillPairReg hl
      0018D1 29                    5699 	add	hl, hl
      0018D2 29                    5700 	add	hl, hl
      0018D3 11r00r00              5701 	ld	de, #_shadow_OAM
      0018D6 19                    5702 	add	hl, de
      0018D7 23                    5703 	inc	hl
      0018D8 23                    5704 	inc	hl
      0018D9 36 7F                 5705 	ld	(hl), #0x7f
                                   5706 ;main.c:655: playSound(0);
      0018DB C5                    5707 	push	bc
      0018DC AF                    5708 	xor	a, a
      0018DD F5                    5709 	push	af
      0018DE 33                    5710 	inc	sp
      0018DF CDr50r0A              5711 	call	_playSound
      0018E2 33                    5712 	inc	sp
      0018E3 C1                    5713 	pop	bc
                                   5714 ;main.c:656: pptr->active = 0;
      0018E4 F8 0A                 5715 	ldhl	sp,	#10
      0018E6 2A                    5716 	ld	a,	(hl+)
      0018E7 66                    5717 	ld	h, (hl)
      0018E8 6F                    5718 	ld	l, a
      0018E9 36 00                 5719 	ld	(hl), #0x00
                                   5720 ;main.c:657: incrementScore();
      0018EB C5                    5721 	push	bc
      0018EC CDr0Dr08              5722 	call	_incrementScore
      0018EF CDrE3r07              5723 	call	_updateScore
      0018F2 C1                    5724 	pop	bc
      0018F3                       5725 00112$:
                                   5726 ;main.c:662: j++;
      0018F3 F8 16                 5727 	ldhl	sp,	#22
      0018F5 34                    5728 	inc	(hl)
                                   5729 ;main.c:663: pptr++;
      0018F6 2B                    5730 	dec	hl
      0018F7 2B                    5731 	dec	hl
      0018F8 2A                    5732 	ld	a, (hl+)
      0018F9 5F                    5733 	ld	e, a
      0018FA 56                    5734 	ld	d, (hl)
      0018FB 21 0B 00              5735 	ld	hl, #0x000b
      0018FE 19                    5736 	add	hl, de
      0018FF E5                    5737 	push	hl
      001900 7D                    5738 	ld	a, l
      001901 F8 16                 5739 	ldhl	sp,	#22
      001903 77                    5740 	ld	(hl), a
      001904 E1                    5741 	pop	hl
      001905 7C                    5742 	ld	a, h
      001906 F8 15                 5743 	ldhl	sp,	#21
      001908 77                    5744 	ld	(hl), a
      001909 C3r62r17              5745 	jp	00113$
                                   5746 ;main.c:666: break;
      00190C                       5747 00121$:
                                   5748 ;main.c:669: if (enemyCollisionCount == 0) {
      00190C FAr55r00              5749 	ld	a, (#_enemyCollisionCount)
      00190F B7                    5750 	or	a, a
      001910 20 09                 5751 	jr	NZ, 00123$
                                   5752 ;main.c:670: enemyCollisionCount = ENEMYCOUNT - 1;
      001912 FArBCr06              5753 	ld	a, (#_ENEMYCOUNT)
      001915 3D                    5754 	dec	a
      001916 EAr55r00              5755 	ld	(#_enemyCollisionCount),a
      001919 18 04                 5756 	jr	00136$
      00191B                       5757 00123$:
                                   5758 ;main.c:673: enemyCollisionCount--;
      00191B 21r55r00              5759 	ld	hl, #_enemyCollisionCount
      00191E 35                    5760 	dec	(hl)
      00191F                       5761 00136$:
                                   5762 ;main.c:678: }
      00191F E8 17                 5763 	add	sp, #23
      001921 C9                    5764 	ret
                                   5765 ;main.c:681: void setGunIcon() {
                                   5766 ;	---------------------------------
                                   5767 ; Function setGunIcon
                                   5768 ; ---------------------------------
      001922                       5769 _setGunIcon::
                                   5770 ;main.c:684: set_win_tiles(15, 0,1,1,gunMap+currentGun);
      001922 01r58r00              5771 	ld	bc, #_gunMap+0
      001925 79                    5772 	ld	a, c
      001926 21r56r00              5773 	ld	hl, #_currentGun
      001929 86                    5774 	add	a, (hl)
      00192A 4F                    5775 	ld	c, a
      00192B 30 01                 5776 	jr	NC, 00103$
      00192D 04                    5777 	inc	b
      00192E                       5778 00103$:
      00192E C5                    5779 	push	bc
      00192F 21 01 01              5780 	ld	hl, #0x101
      001932 E5                    5781 	push	hl
      001933 21 0F 00              5782 	ld	hl, #0x0f
      001936 E5                    5783 	push	hl
      001937 CDr00r00              5784 	call	_set_win_tiles
      00193A E8 06                 5785 	add	sp, #6
                                   5786 ;main.c:686: }
      00193C C9                    5787 	ret
                                   5788 ;main.c:696: void fire() {
                                   5789 ;	---------------------------------
                                   5790 ; Function fire
                                   5791 ; ---------------------------------
      00193D                       5792 _fire::
                                   5793 ;main.c:698: oldestProjectile += 1;
      00193D 21r41r00              5794 	ld	hl, #_oldestProjectile
      001940 34                    5795 	inc	(hl)
      001941 7E                    5796 	ld	a, (hl)
                                   5797 ;main.c:699: if (oldestProjectile >= PROJECTILECOUNT) {
      001942 21rCDr06              5798 	ld	hl, #_PROJECTILECOUNT
      001945 4E                    5799 	ld	c, (hl)
      001946 21r41r00              5800 	ld	hl, #_oldestProjectile
      001949 7E                    5801 	ld	a, (hl)
      00194A 91                    5802 	sub	a, c
      00194B 38 02                 5803 	jr	C, 00102$
                                   5804 ;main.c:700: oldestProjectile = 0;
      00194D 36 00                 5805 	ld	(hl), #0x00
      00194F                       5806 00102$:
                                   5807 ;main.c:703: if (currentGun == 0) {
      00194F FAr56r00              5808 	ld	a, (#_currentGun)
      001952 B7                    5809 	or	a, a
      001953 20 1F                 5810 	jr	NZ, 00104$
                                   5811 ;main.c:704: projectiles[oldestProjectile] = singleGun;
      001955 21r41r00              5812 	ld	hl, #_oldestProjectile
      001958 4E                    5813 	ld	c, (hl)
      001959 06 00                 5814 	ld	b, #0x00
      00195B 69                    5815 	ld	l, c
      00195C 60                    5816 	ld	h, b
      00195D 29                    5817 	add	hl, hl
      00195E 29                    5818 	add	hl, hl
      00195F 09                    5819 	add	hl, bc
      001960 29                    5820 	add	hl, hl
      001961 09                    5821 	add	hl, bc
      001962 01r50r00              5822 	ld	bc,#_projectiles
      001965 09                    5823 	add	hl,bc
      001966 11 0B 00              5824 	ld	de, #0x000b
      001969 D5                    5825 	push	de
      00196A 11r20r00              5826 	ld	de, #_singleGun
      00196D D5                    5827 	push	de
      00196E E5                    5828 	push	hl
      00196F CDr00r00              5829 	call	___memcpy
      001972 E8 06                 5830 	add	sp, #6
      001974                       5831 00104$:
                                   5832 ;main.c:706: if (currentGun == 1) {
      001974 FAr56r00              5833 	ld	a, (#_currentGun)
      001977 3D                    5834 	dec	a
      001978 20 1F                 5835 	jr	NZ, 00106$
                                   5836 ;main.c:707: projectiles[oldestProjectile] = doubleGun;
      00197A 21r41r00              5837 	ld	hl, #_oldestProjectile
      00197D 4E                    5838 	ld	c, (hl)
      00197E 06 00                 5839 	ld	b, #0x00
      001980 69                    5840 	ld	l, c
      001981 60                    5841 	ld	h, b
      001982 29                    5842 	add	hl, hl
      001983 29                    5843 	add	hl, hl
      001984 09                    5844 	add	hl, bc
      001985 29                    5845 	add	hl, hl
      001986 09                    5846 	add	hl, bc
      001987 01r50r00              5847 	ld	bc,#_projectiles
      00198A 09                    5848 	add	hl,bc
      00198B 11 0B 00              5849 	ld	de, #0x000b
      00198E D5                    5850 	push	de
      00198F 11r2Br00              5851 	ld	de, #_doubleGun
      001992 D5                    5852 	push	de
      001993 E5                    5853 	push	hl
      001994 CDr00r00              5854 	call	___memcpy
      001997 E8 06                 5855 	add	sp, #6
      001999                       5856 00106$:
                                   5857 ;main.c:709: if (currentGun == 2) {
      001999 FAr56r00              5858 	ld	a, (#_currentGun)
      00199C D6 02                 5859 	sub	a, #0x02
      00199E 20 1F                 5860 	jr	NZ, 00108$
                                   5861 ;main.c:710: projectiles[oldestProjectile] = missile;
      0019A0 21r41r00              5862 	ld	hl, #_oldestProjectile
      0019A3 4E                    5863 	ld	c, (hl)
      0019A4 06 00                 5864 	ld	b, #0x00
      0019A6 69                    5865 	ld	l, c
      0019A7 60                    5866 	ld	h, b
      0019A8 29                    5867 	add	hl, hl
      0019A9 29                    5868 	add	hl, hl
      0019AA 09                    5869 	add	hl, bc
      0019AB 29                    5870 	add	hl, hl
      0019AC 09                    5871 	add	hl, bc
      0019AD 01r50r00              5872 	ld	bc,#_projectiles
      0019B0 09                    5873 	add	hl,bc
      0019B1 11 0B 00              5874 	ld	de, #0x000b
      0019B4 D5                    5875 	push	de
      0019B5 11r36r00              5876 	ld	de, #_missile
      0019B8 D5                    5877 	push	de
      0019B9 E5                    5878 	push	hl
      0019BA CDr00r00              5879 	call	___memcpy
      0019BD E8 06                 5880 	add	sp, #6
      0019BF                       5881 00108$:
                                   5882 ;main.c:712: projectiles[oldestProjectile].x = playerDrawX;
      0019BF 21r41r00              5883 	ld	hl, #_oldestProjectile
      0019C2 4E                    5884 	ld	c, (hl)
      0019C3 06 00                 5885 	ld	b, #0x00
      0019C5 69                    5886 	ld	l, c
      0019C6 60                    5887 	ld	h, b
      0019C7 29                    5888 	add	hl, hl
      0019C8 29                    5889 	add	hl, hl
      0019C9 09                    5890 	add	hl, bc
      0019CA 29                    5891 	add	hl, hl
      0019CB 09                    5892 	add	hl, bc
      0019CC 01r50r00              5893 	ld	bc,#_projectiles
      0019CF 09                    5894 	add	hl,bc
      0019D0 E5                    5895 	push	hl
      0019D1 FAr4Br00              5896 	ld	a, (#_playerDrawX)
      0019D4 E1                    5897 	pop	hl
      0019D5 0E 00                 5898 	ld	c, #0x00
      0019D7 22                    5899 	ld	(hl+), a
      0019D8 71                    5900 	ld	(hl), c
                                   5901 ;main.c:713: projectiles[oldestProjectile].y = playerDrawY;
      0019D9 21r41r00              5902 	ld	hl, #_oldestProjectile
      0019DC 4E                    5903 	ld	c, (hl)
      0019DD 06 00                 5904 	ld	b, #0x00
      0019DF 69                    5905 	ld	l, c
      0019E0 60                    5906 	ld	h, b
      0019E1 29                    5907 	add	hl, hl
      0019E2 29                    5908 	add	hl, hl
      0019E3 09                    5909 	add	hl, bc
      0019E4 29                    5910 	add	hl, hl
      0019E5 09                    5911 	add	hl, bc
      0019E6 01r50r00              5912 	ld	bc,#_projectiles
      0019E9 09                    5913 	add	hl,bc
      0019EA 23                    5914 	inc	hl
      0019EB 23                    5915 	inc	hl
      0019EC E5                    5916 	push	hl
      0019ED FAr4Cr00              5917 	ld	a, (#_playerDrawY)
      0019F0 E1                    5918 	pop	hl
      0019F1 0E 00                 5919 	ld	c, #0x00
      0019F3 22                    5920 	ld	(hl+), a
      0019F4 71                    5921 	ld	(hl), c
                                   5922 ;main.c:714: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      0019F5 21r41r00              5923 	ld	hl, #_oldestProjectile
      0019F8 4E                    5924 	ld	c, (hl)
      0019F9 06 00                 5925 	ld	b, #0x00
      0019FB 69                    5926 	ld	l, c
      0019FC 60                    5927 	ld	h, b
      0019FD 29                    5928 	add	hl, hl
      0019FE 29                    5929 	add	hl, hl
      0019FF 09                    5930 	add	hl, bc
      001A00 29                    5931 	add	hl, hl
      001A01 09                    5932 	add	hl, bc
      001A02 01r50r00              5933 	ld	bc,#_projectiles
      001A05 09                    5934 	add	hl,bc
      001A06 5D                    5935 	ld	e, l
      001A07 54                    5936 	ld	d, h
      001A08 21 04 00              5937 	ld	hl, #0x0004
      001A0B 19                    5938 	add	hl, de
      001A0C 4D                    5939 	ld	c, l
      001A0D 44                    5940 	ld	b, h
      001A0E 21 06 00              5941 	ld	hl, #0x0006
      001A11 19                    5942 	add	hl, de
      001A12 7E                    5943 	ld	a, (hl)
      001A13 C5                    5944 	push	bc
      001A14 F5                    5945 	push	af
      001A15 33                    5946 	inc	sp
      001A16 FAr43r00              5947 	ld	a, (#_xDir)
      001A19 F5                    5948 	push	af
      001A1A 33                    5949 	inc	sp
      001A1B CDr00r00              5950 	call	__muluschar
      001A1E E1                    5951 	pop	hl
      001A1F 7B                    5952 	ld	a, e
      001A20 C1                    5953 	pop	bc
      001A21 02                    5954 	ld	(bc), a
                                   5955 ;main.c:715: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      001A22 21r41r00              5956 	ld	hl, #_oldestProjectile
      001A25 4E                    5957 	ld	c, (hl)
      001A26 06 00                 5958 	ld	b, #0x00
      001A28 69                    5959 	ld	l, c
      001A29 60                    5960 	ld	h, b
      001A2A 29                    5961 	add	hl, hl
      001A2B 29                    5962 	add	hl, hl
      001A2C 09                    5963 	add	hl, bc
      001A2D 29                    5964 	add	hl, hl
      001A2E 09                    5965 	add	hl, bc
      001A2F 01r50r00              5966 	ld	bc,#_projectiles
      001A32 09                    5967 	add	hl,bc
      001A33 5D                    5968 	ld	e, l
      001A34 54                    5969 	ld	d, h
      001A35 21 05 00              5970 	ld	hl, #0x0005
      001A38 19                    5971 	add	hl, de
      001A39 4D                    5972 	ld	c, l
      001A3A 44                    5973 	ld	b, h
      001A3B 21 06 00              5974 	ld	hl, #0x0006
      001A3E 19                    5975 	add	hl, de
      001A3F 7E                    5976 	ld	a, (hl)
      001A40 C5                    5977 	push	bc
      001A41 F5                    5978 	push	af
      001A42 33                    5979 	inc	sp
      001A43 FAr44r00              5980 	ld	a, (#_yDir)
      001A46 F5                    5981 	push	af
      001A47 33                    5982 	inc	sp
      001A48 CDr00r00              5983 	call	__muluschar
      001A4B E1                    5984 	pop	hl
      001A4C 7B                    5985 	ld	a, e
      001A4D C1                    5986 	pop	bc
      001A4E 02                    5987 	ld	(bc), a
                                   5988 ;main.c:719: set_sprite_tile(20+oldestProjectile, projectiles[oldestProjectile].type);
      001A4F 21r41r00              5989 	ld	hl, #_oldestProjectile
      001A52 4E                    5990 	ld	c, (hl)
      001A53 06 00                 5991 	ld	b, #0x00
      001A55 69                    5992 	ld	l, c
      001A56 60                    5993 	ld	h, b
      001A57 29                    5994 	add	hl, hl
      001A58 29                    5995 	add	hl, hl
      001A59 09                    5996 	add	hl, bc
      001A5A 29                    5997 	add	hl, hl
      001A5B 09                    5998 	add	hl, bc
      001A5C 01r50r00              5999 	ld	bc,#_projectiles
      001A5F 09                    6000 	add	hl,bc
      001A60 01 0A 00              6001 	ld	bc, #0x000a
      001A63 09                    6002 	add	hl, bc
      001A64 4E                    6003 	ld	c, (hl)
      001A65 FAr41r00              6004 	ld	a, (#_oldestProjectile)
      001A68 C6 14                 6005 	add	a, #0x14
                                   6006 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001A6A 6F                    6007 	ld	l, a
      001A6B 11r00r00              6008 	ld	de, #_shadow_OAM+0
                                   6009 ;	spillPairReg hl
                                   6010 ;	spillPairReg hl
      001A6E 26 00                 6011 	ld	h, #0x00
                                   6012 ;	spillPairReg hl
                                   6013 ;	spillPairReg hl
      001A70 29                    6014 	add	hl, hl
      001A71 29                    6015 	add	hl, hl
      001A72 19                    6016 	add	hl, de
      001A73 23                    6017 	inc	hl
      001A74 23                    6018 	inc	hl
      001A75 71                    6019 	ld	(hl), c
                                   6020 ;main.c:724: fireCooldown = projectiles[oldestProjectile].delay;
      001A76 21r41r00              6021 	ld	hl, #_oldestProjectile
      001A79 4E                    6022 	ld	c, (hl)
      001A7A 06 00                 6023 	ld	b, #0x00
      001A7C 69                    6024 	ld	l, c
      001A7D 60                    6025 	ld	h, b
      001A7E 29                    6026 	add	hl, hl
      001A7F 29                    6027 	add	hl, hl
      001A80 09                    6028 	add	hl, bc
      001A81 29                    6029 	add	hl, hl
      001A82 09                    6030 	add	hl, bc
      001A83 01r50r00              6031 	ld	bc,#_projectiles
      001A86 09                    6032 	add	hl,bc
      001A87 4D                    6033 	ld	c, l
      001A88 44                    6034 	ld	b, h
      001A89 21 09 00              6035 	ld	hl, #0x0009
      001A8C 09                    6036 	add	hl, bc
      001A8D 7E                    6037 	ld	a, (hl)
      001A8E EAr42r00              6038 	ld	(#_fireCooldown),a
                                   6039 ;main.c:726: playSound(projectiles[oldestProjectile].type);
      001A91 21 0A 00              6040 	ld	hl, #0x000a
      001A94 09                    6041 	add	hl, bc
      001A95 7E                    6042 	ld	a, (hl)
      001A96 F5                    6043 	push	af
      001A97 33                    6044 	inc	sp
      001A98 CDr50r0A              6045 	call	_playSound
      001A9B 33                    6046 	inc	sp
                                   6047 ;main.c:730: }
      001A9C C9                    6048 	ret
                                   6049 ;main.c:733: void moveProjectiles() {
                                   6050 ;	---------------------------------
                                   6051 ; Function moveProjectiles
                                   6052 ; ---------------------------------
      001A9D                       6053 _moveProjectiles::
      001A9D E8 F9                 6054 	add	sp, #-7
                                   6055 ;main.c:734: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001A9F F8 06                 6056 	ldhl	sp,	#6
      001AA1 36 00                 6057 	ld	(hl), #0x00
      001AA3                       6058 00112$:
      001AA3 21rCDr06              6059 	ld	hl, #_PROJECTILECOUNT
      001AA6 4E                    6060 	ld	c, (hl)
      001AA7 F8 06                 6061 	ldhl	sp,	#6
      001AA9 7E                    6062 	ld	a, (hl)
      001AAA 91                    6063 	sub	a, c
      001AAB D2rEFr1B              6064 	jp	NC, 00114$
                                   6065 ;main.c:735: projectiles[i].x -= xOverflow;
      001AAE 4E                    6066 	ld	c, (hl)
      001AAF 06 00                 6067 	ld	b, #0x00
      001AB1 69                    6068 	ld	l, c
      001AB2 60                    6069 	ld	h, b
      001AB3 29                    6070 	add	hl, hl
      001AB4 29                    6071 	add	hl, hl
      001AB5 09                    6072 	add	hl, bc
      001AB6 29                    6073 	add	hl, hl
      001AB7 09                    6074 	add	hl, bc
      001AB8 01r50r00              6075 	ld	bc,#_projectiles
      001ABB 09                    6076 	add	hl,bc
      001ABC 33                    6077 	inc	sp
      001ABD 33                    6078 	inc	sp
      001ABE 5D                    6079 	ld	e, l
      001ABF 54                    6080 	ld	d, h
      001AC0 D5                    6081 	push	de
      001AC1 1A                    6082 	ld	a, (de)
      001AC2 4F                    6083 	ld	c, a
      001AC3 13                    6084 	inc	de
      001AC4 1A                    6085 	ld	a, (de)
      001AC5 47                    6086 	ld	b, a
      001AC6 79                    6087 	ld	a, c
      001AC7 21r51r00              6088 	ld	hl, #_xOverflow
      001ACA 96                    6089 	sub	a, (hl)
      001ACB 23                    6090 	inc	hl
      001ACC 4F                    6091 	ld	c, a
      001ACD 78                    6092 	ld	a, b
      001ACE 9E                    6093 	sbc	a, (hl)
      001ACF 47                    6094 	ld	b, a
      001AD0 E1                    6095 	pop	hl
      001AD1 E5                    6096 	push	hl
      001AD2 79                    6097 	ld	a, c
      001AD3 22                    6098 	ld	(hl+), a
      001AD4 70                    6099 	ld	(hl), b
                                   6100 ;main.c:736: projectiles[i].y -= yOverflow;
      001AD5 D1                    6101 	pop	de
      001AD6 D5                    6102 	push	de
      001AD7 21 02 00              6103 	ld	hl, #0x0002
      001ADA 19                    6104 	add	hl, de
      001ADB E5                    6105 	push	hl
      001ADC 7D                    6106 	ld	a, l
      001ADD F8 04                 6107 	ldhl	sp,	#4
      001ADF 77                    6108 	ld	(hl), a
      001AE0 E1                    6109 	pop	hl
      001AE1 7C                    6110 	ld	a, h
      001AE2 F8 03                 6111 	ldhl	sp,	#3
      001AE4 32                    6112 	ld	(hl-), a
      001AE5 2A                    6113 	ld	a, (hl+)
      001AE6 5F                    6114 	ld	e, a
      001AE7 56                    6115 	ld	d, (hl)
      001AE8 1A                    6116 	ld	a, (de)
      001AE9 4F                    6117 	ld	c, a
      001AEA 13                    6118 	inc	de
      001AEB 1A                    6119 	ld	a, (de)
      001AEC 47                    6120 	ld	b, a
      001AED 79                    6121 	ld	a, c
      001AEE 21r53r00              6122 	ld	hl, #_yOverflow
      001AF1 96                    6123 	sub	a, (hl)
      001AF2 23                    6124 	inc	hl
      001AF3 4F                    6125 	ld	c, a
      001AF4 78                    6126 	ld	a, b
      001AF5 9E                    6127 	sbc	a, (hl)
      001AF6 47                    6128 	ld	b, a
      001AF7 F8 02                 6129 	ldhl	sp,	#2
      001AF9 2A                    6130 	ld	a,	(hl+)
      001AFA 66                    6131 	ld	h, (hl)
      001AFB 6F                    6132 	ld	l, a
      001AFC 79                    6133 	ld	a, c
      001AFD 22                    6134 	ld	(hl+), a
      001AFE 70                    6135 	ld	(hl), b
                                   6136 ;main.c:738: if (projectiles[i].active) {
      001AFF D1                    6137 	pop	de
      001B00 D5                    6138 	push	de
      001B01 21 08 00              6139 	ld	hl, #0x0008
      001B04 19                    6140 	add	hl, de
      001B05 4D                    6141 	ld	c, l
      001B06 44                    6142 	ld	b, h
      001B07 0A                    6143 	ld	a, (bc)
      001B08 B7                    6144 	or	a, a
      001B09 CArE9r1B              6145 	jp	Z, 00113$
                                   6146 ;main.c:739: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      001B0C F8 02                 6147 	ldhl	sp,#2
      001B0E 2A                    6148 	ld	a, (hl+)
      001B0F 5F                    6149 	ld	e, a
      001B10 56                    6150 	ld	d, (hl)
      001B11 1A                    6151 	ld	a, (de)
      001B12 4F                    6152 	ld	c, a
      001B13 13                    6153 	inc	de
      001B14 1A                    6154 	ld	a, (de)
      001B15 47                    6155 	ld	b, a
      001B16 D1                    6156 	pop	de
      001B17 D5                    6157 	push	de
      001B18 21 05 00              6158 	ld	hl, #0x0005
      001B1B 19                    6159 	add	hl, de
      001B1C 5D                    6160 	ld	e, l
      001B1D 54                    6161 	ld	d, h
      001B1E 1A                    6162 	ld	a, (de)
      001B1F 6F                    6163 	ld	l, a
                                   6164 ;	spillPairReg hl
                                   6165 ;	spillPairReg hl
      001B20 07                    6166 	rlca
      001B21 9F                    6167 	sbc	a, a
      001B22 67                    6168 	ld	h, a
                                   6169 ;	spillPairReg hl
                                   6170 ;	spillPairReg hl
      001B23 09                    6171 	add	hl, bc
      001B24 4D                    6172 	ld	c, l
      001B25 44                    6173 	ld	b, h
      001B26 F8 04                 6174 	ldhl	sp,	#4
      001B28 79                    6175 	ld	a, c
      001B29 22                    6176 	ld	(hl+), a
      001B2A 70                    6177 	ld	(hl), b
                                   6178 ;main.c:740: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      001B2B D1                    6179 	pop	de
      001B2C D5                    6180 	push	de
      001B2D 1A                    6181 	ld	a, (de)
      001B2E 4F                    6182 	ld	c, a
      001B2F 13                    6183 	inc	de
      001B30 1A                    6184 	ld	a, (de)
      001B31 47                    6185 	ld	b, a
      001B32 D1                    6186 	pop	de
      001B33 D5                    6187 	push	de
      001B34 21 04 00              6188 	ld	hl, #0x0004
      001B37 19                    6189 	add	hl, de
      001B38 5D                    6190 	ld	e, l
      001B39 54                    6191 	ld	d, h
      001B3A 1A                    6192 	ld	a, (de)
      001B3B 6F                    6193 	ld	l, a
                                   6194 ;	spillPairReg hl
                                   6195 ;	spillPairReg hl
      001B3C 07                    6196 	rlca
      001B3D 9F                    6197 	sbc	a, a
      001B3E 67                    6198 	ld	h, a
                                   6199 ;	spillPairReg hl
                                   6200 ;	spillPairReg hl
      001B3F 09                    6201 	add	hl, bc
      001B40 4D                    6202 	ld	c, l
      001B41 44                    6203 	ld	b, h
                                   6204 ;main.c:743: projectiles[i].y = newY;
      001B42 F8 02                 6205 	ldhl	sp,#2
      001B44 2A                    6206 	ld	a, (hl+)
      001B45 5F                    6207 	ld	e, a
      001B46 2A                    6208 	ld	a, (hl+)
      001B47 57                    6209 	ld	d, a
      001B48 2A                    6210 	ld	a, (hl+)
      001B49 12                    6211 	ld	(de), a
      001B4A 13                    6212 	inc	de
      001B4B 7E                    6213 	ld	a, (hl)
      001B4C 12                    6214 	ld	(de), a
                                   6215 ;main.c:744: projectiles[i].x = newX;
      001B4D E1                    6216 	pop	hl
      001B4E E5                    6217 	push	hl
      001B4F 79                    6218 	ld	a, c
      001B50 22                    6219 	ld	(hl+), a
      001B51 70                    6220 	ld	(hl), b
                                   6221 ;main.c:748: move_sprite(20+i, newX +4 , newY +12);
      001B52 F8 04                 6222 	ldhl	sp,	#4
      001B54 7E                    6223 	ld	a, (hl)
      001B55 C6 0C                 6224 	add	a, #0x0c
      001B57 5F                    6225 	ld	e, a
      001B58 79                    6226 	ld	a, c
      001B59 C6 04                 6227 	add	a, #0x04
      001B5B 22                    6228 	ld	(hl+), a
      001B5C 23                    6229 	inc	hl
      001B5D 3A                    6230 	ld	a, (hl-)
      001B5E C6 14                 6231 	add	a, #0x14
      001B60 77                    6232 	ld	(hl), a
      001B61 56                    6233 	ld	d, (hl)
                                   6234 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001B62 26 00                 6235 	ld	h, #0x00
                                   6236 ;	spillPairReg hl
                                   6237 ;	spillPairReg hl
      001B64 6A                    6238 	ld	l, d
      001B65 29                    6239 	add	hl, hl
      001B66 29                    6240 	add	hl, hl
      001B67 D5                    6241 	push	de
      001B68 11r00r00              6242 	ld	de, #_shadow_OAM
      001B6B 19                    6243 	add	hl, de
      001B6C D1                    6244 	pop	de
                                   6245 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B6D 7B                    6246 	ld	a, e
      001B6E 22                    6247 	ld	(hl+), a
      001B6F 5D                    6248 	ld	e, l
      001B70 54                    6249 	ld	d, h
      001B71 F8 04                 6250 	ldhl	sp,	#4
      001B73 7E                    6251 	ld	a, (hl)
      001B74 12                    6252 	ld	(de), a
                                   6253 ;main.c:752: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      001B75 D1                    6254 	pop	de
      001B76 D5                    6255 	push	de
      001B77 1A                    6256 	ld	a, (de)
      001B78 6F                    6257 	ld	l, a
                                   6258 ;	spillPairReg hl
                                   6259 ;	spillPairReg hl
      001B79 13                    6260 	inc	de
      001B7A 1A                    6261 	ld	a, (de)
      001B7B 67                    6262 	ld	h, a
                                   6263 ;	spillPairReg hl
                                   6264 ;	spillPairReg hl
      001B7C CB 78                 6265 	bit	7, b
      001B7E 20 44                 6266 	jr	NZ, 00101$
      001B80 5C                    6267 	ld	e, h
      001B81 16 00                 6268 	ld	d, #0x00
      001B83 3E AA                 6269 	ld	a, #0xaa
      001B85 BD                    6270 	cp	a, l
      001B86 3E 00                 6271 	ld	a, #0x00
      001B88 9C                    6272 	sbc	a, h
      001B89 CB 7B                 6273 	bit	7, e
      001B8B 28 07                 6274 	jr	Z, 00147$
      001B8D CB 7A                 6275 	bit	7, d
      001B8F 20 08                 6276 	jr	NZ, 00148$
      001B91 BF                    6277 	cp	a, a
      001B92 18 05                 6278 	jr	00148$
      001B94                       6279 00147$:
      001B94 CB 7A                 6280 	bit	7, d
      001B96 28 01                 6281 	jr	Z, 00148$
      001B98 37                    6282 	scf
      001B99                       6283 00148$:
      001B99 38 29                 6284 	jr	C, 00101$
                                   6285 ;main.c:736: projectiles[i].y -= yOverflow;
      001B9B F8 02                 6286 	ldhl	sp,#2
      001B9D 2A                    6287 	ld	a, (hl+)
      001B9E 5F                    6288 	ld	e, a
      001B9F 56                    6289 	ld	d, (hl)
      001BA0 1A                    6290 	ld	a, (de)
      001BA1 4F                    6291 	ld	c, a
      001BA2 13                    6292 	inc	de
      001BA3 1A                    6293 	ld	a, (de)
                                   6294 ;main.c:752: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      001BA4 47                    6295 	ld	b, a
      001BA5 CB 78                 6296 	bit	7, b
      001BA7 20 1B                 6297 	jr	NZ, 00101$
      001BA9 58                    6298 	ld	e, b
      001BAA 16 00                 6299 	ld	d, #0x00
      001BAC 3E 9A                 6300 	ld	a, #0x9a
      001BAE B9                    6301 	cp	a, c
      001BAF 3E 00                 6302 	ld	a, #0x00
      001BB1 98                    6303 	sbc	a, b
      001BB2 CB 7B                 6304 	bit	7, e
      001BB4 28 07                 6305 	jr	Z, 00149$
      001BB6 CB 7A                 6306 	bit	7, d
      001BB8 20 08                 6307 	jr	NZ, 00150$
      001BBA BF                    6308 	cp	a, a
      001BBB 18 05                 6309 	jr	00150$
      001BBD                       6310 00149$:
      001BBD CB 7A                 6311 	bit	7, d
      001BBF 28 01                 6312 	jr	Z, 00150$
      001BC1 37                    6313 	scf
      001BC2                       6314 00150$:
      001BC2 30 25                 6315 	jr	NC, 00113$
      001BC4                       6316 00101$:
                                   6317 ;main.c:754: projectiles[i].active = 0;
      001BC4 F8 06                 6318 	ldhl	sp,	#6
      001BC6 4E                    6319 	ld	c, (hl)
      001BC7 06 00                 6320 	ld	b, #0x00
      001BC9 69                    6321 	ld	l, c
      001BCA 60                    6322 	ld	h, b
      001BCB 29                    6323 	add	hl, hl
      001BCC 29                    6324 	add	hl, hl
      001BCD 09                    6325 	add	hl, bc
      001BCE 29                    6326 	add	hl, hl
      001BCF 09                    6327 	add	hl, bc
      001BD0 11r50r00              6328 	ld	de, #_projectiles
      001BD3 19                    6329 	add	hl, de
      001BD4 01 08 00              6330 	ld	bc, #0x0008
      001BD7 09                    6331 	add	hl, bc
      001BD8 36 00                 6332 	ld	(hl), #0x00
                                   6333 ;main.c:755: set_sprite_tile(20+i, 0x7f);
      001BDA F8 05                 6334 	ldhl	sp,	#5
                                   6335 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001BDC 6E                    6336 	ld	l, (hl)
                                   6337 ;	spillPairReg hl
                                   6338 ;	spillPairReg hl
      001BDD 26 00                 6339 	ld	h, #0x00
                                   6340 ;	spillPairReg hl
                                   6341 ;	spillPairReg hl
      001BDF 29                    6342 	add	hl, hl
      001BE0 29                    6343 	add	hl, hl
      001BE1 11r00r00              6344 	ld	de, #_shadow_OAM
      001BE4 19                    6345 	add	hl, de
      001BE5 23                    6346 	inc	hl
      001BE6 23                    6347 	inc	hl
      001BE7 36 7F                 6348 	ld	(hl), #0x7f
                                   6349 ;main.c:755: set_sprite_tile(20+i, 0x7f);
      001BE9                       6350 00113$:
                                   6351 ;main.c:734: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001BE9 F8 06                 6352 	ldhl	sp,	#6
      001BEB 34                    6353 	inc	(hl)
      001BEC C3rA3r1A              6354 	jp	00112$
      001BEF                       6355 00114$:
                                   6356 ;main.c:760: }
      001BEF E8 07                 6357 	add	sp, #7
      001BF1 C9                    6358 	ret
                                   6359 ;main.c:763: void initProjectiles() {
                                   6360 ;	---------------------------------
                                   6361 ; Function initProjectiles
                                   6362 ; ---------------------------------
      001BF2                       6363 _initProjectiles::
                                   6364 ;main.c:764: set_sprite_data(0x20, 1, ProjectileTiles); //TODO NOSTA MÄÄRÄÄ
      001BF2 11r27r05              6365 	ld	de, #_ProjectileTiles
      001BF5 D5                    6366 	push	de
      001BF6 21 20 01              6367 	ld	hl, #0x120
      001BF9 E5                    6368 	push	hl
      001BFA CDr00r00              6369 	call	_set_sprite_data
      001BFD E8 04                 6370 	add	sp, #4
                                   6371 ;main.c:766: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      001BFF AF                    6372 	xor	a, a
      001C00                       6373 00103$:
      001C00 21rCDr06              6374 	ld	hl, #_PROJECTILECOUNT
      001C03 4E                    6375 	ld	c, (hl)
      001C04 B9                    6376 	cp	a, c
      001C05 D0                    6377 	ret	NC
      001C06 3C                    6378 	inc	a
                                   6379 ;main.c:770: }
      001C07 18 F7                 6380 	jr	00103$
                                   6381 ;main.c:772: void initGame() {
                                   6382 ;	---------------------------------
                                   6383 ; Function initGame
                                   6384 ; ---------------------------------
      001C09                       6385 _initGame::
                                   6386 ;main.c:775: xDir = 0;
      001C09 21r43r00              6387 	ld	hl, #_xDir
      001C0C 36 00                 6388 	ld	(hl), #0x00
                                   6389 ;main.c:776: yDir = -1;
      001C0E 21r44r00              6390 	ld	hl, #_yDir
      001C11 36 FF                 6391 	ld	(hl), #0xff
                                   6392 ;main.c:777: xSpeed = 0;
      001C13 21r45r00              6393 	ld	hl, #_xSpeed
      001C16 36 00                 6394 	ld	(hl), #0x00
                                   6395 ;main.c:778: ySpeed = 0;
      001C18 21r46r00              6396 	ld	hl, #_ySpeed
      001C1B 36 00                 6397 	ld	(hl), #0x00
                                   6398 ;main.c:781: playerX = 80<<5;
      001C1D 21r47r00              6399 	ld	hl, #_playerX
      001C20 36 00                 6400 	ld	(hl), #0x00
      001C22 23                    6401 	inc	hl
      001C23 36 0A                 6402 	ld	(hl), #0x0a
                                   6403 ;main.c:782: playerY = 80<<5;
      001C25 21r49r00              6404 	ld	hl, #_playerY
      001C28 36 00                 6405 	ld	(hl), #0x00
      001C2A 23                    6406 	inc	hl
      001C2B 36 0A                 6407 	ld	(hl), #0x0a
                                   6408 ;main.c:784: playerDrawX = 80;
      001C2D 21r4Br00              6409 	ld	hl, #_playerDrawX
      001C30 36 50                 6410 	ld	(hl), #0x50
                                   6411 ;main.c:785: playerDrawY = 80;
      001C32 21r4Cr00              6412 	ld	hl, #_playerDrawY
      001C35 36 50                 6413 	ld	(hl), #0x50
                                   6414 ;main.c:788: bgX = 0;
      001C37 AF                    6415 	xor	a, a
      001C38 21r4Dr00              6416 	ld	hl, #_bgX
      001C3B 22                    6417 	ld	(hl+), a
      001C3C 77                    6418 	ld	(hl), a
                                   6419 ;main.c:789: bgY = 0;
      001C3D AF                    6420 	xor	a, a
      001C3E 21r4Fr00              6421 	ld	hl, #_bgY
      001C41 22                    6422 	ld	(hl+), a
      001C42 77                    6423 	ld	(hl), a
                                   6424 ;main.c:791: hull = maxHull;
      001C43 FArCFr06              6425 	ld	a, (#_maxHull)
      001C46 EAr88r00              6426 	ld	(#_hull),a
                                   6427 ;main.c:792: shield = maxShield;
      001C49 FArD0r06              6428 	ld	a, (#_maxShield)
      001C4C EAr89r00              6429 	ld	(#_shield),a
                                   6430 ;main.c:794: DISPLAY_ON;
      001C4F F0r00                 6431 	ldh	a, (_LCDC_REG + 0)
      001C51 F6 80                 6432 	or	a, #0x80
      001C53 E0r00                 6433 	ldh	(_LCDC_REG + 0), a
                                   6434 ;main.c:795: SPRITES_8x16;
      001C55 F0r00                 6435 	ldh	a, (_LCDC_REG + 0)
      001C57 F6 04                 6436 	or	a, #0x04
      001C59 E0r00                 6437 	ldh	(_LCDC_REG + 0), a
                                   6438 ;main.c:796: set_sprite_data(0, 12, Player1);
      001C5B 11rB7r05              6439 	ld	de, #_Player1
      001C5E D5                    6440 	push	de
      001C5F 21 00 0C              6441 	ld	hl, #0xc00
      001C62 E5                    6442 	push	hl
      001C63 CDr00r00              6443 	call	_set_sprite_data
      001C66 E8 04                 6444 	add	sp, #4
                                   6445 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001C68 21r02r00              6446 	ld	hl, #(_shadow_OAM + 2)
      001C6B 36 00                 6447 	ld	(hl), #0x00
      001C6D 21r06r00              6448 	ld	hl, #(_shadow_OAM + 6)
      001C70 36 02                 6449 	ld	(hl), #0x02
                                   6450 ;main.c:802: SHOW_SPRITES;
      001C72 F0r00                 6451 	ldh	a, (_LCDC_REG + 0)
      001C74 F6 02                 6452 	or	a, #0x02
      001C76 E0r00                 6453 	ldh	(_LCDC_REG + 0), a
                                   6454 ;main.c:806: font_init();
      001C78 CDr00r00              6455 	call	_font_init
                                   6456 ;main.c:808: min_font = font_load(font_min); // 36 tiles of characters
      001C7B 11r00r00              6457 	ld	de, #_font_min
      001C7E D5                    6458 	push	de
      001C7F CDr00r00              6459 	call	_font_load
      001C82 E1                    6460 	pop	hl
      001C83 21r8Ar00              6461 	ld	hl, #_min_font
      001C86 7B                    6462 	ld	a, e
      001C87 22                    6463 	ld	(hl+), a
                                   6464 ;main.c:809: font_set(min_font);
      001C88 7A                    6465 	ld	a, d
      001C89 32                    6466 	ld	(hl-), a
      001C8A 2A                    6467 	ld	a, (hl+)
      001C8B 5F                    6468 	ld	e, a
      001C8C 56                    6469 	ld	d, (hl)
      001C8D D5                    6470 	push	de
      001C8E CDr00r00              6471 	call	_font_set
      001C91 E1                    6472 	pop	hl
                                   6473 ;main.c:810: set_win_tiles(1,0,4,1,hullabel);
      001C92 11r00r00              6474 	ld	de, #_hullabel
      001C95 D5                    6475 	push	de
      001C96 21 04 01              6476 	ld	hl, #0x104
      001C99 E5                    6477 	push	hl
      001C9A 21 01 00              6478 	ld	hl, #0x01
      001C9D E5                    6479 	push	hl
      001C9E CDr00r00              6480 	call	_set_win_tiles
      001CA1 E8 06                 6481 	add	sp, #6
                                   6482 ;main.c:811: set_win_tiles(1,1,4,1,shieldlabel);
      001CA3 11r04r00              6483 	ld	de, #_shieldlabel
      001CA6 D5                    6484 	push	de
      001CA7 21 04 01              6485 	ld	hl, #0x104
      001CAA E5                    6486 	push	hl
      001CAB 21 01 01              6487 	ld	hl, #0x101
      001CAE E5                    6488 	push	hl
      001CAF CDr00r00              6489 	call	_set_win_tiles
      001CB2 E8 06                 6490 	add	sp, #6
                                   6491 ;main.c:816: set_bkg_data(0x50,1,healthblock);
      001CB4 11r07r05              6492 	ld	de, #_healthblock
      001CB7 D5                    6493 	push	de
      001CB8 21 50 01              6494 	ld	hl, #0x150
      001CBB E5                    6495 	push	hl
      001CBC CDr00r00              6496 	call	_set_bkg_data
      001CBF E8 04                 6497 	add	sp, #4
                                   6498 ;main.c:818: setHealthBar(0, hull);
      001CC1 FAr88r00              6499 	ld	a, (#_hull)
      001CC4 67                    6500 	ld	h, a
      001CC5 2E 00                 6501 	ld	l, #0x00
      001CC7 E5                    6502 	push	hl
      001CC8 CDrD2r06              6503 	call	_setHealthBar
      001CCB E1                    6504 	pop	hl
                                   6505 ;main.c:819: setHealthBar(1, shield);
      001CCC FAr89r00              6506 	ld	a, (#_shield)
      001CCF 67                    6507 	ld	h, a
      001CD0 2E 01                 6508 	ld	l, #0x01
      001CD2 E5                    6509 	push	hl
      001CD3 CDrD2r06              6510 	call	_setHealthBar
      001CD6 E1                    6511 	pop	hl
                                   6512 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      001CD7 3E 07                 6513 	ld	a, #0x07
      001CD9 E0r00                 6514 	ldh	(_WX_REG + 0), a
      001CDB 3E 7E                 6515 	ld	a, #0x7e
      001CDD E0r00                 6516 	ldh	(_WY_REG + 0), a
                                   6517 ;main.c:826: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      001CDF 11r87r04              6518 	ld	de, #_backgroundtiles
      001CE2 D5                    6519 	push	de
      001CE3 21 25 08              6520 	ld	hl, #0x825
      001CE6 E5                    6521 	push	hl
      001CE7 CDr00r00              6522 	call	_set_bkg_data
      001CEA E8 04                 6523 	add	sp, #4
                                   6524 ;main.c:827: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      001CEC 11r87r00              6525 	ld	de, #_background1
      001CEF D5                    6526 	push	de
      001CF0 21 20 20              6527 	ld	hl, #0x2020
      001CF3 E5                    6528 	push	hl
      001CF4 AF                    6529 	xor	a, a
      001CF5 0F                    6530 	rrca
      001CF6 F5                    6531 	push	af
      001CF7 CDr00r00              6532 	call	_set_bkg_tiles
      001CFA E8 06                 6533 	add	sp, #6
                                   6534 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001CFC AF                    6535 	xor	a, a
      001CFD E0r00                 6536 	ldh	(_SCX_REG + 0), a
      001CFF AF                    6537 	xor	a, a
      001D00 E0r00                 6538 	ldh	(_SCY_REG + 0), a
                                   6539 ;main.c:830: set_bkg_data(0x51, 9, ProjectileTiles);
      001D02 11r27r05              6540 	ld	de, #_ProjectileTiles
      001D05 D5                    6541 	push	de
      001D06 21 51 09              6542 	ld	hl, #0x951
      001D09 E5                    6543 	push	hl
      001D0A CDr00r00              6544 	call	_set_bkg_data
      001D0D E8 04                 6545 	add	sp, #4
                                   6546 ;main.c:832: set_win_tiles(10, 0,4,1,weaponlabel);
      001D0F 11r08r00              6547 	ld	de, #_weaponlabel
      001D12 D5                    6548 	push	de
      001D13 21 04 01              6549 	ld	hl, #0x104
      001D16 E5                    6550 	push	hl
      001D17 21 0A 00              6551 	ld	hl, #0x0a
      001D1A E5                    6552 	push	hl
      001D1B CDr00r00              6553 	call	_set_win_tiles
      001D1E E8 06                 6554 	add	sp, #6
                                   6555 ;main.c:833: set_win_tiles(10, 1,4,1,scorelabel);
      001D20 11r0Cr00              6556 	ld	de, #_scorelabel
      001D23 D5                    6557 	push	de
      001D24 21 04 01              6558 	ld	hl, #0x104
      001D27 E5                    6559 	push	hl
      001D28 21 0A 01              6560 	ld	hl, #0x10a
      001D2B E5                    6561 	push	hl
      001D2C CDr00r00              6562 	call	_set_win_tiles
      001D2F E8 06                 6563 	add	sp, #6
                                   6564 ;main.c:835: setGunIcon();
      001D31 CDr22r19              6565 	call	_setGunIcon
                                   6566 ;main.c:836: SHOW_BKG;
      001D34 F0r00                 6567 	ldh	a, (_LCDC_REG + 0)
      001D36 F6 01                 6568 	or	a, #0x01
      001D38 E0r00                 6569 	ldh	(_LCDC_REG + 0), a
                                   6570 ;main.c:837: SHOW_WIN;;
      001D3A F0r00                 6571 	ldh	a, (_LCDC_REG + 0)
      001D3C F6 20                 6572 	or	a, #0x20
      001D3E E0r00                 6573 	ldh	(_LCDC_REG + 0), a
                                   6574 ;main.c:839: bcd = MAKE_BCD(00000);
      001D40 AF                    6575 	xor	a, a
      001D41 21r5Dr00              6576 	ld	hl, #_bcd
      001D44 22                    6577 	ld	(hl+), a
      001D45 22                    6578 	ld	(hl+), a
      001D46 22                    6579 	ld	(hl+), a
      001D47 77                    6580 	ld	(hl), a
                                   6581 ;main.c:840: updateScore();
                                   6582 ;main.c:843: }
      001D48 C3rE3r07              6583 	jp	_updateScore
                                   6584 ;main.c:845: void main(){
                                   6585 ;	---------------------------------
                                   6586 ; Function main
                                   6587 ; ---------------------------------
      001D4B                       6588 _main::
                                   6589 ;main.c:848: STAT_REG = 0x45;
      001D4B 3E 45                 6590 	ld	a, #0x45
      001D4D E0r00                 6591 	ldh	(_STAT_REG + 0), a
                                   6592 ;main.c:849: LYC_REG = 0x7e; //line 126
      001D4F 3E 7E                 6593 	ld	a, #0x7e
      001D51 E0r00                 6594 	ldh	(_LYC_REG + 0), a
                                   6595 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      001D53 F3                    6596 	di
                                   6597 ;main.c:851: add_LCD(interruptLCD);
      001D54 11r00r00              6598 	ld	de, #_interruptLCD
      001D57 D5                    6599 	push	de
      001D58 CDr00r00              6600 	call	_add_LCD
      001D5B 33                    6601 	inc	sp
      001D5C 33                    6602 	inc	sp
                                   6603 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      001D5D FB                    6604 	ei
                                   6605 ;main.c:853: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      001D5E 3E 03                 6606 	ld	a, #0x03
      001D60 F5                    6607 	push	af
      001D61 33                    6608 	inc	sp
      001D62 CDr00r00              6609 	call	_set_interrupts
      001D65 33                    6610 	inc	sp
                                   6611 ;main.c:857: NR52_REG = 0x80; // sound on 
      001D66 3E 80                 6612 	ld	a, #0x80
      001D68 E0r00                 6613 	ldh	(_NR52_REG + 0), a
                                   6614 ;main.c:858: NR50_REG = 0x77; // volume
      001D6A 3E 77                 6615 	ld	a, #0x77
      001D6C E0r00                 6616 	ldh	(_NR50_REG + 0), a
                                   6617 ;main.c:859: NR51_REG = 0xFF; // all channels
      001D6E 3E FF                 6618 	ld	a, #0xff
      001D70 E0r00                 6619 	ldh	(_NR51_REG + 0), a
                                   6620 ;main.c:863: waitpad(J_A);
      001D72 3E 10                 6621 	ld	a, #0x10
      001D74 F5                    6622 	push	af
      001D75 33                    6623 	inc	sp
      001D76 CDr00r00              6624 	call	_waitpad
      001D79 33                    6625 	inc	sp
                                   6626 ;main.c:864: uint16_t seed = LY_REG;
      001D7A F0r00                 6627 	ldh	a, (_LY_REG + 0)
      001D7C 4F                    6628 	ld	c, a
      001D7D 06 00                 6629 	ld	b, #0x00
                                   6630 ;main.c:865: seed |= (uint16_t)DIV_REG << 8;
      001D7F F0r00                 6631 	ldh	a, (_DIV_REG + 0)
      001D81 5F                    6632 	ld	e, a
      001D82 AF                    6633 	xor	a, a
      001D83 B1                    6634 	or	a, c
      001D84 4F                    6635 	ld	c, a
      001D85 7B                    6636 	ld	a, e
      001D86 B0                    6637 	or	a, b
      001D87 47                    6638 	ld	b, a
                                   6639 ;main.c:866: initrand(seed);
      001D88 C5                    6640 	push	bc
      001D89 CDr00r00              6641 	call	_initrand
      001D8C E1                    6642 	pop	hl
                                   6643 ;main.c:871: initGame();
      001D8D CDr09r1C              6644 	call	_initGame
                                   6645 ;main.c:872: initEnemies(1);
      001D90 3E 01                 6646 	ld	a, #0x01
      001D92 F5                    6647 	push	af
      001D93 33                    6648 	inc	sp
      001D94 CDr0Ar10              6649 	call	_initEnemies
      001D97 33                    6650 	inc	sp
                                   6651 ;main.c:873: initProjectiles();
      001D98 CDrF2r1B              6652 	call	_initProjectiles
                                   6653 ;main.c:875: while(1) {
      001D9B                       6654 00114$:
                                   6655 ;main.c:876: SHOW_SPRITES;
      001D9B F0r00                 6656 	ldh	a, (_LCDC_REG + 0)
      001D9D F6 02                 6657 	or	a, #0x02
      001D9F E0r00                 6658 	ldh	(_LCDC_REG + 0), a
                                   6659 ;main.c:878: joydata = joypad(); // query for button states
      001DA1 CDr00r00              6660 	call	_joypad
      001DA4 21r87r00              6661 	ld	hl, #_joydata
      001DA7 73                    6662 	ld	(hl), e
                                   6663 ;main.c:880: updateDirection(); // set player direction
      001DA8 CDr26r08              6664 	call	_updateDirection
                                   6665 ;main.c:883: move(); 
      001DAB CDrC7r10              6666 	call	_move
                                   6667 ;main.c:885: updateEnemyPositions();
      001DAE CDrB3r0A              6668 	call	_updateEnemyPositions
                                   6669 ;main.c:888: checkCollision(); 
      001DB1 CDr52r16              6670 	call	_checkCollision
                                   6671 ;main.c:689: if (shield < maxShield) {
      001DB4 21rD0r06              6672 	ld	hl, #_maxShield
      001DB7 4E                    6673 	ld	c, (hl)
      001DB8 59                    6674 	ld	e, c
      001DB9 21r89r00              6675 	ld	hl, #_shield
      001DBC 56                    6676 	ld	d, (hl)
      001DBD 7E                    6677 	ld	a, (hl)
      001DBE 91                    6678 	sub	a, c
      001DBF CB 7B                 6679 	bit	7, e
      001DC1 28 07                 6680 	jr	Z, 00171$
      001DC3 CB 7A                 6681 	bit	7, d
      001DC5 20 08                 6682 	jr	NZ, 00172$
      001DC7 BF                    6683 	cp	a, a
      001DC8 18 05                 6684 	jr	00172$
      001DCA                       6685 00171$:
      001DCA CB 7A                 6686 	bit	7, d
      001DCC 28 01                 6687 	jr	Z, 00172$
      001DCE 37                    6688 	scf
      001DCF                       6689 00172$:
      001DCF 30 04                 6690 	jr	NC, 00122$
                                   6691 ;main.c:690: shield += 1;
      001DD1 21r89r00              6692 	ld	hl, #_shield
      001DD4 34                    6693 	inc	(hl)
      001DD5                       6694 00122$:
                                   6695 ;main.c:692: setHealthBar(0, hull);
      001DD5 FAr88r00              6696 	ld	a, (#_hull)
      001DD8 67                    6697 	ld	h, a
      001DD9 2E 00                 6698 	ld	l, #0x00
      001DDB E5                    6699 	push	hl
      001DDC CDrD2r06              6700 	call	_setHealthBar
      001DDF E1                    6701 	pop	hl
                                   6702 ;main.c:693: setHealthBar(1, shield);
      001DE0 FAr89r00              6703 	ld	a, (#_shield)
      001DE3 67                    6704 	ld	h, a
      001DE4 2E 01                 6705 	ld	l, #0x01
      001DE6 E5                    6706 	push	hl
      001DE7 CDrD2r06              6707 	call	_setHealthBar
      001DEA E1                    6708 	pop	hl
                                   6709 ;main.c:893: if (joydata & J_B && fireCooldown == 0) {
      001DEB FAr87r00              6710 	ld	a, (#_joydata)
      001DEE CB 6F                 6711 	bit	5, a
      001DF0 28 09                 6712 	jr	Z, 00102$
      001DF2 FAr42r00              6713 	ld	a, (#_fireCooldown)
      001DF5 B7                    6714 	or	a, a
      001DF6 20 03                 6715 	jr	NZ, 00102$
                                   6716 ;main.c:894: fire();
      001DF8 CDr3Dr19              6717 	call	_fire
      001DFB                       6718 00102$:
                                   6719 ;main.c:896: if (fireCooldown > 0) {
      001DFB 21r42r00              6720 	ld	hl, #_fireCooldown
      001DFE 7E                    6721 	ld	a, (hl)
      001DFF B7                    6722 	or	a, a
      001E00 28 01                 6723 	jr	Z, 00105$
                                   6724 ;main.c:897: --fireCooldown;
      001E02 35                    6725 	dec	(hl)
      001E03                       6726 00105$:
                                   6727 ;main.c:900: if (joydata & J_SELECT && switchDelay == 0) {
      001E03 FAr87r00              6728 	ld	a, (#_joydata)
      001E06 CB 77                 6729 	bit	6, a
      001E08 28 1F                 6730 	jr	Z, 00109$
      001E0A FAr57r00              6731 	ld	a, (#_switchDelay)
      001E0D B7                    6732 	or	a, a
      001E0E 20 19                 6733 	jr	NZ, 00109$
                                   6734 ;main.c:901: currentGun++;
      001E10 21r56r00              6735 	ld	hl, #_currentGun
      001E13 34                    6736 	inc	(hl)
                                   6737 ;main.c:902: if (currentGun >= GUNCOUNT) {
      001E14 21rD1r06              6738 	ld	hl, #_GUNCOUNT
      001E17 4E                    6739 	ld	c, (hl)
      001E18 21r56r00              6740 	ld	hl, #_currentGun
      001E1B 7E                    6741 	ld	a, (hl)
      001E1C 91                    6742 	sub	a, c
      001E1D 38 02                 6743 	jr	C, 00107$
                                   6744 ;main.c:903: currentGun = 0;
      001E1F 36 00                 6745 	ld	(hl), #0x00
      001E21                       6746 00107$:
                                   6747 ;main.c:905: setGunIcon();
      001E21 CDr22r19              6748 	call	_setGunIcon
                                   6749 ;main.c:906: switchDelay = 30;
      001E24 21r57r00              6750 	ld	hl, #_switchDelay
      001E27 36 1E                 6751 	ld	(hl), #0x1e
      001E29                       6752 00109$:
                                   6753 ;main.c:908: if (switchDelay != 0) {
      001E29 21r57r00              6754 	ld	hl, #_switchDelay
      001E2C 7E                    6755 	ld	a, (hl)
      001E2D B7                    6756 	or	a, a
      001E2E 28 01                 6757 	jr	Z, 00112$
                                   6758 ;main.c:909: switchDelay--;
      001E30 35                    6759 	dec	(hl)
      001E31                       6760 00112$:
                                   6761 ;main.c:911: moveProjectiles();
      001E31 CDr9Dr1A              6762 	call	_moveProjectiles
                                   6763 ;main.c:923: SHOW_WIN;	
      001E34 F0r00                 6764 	ldh	a, (_LCDC_REG + 0)
      001E36 F6 20                 6765 	or	a, #0x20
      001E38 E0r00                 6766 	ldh	(_LCDC_REG + 0), a
                                   6767 ;main.c:924: wait_vbl_done(); // Idle until next frame
      001E3A CDr00r00              6768 	call	_wait_vbl_done
                                   6769 ;main.c:929: }
      001E3D C3r9Br1D              6770 	jp	00114$
                                   6771 	.area _CODE
                                   6772 	.area _INITIALIZER
      000000                       6773 __xinit__hullabel:
      000000 12                    6774 	.db #0x12	; 18
      000001 1F                    6775 	.db #0x1f	; 31
      000002 16                    6776 	.db #0x16	; 22
      000003 16                    6777 	.db #0x16	; 22
      000004                       6778 __xinit__shieldlabel:
      000004 1D                    6779 	.db #0x1d	; 29
      000005 12                    6780 	.db #0x12	; 18
      000006 16                    6781 	.db #0x16	; 22
      000007 0E                    6782 	.db #0x0e	; 14
      000008                       6783 __xinit__weaponlabel:
      000008 21                    6784 	.db #0x21	; 33
      000009 0F                    6785 	.db #0x0f	; 15
      00000A 1A                    6786 	.db #0x1a	; 26
      00000B 18                    6787 	.db #0x18	; 24
      00000C                       6788 __xinit__scorelabel:
      00000C 1D                    6789 	.db #0x1d	; 29
      00000D 0D                    6790 	.db #0x0d	; 13
      00000E 1C                    6791 	.db #0x1c	; 28
      00000F 0F                    6792 	.db #0x0f	; 15
      000010                       6793 __xinit__blob:
      000010 00 00                 6794 	.dw #0x0000
      000012 00 00                 6795 	.dw #0x0000
      000014 00                    6796 	.db #0x00	;  0
      000015 00                    6797 	.db #0x00	;  0
      000016 30                    6798 	.db #0x30	; 48	'0'
      000017 00                    6799 	.db #0x00	; 0
      000018 01                    6800 	.db #0x01	; 1
      000019 01                    6801 	.db #0x01	; 1
      00001A 01                    6802 	.db #0x01	; 1
      00001B 32                    6803 	.db #0x32	; 50	'2'
      00001C 03                    6804 	.db #0x03	;  3
      00001D 01                    6805 	.db #0x01	; 1
      00001E 00                    6806 	.db #0x00	;  0
      00001F 00                    6807 	.db #0x00	;  0
      000020                       6808 __xinit__singleGun:
      000020 00 00                 6809 	.dw #0x0000
      000022 00 00                 6810 	.dw #0x0000
      000024 00                    6811 	.db #0x00	;  0
      000025 FF                    6812 	.db #0xff	; -1
      000026 02                    6813 	.db #0x02	; 2
      000027 00                    6814 	.db #0x00	; 0
      000028 01                    6815 	.db #0x01	; 1
      000029 0F                    6816 	.db #0x0f	; 15
      00002A 20                    6817 	.db #0x20	; 32
      00002B                       6818 __xinit__doubleGun:
      00002B 00 00                 6819 	.dw #0x0000
      00002D 00 00                 6820 	.dw #0x0000
      00002F 00                    6821 	.db #0x00	;  0
      000030 FF                    6822 	.db #0xff	; -1
      000031 02                    6823 	.db #0x02	; 2
      000032 00                    6824 	.db #0x00	; 0
      000033 01                    6825 	.db #0x01	; 1
      000034 0F                    6826 	.db #0x0f	; 15
      000035 23                    6827 	.db #0x23	; 35
      000036                       6828 __xinit__missile:
      000036 00 00                 6829 	.dw #0x0000
      000038 00 00                 6830 	.dw #0x0000
      00003A 00                    6831 	.db #0x00	;  0
      00003B FF                    6832 	.db #0xff	; -1
      00003C 01                    6833 	.db #0x01	; 1
      00003D 00                    6834 	.db #0x00	; 0
      00003E 01                    6835 	.db #0x01	; 1
      00003F 1E                    6836 	.db #0x1e	; 30
      000040 26                    6837 	.db #0x26	; 38
      000041                       6838 __xinit__oldestProjectile:
      000041 00                    6839 	.db #0x00	; 0
      000042                       6840 __xinit__fireCooldown:
      000042 00                    6841 	.db #0x00	; 0
      000043                       6842 __xinit__xDir:
      000043 00                    6843 	.db #0x00	;  0
      000044                       6844 __xinit__yDir:
      000044 FF                    6845 	.db #0xff	; -1
      000045                       6846 __xinit__xSpeed:
      000045 00                    6847 	.db #0x00	;  0
      000046                       6848 __xinit__ySpeed:
      000046 00                    6849 	.db #0x00	;  0
      000047                       6850 __xinit__playerX:
      000047 00 0A                 6851 	.dw #0x0a00
      000049                       6852 __xinit__playerY:
      000049 00 0A                 6853 	.dw #0x0a00
      00004B                       6854 __xinit__playerDrawX:
      00004B 50                    6855 	.db #0x50	; 80	'P'
      00004C                       6856 __xinit__playerDrawY:
      00004C 50                    6857 	.db #0x50	; 80	'P'
      00004D                       6858 __xinit__bgX:
      00004D 00 00                 6859 	.dw #0x0000
      00004F                       6860 __xinit__bgY:
      00004F 00 00                 6861 	.dw #0x0000
      000051                       6862 __xinit__xOverflow:
      000051 00 00                 6863 	.dw #0x0000
      000053                       6864 __xinit__yOverflow:
      000053 00 00                 6865 	.dw #0x0000
      000055                       6866 __xinit__enemyCollisionCount:
      000055 00                    6867 	.db #0x00	; 0
      000056                       6868 __xinit__currentGun:
      000056 00                    6869 	.db #0x00	; 0
      000057                       6870 __xinit__switchDelay:
      000057 00                    6871 	.db #0x00	; 0
      000058                       6872 __xinit__gunMap:
      000058 51                    6873 	.db #0x51	; 81	'Q'
      000059 56                    6874 	.db #0x56	; 86	'V'
      00005A 58                    6875 	.db #0x58	; 88	'X'
      00005B                       6876 __xinit__score:
      00005B 00 00                 6877 	.dw #0x0000
      00005D                       6878 __xinit__bcd:
      00005D 00 00 00 00           6879 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      000061                       6880 __xinit__INCREMENT:
      000061 01 00 00 00           6881 	.byte #0x01, #0x00, #0x00, #0x00	; 1
                                   6882 	.area _CABS (ABS)
